returns a list of all member options in the database
returns the members of the given type
returns the configuration for the given code file code
initializes the cell
returns the value of the cell editor
returns true if the source cell has a source
returns the configuration for the given code file code
creates a new code page code
returns the preview
draw the scene
draws the current targets
this method is called when the scene is loaded
returns the display mode of the given
process the game
creates the website
dump the context to the specified location
load a
reads the from the given file
load a texture
draws the scene
plays the given sound
displays a banner
load config from config file
saves the config file
invoked when a key is released
display the display of the specified display
encodes the object
decode the data
encodes the object and returns the object
decodes a object from the given type
creates a new instance of dice
creates a new instance of dice
returns the next value in the random value
returns the current value
returns the current value
sets the current value of the current item
increases the current value of the current value
returns the maximum value of the
sets the max value
sets the description
receive notification of character data
sets the maximum value for the
receive notification of character data
returns a list of the nodes that match the xpath expression
test of get registration in period method of class
login to the login page
sets the name of the class to be used for this class
returns the element of this array
returns the elements in this array
deletes a record from database
reads the from the database
creates an object in the database
update the database by the user
creates a new instance of the database table
reads the feed count for a given
deletes a record from database
creates an object in the database
update the database
reads the next tip for the given user
reads the number of recipe
this adds a property descriptor for the auto increment sample data feature
this adds a property descriptor for the editable feature
this adds a property descriptor for the desc field size feature
this adds a property descriptor for the name feature
this adds a property descriptor for the pk field name feature
this adds a property descriptor for the desc field type feature
this adds a property descriptor for the desc field name feature
this adds a property descriptor for the name db feature
this adds a property descriptor for the entity feature
this adds a property descriptor for the depends feature
this adds a property descriptor for the entity feature
this adds a property descriptor for the use as filter feature
this adds a property descriptor for the pk field name feature
this adds a property descriptor for the sample data value feature
this adds a property descriptor for the subtitle feature
this adds a property descriptor for the visible form feature
this adds a property descriptor for the visible list feature
this adds a property descriptor for the default value feature
this adds a property descriptor for the documentation feature
this adds a property descriptor for the expanded feature
this adds a property descriptor for the group name feature
this adds a property descriptor for the pk
this adds a property descriptor for the to string feature
this adds a property descriptor for the not null feature
this adds a property descriptor for the size feature
this adds a property descriptor for the type feature
this adds a property descriptor for the is password feature
this adds a property descriptor for the documentation feature
this adds a property descriptor for the is identity feature
this adds a property descriptor for the group id feature
this adds a property descriptor for the menu hierarchy feature
this adds a property descriptor for the row item feature
this adds a property descriptor for the id feature
this adds a property descriptor for the base package feature
this adds a property descriptor for the label feature
this adds a property descriptor for the database feature
this adds a property descriptor for the documentation feature
this adds a property descriptor for the table name feature
this adds a property descriptor for the entity feature
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
validates the pattern constraint of em em
creates a new adapter for an object of class
creates a new adapter for an object of class
validates the pattern constraint of em em
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this just records the information
create a new model
returns the label for the specified feature name
handles activation of the editor or its associated views
returns a diagnostic describing the errors and warnings listed in the resource
this accesses a cached version of the property sheet
initializes the annotations for b b
make the current selection
returns a hex representation of the given byte array

this method initializes this
this method initializes scr produto
this method initializes tbl produto
this method initializes btn novo
this method initializes this
this method initializes btn salvar
this method initializes btn filtro
this method initializes scr cliente
this method initializes tbl cliente
this method initializes btn consulta
this method initializes this
this method initializes btn
this method initializes btn cancelar
this method initializes senha
this method initializes this
this method initializes txt usuario
this method initializes scr empresa
this method initializes this
this method initializes tbl empresa
this method initializes this
this method initializes
this method initializes tbl cliente
this method initializes this
creates a button
sets the value of the text field
this method is called when the user selects the
find a dot method with a given name
writes the error message to the given element
logs the missing attribute
returns the path to the
logs the missing element
sets the error output stream
forwards the input stream to the input stream
sets the output to the output stream
reads the registry from the given registry
kills the current thread
returns the value of a preference for the given preference
sets the preference value for the given preference node
this method initializes
this method initializes
this method initializes men arquivo
this method initializes mni
this method initializes pnl
this method initializes menu item produto
adds a handle to the image
adds a line to the current line
this method is used to process a simple message
returns the server server
sets the server server
adds a recipient to the list
sets the sender of this message
sets the message body
sets the message complete
pop a message from the stack
returns the sender of the message
wait for a message to be added to the queue
returns the set of recipients
returns the message body
sets the headers
listens for the of the given code code
prints the given output to the console
creates a new instance of the given jess jess
returns the html select list html select select object from the result
returns a list of parameter argument names
get a list of parameter values for a parameter
get the sql query string for the given query name
returns the html select list for the given html select
returns the color of the specified image
returns the content of the container
returns the for the given
returns the value of the specified percentage as a color
adjust the background color for the given image
this method is overidden to be used to specify the
returns the color
returns the hue of the
returns the of the
returns the color of the current
returns the saturation value
returns the type of the question
adds a result item to the list
initialize the option results in the choice list
adds a frequency to the frequency
initialize the option
returns a short description of the servlet
called when the context is initialized
called when the servlet context is destroyed
called when the context is initialized
called when the servlet context is destroyed
sets the value of message table class
returns the home page
adds the given steps to the list of steps
registers a view with the given name and view
sets the content content
returns true if the view is available
returns true if the view is active
returns the view associated with this view
returns the current view name
returns the current view
returns the view name of the view
returns the view name for a view
validates the email and email address
validates the subject
adds a hit to the
removes a hit from the given hit
removes a hit from the given set of hits
returns the hit for a given
checks if a given is found in the
this method is called to filter the mapping of the mapping
gets the value of the property
filters all the mappings in the given filter
a filter for a candidate score
removes the best from the given concept and returns the
sets the delete attribute of the object
returns true if the entity is deleted
adds a to the
returns the name of the
writes the concepts of this to the given collection of
returns the version of the version
returns the accession number of this entity
returns the ambiguous
returns the
returns true if the graph should be able to support
prints the path to the given path
sets the tag for this tag
returns the tag of the tag
returns the name of the
returns the version of the version
returns the name of the
adds a new accession to the queue
returns the for a given string
returns the version of the version
returns the number of in the given string
returns the higher higher of the current token in the given index
returns true if the given protein id is already in the protein
adds a protein to the registry
returns the protein for the given id
adds a gene to the registry
returns the gene of the gene id
checks if the chromosome is already in the registry
adds a chromosome to the registry
returns the chromosome of the given chromosome
this method is called to indicate the start of the file
returns the graph
adds a citation to the list of the
copy the context of the given to the given set of
returns the next node in the tree
adds a new protein to this instance
clears the cache
adds a link to the
add a category to the list of
sets the
fix the verilog text element
populate the mapping from the given file
adds a description to the given description
add organism to the given entity
add organism to the
finds the data source for the given cv
returns the data source for the given entity
copy the context of the given to the given set of
returns the
writes the given output stream to the output stream
returns the class mapped to the given key
returns the next path to the current path
resets the cursor to the cursor
search for the
adds the given to the tree
adds a new publication to the list of publications
adds a db link to the database
returns the value of the specified key
print the number of mappings
adds a new accession to the table
returns true if the given accession number is a valid
this method will be set up the filter for the
compares this to another
compares two
returns the name of the
returns the version of the version
returns the name of the
returns the version of the version
returns the of a given concept
adds a collection of to the
adds an annotation to the given string
returns the of a given concept
adds a hash set to the list of names of the
sets the id of the
checks if the given key is in the
adds a new entity to the collection
sets the key
returns the concept class
sets the concept class
copy the context of the given to the given set of
this method is invoked to be used in order to parse
this method is called to handle the number of rows
this method is used to transform the object into a string
creates a string literal
this method is used to calculate the compose number of the given
returns the local name of the given component
quote a string
copy a file to a destination

returns the source of the given
returns the target of the given type
returns an object for the given index
parses the given file
writes the notes
returns the id of the registry
returns true if the registry id is
sets the id of the registry
returns true if the gene contains the given gene
checks if the chromosome is already in the registry
adds a chromosome to the registry
returns the chromosome of the given chromosome
logs the given string into the output
corrects the correct value of the
returns the concept class concept class name of the concept class
returns a collection of
checks if the argument is valid for this plugin
check if the given string is valid
add the given to the tree
logs a message with the given info
pretty print the
returns the next str str in the string
returns the name of the
returns the version of the version
returns the name of the
returns the version of the version
returns true if the graph is a graph
returns the id of the database object
returns the go id
returns the aspect
returns the type of the database object
gets the assigned by
returns the text for the given input text
adds a alt id to the alt
adds a reference to the reference
adds a new synonym to the set of synonyms
returns the name of the
sets the definition refs
returns the version of the version
calculates the log likelihood of the current
clones a subtree rooted at the given node
sets the parent of this cluster
returns the parent of this cluster
returns the child at the specified index
make the key node
returns the variance of the current
sets the child at the specified index
registers a new
this method is called when a leaves leaves
this method is called by the
returns the number of clusters
returns true if this node is a leaf
returns the value of the code column code
returns the key
search for the threshold for the given
returns the node that is the parent of the given node
replaces the old node with the new one
returns a clone of this node
sets the leaves of the board
creates a new output node
computes the differential differential equations of the given node
returns the name of the
returns the version of the version
returns the name of the
returns the version of the version
returns the name of the
returns the index of the random number of the random number
returns the version of the version
returns the name of the
returns the right leftmost leftmost leftmost random left right
returns the encoding of the encoding
adds a molecule to the molecule
sets the encoding
sets the sequence
adds a molecule to the molecule
sets the species
adds a molecule to the molecule
adds a sub to the
sets the authors
adds an empty molecule
sets the source
adds a link to the database
adds an alternative ingredient
get the type of the relation
adds synonyms to the synonyms list
adds a new publication to the list of publications
parse the given line
parse the given value
parses the type
adds an alternative ingredient
sets the matrix
adds a link to the database
adds synonyms to the synonyms list
returns the of the given line
adds a new publication to the publication
parse the binding site
parse the string value from the given string
sets the location of the
sets the
returns the id of the
sets the sequence
add a new to the current data file
adds a gene to the
adds a matrix to the model
returns the name of the
returns the version of the version
returns the name of the
returns the version of the version
sets the element id
returns the element
sets the target id value for this
sets the entry id1 value for this entry type
sets the element id1
sets the entry id2 value for this entry
set the endpoint address for the specified port name
sets the query nodes
sets the components components
sets the target nodes
returns the element id of the element
sets the element id
sets the subtypes value for this competency
sets the entry id value for this entry
sets the gene valor value for this
sets the genes id2 value for this gene type
returns the score score
sets the score score
sets the id value for this
returns the value of the bit score
sets the genes id value for this gene id type
adds a element to the list of
sets the bit score of the score
adds a new names to the
sets the
sets the identity of this object
sets the overlap
returns the start
sets the start
returns the end
sets the end
returns the start position of the start of the document
sets the start position of the document
returns the end position of the document
sets up the parameters for the ga
sets the end position of the document
returns the element of the element
sets the element of the element
returns the x coordinate of the first point in the
sets the x coordinate
gets the value of the best flag property
returns the y coordinate of the first point in the image
sets the y coordinate of the center of the image
sets the value of best flag
sets the id of the
returns the value of the type of foreign key
search for the given name in the given name
sets the type of the foreign key
gets the value of the best flag property
builds a for the given
sets the value of best flag
sets the value for this
sets the value for this
returns the
sets the
returns the length of the
sets the length of the
returns the key
returns the concept foreign key
returns the accession number of the concept accession
returns the value of the sequence type foreign key
sets the value of the concept foreign property
sets the value of sequence type
sets the ambiguous
sets the element of the element
adds a new concept to the context
returns true if the given id is already in the database
returns the from concept
returns the pk
returns the value of the relation type
checks if the given string is a valid
gets the value of the to concept property
gets the value of the mol property
returns true if the context is a self context
search for the given name in the given name
sets the mol mol
sets the set of structures
returns the concept
checks if the given string is not empty
the concept to the given
registers the given parser to be used to specify the parser
returns the name of the
returns the version of the version
cleans up the
returns the name of the
returns the name of the
sets the cancelled flag
returns the name of the
sets the ignore attribute
returns the name of the
checks if the given string is available
returns true if the given concept name is a concept name
returns the name of the
checks if the concept name is
returns the version of the version
returns the next path to the current path
search for the
creates the relations hash map
starts the thread
enqueue an array of elements
returns the of the given concept
logs a message
returns the size of the data
resets the state of the state
checks the given object to be tested
check the state of the check
returns the last id of the
returns the concept for the given concept index
returns the relation for the given index
returns the number of edges in the graph
returns the number of nodes in the graph
returns the name of the
returns the concept prototype for the given string
returns the name of the
returns the name of the
returns the version of the version
compares this score with the specified match score
returns the longest longest coverage sequence
returns the smallest coverage sequence
returns the maximum number of in the sequence
returns the minimum coverage sequence
make the index
records the current state of the given record
initializes the error queue
adds a second edge to the list of nodes
returns the b element b
adds all of the nodes to the graph
checks if the specified id is contained in the list
this method is called to initialize the graph
returns true if the given edge is contained in this set
updates the given set of edges in the graph
the error
performs the calculation of the graph
gets the value of the i back property
returns true if the parser is
returns the file where the file is used to lookup
processes the parser
returns the file loader
writes the to the file
returns the name of the
returns the version of the version
returns the name of the
returns the version of the version
returns the name of the
parse the properties from the given file
returns the version of the version
returns the name of the
returns the version of the version
returns the name of the
returns the name of the
returns the version of the version
returns the version of the version
returns the name of the
prints the value map
sets the print stream to which this output is used
flush the output stream
convert the color to a string
creates and returns a new instance
returns the name of the given attribute
returns the name of the
returns the name of the
returns the version of the version
returns the version of the version
returns the name of the
returns the version of the version
calculate the concept dir for the given concept
returns the name of the
returns the name of the
returns the version of the version
creates and registers a new instance of concept
creates a new
returns the name of the
returns the name of the
returns the version of the version
returns the name of the
returns the version of the version
returns the version of the version
returns the element at the specified position in this list
sets the value of the given bit at the specified index
generate the key for the given key
returns the next instance of the current instance
set the matrix at the specified index
returns the of the given xref
returns the name of the
returns the name of the
returns the weight of the given weight
returns the version of the version
returns the version of the version
check if the given reference is a reference
applies the to the current graph
starts the
returns the html link for the given condition
returns the opposite concept for the given
returns the weight of the given weight
this method is called when the trace node is
this method is called when a type is about to be
add a new to the database
sets the species map
returns the id of the
returns the of the gene concept accession
returns the gene concept id for the given gene id
returns the id of the
returns the code element code associated with the given id
opens a jfile chooser to choose the file chooser to choose the
sets the value of the input string property
sets the home directory
sets the input string to be used for the input
adds a change listener to the list
start the process
this method is called by the servlet to indicate the
sets the home path of the file
returns the run info
returns true if the home is
sets the uri of the
returns true if the data viewer is currently
returns the output of the current line
starts the process
sets the input file
returns the string representation of the given array
returns true if the value has been selected
returns true if the input is inputs
clean up the model
adds a listener for the
notifies the listeners that the event has been fired
compares two attribute attributes
compares two
compares two attribute attributes
compares two concept names
fires an event to all registered listeners
returns the class of the given class
assert that a relation type is a relation
returns the data source for the given id
verifies that evidence type is evidence type
returns an attribute name for the given attribute name
returns a unit with the given id
fires an event to all registered listeners
scans the given classes
load a
loads a filter from the given name
load a mapping from a given name
load a parser from the given name
load a transformer
load a validator from the given name
adds a new plugin to the list of available
checks if the given name is an argument
checks if the argument with the specified name is contained in the
returns the number of values in the specified argument
returns a value with the given name
returns the directory where the should be used to create a
returns the arguments
removes a listener from the list of listeners
fires an event to all listeners
fires an event to all registered listeners
download a file from the file
returns true if the field is required
returns true if the multiple instances are allowed to be included in
cleans up the test
checks if the argument is valid for this object
deletes a file
returns the lower range of the lower boundary
returns the upper range of the upper range of the range
parses a string
downloads the contents of the file
parses a string
checks if the argument is valid for this instance
checks if the argument is valid for this plugin
parses a string
parses a string
sets the directory
returns true if the is existing
sets the pre existing value for this
parses a string
notifies the listeners of the event
returns the parent of this node
deletes the specified object from the database
returns the parent of this node
returns the parent of this node
returns the score on the entity
initializes the model
returns the of the
returns the of the
returns the of the given bit
throws an exception if the given runtime exception is thrown
returns the caught caught caught caught caught
adds a concept to the list of concepts
adds a relation to the relation
removes a concept from the list of concepts
inserts a new database entry into the database
clones all the properties and all the children of this
removes a relation from the model
removes a subgroup from the model
clone the abox with the cid
insert into database
cleanup the
recursively calculates the subgroup
closes the current index and returns the index
adds a set of concepts to this view
adds a set of relations to the view
adds a new relation type to the list of the
adds a relation type to the end of the list
adds a relation type to the list of outgoing relation
adds a tag to the
shuts down the executor
returns the
searches for the concept with the given concept
search seeds the specified query
adds a concept class constraint
adds a concept data source constraint
adds a constraint type constraint to the given type
adds a state to the end of the transition
checks if the machine state machine is valid
returns the absolute rank of the given method
removes a concept from the list of cid
returns true if the order of the order is inverted
returns true if the key is computed
returns the next term
parse the id from the given string
adds a new parent to the given position
initializes the
returns the number of entries in the list
returns the entry at the specified id
returns the shortest entry for a given id
returns the depth of the shortest map
calculates the distance between two terms
returns the distance between the two terms
sets the domain
sets the parent of the given code
returns the namespace of the term
calculates the trace of the given term
removes a relation from the list of mappings
returns true if the queue is open
returns the parent node of this node
this method is called by the when a node is closed
removes the node from the queue
returns the information content of the given
returns the evaluation of the given
returns the evaluation of the given set of evaluation
removes all the relations from the given array of nodes
compares two
fires an event to all registered listeners
adds a listener for the event listener
removes a listener from the list of listeners
returns the precision of the
returns true if the given class is registered as a class
returns the message that is currently complete
returns the log4j level
returns the recall of the given x y
sets the level of the log4j logger
sets the
returns the score of the given point in the current score
fires an event to the event handler
gets the value of the is preferred property
sets the preferred value for this property
gets the value of the of property
sets the of the abductor
sets the id of the abductor
gets the value of the id property
returns true if the is
sets the is
returns true if the is
sets the is
returns true if the is
sets the is
returns the element of the element
sets the element of the element
gets the value of the is ambiguous property
sets the is ambiguous
returns the from concept id
returns the name of the concept that this object is associated with
sets the from concept id value for this concept
sets the name of the concept to the concept name
returns the id of the concept id
returns the name of the concept to concept
sets the id of the concept id
sets the name of the concept to concept
notify listeners that the event was fired
delete the
decode the
returns the index of the given directory
returns the of the given concept
returns the of the given concept
this method is called when a is encountered in the given
returns true if the parent has parent
sets the scaling factor for the image
returns true if the display display is shown
returns true if the options is shown
initializes the tools menu
displays the contents of the given display
shows the options dialog
returns the viewer
sets the layouter panel
sets the viewer
this method is invoked when the user selects the
returns the length of the cache
invoked when the target of the listener has changed its state
show the file dialog
calculates the delta of the given edge
calculates the energy of the triangle
this method is called when the user selects the
returns the of the input
invoked when an action occurs
returns the creation time
sets the icon map
returns the minimum size of the node
returns the maximum size of the node
adds a column to the table
adds a row to the data array
sets the column to be pressed
highlight the header
returns the value for the cell at code column index code and
sets the
sets the probe
get the ratio between the given and the given value
this method is called by the framework to set the layout data
this method is called whenever the selection changes in the table
sets the editable attribute of the object
insert the new row to the table
add new row to table
called whenever the value of the selection changes
invoked when an action occurs
this method is called whenever the jlist selection changes
invoked when an action occurs
returns the current color of the given node
returns the color of the given edge
calculates the x dimension of the given roots
calculates the x dimension of the given element
this method is used to get the of the given node
returns the depth of the given node
this method is called when the user selects the selected nodes
sets the position of the current vertex
returns the x coordinate of the upper left corner of the
populates the combo box with the given combo box
adds names to the list of all the classes
sets the location of the current location
sets the locations of the
gets the errors
this method is called by the
invoked by the selection by changing the selection in the
invoked when an action occurs
called whenever the value of the selection changes
returns the maximal value of the
returns the minimal value of the minimal value
invoked when an action occurs
called whenever the value of the selection changes
returns the number of relations in the tree
returns the concept class
returns the number of visible relations
returns the number of concepts in the list
returns the number of visible concepts
returns the relation type
returns the stroke for the given edge
transforms the given node
returns the metadata
update all the classes in the model
updates the color of the given node
updates the color of the given node
returns the color for the given edge
updates all the of the
updates the color of the given edge
updates the color of the given color
sets the size of the node
transforms the given node in the scene graph
update all the classes in the model
updates the vertices of the concept
update the shape of the given shape
make a maximum length of text in the text
returns the label for the specified type
updates the label of the given edge
updates all the of the relation
returns the of the given edge
populates the list of attributes names
populates the list of names
the current layout
updates the chart
adds a vertex to the graph
called when the jlist selection changes
returns true if the given edge is contained in the graph
returns true if the vertex contains a vertex
returns the edge between two vertices
notify listeners that the event has been changed
returns the object for the specified edge
returns the type of the edge
returns the source of the edge
returns true if the vertex is a destination edge
checks if the given edge is a source edge
removes the given edge from the list of endpoints
removes a vertex from the graph
returns the label for the specified concept
update the label of the given concept
updates all the classes in the class
transforms the given node
sets the graph to be used as the graph
returns the center of the graph
adds names to the list of all the attributes
creates a new properties object
shows the legend window
this method is used to translate the attribute
compute the table color
returns the of the given
scans the configuration file
scan the configuration for the specified url
select the current node
loads the configuration from the given config file
load config from the file
returns the class name of the type of the given type
returns the class name of the type of the given type
the file with the
deletes the file
returns the item
finds the minimum value of the given collection
clears all the filters
calculates the average deviations of the given collection
adds a concept to the list
returns the standard deviation of the
removes a concept from the
checks if the given type is a relation type
creates the panel that is used to create the panel
creates a button
removes a relation from the
configures the extractor
adds a new to the list of attributes
removes a attribute
sets the variable binding
returns the value of the specified parameter
initializes the icon
adds a filter to the model
returns the name of the variable
creates a chart
sets the average of the average
removes the specified row from the table
sets the
sets the number of concepts in the text
sets the number of relations
adds a new filter to the table
returns the full name of the user
add the table to the table
returns the description of the text
returns the unit selected
returns the selected item
sets the concept accession
flushes the current page
clones a relation
copy the given to the current state
copy the context of the given context
creates a new
creates a clone of the given
creates a new object with the same name and new
creates a clone of this object
updates the relation in the graph
copy the given into the current state
update the concept in the graph
copy the context of the given context
returns the color of the required color
copies the of the given to the current
inits the icon
copy the name of the given to the database
show the centered area
sets the help broker
creates and returns a panel for the given panel
creates an attribute in the
show or hide the node labels
returns the custom icon used to represent the icon
returns true if the graph label is visible
show hide the edge label
returns true if the graph labels should be shown
returns the size of the node
sets the size of the node
returns the size of the edge
sets the size of the edge
returns the font size
sets the font size
updates the menu bar
forces a component to be
creates a menu with the given key
creates and returns a menu with the given key
creates a menu item
creates a menu item for the given key and menu item
returns the panel that is used to edit the
populate the menu
hides the selection
initializes the icon icon
sets the font used for the edge
sets the mouse mode
sets the on resize flag
shows all relations in the diagram
scales the image to the given image
returns the search box
returns the mouse mode
returns the concept classes
returns the data sources
returns the search mode
returns the search text field
returns the tags
returns true if the user is a regular expression
adds a listener for picking listeners
returns the annotation
checks if the regular expression matches the regular expression
removes all popups from the list

fires picking event to all listeners
create a url from the given url
sets the selection
removes an action listener from the list of listeners
sets the selection
initializes the connection
submits the selected issue
initializes the of the
sets the selection
initialize the nodes
initializes the tags
returns the viewer
creates a relation type
initialize evidence evidence evidence evidence evidence type
gets the menu bar
sets the selection
initializes the desktop
initializes the tab component
adds the content to the gui
updates the units of the given units
initializes the of the
creates an image icon
creates a new
creates and returns a new
initializes the tag
sets up the menu
creates a menu item
initializes the data source
returns the name of the metadata
extract the name of the given
writes the list of the list of the elements in the list
compile the split string from the given string
setup the window
sets the viewer
updates the panel with the new values
creates a check box
this method is called by the
resolves the index of the current element
registers the internal frame with the given internal frame
updates the listeners
returns the index of the border of the given area
find the active frame
sets the process running process
start the feeder
returns the process running
compute the maximum of the
returns true if the given file is accepted by this filter
returns the description of the filter
adds a concept to the list of concepts
clears the list of concepts
this method is called when the user wants to process a task
returns the concept at the specified index
adds evidence type evidence to the evidence type
add data source to the list of datasources
clears the list of
adds a relation type to the list of the
clear the list of datasources
returns the data source at the specified index
returns the evidence type at the specified index
clears the list of
returns the relation type at the specified index
adds the given object to the list of objects
clears the list of objects
returns true if the relation type is empty
adds a concept class to the list of classes
adds an attribute name to the list
clears the list of all the objects in the model
returns the concept class at the given index
clears the list of the current list
returns the attribute name at the specified index
updates the menu bar mode
returns true if this class is empty
returns true if this attribute is empty
scales the image to the given scale
sets the clipboard system
sets the transformer for the vertex labels
sets the transformer for the edge
sets the fill transformer for the vertex
returns the draw selection
sets the paint for the draw selection
returns the current transform for the given node
sets the transformer for the edge
returns the fill paint selection
updates the tree
sets the selection paint
updates the color of the given node
returns the current transform for the given node
updates the color of the given node and its color
updates the alpha value of the given node
updates all the colors for the current selection
writes the given xml object to the xml
checks if drag and flavor is supported
writes the xml object to the given xml
writes the data into an xml string
writes the namespaces
packs all columns in the table
returns the stroke for the given edge
update all the
returns the color used to draw the edge selection
sets the color of the selected edge
returns the painter for the given edge
updates all the colors for the current graph
returns the selected shape
updates the color of the given edge
sets the
updates the color of the specified color
sets the show arrow property
returns true if the arrow is drawn
sets the selection shape
returns true if the given vertex is visible
returns the shape of the given node
returns the of the given edge
transforms a node in the tree
updates the labels of the current object
returns true if the given edge is visible
updates the label of the given edge
returns the label for the given edge
updates all the shapes in the tree
sets all visibility of the
updates all the of the shape
updates the shape of the given shape
sets the shape of the shape
returns the edge shape
sets the visibility of the given edge
updates the shape and all its children
invoked when an action occurs
sets the visibility of the given edge
populates the list of
returns true if the last state has last state
returns true if the is
updates the last state of the current state
sets the
restore last state
transforms the given node into the given transform
updates the label of the given label
sets the visibility of the graph
process the command
sets the current interpreter
adds a custom function to the list of functions
resets the map to the first one
add a list of to the list of methods
returns the root of the tree
adds an object to the list of
add a list of to the list of include
returns true if the given class is resolved
adds the given roots to the root
adds a root object to the list of root objects
adds a function to the list of functions
adds a new object to the root class
adds the given method to the list of all the classes
adds a function to the given name
clear the
adds a class to the list of
process request for the request
this method is called when the user wants to load a
returns the concept with the given concept
the graph file
show file chooser dialog
initializes the window set
this method is called by the framework to setup the content pane
initializes the look and feel
populates the action
enables disables the action
search for a
sets the enabled state of the menu
returns a object representing the given ids
sets up the content pane
adds an action to the menu
this method will be called by the menu bar
displays the current screen
returns the current meta data window
removes the specified menu from the desktop
creates a new meta data window
returns a graph for the given path
this method is called by the thread pool
fires the action event
invoked when a key has been typed
returns the default name for the concept
returns the next color
this method initializes file chooser
creates the panel
adds an action to the menu
adds a new menuitem
creates the button panel
creates a node with the given type
returns the root node of the tree
creates a tree
adds the gui components to the gui
sets the selected option
creates a button
checks if the file exists
centers the view on the screen
save the current user
creates and returns a panel with the main panel
creates the main panel
save the current file to the file
creates and returns a panel with the buttons
creates and returns the panel that will be used to split the
creates and returns a new profile panel
called when the user selects the
creates and returns a new
sets the tree
returns true if the approve button was pressed
dispose the window
returns the tree listener
make the namespace field
shows a dialog with the given message
makes the gui component and returns the
creates a button with the specified title and title
parse the path
validate the
compares this edge to another edge
refreshes the contents of the list
returns the type of the node
returns the path to the file
creates the panel for the button panel
creates a panel with the given title
restore the session state from the given session
returns the listener to be notified of radio buttons
save the given file to the current session
returns the value of the graph property
sets the value of the graph property
closes the data set
returns the graph file file
sets the graph file for the graph
creates a button with the specified action
shuts down the
halts the execution of the job
sets the focus to the model
this method is called by the framework to run the
prepares the process to be used
returns true if the item is
called when the thread is finished
saves the model to a file
returns the title of the window
initializes the collection
mark the given code code as a code code
returns the id of the file
checks if the path is valid
returns the descriptor of the descriptor
this method is used to generate the network name
extracts the from the given input stream
cleanup the application
extracts the name of the given
shows a dialog box
generate a id for a given concept
returns the metadata data
performs operation operation operation
undo the last action
this method is called when the user selects a new user
redoes the last undone operation
closes the dialog
dispose of stuff
corrects the file name
saves the selected file
saves the current state of the file
sets the modified flag
execute the script file
returns a short description of the servlet
this method is called when the plug in is stopped
creates a new instance of the given token
returns a cached object for the given class
returns the extended token factory
returns the java node factory
returns the node factory
returns the recognizer
sets the recognizer
this method is called by the controller to disable the execution of
returns the version of the ide
shuts down the navigation manager
returns a new controller object
this method is invoked by the application to update the context
returns the version of the image
initialize the properties
returns the value of the current text
initializes the action
returns the current value of the given option
sets the value of the given property
jbuilder method init the gui
invoked when an action occurs
returns the current value of the given option
returns true if the project properties should be used to override the
sets the value of the given property
sets the model to be used for the model
jbuilder initialisation routines used to initialize the gui
returns the value of the cell editor
returns the model editor model
adds a row to the table
sets the value string value
removes the specified row from the table
returns the editor for the specified row
returns the editor for the cell at the specified position
returns true if the file is a file prop
initialize the gui
returns the value of the cell editor
sets the file name
check the specified file
initializes the global properties
returns the
reads the value of the property
returns the default value
returns the global property
returns a message with the given filename
writes the values of the given value to the output stream
checks if the browser window is open
returns the value of a property
prints a throwable
sets the value of the property
called when the audit is started
called when the audit is finished
this method is invoked when the user is activated
called when the user starts a file
resets the default option
called when the user finishes a file
adds an error to the list of errors
this method is invoked when the browser is opened
sets the option
initializes the model
returns the project properties
returns the global properties
returns the properties file
writes a string to the debug log
prints a throwable
creates a new branch
adds a new branch to the tree
draw the
this method is called when the plugin is
auto generated axis2 error handler
auto generated axis2 error handler
returns the error message
auto generated axis2 error handler
auto generated setter method
tests the ability to update the persistence capable of the current
auto generated setter method
test that existing object is null
returns the plugins resource bundle
auto generated setter method
auto generated setter method
auto generated add method for the array for convenience
load the ontology from the ontology
this method is called upon plug in activation
returns the of a given iri
finds the entity that matches the given file
this method is called when the save is saved
save the model to the save model
auto generated getter method
this method is called when the user is about to save the
auto generated setter method
this method is called when the save is about to save
auto generated getter method
returns true if the given property is editable
this method is called upon plug in activation
auto generated setter method
validates the controls
validates the resource name
initialise the service
auto generated getter method
moves the cursor to the location specified by the specified location
auto generated add method for the class
auto generated setter method
disconnects from the connection
returns the source of the event
returns the target node of this entity
reconnect to the connection
reconnect to a different source and and or updates the target
sets the line style
removes the bendpoint at the specified index
returns true if the command can be executed
verifies that the command can be executed
checks if the command can be executed
removes the given connection from the list of connections
reconnects a connection to the given connection
checks if reconnecting the connection source to the source of the source
check if the target is allowed to be
sets the target node of this node
reconnect the target
sets the new source
sets the target node of this node
removes the source and target from the source
verifies that the command can be executed
removes the given connections from the pool
returns true if the command can be executed
returns the location of the given location
activates the property change listener
deactivates the model
returns the connection anchor for the given connection
returns the connection anchor for the given connection
returns the connection anchor for the given anchor
returns the connection anchor for the specified request
returns the connection anchor for the given connection
returns the target connection anchor for the given connection
returns the connection anchor anchor for the specified anchor
returns the connection anchor for the specified request
returns the connection anchor anchor for the specified anchor
returns the connection anchor of a connection
returns the connection anchor for the given connection
returns the connection anchor anchor for the given anchor
returns the connection anchor for the specified request
returns the connection anchor for the given request
returns the connection anchor anchor for the given request
returns the connection anchor for the given connection
returns the target connection anchor for the given connection
returns the anchor connection anchor
returns the anchor connection anchor
saves the current model to the save rules
returns the palette root
installs a filesystem image from the filesystem
auto generated axis2 error handler
auto generated setter method
auto generated add method for the array for convenience
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
returns the
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
returns the
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
returns the
auto generated setter method
auto generated setter method
auto generated axis2 error handler
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
returns the
auto generated setter method
auto generated setter method
auto generated getter method
auto generated getter method
returns the
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
returns the
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
p automatically managed component initialization
p automatically managed component initialization
init method for this filter
search for the for a query
fired when the user clicks on the click button
called when a key is up
reads the document from a stream
maps the legend edge to the given element
creates a new task queue
creates a new task queue with the specified name
creates a new task queue with the specified tasks
adds a task queue listener to the task queue
returns true if the current thread is done
removes a task queue listener
sets the done flag
returns true if the done lt gt lt gt
sets whether the parser should be done
returns the error code
sets the error code
creates a new code summary page code instance
returns the error message
returns the error details
creates a new instance of overview page
sets the error details
sets the description of this object
returns true if there are more pages to be processed
returns true if the current thread is started
returns the result
returns true if the iterator has more elements
sets the result
adds a task listener
returns true if the last element has the last
creates a new progress page
removes a task listener from the list of listeners
creates a new progress page with the specified
returns the current page
returns the current step
creates a new empty confirmation page
adds a step to the current step
adds an action listener
creates a new wizard page with the specified
removes an action listener from the list
creates a new user input page
creates a new code i18n code instance
creates a new user input page
sets the description
gets the value of the subtitle property
sets the subtitle
returns the page type
sets the page type
returns the optional buttons
creates a new task event object
constructs a new generic event object
returns the wizard that is used for the wizard
returns the event id
creates a new code task list code instance
sets the wizard
creates a new task list with the given name
returns the wizard model for this wizard
returns the wizard dialog window
this method is called when the page is loaded
returns true if the current element is processed
adds a generic listener
this method is called when the page is loaded
removes a listener from the list of listeners
returns true if the go to previous
returns true if the next page is currently in the current state
returns true if the last entry in the last call to the
returns true if the current user is positioned
returns true if the user can cancel the cancel button
returns the button that is used to navigate to the
returns the next button
returns true if the user has to close the application
returns the last button
returns the button
show help
returns the cancel button
returns the button that was pressed
returns the button
returns the property prefix
returns the minimum size of the component
returns the maximum size of the component
displays the previous button
displays the next button
sets the
displays the last button in the given panel
called when finish button is pressed
displays the cancel button
displays the help button
returns the icon used to draw the icon
displays the close button
sets the icon for the button
returns the icon for the icon
enables or disables the back button
sets the subtitle
sets the icon for the popup
enables or disables the next button
returns the icon for the icon
enables or disables the last button
sets the icon for the icon
enables disables the finish button
enables or disables the cancel button
creates a new navigation pane
enables or disables the help button
returns the ui object that renders this component
sets the look and feel l f object that renders this component
resets the ui property to a value from the current look and
creates a new instance of link button
returns the current page
returns the title background color
creates a new instance of the object
creates a new instance of the window title
creates a new instance of the given dialog
creates a new instance of the given title and the dialog title
returns true if the document has been visited
returns the visited color
returns the visited font style
show close button
returns the color
returns the font style of the font
creates a new instance of the owner
creates a new dialog with the specified title and title
creates a new code navigation page code instance
creates a new instance of the given frame
returns the color of the disabled color
creates a new instance of the image
creates a new instance of the given title
returns the image
returns the font style of the font
sets the cancelled flag
creates a new component list
returns true if the mouse over the mouse over the mouse over
returns the ui object that renders this component
returns true if the current iterator has the back
sets the look and feel l f object that renders this component
invoked when an action occurs
returns true if the current element has forward
resets the ui property to a value from the current look and
returns the number of pages
removes the page from the list
returns the model
creates a new code ok dialog code instance
creates a dialog title
returns the selection model
returns the index of the first occurrence of the specified element in
returns the selection mode
creates a new code ok dialog code instance
sets the selection mode
creates a new code ok dialog code with the specified title
returns the index of the selection model
returns the index of the selection model
returns the ui object that renders this component
returns true if the given index is selected
sets the look and feel l f object that renders this component
resets the ui property to a value from the current look and
sets the modality of the dialog
returns the model
creates a new instance of the given range
returns the current page
ensures that the specified index is visible
returns the flag indicating whether or not the update should be automatically
sets whether the update should automatically update the
returns the ui object that renders this component
update the list of the current ui
sets the look and feel l f object that renders this component
resets the ui property to a value from the current look and
returns the model
returns the image of the current image
sets the current image to the specified value
returns the current disabled image
returns the rollover image in the current mouse
sets the mouse update
returns the pressed image
sets the current image to the specified value
returns the maximum value of the model
sets the maximum value of the spinner
sets the minimum value of the slider
returns the value of the current model
sets the value of the model
returns true if the model is adjusting
sets the value of the property value as a property
returns the mouse handler mode
returns the value of the given point
sets the progress bar
sets the name of the sub task of this task
checks if the given type is instantiated
get the value of the people service property
returns the media items request
returns an instance of the code code
returns the owner of the owner of the current user
returns a new instance of the builder
returns a new instance of the friends request
get a new person by id
returns a new instance of the current request builder
returns a new instance of the
returns a new instance of the accounts request
sets the default fields
test of get connection method of class
test of retrieve all all method of class vgrabber
test of close method of class org
test of get id method of class edu
test of retrieve method of class vgrabber
test of main method of class org
test of get description method of class vgrabber
test of add method of class vgrabber
test of get id method of class edu
test of remove method of class vgrabber
test of get sort order method of class vgrabber
test of modify method of class usyd
test of get date modified method of class vgrabber
test of get last modified method of class vgrabber
apply the image to the given image
convert a jpeg image to a jpeg format
converts a jpeg image to a jpeg format
writes the image to the specified stream
format the given output stream to a given format
returns the length of the given string
creates a new element
creates a new
sets the value of the given field
returns true if the object is an array
sets the value of the given type
returns the entity wrapper for the given key
save entity wrapper
unmarshall a json array into a json array
marshall a json array into a json string

marshall a collection of json json json json json strings to the
create a jsonarray from the collection
returns a json representation of the
checks if the id is valid
puts a new attribute
adds a group to the group
returns the hidden property group
adds an action listener
sets the property
adds a property to the group
adds the property to the given group
adds the given property to the group
adds an action listener
returns true if this is a labeled
sets the pane property
adds an action listener
sets the property
returns true if the label is labeled
sets the visibility of the component
adds a property to the list
sets the tip
returns true if the tab is currently selected
adds properties to the list
adds properties to the properties
adds properties to the list of properties
adds a property to the list of properties
adds a property to the tab
adds a property tab
sets the text
sets the string value
sets the value of the int property
sets the double value of the parameter
this method initializes this
sets the boolean value of the boolean value
sets the position of the current position
sets the size of the size
sets the start position
sets the message
sets the number of elements in the sequence
sets the message
sets the value of end position
sets the end size of the image
sets the date
sets the text
returns the scrollable block increment
returns the scrollable unit increment
this method sets the icon to the icon
sets the calendar value for this calendar
adds a new mapping to the map
returns the component that is associated with the specified component
sets the selected item
returns the element at the specified index
adds all of the elements in the specified collection to this list
enables disables the button
sets the value of the specified property
sets the value of the given string
sets the progress bar value
sets the status of the status bar
adds a new tray to the tray
sets the value attribute of the object
adds a node to the tree
returns the type name for this type
adds a component to the panel
sets the object to be used to represent this object
sets the entry info for this entry
sets the button to be used for the button
returns true if the button is selected
sets the list of choice classes
returns the description of the filter
sets the tree for the tree
returns the tray component
adds a delimiter to the list of delimiters
adds an action listener to the button
returns the description of the current user
returns the old vector of the
returns the short description of this type
returns the status of the status
returns the version string
adds an action listener to the minimize button
returns the type of the property
returns the full name of the
returns the name of the
returns a vector with the new vector vector
registers a module to the module
adds a property change listener to the property
adds a listener for the heading action listener
returns true if the current thread is destroyed
registers a module to the module
returns the default directory
returns the home directory
adds a property input listener to the property input
returns the entry for the given mouse event
sets the display type
returns the status of the given code
returns the contact at the specified key
adds a listener for contact model events
returns the property editor
sets the property editor
sets the description of this filter
returns the icon for this player
returns the tool tip text for this tool
sets the show server info dlg for the user
returns the icon for this icon
returns the tool tip text for this tool
sets the file name
add a listener for the event listener
sets the show server info object
sets the
sets the action to ping
sets the action to be used for the addition of the
sets the value
adds a player to the list
adds a listener to the buddy list
returns the map
returns the number of rows in the model
adds a listener to the sketch
returns the value at the specified cell
adds a player to the list
processes the given outgoing message
returns the number of players in the list
returns the mnemonic of the character
get the favorite favorite
returns the tool tip for this tool
sends a request to the server
returns the player at the specified index
returns the sleep value
processes the incoming message
returns the number of rules in the list
convert a char to a char
returns true if the search is
returns the name of the
returns the rule at the specified index
returns the mnemonic of this character
returns the number of threads in the current thread
returns the tool tip for this tool
returns true if the popup is selected
returns the selected server
draw the
returns true if the given date is accepted by this filter
send the given sketch to the current frame
returns the ping
adds a listener for changes to the event listener
sets the duration
returns true if the recurrence is recursive
returns the ping parameters
returns the number of rows in the list
returns the number of free slot in the
returns true if the day is a day
returns the reserve slots
sets the action to be performed
sets the delete action
this method is called when the user selects a new ip address
sets the start time
returns the time in seconds that the calendar is associated
sets the end date
add a buddy to the list of
returns the end time of the
returns the start time of the
the event for the specified day
returns true if the favorite is a favorite
fires an event to the model
returns the day for the given date
returns the day for the given date
returns the number of in the player
adds a calendar object to the list of calendar objects
returns the default calendar
sets the default calendar
returns true if the event is already loaded
sets the power search action
sets the date time
adds the listener to the list of listeners notified when the
sets the status text
returns the calendar selection
sets the color of the image
checks if the given move is valid
sets the color of the image
returns true if the given move is valid
sets the color of the image
sets the color of the image
sets the color of the image
sets the color of the image
returns the piece in the specified field
sets the piece of the given piece
adds the listener to the list of listeners
returns the mnemonic of this code code
adds a listener for the board event listener
returns the column at the specified position
returns the row at the specified row
adds a listener to the tree model
returns the child of parent at the given index
move the player to the specified move
returns the number of children of code object code
returns the index of child in parent
sends a move to the server
returns true if the given object is a leaf
adds a category to the list of categories
adds a new entry to the list of categories
adds a new entry to the list
adds a list of categories to the given category
returns the entry at the specified index
returns a category with the specified name
sets the player
returns the url of the url
returns the browser browser browser browser
p add
adds a bookmark to the model
adds a listener to the conversation
sets the events
adds a new email to the database
adds a phone to the group
adds a mnemonic to the menubar
returns the title of the user
returns the frame for the specified user
returns the frame that is currently being used in the window
adds a property change listener to the listener list
adds a plugin to the plugin
send a message to the server
returns the key of the conversation
adds a new message receiver to the list of receivers
sets the description value for this core descriptor
returns the protocol for this transport
enables or disables the component
adds a state listener to the state
adds a state listener to the state
adds a listener for tree model events
adds a listener for the state of the state
adds a property change listener to the listener list
returns the child of the specified parent at index
this method is called when the user changes the title
returns the number of children of code parent code
returns the index of child in parent
adds a listener for conversation start events
returns true if the given node is a leaf
returns the title of the tab
processes the incoming incoming message
processes the given outgoing message
returns the mnemonic of this menu item
returns the name of the
returns the tool tip for this tool
returns the contact for the given event
processes the incoming incoming message
process a message
returns the engine for the given event
returns the message command
returns the message command
returns the message command
returns the message command
returns the status of the current status
returns true if the online status of the online status is online
returns the account id
returns the default status
sets the offline status of the user
sets the online status of the user
adds a new contact to the list of accounts
sets the status
returns the key for the account
adds a new event to the table
sets the nick of the user
returns the number of rows in the model
returns the offline icon
returns the value at the specified row and column
returns the online icon
adds a new contact to the list of users
returns the number of rows in the table
returns the value at the specified cell
returns true if the is destroyed
returns the user status panel for the given account
adds a new component to the panel
adds a new code code to the list of components
returns the label for the specified command
reads the jar file from the jar file
reads the contents of the file
returns true if the given is mounted
returns the label for the specified
returns the next curve from the given event
adds a row to the table
adds a block of blocks to the list of blocks
clears the block
creates a new instance of
creates a new vocabulary
load a vocabulary from the uri
load a vocabulary from the given source file
returns the of the given uri
create an instance of
creates a new instance of
returns a vector of all the
handle the comp size
handle the comp
enable disable the
sets the database name
sets the tables names
returns a list of all tables in the database
returns a vector of field names for the given table
returns the number of rows in the table
returns the not null null
this method is called when the user selects the
returns the info vector
returns the number of in the specified index
sets the current number of rows to the last iteration
this method is called by the
increase the count of the count
returns the value of the field
deletes the current row from the database
undo the last resort
returns the last insert id
pop up the menu item
this method is for the
handle the text of the text field
handle vertical text position
handles the icon on the icon
handles the font
returns the info
returns a vector of all the names in the database
handle the text of the component
handle vertical text position
description of the method
this method is called when the save button is pressed
this method is called by the gui when saving the user
sets the fields name vector
returns the vector of fields
sets the photo path
returns the photo path
returns the peers in the specified timeout in the specified group
returns the apps for the specified url
returns the peers in the specified pool
returns the label for the specified name
validate the map
returns the errors
this method is used to execute the action
initializes the root package name
applies the public method to the internal state
tears down the fixture for example close a network transaction
initializes the servlet context
returns an error if the error is already registered
navigate to the navigation
initializes the charset charset
returns a new code navigation code
initializes the bundle name
returns the parameter value
binds a request scope to the scope
initializes the default locale
this method is called by the session factory to set a session
initializes the default time zone
this method is called by the application
returns true if the application is running
download the file and returns it as a string
returns true if the request is a valid request
returns true if the request is post
returns true if the request has parameters
returns the value of the specified request as a byte
returns a string representation of the specified value
this method is used to convert the given locale sensitive to
returns the short value of the request
returns a short representation of the pattern
returns a new instance of the current session time zone
returns the value of the specified attribute as an integer
returns the value of the specified pattern as an integer
returns the value of the request attribute as a long
normalizes the value
creates a new code action code instance
returns a long value from the specified pattern
returns the value of the specified attribute as a float
returns the value of the specified pattern as a float
returns the value of the specified attribute as a double
creates a handler for the request
returns the value of a given pattern as a double
returns a big decimal value for the specified attribute
returns a big decimal whose value is a value
returns the value of the request attribute
the given string
returns the value of the request attribute as a boolean
returns the date as a date object
returns the key value associated with the given key
test that a list of works correctly
show the overwrite dialog
shows the password dialog
called when the user clicks on the ok button
sends a new password to the server
center the window
called when the user has pressed the cancel button
called when the user clicks on the file
prints the algorithm names
sets the default password
saves the model to the model
prints the help
prints out the version information
returns the algorithm for the given algorithm name
displays an error message
displays an error dialog with the given title and the display
sets the compression level
returns the compression level
returns the file list
adds a new algorithm to the
called when the user selects the file chooser
returns the password
adds a algorithm to this algorithm
sets the file list
returns the algorithm name
returns the list of file list
sets the current algorithm name
returns the algorithm used to determine the algorithm
returns the current algorithm name
sets the compression level of the image
returns the compression level
returns the directory where the file is located
sets whether or not the progress bar should be running
stops the thread
reads a table from the table
reads the parameter from the input parameter
returns a scalar value for a single scalar value
returns a string representation of this object
returns a string representation of this object
this method is called when the grade ends with a specific section
this method is called when the user modifies the category
this method is called when the section is destroyed
parse a map of dictionaries
returns the launch manager
returns the file in the file system
returns the project
removes a breakpoint from the breakpoint
launch the given launch configuration
terminates the current thread
this method gets the main window
this method initializes content panel
this method initializes tabbed panel
this method initializes ok
this method initializes south
this method initializes about scroll panel
this method initializes help scroll panel
returns the
sets the
sets the interval in seconds
no glob pattern
sets the lower bound of the field
returns a string representation of the object
p p the code generator code of the code pattern code s
returns the next element in the iteration
returns the next token in the grammar
returns the next token in the stream
returns true if the list contains more elements
count the number of tokens in the current token
returns the matched string for the current match
returns the number of the specified element in the list
returns the number of matched questions
returns the string that matches the given index
returns the left side of the string
returns the left side of the given
returns the right side of the matched string
returns the right of the string
validate the given range of
returns a string containing the end of the path
returns the region of the given region
add a regular expression to the list
returns the regular expression at the given position
sets the regex at the given position
adds a regular expression to the list
adds a new array of strings
replaces all occurrences of the string with the same name
replaces all occurrences of the string in the string
replaces all the region with the specified region
replaces the first occurrence of the first occurrence of the specified
replaces the first first occurrence of the first occurrence of the specified
replaces the first region of the string in the beginning of the
returns the next element or null if there is none
sets the parent of this node
returns the next match
returns the next string
returns the match score
returns the match at the given location
add a pattern to the list of the parents
returns the size of the buffer
sets the size of the buffer
sets whether or not the current should be matched by the
returns true if the current remark should be clipped
sets the ignore case
sets the replacement string
sets the replacement rule to be used to create a new
replaces the first occurrence of the first occurrence of the specified
replaces the first first first occurrence of the specified string
replaces the first region of the region in the beginning of the
replaces all occurrences of the region in the given string
replaces all occurrences of a string in the string
replaces all the region occurrences in the region of the given region
returns a copy of this object
returns the
checks if the given string matches the given position
checks if the given string matches the given string
searches for a string in the current
searches the string for a given string
checks if the given region is a region of the given region
sets the flag
returns true if the is
returns true if the is
returns true if the is
adds a regular expression to the end of the list
returns true if the file matches the given directory
returns the version of the version
optimize the current pattern
returns true if the current interval is greater than or equal to
returns true if the literal is literal
returns a like like like a like like
compile the regular expression
returns true if the file is accepted by the filter
p wild rain 2001 pattern
returns the object that is used to display the
adds a rule to the list of rules
returns a string representation of this object
copy a string to the position
increase the position of the current token
returns true if the given character matches the pattern
returns true if the given character matches the pattern
increments the match
returns a comma delimited codepoint
returns the number of bits in the format
returns the number of
returns the number of commands in the list
reset the
returns the current line number
load internal internal internal internal internal internal internal internal internal model
returns the data for the given name
get the data for the given name
returns true if the specified data is a data
returns true if the next line has a line
returns the next line of the current line
returns the current line number
returns a string representation of this object
returns the number of bytes in the buffer
sets the calculation of the calculation
returns the current value of the data
sets the data value for this
creates the pages of the multi page editor
this method is called once at the beginning of the page
called when the page is changed
closes the project
sets the maximum number of lines in the
returns true if the finite finite state is
returns the value of the parameter
returns the length of the array
returns the character at the specified index
returns the next token
returns the string representation of the src
returns the string representation of the path
returns a string containing chars of the pattern
returns a new code this code implementation of code this code
returns the number of matched elements
returns the matched character in the
returns the number of matched positions in the matched match
replaces the first string of the string string with the
returns the number of
returns true if the user has to be inserted
returns the match from the current match
returns the string that is matched to the current element
replaces all the traits with the given string like
returns the number of matched elements in the given index
returns the substring of the string
returns the current
apply the regular expression to the given regular expression
returns the number of patterns
replace the rule with the given string
returns the character
returns true if the current state is still in the current state
returns true if the current token is a legal match
returns the string
sets the rule to be used for the
returns the var rule
parse a function
returns the replacement rule
returns a clone of this score
returns a string representation of this object
sets the number of records to be used for the given number
returns a string representation of the object
restarts the current simulation
adds a new code player code to the set of
returns a string representation of the score
closes the current set of set
closes the leg set leg
sets the players
closes the current turn
removes the player from the list
restarts the game
undos the last move
adds a player to the list
restarts the game
sets the leg count
returns the match
returns the leg count
closes the turn
sets the number of times the number of times the
returns the last turn of the player
returns the number of set
this method is used to send a game to a player
returns the value of the current value
sets the extra configuration of the given key
adds a new code code to this code code
returns the extra configuration for the given key
undoes the previous move
returns the extra configuration of this
undo the last command
returns true if this object is empty
returns the scores of the game
returns true if the current state is full
returns the configuration of this configuration
checks if the current has a double
restart the given leg
restart the current
adds a new code player code to the given code
closes the iterator
returns the current state of the current state
closes the leg
closes the turn
returns the next player
undo the last command
resets scores of all scores
creates the components
refresh the player
cleans up all the resources
returns the minimum height of the content
this method is called when the user presses the undo action
returns the minimum size of the content area
adds a listener to the game
start the application
creates the components
this method is called when the user selects a new
called when the pointer is released
initializes the values
removes a listener from the game
called when a key is released
reports the given number of reports to the report
restarts the current session
paint the label
undo the last action
called when the pointer is released
traverse the node and its children
reports the specified report
handles command actions
this method is used to get the current state of the game
paint the image
restarts the current game
displays a alert dialog
sets the configuration
sets the current board to the current board
display the current game
returns the configuration
sets the current display to the current value
returns an enumeration of the games games list
returns the current game scores
sets the game
returns the current game key
returns the current game state
this method is called when the game is over
notify listeners that a
notify all listeners that a change in the game has been fired
test of set text block method of class org
test the composite
test of set component method of class com
adds a new item to the list of configuration items
returns the func
returns the current state of the
returns the instruction of this instruction
stops the
returns a database connection with the given name
get a connection to the database
get the features of the features
returns the class for the given type
returns the maximum hierarchy depth
sets whether the parser is ignorable
sets the remove level
returns true if the given type is a deny type
returns true if the filter passes the filter
returns the elapsed time in milliseconds
get the features of the features
returns the type for the given group
returns the type for the given type
returns the uri of the local uri
returns the uri of the local uri
adds a part to the model
adds a parent to this
appends the query field name to the given query string builder
returns the name of the field to be used for the
returns the field name
sets the field name
returns a new property descriptor for the given field
sets the format pattern for the current format
sets the value of the name property
returns true if the name is
sets whether the user has to be enabled for the
removes the given connection from the table
removes the given object from the database
load a bean info object from the given class loader
sets the entity name
stores the given database into the database
returns the name of the entity
returns the command name of the relation
finds the object by id
sets the value of the identity conditions
returns the entity name
load bean from database
appends the string to the end of the list
returns true if the primary key is set to the primary key
sets the command to be used for the given command
sets whether or not the user has to be enabled for the
creates a new database connection
store the given database to the database
stores the given database into the database
remove the given object from the database
removes the specified object from the database
removes all the given connections from the database
finds the object by id
write the opening tag
writes the close tag to the output stream
this method is used to process the input string
process a line of input
returns the content of the file
process a token
this method is used to substitute the function parameters
this method is used to filter the text of the filter
returns the instance of the application
returns the name of the file
returns the function for the given input
adds a css file to the list of the css file
adds a javascript url to the web service
returns the new instance of the
creates a new script
adds a javascript to the list of javascript files
adds a template path to the template
sets the output file
adds a required required to this
returns the path to the image
writes the file to the output stream
write the script to the given writer
writes the footer
returns the hash code of this object
sets the capacity of the map
returns the trace of the trace
sets the stack trace
returns a set view of the keys contained in this map
returns a collection view of the values contained in this map
sets the cache
returns the resource bundle
returns the locale
returns a set view of the keys contained in this
generates a simple method declaration
returns a verbose string representation of this
returns the resource bundle
returns the key for the given method
called after the response is completed
returns a custom field serializer for the given class
called when the deserialized object is deserialized
checks if the given method is expected to be expected
returns true if the interface is a remote service interface
prepare to write to the output stream
append a token to the end of the buffer
returns the cause of this exception
returns the cause of the exception
handles a failure
adds a widget to the list
fires a keyboard event to all listeners
adds a widget to the top of the stack
sets the widget position of the widget
fires a key down event
returns the widget left of the widget
fires a key press event to all registered listeners
returns the widget that is used to display the widget
fires a key up event to all registered listeners
cancel the current event
returns the parent widget
clears the given cell
returns the cursor position
returns true if the component is attached to the scene
adds a new item to the tree
returns the number of columns of the specified cell
called when the load button is pressed
adds a new item to the tree
returns the number of columns in the model
returns the selected text
attach the component to the browsers browsers browsers browsers browsers browsers
returns the child at the specified index
returns the number of rows in the model
returns the selection length
called when the toolbus is detached from the browsers
returns the number of children
resizes the table
removes this object from the parent container
resizes the table
returns the index of the child index in the specified child
resizes the given rows
creates the cell that is used to create the cell
returns the parent item
prepares the cell at the specified cell
returns the state of the open
prepares the row for the given row
selects all text in the current selection
sets the position of the cursor
returns the layout of the given widget
removes the item from the tree
sets the selection range
removes the item from the tree
removes the items from the list
sets the text of the element
sets the selected state
sets the state of the state
sets the state of the tree
sets the user object of the user
sets the horizontal alignment of the layout
returns the text align string
sets the vertical alignment of the cell
sets the height of the cell
fires cell clicked event to all listeners
sets the vertical alignment of the widget
sets the spacing between the columns
fires an error to the listener
fires a load event listener
returns the element that is currently being displayed
adds a style name to the style
initializes the widget
returns the absolute left position of the element
sets the widget to be used for the widget
returns the absolute top position of the element
adds a widget to the list
returns true if the specified widget is contained in the list
returns the height of the image
adds a new item to the list
returns the width of the image
returns the widget at the specified index
adds a new item to the list
returns the style of the element
returns the index of the given widget
clears the tree
returns the title of the frame
inserts a widget into the panel
returns the number of items in the tree
returns an iterator over the elements in this collection
returns the text of the item at the specified index
returns true if the element is visible
removes the specified index from the list
removes a style name
removes a widget from the list
returns the index of the selected element
sets the height of the image
returns the value of the element at the specified index
fires a focus event to all listeners
fires focus event
sets the size of the pixel
returns the number of items in the list
fires an event that the focus listener has been lost
inserts an item into the table
sets the size of the given string
inserts an item into the list
returns the parent menu
sets the style name
returns the sub menu
returns true if the item at the specified index is selected
sets the title
returns true if the element is multiple selected
sets the command
sets the sub menu
sets the visibility of the element
sets the width of the
removes the item at the specified index
this method is used to set the event sinks of the
sets the selected item
adds a style to the table
sets the multiple selection
removes the specified event from the event queue
sets the element
returns the element at the specified row and column
adds a widget to the element
sets the selected index
adds a widget to the widget
returns the widget
sets the value at the specified index
returns the style name for the specified cell
sets the number of items in the list
sets the widget to be used for this widget
returns the element that is currently being used to hold the element
returns the vertical align string
inserts a widget into the container
adds a widget to the container
returns the children of this widget
returns true if the cell is visible
fires a popup closed event to all listeners
returns the action for the action
returns the encoding
returns the method
returns the target
removes a style name from the specified style
sets the url of the menu
sets the encoding
sets the method
submits the form
returns the name of the element
fires before tab selected
fires a tab selected event
sets the height of the cell at row col
hides the window
called by the when a key is pressed down
handle the key press event
returns the url of the page
handle the preview key up preview preview
sets the url
returns the results of the result
sets the popup position
fires a change listener to the listener
returns the popup menu left
sets the cancel status
adds a tab to the tab
returns the top level popup menu
returns true if the user has cancelled
adds a tab to the tab
sets the style of the cell at row column
returns the deck panel
removes the given widget from the list of children
show the preview
returns the tab bar
returns the filename of the element
fires a scroll event to all listeners
adds a widget to the list
inserts a widget into the tab panel
sets the visible row and display the visibility of the specified cell
inserts a widget into the panel
removes a widget from the list of tabs
sets the width of a cell
fires an item selected event
notify the listener that the item has changed
simulates a click on the button
fires a mouse down event to all listeners
fires a mouse enter event to all listeners
returns the number of columns in the specified cell
returns the span of the specified cell
fires a mouse leaving event to all listeners
sets the column span
sets the cell wrapping
fires a mouse move event to all listeners
sets the row span for the specified cell
fires a mouse up event to all listeners
adds a cell to the table
returns the number of cells in the table
returns the visible widget
returns the flex cell formatter
returns the number of rows in the model
returns the raw element at the specified row and column
inserts a widget into the container
insert a new row in the table
inserts a new row at the specified row
shows the widget at the specified index
removes a cell from the table
make a cell with the same element as the cell element
prepares the cell at the specified cell
prepares the row for the given row
ensures that the specified item is visible
returns the attribute value
returns the scroll position
returns the horizontal scroll position of the current page
sets whether scrollbars scroll bars should be shown
sets the position of the scroll
sets the horizontal scroll position
sets the attribute value
returns true if the element is enabled
inserts a widget into the panel
enables or disables the component
adds a style name to the specified style
fires a click event to all listeners
returns the element at the specified row
cancels the current timer
schedules a new schedule for the specified delay
schedules the specified period to be executed
returns the style name for the specified row
returns true if the element is visible
removes the style name from the specified style
sets the style of the element at the specified row
sets the vertical alignment of the cell
sets the visibility of the specified cell
returns the serializable superclass for the given class
make a dom element
returns true if the given field is a legal value
checks if the current session is valid
check if the given type is serializable
sets the attribute value
writes the accessors to the final field
adds a listener to the table
initializes the custom
creates a new instance of the given interface
clears the specified cell
returns true if the given type is serializable
checks if the given interface is valid
checks if the given type is serializable
returns the padding of the cell
generates the for the given java source
returns the spacing between the cell and the cell spacing
generate a new service def definition impl
returns the html code for the cell at row column
returns the row formatter
returns the text in the specified cell
returns the widget at the specified position
checks if cell is present
returns an iterator over the map elements in this map
creates a new code source writer code instance for the given
called when the browser is selected
this method is used to create the interface
emit a
registers a method to the factory
removes a widget from the list of children
this method is called when the is done
this method is called when the is done
convert the type of the given type to a type
removes a listener from the table
returns the writer
print a new object and then terminate the line
print the current page
begin user doc
end the comment
sets the border width
sets the padding of the cell
returns the
returns the value of the string
returns a string representation of this object
returns the
returns a string representation of the object
sets the spacing between the cells
returns the value of the boolean valued property
returns the
returns a string representation of the object
returns the value at the specified index
returns null if the null
returns the value of the array of the element
sets the html td cell at row column
replaces the value at the specified index
returns the object that caused the event
returns a string representation of this object
returns a set view of the keys contained in this map
gets the value of the null property
returns the number of keys in the map
returns the length of the header
removes a named item from the list
sets the text of the cell
returns the element that is currently being used for the document
sets the named object
returns the element identified by code id code
returns a string representation of this object
returns a string representation of this node
returns a string representation of this node
returns a object representing the given
append a new value to the current data
returns the item at the specified index
creates a new
deletes the given data from the data array
returns the data of the
sets the widget at the specified row and column
creates a new document fragment
returns the value of the specified attribute
returns the length of the
returns the attribute node with the given name
inserts a string at the specified offset
creates an element with the given name
returns the elements of the given tag name
replaces the current data with the specified offset in the current
returns the name of the tag
sets the data
returns true if the given attribute is already defined
creates a text node
returns the substring of the given range
removes the specified attribute from the
sets the attribute value
returns the name of the object
imports a node from the given node
removes the cell from the table
returns true if the object is a
returns a string representation of this object
returns the value of the attribute
returns a string representation of this object
returns a string representation of this object
compares the specified object with this object
returns a string representation of this object
returns the text of the given text
append a new child to this node
returns a duplicate of this node
returns the target
computes the key of the given row and returns the
returns the code
sets the data
returns the namespace uri of the wrapped object
returns the key for the given element
returns the prefix of the current context
returns true if the attributes are not
returns true if the node has child nodes
returns the widget widget of the given element
insert a new child object
normalizes this object
removes a child from the context
replaces the given old child with a new child
removes the widget from the map
sets the value of the node
checks the bounds of the cell at the specified position
checks the bounds of the given row
creates the cell that is used to draw the cell
returns the body element
returns the body of the element
inserts the given cell into the table
inserts the given cell into the table
inserts a new row in the table
removes the cell from the tree
removes the cell at the specified position
removes the specified row from the table
sets the cell formatter
sets the row formatter
returns a new instance of the given
returns the uri of the uri
this method will be called by the
processes the given process
creates a model from the given uri
returns the xsi type
returns the metadata package uri
returns the validation
returns true if the conversion is used to perform conversion
returns the extraction extraction value
returns the validate validation
sets the converted cml
returns the mime type of the mime type
sets the extracted metadata
converts a file name to a string
sets the metadata package uri
sets the value of perform conversion
sets the perform extraction
the directory and the directory to be written
returns a unique value for the given query
returns true if the submit button is enabled
returns the class
closes the file
called when the component is selected
returns the metadata for the request
returns true if the submit button is enabled
copy the values from the data to the clipboard
returns the profile
returns the uri of the current uri
returns the end index of the end of the list
creates a new archive file
sets the end index
sets the start index
this method is called when the is broken
builds a url for the given url
returns a localized message for the given class
returns a string representation of the object
creates a new instance of
returns the date the time the task was last updated
extract a metadata from the model
retorna
returns the string representation of the file
process the given process
returns true if the test suite is setup
load the configuration from the configuration file
applies the configuration to the current configuration
checks if the configuration file is loaded
checks whether the test suite is setup
checks if the configuration file is loaded
tests if the current instance is setup
tests if the current instance is setup
load the configuration from the configuration file
tests the method
checks if the configuration file is loaded
tests the method
checks if the server is running
writes the specified code byte code to the output stream
writes the given string to the output stream
checks the setup of the
invoked when the components size changes
sets the fill color
returns a string representation of the object
accepts files in the file filter
returns the description of the filter
accepts files in the file filter
returns the description of the filter
returns the metadata for the metadata
returns a string representation of the object
returns true if the point contains the specified point
returns true if the given rectangle contains the specified rectangle
returns the component of this
returns true if the given coordinates are within the rectangle
sets the component data
tests if the given rectangle contains the specified rectangular
returns the bounds of this object
returns the bounding rectangle of the current
returns an iterator for the specified path iterator
returns an iterator for the outline of the given elliptical rect
returns true if the given rectangle intersects the interior of the
tests if the interior of the code double code intersects
this method validates the data
removes the popup menu from the popup menu
show help dialog
adds a new input data to the table
adds a new input data to the list of
add a new input data to the list of
returns true if the given data is a
this method is used to get the from the
update the of the
returns the number of components in the
returns the first element in the document
sets the data
sets the data for the
returns the shape of the
returns the first element in the document
returns the box
draw the component
returns the first element in the document
returns the first element in the root directory
paints the component
this method is used to extract the from the document
returns the value of the given attribute
returns the
returns the color of the given color
sets the mouse listener
returns a list of string with the given names
returns a list of the string that contains the given point
returns the element of the specified element
returns the offset of the root element
returns the first element in the root element
sets the value of the code code property
this method is called when the user wants to repaint the component
returns the content of the content of the content
returns the offset of the root element
returns the first element in the root element
adds the given component to the other component
sets the content title
returns the element of the given element
returns the first keyframe in the file
returns the value of the given attribute
returns the content file size of the content
returns the value of the specified attribute
tests if a given file is accepted by this filter
checks if the file name is in the file
returns true if the given file is accepted by this filter
sets the dom value for the first
returns the date the was created
sets the dom value for the specified field
sets the content media creation date
sets the dom attribute of the object
sets the dom attribute of the object
sets the dom attribute of the element object
returns the media content summary
sets the content media type
returns a list of properties for the given xpath
returns the color of the given color
returns the location of the content type
returns true if this is a math mode
returns a list of string with the given names
sets the content type location
sets the math mode
begin uml doc
returns the component of the
begin uml doc
this method is used to extract the image from the image
extracts the list of peaks from the list of peaks
returns the name of the agent creator agent
adds a toolbar entry
returns the summary description
sets the value of description summary
returns the description of the file
sets the description of the tool
returns the fps per second
returns the number of seconds the last time the
returns the number of frames in the frame
adds a new to the corpus
ask the user to ask the user to ask the user to
returns the distance between the two objects
returns the distance between two objects
returns the phrases in the list of the
returns the phrase for the
updates the score of the cluster
adds a cluster to the cluster
compares this cluster with another one
returns the distance between two objects
returns the similarity between two objects
returns the distance between two vertices
returns the similarity between two points in the given array
returns the maximum similarity between the given row
returns the distance between the two points
update the with the given cluster
returns true if the base is a candidate candidate
returns the minimum similarity between the given row
returns the distance between two
returns the distance between two points
prints the list of strings to the given list
returns the maximum distance between this point
returns the distance between two elements
returns the maximum distance between the given points
compares this cluster with another cluster
returns the distance between two points
returns the score of the phrase
returns the current movement
adds a document to the document
sets the d
returns the
sets the
sets the r
sets the value of the w property
adds a corpus corpus to the corpus
normalizes the current state of this object
resets the similarity of the tree
handles the action event
this method is called when the user selects the menu item
returns the similarity matrix
invoked when an action occurs
normalizes the current state of this object
returns the element
returns the number of children of code parent code
returns true if the node is a leaf
copy the text to the top of the structured text area
returns the index of child in parent
returns true if the children of this node allows children
sets the root node of the tree
creates a new document
accepts the specified file
returns the image
opens a file chooser
this method will be called to initialize the next image
sets the current file
invoked when a mouse button is pressed on a component and then
invoked when the mouse is moved on a component
invoked when the mouse has been clicked on a component
mouse pressed method comment
mouse released event
returns the path to the description of the file
gets the value of the property
returns the of the
creates a new code token stream code
removes an edge from the list
returns a string representation of this object
compares the specified object with this graph
mouse pressed handle mouse button
compares the specified object with this node as a boolean
compare this node to another node
mouse released event
eliminates inverse of the inverse of the inverse of this inverse
inverts the relation
returns the distance from the graph to the given
invoked when a mouse wheel is moved
initializes the
returns the distance between the given visual object
invoked when a mouse button is pressed on a component
calculates the polynomial value of the polynomial
returns the percentage of the current data
extracts the feature from the
extracts the feature from the
invoked when an action occurs
sets the parameters of the embedding to be applied to the
returns the distance between the source and the specified
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
returns the string representation of the edge
sets the string representation of the array type
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
invoked when the mouse has been clicked on a component
invoked when a mouse button is pressed on a component
invoked when a mouse button has been released on a component
invoked when the mouse enters a component
invoked when the mouse exits a component
sets up the fixture for example open a network connection
this method is called by the thread to run the
load a buffered image from the file
returns the impact of this
sets the impact of impact
adds a strategy to the strategy
removes a strategy from the strategy
adds a new observer to the list of observers
removes an observer from the list
resets the counter
returns the weighting for the given weighting
returns the weighted of the given data
resets the strategy
returns the distance between the given visual descriptor
returns the distance between the two given
returns the distance between two vertices
returns the distance between the two points
returns a top level docs
this method is used to normalize this object
compares this object with the specified object for order
applies the model to the model
returns true if the given model is than the given model
returns the size of the feature object
stub method for implementing the code abstract code method
clears the current state of this object
sets the byte array that is used to convert the data to
calculates the distance between two points
returns the visualization
returns the cluster for the given cluster
returns the top boundary of the stack
sets the representation of the content to be used for this object
adds the history to the history
returns true if the given index is in the list
calc power of the
sets the current edge
prepares the
returns the next boundary of the image
returns the next edge in the graph
extract the image from the image
returns the distance between the vertex and the vertex
sets the data array
returns the number of in the clustering
the clusters
recompute the clusters
returns the overall of the cluster
returns the distance between the and the specified feature
test the serialization and returns a new cluster
tests the create index statement
creates a new data object
makes all options in the
this method initializes this
sets the status text
sets the options
sets the status of the complete status bar
sets the status of the error message
adds the given option to the list of options
this method initializes j button
adds a new option to the list of
this method initializes program dialog
this method initializes j button1
this method initializes j content pane
this method initializes j tree
this method initializes clear button
this method initializes j button
rebuilds the tree and rebuild the tree
returns the option
returns the display settings for this midlet
gets the main pane
this method initializes j button1
run the settings
this method initializes option panel
this method initializes this
returns the real option panel
this method initializes j button
returns the jlabel that contains the label
this method initializes j content pane
this method will update the doc value of the given option
this method initializes j text field
this method initializes j button
this method is called when the user selects the document
this method initializes home button
load the settings from the given
called when the tree selection changes
this method initializes this
this method initializes clear button
this method initializes j editor pane
this method initializes j button
this method initializes about dialog
this method initializes j button1
this method initializes about content pane
this method initializes j jtool bar bar
this method initializes j button1
this method initializes about version label
this method initializes about version info
this method initializes j scroll pane2
this method initializes j editor pane
this method initializes j button
this method initializes j scroll pane2
creates a new instance of program runner
this method initializes j pane
expands all tree nodes in the tree
returns the long info
collapses all the nodes in the tree
reloads the gui
finds the option in the given option
sets the long info
kills the server
returns the data
validate the input
returns the
sets the value of the initial value property
this method initializes j button
returns the sub set of the sub
sets the sub set of the
this method initializes console panel
this method initializes j scroll pane
gets the value of the bool choices property
this method initializes console pane
sets the data
this method initializes j scroll pane1
returns true if the node has a child
returns the child of this node
this method initializes error pane
sets the value of child
returns the linker
sets the value of linker
this method initializes j button1
sets the run button to run the next button
this method initializes j button3
this method initializes j frame
this method initializes j jmenu bar
this method initializes file menu
this method initializes setting menu
this method initializes program binary location
shows the binary chooser
this method initializes help menu
this method initializes exit menu item
this method initializes j menu item
highlights the given tab
sets the tab name
runs the program
close the frame
this method initializes this
this method initializes j content pane
this method initializes j panel orden
this method initializes j panel
this method initializes j button
this method initializes j button salir
this method initializes this
this method initializes j content pane
this method initializes this
this method initializes j content pane
this method initializes j scroll pane
this method initializes j panel
this method initializes j button
this method initializes j button salir
this method initializes this

this method initializes this
this method initializes j content pane
this method initializes j button aceptar
this method initializes j scroll pane resultado
this method initializes j button cancelar
this method initializes j label id
this method initializes j text field id
this method initializes j label clave
this method initializes j password field clave
this method initializes this
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes j panel
this method initializes j panel
this method initializes this
this method initializes j content pane
this method initializes j panel
this method initializes j panel
this method initializes j button guardar
this method initializes j scroll pane warehouse
this method initializes j
this method initializes j button salir
this method initializes j panel boton menu
this method initializes j jtool bar bar
this method initializes this
this method initializes j button nuevo
this method initializes j button
this method initializes j button buscar
this method initializes j button exit
this method initializes this
this method initializes this
this method initializes this
this method initializes j button warehouse
this method initializes j text field
this method initializes j text field id
this method initializes j button buscar
this method initializes this
this method initializes j content pane
this method initializes j panel resultado
this method initializes j panel
this method initializes j button aceptar
this method initializes this
this method initializes j button cancelar
this method initializes j jmenu bar
this method initializes j content pane
this method initializes j menu
this method initializes j check box
this method initializes j menu
this method initializes j menu
this method initializes j menu
this method initializes j menu item
this method initializes j panel
this method initializes j menu item back up
this method initializes j check box documento
this method initializes j menu item
this method initializes j menu item
adds a new to the list of
returns a list of all the
this method initializes j menu item banco banco banco
this method initializes j menu item provincia
this method initializes j button buscar
this method initializes j menu item
adds a new to the list of
returns a list of all the
this method initializes j menu item cargo
this method initializes j menu item tipo
this method initializes j button
this method initializes j menu item orden compra
this method initializes j menu item orden
this method initializes j menu item
this method initializes j button modificar
this method initializes j scroll pane
this method initializes j menu item orden
this method initializes j menu item
this method initializes j menu item
this method initializes this
this method initializes j button eliminar
this method initializes j jtool bar bar
this method initializes j button nuevo
this method initializes j button
this method initializes j button buscar
this method initializes j button delete
this method initializes j button update
this method initializes j button guardar
this method initializes j text field cantidad
this method initializes j button salir
this method initializes j text field total
this method initializes this
this method initializes this
this method initializes this
gets the field
this method initializes j button ok
this method initializes j button cancel
this method initializes this
this method initializes this
this method initializes this
this method is called when the user selects the
at startup create and show the main frame of the application
load the configuration file
retrieves the object that is associated with this container
registers a factory for the given factory
register the service
returns a message for the given key
binds the service to the service
returns a localized message for the given locale
get the resource bundle for the given file
registers a component implementation for the component
checks if the component is implemented by the component
adds a component factory to the container
returns a list of all instances of the given key
retrieves the instances of the application instances
makes the component available for the component
close the event handler
called when the error occures
notify listeners that the event has been completed
start the event
called when the timeout is timeout
start the event
adds a list of channels to the channel
removes a member from the list
updates the display of the display
returns the name of the bundle
returns the background color of the component
reads the video size from the given video size
returns the configuration
returns crop height
returns the crop left
returns a album info for the current resource
returns the preferred crop
returns the album path
returns crop crop
returns the number of images in the image
returns crop width
returns the scale parameter
returns the filter
returns the items per page
returns the frame
returns the height of the image
returns the content of the file
returns the resource that this resource is managing
returns the path to the resource path
returns the value of the specified path
returns the height of the
returns true if the given resource is required for this
returns the width
returns true if the image contains a prolog
returns the quality of the current user
returns the render mode
returns the scaler image
returns the title of the title
get the value of thumb info
returns the thumbnail
save changes to the current project
returns the thumbnail path
returns the thumb param
returns the width of the current image
returns the current zoom level
sets the size of the image
returns true if the given float is equal to the same value
returns the thumbnail thumbnail for the given resource
sets the zoom level
runs the test
returns the test local service local service
test the
sets the date of the successful server
tests the successful
test the helper method
test of get service method of class edu
test the
returns the message
test
test inner class
returns a local name for this class
this method is called to notify the class that the test case
runs the test
runs the test
runs the test
adds a term to the list
clears the map
sets the category
checks if the category is a category
returns a string representation of the category
test method for
tests if the given input matches the input
returns the time in milliseconds since the last time the file was
appends the specified code hash code to the current
append the given value to the internal hash code
append the code hash code code of the code value code
append the code hash code code of the code value code
append the code hash code code of the code char code
append the code hash code code of the code byte code
p appends to the code builder code the comparison of
append the code hash code code of the code float code
p appends to the code builder code the comparison of
append a code hash code code for the code boolean code
append the given array of objects to this code code
append the given array of code long code array to the end
append the given array of code this code array
append the given array of shorts
append the given array of code char code array to this
append the given array of bytes to this array
append a code hash code code for a code double code array
append the given array of floats to this
append the given array of primitive code to this
returns the hash code
transforms the given word in the current dictionary
resolve the given entity
append the code hash code code of the code double code
returns the html representation of the html representation of the
returns the html representation of the html representation of the user
returns the html representation of the html representation of the
verify the password of the password
returns the display name of the owner display
runs the application
lock the lock
returns the bounds of the bounds of the image
adds the listener to the collection of listeners who will
adds the listener to the collection of listeners who will
clears the selection
deselects the item at the given zero relative index in the receiver
deselects all selected items in the receiver
returns code true code if the receiver is editable
returns the number of items contained in the receiver
returns the height of the item which is currently displayed
returns the selection which is the receivers value
returns the zero relative index of the item which is currently
returns the receivers text which is the string that the receiver will
returns the height of the text
returns the maximum number of characters that the receiver is
removes the item from the receivers list at the given
removes the items from the receivers list which are
removes the contents of the specified string
removes all of the items from the receivers list
selects the item at the given zero relative index in the receivers
sets the editable state
sets the receivers items to be the given array of items
sets the selection
sets the receivers text
sets the maximum number of characters that the receivers
sets the number of visible items
returns the bounds of the image in pixels
this method initializes grp text decorator
this method initializes cmp
this method initializes grp example
this method initializes
this method initializes
this method initializes
this method initializes
creates the cmp example
this method initializes cb task tag
returns the provider
returns the task tag
returns the task tag provider manager
returns the provider that is used to identify the provider
this method initializes this
this method initializes sash form
this method creates the cmp navigator
creates the cmp editor
this method initializes grp example
this method initializes cmp
this method initializes cmp
returns a list of the xml elements
returns a list of the xml elements
returns a list of all the objects that are created
returns a list of all the of the given class
returns a list of all the xml elements
returns a list of the xml elements
returns a list of all the xml elements
returns a list of all the xml elements
returns a list of the xml elements
returns a list of all the xml elements
returns a list of all the xml elements
returns a list of all the statement instances
returns a list of all the type names
returns a list of the given
returns a list of all the xml data
returns a list of all constraints
returns the database name
returns the schema names
returns the
returns a list of all the
returns the
returns the contents of the table
returns a list of all data items that are exported in the
returns the meta data for the given table
returns the
rename a table
returns a list of all the statement objects
returns a list of all constraints
returns the contents of the table
returns a list of the xml elements
inserts a table into the table
returns a list of all the statements that are created by this
sets the attribute name
sets the attribute that is used to sort the
compares the attributes of the object with the given name
returns the value of the attribute specified by the attribute name
drops the table
sets the precision
sets the scale
creates a table
sets the table name
counts the number of children of the given node
creates a new instance of database sequence
this is the entry point method
display the card selected card
plots the configuration file
sets the version of the version
returns the error code
resets the server
returns the card info
returns a string representation of the parameter
sets the led
this method is called by the device when the device is selected
get a list of device names
returns the status of the card info
brings up the shell to front
prepares the mask for the given
registers the given with the given id
registers the given with the given id
returns the image for the given input stream
shows the suggestion dialog
sets the widget factory
sets the keyboard layout manager
sets the translation manager
shows the about dialog
sets the resource manager
sets the window manager
sets the application properties manager
convert the given input stream into the xml representation of the
removes the last element from the list
notify listeners that a has been
inserts the specified element at the tail of this queue
inserts the specified element at the tail of this queue if it
clears the queue
start the server
starts the channel
stops the connection
initializes the path
returns the path to the view
returns the path to the view
adds a new node id to the list
adds a new node to the list
this method is called when a tree node is received
reset the proxy proxy to the proxy proxy
sets the value of the given property
returns the environment
returns the name of the
returns the groupname
compares the specified object with this role principal
compares the specified object with this principal
compares the specified object with this group
encodes a byte into a string
closes the connection
sets the driver
disconnect from the database
sets the data source config value for this ws data source config
closes the given sql statement
finds the user principal by the user
close the statement
sets up the fixture for example open a network connection
tears down the fixture for example close a network connection
returns true if the is
this method is called when the user selects the challenge credentials
close the database connection
check if the request matches the given request
returns the login attempts
returns true if the user can authenticate the specified request
returns true if the user is authorized to be authorized
returns true if the request type matches the given request type
checks if the given method matches the given method
checks if the request is a valid request
process the start tag
returns the uri of the
sets the
returns the request request for the specified request
sets the method value for this
add a method to the list of methods
sets the password value for this
sets the url value for this
sets the token value for this
sets the username value for this
destroy the servlet
checks if the user is allowed to be used
p this method is called to release the
sets the login page value for this
sets the login error page value for this login report
this method is called when the user disconnects the credentials
check if the user can accept a user
sets the client digest value for this client
returns the maximum number of attempts allowed in the login
sets the maximum number of attempts allowed attempts to login
sets the c nonce value for this merchant item attributes
sets the realm name value for this auth request
returns true if the request is in the request
disconnects from the database
checks if the given username matches the given domain
sets the nc value for this
sets the default domain value for this
checks if the given domain matches the given domain name and password
sets the nonce value for this public message
sets the constraints of the
sets the domain manager
returns a string representation of the object
returns the name of the
checks if the given domain matches the given domain
checks if the given domain matches the given domain
returns the digest server digest for the given username and password
parse the authentication token
returns the digest server digest for the given server digest
returns the user object associated with the specified user name
setter for property match on
returns true if the user is a member of the user
checks if the user is allowed to access the given user
checks if the user is allowed to access the given principal
checks if a user is a member of a user
adds a constraint to the
adds a constraint matcher to the domain
adds a constraint to the
adds a constraint matcher to the group
adds a matcher to the given type
checks if a user is in the user role
returns true if the user is in the user role
setter for property data source config
sets the user password col value for this user profile
sets the join table value for this
sets the user username column value for this user profile
sets the join user column value for this
sets the group table value for this table
sets the role table value for this
sets the user table value for this user
sets the join group col value for this
sets the group name col value for this group
sets the join role column value for this join type
sets the role name column value for this user profile
returns the detail table
returns the detail table
returns the value of the code lt verify gt lt gt code
finds the sample attribute of the given collection
calculates the total of the series and sends a
this method is called by the servlet container to initialize the
convert the given float to a float value
set the endpoint address for the specified port name
returns the capacity of this code code
append a string to the end of the list
appends the given string buffer to the buffer
appends the given code char code to the end of this data
appends the given character to the buffer
shrink the
returns a string representation of the buffer
returns a string representation of this object
reads the next token from the input stream
returns the next mark
reads until the next character is reached
skips over and discards code n code bytes of data from the
returns the line number of the line
skips the given character
returns the next character in the input stream
returns the line number of the line
escape character sequences
sets the strategy to be used to display the given
returns the strategy used to validate the strategy
returns a short description of the servlet
returns true if the given line is a line of
creates a component for the specified request
sets the category
adds an item to the list
returns a new event listener
creates the hierarchy item for the hierarchy adapter
selects the item in the
returns a list of items in the list
create a new member navigation handler
returns true if the component is visible
returns the on the current location
sets the visibility of the panel
returns the hierarchy item that is used to edit the handler
sets the dirty flag
finds the hierarchy for the given hierarchy hierarchy
returns the member extension
request a request to be posted
deletes the deleted file
test the of the
returns the selected axis
returns the selected
sets the selection
sets the selection
returns the olap model
returns true if the axis selection is dirty
returns true if the selection is dirty
returns the extension
sets the value of the axis selection dirty property
sets the selection state
the
validates the category
removes the selected code from the selection
returns the deleted
sets the hierarchy item click handler
sets the deleted state of the collection
creates a new table model
finds the hierarchy item hierarchy hierarchy hierarchy hierarchy hierarchy hierarchy
generate a map of all the mdx objects
generate a map of all the mdx objects
returns the of the
called when the column is
called when the row is selected
called when the beginning of the beginning of the beginning
called when the end of the parse is finished
returns the number of
returns the name of the member
returns the member of the member
returns the default member
returns the dim type
gets the value of the dim unique name property
returns the number of settings
returns true if the shared dimension is shared
returns true if the dimension is visible
returns true if the stream is read only
returns true if the portlet is virtual
sets the members
sets the mdx query
returns the caption for the component
sets the default member
sets the dim type value for this
returns the mdx query
sets the value of the height unique settings
returns the children cardinality
sets the dim shared value for this
sets the value of the height visible property
sets members of the members
returns true if the data member is a data member
sets the ordinal ordinal value for this
returns the ordinal of the axis
sets the is read write value for this
sets the value of virtual
sets the mdx query
gets the value of the place holder member property
sets ordinal ordinal
sets the structure
adds a level to the level
returns the parent level of this node
returns true if the member can expand the member
returns true if the is member of the
get a member by its name
sets the members
expands a member
returns the parent name of the parent name
expands the given members
sets the level
drill down the drill down
returns the depth of the current level
swaps the axes and the end of the list
this method is called when the user selects the
returns the scope of the given scope
sets the visibility of the visible properties
creates a new member expression
handles the cell data
returns the dimension of the component
returns true if the given position is sortable
sets the parent of this node
returns the hierarchy level hierarchy of this hierarchy
returns true if the value is calculated
returns the number of unique settings
this method is called to make the levels of the levels
sets the default
adds a hierarchy of the hierarchy to the hierarchy
adds a property to the
returns the property value for the given xml tag
returns the name of the caption
returns the properties map
returns the number of columns in the table
drill down the drill down table
returns the custom rollup settings
test if a given member is in the formulas in the formulas
returns the name of the sub name of the folder
returns the key column name
gets the name of the column name
returns the child of the given member
returns the ordering property
returns the unique name of the sql statement used to generate sql
returns the dimension for the given member
sets the custom rollup settings
sets the database type
sets the hierarchy hierarchy
sets the column name
returns the argument of the call at the specified call
sets the name of the column name
sets the ordering property
returns the level of the child level
generate a for a category
returns the parent level
sets the level level
sets the parent level
returns the query
returns the query adapter
returns the default dashboard url
sets the default dashboard
returns the member exp for this object
returns the string representation of the given member
creates a new member of the given list
creates a call function
returns true if the given object can handle a member call
returns the object that is currently being used by the datasource
returns the datasource with the specified name
sets the full name of the full part of the name
rebuilds the tree table
accepts a visitor
get jdbc datasource properties
get jdbc jdbc datasource properties
deletes the user roles from the database
sets the xml parameters to the given xml document
checks if the user exists in the database
get jdbc datasource
returns the code code property
returns the url to the specified request url
returns the list of all the properties that are supported by this
sets the provider map
clone the object
deletes the datasource from the database
removes the specified action from the list of items
exports the report
returns the resource string from the resource bundle
returns the resource string for the resource
returns a string from the resource bundle
this method is called when the user selects the dashboard
returns the path to the context of the given path
returns true if the current session is a valid session
returns the temp directory where the user should be uploaded
returns the jasper report of a given path
deletes a datasource object from the database
returns true if the tab is hidden
checks if the given path is in the dashboard program
adds the analysis to the dashboard
removes the analysis from dashboard
returns the average distance in the cluster
returns the distance between the
sets the distance threshold
returns the number of clusters
sets the number of clusters
returns the level of the policy
sets the level
check the block for the given file
run the program
write a message to the writer
reads the given uid from the given uid
returns the parent folder
returns the name of the path to the specified path
initialize the file
puts a new element into the database
sets the context
removes the specified key from the content
returns true if the uniform bit is set
returns the value for the specified key or null if not found
sets the uniform value for this
handle the given element
returns the context of this context
creates a unique id for the given prefix
returns the distance between the point and the point
sets the parent of the view
sets the name of the channel
returns the distance between the point and the point
returns true if the value is max
returns the center of gravity of the gravity
returns true if the value is smaller than the minimum value
returns the parent container view
compares this object with the specified trace for order
returns the names of the annotations
returns the root of the tree
returns the annotation associated with the specified name
compares this tree to another
sets the orientation of the orientation
load attribute name
sets the units
convert a value to a double
returns the source of the source document
returns the
returns true if the color is
returns true if the color is a color
returns the color of the annotation
sets the
returns the gravity of gravity
returns the icon for the specified resource
returns the prefix for this
returns the icon for the given element
returns the brush
returns the current context
sets the final state of the
sets the current context
returns the current brush
returns the source format of the current trace
returns the definitions definition
returns the target format of the target
adds a trace to the fork
returns the format of the canvas
gets the specification specification specification
sets the specification specification
returns the bounds of the trace
returns true if the latency is
returns the id of the given prefix
returns the timespan of the end of the time interval
sets the to string
sets the from attribute of the object
returns the index of the specified channel name
adds a new trace to the list of
sets the document id
returns the for the specified channel
creates a container view container
returns the id of the document
removes the current from the tree
sets the x coordinate of the channel
sets the y value of the y axis
returns the channel for the given channel name
the of the
returns the angle between two vectors
returns the distance between this segment and the specified
removes all the from the tree
sets the
returns the content length of the content
returns the config
launch the given command line
resets the color to the initial state
adds all elements in array to this list
returns the maximum index of the value in the array
returns the maximum value of the current element
returns the minimum value of the element
returns the minimum value of the interval
returns the sum of the sum of the mixture distributions
returns the mean of the data in the dataset
this method initializes this
this method initializes j list
returns true if this content is empty
log an exception
reloads the current path
applies the transformation to the current transform
returns the index of the point at the specified point
sets the value of the specified channel
moves the source code points code to the next
adds a block of blocks
sets the current player
returns the next player
returns the piece at the given location
returns true if the given point is empty
returns the size of the list
returns the color of the current color
returns true if the has been changed
closes the dialog
returns a string representation of this object
closes the dialog
compares this object with the specified object for order
compares this object with the specified object for order
creates the query combo box
updates the headers of the header
gets the
sets the impl
returns the content type of the content type
returns a mime part of the mime part
checks if the given code block code is a signature
checks if the given mime type is a valid mime type
returns the encryption password
returns the type of the encryption
returns a key manager instance
returns the alias for the display alias
creates a new
create an instance of
returns the encryption status of the given mime type
returns the test manager
sets up the test
returns the encryption type
resets the
returns the alias for the given key
returns the key manager instance
sets up the fixture for example open a network connection
initializes the key store
returns the certificate associated with the certificate
sets the certificate to use for the certificate
sets the certificate chain
returns the key
returns the encryption type
sets the key
returns the alias for the given key
returns the alias for the given key
returns the encryption password
sets up the fixture for example open a network connection
returns the type of the encryption
returns the display alias for the user
sets the display alias
create an instance of
creates a new key manager
checks if the given mime type is compatible with the given
returns the key bundle
sets the
returns the encryption password
returns the alias for the principal
returns the public key alias
returns the alias for the given key
sets up the fixture for example open a network connection
create an instance of
creates a new
returns the alias of the
returns the string representation of this object
returns the value of the given number
calculate the contracts
calculate the contracts
creates a new object
deletes the object
update the object
creates a new object
deletes the object
update the object
creates a new object
deletes the object from the database
update the object
creates a new object
deletes the object from the database
update the object
returns true if the current is controlled
returns true if the is controlled
sets the pawn
returns the pawn of pawn
returns the direction of the sprite
gets the next move
starts a game
restarts the game
runs the
resets the game
returns true if the controller is human
adds a new element to the list of tick marks
returns the x coordinate of the cell
creates a new
removes a element from the list of
returns the y coordinate of the cell
adds a new game element to the game
returns the collision radius
removes a game element from the list of game elements
returns true if the maze is finished
sets the bonus type
sets the controller for the controller
returns an enumeration of all the game elements
returns the image for the given pickup
the next move
adds a player to the players list
returns the image for the given image
removes a player from the players list
returns an image of the given image and image
get the images for the given image
returns the player with the given index
begin user doc
returns the number of players in the list
this method is called when the wall moved
get value from cache
checks the cell and repaint the new cell
invalidates cache cache
this method is invoked when the cell is changed
sets the number of
returns the start point of the player at the given index
starts the game
returns the start of enemy
this method is invoked when the game is moved
print a string and then terminate the line
sets the speed of the crane
print a string and then terminate the line
returns the x coordinate of the cell at the x coordinate
creates the views
returns the y coordinate of the y coordinate
registers a view for a view
unregisters the given class from the view
returns the view for the given element
this method is called when the user selects the
this method is called when the user selects the
configures the shell
run the
adds a resource to the map
returns the resource associated with the specified key
returns the action for the given action
sets the action
performs the filter against the filter
checks the filter module
this method is called by the code code method
check the data store
checks if the given condition exists
reads the object from the given file
returns an iterator for the current state of the map
adds a new object to the repository
remove an object from the registry
removes an object from the list
adds a comparison to the given id
returns true if the given id is valid
returns true if the specified object is a
returns the object that is associated with the given id
adds a filter to the filter list
adds a resource description to the list of resources
returns the conflict definition for the given resource
sets the accept accept value for this
returns true if the should be accepted
returns a list of all the source types
returns the condition object for the given name
returns a method object for the given name
returns the filter with the specified name
p resolve selectors
returns the
returns the
returns the
add a method to this class
interprets the current state of the query
interprets the current object
adds a new expression to the end of the list
moves the selected one to the selected one
interprets the expression
returns the right argument
sets the filter argument
this method is called by the digester to perform the
returns the right argument
sets the filter argument
filter operator filter
checks if the given source is in the source file
returns true if the source and source sources are not found in
sets the column
sets the byte position
returns the byte position of the current entry
this method is called to load a new
resolves all references to references
this method is called by the class to perform the processing of
resolves references to references to references
resolves all the references to the filter module references
compare two parameters
consumes the next token and consumes it
this method is called when the user selects a new line
make a token with a token
resets the text to the beginning of the text
adds a type to the list of datatypes
returns the type of the given type
returns the output string
adds a new to the
run the process
load properties from a file
stores the properties of the properties file
stores the properties into the properties file
adds a to the
add a new filter to the file
add a method to the list of the
add a method to the set of
adds the formal parameters to the given parameters
adds a filter to the filter
adds the filter to the
add a new and to the end of the list
add a new or operation to the list of the last
adds a vector of last to the current time
add a filter operator type
add a filter to the
add a matching part to the given matching line
adds a matching type to the repository
add a new part to the table
adds a type to the list of datatypes
compute the type of this expression
add a selector to the list of the
adds a filter to the output file
add a selector definition
adds a binding binding
add a binding for a method
add a filter to the
add a filter module name to the list of
adds a compiled to the repository
adds a new file to the
add a new embedded embedded embedded embedded embedded embedded embedded
adds a new labeled to the
adds a labeled reference to the
add condition reference to a
add a new method reference
adds a new member to the
finish the filter
tests the left outer join query
tests the left outer join query
this method is called by the class to set the given
returns the of the given class
select the accessibility
invokes the method with the specified arguments
returns the value of the field
finds the methods that are not found in the class
sets the value of the given field
selects the given constructor
this method is called when the user selects the field
performs the actual processing of the current
this method is called by the
helper method to make sure that the field is
log the given string
logs the current level
this method is called when an element is matched
escape the given text in the text field
the given date in the database
print the string to the buffer
initializes the key stroke
returns the selected row data
returns the selected row index
sets the selected index
returns the current file in the table
returns true if the parent is selected
sets the base directory
returns an initiliazed instance of form component
destroy cleans up the application
creates a new instance of
this method initializes form
returns an initiliazed instance of form certificate component
returns an initiliazed instance of ok command component
returns an initiliazed instance of string item subject
returns an initiliazed instance of text field iterations component
returns an initiliazed instance of string item component
returns an initiliazed instance of form component
returns an initiliazed instance of choice group component
returns an initiliazed instance of string item string before property
returns an initiliazed instance of dump file command component
returns an initiliazed instance of string item string after
returns an initiliazed instance of screen command component
returns an initiliazed instance of item command details component
returns an initiliazed instance of text field iterations component
returns an initiliazed instance of back command component
returns an initiliazed instance of choice group component
returns an initiliazed instance of choice group chain component
returns an initiliazed instance of back command1 component
returns an initiliazed instance of string item cert version version
returns an initiliazed instance of string item cert serial
returns an initiliazed instance of string item cert algorithm type
returns an initiliazed instance of string item cert cert requirements component
returns an initiliazed instance of string item cert not before component
returns an initiliazed instance of string item cert not after component
returns an initiliazed instance of string item cert subject
returns an initiliazed instance of string item cert certificate factory
returns an initiliazed instance of string item cert data signature function
returns an initiliazed instance of string item public key key
returns an initiliazed instance of string item public key factory
returns an initiliazed instance of form data component
returns an initiliazed instance of string item data component
returns an initiliazed instance of back command2 component
returns an initiliazed instance of reader form component
returns an initiliazed instance of string item reader alert component
returns an initiliazed instance of item simulated command component
returns an initiliazed instance of item simulated write command component
returns an initiliazed instance of item command read component
returns an initiliazed instance of item command write code
returns an initiliazed instance of back command reader component
returns an initiliazed instance of back command1 component
returns an initiliazed instance of ok command edit component
returns an initiliazed instance of text field component
returns an initiliazed instance of back command writer component
returns an initiliazed instance of writer form component
returns an initiliazed instance of string item1 component
returns an initiliazed instance of cancel command component
returns an initiliazed instance of spacer component
returns an initiliazed instance of string component
returns an initiliazed instance of ok command component
returns an initiliazed instance of back command component
returns an initiliazed instance of text field signature uri component
returns an initiliazed instance of item command component
returns an initiliazed instance of ok command1 component
returns an initiliazed instance of back command2 component
returns an initiliazed instance of string component
returns an initiliazed instance of text field chain uri component
returns an initiliazed instance of choice group entry component
returns an initiliazed instance of item command show component
returns an initiliazed instance of back command3 component
destroy must be destroyed
returns the of the current
returns the of the current
adds a line line listener to the line
adds a listener to the end of the line
returns the line of the line
returns the line of the line
generates a factor for the given object
returns the current
adds a new to the
this method is called when the user selects a new
sends a message to the server
tests the normal operation
returns an iterator over the elements in this collection
returns the default column
reloads the currency
gets the value of the property
returns true if the clipboard has the clipboard
sets the clipboard
this method is called when the user wants to modify a new
reloads the current status bar
sets the active state of this code code
reloads the current status of the server
returns the of the
save the to the database
returns true if the image has been loaded
returns the fees
sets the fees
sets the url of the image
sets the value of shipping locations
returns the additional fees
sets the additional fees
returns true if the of the are linked to the
this method is used to determine if the application is a threaded
update the version information
returns true if the update information is updated
returns the url of the
returns the url of the
adjusts the consumption of the currency
revokes the given account
returns the url of the token information
sets the toolbar
creates a header panel
shows the
show the popup menu
returns the node that is the first child of this node
starts the process
appends the given character to the end of the list
add a new group to the current group
returns the character that precedes this pattern
returns a new character and returns it
returns a new character or code other code and returns it
sets the bits of the given table
returns the index of the given sequence in the sequence
returns the index of the sequence of the given sequence
returns the index in the sequence of the sequence
returns the number of occurences of the given sequence
removes the given sequence from the current position
returns the value of the given sequence as a string
replace the replacement string with the replacement string
replaces the replacement string with the replacement
trims the given string from the sequence of sequences
trims the leading of the given sequence
trims the sequence of trailing spaces to be trailing the last leading
collapse a sequence of characters
collapse a sequence of characters
adds a parameter to the map
returns the bounds of the series at the specified series
returns the series of series style
returns the
returns the panel panel
sets the
sets the panel password
returns the
sets the
gets the value of the property
returns the
sets the
sets the
returns the
sets the
sets the web password
returns the digit of the digit in the state
gets the value of the phone property
sets the digit place state
sets the phone number
compares the specified control panel with the given password
paint the image
returns the number of security zones
returns the id of the
sets the id
sets the selected security zone
add camera to camera
returns the safe state of the state
remove a camera from the
returns true if the given id is pan
returns true if the pan id is in the current perspective
sets the state of the state of the alarm
returns true if the given key is in the past
decreases the current station
sets the password to the given password
returns the state of the state
returns the cam password
returns true if the connection is idle
returns true if the current state is monitoring
returns true if the application is emergency mode
returns true if the alarm mode is in the alarm mode
this method is called when the user modifies the state
turns off the current state of the
resets the web service
this method is called by the server to remove the
this method is used to determine if the current state is away
this method is called when the is activated
runs the thread
this method is called when the user selects the server
reset the
returns the cam password
sets the password to be used for the password
invoked when an action occurs
this method is called when the user is destroyed
executes the
this method is called when the server is not destroyed
check if the number of the are valid
this method initializes components
creates a new folder and adds it to the database
makes the display active display
returns true if the given row index has changed
registers a new tag with the given id
returns the path to the database
returns the path to the page path
creates a new fragment data object
exception thrown when a error is encountered
sets the package entity property
sets the package api
sets the directory where the source directory is used to
sets the file property
sets the value of the web xml file
sets the value of the java version
sends a level to the server
returns true if the recursion recursion recursion
tests the functionality of the jsp
sets whether or not the recursion should be used for use with
adds a directory to the directory
returns the path to the file to the file system
sets the check only
returns the check only
tests that the
tests the equality of this code text code
returns the line of the beginning of the line
compares the specified object with this text field
returns the fits part fits in the given length
returns true if the trailing line is positioned
test that a jsp line is appended to the jsp
tests the correct directive directive
tests trim and trim
creates a new file
this method is called when the file is finished
test method for
print the file name
test trim left
tests the bug reported by the
test the trim of the string
tests that the starts with a string is not supported
assert that the given array of strings are equal
returns the last element in the list
returns the hash code for the given code
creates the action url
creates a new render url


sets the id value for this
sets the project id value for this project
sets the date order value for this
sets the size value for this
sets the released value for this
sets the date submitted value for this report job
sets the download url value for this download request
set the value related to the column status
set the value related to the column type
set the endpoint address for the specified port name
sets the target id value for this
set the value of field
set the value related to the column owner
setter for property view state
sets the type value for this
sets the access min value for this access history
sets the possible value for this
sets the filter string value for this filter
sets the value for this project
setter for property reporter
sets the valid regular value for this
sets the view state value for this model
sets the access level r value for this access level type
sets the access level value for this access flags
sets the project value for this project
sets the length min value for this
sets the length max value for this
sets the priority value for this
sets the advanced value for this
sets the severity value for this
sets the display report value for this report query
sets the status value for this
sets the display update value for this update
sets the reporter value for this
sets the display resolved value for this
sets the handler value for this
sets the display closed value for this
sets the resolution value for this
sets the require report value for this report
sets the attachments count value for this transaction
sets the require update value for this update
sets the notes count value for this
sets the require resolved value for this
sets the require closed value for this
returns a new object that is a new reference to the
set the value related to the column project id
setter for property priority
sets the severity value for this
sets the os build value for this
setter for property
sets the total value for this
set the value related to the column handler
sets the projection value for this service
setter for property
setter for property resolution
sets the fixed in version value for this merchant item attributes
sets the steps to value for this merchant item attributes
sets the additional information value for this
sets the attachments value for this admin customer
setter for property relationships
sets the notes value for this business data
sets the custom fields value for this custom fields
get jndi context context
initializes the session bean
get a property
starts the
creates a new instance of the given base location
returns the file name of the file
sends a notification message
stops the
sends a mail notification to the server
this method is called when the user presses the end of the
sets the parent of the tree
adds a new node to the end of the list
pops the top node of the stack
saves the organizations
sets the name of the resource
sets the res org
sets the email
sets the value of the res link property
sets the name
sets the bio bio
sets the org name
returns the name of the resource
sets the collaborating organizations
gets the value for the res org
sets the org type
returns the email address of the email
sets the type
returns the
sets the org contact
returns the bio bio of the document
sets the collaborating years
sets the org
sets the search field
sets the types
sets the org country
sets the description of the
sets the name of the field to search for the field name
sets the keyword keyword
gets the value of the name property
sets the field search field
sets the org description
gets the organizations
sets the org home page
gets the type
login to the login module
gets the years
adds the type to the
gets the org type
returns the collaborating outcome types
gets the value for org contact
gets the description
gets the org
gets the researchers org
gets the value of the org country property
gets the researchers email
gets the value for org keyword
gets the value of the org description property
returns the researchers pic link
gets the value for org home page
returns the researchers bio
gets the organization contact
gets the value of the organization category property
gets the value of the organization country property
gets the value of the organization keywords property
gets the organization description
gets the value for organization homepage
gets the collaborating organizations
gets the collaborating years
gets the value for related
returns the collaborating desc
adds a unique id to the list of unique id
returns the resolution of the link
returns the link to the organization
generates the link to the
finds the researchers
finds the collaboration entity in the collaboration model
this method is used to modify the
returns the view in the view mode
returns the value of the code field in the code property
sorts the table in the given list
writes the given set to the current row set
registers the given page
initializes the page
retrieves a special page holder for the given key
retrieves the label for the given key
this method is called by the factory when a class is created
returns the comment for the given uri
returns the icon for this entity
returns the name of the
resets the job to its initial state
returns a string representation of this object
resets the current value to its initial state
returns a string representation of this object
destroy the database
execute a command
initializes the connection factory
returns true if the connection is connected to the server
closes the connection
returns a string representation of this object
parse a flag type
resets the current state of the file
returns true if the file is uploaded
returns a string representation of the object
returns a string representation of the service
returns true if the metadata is allowed to be used
returns the number of in the
returns the argument id for the given id
get arg param id parameter
returns a string representation of this object
check if the job is still running
initialize the
initialize the map
returns true if the connection is connected
returns the jobs job for the job
checks if the given version number is a version number
returns the job id associated with this job
returns true if the transaction is held in the queue
returns true if the user is idle
returns true if the event is removed
returns true if the task is completed
sets the handler for the given handler
sets the handler for the
sets the handler
waits until the job is complete
returns a string representation of the job
returns a string representation of the object
this method is called to notify the server that the has
this method is used to execute a job
removes the specified cluster from the list of cluster
sets the log file
submit a job to the job
adds a new value to the queue
log the file info
returns true if the url is
sets the url to the url to the url
sets the url to the url to the url
stops the thread
returns the uriresolver that is used to resolve the uri
returns the unique identifier of the domain
returns the domain identifier
sets the domain id
returns the maximum length of the longest
returns the service impl
returns the unique identifier of the domain
sets the first name of the first element
sets the username
sets the last name
sets the password
returns the username username
returns the password
sets the old password
returns a rating for the given rating
returns the service impl
sets the new password
returns the value of the validated ratings
sets the password to be used when creating a new password
gets the value of the confirmed new password property
returns a list of all the ratings
returns the highest character in the domain
returns the maximum value of the
returns the service impl
returns the domain identifier
returns the domain identifier
sets the domain id
sets the domain id
returns the service impl
returns the external event
checks if guard condition is satisfied
returns the name of the state
build the transition list
returns the first name of the first element
sets the first name of the first first second
returns the external event
returns the name of the state
returns the last name domain
sets the last name
returns the name of the state
build the transition list
returns the external event
returns the name of the state
build the transition list
returns the external event
returns the external event
returns the name of the state
returns the external event
returns the external event
returns the external event
returns the external event
returns the external event
returns the maximum length of the longest
returns the maximum length of the longest
returns the service impl
returns the maximum length of the longest
returns the maximum length of the longest
returns the maximum length of the longest
returns the service impl
returns the maximum length of the longest
process a result set
returns true if the value is an error
process next row in table
returns the number of rows in the model
sets the number of rows affected by this
process a result set
process a result set
returns the number of rows in the table
prints the output stream to the output stream
executes the query
marks the transaction as marked as transaction
executes the given command
returns true if the transaction is marked as marked as transaction
mark the transaction as active transaction
returns true if the transaction manager is marked as marked as rollback
returns the connection manager
executes the given query and returns the result as a batch object
returns a new database action
executes the given query
close the database database
returns the default database manager for this database
returns the default database manager
adds a query to the query
add multiple statements to the list of statements
adds a statement to the list of statements
adds a batch query to the query
adds a table to the table
returns the condition where the condition is used to join
sets the where clause for this condition
returns a string representation of the current
returns the package name
returns true if this is a interface
returns the name of the object
returns the interfaces that are used for this class
sets the value of the interface property
adds a new interface to the list of interfaces
returns a new database action
adds a new interface to the list of interfaces
add interfaces super interfaces
close the database database
sets the comment
returns true if the comment has a comment
returns the access modifier
returns true if the interface is declared in the interface
sets the access modifier
returns the definition of the current definition
sets the abstract flag
returns true if the package name has package name
returns the package name
returns the type name
tests this type for equality with an arbitrary object
sets the interfaces
returns true if the user is public
returns true if the receiver is protected
returns a string representation of the package
sets the final attribute of the object
returns true if the package access is a package access
sets the qualified name of the type of the given type
returns true if the user is a private member of this class
tests this object for equality with an arbitrary object
returns the hash code of the object
returns the modifier
sets the access modifier
sets the static static flag
this method is called after the paragraph is hidden
this method is called when the line is
this method is called by the
this method is called by the when a tab is navigated
sets the value of the synchronized property
this method is called when the tab is selected
decrease the count of spaces in the given tab
appends the given object to the end of the list
appends the given text to the end of the buffer
returns true if this is native
append a line to the current line
append a line to the current line
append a line to the current line
returns the type of the
sets the transient flag
append a line to the current line
returns the type of the type
sets the value of the native flag
returns the type of the given package
returns true if the package name has package name
appends the specified object as a line to the current line
returns the package name
returns the type name
appends a new line to the current tab
returns true if the array is an array
returns true if the value is volatile
returns the method identifier
appends the specified object in the specified object to the specified one
appends a line to the end of the line
returns a string representation of the object
appends the given object to the current line
sets the dimension array
sets the value of volatile
appends the given string to the console
returns the package name
appends a line to the specified output
appends the given text to the given output
append the tab to the current tab
returns the field
returns the type of the method
appends the tabs to the current page
appends the given number of chars to the current
append blank lines to the current line
returns the package name of the package
append a blank lines to the current page
returns the name of the method
append the space to the space
appends spaces to the current space
starts the block of the given block
returns the type of the field
append a block to the end of the block
start a block of the block
end block
returns the super class name
starts the multi line comment
returns true if the field is an array
is this a class definition
ends the multi line comment
returns the array size
append a multiline comment
sets the value of the import full class names property
returns true if this is strict
sets the strict flag
returns true if the parameter has any parameters
sets the copyright comment
returns the object name
returns the interfaces implemented by this class
adds a new interface to the current thread
sets the initializer
adds a new import to the list of imports
adds a interface to the list of interfaces
adds a new parameter to the list of parameters
adds a new implemented interface to the list of interfaces
adds a new import to the list of imports
is this a class definition
is this a definition
adds a list of imports to this list
adds a new parameter to the list
returns the imports of this class
sets the class comment
sets the interfaces implemented
returns true if the property is a getter
adds a list of parameters to the list of parameters
sets the object definition
returns true if the exception has exceptions
adds a new field to the list
adds a new list of fields to the list of fields
adds a constructor to the constructor
adds a new exception to the list of exceptions
sets the value of the
returns the context of the context
adds the constructors to the list of constructors
adds a code exception code to the list of exceptions
returns the base service
returns the base class for the service factory
adds a method to the list of methods
creates an instance of class
adds all exceptions thrown by the given exception
returns the context
adds a list of methods to the list
returns the code block
returns the context
returns true if the is in the
sets the parameters
generates a new source
sets the exceptions
resets the state of the model
resets the cache value
check if the contents of the model is correct
returns the monitored object
returns true if the field has changed
sets the value of the attribute requires
resets the state of the field
resets the current state of the cache
gathers the imports of the definition
monitor a new monitor
returns a list of all imports
adds the specified component to the list of children
resets the state of all beans
generate the copyright of the buffer
resets all the values that have been made to the cache
returns true if the bean has a state changed
calculates the left right dimension of the given dimension
resets the cached value object to the specified object
returns the monitor for a given object
calculates the top of the stack
returns a list of all monitors
returns the code java
returns the left alignment of the left right corner of the left
adds a component to the layout
returns the top most facing component
returns the constraint that is the constraint
generates the package name for the current page
returns the size of the given component
lays out the container
calculates the y value of the given dimension
calculates the right right dimension of the given dimension
returns the setter access modifier
returns the size of the given component
removes all components from the container
generate the jsource code for the given class
sets the and offsets between two
removes the specified component from the layout
populate the resources
sets the component constraint of the component
invoked when an action occurs
initializes the menubar
exits the application
returns the icon for this icon
writes the definition of the current definition
returns the title of the resource
initialize the component
initializes the toolbar
initializes the panels
generate the code for the buffer
sets the window title icon
adds an action to the action manager
generate the code definition code for the code generation
returns the getter of the property
disable the action
invoked when the target of the listener has changed its state
enables the action
update the ui
generate the code for the code buffer code
returns the command manager
update the panels panel
returns the menubar for this menubar
returns the popup menu associated with the specified name
generate constructors for the given class
returns the resource manager
returns the title bar title
generate setters for getters
returns the toolbar
called when the user wants to load the state
generates the methods for the given code buffer code
initializes the command manager
this method is called when the contents of the content pane is
initializes the resource manager
generate the end of file buffer
sets the default cursor
returns the setter
sets the wait cursor
sets the window title
invoked when an action occurs
updates the ui and updates the buttons
creates a new empty selection manager
creates a check box with the given label
returns the imports of this class
resets the help text to the default
shows the dialog
hides the dialog
sets the help text
ensures that the given component is visible and clipped
returns the
sets the
resets the cancel button
sets the help text for the help page
returns true if the user has requested the cancel button
sets the text of the message
sets the text of the detailed text of the message
add a check box
sets the number of steps
increment the current value of the progress bar
sets the percentage complete of the progress bar
displays an error message
creates the split pane
test the method
sets the maximum length of the longest length
displays the specified error message
sets the maximum length of the fraction of the fraction
displays a confirm dialog with the given string
displays a confirm dialog
displays a warning
displays a warning dialog with a warning
displays the information of a message
initializes the content panel
initializes the resource manager
displays a dialog with the given information
displays a message in the chat window
returns the application icon
sets the padding value
sets the status label
sets the status of the status bar
sets the product name
sets the product version of the product
returns the string associated with the specified key
sets the padding of the fraction of the fraction spans
adds a resource to the map
adds a resource to the map
initialize the component
initializes the panels
sets the application
adds a collection of objects to the list of objects
adds the given object to the table
removes an object from the table
build the columns
rebuilds the columns of the table
parse the text
removes all the objects from the table
returns the object that is stored in the specified index
sets the objects
sets the objects to be used for the current object
adds the given object to the list of objects
sets the selected object
removes an object from the table
returns the index of the specified object in the table
returns the index of the given object in the list
returns a collection of objects in the table
adds a row to the table
refreshes the table data
returns the object that corresponds to the specified index
refreshes the data object in the table
rebuilds the columns of the table
returns the data for the given object
removes all rows from the table
refresh the table data
returns the current selection mode
sets the selection mode
refreshes the table data
returns a collection of all the objects in this model
returns the data for the given object
returns the most specific superclass for the specified column
sets the sorted sorted flag
refreshes the data object in the table
returns true if the table is sorted
returns the selected objects
adds a selected object to the list
select all the objects in the table
clears the selected status
returns the selected objects
adds a selected object to the list
clears the selection
select all objects in the model
returns the most specific superclass for all the cell values in the
adds the given component to the list of components
adds the specified component to the combo box
adds the specified component to the list of components
adds the specified component to the set of components
adds a new field to the component
this method is called when the component is added
resets the monitors monitors state to be stopped
checks if the state changed
this method is called when the user expands the tree
called when the tree selection changes
invoked when a node is collapsed
adds components to the list
copy the selected nodes
returns true if the state of the model has changed
resets the state of the state
adds listeners to the model
creates the card panel
returns true if the current state of the change
resets the state of the state
resets the state of the field
resets the state of the field
returns true if the field has changed
returns true if the field has changed
resets the state of the field
creates the split pane
returns the splash screen
returns the tree node renderer used to render the tree
removes the given directory from the
start the server
initializes the command manager
called by the command to perform the commands
initializes the content panel
initializes the look and feel
show the status
cuts the selected text
displays an error dialog with the given error code
displays an error with details
displays an error message
displays a confirm dialog
sets the format
displays a warning dialog
displays information about the display
returns the menu with the given name
returns the menubar for this application
writes the given record to the data stream
flush the writer
writes the raw data to the output stream
returns the location of the divider
returns the icon for this icon
returns the toolbar
returns the icon for the icon
returns the toolbar button
returns the toolbar at the specified index
returns the menu with the given name
returns the default application home
returns the default sax parser factory
checks if the given action is selected
returns the domain map for the specified domain name
sets the selected button
returns the name of the base of the base class
sets the selected menu items
adds a new property to the domain
adds the ok button to the dialog
adds a property to the domain
sets the selected menu item
adds a property to the domain
adds a property to the domain
adds a new property to the domain
sets up the fixture for example open a network connection
adds a domain to the domain
adds the invalid property invalid properties to the database
returns the selected node
stores the properties file in the database
returns the selected nodes
adds the panel to the panel
returns the xml representation of the given type
converts the given string into a string
returns the selected object
adds the panel to the panel
returns the title of the window
convert the given list of property values to the given list
convert the given float to a float array
convert the given list of to a list of strings
convert the given long list to a long value
adds the panel to the panel
convert the given list of string to a list of strings
sets the domain name to the domain
adds the current domain to the list
gets the application home property
p raises a property of the given property
returns the tree model
returns true if the type is valid
checks if the key is valid
resizes the panel with the given panel
sets up the test
load the current page
resizes the panel with the given size
returns the domain map for the specified domain name
adds the scroll pane to the scroll pane
returns the value of the property with the specified name
returns the constants
returns the property manager
returns the boolean value of a given property
returns the new property manager
sets the properties of this object
adds a table to the table
refreshes the provider
returns the value of the property with the specified name
returns the method with the given arguments
get property value
sets the value of a given property to a given value
returns the value of a property
performs the action
executes a method in the
returns the node with the given name
returns the type of the method
sets the object to be tracked
returns the value of the specified property
adds the text area to the label
returns the message
prints the stack trace of the exception
returns the character at the specified location name given a name
prints the stack trace of the exception
prints the stack trace of the exception
adds a label to the label text area
prints the stack trace of the exception
returns the char value of the specified property or null if the
pastes the clipboard into the clipboard
returns a new category with the specified name
configures the application
adds a text area to the text area
returns the character at the given position
requests that the focus request to the focus tree
returns the property value as a double
returns the double value of the given property name given a domain
test the properties
test the file path
returns a new category
returns a new category with the specified name
selects a node in the tree
returns the default value for the specified property
sets the default cursor
returns the double value of the domain
returns the category for the specified name
sets the divider location
configures the logging service
logs the error message
adds a text field to the label
returns the category for the given name
configures the
returns the value of the property with the specified name
sets the cursor to wait for the cursor
flush the log
returns the mapping filename
sets the window title
adds a text field to the label
build the xml object
returns the value of the given property code name code
binds a collection of objects to the collection
binds the object to the given object
bind a to the current session
bind a double to the query
bind a float to the current
binds the request to the specified value
returns the
returns the mapping filename
builds an xml element from the xml
shows the panel with the specified name
update the database
adds a text field to the label and adds it to the
returns the value of the specified property or code float code
creates an object in database
sets the default deep or not
update the database with the given object
creates a new transaction object
returns true if the object is persistent
load a persistent object from the database
returns the float value of the given property name given a float
updates the tree structure
begins a new transaction
adds a text field to the label and adds it to the
commit the current transaction
rolls back the transaction
removes the object from the database
get a collection of objects in the database
returns the value of the property as a code int code
get the objects of the given query
get the query for the given query
adds a label to the label
validates the transaction
returns the database database
returns the integer value of the specified property
closes the database
adds a label to the label
returns the value of the property as a code int code
returns the integer value of the property with the given name
returns the main list of main
returns the list of added list items
returns the list of removed objects
returns the value of the property as a long
creates a domain object based on the domain object
removes all the elements from the list
returns a list of all the condition that contains the given condition
finds the base object for the given base id
finds the domain of the given foreign key
returns a list of all the selected objects
closes the window
returns the long value of a given domain
find all rows in the table
deletes a condition
returns the value of the property as a long
saves the domain object to the database
sets up the fixture for example open a network connection
tears down the fixture for example close a network connection
checks if domain exists
mark the transaction as transaction for rollback
sets the version of the version
returns the value of the specified string as a string
returns the long value of the specified property
returns the date format
returns the time format
returns the current date
returns the identifier generator
resets the generator to its initial state
returns the class name of the generator class
creates an instance of the given class
executes the command
returns the default value for a property
p this method is called when the servlet is executed
sets the value of the attribute
executes the processing method
returns the command package name
sets the child context
returns the class of the specified request
removes the child context
returns the default value for the specified property
sets the value attribute of the context object
sets the internal flag to indicate the current state of the
returns true if this is a external entity
returns true if the key is mapped to the specified key
returns all the values in the map
adds a transition to the list of transitions
returns the value of a single property
cleans up the context
returns the name of the state
returns the embedded state machine that is used to handle the
build the transition list
returns the value of the given property given a string
returns the context view
returns the current state of the event
returns the state machine that is currently selected
returns the root transition
creates an instance of the given class
returns the current state of the transitions event
returns the current state of the list of active events
returns the topic factory for this topic
lookup the topic with the specified name
returns the current state of the transitions event
returns the queue connection factory
lookup a queue of the specified queue
returns the directory where the property file is stored in
handle the event
returns the preferred size of the component
commit the session
rolls back the transaction
creates a new
create an instance of
creates a new message
returns the name of the current state
creates a new object
creates a new object message object
called when the user enters the state machine
creates a new stream
creates a new text message
called when the user enters the state machine
this method creates a new text message
called when the user enters a new state
initialize the
starts the connection
returns the queue factory for the connection factory
get the queue connection factory
close the connection
returns the topic session
lookup the topic with the specified name
returns the session
returns the message queue facade for the specified service id
returns the value of the property
returns the message topic facade facade for the facade
returns the topic connection
returns the message topic facade facade for the specified
returns the class that is currently being processed
creates a topic publisher
returns the state monitor of the monitor
returns the message topic facade class
initializes the queue
creates a new topic subscriber
called by the framework when the message is received
closes the jms session
unsubscribes the subscription subscriber
sets the value of a property
resets the state of the monitor
initialize the
starts the connection to the server
validates the type
closes the session
returns a string representation of the object
returns the minimum value of the slider
returns the maximum value of the object
returns the class name of the class that this component is used
returns the session
returns the minimum length of the
returns the class name of the class that this component is used
returns the queue connection
returns the time in seconds to display the date
returns the date as a string
returns the class name of the class that this component is used
returns the title of the window
returns the minimum value of the field
creates a new queue with the specified name
returns the maximum value of the
returns the class name of the class that this component is used
returns true if the given file is in the file system
returns the value of the specified property
returns true if the given file is in the file system
adds a property to this node
returns a property with the given name
initialize the component
returns the read only property
returns a property with a given name
start a new element
end element of the current node
returns the value of the given property as a string
print an error message
reports a warning message
sets the reader
sets the left indent value for this line
sets the handler
create a new reader
returns the class name of the class
parse an xml document
start the document
this method is called to receive a character from the buffer
emit the exception
emit a fatal error
emit a warning
start a new element
this method is called when the end of the element is encountered
ends the document
sets the left margin
sets the reader
sets the handler for this handler
returns true if the dialog is a dialog
parses the
start the document
start a new element
end element
end the document
print error at error level
warning message
builds a map of attributes for a given map
creates a new instance of the xmlreader to be used for reading
returns the xml schema element
called when the state of the component is changed
called when the user changes the state of the
monitor the state of the monitor
monitor the given state
monitor a state monitor
monitor the state of the component
this method is called when the ok button is pressed
cancel the current frame
sets the right indent value for this
sets up the monitor monitoring
shows the dialog
show dialog
updates the state of the
checks if the string is a integer
displays an error dialog with the given error code
displays an error dialog with the given error
displays a confirm dialog
displays a warning dialog
displays information about the display
returns the height of the panel
increases the position of the current line
returns the width of the panel
sets whether the field is adjusting
performs the blocking tasks for the given task
performs the tasks of the task
compile the given path
compile the given path
returns a localized property enumeration for the given key
returns an enumeration of all lines with the given file
returns a new code operand code
remove the pool from the pool
add a new constant pool entry
add a constant pool entry into the pool
sets the value attribute of the object
returns the object value
returns the value of the attribute
returns the length of the bytecode
puts a value in the map
this method is used to generate the pool of entries
returns the dual dual dual type of this object
load a class by name
returns the name of the constant pool entry
returns a binary path for the given class
adds an entry to the cache
adds a new string to the end of the list
adds a new code code to the end of the list
returns a class with the given name
adds a field to the list
returns an enumeration of the interfaces
adds a field to the list
returns the parsed class
adds a method to the list of methods
this method is used to set the given
returns the parsed class
returns an enumeration of the interfaces
sets the value of the specified element at the specified index
returns true if the current element has a jump
sets the documentation
adds a code operation code to the end of the stack
adds a new class to the list of all the elements
returns true if the given handler is a handler
this method is called by the
sets the lib flag
returns the next operand
returns the file address of the classpath
add a new entry to the pool
add a new entry in the pool
adds a new code code to the list of operations
creates a new instance of the class
returns the index of the specified entry in the pool
returns an enumeration of all the entries in the specified entry
sets the name of the object
sets the replace flag
adds a line to the list of strings
returns the line of the given string
removes the current pool
checkin the connection
invokes the method with the given arguments
call this method to invoke the method
load a class by name
sends a message to the server
initializes the session
creates a new instance of similarity table
returns the current task index
this method is invoked when the user selects an object in the
sets the expression
evaluates the given code
load the repositories
sets the properties of this object
clears the properties
returns a new part of the part
decrypt a signed
the given key and returns the result
removes a repository from the repository
clears the attributes
adds a part to the
removes a part from the
validate the content of this content class
parses the list of dictionaries
resets the index of the
check if the given name is available
adds a job to the queue
compares two seconds
sets the x y coordinate of the point
sets the of the
returns the head position
returns the old position for the given
returns the new position of the given
add a byte to the end of the list
adds a step to the end of the list
adds a new step to the list
returns the object that matches the given oid
stores the character in the database
removes the from the world
removes the given object from the list of objects
returns the list of all players in the list
returns a char from the disk
this method is called by the distribution
sets the current world region
update the current world region
this method is called by the object when the game is
stores the database settings in the database
this method is called when the is
move the given point to the specified location
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
returns a connection to the database
returns the id of the
sets the id
gets the value of the name property
sets the name of the
gets the value of the surname surname property
sets the surname
gets the value of the property
sets the
sets the id of the user who owns this user
sets the name of the event
returns the password user
returns the start date event
sets the password user
sets the start date event event
returns the end date event
sets the end date event event
sets the rect clip
reads the next byte of data from the input stream
starts the application
test of get longitude property of class
test of to string method of class
test of get latitude method of class
test of get time method of class
called by the application when a midlet is destroyed
this method is called when the user wants to process a command
called when the user chart is connected to the chart
adds a mapping for the given index
this method is used to create the data part of the part
adds the categories to the list
adds the given model to the list of categories
adds the models to the model
clears the content of the content pane
sets the content of mol file
returns the output url
gets the content as mol file
shows the frame
hides the frame
sets the content of the editor
returns the document that is currently selected
returns the document
sets the content of the document
returns the magnification
returns the drawing area
activates the template tool
returns the event that was fired by the event
returns the source of the source
returns the position of the current position
returns a string representation of this object
returns the next token
returns the current token
returns the errors that occurred
sets the locale to be used for this component
returns the current locale
returns true if the current state is currently navigated to the current
returns true if this is a final state of the
returns the errors that occurred
adds a menu item to the menu
adds a filetype dot extension to filter against
returns the review
saves the current document to a file
parse the comment id
remove a comment
adds a review to the model
removes a review
clears the model
returns the next comment id for the given author id
returns a new comment for the given id
shows the no tool wizard
checks if the given object is a valid review
checks whether a set of matches matches the given string
creates a new annotation
handles the event of the
updates the group disabled state
adds a set of to the
returns the begin tag of the tag
returns the container composite
adds a field editor to the list of editor widgets
clears all the models
checks if the given object exists in the list
returns the file containing the of the file
returns the review id
adds a new code object code to the internal list
removes a code code from the list
sets the open state
returns the wrapped review
switches to the current perspective
adds a new review to the list of proposals
remove a review wrapper
clears the plugin
refreshes the tree viewer
adds a review wrapper to the tree
deletes the given instance
expands all the elements in the tree viewer
collapses all sub elements in the list
sets the content of the viewer to the given code
sets the search text
sets the column
resets the replies to the given code replies code
refresh the table
refreshes the replies
resets the current document to the current page
filter the filter
sets the configuration property
clears the view
reads the comments from the document
returns true if the current record is
adds a reply to the list of the text
revert the current state of the current
returns the current content of the current element
sets the property configurations configuration
fills the given list with the given code
invoked when a component is deactivated
returns the content of this object
converts a string to a string
refresh the background color
this method is called by the provider to save the content
returns the saved flag
sets the variable
gets the value of the reply author property
returns the text of the reply text
this method is called when the user selects the ok button
cancel the cancel button
returns true if the current archive is valid
returns the value of the property
returns the id of the given id
returns a comment for the given author id
returns the id of the given user id
returns the project name
validates the page contents
returns the current level of the current log level
returns the icon for the given key
checks if the given review is in the database
validates the page
checks if the path is valid
deletes a review file
creates a new column table
returns the adapter for the specified column
remove the comments for the given code review code
refreshes the list of all the
opens an editor for the given editor
this method is called when a comment is found
cleans up the editor references
this method is called when a part of a part of a
the given part of the part of the given part
this method is called when the part of this part is changed
sets the focus to the focus
adds the filter selection
removes the filter selection
focuses the filter
selects a comment
selects the next comment
post an article to a facebook user
returns the connection status
sets the url of the anchor
sets the text
save the given xml file to the xml file
load a game configuration
walks the tree
constructor for primary key
constructor for primary key
sets the value for this
sets the num tel value for this
sets the cb num value for this merchant item attributes
sets the cb value for this vo
sets the cb valid value for this
sets the cb valid value for this
set the value related to the column
constructor for primary key
sets the stock value for this
sets the stock value for this
sets the value
constructor for primary key
sets the value for this
sets the
constructor for primary key
constructor for primary key
constructor for primary key
set the value related to the column
set the value related to the column
constructor for primary key
constructor for primary key
constructor for primary key
returns the
sets the
sets the
sets the ingredient
constructor for primary key
sets the
constructor for primary key
constructor for primary key
sets the client id value for this admin customer
set the value related to the column date
set the value related to the column date
set the value related to the column
sets the value of code menu code
set the value related to the column
constructor for primary key
sets the menu
constructor for primary key
calculates the center of the given set of the current
creates the selector
this method is called when an xml element is changed
handle the key released event
load the
updates the location of the specified node
calculates the angle between the given time and the given speed
puts a location into the location
initializes the nodes in the model
compares this node with another one
paint the tree
compares this group with the specified group
sets the model nodes
validates the location of the given location
initializes the nodes
compares this map with another map
paints the graph
initializes the layout
returns the radius of the circle
paints the circle
draw the circle
called when the setup button is clicked
returns the transition
sets the transition to be used for the
sets the toolbar buttons enable disable the toolbar buttons
updates the current node
runs the configuration file
runs the
enables or disables the menu
updates the view
this method is called when the user selects a
reads a property from the properties
dfs will re expand the given node
pastes the given into the current location
pastes the given into the current
compares this object with another name
checks if the given range is a range
packs the window and resizes the screen
packs the current window
adds an observer to the list of observers
sets the selected files
compares this object against the specified object
returns a hash code for this object
pastes the given into the current
pastes the given into the given coordinates
transforms the given data origin to the specified location
paints the node
adds a property to the set
stops the loading of the
load the configuration
returns the size of the buffer
returns the object
sets the data of the parameter
sets the value of the parameter
sets the data of the parameter
sets the value of the string parameter
sets the string value of the parameter
compares this object with the specified object for order
sets the parameters for the parameter
adds an observer to the list
update the current
adds an observer to the list of observers
adds a component to the list
adds a component to the bag
adds an observer to the list of observers
update the parameter value
this method is called when the user changes the file
sets the value of the parameter
updates the config panel
initialise the init data element
compares this object with the specified object for order
loads the xml document from the xml element
returns the modifiers
returns true if the given annotation type is present in the annotation
returns the default value for this method
returns the title of the implementation
returns the name of the implementation of the class
returns the version of the implementation
returns the object value for the given object
returns the name of the vm
returns the title of the specification
returns the specification specification
frees a memory
returns the version specification of the specification
sets the address of the address
process the command process
exit the application
returns the trace of the current thread
returns true if this class is sealed
returns the number of memory in the memory pool
returns the byte value associated with the specified address
returns true if the url is sealed
get the value of the specified object
sets the address of the address
load the
returns the short value of the address
load the library from the given library
returns the total memory
returns the name of the vm
returns the value of the specified address
returns the long value associated with the specified address
the halt of the remote program
returns the number of processors available
returns the maximum memory memory in memory
returns the value of the specified address
interrupts the thread
sets the address value
runs the runnable
returns the resource for the specified resource
returns the double value of the specified address
sets the context class loader
sets the address of the specified address
returns the address of the specified address
sets the address of the address
starts the thread
returns the package for the specified name
sets the status of the class assertion
sets the assertion status of the given status
sets the default assertion status
clear assertion status
fills the list of packages
reads a single byte from the buffer
reads a byte from the buffer
reads the next byte from the given byte array
write the given byte array to the file
returns true if the given number of integers and the given number
check if the given access file is declared in the system
checks if the given parameter is a valid operator
returns the method in the specified code
runs the given code task code
returns true if the given object is a resolved implementation
returns true if the is
returns the time in seconds
returns a string representation of this object
this method is called to perform the boot process
decay the
check that all the methods are loaded
executes the runnable
reports the number of
reports the number of compilation units to the given target
returns the code compiler phase code
this method is called by the framework to perform the instrumentation
reports the ratio between the and the
returns a string representation of the object
compile the compile time ratio and returns the result
this method is called when a new plan is scheduled
compares this object to the specified object
returns the total number of in the given
called when a compilation unit is started
returns the number of in the local slot
the given edge
this method is called when a new process is finished
cleans up the
called when a compilation unit has been aborted
finds the heap idx
compiles the compile time and compile time
returns a string representation of this object
process the task
this method is called when a new contact is still available
process the
notify the exit of the application
this method is called when the user wants to perform a
notify all registered
called by the thread pool to notify the controller
returns true if the is restricted to the
executes the action
this method is called by the server to check if the job
grow the heap and
creates the thread that is used to create the compilation
creates the dynamic call graph object for the
creates the
the current index
creates the organizer of the data structures
called when the user hits the barrier
down the current position of the current iteration
swap the two indices
this method is called when the cpm is loaded
checks if the current vm has the correct value
p record controller the estimate of the controller
update the
sets the buffer of the current thread
update the number of rows in the database
resets the to the initial state
resets the buffer to the buffer
records a sample
resets the number of samples
reports the current report
prepend the block to the given block
this method is called when a plan is executed
reports the report
returns the counter for the event event instruction
resets the to its original state
returns the value of a counter
returns a counter for the event
initialize the counters
sets the counter for the given counter
this method is called by the jvm to report the
increases the maximum heap size
returns the index of the specified counter
creates a new event counter instruction
increases the size of the counters
returns the index of the counter that is currently in the current
returns the value of the counter
sets the counter value
resets the counter to the initial state
returns the number of counters
insert the
returns the size of the given log entry
adjust the field to the given field
returns the counter manager instance
set the value of the specified number of
create a new event counter
sets the size of the object
ensures that the size of the given size is resized
sort the given array of the elements in the given array
updates the field class
sets the offset of the given field
lays out the field
writes the current line to the current line
sets the type of the
returns the key for the given name
sets the superclass of the superclass
print an object
throws an exception
the of the
sets the of the
sets the
adds the given element to the list of elements in the list
sets virtual method for virtual virtual virtual virtual virtual
sets the method for a given method
returns the number of virtual virtual virtual methods
returns true if the slot is in slot
returns true if the slot contains a slot
inserts a new instruction into the list of the
returns a string representation of this object
print the current state of the
moves the pointer to the next one
returns true if the method id has more information
returns true if there are more elements
moves the current pointer to the next position
generates the for the given
returns true if the given offset is in the
prints the given class name to the class
returns the offset of the given offset
close the lock
wait until the handshake thread is waiting to receive
waits until the next handshake is closed
try to lock the lock
returns the offset of the given offset
returns the for the given offset
returns the offset of the
the given object and returns the result
sets the owner id of the owner
sets the recursion count
returns recursion count
sets the object that is used to hold the
returns the locked object
dump the threads pool
dump the threads waiting to the current thread
checks if the given code code is blocked
returns true if the given code code is a waiting
adds a new entry at the specified position
adds a new entry to the queue
sets the current queue of the next element
adds a collection of the given
reads the next byte of data from the input stream
adds all of the elements in the specified collection to this
returns true if the map contains the
performs the logical xor of this bit set with another
clears the list
logically logically unordered or the bit set with the specified bit set
xor for xor of the bit set with bit set
checks if all of the elements contained in the set of
returns true if the given intersection is in the intersection
returns the element at the specified index
copy a bit set to the current set of bits
returns the index of the given element
counts the number of distinct population
compares this object with another
removes the element at the specified position in this list
removes the first occurrence of the specified element
returns a string representation of this object
returns the instruction to be used for the instruction
returns a string representation of this object
insert an edge out of the given node
insert a new edge in the graph
returns the register operand
sets the register operand
returns the register
returns the register type
returns true if the given item is contained in the list
compute the of the block
returns the next element in the iteration
sets the next element in the iteration
returns the string representation of this object
creates the nodes that are currently being used for the given node
returns true if there are more elements
returns the next element in the iteration
returns the monitor
returns a string representation of this object
merges two lists of values
returns the next element in the set of elements
adds a to the
returns the graph
adds a new basic constraint to the list of
returns a string representation of this node
returns true if the interval overlaps with the specified interval
adds a map of to the given map
returns the string representation of this node
returns a string representation of the node
initializes the operand

removes the specified register map from the map
update the given
performs the ir action
insert a stack operand
replaces a with the given start and registers them in the
compute the implicit backward
returns true if the option is in the given option
check if a given is forbidden
compute the implicit definition of the given node
return the space for the given number of space
get the location of the given instruction
save a to the given
returns the offset of the sys call
clear the instruction
restore the of the given
unloads the given from the given scratch
prints the graph
returns the node with the given name
finds the edge that connects the edge to the source node
save the current state of the given
end a symbolic interval
checks if operand is a register operand
end the given interval
this method will be called when a new
restore the state of the given
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
saves the to the given instruction
dump the debug information
restore volatile bit
registers a new physical
sets the value of the parameter for the parameter
returns true if the given
returns true if the escape thread is still running
returns true if the progress bar is in progress
sets the value of the in progress
prints the fixed point results
insert the into the
marks the given place as a dirty register
transform the operand operands to the operand
prints the final maps to the given ir file
returns true if the given code method code is a system
performs the actual processing of the current
checks if the given code code is present in the
prints the final intervals to the block
checks if the given instruction is dead before the given
returns true if the given instruction is already in the list
returns the live info for a block

registers a new with the current
get the for the given instruction
returns the
returns the
checks if move is a legal move instruction
add a scratch register
returns the generation
add a new register helpers to the given register
returns the code live code object that is in the set of
inserts a new copy of the given block
returns true if the is
get the field editors
the ir
puts a new code code into the field
checks if the given is a location
la
this method returns the for the given
get static static instruction
create a new instance of the
checks if the given location is
returns true if the given code method code is a system call
returns a string representation of this object
checks if the location of the given location is
put a static static method into the
returns a string representation of this object
creates and returns a guard with the given guard
check if the location of the given location is
creates a new code code
find the for a given guard
returns the instruction of this instruction
returns the for the given location
register a new
returns true if the parameter is a parameter
adds a new vertex to the graph
removes a vertex from the graph
returns the representative of the
returns a string representation of this transporter
this method is called when a is
update the interval in the given interval
this method is called when a is
prepares the object to be scanned
check if operand is a df operand
this method is called when the global number is
this method is called when a is
initializes the graph
checks if the given instruction is
creates a class
initializes the work list
returns the number of in the specified position
helper method to handle a label
adds a to the worklist
insert variables in the heap
helper method to handle a
find the first match between the given and the given
returns the number of in the specified position
checks if the given vertex is a
registers a new heap
register a new exits
returns true if the given option is in the option
insert the into the
registers a new instruction in the heap
registers a new code commodity code
returns the name of the insert statement
this method is called by the browser to print the current
performs the operations for the given ir code
adds a new heap variable to the list of statements
insert the methods description here
create a new
remove the with the given
returns the candidate interval for the given interval
get next variable variable
performs the action
insert a phi function
sets the frame required to be used for the iframe
compares the specified object with this key and returns true if they
make a phi function for the given instruction
returns the hash code of the object
returns true if the given option is in the option
returns the name of the
returns true if there are more elements
returns the result of the given instruction
allocates a new space in the buffer
checks if the given is correct
returns the next element of this instruction
returns true if the given option is in the
returns true if the given option is in the option
returns the name of the
performs the actual propagation of a solution
allocate a stack frame at the top of the stack
returns a string representation of this object
instructions for
returns the name of the
returns true if the given option is in the option
returns the target vertex of the given vertex
returns the type of heap
returns true if the type is an exception heap
returns the space for the conversion of the current
returns the def block used to compute the
returns the constant array of operands of the operand
registers a new definition
returns a string representation of this object
algorithm for a b block
returns true if the entry is
the block of the block
returns the space for the caught exception
returns a string representation of the graph
returns the code basic code instance for the given
adds the given register set to the register
process a move
process the given instruction
process a new process
process a new array of operands
creates a new cell object
add a new value to the current state
initializes the lattice cells
process a static static method
sets the loop loop for the given register
initializes the work list
sets the operand of the operand
the instruction
registers all the registers
process a unary expression
returns true if the given register is a loop
evaluates the binding of the given binding
process a unary expression
add a location to the tree
find the tree node for a given sequence
add a new check element to the array of
returns true if the is
returns true if the is
executes the given instruction
returns true if the guard is
returns the number of targets in the current targets
returns a string representation of this object
returns the depth of the
returns the root method of the
process a binary instruction
checks if the given method is a method
adds a new dependency to the given one
returns the hash code of the mapping
removes a dependency from the given one
adds a new dependency to the given class
removes a dependency between the given class and the given
removes a dependency
returns true if the call is a invoke interface

returns the depth of the current block
returns the call instruction
returns the target
returns the options
returns the is
returns true if the call is precise
returns the root method of the
returns the method
returns the index of the bytecode for the index
returns the sequence of the sequence
returns the compiled method
process inline guard
returns the trace of the specified trace level
process a cmp operation
process phi
ab ab cost
process a
returns the hash code value for this object
this method traverses the tree
returns a string representation of this node
returns a string representation of this node
returns the next element in the iteration
returns the node that is connected to the given graph node
process a call
the number of nodes in the tree
dfs searches for the given node
returns whether there are more elements
returns the next element in the tree
returns a new iterator that enumerates the nodes of the node
adds all the given set of data to this set
adds an object to the map
returns true if the given object is contained in the list
dfs searches for the given node
returns true if the given node is a single successor node
adds an edge to this graph
returns true if the given node is a predecessor of the given
creates a new vertex or edge
adds a new edge to the graph
advance the current position in the barrier
sorts the top sort
returns the left child of this node
returns the sort order of the current sort order
returns the right sibling of this node
returns true if the iterator has more elements
adds a child node to the tree
clears the current node
returns the next element in this iterator
returns the node that is connected to the given graph node
returns a vertex that is a vertex of a vertex
creates a new vertex or null if the vertex is a vertex
returns a new vertex for the given operand
print the current page depth
adds a new edge to the graph
prints the given node
returns the code turn code at the given code operand code
creates a new instance of the object
register a register with the given register reg
returns a string representation of this object
enables disables the
determine if the given instruction is close
adds a inline instruction to the given instruction
removes the given ir from the
returns the of the given
this method is called by the framework to create the
checks if the given code is barrier code method
disables the

returns the of the given instruction
returns a register for a given type
initializes the for compilation unit
sets the inline oracle for this part
returns true if the given option is in the process of the
executes the normalisation algorithm
performs the weaving of the weaving process
write the data to the specified report
returns the elapsed time for the current simulation
make a local operand
returns the plan for the current plan
optimize the optimization plan
prints the given time
returns the number of registers in the pool
initializes the for measure
returns true if the given option is in the grammar
fail a test that is not used by the
is operand operand
returns the elapsed time in the
reports the additional stats for the stats
returns the concrete type of the given type
creates a new instance of
verify the ir gst
returns the code code at the given instruction
returns a new register with the specified number of
get the number of symbolic registers
returns true if the given is
returns the physical
creates a new register operand
returns a register operand for this register
returns a string representation of this object
returns the object that is used to store the value of the
returns the caller bag
removes a local block from the stack
returns the first symbolic symbolic register
removes all the guards from the pool
releases the current register
returns the address
removes the current object from the database
returns a register object
returns a register with the current register
returns the register
returns the condition that can be used to create a new register
returns the new code reg code
returns the validation register
returns the register
returns the register
creates a new instance
returns the instruction
returns the register type reference
adds a reg element to the list of reg
returns the second reg of the register
removes a reg element from the list
returns the number of elements in the list
counts the number of elements
make a new register operand
counts the number of elements
returns a string representation of this object
make a temporary register
make a temporary register operand
make a new register
make a new register to the current register
make a temporary integer operand
make a new temporary register
returns a deep copy of the operand operand
checks if operand type is supported
returns a string representation of this object
make a temporary float
returns a deep copy of the operand
make a new temporary register
check the operand of the operand
make a new temporary register
returns a temporary register that can be used to create a temporary
make a new register to the current register
returns a copy of this register with the same value
returns true if the operand is possible
returns a deep copy of the operand
returns true if operands of this operand is unordered
returns a deep copy of the operand operand
returns true if operand is not equal to another operand
returns a string representation of this object
this is used to convert the code value code into the code
flip the flip flip operation
returns a copy of this operand
returns the number of the current value
returns the type of heap
returns true if the object constant object is movable
returns true if the operand at the same operand
sets the instruction
creates a new physical
returns a copy of this operand
returns true if this object is a reference
returns true if this is a null terminated
returns true if operand is supported
returns a deep copy of the operand
returns true if operand is not equal
returns true if the is a legal value
returns a string representation of this object
creates a new physical
returns a deep copy of the operand type operand
compare this operand with another operand
returns a string representation of this object
returns a copy of this operand
returns true if operands of operands of this operand is similar
returns a string representation of this object
creates a new physical
returns true if the field is an int
creates a new physical
sets the value for this
gets the value of the first def property
returns true if the value is equal to the value
returns true if the current value is long
returns a string representation of the current
returns true if the value is equal to the
returns true if the value is equal to the value
returns true if this is a float
returns true if the value is equal to the value
returns true if the current value is double
returns true if the value is greater than or equal to the
returns true if the value is a
returns true if this is a reference
returns true if the value is higher than the higher value
is this a address
returns true if the value is a
returns true if the is like
returns true if the is a integer value
returns a deep copy of this operand
returns the number of bits in the
returns true if the value is equal to the higher value
returns the number of bits in the
returns the number of bits in the
returns true if this is a
returns the number of bits in the
returns true if operand is supported
returns true if the value is equal to the lower case
returns a string representation of the current value
returns a copy of the current object
move this object to the next step
returns true if the operand at the given operand is semantically equal
returns a string representation of the object
returns true if the current is equal to the current one
returns true if the value is equal to the
returns the index in the instruction of this instruction
returns true if the current is
sets the value of the
sets the value of the
returns the code code value
translate this condition by a given one
flip the current value of this code code
returns a string representation of this object
returns true if the field is a volatile
returns a deep copy of the operand operand value
returns true if the is double
returns the value of the operand that this is equal to
returns a copy of this operand
returns true if operand is similar to operand
returns a string representation of the object
returns a string representation of this object
returns a copy of the operand type
returns true if the operand at the same location is not valid
returns a copy of this operand with the same value
compare this operand with another operand
returns a string representation of this quad
returns a string representation of this object
is address address
returns a deep copy of the operand
returns a deep copy of the operand operand value
returns true if operand is similar to operand
returns a deep copy of this operand
returns true if operands of this operand is similar to the operand
returns true if the float is a float
returns a string representation of this object
returns true if operand is similar to operand
returns a string representation of this object
returns a string representation of the object
returns true if the value is long
returns a copy of this code operand code
returns a copy of this operand
returns the number of bits in the
returns true if the operand at the given operand is semantically semantically
returns true if operands of this operand is similar to operand
returns the number of bits in the
returns a string representation of the block
returns a string representation of the block
returns a deep copy of the operand operand value
returns true if operand is allowed
returns a string representation of the object
returns true if operands of operands of operands of this operand is
returns true if the trap is
returns true if the current instance is an array of
returns true if the current element is div by zero
returns true if the current operand is a stack or not
returns true if the trap is a
notify the native that the has been dropped
returns true if the trap is an
returns a new register operand
returns true if the trap is already in the trap
returns true if the is
returns a copy of the operand
returns a copy of the operand code operand code
returns a copy of the operand
returns true if operand is not already in the operand
copy the operand value into this operand
returns a string representation of this object
returns a string representation of the object
returns a copy of the operand
returns the trap of the trap
returns a deep copy of the current operand
creates a copy of the operand
returns true if the drag constant is moved
evaluate two parallel evaluation
returns true if operand is similar operand operand
returns a string representation of this object
copies the operand of the operand to the current state
returns true if the call is not
sets whether the call is not
returns true if the branch inline branch is
sets the inline branch
the
the given class
the target
returns a copy of this object
checks if operand is a operand
returns a string representation of the object
returns the physical
creates a new register operand
make a new toc operand
returns a string representation of the object
returns true if there are more elements
returns true if the given is
returns the next instruction in the stack
returns the next element of this enumeration
tests if there are more elements in the queue
add an exception caught in the array
returns the type of the given type
returns the type of the given code code
returns the next operand
returns the number of entries in the table
returns the live set of live items
sets the live set of the live set
returns the code operand code of this code element code
returns a string representation of this object
returns the number of instructions in the list
counts the number of elements in the list
tests if there are more elements in the queue
inserts a new instruction into the list of
deletes the given instruction from the list
moves the element to the end of the list
returns the next operand
inserts a new instruction in the list
returns true if this object is
sets the precise type
returns the basic block
returns the number of real instructions in the current instruction
returns the exit node
returns the first basic order instruction
returns the last block in the order
the for the
creates a copy of the instruction
returns true if this object is
this method is called when a link is created
removes the given basic block from the basic block
removes a basic block from the block
removes the given code conv order order code from the
inserts a code before code operation
add a new to the current state
returns the next instruction in the order
inserts a new before in the current block
sets the flags flags
this method is used to set the flags of the other
a link to the given block
returns the previous instruction in the sequence
returns true if the flags is less than the other
break a break statement
returns the stack trace for the current thread
clears the list of the
returns the basic block of the block
returns true if the is valid
copy the given instruction from the current source position to the given
returns true if the is
returns the info
this method is called when the jvm is done
sets the value of the info property
sets the next object
appends the given code operand code to the end of the queue
returns the next object
sets the register
returns the offset
prints the instructions
checks if the given instruction is within the stack
sets the offset
returns the first instruction in the order of the instruction
returns a string representation of this object
adds a single block to the block
set the block size
returns the
returns the operator of this operator
the of the given ir block
optimize instruction block
returns the last instruction in the order
checks if the given instruction is a flipped candidate
returns the opcode of this instruction
flips the conditional branch
returns the first basic block in the basic order block
performs ir ir
returns true if the given option is in the
returns the name of the
returns the last basic block in the basic order block
returns the number of operands of the variable
append a new instruction to the end of the stack
dump the to the
returns the of the
returns the block
the
reverse the of the current
returns the name of the
performs the ir ir action
returns the number of in the list
optimize instruction block
returns the basic block of the block
returns true if the given block is by the
returns true if the given option is in the
returns the number of defs
returns the name of the
returns the block ordering of the block
performs ir ir
checks if the given ir code code is valid
make a static field reference
dump the contents of the given to the current
returns the number of pure uses expression
reverse the block of the current block
performs the
returns the first node in the block
prints the next nodes in the block
returns a candidate test for a block
returns the instruction list
find the first basic block in the block
returns the number of the expression
returns the next node in the block
find the block that matches the given block
returns true if the block is a legal block
returns the previous node basic block in the block
checks if operand is a parameter
replaces the old operand with the given operand
returns the block of the given block
compress the given block
returns the number of bytes that are connected to the number of
returns true if the operator is looping
checks if the given instruction is a flipped candidate
replaces all operands of operands of operands of operands of operands of
the block of the
dump the current debug information
tests if the code head code is a loop
reset the basic block map
returns the code basic block code that is used to determine the
flips the conditional branch
returns the parent of the given block
returns true if this is a regular loop
returns the basic block for the specified number
returns the ancestor of the given block
replace the current register with the given value
is invariant operand
returns the semi colon
returns a basic block of the given bit set
returns the size of the block
returns the child of the given block
returns true if operand is available
returns true if the given operand is a related
iterates over all the blocks in the block
returns true if the iterator is looping in the loop
returns the operands that this operation is
set the frequencies
make a type operand
returns true if operand iterator is looping in the same loop
compute the loop for the given
checks if the given block is a long def
compute the of the
returns a new code operand code that is a new
returns true if the is
returns the of a block
sets the semi
gets the value of the semi property
sets the
returns the
sets the parent basic block
returns the parent block
returns the root of the
returns the number of instructions in the stack
removes a block from the container
returns the value of the operand
adds a new block to the list of the buckets
sets the ancestor
returns the ancestor
sets the label
returns the basic block
evaluate the cost of the given block
sets the size of the image
sets the basic block
returns true if the condition is
sets the value of the code code property
returns the basic block of the block
returns a string representing the current character
returns the enum
returns a new instance of the defs
sets the enum
returns a string representation of this object

returns a string representation of this object
returns a string representation of this object
returns true if the given option is in the option set
returns the name of the
returns true if the loop is in loop
checks if the condition is
clears the current value of the instruction as a
initializes the lattice cells
make a type operand
initialize the work list
creates a new cell with the given key
returns the root node of the tree
returns a that is used to generate the pure
returns the first node in the block
insert the before instruction
clears the current instruction as a new object
returns the parent block of the given block
tests if the given code block code is in the block
returns the frontier of a block
returns the frontier of a given number
returns a that is used to generate pure
clears the block and removes all blocks blocks

the block of the block
removes all the from the graph
returns the string representation of the
the block tree
returns the number of symbolic registers
adds a node to the tree
returns a new instance of the
returns the depth of the block
returns the name of the
phase
performs the
prune the exceptional
performs the ir action
returns true if the cell contains the given cell
returns a string representation of this object
returns a string representation of the lattice
returns the object that is associated with the given key
returns the root of the
adds a new operator to the current
returns the graph node graph node
adds a new to the
returns true if the given block is in the loop
returns the graph node in the graph
the block
returns true if the move is a move
returns the basic block for the given block
returns the value of the handler flag for the power supply state
solves the
this method is called by the tree to indicate that the node
returns a node iterator that iterates over all the nodes in the
returns the solution
adds a graph node to this graph
returns a string representation of this object
returns the basic block of the block
sets the value of the handler for double click property
performs the operation for the operand
returns true if the branch is a branch
returns the number of equations in the graph
adds a new work to the work list
verifies that the specified url is valid
adds a new equations to the work list
adds all equations to the work list
returns true if the conditional branch is conditional or not
invoked when the cell has changed
returns the cell value for the given key
creates a new equation
returns the location of the first frame of the specified address and
gets the first location
gets the last location
creates a new equation
returns true if the branch is a branch branch
returns the cell at the specified key
adds a to the
returns the compiler type
returns true if the branch is a branch branch
gets the exception
updates the work list with the given
this method computes the equations of the equations
get the dynamic link for the given instruction
returns true if the branch is a branch branch
process a block of blocks
returns the line number for the specified instruction offset
returns true if the branch is indirect branch
executes a instruction
returns code this code operand code operand code iterator
returns true if the call is a call operator
returns true if the expression is a pure call
adds a block to the block
returns true if the given has a edge
verify that the given binding is supported by the factory
returns the location of the stack at the specified offset
gets the first location
returns true if there are more elements in the iterator
returns true if the conditional call is conditional or not
returns the next block element
returns true if the call is a recognised call
verifies that the given is not already in the local variable
the operand at the given index
returns true if the given instruction is expression
returns true if the is a direct call
returns the next block of the current block
checks if the given instruction is check
returns true if the call is indirect call
returns the string representation of this code code
returns true if the domain is loaded load
store the given code code into the cache
returns true if the model is loaded
returns true if the store is explicit store

returns true if the datastore is a implicit store
returns the vm architecture
eliminates all the from the operand
returns the vm architecture
returns true if the operator is throw
the architecture
the architecture
invalidates the cache
returns true if the operator is
write stats to the system
returns true if the operator is
invokes the method of the given basic block

returns a hash code for this object
the operand of the given instruction
returns true if the operator is
returns true if the field is a load or not
returns true if the is
returns true if the field is loaded
returns true if the operator is consistent
returns true if the field is a store
invokes the method of the
returns true if the allocation is a allocation
the problem of the problem
checks if the current bit mask is a bounds
returns true if the operator is a return false otherwise
emit an unary expression
returns true if the operator is
simulate a
returns true if the block is acquire
returns true if the current operator is release
iterates through the tree and returns the tree
returns the number of tests
returns true if the linking links are dynamic linking
returns an operand that is semantically equivalent to code this code
returns a method that can be used to determine the
creates a method for the given method
compiles the given method
returns true if the point is a yield of a point
returns the
returns a string representation of the object
returns true if the current is global
the operator
grows the buffer with the specified size
compares the specified resource with this reservation
this method is called by the
check if a reservation is already deployed in the current state machine
sets the of the given instruction
this method is used to print the
returns a string representation of the object
sets the node to the given node
performs the
returns the graph node of the given instruction

compute the critical path of the node
test the
returns true if the given basic block is sorted in the sort
returns true if the number of elements in the set is empty
remove the from the heap
the instruction in the
resets the
initialize the compiler
compiles the given method
test the process of
returns the index of the given index in the local location
returns the next address
the instruction to the next operand
cleanup the resources restoring the internal state
process the list of blocks
returns the depth of the stack
returns the branch probability of the branch
the block with the given exception
returns the index of the given index in the local location
sets the probability of the branch
the block with the given exception
simulates a in the current branch
mark blocks blocks
returns the number of bytes per map

pushes the operand stack onto the stack
returns true if the operator is first
returns true if the given instruction is within the
returns true if the operator is
sets the current element at the given position
returns the depth of the stack
returns true if the browser is up to the last page
prints the stack trace of the given code instruction code
returns true if the operator is inside the operator
prints the exception table
sets the lock lock offset
inserts a new instruction after the instruction
generate a new
insert a new instruction before the given instruction
returns the size of the type
pushes the operand onto the stack
replaces the old instruction in the given instruction
notify the exit of the application
generate the exit monitor
remove the last element of the stack
this method is called when the user presses the complete end of
translate the
returns code 1 code if the operand is a operand
make sure the stack is ready to be pushed to the stack
returns code 1 code if the operand is a reference to the
sets the address of the
copy the bit map at the given index
returns code this code returns code 1 code
push a push onto the stack
cleans up the pointers back to the initial state
returns the operand at the specified index
returns the code operand code of the code int code th
push a push onto the stack
pop an operand from the operand stack
write the to the given file
this method is called when the system should be displayed
push a double onto the stack
returns the offset of the local
checks if the given operator is similar to the given one
push a low double value onto the stack
sets the stack of the current state of the machine
returns the next link to the end of the list
returns the offset of the first frame in the buffer
returns true if the field is a
pushes a long value onto the stack
load the on the library
remove the address from the library
up the frame
returns true if the frame is more
process a load
the method is invoked when the current step is up
sets the method reference
sets the index of the bytecode for the current bytecode
sets the current method
returns the symbol for the specified symbol name
sets the compiled method
sets the index of the first inline
cleans up the
returns the index of the bytecode for the current bytecode
pushes a long value onto the stack
returns the current method
returns the current compiled method
returns the current class
returns the class loader
returns the class name of the field
returns the array type of the operand
pushes a new address onto the stack
returns the name of the method
initializes the state
returns the compiled method for the given element
the
the of a
returns the reference type of the operand
notify the exit listener
the
creates a new
creates a new thread that will be used to create a new
write the vm to the vm
returns the character at the given index
asserts that the operand is correct
creates and initializes the
appends the given code instructions code to the end of this
define the event type
define the event type for the given type
define the event type
opcode tt get tt
returns a string representation of the object
returns a string representation of this object
creates the value of the class loader
the given value from the buffer
returns a string representation of this object
returns a string representation of the element
returns the value of the given class
returns true if this is a bridge
invokes the method on the given object
returns true if the variable is a var var var var var
pop the top level value from the stack
returns the array element type type
compares the member members of this object with the other
returns the array type for the given type
this method will be called by the server
returns the hash code of this object
returns the of the element
returns the type of the element that is referenced by this element
compares this object with another one
returns true if the is moving
pop the top level memory space
the
make a new instance of this method is a single roll
atomically adds a reference to the given reference
gets the value of the address property
returns true if the resolved object is resolved
returns the address of the
returns the resolved method
returns true if the object is a magic
returns the of the
prints out the contents of the block
pops the top and
returns true if the property is resolved
returns true if the current object is a system call
returns true if the assertion status is not allowed
returns the method of the
resolve the method and resolves the method declaration
resolves the method class for the given method
returns true if the annotation is moving
compiles the given template
the
returns the number of slots of the stack slots
returns true if this object is
returns true if the reference type is reference
pops the top level value from the stack
returns true if this is
make a
returns true if the class is a runtime runtime exception
returns the value of the object that is being held in the
pop the given address from the stack
returns the number of the slots of the stack
make a new field to that another field
check if this field is a reference to another
returns the resolved field declared in the
generates the bytecode for the current location
peek at the peek position at the given index
returns the bytecode stream that this operates on
set the object value for the obj
returns the number of in the
sets the value of the given object
this method is called when the user enters the
generates a bytecode
make a new that is a different type of this
peek at the specified position
atomically coerce that the same type to check
returns true if the synthesized is synthesized
sets the specialization for the
returns the package name of the package
finalize the
resolve the resolver
returns the length of the
returns the
peek at the specified position in the stack
get the
compares this object with the specified object for order
compares the specified object with this object
returns a string representation of this object
returns the encoding of the given type
checks if the operand is correct
sets the runtime service method to be used for the service
returns the modifiers
returns the signature of this signature
returns the source name of this atom
returns true if the field is a static
returns the class that this class represents
returns the enclosing class
find the declared field for a given field
find the declared field for the given field
find a declared method for a given method
find the declared method for a given method
returns the block at the specified position
find the main method
sets the
returns the offset of the constant pool entry at the given index
returns the block at the specified position in the stack
returns the literal description
returns true if the annotation type is
returns the address of the address
returns true if the current instance is zero
check if the is allowed
returns a reference to the reference object
returns the number of in this code code
returns the value of the code code in the code
returns a word that is the of this
returns the hash code value for this object
returns the context layout context
this method is used to get the address of the object
hash code identity
sets the hashed hash
load the counter array
sets the layout context field
returns the size of the
returns the number of in the map
allocate a new address object
returns the hash code value for this object
allocate an array of the elements in the pool
checks if the given address is a
allocate an array of addresses
check if the given address is a stub
allocate an instance of the given array
sets the alignment of the text
returns true if the is allowed to be
calculates the allocation size of the given allocation
check if the given address is a
check if the given address is already present in the
tally the counter of the counter
resets the current state of the session
check if the given address is already in the
sets the address of the given address
mark the reference to the reference address
prefetch the current prefetch
sets the half word to the given address
sets the address of the given word
checks if the requester is
sets the address of the address
sets the address of the address of the
sets the address of the address of the given address
sets the double value at the given address
checks if the requester is
increases the number of references to be
checks if the requester is
checks if the requester is
checks if the requester is
checks if the requester is
checks if the requester is
returns the reference object for this object
returns the reference object for the specified virtual memory
resets the data of the data array
this method starts a
sends a to the given event
this method is called when the communication is closed
load a byte from the current
this method starts a new
sends a to the given event
sets the stream to the given address
mark the field as semantically
this method starts a new
load a byte from the data source
sends a to the given event
set summary
set summary
sends a summary of the server
returns the character for the current
checks if the is already deployed in the current vm
load a char
returns the short value of the current object
returns the number of pages in the pool
returns the number of pages required for this page
prepare for reuse
prepares the object to be saved
release any acquired resources
returns the short value for the specified virtual machine
load the current float
remove all the native methods from the native vm
load a float from the current vm
adds a sub class to the
load the current number of the current
load a object from the specified virtual machine
updates the given code code
returns the current value of the code code
returns the value of the specified virtual pointer
asserts that the given code code is a local
returns the current value of the
the vm to the vm
trace the field not in the local
load a double from the virtual machine
updates the virtual method
returns the id of the interface
load a word from the current
returns the space from the space
returns the specified space in the space
load a word from the current
stores the value of the object at the given offset
stores the value of the specified address in the database
logs the log
moves the cursor to the next position in the current position
stores the value of the address in the specified address
generate the
stores the value of the current value in the current state
flush the current state of the cache
stores the value of the specified bytecode
the given string
generate the of the method
print the timing information
stores the value of the specified object in the
returns the object that is associated with the given reference object
stores the value at the specified offset
this method is called to indicate that a new game is
log a message with the specified trace
set the offset to be used to wait for the
returns the object that is held by this object
stores the value in the current state
generate the system call for the
returns true if the object is ready to be ready
forces the heap to be full
returns the for the given object
scan the scan scan
prepares the pool to prepare for a non blocking state
prepares the object to be used to prepare the
release the pool
returns true if the pool has a work
push a new string onto the stack
returns the pages available pages
stores the value of the object in the given code short code
returns the reserve capacity
pushes a new element onto the stack
the
returns the number of pages in the
returns the for the given object
stores the value at the specified offset
log the given source
returns the number of pages required for this page
pushes a new element onto the stack
returns the full size of the heap
returns true if the object is live in the
prepares the
process the set
returns the number of pages in the cache
prepares a word
returns a reference to the code code object that is
log the given string
returns the number of pages in the current page
collects the of the current phase
returns true if the given code space code is required for this
returns a new instance of the given
returns true if the object is live in the
returns the for a given object
returns true if the concurrent set of concurrent concurrent maps
prepares the address of this object
returns the specified space in the space
this method is called when a phase is set
returns true if the object is live
prepare a new address to be used in the
returns the pages available
returns the number of pages required for this page
returns true if the given object is a live live object
prepare the
returns the specified space in the space
returns true if the given object is a legal
returns the object for the given object
prepare the given object offset to the given value
check if the specified value is already present in the specified value
this method is called when a phase is set
initialize the
this method is called when a phase is set
returns the specified space in the space
returns true if the specified object is live in the space
returns true if the value at the specified position is not in
returns true if the given object is not a
returns true if the given object is reachable from the
returns true if the given object is a legal
returns true if the given object is not a top level
writes the spaces to the end of the current space
check if the given word is a valid conditional
returns the number of pages in the page
returns the specified space in the space
check that the given address is a local address for the
returns the number of pages required to render the pages
gathers the of the
this method is called when the user selects a
returns the specified space in the space
checks if the given word is a valid conditional
writes the spaces to the end of the current space
returns the number of pages in the current page
this method is called when a concurrent pool of phase is set
flush the buffer
returns the reserve space
check that the schedule is not empty
returns the number of pages required for this page
returns the number of scheduled phases
returns the of the given object
returns the value at the specified index
logs the current phase
replaces the phase with the specified phase
check if the value is already in the
process the set process
replaces the phase of the specified phase
replaces the phase placeholder with the specified value
prepare the collection of the primary key
attempt to check if the specified address is a valid address
process an edge
process a node in the
initializes the collector
reset the concurrent pool
clears the concurrent pool
attempt to load a
prepares the current session to be reused
scan a for a given object
sets the first closure of the element
validate the value of the field
returns the number of pages in the font
returns the number of pages required to render the pages
validate the value of the field
validate the maximum value
notify the new block that the block is a block of the
initializes the mutator
returns true if the given object is live in the
releases all the consumed consumed consumed
releases the
returns the space from the given code space code
returns the object that is used to compute the object
returns true if the specified object is live in this object
this method is called when a phase is set
returns true if the given object is not a top level
initialize the
this method is called when a phase is set
returns true if the given object is a legal
returns the number of pages physical pages
processes the set
forces the heap collection to be reused
flush the buffer
returns the specified space in the space
removes the set of the set
returns true if the virtual memory is available
checks that the is flushed and
returns true if the specified object is live in this object
returns true if the given object is not a top level
returns the inline inline
returns the number of pages required for this page
returns the number of pages that are allowed to be used for
mark the current mark as a mark
returns the specified space in the space
returns true if the specified object is live in this object
returns true if the given object is a legal object
print stats for the current test
returns true if the given object is live in this object
returns true if the given object is live in this object
returns the specified space in the space
returns the of the given object
returns the number of pages in the
returns true if the object is live
returns true if the given object is not a
returns the number of pages in the pool
returns the number of pages required to be used for this
returns true if the given object is not a
returns the specified space in the space
returns the for the given object
returns true if the given object is live in the
returns the specified space in the space
returns the number of pages in the current page
returns true if the given object is live in this object
returns the number of pages required for this page
resets the
creates a card anchor
adds the given character to the buffer
returns true if the given object is a legal
forward to the given trace entry
adds a string to the buffer
returns the address of the specified object
scans the given object from the database
the data
process the given object
flush the buffer
write the data to the given
validate the value of the field
validate the value of the assertion
validate the value of the field
validate the value of the assertion
sets the thread id flag
validate the value of the field
validate the value of the
validate the value of the assertion
validate the value of the assertion
validate the value of the assertion
validate the current value
returns the key for the given address
sets the
resets the local variables to the initial state
returns the size of the specified unit in the current unit
this method is called after the operand is resized
prepares the
resets the local variables
sets the size of the given entry
enqueue a new block in the buffer
returns true if the given unit is a free unit
increment the value of the specified unit
starts the applet
starts the simulation
sets the previous address
stops the playback
stops the running
prints the current units
change the current value of the change
returns the next unit in the current state
increase the current state of the
check if the given length is smaller than the end of the
print the current stats
push a stack on the stack
increases counter by one
set the current state of the machine
start the simulation
set the next unit in the given slot
stop the running process
acquires the lock
pop the top most stack pointer
returns the previous value for the given unit
returns an operand that is semantically equivalent to code 1 code
check if the current position is not present
sets the prev
release lock on the lock
returns the driver name
sets the
sets up the summaries
returns the driver name
handles the address of the address
returns true if the completion is complete
clears the
reset the stream to the
returns the driver name
scans the given object from the given object
returns the left value of the given unit
registers the given services for the given service reference
resets the range of the start and end of the block
processes an edge
resets the block number and the index
returns the lowest entry of the given unit
returns true if the index at the specified index is in the
reset the data
returns the maximum tile number of the tile in the database
returns true if the address range of the specified address is in
get the index of the specified address
scan the given address to a specific address
returns the address at the specified index
sets the value of the lo entry
sets up the
returns the number of the specified tile in the tile
handle the root of the root
returns the driver name
returns the number of bytes remaining in the given address
resets the roots to the root stream
returns the number of tiles in the specified tile
handles the address of the address
dump the debugging information
handle the reference from the address space
sets the range of the range
sets the range of the range
reset the data
set the of the
flips the head of this sequence
allocate a new
returns a constant operand of the operand
this method is called when a data is created
returns true if the given node is a member of this node
this method is called when the user selects a
split the unit in the unit
returns the maximum number of objects that can be allocated
removes the given from the current position
scans the given object from the given object
returns true if the client is connected
returns true if this request is
adds the given unit to the list of free units
this method will be called by the pages to be able to
remove a unit from the list of free blocks
returns the number of pages to be used for the page
scans the given object from the given object
check whether the given array of is legal
returns the right value of the unit
returns the number of pages in the page
transmit a reception to the server
scans the given address for the given address
decrement the pages of the pages
scans the given address for the given address
sets up the
this method will be called by the pages to indicate the pages
handle the reference from the address space
prepare for a new
release the heap
this method is called when a data is changed
sets the space space for the given space
setup the control info

move the cursor to the next chunk
returns the size of the page at the given address
initializes the control at the specified index
adds a control to the control
sets the control
prepares the entity to be executed before the event
release any acquired resources
returns the control at the specified index
release the resources
the page number of the pages
notify the new block that the given block has been
this method is called when the page is rendered
this method writes the data to the control
prepares the current
releases the recycled
sends a to the given event
prepares the entity to be used to prepare the
returns true if the object is live
returns true if the object is live
prepares the current state of the
returns true if the given object is reachable from the
returns true if the given object is reachable from the stack
prepares the quad
release any acquired resources
the of the
consumes a block of block and returns the appropriate
returns true if the given object is reachable from the
check if the age is
returns the space that the given byte is the same as the
grows the buffer by the specified amount of space
blocks until a block is added to the block
prepare the
release a
returns true if the given object is reachable from the pool
prepares the
gets the
prepares the entity to prepare for this instance
prepares the
returns the next chunk of the specified address
release all the
the to
returns the next chunk of the chunk of the given address
the next chunk of the specified data
returns the next chunk of the specified data entry
returns the amount of allocated pages
returns the local factorial of the operand
mark the current mark as a mark
notify the new block that the given block has been
returns true if the given object is a stub object
returns the maximum number of concurrent threads
reports that the job completed successfully
write a char array to the output stream
write a char id to the stream
reports the current physical number of physical
returns true if the allocation is emergency of the current
returns true if the gc is enabled
returns true if the given array of bytes is a alloc call
returns the option set for this option
reset the thread counter to the current thread
returns local dual of local bit
adds a reference to the reference
sets the reference to the given reference
compute the static roots of the static compute method
resets the iterator to the initial state
returns the next mutator
returns the reference of the reference
compute the boot roots for the given local location
returns the object that is decorated by the given object
sets the
adds a new to the server
sets the
sets the general info
starts the server with the specified server
sets the value of a specific
check if the server is connected
resizes the given size to the given size
removes the referent from the reference
starts the compensation timer
starts the communication
stops the current simulation
add a new address to the list
the server
returns the referent of the given reference
this method is called to indicate the stream to the server
returns the header size
writes a byte value to the stream
sets the referent
this method is invoked by the client to register a new value
this method is called by the client to set the current value
clears the current index
this method is called when the user finishes the
this method is called by the client to store a summary of
this method is called by the
end the summary
returns the number of times the
this method is used to transmit a control to the database
mark the object as being cleared
returns the number of ready in the queue
this method is called when the user selects a new
returns the number of ready in the pool
sets the current state of the given operand
returns the address of the object that is associated with the given
returns the size of the specified object
returns the block at the given position
returns the alignment of the align type for a given object
returns the nanoseconds of the time interval
returns the cycles in the current time
returns the time in nanoseconds
returns the time in nanoseconds
returns the offset of the align of the given object
returns the nanoseconds of the given time
returns the time in nanoseconds
this method is called when the
returns the number of cycles that are not handled by this machine
returns the number of in the system
returns the current size of the given object
emit the
returns the next object in the model
returns the object from the start address
clears the specified block
returns true if the object is an array of type
returns true if the given object is a primitive array
test if a bit is available
writes the specified array of characters to the output stream
scan the for the given
write a char id to the stream
copies the chars to the destination string
this method is called to indicate that the collection of
returns the value at the specified index
sets the value of the given object as a barrier
trigger the update async request
scan the transitive closure of the given object
returns the maximum number of concurrent messages
evaluates a given object and returns the result
reports the current job to the current running
this method is called by the
sets the local dual of the given operand
reports the current physical physical number of the physical
process the frame for the frame
auto generated axis2 call back method for
returns true if the allocation
compute the static roots of the compute method
returns true if the is
compute the global roots for the current context
prepare a mutator for the given mutator
prepares the collector
compute the root of the trace
returns the number of closed threads
compute the boot roots for the given local location
prepares a word with the available
schedule a task to be scheduled
returns the set of the option options
this method is called by the framework to set the
returns true if the current is positioned
this method is called when the user selects the
returns a new active plan
scans the given scan trace
forward the forward to the stack trace
this method is called when the user selects the
returns the number of references to the number of threads
write a byte value
this method is called when the user selects the
returns a new instance of this code assert code
this method is called when the user selects the
sets the range of the given address to be the given address
create an instance of
resets the iterator to the initial state
returns the of the given address
scans the frame for the given code
this method is called to indicate that the
reads the next byte from the data model
returns a new collection with the current
this method is used to determine if the is
resets the range of the specified address
create an instance of
puts a new address in the buffer
dump the memory to the specified memory address
lock a lock
write a word to the available words
the
creates a new
returns a new object model
reads the next available word from the model
construct a new reference processor
creates a new processor
create an instance of
create an instance of
returns a new string containing the strings that will be
returns the size of the specified object
returns a new instance of the counter
returns the alignment of the given object
acquires the lock lock
returns the
throws a new exception
asserts that the condition is true
asserts that the assertion is true
dump the contents of the top frame
dump the stack trace to the stack
returns true if the is
returns the copied offset for the given object
returns the interpreter that is associated with this server
returns the address of the reference
returns the property name for the specified property
returns the value of the property with the given name
returns the value of the property as an integer
returns the value of the property with the specified name and value
returns the value of the property with the specified name
returns the value of the property with the given name
returns the number of collections in the collection
returns the current size of the given object
unlocks the lock
returns the number of cycles since the last time the time has
this method is called when the user observes the voting
dump the reference to the
this method returns the in the
returns the metric
dump the object to the given object
prints the method
returns the address of the address
returns a hash code value for this object
returns true if this is a null value
returns the value of the int value
returns a string representation of this object
returns the long value of this object as a long
returns a string representation of this object
returns the offset of the current value
returns the address of the cell at the given index
returns the extent of the extent
returns a new instance with the specified code byte code
returns a new instance with the specified value
returns a new instance with the specified number of code this code
clears the current buffer
returns a new instance of word word
returns true if the value is zero
returns a new instance of the word with the specified word
returns a new instance of the specified word
returns true if the value is max
returns true if the value of the given field is a legal
check if the value is greater than or equal to the given
returns true if the given value is in the complement of the
returns a reference to the object reference
returns the byte value at the specified address
returns true if the given word is in the list
returns true if the given word is a
returns the character at the given address
returns a word and the value of the word at the given
this method is used to accommodate the value of this
returns a new word
returns the value of the specified address
xor the xor of the word
returns a word
returns a word that is the word that is associated with this
returns a word
returns the value of the specified address as a long
returns a word
returns a new instance with the specified number of address
returns a new instance with the specified offset
validate the value of the field
validate the value of the field
returns a new instance with the specified number of addresses
returns true if the output is out of memory
returns the new address of this code other code
sets the value of the out of memory flag
returns the collection of attempts to be used for the
read a value from the list
returns a new instance with the specified offset
this method is called when the user attempts to update the report
this method is called when the new line is done
clears the collection of
starts the thread
returns true if the physical allocation is a physical allocation
returns the new value of the specified extent
print an object
fail the given option
returns true if the watch is watched
returns the difference between the current address and the
handle the uncaught exception
returns true if the value of the given address is less than
returns the context
returns true if the value is less than the specified value
this method is called by the framework to indicate that the
dump the contents of the stack to the given root directory
this method is used to determine if the is
returns the policy for the
returns true if the value is greater than the specified address
returns the stats for the current benchmark
this method is called when the end of the end of the
this method is called when the heap is flushed
checks whether the given address is a
this method is called before the snapshot is created
this method is called after the simulation has been created
runs the thread
returns true if the value is equal to the given address
called when the has been reached
cancels the current user
starts the thread
checks the condition for a condition
determines if the given address is a
wait until the latch is completed
stores the data in the model
prefetch the prefetch
suspends the scheduler
adds a referrer to the list of referrer
load data from the given object
scans the given object from the given object
this method is used to mark the object as needing to be
this method is called when the root of the
returns the object reference for this object
this method is used to iterate over the stack
returns the hash value for the specified object
returns the reference to the object associated with the given offset
this method is used to load the byte from the current
appends the given code element code to the end of this list
returns the current index of the current element
sets the n
resolves all method references
load a byte from the data store
returns a string representation of this operator
returns the compiled method
returns a new instance of the pool
returns a stack frame
pushes and returns the value of the element at the top of
removes the element from the stack
peeks at the top of this stack
gets the character that is used to load the current
returns the character at the given offset
push a frame onto the stack
pop the top of the stack and returns it
returns the type of the expression
returns the short value of the current object
returns a compile rule
returns the number of data in the stack
returns the short value of the specified offset
returns the number of references to the stack
returns true if the frame is a valid
returns the object associated with the given frame
returns the method
returns the index of the frame in the frame
this method is used to load the current
returns true if the operand is a operand
returns the value of the frame at the given frame
returns a string representation of this object
load a float from the given offset
returns the object associated with the given frame
returns the line number of the line
returns the column number of the current column
returns the source location of the file
returns the location of the given source prefix
gets the number of in the current thread
load a integer value from the given offset
returns the long value of the current thread
returns the value of the specified offset
define the field of the field
gets the double value of the
the end of the range
returns the value of the specified offset
load the word word
load a word from the
this method is invoked when the user selects the
call this method to handle the call to the method
push the current process on the stack
save the current frame
load the address
sets the actual parameters for the given array of the current
returns the bool value of this property
declares a new slot
this method is called when the stack is
returns the slot at the specified index
returns the object value
load a address from the given offset
returns the type of the slot
returns the value of the code boolean code property
sets the value of the specified item
trace the given trace value
load a word
compute the roots of the roots
dump the roots to the given root
load a word from the word
returns the saved pc
saves the given code
stores the value of the specified object in the database
sets the result slot
removes the result slot
sets the result of the test
returns the object type
returns the slot of the slot
evaluate this expression to the value of the specified
stores the value in the given position
executes this
reads the string from the input stream
stores the value of the given address
stores the value of the given address
stores the value in the current frame
stores the value in the given position
stores the value in the given value
returns the type of the specified name
returns true if the given name is defined
stores the value in the given position
returns the line of the specified line
stores the value in the current memory
stores the value in the given position
stores the value in the database
stores the value in the given position
stores the value in the current position
returns the number of in this object
returns the long value of this object
stores the value in the given position
returns the offset of the current object
returns the extent of the extent
returns true if this is empty
returns a new instance with the specified word
stores the value in the database
returns a copy of this plus with the given offset
returns a new instance with the specified number of
returns true if this is a maximum value
returns the value of the specified word
returns the value of the lt word gt
returns the reference to the object reference
returns the value of the lt minus gt
stores the value in the given position
returns true if the given word is a
returns true if the given word is in the list
stores the current value in the database
returns true if the given code input code is in the same
returns true if the given word is in the list
returns the long value of this object
this method is used to determine if the given word is in
stores the value in the given position
returns the word that is currently being used to represent the
returns a new word and returns it
this method is used to accommodate the code word code
returns the word that is not equal to the current
returns a new instance of the address with the specified number of
this method is used to set the value of the specified word
stores the current value in the database
returns the word at the specified position
sets the value of the current value
sets the value of the current address
sets the default value
sets the default value
returns the word at the specified position
sets the value of the current value
returns a new address with the specified offset
sets the value of the default pages property
stores the value in the given offset
sets the default value
returns the word at the specified position
sets the value of the current value
returns the next option
sets the default value
sets the value of the
returns the code address code of the code extent code of the
sets the default value for the default value
prepares the word
log the given option
finds the value of the given string
log the given xml element
log the xml
returns the result of this fixtures code
throws an error
asserts that a condition is true
logs a message with code name code
returns the new address of this code address code
sets the default value for this property
this method is called when a condition is broken
prepares the word at the given offset
sets the value of the current value
sets the default value
returns the new range minus the specified number of
returns the object that is used to store the object reference
returns the difference between the address and the other address
returns true if the specified address is an instance of the given
prepares the object reference for the given offset
returns true if the given address is less than the same address
returns the address of the
returns true if the given address is a legal address
prepares the address for the given address
returns true if the given address is a address
returns the successor of the given x y coordinate
this method is used to determine if the given address is already
prepares the object for the
this method is used to determine if the given address is a
prepares the offset of the given offset
this method is called to notify the that the specified value
this method is used to load the object reference
returns the reference to the code offset code object
this method is called by the
this method is used to load the byte from the database
this method is called to notify the that the specified word
gets the byte offset of the byte at the given offset
moves the given word at the specified position
this method is called to notify the that the value has
gets the character
this method is invoked to indicate that the value of the
gets the character at the given offset
returns the short value of the field
this method is called by the when the value is successfully
returns the short value of the specified offset
attempts to change the value of the specified address
gets the float value of this object
gets the value of the specified offset
this method is called by the
gets the offset of the specified offset
returns the long value of this object
returns the long value of the specified offset
returns the current value of the function
gets the offset of the specified offset
loads the address of the
loads an address
load a word
loads a word from the current position
stores the value of the object in the given reference
stores the value in the given object
stores the value of the address
stores the value at the given offset
stores the value of the given value
stores the value in the given position
stores the value of the given value
stores the value at the given offset
stores the value of the field
stores the value at the specified offset
stores the value of the field
stores the value at the specified offset
stores the value of the given value
stores the value in the given position
stores the value in the database
stores the value at the specified offset
stores the value of the given character
stores the value at the given offset
stores the value of the field
stores the value at the specified offset
prepares the word
prepares a word
prepares the object reference for this object
prepares the object reference for the given object
prepares the address of the
prepare a new address
prepares the object to be used for the
prepares the offset of the given offset
this method is invoked when the value is read
this method is called by the
this method is used to check if a word is a valid
this method is used to accommodate the given word at the specified
this method is invoked to indicate that the value of the
this method is called when the value of the
this method is called by the when the value of the
returns a string representation of the object
generates a new state
a reference to a slot
creates the table
this method is called when the ok button is pressed
returns true if the given is stored in the list
returns true if the index is positioned at the beginning of the
gets the
deletes the given index from the lucene index
deletes the current index
adds a new element to the list of items
removes all history objects from the history
reads the tree from the current tree
handles the event
sets the lit data data value for this
returns the id of the
sets the id of the abductor
sets the id
sets the filename value for this
sets the lit time stamp value for this
returns the id of the
sets the filename value for this
sets the id of the
returns true if the is
sets the father cat
sets the name value for this
returns the file name of the file
save the given file to the given file
saves the given file to the specified file
registers the observer
unregisters a job
returns the job size
called after the unit has been done
sets the state of the state
returns the description of the current value
compares this object with the specified object for order
set the endpoint address for the specified port name
resolves the given resource
sets the recording
copies the contents of the input stream to the input stream
the action has been activated
sets the size of the
merges the list of keys and values
update the hash map with the given string
returns true if the input pattern matches the input pattern
equivalent to the standard python method
returns true if the element contains a given object
returns the parent of this node
returns the id of the
returns the
returns the description of the
returns the
returns the
returns true if the is
returns the description of this filter
returns the number of digits in the current language
returns the dec
returns the separator
returns the prefix of this namespace
returns the suffix
sets the default locale
starts the task
returns a description of the filter
returns the size of the list
returns the value at the specified index
removes the element at the specified index
starts the task
the top of the view
returns an action that copies the action to the clipboard
returns the type of the
returns the number of
adds a new component to the toolbar
adds listeners to the window
returns the spinner value
sets the encoding to be used for the
returns the frame that was used to draw the frame
add radio button to radio button
update the index
returns the size of the list
returns the element at the specified index
adds a change listener to the change evaluator
sets the selected item no event
sets the selected item
returns a list of all the cipher panels
returns the selected item
sets the
returns the selection collation key
returns the collator
sets the value of the comparison rules
returns a number of all the added characters that are not equal
returns the plain text locale
fires contents changed event
returns the ignored chars list model
invoked when an action occurs
this method is called by the view to run the
returns the menubar for the menu bar
returns the set of all ignored chars
returns the character that is used to represent the
notifies the listeners that the current selection has been
returns the spinner value
returns the replacement key
reverse the current selection
returns the substitution hash map
sets whether the node is collapsed
returns the frame
returns the cipher
returns the alpha channel
adds an action listener to the
removes an action listener from the
returns the of the array of the
adds an action listener to the
removes an action listener from the
returns the type of the change
returns the number of vertices in the model
adds a new window listener to the list
returns the cipher
returns the set of include patterns
returns the
returns the set of ignored objects
returns the cipher alphabet
returns the replace key
returns the source document
returns the plain alphabet
returns the source encoding
returns the set of ignored classes
show the ignored text
returns the language sensitive
returns the lang alphabet
returns the alphabet
returns the lang
returns the
returns the lang
returns the
returns the index
returns the collation key
sets the collation key
returns the string representation of the source
sets the frequency of the
returns a string representation of the object
returns the column name
returns the number of rows in the table
adds a table mouse listener to the table
returns the sequence of the sequence
returns the string representation of the sequence
returns the sequence length
returns the frequency of the current
updates the total number of records in the list
returns the number of rows in the table
gets the value of the property
save the project
sets the locale
gets the value of the include lst property
sets whether the ignore is
returns set of ignore set
sets whether or not the control should be ignored
gets the value of the include ex lst property
returns the character at the specified index
returns the replace map
gets the lst
returns a string containing all the ignored chars
gets the lst
sets the source of the file
returns the source encoding
sets the encoding to use for the source file
returns the path to the rules
sets the rules path
sets the title frame title
adds listeners to the window
sets the title on the frame
sets the project title
this method is called when the connection is closed
resets the cache
advances the current probe to the next trajectory
returns the value of the specified string
creates the graphical representation of the
removes the graphical items from the
attaches listeners to the given
sets the fitness of the population
selects the parents to the parents
creates the
this method is called when the mutation is done
returns the best individual to the current
returns the population
adds a listener to the list of listeners
removes a listener from the list of listeners
notify listeners that the generation of the generation has been modified
returns the pointcut
creates a random individual
calculates the fitness value for the given tour
creates a new city
returns a list of all the in the database
invoked when a card is inserted
invoked when a card is removed
this method is used to instantiate the applet
this method is used to create a new applet
checks if the specified application exists
returns the applet information for the given applet
this method is used to get the credentials for the given credentials
inserts a new order into database
returns the next id in the sequence
base tarifaria
sets the icon x
sets the value of the big image width
sets the height of the image
sets the icon y
sets the small image width
sets the html text
this method is called when the end of the change
sets the small image height
sets the main label of the main component
push a new label to the current stack
pop the label from the stack
sets the icon width
sets the focus time
sets the alpha value for this alpha component
sets the time in milliseconds
sets the icon height
sets the element number
sets the area height
sets the area width
sets the visibility of the image shadow
sets the image type
sets the focus time in the start time
sets the shadow visibility
sets the shadow bounds for the shadow
sets the root actions
sets the image shadow x
sets the image bounds of the image
sets the small image
sets the big image
sets the focus time
sets the y shadow y value
sets the time in seconds to be shown in the
adds a launch action to the launch menu
sets the width of the image shadow
sets the image shadow height
sets the background image
sets the title visible
sets the title label of the title
sets the main label
sets the title label y
sets the title label width
sets the title label height
sets whether or not the description should be shown
sets the description label width
compute the animation
sets the image type
sets the animation
sets the foreground color for the title label
sets the start time of the task
sets the title label text
sets the focus time of the specified time
sets the time in milliseconds to use for the given time
sets the background image visible
closes the underlying stream
execute the command
write a portion of an array of characters
writes the specified character to the output
writes the string
this method is used to execute the given sql query
this method will be called by the application
writes a portion of a string
executes the given sql statement
returns the database info
returns true if the component is visible
this method is used to execute the given code code
execute the given string
this method is used to execute the command
execute the sql
executes the given sql statement
execute the command
execute the sql
execute the command
executes the command
this method is used to execute the given code code
shows the spinner
this method is used to execute the given sql query
this method is used to execute the command
this method is used to execute the command
this method is called to execute the given sql
p this method is used to execute the command
execute the given string
this method is used to execute the sql command
this method is used to execute the command
execute the sql
this method is used to execute the given sql query
execute the command
executes the given sql statement
returns the url of the connection
executes the command
returns true if the component is visible
write a single character
returns the name of the database driver
shows the current connection
returns a verbose string for this bundle
gets the dao
sets the name of the bundle
sets the intro value
returns a string representation of the specified time
sets the url
sets the resource bundle
returns the input
gets the value of the url property
sets the driver
sets the dao for communication with the data layer
returns the driver name
returns a string representation of this object
returns the default resource bundle for the resource bundle
adds a new user to the list
sets the choices
returns the choices
returns the character at the specified index
returns the length of the contents
returns the number of users in the current user
returns a new character sequence of the given sequence
returns the string representation of this object
returns the user properties
returns the input output
reads the next byte of data from the buffer
sets the default choice
returns the schemas database database
returns the default choice
initializes the application
sets the show cancel property
returns true if the dialog is shown
load the resource bundle from the resource bundle
load the commands from the current
setup the application
this method is called from the standard reader to set the console
returns the columns value of the table column
returns a list of all columns in the table
print the current line
print a string and then terminate the line
prints a string
erases the data structures from the given code count code
start spinner time
returns a connection to the database
stops the spinner
sets the echo flag
sets the output stream to be used to print out the output
resets the out of the system
sets the in input stream to be used for reading
starts the command loop
stops the loop
sets the auto commit mode
resets the to the beginning of the queue
returns true if the auto commit mode is enabled
sets the raw mode
returns the raw mode
get the sql string for a given sql query
returns a string representation of this object
returns a string representation of the object
sets the root directory of the directory
returns the page for the given url
make full width and height
make full width and height
returns the page for the given url
returns the page for the given url
sets the extra widgets visibility
returns the start url of the
returns the event id
returns the provider that is associated with this provider
returns the name of the peer
returns the id of the event
returns the event disposition for the given event
returns the event disposition for the given event
returns the provider
puts the specified value into the hashtable
returns the address of the transport that is used to determine the
returns the capabilities of this object
returns the terminal connection capabilities
returns the transfer controller
this method initializes update list panel
this method initializes update table scroll pane
checks the server configuration
process the given object
called by the framework to perform the processing of the
gets the new design
gets the value of the new language property
returns the update update status updater
sets the update update update updater
sets the new value of the
returns the update status of the update update updater
returns the new name of the new file
returns the file name of the file that this is associated
sets the new updater file name
sets the
undeploy the given directory
returns the doc base for the given path
returns the config file for the given path
show the server
returns the server configure configuration
returns the language resource
update the components of the server
returns the server restart button
returns the server start button
returns the server stop button
this method initializes memory panel
this method initializes connections panel
this method initializes reset button panel
this method initializes reset button
this method initializes refresh button panel
this method initializes refresh button
stops the server
returns a string representation of the object
returns a string representation of the object
this method initializes web application table
copy the input stream to the specified output stream
reads a string from the input stream
returns an input stream for the specified resource
this method initializes web application scroll pane
returns a resource as an input stream for the specified resource
this method initializes database table scroll pane
returns true if the server is a configure server
returns the server identifier
returns the server type
returns the version of the version
sets the server server
adds a filetype dot extension to filter against
returns the complete state of the
returns the destination folder
returns the delete flag
returns the file zip file
returns the update directory for updating the directory
returns the state of the file
sets the state
returns the error state
initializes the extractor extractor
sets the error state
this method stores the file in the local directory
returns true if the application is used to be used
this method is used to set the proxy configuration
unlink update file
creates a new folder
returns true if the proxy is used to serve requests
sets the use proxy
returns the host host
sets the host host
checks if the file is a legal update file
sets the proxy port
returns the proxy user name
sets the proxy user name
returns the proxy user password
sets the proxy user password
returns true if this object is
this method initializes update list panel
returns the
returns true if the ok button is pressed
this method initializes update table scroll pane
sets the ok button pressed
returns the of the document
creates the document
creates the xml document from the xml file
returns the xml representation of the xml document
returns the description of the given locale
returns the updates
sets the include
sets the exclude
returns the is requested
gets the value of the type property
returns the current version of the current version
returns the update extractor cache
returns whether the extractor should be used
gets the value of the type property
sets the type of this object
gets the new version
sets the use extractor
sets the file zip file
sets the destination folder
returns the update directory
returns the updates
sets the value of the updates property
create an instance of
create an instance of
returns the allowed version of the
create an instance of
create an instance of
create an instance of
sets the requested value for this request
create an instance of
sets the current version of the current version
gets the value of the complete property
gets the value of the size property
check if the current version is a update
sets the value of the complete property
sets the value of the size property
gets the value of the delete property
returns true if the file is installed
sets the value of the delete property
gets the value of the date property
returns the server identifier
sets the value of the server identifier property
sets the value of the date property
returns the server server
sets the value of the configure server property
returns the server type
sets the value of the server type property
sets the value of the filename property
gets the value of the new version property
sets the value of the new version property
returns the allowed version of the allowed sdk
sets the value of the allowed old version property
sets the value of the delete update dir property
sets the value of the use extractor property
sets the list of users
gets the value of the show only new update property
gets the new update only new value for this update
returns the
sets the new value for the new new update only update
returns true if the proxy is used to create new use proxy
this method initializes table list panel
sets the new value of the code use proxy code property
this method initializes refresh button panel
returns the host host host name
this method initializes refresh button
sets the new proxy host
returns the
returns the new proxy port
adds a new session to the list of active sessions
adds a new rejected session to the list of rejected sessions
this method initializes web application table
sets the new proxy port
adds a number of sessions to the session
adds a observation counter to the session
gets the new proxy user name
adds a observation to the list of times
adds a free observation to the list of
adds a new observation to the current thread
sets the new proxy user name
adds the errors to the current time
adds the total requests requests of the total requests
returns the new password user password
this method was created by a smart guide
add a new observation to the
sets the new password to the user password
sets the tomcat server
sets the text resource
returns the selected role list
sets the tomcat settings panel
sets the user edit user dialog
returns the selected group list
sets the tomcat manager
returns the selected group list model
sets the tomcat overview panel
sets the tomcat server
returns the selected role list
sets the tomcat users panel
returns the color of the
returns the model group model
returns the model list model
sets the data
this method initializes tomcat session chart panel
adds a group to the group
adds a role to the role
remove a role from the role
removes all roles from the list
removes the specified group from the group
removes all groups from the group
sets the data
this method initializes tomcat traffic chart panel
gets the create user attribute of the user object
sets the create user
returns the tomcat request chart panel
sets the groups
sets the value of roles
sets the group list
sets the value of role list
constructs a string representation of this object
removes a connector from the set of connectors
this method initializes reset button
removes a connector from the set of connectors
returns the shutdown port
returns the server port
sets the shutdown port
returns the referenced element
constructs a string representation of this object
returns the new port
sets the new port
returns the original doc base
gets the new protocol
sets the new protocol
returns the file where the file is used to create a new
returns the new port
sets the new file file
sets the new redirection port
constructs a string representation of the object
returns the new password for the session
returns the new scheme
sets the new password for the new session
sets the new scheme
gets the value of the new keystore type property
sets the secure secure state
sets the new new keystore type
returns the ssl protocol used to create the configuration
sets the ssl protocol used to create new ssl
returns the redirect port
returns the keystore file
returns the password of the keystore
returns true if the connection is secure
returns the value of the keystore type
returns the initial heap size
returns the ssl protocol
returns the maximum heap size
gets the value of the new client auth property
returns the new initial heap size
returns true if the port is new
returns the new max heap size
sets the new auth status
gets the value of the new protocol property
returns true if the client authentification is
returns true if the port is a new redirect port
returns true if the user is configured to create new ssl
returns true if this is a new scheme
sets the default ssl status for this connection
returns true if the user is a new secure secure connection
returns true if ssl is enabled
returns true if the protocol is ssl
returns the user manager
returns true if the file is already read
creates a host to be used by the server
returns true if the password is set to be new
creates a connector
returns true if the type is new
create a context for the server
creates a host to be used by this server
removes a host from the server
removes a connector from the server
removes the context from the context
returns the root context
saves the current database to the database
removes a host from the server
closes the database connection
save the data in the server
returns the root context
sets the file
returns the path to the root of the context
returns the server directory
returns true if ssl is enabled
returns the for the given service
returns the ssl for the given service
returns the for the given port
shows the dialog
returns the time of the up
returns the
sets the
returns the text of the current user
returns the database user database
activates the progress bar
gets the value of the property
deactivates the progress bar
returns the
discards the given context and returns the directory
returns the current configuration
returns the config file for the given path
sets the list of databases
sets the list of users
switches the active state of the online menu
switches to offline display
switches the online status of the user
switches to offline display
returns the database user database
returns the
sets the
returns the text of the current user
sets the server directory
import existing database
import the database
import
gets the value of the property
returns the group of the button
sets the create database dialog
sets the export dialog for export
sets the database manager
returns the current select tomcat directory
this method initializes j
sets the database database panel
this method initializes j
sets the database server
sets the database key panel
sets the server
sets the
sets the database table
this method initializes j
sets the import database dialog
sets the database server
sets the my overview panel
sets the my sql user database
this method initializes reset button
returns the https connector
sets the data
returns the selected service
returns the sql file
sets the sql file
returns true if the database is deleted
sets the delete existing database
gets the create new database
sets the create new database
sets the database list
gets the value of the import property
sets the import
constructs a string representation of the object
sets the number of dropped connections
gets the sql file directory
sets the sql file directory
sets the value of bytes received
returns the sql file name
sets the number of bytes sent to the server
sets the sql file name
sets the number of connections
constructs a string representation of the object
sets the maximum number of connections that this pool should be used
sets the opened tables
sets the open files
sets the open streams
sets the open tables
sets the name of the user
sets the number of threads that are cached in the cache
sets the number of concurrent connections to be established
sets the number of threads created by this factory
sets the running running state of the running server
returns the old host
creates a new user object for the given host
returns the properties file properties
checks if the server configuration is valid
sets the new port
returns the configuration
returns the port of the server
sets the log general
returns true if the log is a log general
gets the value of the property
returns the log for the file
sets the log error
returns true if the log is an error
returns the file name of the error log file
sets the log count for the log
returns true if the server is a slow max threshold
gets the value of the property
returns the log file for the database
check if the server configuration is a server configuration
gets the value of the property
returns the select my sql directory
gets the value of the mode property
saves the configuration file
creates the new working configuration file
returns the config directory
sets the
sets the server version
sets the location
gets the value of the country property
sets the country
sets the email
gets the value of the organization property
sets the organization
gets the value of the organization unit property
sets the organization unit
sets the password
sets the state of the
sets the alias for this object
returns the lifetime of the request
sets the lifetime
returns the unit
sets the unit
returns the file name of the keystore file
sets the file file
returns the path to the keystore path
sets the path to the keystore
sets the location
sets the value of keystore type
sets the country
sets the organization unit
decrypt the specified input
sets the lifetime
sets the unit
gets the value of the property
returns the
returns true if the first element is a start element
sets the first start value
returns the owner frame
returns the linked button
sets the install
returns the owner frame
returns the exception that caused this exception
constructs a string representation of this object
adds a validation exception to the set of exceptions
returns the number of elements in the list
returns true if the exception is empty
sets the text area
sets the icon text area
adds a button to the right button
adds a button to the bottom left button
returns the text resource
returns true if the folder is deleted
sets the value of the delete folder property
this method initializes update list panel
this method initializes update table scroll pane
this method initializes table list panel
this method initializes refresh button
this method initializes users table
this method initializes users scroll pane
sets the list of users
adds a new observation to the current thread
adds a number of errors to the current time
adds the total requests requests to the current session
this method was created by a smart guide
add a new observation to the
this method initializes reset button
saves the database to the database
closes the database
saves the configuration file
creates a new working configuration file
returns the design
returns the description of the given locale
this method initializes update list panel
returns the time in bytes
returns the size of the header
returns the time in milliseconds since the last time the message was
returns the absolute path of the file
returns the size of the message
adds a new update to the list
format the date
format a string
appends columns to the list of columns
executes the given query
execute the statement
returns the nullable nullable
add a where clause for a given query
moves the cursor to the next row
sets the sequence
sets the foreign key primary foreign key
sets the foreign table
closes the connection
adds a where where condition
adds a where where condition
returns the query
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row of
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row of
returns the value of the specified column as a java
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value stored in the designated column
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row of
the value of the specified column as a time
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row of
retrieves the value of the designated column in the current row
retrieves the first warning reported by calls on this
returns the result set for this connection
calls the code get object code method on the delegee prepared
calls the code java
retrieves the column index for the given column name
returns the value in the current row column
retrieves the value of the designated column in the current row
indicates whether the cursor is on the last row of
repositions the cursor to the last previously returned
moves the cursor to the last row of this code result set
retrieves the current row number
moves the row to the given row number
moves the current row relative to the current one
moves the cursor to the previous row in this result set object
sets the fetch direction
retrieves the fetch direction
retrieves the number of rows in this database
retrieves the type of this code result set code object
updates the designated column with a code index code value
updates the designated column with a code boolean code value
updates the designated column with a code byte code value
updates the designated column with a code short code value
updates the designated column with a code int code value
updates the designated column with a long value
updates the designated column with a code float code value
updates the designated column with a code double code value
sets the designated column in either the current row or the insert
updates the designated column with a code java
updates the designated column with a code byte code value
updates the designated column with a code java
updates the designated column with a code long code value
updates the designated column with an code object code value
updates the designated column with a code java
updates the designated column with a code boolean code value
updates the designated column with a code byte code value
updates the designated column with a code short code value
updates the designated column with a code int code value
updates the designated column with a long value
updates the designated column with a code float code value
updates the designated column with a double value
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with a code byte code value
updates the designated column with a code java
updates the designated column with a code long code value
updates the designated column with an code object code value
inserts the contents of the current row into the database
deletes the current row from the current row
cancels the update operation
returns the statement
returns a value in the specified map
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
returns the value of the specified column as a java
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row of
returns the value of the specified column as a java
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with a code java
updates the designated column with a code clob code value
updates the designated column with a code clob code value
updates the designated column with a code java
initializes the toolbar
returns a tab representation of the record
creates the pages of the multi page editor
saves the multi page editors document
saves the multi page editors document as a multi page editor
updates the page of the page
spawns a monster with the given
adds a new player to the
test the creation of a new null
test the creation of a empty string
tests that the
tests that the expand method
tests that the expand and is not
tests that the prefix of the expansion is ignored
tests that the expand text is expanded
tests that the expand and
tests that the expand join method
tests that the expand list of the filter is empty
sets the value of the given regular expression
test the encode empty string method
test the encode method
test the encode ascii string method
sets the value of the given property as a string
test the encode
test the encode normalization normalization
test method for
test method for
test the default default variable
test method for
sets the
test method for
test method for
tests the equals method
tests the equals method
tests finding the correct patterns
tests the equals method
tests parsing of error
test of equals contract method of class be
tests parsing error
tests the equals method
tests finding first
test match method
test pattern
assert that the given string is a valid token
tests that the expand method is called when the expand
test the
tests finding the
tests that the expand method is called when the expand
test the creation of a empty string
ensures that the resolver behaves correctly
test of equals contract method of class be
test that a single match works
tests the equals method
test that verifies that the match of the match works
tests resolving integer and returns a new
test match method
tests that the expand method is called when the expand
tests that the match typed method is called
test that the match
test that the matches method works properly
tests that the match path parameter is correctly found
tests that the expand method is called when the expand
test the resolve method
tests that the expand method is called when the expand
test resolve
tests that the expand method is called when the expand
returns the uri of the uri
find a pattern by its patterns
test resolve the
returns a new token with the given token
find the matching rule for the given patterns
tests that the expand method is called when the expand
returns the variable
resolve a pattern
ensures that the property is resolved correctly
tests that the expand method is called when the expand
returns the pattern that is used to access the
puts a value in the hashtable with the specified name
ensures that the resolver behaves correctly
sets the status
tests that the expand method is called when the expand
tests that the expand method is called when the expand
test resolve operator path
tests that the expand method is called when the expand
ensures that the resolver behaves correctly
returns the form
expand the expression
test the resolve objects method
tests that the expand type
returns the operator of this operator
ensures that the resolver behaves correctly
returns the default value of the property
returns the argument of this argument
ensures that the resolver behaves correctly
returns the type of this variable
default resolver for a resolver
binds a binding to the resolver
binds a binding to the scope
returns the value of the parameter
binds a binding to the resolver
returns the resolver associated with the given name and type
returns the resolver associated with the given name
returns the resolver associated with the given type
tests if the given uri matches the given uri
returns the character
returns the pattern
returns true if the given name is bound
returns true if the type is bound
returns the score of the score
expand the given parameters
computes the pattern of the given token
compute the score of the given token
returns the next character in the current format
returns a list of all the of the given type
normalizes the current state
returns the tree of the tree
test
returns the index of the first child of the given parent
returns the first child of a child of the given parent
returns the root node of the tree
returns the node at the given index
creates the connection
returns the millisecond of the time
sets the milli time
returns the date of the
closes the connection
reads a property from the database
returns an enumeration of the names in this hashtable
tests client interface
test that verifies that a
test of cleanup method of class org
test creating a new patient
test of update patient method of class
test method for
test the creation of a user
plays a sound
this method is called when the sound is loaded
returns the length of the
test that verifies that the text of the search is valid
test the search page
returns the root of the menu
returns the top item
sets the enabled levels
sets the number of trial points to be used for the
sets the block number
pad the of the given pad
returns the sum of the given values as a array of floats
circle circle coordinates
update the ui
paints the component
draw a shadow text
sets the volume
sets the of the sound
set a sample at the specified location
set a sample
returns the angle at the specified position in the current position
returns a sample that is used to play the sample
returns a sample with the specified length
returns a new instance of stereo play time
spin the full play of the sample
returns a new instance that is the same as the one
stops all the
returns the duration of the specified audio sample
compute the of the current
returns the zone of the last move
starts the end of the play list
returns the zone of the specified coordinates
resets the
plays a number of
starts the
returns the current experiment mode
returns the zone index
select the item at the specified index
returns the location of the location of the given index
handles the zone of the zone
returns the start of the
adds a speed to the queue
returns the average speed of the queue
returns the sum of the specified integer array
make a new
the of the
convert the point to the center of the screen
returns the coordinate coordinates of the given coordinates
invoked when the user releases a
plays the given sound
returns the module name
this is the entry point method
this method initializes this
this method initializes j split pane
this method will be called when the launch node is a launch
returns the preferences for the preferences
returns the code preferences code for the given name
returns the installation directory for the given name
returns the directory for the given preference
returns the version of the given version
returns the version of the specified version name and version
returns true if the given launch node is a launch
returns the first file in the given preference node
closes the current application
writes the given file to the file system
imports the given file into the configuration
resets the preference preference to the preference value
resets the preference panel
build the package
change state of the state
invoked when a key is pressed
called when the extraction is executed
returns the document that is the file
returns the board
resolves a reference
paints the image
delegates to the handler
handles errors thrown by parser
returns the document for the user
receive notification of a non recoverable error
sets the welcome message
sets the package name
sets the zip path
sets the path to the logo of the image
sets the output directory path
performs the action
sets the run application string
sets the path to the
sets the license path
returns the package name
returns the zip path
the
returns the path to the logo of the image
returns the output directory path
gets the value of the run application str property
returns the path to the
returns the path to the license
converts a string to a standard font
the
returns the
starts the thread
runs the
this method is called by the system
sets the tabs indentation
returns the number of tabs in the given string
the bugs of the bug
indents the tab at the specified index
the given error message
indents the current paragraph
runs the application
indents the paragraph
sets the reset flag
sets the prefix
returns true if the tab is a tab
sets the flag indicating whether the given
returns the path to the file
returns the flag indicating whether the interactive
returns the filename of the file
returns the directory of the file
sets the state of the
returns the auto indent flag
sets the file path
this method is called when the user selects the user interface
sets the text in the text area
sets the auto indent flag
returns true if the file exists
undoes the last change in the undo manager
applies the changes to the document
returns true if the text is empty
returns the text of the document
replaces all the text in the document with the given text
displays the text in the editor
sets the current state of the document
sets the current state of the document
creates the table
stores the state of the given state
restores the contents of the editor
sets the tab size
sets the ignore style change style
returns true if the style change should be ignored
returns the master copy of the master
returns the image
sets the
sets the image
add a click to the image
sets the value of the int variable
adds a mouse over image to the image
adds an image to the image
sets the boolean value of the
returns the image of the given image
sets the value of the attribute
returns the
returns the uniform value of this code code
returns the uniform value of this code code
returns the value of the int property
returns the boolean value
sets the action
sets the target
sets the time of the cycle
returns the x coordinate of the x coordinate
sets the caption for the border
adds a hint to the hints
returns the y coordinate of the y coordinate
returns the
returns an enumeration of all the
sets the life of the life
returns the color for the given node
returns the maximum life of the
returns the age of the life
sets the
returns the top level
this method is called by the thread to run the audio
sets the size of the board
sets the grids
sets the number of columns in the board
sets the rotation angle
returns the bottom left hand side of the
sets the number of columns
sets the row of the board
returns the left hand side of the
returns the rotation of the
sets the offset of the current entry
returns the right hand side of the
sets the x
returns true if the is
sets the y coordinate of the current
sets the
sets the hint
sets the image to be displayed
sets the visibility of the component
processes the given collection of elements
this method is called whenever the process is finished
returns the length of the current
adds a click to the image
gathers the widgets from the given list of widgets
start rendering the
adds a image mouse over image to the image
checks if the given region is a
this method is called by the thread to indicate the thread to
sets the render panel
sets the mouse widget
runs the thread
adds an image to the image
sets the text
adds a new text to the end of the text
returns true if the mouse is over the area of the given
invoked when the mouse has been clicked on a component
returns the current state of the over state
sets the x coordinate
adds a widget to the
sets the font color
adds a hints object to the hints
sets the background color of the background color
sets the y coordinate of the y coordinate
adds a new text to the end of the text
this method is called when the mouse is over the scroll pane
invoked when the mouse enters a component
adds a sprite to the sprite
sets the over state of the current component
sets the visibility of the component
invoked when the mouse exits a component
sets the period in seconds
ticks the current tick
sets the flag indicating that the current state is not over
this method is called when the user modifies the current
returns an enumeration of all sprites in the sprites sprites
returns an enumeration of the objects
invoked when the mouse button has been moved on a component
sets the pressed flag
returns an enumeration of all the hints
returns the texts of the text in the text area
clears the list of objects
finds the translation of the image
clears the hints
clears the texts of the text
sets the action
clears all the objects in the model
the
sets the target
forces the to be clipped
sets the action string
sets the action int value
removes a hint from the hints
optimizes the given
sets whether or not the action is set or not
returns the x coordinate of the x axis
returns the y coordinate of the y axis
sets the x axis
sets the y axis
sets the y coordinate of the
sets the x coordinate of the x coordinate
returns the action that is invoked by the
returns the master copy of this object
returns the angle of the circle
sets the angle of the
this method initializes j jmenu bar
this method initializes j menu file
this method initializes j menu item evaluate
this method initializes j menu item exit
this method initializes j menu item new
this method initializes j menu item open
this method initializes j menu item save
this method initializes j menu item save as a
this method initializes vertical split pane
this method is called by the application to paint the diagram
process the request and return the response
process the request and return the response
peforms the processing of the given request
sets the price
returns true if the is
sets the
returns true if the is
returns true if the is
sets the value of the property
sets the
returns the
gets the revenue source
sets the
sets the revenue source revenue source revenue source
gets the value of the property
sets the
sets the coupon
calculates the subtotal
creates a new membership object
sets the rs type
create a new purchase order business object
creates a new payment object
creates a new payment object
returns the date of the server
sets the date started
returns the date the time was completed
sets the date completed
sets the hours
returns the date picked up
sets the date picked up
sets the customer
check the password for the given password
sets the membership
sets the amount of the amount
returns true if the is
returns the membership object
creates a new database connection
returns the customers customer
theres no need for two creates because we dont need
creates a new business object with a guid
creates a rental object based on the given code code
save revenue source
sets the change
insert a revenue into the database
sets the type
theres no need for two creates because we dont need
returns the current value of the
reads a product from database
sets the m m
sets the source type
sets the caption for the
sets the amount of the coupon
sets the cc number
sets the filename
save product product to a product
gets the value of the cc expiration property
sets the credit expiration date
insert a product in the database
sets the date
theres no need for two creates because we dont need
theres no need for two creates because we dont need
sets the vendor
reads a revenue source from the database
sets the order lines
sets the filesize
adds a new order line to the list of the
save revenue source
update a product in the database
inserts a revenue source to the database
update the revenue sale
checks if the database exists
sets the store
creates a new photo object
creates a new business object
sets the product
sets the product type
sets the price
returns the price
sets the total price of the given drinks
returns the conversion type
sets the conversion type
returns the
sets the
gets the value of the property
sets the
sets the
returns true if the is
returns the date out of the
sets the
sets the date out
gets the date due
sets the name of the
sets the date due to the latest time due to a date
sets the desc
sets the
sets the average cost
sets the
sets the contact
sets the value of the transaction line property
adds a tx line to the transaction
returns the purchase order
sets the order of the po
sets the payment for this event
sets the total price of the given bin
creates a transaction line
sets the photo set
returns the print format
sets the print format
sets the
this method is used to run the given test
creates a new conceptual product object with a newly generated guid
theres no need for two creates because we dont need
save revenue source
inserts a revenue source to the database
update a revenue source
returns the length of the backup file
sets the length of the backup file
this method is used to retrieve the object from the database
sets the cost of the
returns the late value
insert a product in the database
insert a revenue source to the database
creates a new business object with a newly generated guid
sets the late value
returns the
update the
sets the
creates a new object
update the
returns the
sets the
creates a new
checks if the database exists
calculates the subtotal
creates a print format for the specified id
calculate the tax
this method is called when the precursor is over
calculate the total total amount of the tax
creates a new conceptual rental object
returns the original transaction
returns the number of photos in the list
sets the number of photos in the photo
returns the is dirty
sets the original transaction
gets the ss number
returns the format for the given paper
sets the ss number
creates a new employee bo object
sets the title
sets the date of the date
sets the value of the dirty flag
gets the purchase order
creates a transaction business object
sets the purchase order
sets the salary
sets the product
theres no need for two creates because we dont need
this method is used to convert a revenue source object to a
inserts a revenue source to the database
update a revenue source
gets the newsletter value for this admin customer
sets the newsletter value for this admin customer
returns the total number of transactions for a transaction
theres no need for two creates because we dont need
sets the
returns the interests
theres no need for two creates because we dont need
sets the interests
inserts a revenue source into the database
create a new order line
sets the customer
returns the backup exp date
sets the backup exp date
sets the last updated time
returns the membership of this object
sets the membership
replaces the word with the specified word
adds a dictionary to the dictionary
compares the specified object with this word for equality
puts a word in the dictionary
saves the properties to the file
ignore all occurences of a word
build the dictionary file
unsupported in this implementation
returns a list of words that match the given code
checks if the given word is correct
returns the suggestions for the given word
get the suggestions for the given word
stops the current document
resets the spell checker
load the index file
removes the family with the given id
sets the family
prints the given debug message to the console
lookup the key value pairs in the map
this method is called by the transporter engine to signal the
returns the highest fitness value
sets the space
move the figure to the given location
reads the figure from the storable
moves the figure selection
reads a string from the input stream
writes a string to the output stream
creates a new font
returns handles that handles the handles
creates a drawing object
returns the drag source actions
draw the circle
activates the tool
returns handles for the respective
returns the value of the attribute specified by the constant pool
sets the attribute of the element
creates and returns an undo activity
creates south panel
creates a new connection
creates a menu for the given attribute
creates the font menu
draw the
creates the panel that contains the
sets the panel that is displayed in the panel
creates a new selection tool
invoked when a mouse button is pressed on a component and then
adds a listener to the drawing
move the figure to the given location
draw the
handles mouse up down event
returns true if the figure contains a figure
inserts a vector of figures
activates the selection
deactivates the view
returns the drawing of the view
returns the editor editor
sets the value of the specified property with the given name
show help dialog
this method is called when the user selects a new user over
initializes the panel
tests if the current token is a number of
reads a 32 bit integer from the stream
creates the attributes panel
invoked when an item has been selected or deselected by the user
this method is invoked when an action occurs
creates a color choice
creates the overlay for the given font
adds an action listener to the list of listeners
removes an action listener
returns the preferred size for the specified rows
creates the font choice
creates the button panel
default implementation of the default
writes a string to the output stream
returns the value of the named attribute
writes the given storable
reads the given storable from the input
creates the toolbar
creates the tools palette
returns the box as a rectangle
this is called when the figure is moved
moves the figure in the selection
draws the polygon
handles mouse down events
returns the handles of the handle
returns the value of the specified attribute
sets the value of the attribute
mouse released mouse listener interface
returns the value of the specified attribute
draw the background
this method is called when the user wants to draw the
returns the number of columns in the overlay
returns the number of rows in the table
returns a string representation of the given string
draw all the views
creates and returns an undo activity
draw the drawing of the drawing
creates a new application
disconnects the figure
checks the minimum size of the view
creates the color menu
shows the authentication dialog
send the given form to the output
creates the font size menu
puts a string value into the context
puts a file into the file system
returns the response code
sets the question text
writes a file to a file
returns the response message
writes the form
returns the response data as a string
writes the form data to the output stream
sets the popup menu
exit the application
creates the font menu
creates a menu for the given attribute
returns the version of the applet
returns the drawing component
sets the panel containing the tool
sets the display update
cancel the current thread
creates a new figure
show help window
returns the dialog for the user to display
reads a string from the stream
creates the toolbar palette
returns the preferred size for the specified dimensions
creates a command button
invoked when a user selected user selected
this method is called when a user is over the palette
creates a new selection tool
draw the area
returns the display box
this is called when the figure is moved
sets the
creates the drawing component
returns the target property change listener
returns the setter method for the property
adds a submenu to the menu
finds a connectable in the target
sets the drawing editor for this editor
factory method for instantiating the input map
factory method for instantiating the action map
returns an icon for the given key
adds a new action to the given action
adds a new property to the list of
updates the view
updates the enabled state of the property change
notifies listeners that a property change has changed
updates the current value of the current element
polls the current state of the controller
starts polling the
stops the polling thread
returns true if the length of the fixed length is fixed
returns the length of the
returns true if the file should be used in the pack directory
returns true if the current frame supports frame
returns true if this object is
returns true if compression is supported
returns true if the encryption options is supported
returns true if this frame supports the frame
adds a property change listener to the listener list
returns true if this object supports the tag
removes a property change listener from the listener list
returns true if the render writer supports tag footer
creates a new frame spec data object
returns true if the given frame is contained in this frame
returns the value of the frame property
returns the frame type
returns the code frame code type for the specified type
returns the code frame code associated with the given id
compares the specified object with this instance for equality
compares the specified object with this instance for equality
returns the data of the
sets the size of the tag
returns the spec that this belongs to
returns the id of the definition
returns an iterator over the properties of this object
returns the number of properties in the property
checks whether the given type is contained in the list
returns the frame with the given type
returns the property at the specified index
returns the is read only
returns true if the is
returns the use encryption
returns true if compression is enabled
returns the use
sets the alter discard attribute of the object
sets the read only mode
sets whether or not compression should be used
sets the value of the user id property
compares this object with another instance for equality
returns the byte representation of the byte
returns the frame
sets the frame
sets the value of the parameter
sets the value of this code code object
sets the value of the specified value
adds a frame to the frame
removes a frame from the frame
removes the specified type from the list
removes all frames from the frame
removes all frames from the list
recalculates the size of the content
returns the size of the content
returns the preferred size of the component
returns the size of the content
returns the padding size
returns the policy spec
returns the version of the version
returns the revision number of the revision
returns the version string
returns true if the frame contains the specified type
returns the number of frames in the frame
returns the number of frames in the specified type
returns the type of the frame
returns the value of the specified type and property type
returns the value of the specified type and the type of the
returns the value of the specified frame type and the specified type
returns the frames current
returns true if the value is a experimental experimental
returns true if the is
returns true if the type is restricted
returns the restrictions for this
sets the policy spec
sets the preferred size of the component
sets the experimental value of the experimental property
writes the given output stream to the specified output stream
returns the key value associated with the key
returns the error message for this error
returns true if the has a negative number
returns the minimum value of the heap
returns the maximum number of concurrent flows in this flow
returns the minimum value of the heap
decreases the key value and the value of the key
returns true if the has a loops
returns the error message for the error
increases the key value and the corresponding value for the key
returns the error message
returns true if the weights of the weights are negative false otherwise
returns the error message
pushes a command onto the stack
performs the actual layout of the current graph
clears the undo redo
returns true if the undo manager has undo
returns true if the redo is redone
adds a visual state listener to the listener list
removes a visual state listener from the listener list
sets the presentation presentation
sets the presentation presentation
paints the
mark the given edges as a
selects the specified edge
selects a point in the polygon
select a rectangle in the current graph
returns true if the given point is in the selected item
mark the vertex as a new vertex
unselects all selected vertices
mark a polygon as a mesh
clears the current state of the graph
clears the current state of all edges
returns the edge with the specified weight
removes all the vertices from the visual graph
returns the edge with the end of the edge
sets the presentation presentation of this presentation
returns true if the given edge is selected
checks if the given point is selected
returns a new vertex that is the new one
creates a new edge with the given label
creates an edge end of the given edge
returns a new command to the user
returns a drag command that is called by the
returns a new drag command that is called by the
sets the tool
returns a new layout command for this layout
returns the graph presentation
returns the command that is used to change the weight of a
returns the convert to the command
returns the convert to the command
returns the convert to the given command
returns the selected tool
returns the tool for the tool
returns the add edge tool
returns the tool selected tool
returns the maximum flow selection tool
returns the tool factory
returns the editing handler factory
returns the action factory
returns true if this is a directed
returns the action factory
returns true if the type is weighted
adds a component to the
removes a component from the
adds a command to the undo manager
this method is called when the user selects the
sets the state of the state
paint the background
adds a listener to the list of listeners
returns the action for the selected action
removes a listener from the list of listeners
adds a button to the list
gets the add vertex action
gets the add edge action
returns the action for the
returns the action to use for
returns the action for undirected
returns the action for circle
called when the user selects a message
returns the discard highlighting action
called when the user presses the ok
returns the exit action
returns the top sort action
returns the action tree action tree
returns the minimum spanning tree action
returns the maximum flow action
returns the save as an action
adds a listener to the list of listeners
removes a listener from the list of listeners
returns the center of the current point
sets the center of the given point
draw the circle
returns true if the given point is in the set of points
returns true if the rectangle is in the area of the rectangle
adds a listener to the graph
removes a listener for graph state events
pause the simulation
resumes the event firing notification
returns the start point of the edge
paints the
adds a vertex to the graph
removes a vertex from the graph
draw the line
adds a new edge to the list of listeners
removes the specified edge from the graph
returns true if the connectable is connected to the connectable
validate the schema
returns the preferred size of the given vertex
parse the graph
returns the graph
parse the presentation
returns true if the is weighted
sets the weight of the edge
returns the graph that is currently being used for this graph
returns the graph presentation
returns the weight of the edge
saves the given graph to the given graph
saves the given presentation of the model
returns the upper left edge of the edge
mark the current mark
returns the destination of the destination
returns the vertex opposite to the given vertex
unmark the current color
adds a vertex to the graph
returns true if the point at the specified point is inside the
checks if a vertex is connected to a connected vertex
returns true if the given area is in the area of the
tests the vertex of a connectable
adds a vertex to the graph
removes a vertex from the graph
returns true if the given point is selected
returns true if the vertex is in the graph
tests the vertices of the vertices of the graph
tests if the wrong is wrong
returns the type of the component
returns the key that is used to identify the component
returns the ordinal position of the first character in the list
returns the component used to invoke this code code
returns the source of this event
returns the property key
returns the type of the parameter
returns true if the connection is pooled
returns the object
returns the type of object
returns the component that is contained in this component
returns the container
returns the number of in the current bean
returns the current state of the
returns the code component code that is contained in the
returns a component that is configured to be null
returns the singleton instance of the specified scope
returns a component factory for the specified type
returns a map of all the beans for the given type
returns the factory class
returns the component that is associated with the given constructor
returns the key to which this object is associated
returns a component factory with the specified component
returns the component factory
returns the guard of this component
invokes the method on the object
returns a bean from the bean
binds a parameter to the given argument
binds a parameter
returns a component with the specified name
returns a property with the specified object
returns a property with the specified value
returns a component with the specified properties
returns a component with the specified properties
binds a property component to this bean
returns the new child
returns the parent of this component
binds a property
registers a component to the registry
unregister a component
unregister a component
returns the component associated with the specified key
returns the component that is associated with the given type
returns a component with the specified name
returns the dependency of a type
returns the component that is associated with the given type
verifies the given component
cast the type to the component
transforms the given key and returns the result
returns a proxy for the given component
returns a proxy for the given component
returns the component that is associated with this component
returns the key to which this component is associated
returns the source of the event
returns a component with the specified map
returns the mutation of the given mutation
returns a code component code that contains the
returns the method
returns the number of parameters
returns the parameters
returns the properties
returns the type of the component
registers a constructor with the given class
returns the key
returns the object that is used to represent the object
returns the default transform for the given component
returns the property value for the given key
registers a new component
registers a constructor with the given class
returns a property with the given key
registers a new instance of the given class
registers a static method
returns the actual type of the actual
returns the expected type
returns a properties object representing the properties
registers a static static static method
registers a static method
registers a static static static method
returns a parameter with the specified index
checks the given element and returns the element
returns the primary resource loader
returns the alternative
returns the optional parameter
returns the default property value
returns the default implementation of the given
returns a constructor that takes a parameter and returns a
returns a
returns the option with the specified option
recover the of a recovery
binds the given component to the specified
binds the component to the specified component
the specified component
returns a method with the given name and type
returns a new instance of the component with the specified
returns the key for the given service
returns a method for the given parameter type
returns a new instance of the given class
returns a new component with the specified name
returns the servant
returns a field with the specified name and value
returns the creator of the given element
returns the field with the specified name
returns a component from the properties
returns a component from the input arguments
returns the component of this component
returns the component that is associated with this component
adds a type property type
adds a property type
returns the type of the component
returns the type of the
returns the type of the
returns the function
returns the ordinal position of the first character in the list
returns the object that was used to convert the object to the
returns the method that fulfills the given method
returns the begin of the current position
returns the set of the set
returns the component that is associated with the given field
returns a new component of the specified number of times
synchronizes the component with the current state of the component
called when the context is initialized
factory method to instantiate a code loader code object
initialize the servlet
returns the loader
called when the context is destroyed
destroys the servlet
this method is called by the servlet request to handle the request
returns the servlet context
returns the resource loader
returns the mutex object for the session
gets the procedure
returns the container for the specified class
returns true if the entry contains any entries
returns the exception handler
returns the key of the key
adds a key to the queue
removes the key value pair from the map
returns true if the given key is a valid instance of the
returns the entry associated with the specified key
returns the set of keys in the map
returns a collection of all entries
adds a live object to the history
returns a component with the given lifecycle
returns the set of all the managed instances
pushes a new object onto the stack
returns the current
prints the trace of the trace to the given print stream
prints the trace of the trace trace
prints the trace trace
clears the trace trace
adds a new lifecycle to the list of statements
adds a new lifecycle to the end of the queue
adds a new lifecycle to the list of statements
adds a lifecycle lifecycle to a given procedure
add a lifecycle to the list of procedure
adds a lifecycle lifecycle to a group
adds a lifecycle verifier to this verifier
creates a new lifecycle lifecycle
sets the default lifecycle for a given procedure
the lifecycle function
add a lifecycle lifecycle
sets the default lifecycle
adds a lifecycle lifecycle factory to the given lifecycle verifier
create a new lifecycle closer to the given
adds a lifecycle lifecycle to a lifecycle
sets the default lifecycle
the default implementation of the
a lifecycle procedure
sets the verifier verifier to be used for the given procedure
the lifecycle lifecycle for a given procedure
sets the given lifecycle procedure to the given procedure
the lifecycle on a given component
the lifecycle function
creates a new lifecycle descriptor
add a new bean post processor
sets the name of the given method to the given name
returns the name of the nationality
returns the component that has the specified action
returns the number of elements in this collection
add a lifecycle closer to this
create a lifecycle lifecycle for a given procedure
sets the default initializer for the given method
installs the default lifecycle descriptor for the given element
add a lifecycle method to the list of public methods
creates a new lifecycle lifecycle
returns the application context
sets the default verifier for the given name
manage the given bean
add a new bean to the processor
the default implementation of the default lifecycle strategy
adds a lifecycle to the starter
returns the processor queue
returns the that is used to execute the
sets the name of the lifecycle lifecycle
returns a component with the given component
returns the
this method is called when the user selects an object
sets the toolbus
returns the
returns the mandatory component
returns the property of the inherited property
sets the
sets the code component code to the specified code component code
returns true if the is
returns true if this is a
returns the initializer
sets the initializer
returns the
returns true if the is
registers the given object and registers it in the given key
sets the
returns the starter of the starter
sets the starter instance
returns the id of the given object
this method is called from the
returns the phase
this method is invoked when a loop is executed
sets the phase of the game
returns the verifier for this verifier
returns the class that is currently being used for the class
returns the result of the component
sets the verifier
returns the mandatory
sets the key type
sets the of the class
sets the type of the imported type
returns the type of the given class
returns the maximum number of arguments
checks if the property contains a given property
returns the auto wiring property
returns true if the bean is a bean
returns the component that is notified when the
returns the property mode
returns the parameter of the
returns the adder for the given name
returns the anonymous entity
returns the type of the specified class
returns true if the properties are all properties
returns true if the collection is
returns the evaluator for this object
returns the property descriptor for the property descriptor
decorates the specified component with the given component
returns the sub descriptor for the given name
returns the setter
returns true if the is defined
returns the setter type of the setter method
returns the sequence number of the sequence
returns the column number of the column
returns the line number of the current line
returns the id of the component
returns the module id
returns the location of the tag
returns the evaluation sequence
returns the sequence of the declaration
initializes the sequence number
sets the defined
sets the location of the
sets the environment to be used in the environment
returns the component loader class loader
returns the classpath for the classpath
sets the name of the tag to be used for this tag
returns the environment environment
returns the parameter of the
returns the property
returns the singleton singleton
convert the given type into the target type
returns the dependency trace
prints the dependency information
prints a dependency of the dependency
prints the dependency of the dependency
cast the type to the target
registers the given object to the
raises a raise exception to the given value
throws exception exception exception exception
checks the mandatory mandatory and mandatory flags for a mandatory value
check that the given object is definitely not null
returns a parameter with the given parameter
returns a property with the given name
returns true if the given class is
returns a map of all the keys that are mapped to the
returns a map of all the
creates a new instance of the given map
returns a map of pre instantiate
returns the lifecycle manager
returns the basedir of the basedir
returns the class loader
returns the resource loader
registers a new
registers a new
returns a new
returns the service object associated with the given key
registers a service with the given service
unregister a service
returns the set of services that are used for the service
returns the component for the specified component
registers a
verifies that the given
returns the descriptor for the given key
removes a from the cache
creates a new instance of the given container
registers a variable with the given key
returns the value of the given key
returns true if the given key has a variable with the specified
returns a that is not
removes a variable from the list
returns the set of keys that are
creates a new instance of the processor with the given processor
creates a new instance of the interpreter
returns a test verification with the given dependencies
returns a component factory for the given class
returns the component of this component
returns the child
returns the parent container
returns the dependency of a type
binds the specified object to a regular expression
returns a new instance of the specified object
returns a new instance of the given component
this method is called after the server side is created
start the
stops the
disposes the toolkit
returns the component
sets the key value pair
returns a new lifecycle lifecycle instance
returns the lifecycle event that is associated with the given
returns the code lifecycle code instance
returns the lifecycle for the given lifecycle event
returns the constructor
returns the field
returns the set of property names
returns the property descriptor for the property
returns a new
returns the component for the given component
verifies that the given
creates a new instance of the given container
returns a that is not in the
throws a test case with cyclic
build the classifier
returns the title of the tab
returns the tooltip for the tab title
sets the explorer
sets the log
returns a string describing this filter
returns the data set for the dataset
returns a string describing this filter
returns a description of the file type
sets the view
sets the value of display
sets the url of the url
creates the title
resets the
returns the value at the specified index
returns the value at the specified index
evaluate the groups query string
returns the score of the score
reads the line from the input stream
translates a english language to a string
returns a string containing a string containing the string query string
returns the question of the question
extracts the technique
returns the interpretation of the
sets the question
sets the score
sets the extraction
adds a technique to the extraction technique
sets the interpretation
sets the question string
sets the answers of the list
returns a copy of the current question
sets the interpretation of the
gets the value of the question string property
returns the interpretation
gets the value of the answer string property
returns the support for the document
returns the target
returns the noun phrase
sets the target
sets the target types
sets the noun phrase
sets the verb term
checks whether the given word is contained in the dictionary
compares this predicate to another
tests if a given word is contained in the grammar
returns a md5 hash string for the given string
writes the given key value pair to the file
add a word to the dictionary
runs the thread
checks if the word contains the given word
checks if the given token is a token
sets the values of the given arguments
returns true if the word contains the word
checks whether the token contains the tokens
appends all the arguments to the list of the arguments
returns the maximum number of tokens in the current token
returns a copy of the object
returns a copy of the current
checks if the given query matches the given query
returns the maximum number of results to be processed
this method is called by the query to run the query
returns the content of the content of the page
returns the maximum number of results per query results
returns a copy of the object
returns a new instance with the same type as the
returns the name of the
starts the search
start the query
returns a copy of the current
returns a new instance with the same type as the
returns a new instance with the same type as the
returns a copy of the current
compares the result of the result
compares the specified object with this result
returns the answer of the question
calculates the length of the
returns the normalized score
sets the target
sets the context
this method is called by the context manager to notify the context
compares the current to another
returns a string representation of this object
gets the value of the property
replaces the context list with the tag declarations
returns the correct correct correct value
sets the lemma of the current
returns the predicate of this predicate
format an object
sets the expansion key
returns the weight of a given weight
returns the sentence
returns a string representation of this object
returns true if the entity is a named entity
returns true if the given technique matches the technique
sets the answer
increment score value
sets the normalized score
initializes the properties
sets the
sets the correct correct value for the correct type
sets the properties of this object
sets the
sets the terms
sets the predicate
initialize the properties
sets the sentence
creates a new instance of the given question
add ne type
creates an instance of the given terms
this method will be called from questions
returns the copy of the sentence
returns the score for the given source name
creates a new instance of rule
returns the matches of the given type
returns the matches of the given object
initialize the
add a group to the current group
replaces the tag with the end of the tag
replace the context tags
sets the property value
returns the value of the property
replaces all the occurrences of the given string with the same name
returns true if the property is set
optimize the pattern
applies the result of the result to the result
compares the argument to the current
apply the result of the query to the previous page
print the current overlap
compares the name of the pattern to another pattern
returns the result of the result of the result of the result
returns the hash code of the object
applies the result of the result to the result
evaluates the question
compares its two arguments for order
compares its two arguments for order
applies the result of the result to the result
returns the minimum of the score
returns the correct correct number of correct questions
checks if the given is higher than the given
returns the average score of the given
returns the maximum of the score
applies the result of the result to the result
returns the wrong number of wrong
searches for the function for the given result
returns the score of the given
returns the result of the filter
calculates the of the given
returns the first one one one one matching one
returns the confidence of the current
wait for a pending docs
returns the of the given
returns the result of the filter
wait until the pending requests are pending
increases the correct number of questions
increments the pending documents pending
add a new document to the cache
increment the number of wrong
increments the value of the counter
starts the filter
increments the value of the counter
decrement the value of the counter
decrement the value of the
sets the value of the value of the value of the value
checks the type of the target
description of the method
extract the
returns the maximum number of in the map
returns the sum of the count of occurrences of the specified
flush the buffer
the element to be iterated over
visits an element
returns the xml document for the given document
returns the document that is used to parse the document
this method initializes this
this method initializes j split pane
this method initializes this
this method initializes j panel
this method initializes j tabbed pane
this method initializes
this method initializes
this method initializes this
this method initializes j button
this method initializes j scroll pane
this method initializes j table
this method initializes j button
this method initializes j button1
this method initializes j button1
this method initializes j scroll pane1
this method initializes this
this method initializes j tabbed pane
this method initializes j button2
this method initializes j list
this method initializes j panel2
this method initializes j image pane
this method initializes j text field
this method initializes j text field1
this method initializes j tabbed pane
this method initializes j text field2
this method initializes j image pane
this method initializes j text field3
this method initializes j text field4
this method initializes j scroll pane2
this method initializes j text field5
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j text
this method initializes j button
this method initializes j button1
this method initializes j button2
this method initializes j button3
draws the current state of the given graphics
returns the character type
returns true if the cell is
returns true if the given is a break
returns the number of elements in this array
this method is used to transform the given
shuffles the
returns a copy of this instance
this method is used to determine if the given power supply matches
compares this object with another
sets the extra flag
returns the extra flag
returns the number of in the given symbol
returns the bracket at the given index
sets the brackets of the
accept the accept
parses the sql statement
sets the scripts
reads the message from the given message
reads the message from the given message
adds a cube to the cache
returns the current cube
copies the given target to this cube
returns the
this method is called when a new message is received
returns true if the is solved
returns a cube view of the cube
returns the inverse of the given value
checks if the current element is consistent and
this method is used to send a connection to a remote host
checks if the given point is a valid value
returns the for the given ca
returns the of the function
resets the current state of the
this method is called by the iteration to perform the iteration
checks the number of iterations
computes the next position in the function
checks if the position is valid
returns true if the is
returns the number of iteration
returns the number of in the current position
returns the number of in the current position
returns the x coordinate of the upper left corner of the
returns the x coordinate of the upper left corner of the
this method is called from the
returns referrer from the given referrer
returns the name of the entry
returns a list of all reports
returns the first request
returns the last request
saves the configuration
returns the report file
adds a settings to the settings object
returns the settings for the specified name
returns the user agent name
returns the domain of the domain
returns the start date of the entry
resets the current exclusion list
returns the start date string for the current date
returns the table model
returns the last date of the calendar
add a log file to the log file
returns the date the last date time is used to convert the
gets the value of the unresolved host property
returns the description of the domain
add a new entry to the log entry
sets the title of the graph
returns the default properties for the default legend
sets the labels of the graph
returns the properties object
returns the number of rows in the model
returns the graph of the chart
sets the host of the host
returns the properties
sets the values of the dataset
sets the labels of the labels
get the value for the specified cell
returns the default multi properties
returns the image
sets the values of the chart
returns the resolved host
returns a string that contains all the users that are not allowed
returns the maximum value of the given value
parse the entry of the entry
sets the host
returns the date of the calendar
runs the
sets the date time
starts the application
exit the application
sets the date
returns the value of the specified property
returns the mnemonic for the given name
sets the time of the calendar
shows a dialog with the given message
returns the name of the specified name
returns the value of the given string
shows the yes no error dialog
shows a dialog with the yes no question
gets the unresolved url
returns the string value of the field
sets the unresolved url
returns the integer value of the specified field
returns the resolved url
sets the resolved url
returns a description of the current user
returns the float value of the specified field
returns the version of the http version
sets the http version
returns referrer
returns a description of the current user
returns a hash code for this object
returns the account id balance to account
gets the value of the num of transactions
sets the number of transactions
gets the account number
sets the account number
gets the value of the transfer account property
sets the transfer account
sets the interval
sets the next apply time
sets the trans transaction
gets the value of the property
gets the value of the status property
sets the balance
returns the transaction date
sets the transaction date
returns the account types
returns all accounts
returns the
sets the account types
sets the transactions list
sets the
sets the accounts
returns the end balance of the account
returns the balance
sets the end balance
sets the balance
returns the pending balance
sets the pending balance
sets the transaction date
sets the value of the splits property
returns the list of all categories
sets the list of categories
returns true if the connection is connected to the server
returns the url for the given url
returns the url for the specified url
checks if the given url is a directory
checks if the given jar file is a jar file
returns a file to be used to create a new url
returns the current bean
returns the visibility of the component
sets the source value for the given source and type
invoked when a surface is created
creates a new document
returns the text in the text
returns the text of the paragraph
creates a new
returns the part of the part id
returns the alignment of the
returns the header footer policy
sets the specified alignment
returns the vertical alignment of the text
sets the vertical alignment of the text
creates a new paragraph
create a new table
sets the border of the border
creates a new table with the given number of rows
returns the top border
returns true if the is
returns true if the is
sets the border bottom border
returns true if the is
returns true if the tracked by this controller is
returns the border of the bottom border
sets the border left border
enforces the of the
enforces the of comments
returns the left border
enforces the update of the
sets the border right border
removes the protection of the
returns the right border
sets the border between the border and the given border
returns the border of the border
sets the page break
returns true if the page break is break
sets the spacing between the and the specified
returns the spacing between the and the end of the
sets the spacing between lines and lines
returns the spacing between lines and lines
sets the spacing before the spacing between the
returns the spacing before the spacing between the current
sets the spacing between lines and lines
sets the line spacing
returns the line spacing
sets the indentation of this code paragraph code
returns the indentation of the current indentation
sets the indentation of this code paragraph code
returns the indentation of the current indentation
sets the line number of this code paragraph code
returns the first line of the current line
sets the wrap word wrap
returns true if the word wrap is wrapping
sets the style of the
returns the style of the
returns a short description of the servlet
returns a short description of the servlet
sets the next filter
returns true if the header is
register a pipeline callback handler
sets the input stream for this input stream
sets the output stream to which this output is used
end the of the end of the
returns the web server
returns the definition of the specified definition
sets the bean
sets the property name for the property
scale the
returns the smallest integral of the given value
returns a new plotter object
advances the buffer to the next one
lets the user know that the text they entered is the same
lets the user know that the text they entered is the same
this method is used to get the data of the data
adds a new document to the document
moves the cursor to the previous position in the current position
the element
returns the short server info
handles the action event
returns the server server id
returns the server at the specified index
adds a server to the server
deletes the server at the specified index
gets the value of a property
sets the property value
this method is called when the user modifies the property
returns the database designation
returns the database database
this method initializes this
this method initializes bt
this method initializes bt cancelar
this method initializes j text field
this method initializes senha
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes j scroll pane
this method initializes this
this method initializes txt matricula
this method initializes btn sair
this method initializes mb principal
this method initializes menu
this method initializes cb pesquisa
this method initializes this
this method initializes txt nome
this method initializes mi cadastro
this method initializes j text field
this method initializes mi pesquisa
this method initializes mi sair
this method initializes btn
this method initializes txt
this method initializes cb
this method initializes txt
this method initializes txt
this method initializes txt cidade
this method initializes txt numero
this method initializes txt
this method initializes cb
this method initializes txt data inicio
this method initializes j text field
this method initializes j table
this method initializes btn novo
this method initializes j text field
this method initializes btn
this method initializes btn
this method initializes j text field
this method initializes txt dia
this method initializes btn
this method initializes cb
this method initializes btn
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes j text field inicio
this method initializes j text field
this method initializes btn
this method initializes btn limpar
this method initializes btn
this method initializes btn
this method initializes btn
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes cb
writes the specified file to the file
returns lyrics for the given string
returns the value for the cell at code column index code and
get a connection
starts playback of the media
pause the player
stops the playback
returns the duration of the song
returns the current position of the player
returns the current time in nanoseconds
sets the current time of the player
sets the current time in milliseconds
returns the current song
returns the number of channels in the audio file
returns the width of the panel in the specified panel
returns the height of the panel in the specified height
returns the increment of the specified image
returns the length of the audio stream
adds the sentence sentence to the sentence
saves the properties to the file
calculate the zoom constants
load the sound
updates the timer
returns the current position of the current position
sets the current position
goes to the previous page
forward the request to the
repaints the wave
resets the wave to the start of the wave
invoked when the components size changes
invoked when the mouse has been clicked on a component
this method initializes this
this method initializes nome hospital
this method initializes j text field
this method initializes j text field
this method initializes
this method initializes check
this method initializes j text field
this method initializes j check box
inserts the given index into the list
returns the account at the specified id
print the given string
prints the current output
find dept by id
process result set
rename a given name
deletes a dept from the database
add a department to the database
this method initializes j frame
this method initializes j button
this method initializes j text field
this method initializes j text field1
this method initializes j text pane
this method initializes j button4
this method is called when the user selects the
sets business service business object
handles the request to the user
create an instance of
create an instance of
handle the password from the given
sets the alias for the given password
gives notification from the document that an attribute or set of attributes
gives notification that something was inserted into the document
gives notification that something has changed
handle the document changed event
gives notification from the document that an attribute or set of attributes
called to indicate the document changed
start the start of the
stops the
the request to be used to determine the number of
start the sensor
stops the sensor
left
the right
stops the stop
sets the state of the
down the move
the request to be used to customize the request
starts the model
activate the sensor for the
stops the model
the right
stops the stop
sets the state of the
down the move
start the sensor
stops the sensor
start the
move the object left right
stops the
move the right object right
stops the stop
start the
sets the state of the on state
stops the
move the move object down to the next move
this method is called when the shell is destroyed
sets the current move to the left hand side of the
sets the right hand right right hand side of the right hand
stops the
sets the state of the
start the task
stops the
start the sensor
stops the sensor
start the
stops the
start the
stops the
start the
stops the
the number of
the number of down
the flash

starts the shell
down the
stops the shell
start the
stops the
start the
stops the
start the start of the
stops the
starts the
stops the
sets the algorithm to be used to allocate the algorithm
starts the simulation
stops the simulation
start the
stops the
the right right
the algorithm
the algorithm
the block right
this method is called when the user sleep the user
the right right
the algorithm
the block right
the default for the
block left
the to the
the to the
the to the
start the simulation
the to the
stops the

the algorithm

adds a line to the error queue
the algorithm

the on the
the
returns the source of the source file
removes all attribute strings from the attribute list
returns the text in the text file
returns the icon for this icon
returns the result of the tests
closes the current element
returns the children of this file
returns the for the given menu item
adds a new error to the
delete the element from the given element
puts a data key value pair into the map
returns the data associated with the specified key
returns the type element of the document
returns the selected node
sets the element of the component
sets the color of the selected cell
sets the color of the selected cell
returns the preferred dimensions for this layout given the components
returns the color of the selected color
returns the color of the selected color
sets the selected state
returns the color of the
adds the visible parameters to the model
adds a label to the model
the count of the
increases the number of count algorithms in the
this method initializes project frame
the

starts the
down the
this method initializes j text field
this method initializes j text field
this method initializes browse import button
stops the
this method initializes browse export button
this method initializes import button
this method initializes j button
this method initializes j scroll pane
this method initializes project tree
this method initializes file tree
this method initializes j scroll pane
returns the path to the file specified by the given file name
this method initializes build button
this method initializes this
this method initializes j jmenu bar
this method initializes exit menu item
this method initializes output pane
this method initializes main split pane
this method initializes xsl combo box
sets the answer of the given date
returns the x offset of the current position
returns the y offset of the current position
returns the component that is used to locate the given component
check if the current state of the update is enabled
removes the filter
refresh the folders
creates the locations combo box
paint the image
refresh all the rows in the database
refreshes the combo
paint the component
gets the download percentage
sets the size of the
gets the last up date
returns the last checked date
sets the update date
sets the last updated date
sets the last checked date
returns the last updated date
gets the value of the title of property
returns the directory where the user is located
sets the title of the title of the
sets the directory location
sets the update date
returns the properties
load the specified properties from the given input stream
load the properties from the given reader
sets the default prefix
writes the given properties to the output stream
writes the given properties to the output stream
returns the process other properties
writes the given to the output stream
sets the environment factory
returns the properties of this object
sets the prefix configurations
sets the prefix configurations for the configuration
clears the lock
returns the configured prefix
returns the properties
sets the default prefix
returns the prefix to use for the
sets the prefixes
sets the prefixes for this code code
returns the value associated with the specified key
returns the boolean value associated with a key
returns a property from the configuration
returns a byte value associated with a key
returns the configured prefix to use for this plugin
returns the double value associated with a key
returns the value specified by the given key as a double
returns the value associated with the specified key
returns the float value associated with a key
returns the value of the property as a code int code
returns the value associated with the specified key or code key code
returns the value associated with the specified key or code key code
returns the configuration of the configuration file
returns the short value of the property
returns a short value associated with the given key
sets the
sets the
removes a property from the cache
sets the configured configuration for the configured
sets the default prefix for the current prefix
sets the prefix to use for the configuration
stores the specified output stream to the specified output stream
creates a new json object
returns the properties for the complete properties
returns a string representation of this object
returns a hash code for this object
returns the bean config for the specified bean name
parse the specified input stream into a string
parse the input stream
parse the input stream
parse the specified reader
reads the next token from the input stream
adds a widget to the desktop
returns the panel
sets whether close is close on close or off
returns the close event
sets the close event
executes the task
invokes the paint method
paint the selected
this method is called when the is done
returns the current iteration
returns the maximum number of iterations
returns the current iteration number
updates the optimizer
this method is called by the framework to paint the
returns the terminate
sets the class name of the given type
initialize the injector
sets the binding constant for the given annotation type
returns the iteration of the iteration
notify listeners that the task has changed
binds a constant value to the given binding
adds the load menu items
gets the value of the permutation type property
sets the permutation type
gets the value of the double type property
sets the double type
returns the
sets the
returns the next element in the given lo lo
returns the value of the code integer code property
sets the value of the integer rate property
returns the id of the
sets the id
returns the value of the code double code property
sets the value of the boolean rate
returns the id of the
sets the id
returns the value of the
gets the value of the boolean type property
sets the value of the property
sets the boolean type
returns the
sets the
sets the rotation of the sprite
sets the generations
returns the subjects of the given individual
bind the given schedule to the
returns the value of the given individual
sets the value of the final temperature property
sets the initial temperature
returns the
sets the
calculates the delta of the current iteration
returns the number of particles
sets the particles
randomizes the distribution
returns the velocity of the
sets the velocity
returns the best genotype
returns the best objectives objectives
sets the best possible algorithm to be used for the
update the population
updates the best with the given
returns the tournament
sets the tournament
calculates the of the given interval
returns the type of this
sets the type
bind the selector to the selector
normalizes the given objectives value
calculates the fitness of the population
returns the second element of this object
returns the lambda value
sets the lambda
sets the mu
gets the value of the crossover rate type property
sets the crossover rate type
sets the crossover rate
invokes the given listener
invokes the listener method
returns the value of the element attribute
returns the first child of this node
returns the child with the given name
updates the population
returns the text content of the node
returns the configuration node of the given configuration
sets the text
sets the attribute
returns the distance between the two individual vectors
appends a field name to the end of this document
append a new node to this node
returns the document
adds a individual to the list
provides serialization support
saves the given modules to the file
saves the module to the file
writes the given module to the output stream
writes the given module to the given output stream
returns a string representation of the object
returns a string representation of the module
calculates the distance between the two points
adds a module to the list
removes a module from the list
calculates the fitness of the individual
executes the task
returns the number of individuals found in the population
returns the value of the code property code
sets the value of the object
returns the type of the given type
checks if the type is assignable to the given type
sets the value of the given property
returns the module
sets the file to be notified of the given file
load a file from the file chooser
save the selected file as a file
load the module from the given file
saves the current state of the file
saves the module to the specified file
removes a property from the list
returns the divider for the given container
returns the name of the given class
returns the info for the given class
returns the tooltip for the given class
returns the icon for the given class
returns the name of the module
returns the tooltip for the specified module
returns an image representing the icon of the specified icon
returns the name of the property
returns the table
returns the model that this model is responsible for
returns a string representation of the given text
returns the module with the given task
removes the categories from the tree
sets the state of the task
returns the decay
sets the value of var decay
returns the variance of the variable
sets the increment of the variable
add a property to the module
creates a new genotype instance
binds the solver to the given solver
binds the solver to the given solver scope
sets the rhs of the
returns true if the given model is satisfied by the given
returns the number of occurrences of the given model
returns the value of the genotype genotype
sets the boolean value of the boolean boolean flag
returns the smallest vector of the vector
sets the double vector
returns the variable
returns the phase of the current phase
returns a new literal
returns the coefficient of the coefficient
returns the value for the var var var var var var var
returns the literal value
sets the value of the specified variable
returns a term copy of this term
sets the instances of the current instance
returns the learning object
sets the learning learning
gets the
sets the
returns the learn size of the learning
update the activity
sets the learning size of the learning
set the solver to the solver
sets the value of the var var increment property
sets the activity value for the given activity
this method is called by the
sets the phase of the given phase
sets the value of the specified variable in the given var
returns the activity for the given variable
returns the phase of the given variable
returns the h v
sets the bits of the current state
sets the function
sets the m m m m n
returns the value of the specified range
sets the k k
sets the l f
sets the capacity of this object
sets the number of the
sets the of the given item
returns the profit of the given item
sets the weight of the specified item
returns the weight of the specified item
sets the number of elements in the population
returns the of the given
returns the profit of the
returns the value of the given line as a string
returns the double value of the given line
returns the number of elements in the specified array
returns the dim
sets the given value to the specified square
returns the decoder
sets the decoder
sets the seed of the random number generator
calculates the sum of all the squares of the given board
returns the u u u u u u u u u u
returns the value of the given code double code
sets the encoding
sets the function
validate the encoding
initializes the random
initialize the
returns the value at the specified index
initializes the
returns the lower bound of the specified index
returns the upper bound for the upper bound
initializes the
returns the lower bound of the specified index
returns the upper bound for the specified index
initializes the
initializes the random number generator
returns true if the value is
returns the objective value for this entry
this method is called by the reactor to provide the
adds a new objective to the map
this method is called when the iteration is finished
update an individual
adds a new objective to the objective
adds a new objective to the objective
execute the optimization
adds all the constraints to the given set of objectives
increases the next value
returns the maximum number of iterations
returns the distance between this and another
returns the object
returns the objectives object
returns the genotype
sets the genotype of the genotype
sets the phenotype
sets the objectives
returns true if the request is decoded
returns true if the transaction is evaluated
sets the state of this state
sets the set of state listeners
sets the capacity of the list
sets the number of
returns a cell from the given individual
returns the most narrow cell that is used to draw the
determines if the given population is a
sets the type
gets the value of the type property
sets the value of the using seed property
sets the seed of the random number generator
returns the number of threads
sets the number of threads
creates a new code writer code object from the given file
returns the evaluation step
sets the evaluation step
returns the iteration step
sets the iteration step
sets whether the logging should be used to render the evaluation
sets whether or not the logging should be used to run
returns the statistics for the given time
sets whether to print the
returns the applet information
adds a color chooser to the list
returns the vertical offset of the image
returns the horizontal offset of the horizontal position
sets the x coordinate of the mouse
sets the end position of the area
sets the
sets the y coordinate of the anchor point
sets the y2 coordinate of the
draw the zoom in icon
draw zoom out icon
sets the show icons
returns true if the icon should be shown in the
returns the applet information
returns the applet information
closes the dialog
invoked when an action occurs
this method is called when the user wants to move the current
begin a new
repeat the current thread
sets the current window bounds
sets the current window visibility
sets the top frame on top of the stack
dispose the current window
sets the animation speed
returns the document that this belongs to
sets the post parse response
sets the validate
returns true if the validation is validating
sets the schema validation flag
returns true if the schema parser is configured to be used
sets the namespace namespace
returns true if namespaces are processing
returns the entity resolver
returns the error handler
sets the entity resolver
returns the schema implementation
sets the schema implementation
clones the parser instance
returns the month day
returns a string representation of this day
returns the month day
returns a string representation of the object
returns a string representation of this object
returns a string representation of this object
returns a string representation of the object
returns the year month
returns the year month year
sets the validating parser
returns true if the parser is validating
sets the schema validating parser
returns true if the schema parser is configured to be used
sets the dtd
sets the schema reference for this schema
sets the namespace of the processing state
adds a new object to the map
adds a new key to the map
returns true if the parser has namespace
replaces the object with the given key
sets the object
returns the value mapped to the specified key
returns the object associated with the given key
sets the entity resolver
returns the element at the specified index
returns true if there are more elements to be iterated
returns the entity resolver
returns the next element in the iteration
removes the current object from the list
sets the error handler
returns the error handler
sets the error handler
sets the filter set
this method is called when the element is
sets the schema
sets the schema ref schema for this schema
sets the attribute value
p receive notification of the error
receive notification of a non recoverable error
reports a warning
returns the filter name
resolve the dtd for the given dtd
sets the filter attribute
returns the filter attribute
sets the filter value
returns the filter value
creates a new instance of the
returns the dtd for this
returns the next object
returns the real resolver used to resolve the current
removes the object from the list
creates a new filter with the given name
sets the qualified name of the element
returns a filter that recognizes the filter
returns the namespace prefix of the namespace
returns the schema location
returns a new instance of this namespace
returns the qualified name of this qualified name
returns an instance of the code code object
returns the xsi location location
returns a string representation of this object
generates the summary for the given element
generate detail for the given element
generate detail for the given
sets the element child element
adds a child element to the list of children
returns the parser
sets the parser
returns a new with the given id
returns all children elements of this node
returns a new with the given id
returns the child elements name
creates a new object
returns the element child element of the specified element
creates a schema reference for the given schema
adds a file to the list of files
create a schema reference for the schema
generates the summary for the given complex type
generates the detail for the given complex type
create an instance of
generates the detail for this complex type
sets the attribute
recursive recursive method to collect all the elements in the group
p posts a b
p this method is called to handle the setter method
returns an iterator of all attributes
returns true if the alt is alt
extracts the object from the given name
returns true if the current output is verbose
sets the
returns true if the property is alt
returns the
adds a file set to the file
sets the value of the code verbose code property
returns the file set
returns true if the user is a verbose
execute the task
sets the
returns the color of the bar
returns a list of all attributes of a given name
sets the color of the bar
returns the
returns the color of the bar text
sets the color text
adds a file set to the file
getter for property header text color
sets the color of the header text
returns the file set of the file
returns the xsd file
execute the task
sets the xsd file
generates the summary for the summary
returns the doc directory
generate detail for the given group
sets the doc dir
generates the detail for the group
returns a list of all attributes
checks if the document is valid
returns true if the alt is alt
sets the alt value for this
returns true if the user is a verbose mode
returns the code
generates the summary for the given summary
generates the detail for the given group
render the detail group
returns the writer
returns an attribute by name
returns the application info
print a string
returns true if the application has app info
returns the documentation of the documentation
returns true if this object has a documentation of the same
print a string
writes the annotation
returns an attribute by name
write the end of the file
proves if any element reference elements are
sets the value of the element value
returns an iterator over the elements in this collection
returns the named reference to the specified name
returns the value of the element
get the attribute
writes the section section of the
returns the type of the attribute
returns the type of the attribute
returns the type of the attribute
returns the name of the attribute
returns true if the attribute is optional
p write a summary of the given type
returns true if the attribute value has been set
returns the default value of the attribute
writes the comment summary
post a parse type
writes the contents of the summary summary
resolve the public type
returns a string representation of the object
returns true if the type of this class has a public type
writes the end of the html
returns true if the is
returns the type of the string as a string
write the details section
returns the type of the
post a post
register a new element with the given name
returns true if the type of this type has a private type
write a detail message
returns the schema uri
sets the schema
returns the schema
registers a complex type
returns true if the type is schema type
write the detail to the detail page
returns the qualified name of the unqualified qualified name
returns an iterator over the elements of this set
returns the name of the given namespace
returns the name of the name
registers a simple type with type name
find the element with the given name
renders a string containing the contents of the given
find the element in the given element
returns the simple type of the named simple type
returns an iterator over the elements in this set
write the detail contents of the html footer
returns an iterator of all attributes
returns an iterator over the elements in this collection
registers a group with the given name
returns an iterator over the group references in this group
returns an iterator over the refs group attribute of this group
writes the detail attribute list to the given attribute
returns an iterator over the groups in the group
registers an attribute group with the specified name
returns an iterator over the groups in this group
returns the map of the
registers an attribute
validates the
returns an attribute by name
receive notification of a recoverable error
writes the extension list of extensions
receive notification of a non recoverable error
returns the qualified name of the qualified type of this object
reports a warning
returns the target namespace
returns the object associated with the given name
returns the home directory
adds a zip file to the classpath
open a file with the specified file
returns true if there are more elements in this iterator
find the basic type of the given type
adds a catalog path to the cache
returns the next element in the iteration
returns the type of the
add a classpath to the classpath
returns the type of the
removes the current object from the list
returns the class of the class specified by name
returns the basic basic type of the current type
sets the minimum number of times this event is reported
returns the type of the type
returns the minimum occurance facet
sets the max occurs
returns the maximum number of times this object is being created
finds the resource with the specified name
sets the ordered value for this
returns true if the is ordered
returns true if this object is many
returns true if this is optional
finds all the resources in the classpath
returns true if the default value has a default value
returns true if this is a private
returns the default value of the default value
returns true if the file has any extensions
returns true if the extension has a extension
returns the entry of the file denoted by the specified name
returns an iterator over the extensions in this rss
returns the extension of the file
returns true if the element has any refs
returns an input stream for the specified entry
returns true if the attributes are not empty
returns an iterator of all attributes
sets the entity resolver
returns the url for the zip entry
sets the resolver used to resolve the entity resolver
returns true if the attributes have been defined
parses the schema and parses the document
returns true if the type is simple type
returns the file entry of the specified file name
this method is used to determine if the type is a basic
generate a
returns an input stream for the specified entry
returns the options
returns the url to the url to the file denoted by the
sets the value of the code property code
returns true if the property is readonly
returns the source file
closes the output file
sets the name of the package
returns the output directory
returns the package name
returns the package name
sets the package name
write a comment
sets the
returns the
sets the
adds an element to the map
returns the
writes the comment section
sets the xsd file
returns true if the file is valid
returns the xsd
write the end of the interface
sets the options
generates the attributes for the given complex type
generates the default values for the given attribute
generates the for the given attribute
generates the elements of the given type
writes empty empty line
generates the references for all the elements of the given element
sets the value of the read only flag
returns true if the reader is read only
sets the package name
write a default constant value
returns the package name
sets the
write the html lt gt element name and amp gt element
returns true if the is
returns the object name of the object
sets the
returns the output directory
execute the task
sets the xsd file
returns the xsd
returns the beginning of the text
write attribute name value
writes the value of the setter method
resolve the dtd for the given dtd
write the namespace constant
write the factory to the given method
returns the object name for the given name
sets the feature
creates a new instance of the
resolve a dtd
returns the package name of the package
sets the package package
returns the schema schema for this schema
sets the schema schema
sets the map
returns the auto map
sets the flag indicating whether the map is
returns a string representation of the object
returns the dtd string
test the main method
resolve the dtd for the given dtd schema
test the main method
resolve the dtd for the given dtd schema
test of main method of class
parse an external entity
test of main method of class
resolve the dtd for the given dtd schema
sets the verbose flag
populates the list of students with the given student
returns the number of students in the combo box
test of populate combo method of class gst
sets the selected student
this method initializes j frame
this method initializes j text area
this method initializes j editor pane
this method initializes student score
the
this method is called when the user selects the
creates a new
initializes the shard
creates a new instance of the given type id and type
returns the for a given entity id

checks if the given term is a valid term
shows the about dialog
shows the license
set the endpoint address for the specified port name
returns the for the given path
creates the stop watch button
creates the panel
this method is called when the user selects the current
stops watching the server
close the socket
parse the given string
returns true if the server is no connection
this method is called by the server to start the client
sets the columns
returns the id of the
gets the value of the player one name property
sets the name of the player
returns the id of the
returns the server port
returns the name of the player that composes the player
sets the player name
parses the arguments
returns the udp listener
removes a client from the server
get the transmit server socket
opens a timer for the specified client
returns the current alive sender
closes the current connection
checks if the client is online
checks if the game is online
prints the board
initializes the board
returns true if the current
check if the row is in the same row
check the last row in the table
removes the specified viewer from the list of viewers
returns the color of the player
sets the timer
unset the timer
adds a new player to the watch list
returns the number of reports in the report
returns the server address
returns the current time of the
returns the key for the
get the instance of the aes instance
returns the decrypted input stream for the given code input code
returns the client connection port
returns the decrypted input stream for the given input stream
returns the server request port
gets the game result
returns the winner of the game
sets the winner
returns the current user
sets the current user
sets the top ten
returns the transmit
returns the
show stats window
returns the current time in milliseconds
returns the current date
write a log message
writes the given error message to the writer
authenticates the user
updates the timer for the given player
prints a message to the console
prints the given error message to the console
returns a string representation of the message
creates a localized error message
show a message dialog with the given message type
generate a new pair for the key pair
sets the key for the key
returns the public key
encrypt a string
decrypt a message
the event listener implementation
returns the timer thread
updates the timer text
pause the timer
resume the timer
sets the enabled state of the game
restarts the game
returns the key server key
updates the timer
creates a new code box code
sets the disabled disabled
get the properties
returns the statistics for the given username
gets the value of the report status property
stop the monitoring
disconnect from server
send a server socket to the server
close the
displays a dialog box
prepares the password for the password
returns a hash value for the given password
stops the animation
sends a to the client
returns an empty report
handles the process of a new process
save report report
this method is called when the player starts a new player
this method adds a new player to the player
returns the player for the player
returns the id of the game
sets the opponent of the opponent
refresh the game connection
closes the pending thread
sets the game to the game
closes the connection to the server
sends the move to the server
send a to a player
sleeps for a new thread
erases the polyline
sets the time
sets the time
returns the help string
sets the value of the current value
called when the user modifies the preference
this method is called when the preferences is loaded
this method is called when the user has saved
called when a plugin is loaded
called when the plugin is loaded
called before a plugin is loaded
called when a plugin is loaded
called when the plugin is loaded
invoked when an event occurs
returns the name of the language
checks if the triple is commit
returns the crs of the factory
returns the string representation of the given international string
returns the last completion transform
sets the last transform
returns the code for the code address
returns the charset to use for this code charset code
recursively recursively creates the list of classes
returns the string value of the attribute specified by the name
returns the upper case value for the given name
returns the international international name of the given string
returns the date value of the specified date
returns the double value of the attribute
adds a projection provider to the list of providers
returns the anchor point
returns the realization of the realization
returns the length of the axis
returns the string representation of the current units
returns a new projection for the given projection
print the parameters for the current method
this method is used to wrap the crs
checks the equality of the given axis and the unit
wraps a metadata file
compares the given properties to the specified file
returns the domain of the validity of the object
sets the transform matrix of this matrix
parse the given string into a given name
returns the name of the jndi name
gets the value of the request property
returns the response
returns the code
returns the current web service
returns the descriptor of this descriptor
returns the property name
returns the sql keyword
returns the order of the table
this method allows deserialization of the deserialization of an instance
returns the part of the local part
returns the uri of the namespace
this method allows deserialization of the deserialization of an instance
this method allows deserialization of the deserialization filter
this method allows deserialization of the deserialization filter
ensures that serialization returns the unique instances
creates a new
creates a new parameter with the given value
prints a name to the output
returns the locale
sets the default authority
adds a row to the table
writes the property value as a string
adds a factory to the collection
adds a new entry
notify the listener that the progress has changed
adds a new code authority code to the table
returns the configuration of this configuration
adds the given transform to the list of all the properties
creates a new row
creates a new with the given parameters
creates a new row
returns the uri of the php web service
creates a row with the given parameters
creates a new instance with the given parameters
adds a new entry to the list
returns the anchor for the category
sets the manifest
checks if the given value is mandatory
creates a new with the given parameters
this method is called when the user selects a forbidden attribute
writes the categories to the given category
creates a new instance with the given parameters
creates a new map with the given properties
returns the band value
returns the sample sample of the sample
returns the sample sample of the sample
returns the sample as a double
appends the given code position code to the buffer
returns the map for the given properties map
validates the given metadata
moves the cursor down one row
returns the value of the specified column
this method is used to transform the coordinate system reference
returns the value of the specified column
sets the coordinate of the coordinate system
returns a string representation of this object
returns the integer value of the specified column
validate the given object
returns the value of the column at the specified column
validates the given object
dispatches the specified object for the specified object
returns the value of the specified column as a double
validate the given object
returns the value of the column at the specified column
validate the object
validate the object
validate the object
creates a new
validate the object
validate the object
validates the object
validate the object
validate the given method
validate the object
validate the object
validates the formula
validates the range of the given range
dispatches the given object to the current instance
validate the given object
validate the given object
validate the given object
validate the given object
validates the given object
validate the given object
validates the temporal object
validates the given object
validates the given object
validate the given object
validate the given object
validate the given object
validate the given object
validate the given object
validate the given object
dispatch the given parameter
dispatch a value to the
verifies that the inverse inverse of the inverse transform
logs the given level
p this method is used to dispatch the given object to the
validates the object
this method is invoked when the operation is not supported
returns the modifier of the filter
validate the given object
validates the given object
validate the given object
validates the given object
validate the given object
validate the given object
validates the resource
this method is used to dispatch the specified object
validates the given object
validates the polygon
validates the given object
validates the object
validate the extent of the given object
factory method for the class of the factory
normalizes the given type and return the value
a simple class for ruby
returns true if the given filter is filtered from the filter
creates a new parameter
returns an input source for the input file
exit the application
saves the menu item action performed
exit the menu item
get the auth token
called when a new page is changed
launches the login activity
stores the cookie in the current preference store
restores the cookie
the http server
sets the to the server
sets the drag enabled
invoked when the item changes
sets the cut flag
returns whether or not the specified data flavor is supported for
returns the current key path
returns the path to the tree node
populates the table with the given list of attributes
returns the focus component
sets the focus component
returns the number of rows in the table
this method is used to determine whether the document should be exported
unloads the current
sets the file path to the given file
visits all nodes
this method is called when tree is inserted into the tree
called when the user has stopped a
tree model tree has changed
invoked when a drag operation is ongoing in the target
this method is called when the tree model changes
drags the drag over the drag drop target
this method is called whenever the value of the selection changes
invoked when the editing of the editing is finished
focus lost
key pressed handle
invoked when a key is released
called when the exit is done
returns the column
sets the column
returns the
sets the column
returns the
sets the column
returns the
sets the column
returns the
sets the column
returns the key name
compares the specified object with this object
clears the change flag
sets the connection flag
returns true if the attribute has changed since the last reset
returns true if the connection is close
returns an object representing the given class
sets the value of the attribute id value
returns whether the given class is a wrapper for the given
removes the current attribute
returns true if the attribute has changed
returns the key name old key
returns true if the entity is deleted
returns true if the id is new
sets the new id
sets the inherited
returns true if the object has changed
sets the inherited status of the inherited
sets the new data change time stamp
returns a list of system data
sets the new id
compares the specified object with this object
sets the flag that controls the state of the change
import the given configuration into the database
returns a list of all keys in the database
returns the name of the key to which this key belongs
get an attribute by name
returns the name of the parent key name
returns the last key name
get a list of the named parameters
sets the last key name
returns the name of the ending key
get a list of the keys for the given key
start the stopwatch
returns the minutes of the current time
returns a string representation of the object
returns a string representation of the object
returns a list of all the with the given name
update a key value pair by a user
returns the attributes for the specified key
delete a
get a by its id
get a query object for the given key
get a list of key start
get a by its id
deletes a record from the database
deletes the attributes associated with the given key
p callback method that is called whenever a page is navigated to
this method is called by the framework to set the button to
writes the specified byte to this output stream
returns the code point code that is the corresponding selected text
returns the context information for this context
returns the additional information for this code code
returns true if the word is a start word
returns the completion text for the given completion completion
returns the context information validator
returns true if the is
creates a new
sets the attribute
adds a child element to the list of children
adds a child element to the tree
creates a new child element
sets the text
returns the namespace of the element
sets the namespace for the given element
returns the child element at the specified index
returns the first child element of this node
returns the last child of this node
returns the parent element of this tree
returns the root of the tree
returns the element matching the given xpath
returns the text that matches the given xpath
returns the description of the current item
returns the description
writes the object as an xml output
writes the object as an xml output
p reads from the input
creates a new
start a new tag
update method updates the object from another entity
update method updates the object from another entity
writes the object as an xml output
p this method is used to parse the xml
writes the object as an xml output
p this method is used to parse the xml from the xml
returns a list of the names of the given list
returns the summary of the summary
creates the default server
returns the actor for the given network id
returns the encrypt key
creates an actor
returns the address of the address
returns the server server with the given name
returns the path to the file
returns true if the replication is
gets the allow replication
returns the build build build
returns true if the user is the default location
returns the path to the source file
returns true if the is
returns true if the day is a working day
returns the path to the target path
writes the object as an xml output
p this method is used to parse the xml
returns true if the is
sets the server configuration
writes the object as an xml output
reads the object from the input
returns true if any server server is dirty
creates a new
update method updates the object from another entity
accept the filter
returns true if the actor is a member of the given actor
returns the lead
writes the content of the object as an xml message
writes the object as an xml output
p this method is used to parse the xml
p this method is used to parse the xml
writes the object as an xml output
p this method is used to convert the input object into an
adds a list of files to the server
returns the summary of the summary
adds all classes to the server
creates a new
update method updates the object from another entity
adds a list of classes to the list
returns a list of the for the given tag
adds prerequisites to the list of prerequisites
returns a list of all the server servers
this method is used to parse the exception
adds a file list to the list of files
returns the network id
returns the alternate network id
saves the actor
creates a new
sets the ai entity
the
returns the summary
description of the method
writes the object as an xml output
returns the local port number
p this method is used to parse the xml
creates a new
update method updates the object from another entity
returns the key used to encrypt the local key
returns true if the local user is a local
writes the object as an xml output
creates a new
tests if the actor is a member of the given actor
update method updates the object from another entity
accept a single line of the filter
accept the filter
writes the object as an xml output
tests if the given code actor code is a
checks if the given role is a role
adds prerequisites to the list of prerequisites
returns true if the user has to be used to create a
sets the default location
writes the object as an xml output
reads the object from an xml input
writes the object as an xml output
sets the default time in the
p this method is used to parse the xml
writes the object as an xml output
writes the object as an xml output
p this method is used to parse the xml
p this method is used to parse the xml from the input
creates a new
returns true if the given time instant is available
update method updates the object from another entity
returns true if the component has unique name
writes the object as an xml output
reads the object from the input
sets the not dirty flag
update method updates the object from another entity
writes the object as an xml output
compares the argument to the receiver and returns true
writes the object as an xml output
writes the trace information
trace an error message
update method updates the object from another entity
returns the summary of the file
writes the object as an xml output
p this method is used to parse the xml
adds a list of files to the list of files
returns the name of the phase
sets the name of the player
adds a list of classes to the list
writes the object as an xml output
reads the object from an xml input
saves all the to a given xml file
returns a list of the names of the given list
returns whether the argument is an instance of the same type as
adds a new hours to the set of hours
compares two objects priority
writes the object as an xml output
compares the argument to the end of this object
writes the object as an xml output
p this method is used to parse the xml
creates a new
update method updates the object from another entity
writes the object as an xml output
reads the object from the input
writes the object as an xml output
p reads in the xml from the input
parses a string from a given tag
update method updates the object from another entity
writes the object as an xml output
creates a new
update method updates the object from another entity
creates a new transaction
returns true if the given code tag code is a legal code
this method is called when the xml element is about to be
checks if a given actor is a member of the team
checks if team is a team
update method updates the object from another entity
returns the summary of the current
writes the object as an xml output
process the xml xml element
writes the object as an xml output
reads the object from the input
writes the object as an xml output
writes the object as an xml output
p this method is used to parse the xml from the input
starts a new tag
update method updates the object from another entity
adds prerequisites to the
returns the summary of the current
writes the object as an xml output
p this method is used to parse the xml
this method is used to transform a given xml element
update method updates the object from another entity
adds a list of classes to the list
returns the latest planned plan in the project
returns the list of the given tag
adds a file list to the list of files
the entity
the
the
the object from a xml input
the object from a xml input
returns the latest active for the given task
description of the method
writes the object as an xml output
compares this object with the specified object for order
p this method is used to parse the xml
starts a new
update method updates the object from another entity
accept a single line of the filter
compares this object with the specified object for order
validates the
validates the
writes the object as an xml output
compares the argument to the current instance
compares the argument to the receiver and returns true
creates a new transaction
compares the argument to the receiver and returns true
writes the object as an xml output
writes the object as an xml output
update method updates the object from another entity
writes the object as an xml output
reads the object from the input
writes the object as an xml output
writes the object as an xml output
reads the object from the input
reset the complexity
writes the object as an xml output
p reads in the xml from the input
sets the name of the plan
writes the object as an xml output
p this method is used to convert the input object into an
parses a new
update method updates the object from another entity
returns the application application
returns the summary of the summary
returns the prefix to be used for the application
writes the object as an xml output
p this method is used to convert the input object into an
writes the object as an xml output
p this method is used to convert the value to a xml
returns the summary of the forecast
update method updates the object from another entity
returns the summary prefix
compares this menu to another
writes the object as an xml output
p this method is used to convert the value to a xml
sets the name of the plan
adds a list of classes to the list
returns a list of the items
creates a new
adds a file list to the list of files
saves all the to a xml file
method to process the xml from the object
description of the method
returns the last scheduled hours
returns the summary for the current time
parses a code code
update method updates the object from another entity
writes the object as an xml output
creates a new
update method updates the object from another entity
returns the workload for the workload
writes the object as an xml output
compares this object with the specified object for order
writes the object as an xml output
p this method is used to convert the value to a xml
update method updates the object from another entity
returns the workload for the workload type
compares this object with the specified object for order
writes the object as an xml output
p this method is used to convert the value to a xml
writes the object as an xml output
reads the object from an xml input
returns the workload for the workload hours
update method updates the object from another entity
adds a duration to the end of the duration
adds a new sign to the list of milliseconds
adds a duration to the end of the duration
adds a duration to the list of months
returns the last scheduled hours
subtracts the duration of this duration into the specified duration
returns the number of days in the
compares this object with the specified object for order
writes the tag as xml
writes out the xml
adds prerequisites to the
this method is called when the end of a duration is not
normalizes the given time
sets the duration
sets the duration
returns the number of hours in the specified day
writes the object as an xml output
p reads from the input
writes the object as an xml output
creates a xml object element
p this method is used to parse the xml from the input
sets the duration of the duration
called after the end of the end of the end
sets the entity
returns the tag of the tag
updates the duration of this duration
this method is called by the framework to indicate the end of
start tag with a tag
creates a xml object that is a new xml tag
this method is used to get the tag of the tag
called after the end of the end of the end of the
creates a new
resets the state of this instance
adds a new definition to the definition
returns the summary of the current date
this method is used to create a xml object
update an entity
returns true if the application is
update method updates the object from another entity
returns the summary
updates the security object from another entity
returns true if the specified code tag code is a legal code
returns the name of the method
this method is used to create an instance of code entity code
update method updates the entity
creates a xml object element
read the object order
writes the object as an xml output
p this method is used to parse the xml from the input
reads the object from the given input
validate the given xml
updates the object with the given session
update method updates the object from another entity
description of the method
writes the object as an xml output
p this method is used to parse the xml
validates the set of values
writes the object as an xml output
compares the argument to the receiver and returns true
sets the xml
writes the object as an xml output
reads the object from the input
this method is used to generate the generation of the object
writes the object as an xml output
writes the object as an xml output
p this method is used to extract the value from an xml
compares this object with the specified object for order
returns true if the input is a legal resource
creates a new
update method updates the object from another entity
imports a class from the
sets the name of the
reads the iterator from the list
compares this object with the specified object for order
reads the from the given iterator
returns the summary of the current entry
imports the object from the given xml
returns the tip text for this property
reads the classes from the given owl class
adds a new comment
returns the application name
returns true if the given object is a legal element
compares this object with the specified object for order
this method is used to convert the given value into a single
returns true if the specified code tag code is a legal
writes the object as an xml output
p this method is used to parse the xml
update method updates the object from another entity
returns true if the given element is visible and is a valid
adds a list of classes to the list
sets the summary
returns the list of all the tags
adds a file list to the list of files
checks if the given string matches the given name
this method is called when the user selects a new
saves all the to a xml file
writes the xml into the xml
description of the method
returns true if the initiator is ready for the given
p receive a new
returns true if the is
writes the object as an xml output
p this method is used to parse the xml
writes the object as an xml output
p this method is used to parse the xml
parses a new
update method updates the object from another entity
writes the object as an xml output
p this method is used to parse the xml
writes the object as an xml output
writes the object as an xml output
reads the object from an xml input
returns the summary
update method updates the object from another entity
sets the active state of this task
returns true if the given code tag code is a legal code
returns the text of the given text
returns the summary of the current document
sets the current task object
this method is called to place the xml
writes the object as an xml output
reads the object from the xml
update method updates the object from another entity
returns true if the given object is similar to the given object
compares this object with the specified object for order
returns true if the given object is a different type
writes the object as an xml output
p this method is used to parse the xml from the input
adds a list of classes to the list
returns the list of the given tag
returns the parser that is associated with the given tag
adds a file list to the list of files
generate additional methods for the class
returns true if the component name is unique
saves all the properties to a xml file
sets the ai object
description of the method
writes the object as an xml output
reads the object from the input
sets the name of the object
parses a tag
checks if the given instant is available
update method updates the object from another entity
writes the object as an xml output
start parsing tag
p this method is used to parse the xml
this method is used to get the tag for the tag
ends the current transaction
returns the root action
end the current instance of the current state
this method is called by the parser to begin a tag
returns the tag of the given tag
returns the session
returns the server
returns a list of the server names for the given server name
lists all the categories in the list
returns the xml element
returns true if the entity is deleted
returns true if the recipient is empty
lists all the objects in the list
returns true if the detail is a detail
returns true if the user is a save
returns true if the summary is summary
returns true if the value is short summary
returns true if the node is expanded
returns the tag of the given tag
ends the actor
returns true if the current status of the task is complete
returns true if this object is updated
print the given text
returns the forecast date
returns true if the is explored
returns true if the load is a load
sets the
tests whether the actor is a
sets the
returns true if the is
sets the value of the must save property
returns true if the application is an save
returns true if the actor is an actor members
enables or disables the component
sets the of the object
compares the argument to the receiver and returns true
checks whether the actor is a actor
returns true if the status of the status of the status is
returns true if this is a demo
returns true if the recipient is sent
gets the value of the property
returns the summary
runs the load process
returns the updated by
returns the tip text for this property
enables or disables the component
sets the name of the task
sets the text of the wrap text
returns the html html for the html page
invoked when an action occurs
resets the day and the specified date
enables or disables the component
clears the current calendar
sets the title document of the title bar
adds an item to the combo box
adds an item to the list of items
adds a new item to the list
adds a new item to the list
returns the image for the specified period
returns true if the is
returns the item code label
returns the item with the specified label
returns the label for the given code
returns the icon for the label
returns the title of the frame
returns the number of periods in the
this method creates a new panel
returns the icon name for the specified label
attaches a specific column to the panel
returns the selected code
returns the selected label
sets the date type for the given column
returns the selected icon name
changes the selection to the selected column
returns the button lookup
sets the selected code
returns the number of panels
returns the panel for the given column
refresh the list of buttons
run the lookup
performs the action
description of the method
deletes the row
run the lookup
clears the text search
sets the frame
this method is called when the user selects the selected panel
returns the button
returns the panel calendar
sets the key tag for the tag
reloads the days from the current day
collapses the panel
description of the method
returns true if the menu bar is a menu bar
sets the text
invoked when an action occurs
returns the text of the current user
returns the related menu bar
returns the plain text
invoked when an action occurs
resets the selected category
sets the text
sets the associated panel
returns the associated panel
saves the configuration settings
gets the parameters for the selected theme
returns the wrapped code text code object as a string
sets the text
sets the filter
sets the search
sets the icon
returns the icon name
adds a label to the list of text
adds a label to the list of icons
sets the opened state of the opened midlet
sets the state of the closed state
runs the
wait for the command to be executed
writes the xml object
start the tag
adds a menu button to the menu
this method is used to determine the tag of the tag
refreshes the menu
this method is called when the end of the target
invoked when an action occurs
begin uml doc
expand the tree
returns the tag of the tag
called by the when the end of the end of the
compares this object with another one
returns the tag of the tag
gets the value of the panel lookup property
collapses the panel
this method is called when the end of the text is pressed
this method is called when the user selects the button
this method is used to get the tag of the given tag
this method is called when the end of the
invoked when an action occurs
creates a new action with the given value
compares this object with the specified object for order
unselects the tree
invoked when an action occurs
tree selection changed
returns the last element in the iteration
this method will be called when the xml parsing is finished
sets the tree path to the selected tree
handles the action event
this method is called when the user selects the current date
returns the text search
runs the lookup selection
clears the text search
selects the next month
sets the text search
selects the previous month
sets the height of the frame
adds a date message to the end of the list of messages
enable or disable the filter
paint the component
clears the list of messages that were collected
creates the gui
returns the filter
this method is invoked when the user presses the new button
selects the selected day
sets the filter for the given filter
invoked when an action occurs
invoked when an action occurs
exit the application
sets the server name
sets the color of the server
attaches the component label to the end of the list
passing the focus request to the viewers control
returns a string representation of the object
compares the specified object with this tree for equality
returns the tag name of the tag
returns the summary
sets the name of the column
compares this task to the specified object
sets the tag name for the tag
called when a key is released
this method is called when the user finishes the
invoked when an action occurs
adds a button bar
refresh the menus
handles the action event
invoked when an action occurs
sets the preferred width of the specified column
invoked when an action occurs
creates a new action with the given value
exit the application
finish the process
invoked when an action occurs
invoked when an action occurs
resets the progress bar
adds a progress value to the progress bar
creates a new action
invoked when an action occurs
sets the width of the specified column
returns the human readable description of this filter
description of the method
writes the given string to the output stream
start a new tag
start a new tag
test if the tag is beginning with a tag
writes the given value to the title
get the tag of the tag
ends the current theme
this method is called by the
get the tag of the tag
called by the code code method to add the
writes a grayscale image to the specified image
start a new tag
this method is called by the tag
returns the total number of times the has been processed
called by the code code method to indicate the end of
creates a new row
returns the tag of the tag
returns true if the edit part of the edit mode is selected
ends the current state
start the tag with the given tag name
returns the tag of the tag
generate the footer
this method is called when the end of the text is reached
start a new tag
returns the date of the last modification
start a tag
closes the writer
this method is called by the digester
ends the current process
returns the last revision
displays the page
end the output
returns the password for the operator
copy a file from the given file
this method is invoked when the new row is selected
returns the path of the files in the local file
returns the number of names in the list
returns the operator name
writes out a string
returns true if the delete entry is deleted
returns the class name of the given class
returns the current revision of the current object
returns the password for the user
returns the operator of the current network
returns the name of the item
returns the value of the code code property
returns the item at the specified index
this method is used to process an xml object
creates a new row in the table
this method is called when the user selects an authorized user
removes all items from the list
returns true if the user is authorized to check the authorized user
increments the current number of requests
compares the specified object with this item for equality
returns the server
factory method to instantiate a code server code
returns the connection factory
start tag with a tag
returns true if the user can edit the
returns the tag of the tag
copy the contents of the current document into the given document
called when the user selects the selected item
deletes the selected row
executes a query
copy an error to the document
receive notification of the given xml document
this method is called by the parser to perform a query
this method is invoked when an exception is thrown
this method is called by the digester
executes the query in the specified query
this method is called when the xml element is caught in the
p convenience method for getting the tag value
deletes all rows from the table
creates a new window
this method is called when a query is made to the server
returns the handler
returns the string representation of the object
adds a level to the current level
resets the level of the level
returns true if the error is in the error
this method is called to indicate the character data
end the element
end the document
parser warnings to be called when a warning is encountered
process sax parsing error
returns true if the server is a server
sets the value at the specified row and column
removes the specified listener from the list of listeners
returns true if the server is a security role
sets the value at the specified value
gets the value of the property
shuts down the client
sets the highlight at the specified position
replaces the labels of the text with the given text
sets the highlight at the specified value
queue a query to be executed
read the preferences from the database
refreshes the menu
this method is called to notify the parser that a
refresh the menus
disconnect from the server
activates the buttons
this method is called by the xml parser when a new tag
returns true if the socket is connected to the client
adds a panel to the panel
returns the html html code for the html table
attaches a frame to the main frame
detaches the frame from the frame
sets the selected value
handles window events from the window
broadcasts a message to all the frames in the given
removes the selected row from the table
this method will be called when the thread is destroyed
sets the type of the column
resets the button to the selected button
this method will be called when the frame wants to be
sets the type of the panel
resets the buttons to the specified button
sets the date type
clears the current selected menu
sets the type of the column
this method is called by the session factory to serialize the object
sets the value of the column
run the
adds a button bar button
sets the percentage of the data in the table
sets the combo box for the given column
sets the default column default
sets the visibility of the save button
sets the highlight
resets the save save button
sets the value of the code read only code property
resets the button to the selected menu
sets the centered
sets the visibility of the button
sorts the table
returns true if the hierarchical column is hierarchical
returns the number of in the given actor
executes the query
clears the frontier of the queue
adds the level to the table
removes the current selected level
adds a new message to the list of
selects the selected row
moves the selected row down to the table
this method is called when the server wants to be executed
returns the current panel
enables or disables the soft enable disable button
returns true if the category is selected
returns the icon for the specified column
resets the categories
save the configuration parameters
hide the buttons
sets the mode
returns the lookup parameter for the current component
sets the number of sort of the list
change the selection
returns the messages messages
invoked when an action occurs
change the category title
returns the number of columns in the model
sets the default value for all the default values
creates a new row
creates a new button
deletes a row from the table
creates a new panel with the specified name
deletes all rows from the table
sets the name of the column
sets the tag name for the tag
returns the column type
sets the column type
clears the calendar list
sets the cursor to the specified cursor
sets the highlight
sets the read only column
sets the centered
sets the combo box
restore the file
returns the value at the specified row and column
returns true if the cell at the specified location is highlighted
hide the action bar
returns the diagram at the specified index
returns the level of the specified row
sets the level of the current row
returns the number of days in the diagram
returns true if the given row is hidden
removes all files from the file system
returns true if the cell at row and column is editable
add a new web page
sets the value at the specified row
add a web page to the page
sets the highlight at the specified position
sets the highlight at the specified index
shows the license
sets the level at the specified level
this method is called when the is done
sets the ticket at the specified row
sets the server name
sets the ticket at the specified position
returns the index of the selected selection
sets the processing server name
returns the index of the selected selection
sets the number of processing processing requests
writes an element as an xml value
returns a string representation of this object
compares the specified object with this node for equality
this method is called by the framework to perform the processing of
the given tag and sets the value of the
returns the html representation of the
returns the directive for the given column
returns the status of the specified column
sets the status of the table
checks if the table is sorted
returns the column sorting
sorts the table
this method is called when the table changes
sort the table
sets the hierarchical hierarchical values for this column
returns true if the hierarchical type is hierarchical
adds a level to the current level
removes the level
sets the flag indicating whether or not the specified
moves the up to the specified row
moves the row down one row
returns true if the column is read only
mouse clicked method
sets the delta level
sets the
sets the engine
performs the given
sets the value of the struct gen generator
sorts the score
sets the dataset name
sets the init objects
sets the random
sets the value of verbose flag
sets the number of generations
returns the engine
returns the objects that are contained in this object
returns the result of the
sets the maximum number of steps to be used for the
returns the atom container
returns the dataset name
sets the maximum steps
stops the current thread
returns the new thread factory
sets the number of to stop
sets the current dataset number
sets the start of the
sets the current dataset number
returns the current dataset number
sets the current value of the current k
returns the current dataset dataset
sets the rate
stops the running process
returns the random
returns the number of
gets the value of the property
adds a change listener to the list
removes a listener for changes to the change listener
returns the probability of the acceptance
notify listeners that the event has changed
returns the frame that is currently running in the frame
mutate this object
returns the maximum number of steps allowed for this
sets the location of the file
gets the value of the file location property
returns the maximum number of steps allowed for this
sets the location of the file
gets the value of the file location property
sets the log file
the current step
sets the result file
returns the server configuration directory
sets the dimensions of the mol view
returns the dimensions of the mol view
adds a molecule to the model
adds a change listener to the list
adds a structure to the model
sets the dim dim dimension
invoked when the target of the listener has changed its state
returns the dim dim dim
adds a molecule to the structure
adds a molecule to the model
this method is called to get the properties of the properties file
returns the border of the titled border
saves the parameters to the file system
this method is called when the user selects the
reports the current report
this method is called by the
sets the value of the pick precision
opens a new file
returns the value of the code pick precision code property
returns the number of atoms in this atom
returns the number of
log the given string
adds a signal to the list of listeners
replaces the signal at the specified position in the given
adds a signal to the
creates a new signal with the new one
sets the file to be used for logging
sets the atom formula
sets the atom container
returns the atom container
returns the signal at the specified position
sets the file containing the file to be used for the file
sets the mass mass
returns the number of signal
sets the atom container
returns the log file file
sets the description of the event
the
returns the file where the log file is used for the
sets the
returns the
sets the current value
adds a new judge
removes a judge from the database
starts the server
sets the dataset name
sets the atom container
this method returns a vector of the signals that the given
returns the version of the task
sets the of the
sets the scores of the player
sets the score of the given score
sets the cut cutoff value
returns the cut off
sets the
sets the enabled state of this component
sets the
sets the ring set required flag
gets the value of the molecular mass property
sets the max score
sets the maximum score of the score
sets the chart
returns the
returns the name of the ident of the
returns the host address
returns true if the ring is required
returns true if the score has a score
returns the maximum score of the score
returns a specific value for the given name
notify the listeners that the model has changed
destroy the service
initialize the
adds a change listener to the list of listeners
creates a new gate with the current command
sets the data
returns the data of the
adds a new data to the series
initializes the
updates the timer
starts the timer
stops the current thread
initialize the service
populate the user with the current user
returns a json string representation of the project
returns the started started time
returns true if the current thread is running
populate the user with the current project
notify listeners that the change listener has changed
generates the getter for the given type
generates the code code for the given code property code
generate a setter for the given
generate the code for the given code code
returns the name of the getter getter for the given property name
returns the property name for the given property name
generate a for the given property
generate properties for the given properties
generate a new instance of the given property
returns the name of the setter
returns the code generators
returns the jsource code for the source code
sets the source code generators
adds a property to the list of generators
sets the generators generators generators
returns the name for the given property name
returns the help text for this help
generates the generic getter for the given type
returns the command parser
returns the id of the object
returns the balance of the account
sets the parser parser
returns the name of the
returns the state of the state
generate a generic setter method for the
sets the definition processor
returns the zip code
gets the first name
returns the definition processor
returns the country
returns the region
sets the source code generator
returns the continent
returns the last name of the last
returns the source code generator for this
sets the continent
returns the name of this
returns the account
returns the street name
returns the billing address
returns the number of the current instance
returns the floor
sets the value of email addresses
returns the is
sets the addresses
returns the
sets the billing address
returns the city
sets the floor
initializes the definition map
sets the is
returns the global config
sets the definitions of the definition
callback callback callback method
sets the
returns the reason for the exception
sets the city
creates a new instance of the given class
sets the reason
sets the definition map
logs a security exception with the given name
sets invalid reason
logs a message with the same value
sets the
returns the value of the given object
sets the properties
validates the given property definition
returns the default package
returns the generate class
checks if the property definition is not contained in the given property
sets the message
sets the validators
returns the generate java
sets the definitions
adds a new code code to the list of validators
returns the global configuration parser used to convert the global configuration to
returns the output class directory
returns the output directory
sets the validation status
sets the config file
sets the validators
sets the default package
adds a new validator to the list of validators
sets the global configuration parser
sets the validator
sets the generate class
sets the generate java
this method is called by the digester
sets the output class for the output class
sets the output directory to use for output
unmarshal the xml configuration
validate the given parameter
returns the defintion resolver
sets the definition resolver
returns the property container
sets the property container
sets the property on the entity
sets the map of properties to be used for the property map
puts properties into the proxy
returns the name of the compound property
sets the property on the property
returns the value of the entity property
populates the entity with the given entity
sets the definition validator
this method is used to set the value of the given object
sets the factory that this factory will use to instantiate
returns the object that is the same as the property name
returns the config file
returns the definition processor
returns the jaxb context name
returns true if the setter is set
returns the property container
sets the config
sets the
sets the map of operation handlers to use for this map
recursively forward the hierarchy hierarchy for the given property
sets the entity factory
returns the entity factory
sets the criterion to be used to set the value of this
returns a clone of this object
removes a criterion from the list
compares the value of the given property with the same value
returns the cache validator
sets the cache manager
caches the cache caches
flushes the cache
checks if the given component is a component
returns the interface connected to the connection
this method is called by the constructor to initialize the
this method is called by the constructor to initialize the
post a post
post a post
this method is called by the constructor to initialize the
post a post
this method is called by the constructor to initialize the
post a test
this method is called by the constructor to initialize the
post a post
auto generated axis2 error handler
auto generated setter method
validate the given object and validate the errors
display a request
adds the result of the number of the second
sets the current value of the matrix
divides this object by the current one
clears the current result
returns the contact by id
removes a contact from the list
sets the value of contact repository
sets the group repository
sets the tag repository
removes the contact id from the contact
validate the properties
at startup create and show the main frame of the application
start up the application
factory method to instantiate the action manager
creates a new language manager
sets the look and feel
initializes the attributes
registers the listener to be notified of changes to the action
registers the listener for changes to the action
updates the monitor panel
returns the current folder
returns the current entry
applies the proxy settings from the preferences
centers the window on the screen
cancel the current state
registers the action listener to the application
build the content pane
builds the content pane
creates the components
registers the action listener to the local window
build the layout
build the main panel
paints the component
builds the main panel
builds the dialog bar
builds the dialog bar
sets the dialog settings
sets the size of the dialog
sets the dialog settings
sets the size of the dialog
returns the current login mode
returns a group with the specified group id
returns the portal url
gets the portal company attribute of the company object
returns the mnemonic for the given property
puts the properties into the specified properties object
insert the methods description here
build the frame
builds the content pane
inserts the given key into the image map
start up the application
returns the image associated with the given key
updates the language resources
returns the action manager
creates a new language manager
checks if the user has a given user name
update the user authorities
removes a user from the database
changes the password to the user
add a number of seconds to the effort
test that the properties of the properties object is set
sets the outside web app
invoked when an action occurs
rename the project menu
deletes the selected project
adds the project menu
this method is called when the window is closed
returns the property
returns the property
returns the title of the document
returns the property
returns the property
returns the timestamp of the last update
returns the time of the last created date
sets the property of the
sets the user id
sets the title of the document
factory method to instantiate a code code object
sets the category id
sets the timestamp when the last update was last update
sets the time of the creation date
sets the
returns a list of templates matching the given
factory method to instantiate a code code object
returns the title of the template
factory method to instantiate a code code object
returns the version number of the version
returns the version minor
returns the property
returns the description of the file
sets the title of the template
returns whether or not search should be searched for the search
sets the version major
returns the current time in milliseconds
sets the version number of the minor version
sets the user id
sets the description
sets the search sub categories
sets the timestamp
returns the current time in milliseconds
returns whether or not the search should be scanned
sets whether or not search should be used in the search
returns whether or not the search was modified
returns the user id
sets whether or not the search is modified or not between
select a template
sets the time to be used for the time
returns the of the xml document
sets the end timestamp
sets the timestamp of the last modification time
returns the time of the update update history
gets the value of the inventory code property
returns the amount of amount of the amount of the amount
returns the notes
sets the timestamp when the date was modified
sets the update date history
sets the inventory code
sets the amount of the amount of the amount
factory method to instantiate a code code object
sets the notes
returns the current amount of the current amount
sets the current amount of the
factory method to instantiate a code code object
returns the time before the time zone was created
factory method to instantiate a code code object
factory method to instantiate a code code object
returns the
returns the time in the current time
insert a new inventory object into the database
sets the inventory item
add a new inventory item to the database
returns a list of all the inventory
this method is called by the business object
update the inventory
returns the time end date
business method get inventory item status
business method get inventory inventory object
returns the end year of the end of the end time
returns the code code property
sets the description of the
sets the parent inventory code
returns the time in the month that the recurrence is
clean up the garbage collector
returns the time in the beginning of the recurrence
select the inventory object for the given select
returns the files
returns the date end month
sets the name of the event
sets the start event timestamp
sets the finish event
factory method to instantiate a code code object
sets the committee date
sets the committee date
sets the timestamp of the
returns the latest modified year
returns the name of the event
sets the event name
gets the time in ms
returns the start time of the event
returns the timestamp of the event
checks if the given object is a valid permission
returns the date of the committee
returns true if the property is empty
returns the date of the committee
description of the method
creates the default code timestamp code
insert a new organization object into the database
creates the default timestamp for the default end time
create an instance of
create an instance of
checks if organization exists
create an instance of
factory method to create a map of properties
checks whether the specified access is already set
returns the number of columns in the table model
returns true if the given id exists in the database
returns the value for the cell at the specified position
creates a new code list code instance
creates a new table model
returns the connection to the database
close the connection
returns a list of group objects
returns a list of user objects that are currently in the database
create an instance of
sets the timestamp of the last update
returns the hex string buffer
returns the literal string buffer
converts a string to a string
returns the page reference
returns the current zoom level
returns the highlight mode
returns the destination of the destination
sets the stroke width
sets the border style
returns the sub type of the sub type
returns the string representation of the given input buffer
returns the for this
clears the font list
returns a page path for the given
returns the value of the given
returns the bounding box of the given user
returns a string representation of this object
returns the annotations associated with this annotation
returns the
returns the hex string buffer
returns the literal buffer buffer
returns the art box
returns the color of the specified color
returns a box that is used to compute the
returns the color of the given array of floats
returns the for the
translate the given point
scales the matrix to the specified coordinates
returns the images vector
returns the size of the text
paint the text in the text area
returns true if the shape intersects the given rectangle
disposes the toolkit
returns the color of the specified color
initializes the component
returns the color of the given array of floats
sets the current
sets the clip to be clipped by this object
initialize the
initialize the page
adds trailer to the dictionary
returns the external file
gets the value of the new window property
returns the entries in the hashtable
returns a new dimension of the current dimension
returns the original points of the
returns a string representation of this object
returns the coordinates of the current
returns the object associated with the reference
prints out the debug information
returns the object that is used to store the object
returns a rectangle with the given key
sets the image
disposes the cache
sets the glyph to the font
returns the index of the generation
handles key pressed events
sets the glyph
this method is used to determine the alpha for the given alpha
returns the image that is used to store the image
returns the of the
reads the next byte of the data from the input stream
creates a new
adds an image to the image
returns the image for the given image
executes the given code code
executes the given code code and returns the result
returns the type of this color
push the current clip to the current state
returns the type of gray value
returns the type of this entry
returns the for the specified components
returns the type of this entry
returns the stroke for the specified path
creates a new code canvas code object
fill the given area with the current bounds
draw the path
fills the specified path with the current state
draw a native text at the specified coordinates
clips the current clip
sets the clip to the given clip
returns the transformation matrix
transforms the given mat into the matrix
sets the transform matrix to the given matrix
returns the initial transform of the transformation
resets the current state of the
sets the last shape
applies the given x y z to the current vector
returns the last shape
returns the current transformation matrix
sets the matrix of the matrix
executes the given command
adds a region to the current region
returns the number of pages in the document
returns the glyph associated with the given name
returns the shape
adds a new commands to the given command and returns it
returns the outline of the outline
reads the name of the file
returns the image for the specified image
reads the number of the number of the next available
restores the current state of the contributor
returns the bbox
returns the width of the image
returns the height of the image
gets the command at the specified index
adds a new command to the stack
returns the
sets the
stops the image and returns the image clip
this method is used to get the file directory
returns the outline of the given outline
add a matrix to the matrix
adds the end cap
adds a path to the path
update the images in the list
opens a new file
this method is called by the
returns true if the viewport should be filled
returns a rectangle object representing the given object
returns true if the viewport should fill the viewport
sets the fill viewport x
sets the fill viewport y value
fills the specified area with the specified path
returns the image
executes the given command
renders a compound node with the given name
scrolls the view to the given child
add a line join to the end of the list
opens a pdf file
returns a rectangle object representing the given object
opens a file to be used in the file system
returns the type of the image
opens a file
returns the x coordinate of the point at the given index
adds a listener to the list of listeners
removes the listener from the list of listeners
clears the list of listeners
saves the to the file
this method is called when the next turn is done
loads the game
returns a terrain layer object for the terrain at the given terrain
this method is called to indicate the game game
returns the terrain terrain
returns the seed of the seed
adds a new item to the list
display a given area of the given number of the given
reads the sector from the given sector
returns the list
returns the round number
adds a to the
adds a round to the round
returns the race of the
gets the value of the race name property
gets the value of the race name plural property
draw the icon
applies the stats to the given stats
returns the name of the plural form
adds a new item to the list
removes the specified item from the list
render the cache
returns true if the item has an item
draw the
renders the
returns the stats for this item
renders the of the given field
returns the
returns the
sets the path to the
sets the value of the property
sets a value in the property
sets the value of the key
sets the value of the key
returns the value for the specified key
returns the value associated with the given key or code null code
returns the value associated with the specified key
checks if the type is a number type
returns the value associated with the specified key or default key
returns true if the type is string
returns the value associated with the given key
returns true if the type is a date type
returns the name of the given string
compare two
returns the name of the given column
finds the column with the given name
returns the type of the given type
returns the type of the given type
returns an attribute of the type
returns the value of the attribute type
creates a new instance of page table model
returns the first upper letter of the given string
returns the first lower string of the first occurence of the given
returns the column of the given bean
returns the length of the array
returns the sql type
adds the toolbar buttons
collapses all the nodes in the tree
sets the visibility of the image
updates all the preferences panels
update the children constraints
updates the layout of the component
removes the given family family from the family
adds a family family to the
gets the value of the containing family property
returns the default default value for the default node
invoked when an action occurs
returns the top panel
returns the foreground color of this component
updates the layout
returns the application
this method initializes this
returns the background color of this component
this method initializes j text pane
returns the font
updates the display
returns the font
sets the text in the text area
returns the background color of this node
returns the default text
synchronizes the view
invoked when a key is released
invoked when a component gains the keyboard focus
invoked when a component loses the keyboard focus
revalidate the container
removes the given node from the list of nodes
returns the number of in the current
returns true if the given view is a top view
adds a node to the
adds a node to the list of nodes
solves the node with the given value
removes the given node from the list of nodes
returns the super view
adds an edge to the list
returns true if this node is empty
adds a node to the receiver
removes the edge specified by the specified edge
removes the specified edge from the graph
removes a node from the list of children
this method will be called by the to indicate that an
removes a friend from the list
disconnects out the given edge from the given node
returns true if the given node is a top node
paste the root of the document
returns the node with the given edge
returns a clone of the object
returns the node with the given code node code
returns the super view
increments the number of frames
returns the current user
returns the view
resets the shadow
sets the value of sub view
clears the current
returns true if the graph is solved
returns the current playback clip
adds a sub node to the given node
sets the current playback clip
creates a new sub graph
this method is called when the user modifies the
returns the solved state
sets the solved state
returns true if the graph contains sub graph
returns true if this node is a top node
returns true if the node has children
returns a string representation of this object
loads the file from the given file
sets the x coordinate of the spring
returns the spring
writes the given char array to the output stream
writes a string
writes the specified byte to this output stream
returns true if the given file is accepted by this filter
sets the text
invoked when an action occurs
choose the color to choose the current color
returns the background color
returns the font
sets the y coordinate of this component
returns the font chosen in the selected font
returns the selected item
returns the of this component
adds the roots to the roots tree
adds a new edge to the list of edges
adds a new node to the list of nodes
sets the width of the component
adds an edge to the list of edges
adds a node to the list of nodes
adds a new edge to the list
returns the spring application
adds a node to the list of nodes
returns the node at the specified index
returns the id of the node
returns the code code observer for the specified
sets the height of the spring
returns the id of the specified edge
returns the string representation of this object
returns the for the given
returns the for the given edge
creates a new
returns the spring layout
updates the preferences panel
returns true if the data has data
sets the data
returns the escaped character
sets the data of the data
returns the top of the stack
sets the list of sub objects that are used to compute the
returns the sub qty for a given
sets the constraint
returns the sub object for the given name and sub type
returns the constraint for the specified name
escapes special characters in the string
sets the element at the end of this graph
escape special characters
returns the quantity of the recipe
sets the visibility of the tree
returns the sub object of the given name and the sub type
returns the sub object of the given name
returns the data of this object
returns the
returns the of the given
returns the node that is currently being viewed
returns a string containing a string of the given element
returns a string that is indented by the given amount of characters
adds a sub view to this view
returns the top node of the current panel
sets the solved state
this method cuts the selected graph
copy the of the current graph
invoked when the mouse enters a component
invoked when the mouse exits a component
mouse released event
returns the foreground color
returns the background color for the node
updates the view
returns the next sample in the distribution
returns the next sample in the list
returns the next sample in the distribution
download the file
returns the name of the file that was used to create the
sets the auto save interval
sets the file deletions file
checks if the name of the database exists
returns the spreadsheet
adds a new header row to the table
returns the row header table
returns true if the current state of the has been modified
deletes selected cells
returns true if the table has changed
returns the file that was used to save the file
returns the string representation of the current value
sets the contents of the contents of the contents of the given
clears the contents of the contents
returns true if the cell is equal to the same column
returns the index of the variable label
returns true if the value is numeric
returns true if the data is a data
this method is called to indicate that the file is saved
returns the row number of the specified label
returns the name of the file
returns the last non empty empty row
closes the dialog
exit the file
returns the last non empty column
returns the variable name of the given column
returns a vector with the columns of the columns
returns a vector containing all the columns of the table
sets the cell value at the specified position
sets the column
sets the cell value at the specified column
sets the row
sets the status of the current tab
returns the comma delimited list of all the comma separated values
returns the comma separated list of all the comma separated values
returns the status of the status of the event
removes the specified cell from the table
deletes a row from the table
deletes the column
closes the file
deletes a cell from the table
sets the column widths
insert a row at the specified index
insert column into worksheet
inserts the given cell into the table
parse the column number
returns the column number for the specified column
returns the full label for the specified column
returns the row number of the specified row
returns the last row number
sets the cell value for a given column
sets the data of the row
sets the label of the variable
returns the last non empty empty row
returns the last non empty empty column
sets the data model for this table
sets the status of the spreadsheet
sets the data model
sets the file to be saved
clears all cells in the spreadsheet
insert the table row into the table
insert the new row above the table
insert row below the table
insert the column
insert the column left table column
convert the condition to a string
insert column into the table
returns the alternative condition of the given condition
insert the new row in the table
insert the table below the current row
updates the row header
selects all cells in the select list
sets the name of the dialog
sets the help file name
creates the spreadsheet
updates the elements of the list
updates the combo box with the given combo box
adds a new tab
clears the list of columns in the table
updates the list of selected columns
adds the to the tab pane
updates the list of selected columns
adds a new tab to the
inverse of the cumulative cumulative distribution function
this method computes the density of a given distribution
this method is used to calculate the probability of the cumulative distribution
inverse of the cumulative cumulative distribution function
calculates the probability density of the given distribution
this method is used to calculate the probability of the cumulative distribution
for the cumulative distribution function
inverse cumulative cumulative cumulative cumulative
inverse of the cumulative cumulative distribution function
this method returns the probability of the cumulative distribution function
inverse cdf to calculate the cumulative probability distribution function
this method returns the probability density of the distribution
returns true if the tab is changed
this method is used to calculate the probability distribution function
this method returns the probability density of the given
for the cumulative distribution function
inverse of the cumulative cumulative distribution function
calculate the density of the density function
for the cumulative distribution function
this method returns the cumulative probability of the cumulative distribution function
sets the status of the selected cell
inverse cdf to compute the cumulative distribution function
returns the
sets the title of the current tab
returns the test statistics
returns the critical distribution of the distribution
returns the number of
returns the value of the given attribute
returns the distance between the and the
returns the critical distribution of the distribution
returns the number of in the
returns the number of error critical in the error
resets the tab titles
returns the critical value of the current distribution
returns the coefficient of the polynomial coefficient
returns the regression coefficients
returns the current title
returns the statistic of the test correlation
returns the value of the given covariance
returns the regression regression regression regression regression regression regression regression regression regression
returns the sum of the y values
returns the sum of the of the
returns the x value of the sum
returns the total variation of the mixture distributions
returns the y value of the y axis
returns the sum of the y values
returns the sum of the of the
calculates the y coordinate of the y coordinate
returns the variation of the
returns the total variation of the mixture distributions
returns the variation of the
returns the variation of the mixture distributions
returns the variation of the mixture distributions
returns the coefficient of
returns the coefficient of of
returns the critical value of the given critical distribution
returns the standard deviation of the complex number
returns the noise distance between the and the
returns the test statistics
returns the test statistics
returns the probability distribution of the probability distribution
returns the critical value of the current
returns the value of the given attribute
returns the number of error in the error
returns the critical distribution of the distribution
returns the lower limit of the range
returns the number of samples in the sample
returns the upper limit of the upper left corner of the
returns the center of the center of the center
test the of the mixture of the
returns the critical value of the distribution
returns the number of
returns the value of the given distributions of the given distributions
returns the lower limit of the distribution
returns the upper limit of the distribution
returns a string representation of the object
returns the of the
returns the statistics of the current batch
returns the number of rows in the table
returns the of the second
returns the value of the critical distribution
returns the critical value of the current
returns the cumulative distribution function
cumulative cumulative distribution function
returns the mean of the
returns the cumulative distribution function
returns the mean of the mixture distributions
tests the distribution of the current
returns the of the
returns the value of the given attribute
returns the test statistics
returns the sum of the of the
returns the of the
returns the number of in the
returns the number of
returns the of the
returns the critical value of the current
cumulative cumulative distribution function
returns the test statistics
returns the number of error in the error
returns the critical distribution of the distribution
returns the number of
returns the number of
adds a observation to the array of offsets
returns the number of in the
returns the critical distribution of the distribution
returns the value of the probability distribution function
returns the id of the
returns the value of the given critical probability
returns true if the data is valid
returns the cumulative probability distribution function
returns the x coordinate of the right value of the current
returns the critical distance between the
sum of the sum of the given row
returns the lower limit of the
returns the upper limit of the upper left corner of the
returns a string representation of the
returns the total variation of the vector
returns the of the
sums the sum of the values of the given row
add a new observation to the list of
get the frequency of the given frequency
returns the variation of the
get the value of the specified frequency in the frequency
returns the variation of the
sums the of the
returns the sum of the specified row
returns the sum of the given value
sum the current
returns the total sum of all the coins
compute the chi square of the
returns the
returns the table
returns the sum of squared deviations of the current value
returns the statistic of the test
returns the sum of squared deviations of the y coordinate
returns the second bv
returns the number of
returns the correlation coefficient of the polynomial
returns the sigma value
test the distribution of the statistic
returns the critical value of the critical
returns the second value of the interval
returns the of the
returns the sum of squared deviations of the current
cumulative distribution distribution distribution distribution distribution
returns the sigma standard deviation
returns the cumulative distribution function
returns the distribution distribution
returns the of the current
returns the value of the given
returns the critical value of the distribution
returns the distance between the two points
test of statistics method of class
returns the critical value of the
returns the
this method computes the density of a given distribution
returns the value of the probability distribution function
this method is used to calculate the cumulative distribution function
inverse cumulative cumulative distribution
returns the msb of the
returns the of the
returns the of the
returns the of the
returns the number of the function in the given string
call this method to return a unit with a unit
returns the number of in the
returns the of the
invoked when an action occurs
parse the given string
prints the remaining expression
returns the number of in the
returns the factorial of the
returns the error
consume the current token
returns the of the
this method returns the unit of this unit
returns the
consumes the token at the current position
returns the of the
this method is used to convert the unit to a unit
returns the cumulative probability distribution function
consumes the function
this method is used to determine the unit component
returns the cumulative probability distribution function
returns the leaf units in the
consumes the constant value
this method is used to determine the unit
returns the cumulative probability distribution function
returns the next character
this method is called when the user wants to close the window
consumes next character and advance
returns the title of the chart title
sets the parent of this node
restore the current state of the frame
sets the clipboard image
adds a dialog to the history list
consume the token at the current position
returns the dialog with the specified index
returns the default list of the model
this method initializes this
adds a new label to the end of the list
adds a vector of labels to the vector
returns the number of labels in the list
returns the column number of the current cell
cancels the timer
adds a new paragraph to the document
show popup menu
adds a message to the document
returns the number of dimensions of this object
returns the key for the key
adds a text to the document
returns the constant value of the current character
sets the interval in seconds
adds a new heading to the document
sets the status of the application
returns the value of the specified key
sets the status of the status window
add a category to the list
returns the next character in the string
returns the category of the given category
returns the index of the given category
returns the size of the list
returns the frequency of the
returns the frequency of the given category
returns the next character in the character set
returns the next character in the string
writes the content of the file to the file
resets the edit state
print an error message
this method is called by the user when the user selects a
restores the status of the status of the status of the status
sets the status of the status bar
sets the status of the timer
clears the status of the status bar
adds a new loader to the help list
adds a help menu to the help menu
sets the title of the log
returns the log title
sets the title of the tab
returns the current tab title
closes the application
adds a frame frame to the list of frames
removes the frame frame from the list of frames
removes all frames from the chart
returns the spreadsheet
returns the tabbed pane
returns the log window
returns the date time
shows a dialog with the given error message
adds a new log message to the log
adds a new log heading to the log
adds a new log style to the given text
adds the edit edit to the undo menu
clears the undo manager
runs the thread
plays the ogg frame
called when the window is closed
creates a new interceptor that is used to copy the result
adds a sub profile to the given profile
returns true if the parent is a top level hierarchy
clears the extent information
returns the printable version of the current profile
test the test
test multiple collection of
remove a collection of records from the database
tests the address access
test access to the supervisor
test access to the profile
test access
test collection access
test collection collection
returns the widget for the specified user
returns the widget to be used for the given code code
sets the report parameters
register a task
sets the number of spaces to override the
sets the indent level
registers a task
sets the number of spaces to be used for the next page
returns the number of spaces used for the current level
sets the number of spaces to be used for the current tab
register a task
returns the number of tab spaces
sets the spaces spaces spaces
returns the indentation level
indents the current indent
register a task
registers a task
register a task
registers a task
prints a string
registers a task
register a task
updates the cache
returns the shared instance of the task
registers a task factory
clears the map
adds a file to the list of files
returns a list of all the tasks
adds a child to the tree
checks if the file name is already imported
this method is used to build the file path
returns the unqualified class name for the given object
sets the templates
sets the targets
returns the shared instance of the factory
returns the minimum value of the operator
sets the method names
returns the maximum value of the expression
sets the method types
register a task
returns the shared instance of the shared instance
executes the given parameter
registers a file with the given suffix
returns a system property with the specified name
returns the shared instance of the top level instance
creates a new
returns the canonical file for the given file
returns the flags
returns the html flags
registers a new
replaces the string with the specified string in the given string
registers a new
returns a list of all keys that contain the given prefix
returns the that this rule belongs to
tests if the given string ends with a given suffix
returns the pretty printer style for this font
returns true if the given file is a
returns a wildcard wild card
returns a file with the given url
returns a map of web maps
accept the visitor
accept the visitor
print the given line number
returns a list of all the sources
print a string
adds a source
prints the specified character array
add a list of source files to the model
print the string to the output stream
returns the character at the given position
returns true if the character is a comment
returns a list of all lines
returns the body of the comment
returns a list of all tags
returns true if the tag contains a tag
returns the original source of the comment
returns the sort columns
returns the table
returns the behavior of the behavior
sets the sort columns
returns the hash code of the object
sets the behavior of the attribute
sorts the table
returns a string representation of this object
sets the table
returns the column order
sorts the table
returns the column name for the specified column
returns the list of data items
sorts the table in ascending order by the specified comparator
returns the value for the cell at code column index code and
sets the data list
sorts the combo box
initializes the gui
load the data in the table
sorts the combo box according to the given combo box
validates the table
loads the data table
sorts the table
sorts the combo box model
initialize the gui
initializes the gui
sorts the table
sorts the table
sorts the list model
initialize the gui
sorts the table
sorts the table
sorts the table in the table
saves the results to the file
the graph
writes the given file to the output
returns the value of the value a value of the field
sets the value a value a value a value is in the
returns true if the weighted is
returns the value of the value b value b
sets the value b value b
returns the number of vertices
sets the parent of this vertex
returns the number of edges in the graph
adds a neighbour to the list of neighbours
computes the number of edges in the graph
adds a neighbour neighbour to the neighbour list
returns a new graph
returns the degree of the degree
returns a random vertex
returns the number of neighbours
compares the argument to the vertex
returns the graph that is currently set to the graph
increases the number of the in degree
writes the given file to the output
returns the vertex a vertex is used to draw the vertex
returns the vertex b
prints out the lines in the given file
adds a new edge to the graph
add an edge to the graph
adds a vertex to the graph
returns a vertex with the given name
returns the graph of the graph
unbinds the
binds the given bind value to the given bind value
returns the
sets the cursor position
returns true if the cursor position is positioned in the current position
binds the given to the given bind
returns the number of elements in the list
modifies the specified entry in the list
select element with given name
sets the current url for the specified url
select element with given name
sets the path to the
select the element with the given element
sets the url for the given url
select the element with the given name
sets the current url of the local file
select a attr
sets the url for a given url
returns the value of the
returns the length of the current sequence
returns the
returns true if the is
returns the of the current token
returns the expression string
returns the object at the specified index
modifies the specified entry in the list
returns the long value of the specified index
returns the index of the given
modifies the specified entry in the list
returns the index of the specified element in the list
returns the number of attributes in the current token
returns true if the given value is unique
resets the storage
returns true if the given text is a text element
resets the pointer to the pointer
touches the specified element
clears the list
returns the length of the array
returns the unit of the given character
returns the current depth of the current context
returns the current index of the current element
returns the encoding used for the encoding
returns the nesting level of the nesting level
returns the root index of the tree
returns the number of tokens in the current token
get the token depth of the current token
get the offset of the token at the specified index
returns the
get the token type of the given token
returns true if the given attribute is already present in the list
the given url to a url
consumes the character at the specified position
sets the current value of the specified
dump the context to stdout
returns true if the given element is in the current token
clears the current
clears the current
finish up the last up
returns the unit of the given character
removes the current element from the current token
removes the specified attribute from the list
returns the
matches the given string against the given index
returns the unit of the given character
parse a file
returns the current depth of the current context
parse the file name
returns the current index of the current element
parses a string
get the token depth of the current token
parses a long value
returns the index of the root element
returns the
returns the offset of the token at the specified index
returns the number of tokens in the current token
pops up a stack and then discard it
returns the depth of the token at the given index
parses the file name and returns the file name
pushes the current stack to the stack
returns the offset of the specified token
gets the
returns the type of the token at the specified index
clears the
a url to a given url
returns the context id of the current token
unbinds the
binds the given bind value to the given bind value
returns the
sets the cursor position
returns true if the cursor position is positioned
compares the current to the given book
binds the given to the given bind
declare a variable expression
sorts the table
clears the
returns true if the given element matches the given
select the element with the given name
sets the current context for the current context
select the name space for the given string
select a attr
sets the url for a
returns the value of the
returns the
returns true if the is
returns the expression string
processes the end comment
sets the position of the terminal
sets the document to be used for the
returns true if the current position is terminal terminal
returns the of the given token
sets the document
writes the index to the output stream
write the given index to the current position
pop up a stack and discards its stack
sets the cursor position
compares the current to the given book
clears the namespace
load a object from the given input stream
the current depth of the
load the from the given array
sets the url for a specific url
load a object from a file
pushes the current stack to the stack
clears the
binds the given bind value to the given bind value
returns the
compares the current book to the given code book code
returns true if the given url is a valid url
returns the context id of the current token
sets the position of the terminal
returns true if the given text is a text element
touches the specified element
returns true if the terminal is terminal terminal
binds the given to the given bind
declare a variable expression
returns the of the current token
returns the capacity of the queue
returns the index of the given index in the list
returns the element at the specified index
modifies the given entry in the list
resets the storage capacity
selects the text in the text area
selects the current comment
sets the selected type
returns true if the given text is a text type
get the token depth of the current token
returns true if the given attribute is already present in the list
a url to a given url
removes the specified code long code from this code code
writes the document to the output stream
removes the content of the specified offset from the document
inserts a byte into the buffer
writes the given file to the output file
insert the methods description here
returns the unit of the given character
returns the
returns the current index of the current element
parse a file
checks if the given string matches the given
returns a stldata type object
the
matches the given string against the given index
parses a string
parse the long index
this method is called by the client to perform a
resets the hash table
the
returns the
returns the context id of the current token
writes the index to the output stream
checks whether the given token is a normalized token token
get the token offset of the specified token
clears the current
enables disables the ignored white space
selects the specified depth
add white space white space
finish the
formats the line number
resets the storage
clears the current
returns a string representation of the value
returns the
add white space white space
convert the upper case to upper case
clears the
closes the current file
returns a stldata type object
the
load the index from a file
creates a new instance of the
returns the
returns the unit of the given character
returns a string representation of the token at the given index
returns the lower case value of the given index
returns the upper case value for the given upper case
returns a string representation of the given value
returns the string representation of the token at the given index
removes the content of the specified offset from the document
inserts a byte array into the buffer
returns a string representation of the given length
returns a string representation of the value
returns a string representation of the current value
writes the index to the xml document
returns a stldata type object
returns a clone of the nav frame
returns the
returns the prefix of the given element
the
returns a string representation of the upper case
returns a string representation of the current value
writes the index to the xml document
writes the index to the output stream
returns a new instance that can be used to iterate over
creates a new instance of the
returns the cron expression for the next participant
synchronize the news servers news and synchronize news
this method is called by the server to run the
returns the remote interface for the given jndi name
sets the point
adds a point to the end of the list
resets the
puts a piece of the given piece in the given piece
returns true if the given row is complete
resets the next random value to the initial state
removes all rows from the table
removes the specified row from the table
calculates the shadow of the shadow
rotates the camera as a
paints the block
returns the height of the specified column
rotates the camera and the rotated
sets the selected file
sets the selected files
adds a decision to the list of decision decision
checks if the given string is a valid decision
sets the current directory
add a new line to the list
returns the decision of the given decision
sets the default file
gets the value of the situation property
returns the current pictures
sets the chooser for this component
sets the owner of this component
returns the current directory
returns the default file
adds a new row to the table
removes a row from the table
removes selected rows
edit the current row
sets the stopped flag
the table
adds a decision choice to the choice list
adds a choice to the choice list
adds a mouse listener to the table
returns the url of the selected row
returns the decision choice at the specified index
returns the number of questions that are possible to the
accepts a file
this method is called when the user clicks on the file chooser
updates the display
clears the images
reset the array of coordinates
sets the number of the parallel
set the number of equations and
sets the speed
returns true if the image is away
returns the current
returns the prefs of the application
this method is called by the application
this method is called when the user modifies the preferences preference
close the current round
closes the current scenario
load the music
chooses the current scenario and the current route
plays the music
plays a music player
picking the scenario
load the choices from the combo box
checks if picked picked picked picked picked picked picked picked picked picked
check whether the given scenario is picked or not
check the current state of the field
round the to the
increments the number of round counter
resets the
reset cash
displays a question
displays a feedback dialog
switches to the display mode
adds components to the components panel
adds questions to the panel
switches to the bonus who made the current fight
adds a new music item to the list
sets the
sets the question
starts the thread
called when the user presses the play button
this method is called by the user to run the
called when the user selects the button
sets the component
returns the component
returns true if the file is accepted by this filter
returns true if the given file is accepted by this filter
returns the public timeline for the current channel
gets the friends timeline
gets the timeline
get the
load the theme
retrieves the direct messages
returns the message for the connection
the status of a
create a favorite
close the keyboard
this method is used to create the credentials
returns the status rate
returns the request url
post a request to the server
post a request to the url
executes the given query
returns a new uri
prune old records from the database
load timeline from the database
load the timeline
returns a new uri for the given type
prune old records from database
returns the number of new
returns the credentials used to encode the credentials
returns the number of replies in the current
returns the last id of the last
destroys the status of the current database
parse the given code
returns the for the given time
returns the current date
load the theme
sets the title of the view
update the title of the window
returns the saved text of the edit part
sets the saved text
notify the ui that the ui is a local
returns true if the component has hardware keyboard
binds the service to the service
disconnect from the service
destroys the service
notify the listener that the server has changed
called by the client when the loading button is clicked
this method is called when the user modifies the value
called when the user has changed its remote
returns the current clipping area
sets the border for the border
sets the border of the border
creates a new code graphics code object that is
returns the page with the specified page id
returns the shape of the shape
initializes the page
returns the font for the given font type and font and font
initializes the page
sets the image name
adds a new to the outline
initialize the
sets the author of the feed
sets the creator of the
returns the graphics context for this
returns true if the given type is equal to the given type
sets the title
initializes the output stream
this method is called by the code code method to
creates a new graphics object
returns the page dimension of the current page
returns the pdf document
disposes of the operating system resources associated with
clears the current rect
sets the keywords
draws the specified rectangle
add a new note to the
fills the specified rectangle
add a link to the
fills the specified rectangular area with the specified
draws a rectangle rounded to the specified rectangle
adds a new outline to the outline
adds a page to the page
draws an oval
adds an outline to the outline
fills an oval with the specified rectangular area
add to the
draws the polygon
draws the polyline
fills the polygon with the specified polygon
draws the specified image using the specified image
draws the specified image using the graphics object
draws the specified image using the specified image
draw the image with the specified image
draw the image with the specified image
draws the specified image in the image
intersects the current clip with the specified rectangle
sets the clipping rectangle
sets the clipping rectangle
a polygon
returns the clipped bounds
sets the color of the
returns the font metrics for the specified font
returns the font for the font
sets the font
draw a string using the current color
this method is called by the
this method is called by the
copies the specified rectangular area of the receiver
draws a line using the current color between the points
translate the image by a given coordinates
draws the arc
sets the y coordinate of the
the
sets the y coordinate of the
the
sets the line width
this method is called to create the polygon
the
the
sets the x1 y1 x2 y2 to the specified coordinates
sets the y coordinate of the
sets the x1 y1 x2 y2 to the specified coordinates
sets the y coordinate of the
returns the x y coordinate of the specified location
calculates the y coordinate of the given x y coordinate
returns the for the given
the
calculates the y coordinate of the given location
open the database
creates a new book
deletes a book with the given id
returns a cursor over the list of all books in the database
return a cursor positioned at the that matches the given row
update book in database
open the database
creates a new page
deletes book with the given id
deletes the page with the given row id
return a cursor positioned in the database table for the book in
return a cursor positioned at the favorite that matches the given row
updates the page details
updates the page using the details provided
this method initializes s shell
this method initializes browser contents
this method initializes j list sites
this method initializes j list articles
this method initializes j text area contents
this method initializes j content pane
configures the shell
empty cache for the cache
compute the probability of the transition
returns true if the move is moving
update the parameters of the given model
this method is called when the is broken
returns true if the given object is the same as the object
normalizes this algorithm
sets the count of the given key
increment count of key
increments the count of the given collection of elements
returns the total number of entries in the cache
returns a string representation of the given integer
returns the total size of the list
adds a new element to the list
returns a string representation of the priority
returns the capacity of the given type
provides serialization support
returns true if this timer has reached the interval
returns the capacity of the given type
provides serialization support
the of the
returns the output file
returns the output of the output
returns a string representation of the soft
parse the alignments of the given string
parse the alignments
speaks the given text
connect to the socket
sets the flag indicating whether or not the block is blocking
speaks the given text
sets the pitch carbon time
returns the engine name
sets the text
sets the request type
gets the value of the request type property
sets the priority of the
gets the value of the priority property
binds the server socket to a port
stops the daemon
returns the message that is currently displayed in the message
sends a command to the server
returns the previous status of the current status
returns the ip address of the
returns the port where the port is connected to
returns the number of port
returns true if the socket is ready to be redirected
sets the user name
reads the echo line from the socket
open the connection to the server
inits the streams
sets the transfer mode
close the connection
sets the host
sets the local file name
returns true if the passive mode is passive
sets the port number
sets the passive mode
sets the password
sets the current state of the
this method is called when the server is ready to be active
opens the connection to the server
open a connection to the server
returns the number of arguments in the given string
closes the connection to the server
sends a command to the server
returns the port where the port is connected to
searches for the commands in the input stream
tests if the cmd cmd is beginning
close the connection
returns the input file
closes the connection to the server
sends a file to the server
send passive passive file to the server
show echo
checks if the given string is valid
shows the version of the application
listens for property change events
load the list of servers
saves the list of
returns the server at the specified index
returns the index of the server at the specified index
returns the number of server servers
adds a server to the list of server servers
removes a server from the server
removes the specified server from the server
refresh the data in the database
removes all the servers from the server
returns a string representation of this object
returns true if the needs to be saved
resets the data model to the database
changes the property change listener
adds a connection listener
removes a connection listener
resets the authentication context to the default value
sets the add attribute
returns true if the connection is established
save the list of
returns the local path to the database
adds the master pair pair to the master
returns the current display of the given master
returns the ip address of the address
this method gets called when a bound property is changed
returns the master server
sets the master server
returns the full name of the object
sets the authentication strategy
process the list process list
returns the process list model
this method is called when the query list is available
returns the variable list of the table model
sets the visibility of the dialog
returns true if the input is hidden
sets the expanded state of this property
sets the container
returns true if the root item is visible
sets the split split
sets the root item visible
sets the split vertical
returns the selected item
returns the selected item
returns the maximize maximize property
sets the maximize maximize value
sets the value of the property
returns the key press combo
sets the key press
sets the icon for the favorite icon
sets the user action listener
adds a global action listener to the list of listeners
removes an action listener from the list of global listeners
sets the selected date
sets the current index of the current element
returns the scroll type
sets the scroll type
returns the layout of the property
sets the layout of the component
sets the title
saves the given file to the file system
saves the given file to the file
sets the text
returns the file info object for this file
sets the icon
returns the frame that is being used to construct the
sets the buttons
returns the component
shows the dialog
returns true if the edit allowed
returns the current button to show the current state of the dialog
closes the dialog
returns the current focus
returns the limit of the current object
this method is used to set the limit of the page
adds an action listener to the action listener
returns true if the resize allowed
sets the resize resize flag
returns true if the node is allowed to be used
sets the file map
sets the value of the code position allowed code property
sets the modality of the dialog
returns the wait for windows
sets the visibility of the window
sets the checked state of the radio button
sets the user object of the property
returns the object id of the object
execute the given uri
returns the code grid box code of the code code
sets the visibility of the component
sets the name of the component
sets the width of the component
sets the horizontal alignment of the component
sets the display format
sets the sort comparator
returns the text of the text
sets the text
returns true if the tree is selected
sets the value of the root item visible property
returns true if the header is visible
sets the value of visible header
returns true if the gui is visible
sets whether the gui is visible
returns true if the full row check box is enabled
gets the sort allowed value for this
sets the sort allowed
returns the selected row
returns the current selected row
returns the frame that is currently being used to display
sets the current index of the current element
saves the current file to the specified file
sets the label for the label
returns the file info object for this file
sets the component
sets the limit of the range
returns the object id of the given object
returns the grid grid
sets the grid box
returns the text of the current view
sets the checked state of the radio button
sets the column index
returns the parent of this code grid code
returns the index of the current row
sets the child grid
returns the comparator used for sorting the sort
removes an action listener
fires an action
sets the selected state
sets the sort comparator
returns the image
sets the image
returns a string representation of the image
sets the component
adds an action listener to the listener
sets whether the gui is visible
sets the checked state of the radio button
returns the confirm button
returns true if the selected object is selected
sets the grid component
sets the child grid
sets the visibility of the component
sets the display name of the display
fires an action to the given action
sets the sort comparator
returns the checked value
fires an action
returns true if the tree is selected
returns the display name
sets the selected state
sets the group
fires an action
returns the selected row
sets the current index
sets the component
sets the checked state of the radio button
returns true if the selected object is selected
sets the child grid
fires an action to the given action
sets the horizontal alignment of the component
sets the sort comparator
fires an action
returns a sorted list of all rows that contains the
returns the file info object for this file
sets the visibility of the window
adds a new folder to the tree
adds a button to the button
sets the right component of the right component
returns the field with the given name
registers a new component
returns the type of the given class
finds the next match in the list
the file chooser to the user
returns the square at the specified coordinates
returns the distance between this square and another square
checks if the given race is friend
checks if the given race is neutral
checks if the given race is enemy
checks if the player is a status race
checks if the given race is not a
returns true if the given race is the same as the same
sets the race of the race
sets the of the race
test create session
test the interpreter
test the login session
tests the get element method
tests connect disconnect connect method of the
releases the database by the current transaction
commits the current transaction
rolls back the current transaction
closes the database
sets the autocommit flag
returns true if the request is still available
returns the result of the test
returns true if the result is available
wait for a to be returned
prints a message to the console
accept the visitor
logs an error message
sets the value of the object
returns the value of the given type
simplifies the expression
logs an error message
returns the value of the given type
sets the value of the object
returns the value of the attribute
this method is used to get the value of the parameter
sets the value attribute of the object
returns true if the given parameter is a
returns the simplified simplified simplified simplified version of the type
sets the
gets the value of the property
returns the value of the attribute
this method is used to get the value of the parameter
sets the value of the object
returns the value of the given type
returns the simplified simplified simplified simplified simplified version of the given type
returns the simplified simplified simplified simplified simplified version of the type
creates a new database definition
sets the value of the object
this method is used to convert the given code type code into
returns the value of the given type
sets the value of the object
returns the value of the given type
p this method is used to convert the given code type code
this method is called by the factory when the scope is
this method is called by the digester to remove the scope
returns the value of the given type
returns the simplified simplified simplified simplified simplified version of the type
sets the value of the object
returns the value of the given type
sets the value of the object
sets the value of the object
simplifies the expression
sets the value of the object
accept the visitor
returns the value of the given node
process the given node
this method translates the
returns the value of the given type

this method is used to convert the given code type code into
simplified version of insert type
simplified method for
this method is invoked by the code java
returns the value of the attribute
get the value of the parameter

sets the value of the object
returns the value of the given node
simplified method for
initializes the transaction
initializes the query
creates a new database definition
creates a snapshot of the current snapshot
update the current snapshot
returns the reservation
creates a new table
returns a drop statement for the given table
creates a new
returns the value of the given type
adds a reservation to the reservation
adds a reservation to the reservation
this method is called when the commit
this method is called when the current transaction is made
returns the used reservation for the given column
returns the value of the given type
returns a reservation for the specified column
read the from the server
checks if the given table is reservation reservation

returns a string representation of this object
rollback the
this method is called when a new update is made
update trx registrations
checks if the given table is reservation reservation
returns a string representation of this object
checks if the given table is valid
returns a string representation of this object
update the status of the
update the status of the
check reservation for the given table
checks if the given table is reservation
check reservation for the given table
returns a string representation of this object
checks if the given number of matches a given
add an object to the
checks whether the given number of conditions are allowed
commit the
returns a string representation of this object
this method is called when a new transaction has been changed
returns true if the user is logged in
process the given application
render the model
create a new server process
returns a string representation of the ip address
creates a session for the given user
initializes the given command
adds a parameter to the list of parameters
adds a parameter to the list of parameters
configures the configuration
reads a mapping from the classpath
returns the parameters of the given class
reads the mappings from the given input stream
adds a mapping of arguments to the table
process a mapping
returns the text of the element
get a hashtable of parameters
starts the
returns the session id
stops the manager
returns the timestamp of the last modification
executes the given command and returns the result
adds a listener to the group
returns the view of the current group
returns the address of the address
returns a list of all the
leaves the group
sends a message to the server
this method is called when a new message is received
this method is called when the is
called when a view is accepted by the user
returns a list of group
normalizes the given
returns the residue
gets the residue
tests the constructor
test that the equals method of the super class is required
test the constructor
tests the equals method
test normalization of residue
tests the extraction of the of the
tests the fetching of multiple
tests the of the
tests the of the
tests that the of a word boundaries are
tests the optional
tests that the correct class name method
tests the text of a mutation function with a new
tests the of the
returns true if the range is reading
returns the pose
calculate the weight of the given range
returns the reading from the specified range
returns the number of particles
returns the range of the given element
returns the range of the given angle in the range
returns the angle between the given value
checks if the current is incomplete
returns the number of readings in the data
sets the range of the range
this method marshalls the given data as a
load data from data from the data store
returns the at the specified position
this method is called by the client to update the data in
calculate the weights of the given
applies the given move to the current state
returns the angle of the current
returns the estimated pose for this plane
this method is called when the robot is moved
resets the to the minimum size
returns the rectangle that is currently visible
sets the speed of the robot
returns the maximum weight of the
returns the border of the border
sets the speed of the crane
tests if the given point is inside the rectangle
returns the bounding rectangle of the bounding sphere
dump the contents of the map into a map
sets the sigma standard deviation
loads the given data from the given input stream
sets the distance noise factor
sets the angle noise factor for the
sets the maximum number of iterations to be used
finds the closest location in the given coordinates
checks validity of the given pose
the for the given
load the particles
dumps the data in the given input stream
move the crane to the next position
load the specified data from the input stream
this method is used to convert the given into a
moves the camera to the current position
rotates the given angle by 90 degrees
returns the distance distance between this
returns the angle
gets the value of the movement type property
returns the arc radius
rotates the robot
sends a packet to the server
returns the input stream for this input stream
receive a packet from the buffer
receive a message from the packet
returns the output stream that is used to write the output
returns true if this packet is available
resets the packet to the last state
returns true if the ack is available
closes the connection
opens a new byte
sets the listen grammar option
is this a ack available
closes the current session
returns the error handler
returns the number of bytes that can be read from the current
receive a packet from the buffer
returns true if the packet is available
stops the
returns the data for the given register
sends a register to the server
sends a byte data to the server
returns the string representation of the specified
sets the address of the address
the arc
resets the
sets the radius and radius of the arc
the arc arc
this method is called when the robot wants to travel
sets the angle of the cone
sets the minimum angle of the
sets the maximum angle of the cone
sets the angle to the min angle
sets the angle to the maximum angle
go to the middle angle of the middle of the axis
sets the angle to the angle of the current rotation
move the robot to the specified distance
forward to the current one
sets the angle to the current direction
adds a servo to the servo
adds a servo at the given location
returns the servo at the specified index
sets the at the given location
sets the and the speed
returns the at the specified index
this method will be called by the server to send a
unload all
sets the sensor module
returns the distance to the current state
this method is called when the server wants to send a
returns the number of objects in the current
sorts the specified type by its name
the
send a command to the server
sets the tracking mode
returns the color of the specified object
send a command to the server
returns the rectangle in the specified id
returns the
sends a command to the server
returns the
returns the data
returns the data
returns the module
returns the number of curve points in this curve
sets the curve of the curve
returns the minimum distance between the
sets the value
sets the pulse
returns the distance between the and the
sets the angle between the current and the specified angle
sets the value
sets the speed of the
returns the maximum number of
updates the data
sets the value
sets the motor
returns the maximum number of in the
returns the channel
returns the motor
sets the value
returns the index of the specified element in the list
returns the buttons
sets the value at the specified index
returns the index of the specified element in the list
sets the index of the given value to the specified index
turns the radius of the given angle into the
returns the mode of the current mode
returns the of the given index
returns the mode of the given
sets the at the specified index
set the channel channel
sets the channel of the channel
returns the of the given index
sets the channel to be used for the channel
this method is called when the channel is connected
sets the at the specified index
the of the wiimote
sets the speed of the simulation
returns the cartesian y coordinate of the current
returns the direction of the current
returns the value of the specified sensor id
returns the for the given location
this method is called when calibration is started
get the battery byte
the channel
sends a command to the server
the method code sleep code calls the method
returns true if the player is moving
creates a new object
this method is called when the player presses the end of a
sets the mode to be used for the
sets the delay in milliseconds between the
returns the steering value
sets the mode to the current mode
returns the average of the average data
load the
returns the of the current
sets the pulse value
returns the of the
returns the of the current
returns the value of the code byte code
returns the sensor status of the sensor at the specified index
this method is called by the
forward the command to the
returns the of the inclination
this method is called when the is done
stops the
sets the speed of the motor servo
returns the speed of the packet
sets the port
returns the number of
returns the at the specified index
returns the voltage value
returns the voltage value of the adc
returns the value of the light
returns the current value of the code light value code
sets the
sets the power of the
sets the verify flag
returns the block
sends a request to the server
resets the motor block block to the beginning of the motor
start program
stops the program
connects to the specified
get the current program name
paints the component
paint the particles
draw the map
draw pose
open a file
returns the line that is the line to the given pose
find the closest location to the given x y location
get the of the particles
sends a command to the server
close the stream
mouse listener method for dragging on mouse
closes the file
this method is called by the
this method is used to close the given file
clears the graphics context
connect to the server
prints a message to the console
delete a file
connect to the server
connect to the given mode
connect to a given host and the protocol
connect to the server
get the battery level for the battery
close the current
close the connection
writes the specified byte array to this output stream
this method is called when the user selects a new
close the serial port
log the given throwable
this method is called by the digester listener when the
write a byte to the stream
checks if the given point is in the range of the given
returns the length of the current line
get the
returns the friendly name of the device
sets the friendly name of the device
returns the local address to which the socket is connected
returns the number of in the specified port number
send a byte data to a server
send a message to the server
plays a tone in the current playlist
stops playback of the sound playback
reset motor and reset the motor
returns the firmware version of the firmware
delete user flash
reads the from the given
clears the
adds a new segment to the end of the polyline

returns the current pose
invoked when the user selects a button
resets the state of the iterator
runs the thread
release the resources
executes the command
returns true if the current thread is running
sets the motor speed
execute the task
called when the listener has changed
called when the listener has changed
called when the listener has changed
this method is called when the user wants to update the
returns the address information for this address
returns the extra information for the given mimetype
returns the qualified coordinates of the
returns the azimuth of the specified coordinate
checks if the current user is valid
sets the course
sets the speed of the game
returns the horizontal accuracy of the horizontal axis
returns the discovery agent
returns the friendly name of the device
sets the friendly name of the device
returns true if the user has authenticated authentication
returns the device class
sets the
returns the
returns the local address of the remote device
returns the service classes
compares this remote device with another one
returns the major device class
cancels the device inquiry
updates the movement of the movement
returns the projection
returns the
returns the estimated pose in the current pose
returns an input stream for reading the contents of the input stream
returns an output stream for the current
returns the input stream to read data from the input stream
returns the data output stream
closes the stream
opens the stream
returns the strength of the signal strength
resets the sequence to its initial state
returns the data for the given byte array
sends a data packet to the server
sends a data packet to the server
returns the string at the given offset
sets the address of the address
returns the port of the server
stops the timer
sets the type and mode type
sets the type of the type
sets the mode
reads a boolean value from the input stream
reads the value of the input parameter as a string
reads the value of the current value
returns the name of the device
returns the nxt command
returns the busy busy status of the
returns the bluetooth address of the device
returns the amount of memory in the
enable disable the
returns firmware version of firmware
returns the version of the protocol
delete the flash memory
deletes a file
this method is used to start program
stops the program
returns the current program name
sends a message to the server
plays a tone in the nxt
plays a sound file
plays a sound file
stops the sound playback
closes the current session
download a file
sets the sentence sentence
check if the sentence is valid
parse the sentence
returns the speed of the game
returns the time in milliseconds
returns the date of the task
returns the in the view
returns the tracked tracked
returns the compass position of the rocket
returns satellite object at the specified index
returns the fix quality
returns the compass degrees
returns the date of the
returns the tracked tracked
returns the longitude direction
returns the current course
returns the altitude of this
returns the course speed
returns the speed of the current simulation
returns the course of the course
set the
returns the selection type
returns the sentence
returns the sentence
returns the sentence
close the connection
this method is called by the
returns the location of the location
adds a listener to the
sets the rate of the
returns the rate
select the index
notify listeners that a key was pressed
resets the timeout of the timeout
returns true if the lock is locked
sets the modifier of the given code
sets the number of lines in the
sets the delay
sets the delay between the
this method is called by the thread to handle the
this method is called by the thread to handle the message
returns the source of the current user
adds a handler to the list of handlers
removes a handler from the list of handlers
returns true if the given event handler is handled by the handler
create an instance of
binds a to the current session
returns the maximum priority of the
method to remove a
notify the listeners that the event has been processed
returns the minimum priority of the current thread
returns the of the priority of this
sets the of the given
sets the of the given group
this method is used to get the length of the arrival time
sets the deadline of this object
sets the arrival time queue overflow behavior
this method is used to reduce the value of the given
sets the initial arrival time for this test
adds the given schedulable to the list of all the
removes the given schedulable from the list of schedulable objects
this method is invoked to the event thread
sets the priority of the message
this method is invoked to the event thread
returns true if the operation is
returns the period of the current task
returns the start time of the object
sets the deadline of this object
this method is used to reduce the cycle for the given time
sets the relative time of this object
sets the start time
this method is used to reduce the deadline value
returns the number of time to which the high
gets the value of the minimum property
compares this object with the specified object for order
sets the minimum time to be used for the
returns true if the object is equal to this
writes the close buffer to the buffer
accept the socket and waits for a new
returns the input stream of the data input stream
returns the hash code of this code code
returns the output stream to write to the output stream
returns the output stream
returns the input stream for this input stream
close the connection
sets the value of the specified time
sets the time of this time
returns the bounding rectangle of the current
returns true if the rectangle contains the specified rectangle
returns whether or not the given rectangle is visible
compares this rectangle to the specified object
returns the bounds of the rectangle
returns the bounds of the rectangle
returns the distance between the two points in the given square
returns the distance between the point and the given point
returns the distance between the two points
checks if the point is within the boundary of the map
returns the millis of the millis of the specified date
pushes the object onto the stack
tests if the interior of the code rectangle code intersects the
checks if the line contains a line of the given line
returns true if there are more tokens
returns the next element in the iteration
returns true if the next element is a valid
returns the next pseudorandom gaussian
returns an enumeration of the elements in this list
returns the bounds of the rectangle
print a string
prints a string to the output stream
print a string and then terminate the line
executes the
returns the length of the file
closes the underlying input stream
closes the current directory and the file
creates a new string with the specified char array
creates a new string with the specified array
creates a new string with the specified array
creates a new string with the specified charset
creates a new string with the specified byte array
returns the index within the character of the specified character
returns the id of the
returns the index of the last occurrence of the specified string
append a string to the buffer
returns the index within this string of the last occurrence of the
append a string to the internal buffer
returns the hash code for this object
run command line
sets the value of val
sets the maximum value of the gauge
sets the data of the
sets the raw value of the value of the raw val
sets the raw value of the gauge
returns the number of rows in the model
sets the scaled value for the scaled value
sets the scaled maximum value for the gauge
returns the value at the specified row and column
sets the type of the label
deletes a file
returns the number of rows in the model
closes the connection
this method is called by the applet
returns the value at the specified column
sets the value at the specified column
returns true if the cell at row and column is editable
get the files in the list
returns the file at the specified index
invoked when the target of the listener has changed its state
returns the number of files in the file
this method is called by the director
verifies the of the
this method is invoked to send a server socket to the server
this method is used to run the next command
this method is called by the server to send the next command
start the parser
creates the tabbed pane
creates the console tab
creates the tabs and tabs
creates the panel
creates the panel
creates the table
returns the number of selected
returns true if the is selected
returns true if the motor is selected
get the file name for a file
show a message
update the sensors
clears the files
called when the jlist selection changes
updates the status of the given row and the current status of
updates the connectable button
returns the current protocols
returns the protocol specific application protocol
stops the nxt
get the sensor values for the current sensor
convert a byte array to a string
returns the digit of the hex code
connect to the table
append a new value to the end of the buffer
delete the files in the table
upload the file to the user
download the selected file
run the command
rename the current frame
move the given in the given position
sets the sensor sensor to the sensor
plays the tone
resets the motor of the motor
plays the sound file
this method is called when the is
this method is called when the user selects the
returns true if the given is equal to this other
compares this object with another one
returns true if the other
returns the order of the table
this method returns true if the given order and the order of
returns the string representation of the given order
adds a new object to the list
returns the order of the given name
returns a string representation of this object
returns the order of the current instance
returns the right sibling of this entry
test round trip trip
test of define order round trip method of class edu
test of ideal trip method of class
test of the trip of the
returns the ascending order
returns the root of the tree
resets the pool
returns true if the given code code is contained in the
returns a tree iterator that can be used to represent the tree
returns an iterator of the of the given
adds an array of values to the list
adds a new to the list
remove the
stops the thread
returns a string representation of this object
removes the specified
adjust the of the
returns the root object of the xmldata object
returns the root object of the data model
creates the
insert user entry into database
execute the user gateway
returns the duration in milliseconds
returns the day of the specified day
returns the concurrency for the given worker index
returns the number of default slot
returns the time for the specified day
returns the task at the specified index
returns the maximum number of tasks
returns a new schedule for this task
returns true if the given time is in the working time
returns the cost of the given number of months
returns the rate of the given time
returns the day of the specified time
returns true if the work is
prepares the schedule for the given slot
returns the local time of the given time
sets the worker filter
returns the start of the time interval
returns the minimum time in seconds
sets the minimum time unit for the unit
returns the datetime value for the given time
returns the time between the specified time and the specified time
returns the interval between the time and the specified time
returns the value of the specified interval
returns the slot of the unit in the given unit
returns the unit factor for the unit in units
returns the next unit in the unit of the given unit
returns the next unit in the given unit
adds a task to the list of
returns true if the given time value is in the given time
checks if the time is valid
fills the task with a task and task
creates a new schedule for the given slot
adds a job to the list of failed jobs
returns the maximum duration for the given category
returns the weight of the given category
returns the maximum finish schedule for the given number of finish tasks
returns the finish job
returns the finish entry
returns the total cost for the given schedule
returns the total finish of the job
returns the initial capacity of the given worker slot
returns the index of the slot in the slot
gets the value attribute of the object
sets the parser filter
returns true if the is
returns true if the task is allowed to be satisfied
returns the start time of the specified slot
returns the duration of the task
adds a new work to the
sets the job
sets the tasks task collection to be used for the task
checks if the given worker is legal
returns the duration of the given worker
returns true if the given skill is matched by this skill
returns the value for the given option
sets the parser filter
returns the type of the fuzzy number
creates a fuzzy fuzzy value and a fuzzy fuzzy fuzzy
returns the fuzzy fuzzy number
returns the support for this object
returns a new instance with the specified number
divides this value by the specified number of
make a matrix
returns the value of the specified integer as a int value
returns the number of the specified number
returns the value of the specified integer as a long
returns the number of the specified number
returns the square vector of the magnitude of the vector
returns the delegate
returns the minimum value of the min
returns the maximum number of
checks if operand operator is allowed
sets the convergence info
returns the information
sets the initial estimate of the current estimate
checks if the argument is valid for this operand
returns the default estimate of the specified size
checks the function argument function
returns the default estimate of the default
creates a complex number
create an instance of
create an instance of
create an instance of
returns the previous cache size
compares this object with the specified object for order
divides this value by the specified number
returns a copy of this with a number
initializes the rows of the given array of rows
checks whether the given table is legal
returns the matrix of the
initializes the cols for the given columns
creates a new matrix
creates a vector of vectors
creates a new vector of elements
removes the from the map
returns the width of the column
converts a matrix to a
writes the vector of
writes the current vector of the current state
writes the specified value to the write number
returns true if the given vector contains zero
convert a double to a double value
initializes the matrix with the given elements
calculate the value of the given number
returns a new function for the test suite
fills the specified vector with the same vector
returns a deep copy of the receiver
returns the number of the
returns the length of the main frame
sets the
multiplies this product by the specified number of
returns a vector with the given column
returns a vector of product factor
returns the row at the specified row
returns an array product of this product
sets the degree of the polynomial
sets the a
remove the extreme
sets the degree of the polynomial
sets the
converts a given range into a range of atoms
sum the sum of the elements of the vector
this method provides a probability of the probability of the probability density
creates a new code code object for the specified value
sets the iteration count
calculates the number of iteration
calculate the
iterate over all of the elements in the table
calculate the of the given x
checks if the value is a integer value
calculates the of two numbers
returns the value of the specified integer
calculate the for the given value
sets the real real representation
creates a new partial function
iterate over all of the elements in the table
sets the mixed
returns the number of derivative of the function
returns the x y value of the given x y coordinate
sets the value of function
returns the number of arguments
calculates the of the given number of values
calculates the derivative of the given step
sets the step values
iterate over all of the elements in the table
sets the step
sets the value step
creates a new vector of elements
sets the m calc square matrix
sets the cache function values
returns a vector containing all elements of the matrix
returns the determinant
creates a function function from a given formula
creates a multi valued function with a chrom number of
calculates the vector of arguments
calculate the of the matrix
initializes the function
sets the argument count
sets the value of the argument count
processes the element in the given element
sets the elements of the list
calculate the calculation of the arguments
returns a vector containing all the elements of the given matrix
returns the number of arguments in the list
sets the variable base
sets the number of argument
returns a string representation of the object
sets the list of names
sets the set of names of the
sets the
sets the argument names
sets the number of arguments
returns the index of the first occurrence of the specified argument
creates a new matrix with the same values as the
returns the index of the specified element in the current index
returns a string representation of the object
this method is called when the has changed
sets the value of the code interpolation code property
sets the
sets the
returns the constant value of this parameter
returns true if the parameter is constant
sets the function
sets the function
sets the operator
returns the string representation of the operator
checks if operand is a operand
creates a copy of the current context
removes all bracket pairs from this tree
returns the product of this matrix and all of the values
returns true if the panel contains a bracket
sets the algorithm used to draw the algorithm
returns true if the bracket is contained in the bracket
calculates the dimension of the given dimension
sets the text of the text
adds a bracket bracket to the end of bracket bracket
returns true if the root of the given root is already open
returns true if the root of the given root is closed
adds a child to the list of children
all in the given value
update the table row table
shifts the current value of the current element
update table row height
shifts all the children in the given value
returns the height of the table row
sets the value of the y property
returns the height of the specified child
sets the inverse of this matrix
convert the value to a number
returns a new complex number that is the complex number
returns the minimum height of the image
sets the number minus 1
returns the hash code for this function
adds a variable to the list of variables
removes a variable from the list of variables
adds a formula to the current formula
removes a given formula from the model
calculates the real size of the root
discards the current result
returns the derivative of the formula
adds a variable to the list of variables
removes a variable from the list of variables
returns the square value of the square of the square
sets the formula
discard all the variables in the current scope
returns the derivative of the variable
returns the of the given variable
returns the
calculate the second second second
returns the second derivative of the variable with the given second variable
sets the name of the variable
sets the formula
discards the result of the test
returns the derivative as a string
returns sum of all of the elements of the matrix
returns the second derivative of the second argument as a string
returns the derivative of the tree
returns the second derivative of the second tree
returns the as a
returns the second derivative of the second second derivative of second
returns the
returns the second derivative of the second
sets the function of the
this method is called by the code code
checks if the given string is a
sets the root of the tree
sets the var name
discards the result of the test
returns the root of the tree
process the next token in the current process
returns true if the argument is a variable
process the argument of the argument
process a function
creates a new function
process a operator
checks if the value is greater than the given value
processes the operator
processes the argument operator
returns a vector containing all the
creates an instance of the specified argument
draw the given draw

draw the division of the area
returns a new parameter
returns true if the matrix is symmetric
creates an operator and returns an argument
returns the matrix of the matrix
sets the flag that controls whether or not the is
returns the matrix of
sets the value of the argument
draws the bracket with the specified style
sets the elements
returns the elements of this element
draw a root line
creates a list of
sets the formula
sets the list of elements in the list
sets the maximum iteration factor
sets the check granularity
returns the context with the specified name
returns the value of the attribute
adds a term to the
returns the context with root root
called when the formula is changed
returns the number of elements in the given element
negate the plus condition operator
returns the graphics object for the specified graphics object
update the factor map
returns the current mode
returns a new instance of the
returns true if the given code code is in the
calc the multiplication number
sets the spectrum bound method
returns the maximum of the iteration
gets the spectrum bound method
compares this object with the specified object for order
updates the map of the given map
sets the value of var value
adds a new value to the end of this list
returns a new instance with the specified number
returns the number of elements in the array
divides this value by the specified number of
returns the number
returns the inverse of this inverse
adds a list of variables to the list of variables
returns the new term
calculates the fuzzy number of fuzzy fuzzy fuzzy fuzzy
calculates the combinations of the given combination
creates a new instance of term object
sets the value of the new value
calculates the fuzzy number of fuzzy fuzzy fuzzy fuzzy fuzzy fuzzy
calculates the combinations of the given function
sets the given code code
removes the variables from the given list of variables
removes all the variables from the current state
adds a new
removes the variable from the list of variables
sets the order of the order
calculates the error for the given error
sets the write relative error
returns the value of the term
sets the function
discards the current result
calculate the interpolated value for the given values
returns the default
returns the sum of the variance of the specified value
returns the for the given
writes the to the
returns true if the direction is forward
sets the right part of the
calculates the right part of the vector
sets the cache part
calculates the derivative of the function
returns the applied to the
sets the interval between the and the specified interval
sets the function
sets the position of the current position
returns the
calculates the derivative of this matrix
returns the exact value of the
returns the next element in the iteration
sets the function values
sets the nodes
returns the degree of the polynomial
sets the degree of the polynomial
returns the basis of the basis of the basis of the basis
sets the basis of the basis of the basis of the basis
returns the value at the specified index
returns the solver to use for this solver
returns the grid coordinates of the grid
returns the global value at the specified index
sets the poly grid
returns the grid
sets the solver to use for the solver
calculate the basis of the basis of the basis of the basis
returns the global grid grid
initializes the solver to use the solver to solve the solver
sets the grid
creates the default grid
print the value of a function
returns the number of elements in the list
returns the number of elements in the stack
returns the point at the specified index
creates a formula with the same as the formula
sets the value of b b
returns the
initializes default solver
returns the identity matrix
returns the tolerance of the
solves the problem
returns true if the given algorithm is a valid part of the
factory method to instantiate a code code object
sets the elements of the given element
calculates the order of the order
sets whether the candidate solution should be better
returns the delta vector of the given algorithms
sets the mode
sets the problem updater
sets the method
creates a vector of size
stores the given point in the graph
returns a solution that can be used to represent a solution
sets the components components
sets the solution component
returns the default table
adds a new to the
returns true if the symbolic is a symbolic
returns the for the given
copy the given result to the result set
sets the method
solve the given measure
sets the table
creates a new code number code with the specified value
returns the default table
returns a vector containing the elements in the vector
returns the matrix of the given matrix
sets the initial values
returns the arguments
returns the for the given
returns the width of the column
sets the number of points in the polygon
calculates the delta between the given step and the step
sets the scaling of the
returns the step step step
sets the safety factor
calculates the delta between the given step and the step
returns the
calculates the delta of the algorithm
returns the step of the given algorithm
initializes the context for the given algorithm
creates a new step step step
sets the scale
sets the scale parameter
checks the scale of the base
returns the number of the given point in the current state
sets the initial solution
initializes the context for the given algorithm
sets the value of the final point only
solves the problem
stores the given point in the graph
returns the number of steps in the step
sets the step method
returns the parent
sets the number of steps in the step
returns true if the step is a step mode
sets the scale method
sets the
returns the
sets the step coefficient
stops the
returns true if the alarm is a latch
wait until the thread is waiting
sets the maximum step value
sets the minimum step value for this
sets the default steps
clears the state of the state
returns the x value of the specified row and column
checks the given problem
sets the method
returns true if the problem is checked
sets the is check
checks if s1 is less than the given number of values
sets the value of the is estimate property
checks if the given vector is
checks the given problem
interpolate bezier curve
sets the preserve problem
initialise the
compute the matrix with the given product and the matrix
calc vector of
returns the parameter
sets the update
sets the
sets the
calc the linear exponential function
returns the number of
checks the given problem
returns true if the probability is before the given time
calculates the for the given iteration
calculate the empirical distribution estimate
calculate the variance of the iteration
sets the constant parameter value
checks the given problem
returns the number of parameters
this method is called when the solver is finished
this method is called when the user chooses to a problem
calc the linear variance of the differential equations in the
sets the value of the spectrum
returns the of the given
convert the given number to a number
checks the given problem
sets the number of
returns the current transformation matrix
calculate the variance
checks the given problem
sets the spectrum method
gets the spectrum method
returns the precision
calculates the step of the given
calculates the deviation vector for the given vector
calculates the parameter value
sets the precision
sets the d
sets the maximum number of
returns the maximum of value
sets the precision
sets the minimum value of
returns the minimum value of the
sets the problem
sets the check
solves the problem
returns true if the user is checked
returns the number of points that are used for the method
returns the number of the module
check the maximum value for the module
returns the parameters for the method
calculates the of the current run
sets the parameters
returns the value of the parameter
check if the matrix is diagonal
sets the
replaces the first column of the matrix with the
replaces the first column of the matrix with the
initializes the indexes for the given indexes
change the value of the variable ordering
returns the parameter at the given index
sets the
sets the solution to the given solution
returns true if variables are not handled by this class
returns the number of times the iteration has been crossed
returns the index of the variable in the given index
returns the parameter
returns the maximum element of the specified element
replaces the first row in the matrix with the given indices
solves the system
resets the internal state of the counter
the matrix
returns the operator of the matrix
increases the counter by one
sets the
returns the parameter
sets the number of iteration
the
sets the
sets the method
sets the solution to the given value
creates a new algorithm
returns the next
returns a solver solver solver solver solver
sets the old factor
sets the initial value of the second vector of the
calculates the step of the vector
returns the next vector from the given location
calculates the factor for the median of the function
returns the method for the
checks if the given is
sets the coefficients
creates a new algorithm
sets the iteration parameter method
returns the iteration parameter
returns true if the method is a
checks the estimate of the correct function
calc vector of
sets the parameter
sets the parameter
resets the iteration to the initial state
checks if the given is valid
sets the parameter
returns the parameter
sets the parameter
sets the parameter
sets the parameter
returns vector of vector vector
sets the problem
returns the initial parameter value
returns the next value in the array
returns the problem function
returns the function
calculates the step of the function
calculates the of the given vector
sets the policy method for this policy
returns the policy method for the method
sets the
calculates the vector of vector
returns the diagonal of the specified index
returns the matrix of the current
sets the matrix
sets the initial solution
returns the number of elements in this map
calculates the system vector of the given vector
returns the number of dimensions in the diagonal
checks the tangent function
sets the
sets the multi vector function
sets the multi matrix function
checks if the current state is possible to be done
returns the changed state
returns the element at the specified position in the list
returns the number of elements in the grid
calculates the median of the vector
returns the value of the specified cell
returns the number of elements in the tree
calculates the median value of the given vector
returns the grid
calculates the value of the given vector
returns the top condition of the
returns the bottom boundary condition
calculates the value for the given vector
creates a new part of the part
returns the right condition
sets the right part of the function
returns the condition factor of this function
returns the left boundary condition
sets the right part of the
returns the condition of the condition
returns the boundary condition for a given type
returns the condition condition of the condition
returns the boundary condition for the given x and y
sets the grid
sets the estimate function
returns the initial number of the multi valued tests
creates a new vector of elements
sets the nodes
sets the x value of the step
creates a problem that contains the
returns the number of grid elements in the grid
returns the solver
sets the solution
sets the step
sets the step
returns the boundary of the boundary
returns the x value of the step
sets the boundary for the
sets the y coordinate of the y axis
creates and returns a grid
returns the value of the specified dimension
sets the number of nodes in the nodes
returns the width of the given dimension
sets the boundary condition
returns the y coordinate of the current step
checks if the given code node code is within this
sets the grid
returns the x coordinate of the x coordinate of the nodes
sets the number of nodes in the tree
returns the domain of the object
sets the algorithm used to create the algorithm
returns the number of nodes in the tree
returns the number of nodes in the tree
returns the default
returns the element at the specified position
returns a vector of points in the given node
returns the number of nodes in the tree
returns the pattern that is used to create the result
returns the x value of the given x node
returns the boundary scheme for this boundary
initializes the boundary scheme for the
returns the problem
sets the grid
returns the y value of the given node
returns the pattern
sets the boundary for the boundary
returns the condition that this object represents
returns the number of nodes in the tree
sets the top level attribute of the object
sets the boundary condition
sets the value of the right boundary of the domain
sets the value of the left side of the domain
sets the boundary condition
this method is called by the
sets the list of
returns the index of the first occurrence of the specified value
calculates the score of the given alternative score
returns the score limits
creates a new score
returns the score for a given time
adds a grade to the
sets the criteria info
sets the integer value of the
add a criterion to the list of criterias
returns a new value for the specified number
returns the index of the alternative store index
sets the problem
returns the index of the alternative index
clears the groups
sets the value of to string subject
sets the scale transformer
returns the alternative order group of a judge
sets the transformer transformer for this transform
returns the problem in the problem
returns the normalized value of the specified number
sets the
returns the score for the given index
returns a solution that is used to represent the given solution
returns the current table
returns the current table of the current group
returns the group key for the given index
returns the key group key for the specified group
sorts the group list
returns true if the should be created
returns the number of groups in the group
fills the solution groups
returns a decision solution
returns true if the scale is
returns a string representation of this object
solve the solution
sets the preference for the given type
returns the number of below the given
returns a solution that is used to solve the solution
add a criterion to the criterion
parses the data in the given array
load a problem from a given source
load a from a given source
copy the genomes
compares the argument to the receiver and returns true
compares this object against the specified object
duplicates this object
compares two objects
sets the
gets the
returns the number of evaluations
sets the score
returns the score of the current score
creates a new
sets the fitness value
creates the
returns the fitness value for this chromosome
copy the of the specified genome
copy the of the specified genome
sets the global data
copy the of the specified genome
returns the global data
copy the contents of the specified genome into the
sets the custom data
copy a to a specific genome
returns the custom data
returns a duplicate of the
returns a copy of this object with the same as the same
sets the evaluator
replaces the value at the specified index
returns the evaluator that is used to evaluate the evaluator
sets the gene value at the specified x y and y coordinates
initialise the
sets the
gets the
mutate the probability of the given probability
sets the mutator
returns the mutator
returns the gene of the specified coordinates
compare this object with the specified object
sets the comparator
returns the comparator
sets the crossover type
sets the crossover type
returns the size of the data
returns the crossover
returns the crossover
compares this object with another one
sets the width of the specified dimension
compares two genomes genomes against
returns the value of the temporal
mutate this genome
initialise the
sets up the fixture for example open a network connection
test the data
test compare to
test method for
tests the mutation functionality
sets up the fixture for example open a network connection
test that duplicate duplicate is not null
returns the gene of the specified index
sets the height of the image
copies the value of the argument to the input object
returns a duplicate of the
sets the resize behaviour
sets the multiplier for the
sets the minimum value of resize
copies the value of the argument into the input
returns a duplicate of this object
this method copies the to the
returns a duplicate of this object
sets the multiplier for the
returns the
returns the resize behaviour
copies the value of the argument into the class
returns a stldata type object
sets the power of the
returns the power of the power
returns the resize behaviour of the given dimension
returns a duplicate of this object
copy the
returns a duplicate of this object
initialise the
copy the given object from the current instance
returns a duplicate of this object
evaluates the given population
evaluates the given population against the population
duplicates the population and returns the result
returns a string representation of this object
initialise the
returns the number of allocated resources
initialise the
add a new to the population
removes the first occurrence of the vector from the list
initialise the
remove a from the list of pes
replaces the genome with the specified genome
replaces the genome with the specified index
replaces the old one with another one
returns the best best matching the highest basis of the basis of
returns the best score for the given rank
returns the worst
copies the given statistics to the current population
returns a duplicate of the duplicate
sets the state of the rms
returns the worst for the given rank
swap two points in the array
returns the maximum value of the raw data
returns the minimum value of the parameter
returns the scaled maximum value of the
returns the minimum value of the scaled component
returns the of the given x y coordinates
returns the population
sets the ordering of the ordering
copy the value
returns a deep copy of the object
select the current
returns a duplicate of the selected
select the
copy the value of the specified selector into the current state
assigns the given population to this instance
sets basis of basis of the basis of the basis of the
returns the basis of the basis of the basis of the basis
copy the value
returns a duplicate of the
selects the
returns a new object of this object
returns the sorter
copy the value
returns a duplicate of the
returns a duplicate of the selected
returns the best fitness
a
returns the value type of the field
sets the value of definition
sets the value of the pay pal field code code
returns the definition
returns the previous
returns the next parameter definition
load default parameters
sets the value of the parameter
sets the value of the parameter
compares this object against the specified object
sets the value of the key
evaluates the condition
compares this parameter with another one
sets the value of the given property
evaluates the given expression
sets the value of the key
returns the parameter with the specified key
returns true if the enumeration contains more elements
returns the parameter with the given name
returns the next element in the enumeration
returns the next parameter
returns the parameter enumeration
sets the evaluator
returns an enumeration of the keys in this map
configure the connection
test the default constructor
test the file
test the resource name
sets up the fixture for example open a network connection
tests the minimal boundary of the minimal
test
test
test the method
configures the messages
sets up the fixture for example open a network connection
test constructor with default constructor
tests that a new binary constructor works
test set bit
sets the
test comparison of binary comparison
test of set bit method of class
test method for
test that a bit with a bit
tests unset bit and other
returns the value of the property
tests that a new binary object is a copy of the
tests the default config
initialise the
sets the activation function
returns the activation function
sets the connection to the given connection
returns the connection to the database
returns a connection to the connection
sets the value of the output property
returns the output of the arc
compares this object with another one
adds a layer to the layers list
sets the
returns true if the given object is equal to this one
sets the layer at the specified index
sets the layer at the specified layer index
returns the layer at the specified index
returns true if the data is loaded
creates a connection to a layer
sets the delimiter
returns the delimiter
writes the data to the data array
creates the connection to the given connection
returns true if the layer is connected to a layer
evaluates the given input element
copy the given object into the class
returns a duplicate of the object
train the given input
sets the value of the weight property
the weights of the
returns the weight of the weight
creates a new
generate a new
sets the from neuron
returns the from neuron
sets the to neuron
compares this network to another
returns the to neuron
finds the connection between the connection and the specified
compares the specified object with this object
compares this connection to another object
find neuron for the given neuron
sets the selection scheme
returns a string representation of the object
returns the string representation of the object
returns the selected scheme
seeds the seed with the specified seed
returns a string representation of this object
sets the size of the data
scale the current image
log the configuration
returns the bit at the specified index
sets the background scheme for the image
returns the scheme of the image scheme
copy the string value to the specified binary string
copy the specified binary data to the specified length
the
returns a string representation of the data
sets the statistics for this object
returns the statistics
compares this object against the specified object
compares this population against the specified object for equality
returns a time block for a given block
returns the number of days between the end of the days
gets the value of the property
sets the
log the given message
returns the rights for the given name
returns the summary of the rights
pings the given host and returns the result of the given
detaches the element from the database
returns true if there are more elements in this collection
returns the next element in the list
returns true if there are more objects in this iterator
returns the next element in the list
adds the given super concept to the end of the list
adds a sub concept to this concept
returns the intent size
returns the size of the extent
pop the current token from the current token
returns the number of objects in the current state
removes the subscriptions from the given subscriptions
stores the window placement in the fitnium variable
returns the dimension of the element
returns the number of attributes in the current state
restores the window placement on the given window
processes the event
puts a string into the list of the
processes events from the event queue
puts a color into the color preferences
returns true if the log is a log result
returns true if the given concept is a super concept
sets the format of the graphic
returns true if the given concept is part of the functional
sets the size of the image
initializes the
registers a type with the specified type
sets the auto mode for the
returns the type of the file with the given name
returns true if the canvas has canvas scenes
returns the type of the specified name
returns true if the current position is
returns the type of the extension
returns the position of the canvas
returns the current canvas
returns the format of the graphic
returns the position of the
returns the current position of the current position
returns the position of the canvas
returns the position of the current position
returns true if the is not enforced
sets the paint for the component
returns true if the portlet supports auto mode
sets the grid paint
returns true if the file is saved
returns the controller
returns true if the save comment is enabled
initializes the
sets whether the file should be saved to save the current file
removes the object from the database
returns true if the next character
sets whether the user wants to save the given clipboard
paints the canvas
returns the next character in the iteration
returns the next token in the iteration
returns the last export file
initialize the image
sets the last image for the user
iterates over all the drawables and then notifies all listeners
sets the force color
initialize the image
returns true if the color is set to be used in the
returns the background item
sets the current screen transform
returns the current transform
print a printable representation of the given page
show detailed error message
returns the canvas at the specified point
raises an item in the stack
returns the coordinates of the screen
save the configuration
clears the canvas
stores the given placement in the section
restore the placement of a subsection
stores a key value pair in the ini file
adds a canvas to the canvas
stores a key value pair in the ini file
returns the string value of the key
stores a list of keys in a list
returns a list of string for a specific key
adds a canvas to the canvas
removes the specified canvas from the canvas
adds a layer to the list of layers
removes a layer from the layer
checks if the layer name belongs to the layer
returns the grid cell width
returns the height of the grid cell
sets the grid cell width
sets the grid enabled
returns true if the grid is enabled
returns the closest point on the grid
returns the behavior of the given
moves the page at the specified position
returns the point that is the same as the
destroy the
builds the menubar for the menubar
check if the given id is a leaf
restore the layer
creates the toolbar
opens a knowledge base
returns true if the node is a
opens a knowledge base file
displays the export options
print the current graph
print the diagram
test the load configuration data
this method is used to load a new
this method is called when the user selects a new
returns true if the user can load a load
returns the uid
returns the icon
displays the message
returns the code code
returns true if the user can be loaded
returns the command type
sets the locale
returns the string value of the specified key
display the current state of the stack
returns the value associated with the specified key
returns the instance of the code code instance
selects the item at the specified index
returns the selected image index
frees resources used by the
returns the image by its index
load the sources of the data source
show the current frame
save the current data to the file
displays the current frame
sets the source of the source
returns the size of the list
removes the given index from the list of sources
appends a new part to the end of the buffer
appends a string to the end of the string
returns the tag of the given index
returns the tag of the specified index
returns the tag name of the tag at the specified index
sets the selected tag
sets the selected tag
returns the selected tag
returns the selected tag
returns the selected tag string
saves the database to the database
push a new midlet onto the current stack
sets the directory where the user is to be used
push a new splash
pop the current element from the stack
displays the current display
replaces the current displayable with the specified value
this method is called when the is done
display the current state of the application
displays the current frame
sets the timer for the task
returns the current directory
enter a directory
returns the instance of the instance
returns the number of records in the database
this method will be called from the
returns the name of the result
checks if the specified name exists in the database
this method will be used to navigate to the directory
delete a record from the database
returns the database database
returns the number of encryption rounds
returns the date
saves the current state of the database to the database
deletes the current group
returns the date
sets the progress bar
clean the object
creates a new
change the master key for the given
returns the username of the user
this method is called when the user selects the menu
sets the flag indicating whether or not the user should save the
returns the last directory
sets the last directory
gets the watch time out
sets the timeout for the timeout
returns true if the icon is disabled
saves the current state of the database
sets the icons disabled
sets the search by
sets the recent
returns true if the last opened file is opened
returns the number of encryption rounds
sets the encryption password
returns the string value of the key
returns the header
returns the group with the specified id
returns the group parent group for the specified id
returns the page group of the specified group
search for the number of entries in the database
called when an enumeration of the has been found
returns the entry at the specified index
returns the group by index
get the entry by index
returns the length of the group data
test the database
returns the entry data length for the given index
mark the group as deleted
deletes the group
deletes the entry at the specified index
add an entry to the cache
update the group
update the entry at the specified index
returns the unique id of the group id
resets the indicator indicator for the change indicator
watch
this method is used to protect the content of the given
lock the lock
returns true if the content is locked
returns the size of the content
returns the input stream for the input file
populate the object with the given object
changes the chart type
this method is called when the user upload the file upload
render the specified rendering
sets the selected panel
this method is called when the user changes the stack
handle the command event
starts listening for connections
stops listening for changes to the current connection
checks if the given class is a class
notify the message that the user has connected to the incoming message
reads a property from the database
adds a new line to the form
process a message
starts the application
process a binary message
called by the midlet to terminate midlet
process the action
returns an initiliazed instance of imagem component
returns an initiliazed instance of back command component
returns an initiliazed instance of exit command component
returns an initiliazed instance of form component
returns an initiliazed instance of ok command component
returns an initiliazed instance of telefone component
returns an initiliazed instance of ok imagem component
returns an initiliazed instance of mensagem component
returns an initiliazed instance of task component
returns an initiliazed instance of component
returns an initiliazed instance of ok imagem component

at startup create and show the main frame of the application
invoked when a mouse button has been clicked pressed
sets the name of the field
sets the frame width
sets the frame width and height of the given frame
sets the highlighted
sets the highlighted color
adds a new state to the current state
sets the size of the frame
sets the bounds of this frame
sets the size of the frame
sets the size of the frame
adds a string to the
load the images
returns a string representation of the current
checks if the position is
checks if the square at position is on the left side
copy the map of the given map to the map
returns the white turn
sets the turn
copies the given map of changes to the current map
this method is called when the is
test
validate the input
this method is used to execute the request
returns a string representation of the object
exit the application
returns the value of the cell editor
returns true if the selected item is selected
mark the text as clipped
sets the text to be displayed in the text area
sets the selected item
lookup the item with the given pattern
checks if the given string is a case insensitive


set up the fixture for example open a network connection
sleep for a time in milliseconds
compares the two arrays of the same type
cleanup the cache
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
tears down the fixture for example close a network connection
creates the dialog
create the shell
creates the text box
creates the directory text box
tests if the current workbench selection is a suitable
handles the browse button
ensures that the dialog has changed
adding the page to the wizard
process a file
this method is called when finish button is pressed in
creates a global file
creates a file control
process a file
creates a text box with the given text
creates the package control
updates the colors of the rules
changes the property change listener
sets the background color
creates the source viewer
this is a callback that will allow us
this just records the information
verify that the text is properly fired when the user selects the
returns the source viewer
handles the browse button
listens for changes in preference store
sets the flag indicating whether or not the tab should be used
sets the soft width of the tab
this method is called by the code document code to
sets the completions for the given code
returns the end of the document
finds the start of the document
sets the color attribute
this method initializes content assistant
updates the scanner with the current settings
updates the content assist content
returns the label provider for this label provider
notifies this viewers
returns the content provider
removes a previously added event from the list
adds a new code code to the list of listeners
returns the number of elements in the pool
returns the resource
kills the database
validate the database
this method is called by the application
clean up any resources associated with this object
cancels the cancel button
locks the lock at the specified index
unlocks the given lock
starts the timer
returns true if the lock is locked
returns the node at the specified index
clean the pool
sets the node
returns true if the node is cleaned up
returns a connection from the pool
this method is used to get the connection
returns the index of the last element
kills the node
closes the pool
returns the resource that is currently being used
closes all pools
this method is called when a resource is found
kills the resource
prints the given key and its state to the pool
returns true if the resource is
close the pool
get the resource
sets the nanoseconds of the current session
verify that the pool exists in the pool
removes the lease from the session
close all the open connections
returns a connection to the database
returns the lease time in seconds
clean up the
prints the given location
returns the last use time
returns true if this is a
start the pool
initializes the
resets the lease
checks if the node is
initializes the nodes
returns the state of the given location
initializes the properties
sets the dev
this method is called when the user selects a
this method is called by the server to set the message
shuts down the
sets up the mail system
sets up the log file
returns the trace of the exception
add a criterion to the list of criterias
returns the parent of this object
returns the alias of the
add a criterion to this criterion
add a order to the list of the criteria
sets the max results for the query
sets the first result of the query
returns a list of objects
returns the property name for the specified property
test constructor with null
test constructor null
test method for
test method for
test method for
test constructor with null argument
test constructor with null arguments
test constructor with null arguments
test method for
test constructor null
test method for
tests the allocation of the resource manager
test method for
test get resource null
test method for
test get resource bad name
test of get and release method of class com
test of set connection method of class org
test of get and release all resource factory method of class resource
test constructor null
test constructor string
sets the name of the resource factory
sets whether the should be allowed to be
returns the resource that is currently being addressed in the given resource
tests the constructor of the constructors
returns the name of the resource factory
returns the number of resources allocated by this resource
test constructor null class
releases resources associated with this resource
test constructor with null argument
releases all resources associated with this resource
test that the test suite is not used
tests that the add method is not supported by the
test the test suite constructor
checks if the resource is possible to be used in the
test ordering of sequences
tests that the add index method
test ordering of ordering
sets the name of the resource factory
test that the ordering of the test ordering
returns the resource factory name
creates the proxy to invoke the given method
tests that a list of works correctly
tests the constructor of the
tests the constructor of the exception message
test that a new date is rejected
test the constructor with a null constructor
test constructor object
test that the component is not
test constructor with null argument
test that the name is properly parsed
sets up the fixture for example open a network connection
test constructor with an illegal argument exception
test that the factory with null argument
test class loader class
test
test constructor
test class
tests that the negative of a table is
this method is called after the test is executed
test the action performed
test default constructor for a default constructor
test that the table row with a zero
tests that the negative row span spans a
tests that the components dimensions dimensions
runs the thread on the thread thread
sets the ui thread to the
test the join condition
test the method for the upper case
tests that the components expander of the component is not resizable
test constructor with null arguments
test the distribution of the upper case
tests that the illegal layout algorithm can be used to ensure that
tests the functionality of the split at the first time
tests the length of the document with the same length as the
tests the constructor of empty
tests the length of the document
test the make constraints for a
test that the code length code works as expected
test the method for the split line
test that verifies that the document is limited to the correct length
test the split separator
test that constraints are correctly created
adds a document to the document
tests the functionality of the split empty string
test of replace method of class org
returns the text of the document
test method for
test creating a proxy without passing arguments
test that a container is able to be able to build a
test creating a proxy without passing arguments
test creating a proxy null
tests the create proxy method
tests the constructor of the file constructor
this method is used to execute the given command
test that a column is
tests the functionality of the dispatch object
tests the constructor of the constructor
tests the functionality of the execute method
test constructor with null
test execute remove and remove commands
test method for
tests that the exception thrown during the
test the register command method
test find store
tests the register command method
tests the functionality of the service error
test that the containers containers null
test the constructor
tests the constructor of the exception
tests the constructor of the exception
test the service object store exception
test the equals method
test service object store service
tests the set locale null
test set resource map null
test that a component that creates a new table layout
test the constructor
tests command constructor
test set resource map
test set resource map
test of set resource manager method of class com
tests that adding null components
test method for
sets the designated parameter to the given code java
test that remove component
sets the designated parameter to the given code java
test remove null component
sets the designated parameter to the given sql code string code
retrieves the meta data for this database
sets the designated parameter to the given java
moves the cursor to the next result set
tests the remove method
sets the java
wraps the given result set
returns the generated keys
sets the designated parameter to the given code short code value
tests the remove functionality
executes the given sql statement and signals the statement to update the
updates the designated column with a code java
sets the designated parameter to the given code int code value
executes the given sql statement that renders all the given column
indicates whether this database supports subqueries
executes the given sql statement which may be insert update
executes the given sql statement that is the result of the underlying
updates the designated column with a code java
delegate method for
sets the designated parameter to the given code float code value
executes the given sql statement that will be used to execute the
sets the double value of a parameter
executes the given sql statement that is the result of the statement
updates the designated column with a code java
retrieves the result set holdability
can a single select results be returned by get multiple results
sets the value in the current column in the current transaction
updates the designated column with a code java
tests the add add remove remove method
sets the designated parameter to the given code java
delegate method for
updates the designated column with a code java
sets the bytes specified by the argument
sets the date in the receivers column
updates the designated column with a code java
sets the time in the receivers time parameter
returns the number of open statements
sets the designated parameter to the given java
sets the holdability of the result set
updates the designated column with a code java
retrieves the holdability of result set
sets the value of a parameter
creates a new code savepoint code object
creates a new unnamed savepoint
sets a binary stream to the given binary string and store it
rolls back the given code savepoint code
sets the value of a parameter
removes the given code savepoint code object from the current
sets the value of a parameter
sets the value of a parameter
sets the specified code character code to the specified
creates a code prepared statement code object for sending
delegate method for
creates a code prepared statement code object for sending
sets a parameter in the database
creates a code prepared statement code object for sending
sets the time
retrieves the minor version of this database
sets the timestamp for the specified column in the current
test that verifies that the equals method is invoked by the
returns the current
test insert a new second
make a expected expected name for the expected expected
test insert with a number
tests the default constructor
test class
test default constructor for a default constructor
sets the designated parameter to the given sql code string code
sets the resource bundle values
tests the render style method
returns the resource bundle for the specified key
test that the line color is properly rendered
tests the opaque
tests the error handling error handling
test the size of the panel
ensures that parsing errors are not handled
throw an exception if the given code is null code
this method is invoked when the method is executed
returns the current
test
action event parameter method
action method for five
delegate method for
throws an exception
returns the current
retrieves the value of the designated parameter as a code java
test of make constraints rect method of class
test that constraints are properly created
tests the default constructor
tests the constructor
sets the component
test the action
test the action
test the default constructor
test constructor with null argument
tests the correct behavior of the icon
tests the constructor
tests the constructor
tests the constructor of null argument
test the
tests the set locale null
delegate method for
returns the mock object for the given class
collects all the methods of the given method
wraps a value
handle exceptions thrown by the exception
test new text field
wraps a value
wraps a value
wraps a boolean value
sets the vertical alignment of the table
tests the functionality of the frame
sets the horizontal alignment of the table
test new menu action
tests the parent of the parent
retrieves the value of the designated column in the current row
tests the localization with parent
paints the component
returns the object associated with the specified name
sets the background color of the specified row
sets the padding
sets the margin
sets the border style
sets the border thickness
calls get jdbc type
returns the locale of the current locale
called when a task is finished
retrieves the value of a jdbc code blob code value
sets the component loader
called when a task is finished
removes a component loader listener
returns the component that is waiting to be shown
sets the default key
sets the long key
called when the locale changes
retrieves the value of a jdbc code clob code value
sets the mnemonic key
sets the name of the key to be used for the key
returns true if the specified index is expandable
returns the localized string value of the receiver
sets the short description of the action
sets the action icon for the icon
returns the small icon key
returns the localized resource bundle
returns the string representation of the input string
returns true if the given index is expandable
delegate method for
processes the border attribute
processes the given attribute
processes a padding attribute
returns the print stream for logging
returns the icon for the specified path
returns the border style for the given style
parse the given point
parse the color value
registers the given parameter as a parameter
returns the edge that is used for the edge
sets the resource bundle names
registers the given parameter as a parameter
returns a new label with the specified key
creates a new jlabel with the given name
registers the given parameter with the given type
returns true if the given role has a role
loads the component from the database
creates a new jtext field
adds a button to the toolbar
removes the specified component from the layout
adds a gap between the components
test of get method of class plsql lexer
creates a new password field
this method is called when the user selects the menu item
localize the receiver
this method is used to localize the specified controller
creates a new frame with the given name
creates a new button
creates a new button
sets the print logging logging logging to use for logging
creates a new jcheck box toggle
creates a new check box for the given name
adds the row elements to the list of elements
removes the given row elements from the list
creates a new menu
logs the given message
creates a new menu
creates a new menu item
move window to the center of the window
returns the minimum height of a row in the table
returns the size of the screen
returns the minimum width of the specified column
returns the parent of this node
checks if the given role has a role
returns the constraints for the specified component
this method is called by the controller to register the controller
removes the specified controller from this controller
returns a collection of all the controllers children
returns the minimum size of the component
returns the application instance
returns the maximum size of the component
returns the preferred size of the component
adjust the size of the header
returns the entry at the specified row and column
returns the king at the specified location
this method initializes j panel
compares this node with the specified object for order
returns the king at the specified location
this method initializes checkers content pane
this method initializes start button
this method initializes j scroll pane
this method initializes j text area
move a player to a player
checks if the given string is a valid prompt
returns the for the given id
load the
load the database
the
save the database
deletes the database
deletes a database
returns the location of the file
returns the number of files in the
returns the number of
returns the size of the
compares this object with the specified object for order
gets the body image
returns the image image
returns the radar image
returns the robot selection panel
shows the browser
packs the window and centers it to the center of the window
this method initializes back button
this method initializes cancel button
this method initializes finish button
this method initializes next button
this method initializes available robots scroll pane
this method initializes this
this method initializes dialog content pane
this method initializes table
this method initializes robot dialog content pane
this method initializes console scroll pane
this method initializes button panel
this method initializes new battle dialog content pane
gets the rules tab
this method initializes this
this method initializes paint button
returns the robot selection panel
this method initializes pause button
creates a new button
clears the button
kills the robot
paint the button with the current state of the
checks the for the check box
pause resume action
returns the package name of the team
opens the new action
this method initializes this
resizes the view panel
this method initializes main panel
this method initializes battle view panel
this method initializes content pane
this method initializes side panel
this method initializes pause button
this method initializes next turn button
this method initializes stop button
this method initializes restart button
returns the tps label
this method initializes tool bar
sets the iconified
cleans up references to the static class
removes the given static field from the given field
returns the mixer
find mixer mixer in the mixer
disposes the resources associated with this canvas
plays a sound
plays the sound at the specified robots robots specified
plays the theme music
start playing music
stops the music background
plays the end of the battle music
calculates the volume of the
returns the total score of the current score
sets the selected robots
returns the initial positions
scores the current score
compare two strings
setup the server socket
pushes the matrix onto the matrix
loads the identity of the
scales the current transform by the specified scale
rotates the around the given x coordinate
rotates the around the given y coordinate
rotates the around the given angle
returns the multiplication of this vector
creates a new round
adds a new to the
adds a new to the
sets the listener to the code graphic listener code
updates the scene
returns true if the enemy names are drawn
returns true if the fault is a fault
returns the heading of the current
returns the owner name
returns the velocity of the physics rigid body
gets the value of the victim property
sets the velocity rate
returns the velocity of the
sets the turn rate
returns the turn rate of the player
sets the turn rate
returns the turn rate of the last turn
sets the gun rotation rate
returns the current gun rotation rate
sets the robots gun rotation rate
returns the current angle in radians
sets the radar rotation rate
returns the robots heading
returns the radar rotation rate
returns the heading of the robot
sets the radar rotation rate
returns the robots gun heading
returns the radar rotation rate
returns the robots gun heading
returns the radar heading
returns the radar heading
moves the robot in the current state of the robots
returns the robots turn remaining
moves the camera to the specified distance
returns the remaining remaining turn on the current turn
gets the value of the turn remaining property
returns the radar turn of the current
returns the current turn of the gun
invokes the code code method if the code code
returns the remaining turn of the current gun
performs a single
returns the distance between the two
returns the results of the search
returns the heat of the heat
fires the event to all the listeners
sends a new to the peer
broadcasts a message to the server
sends a message to the server
returns the name of the class
returns the heading of the robot
returns the heading of the bullet
sets the colors of the robots radar
sets the colors of the bullet
turns the next turn on the board
rotates the robots robots robots robots robots robots turn
compares this event to another event
turns the current turn to the specified distance
turns the robots turn on the right side of the given
turns the robots gun to the specified robots turn
returns the version name and version name
returns the full class name
rotates the robots gun to the robots gun
returns the jar file
returns the webpage
returns the author of the author
returns the team id
moves the robot in the current state of the robots
returns true if the player is dead
turns the robots gun to the specified angle
is the robot robot robot
returns true if the wall is hit
returns the battle rules
returns the number of robots
moves the robot in the stack
turns the given degrees to the left of the turn
returns true if the replay is currently being processed
returns the turn snapshot
returns true if the job is aborted
returns the start snapshot of the snapshot
rotates the robot to the robots robots robots robots robots
returns the width of the tile in the tile
turns the robot on the specified angle
returns the height of the tile in the tile
returns the specification
returns the heading of the robot
returns the distance between the cars and the distance
returns the height of the image
returns the remaining remaining remaining
returns the width of the image
returns the remaining turn on the gun
returns the name of the peer
returns the number of radar radar
returns the x coordinate of the peer
sets the distance to the specified distance
returns the y coordinate of the peer
sets the robots turn left
sets the robots turn right turn
turns the robot on the specified turn
sets the peer
returns the score of the score
returns the of the
returns the last bonus
returns the bullet damage
returns the bullet damage bonus
rotates the robot to the robots robot
returns the damage damage
returns the bonus damage bonus
sets the bullet and returns the bullet
returns the skipped turn
sends a new to the peer
adds a new event condition to the list
this method is called by the
returns the gun gun rate
removes a custom event
returns the robots gun heading
clears all events
returns the heat of the gun
executes the strong code code strong code strong code strong strong
returns the number of rounds in the round
returns the directory where the data directory is loaded
returns the number of in this peer
returns the file data file name
returns the radar heading
returns the maximum number of quota of the current data
returns the number of peers in the round
returns the priority of the event
returns true if the gun is
returns the velocity of the velocity
returns true if the radar should be
returns true if the radar should be
sets the priority of the event
sets the maximum translational velocity
sets the current resume
sets the stop
sets the gun to turn the gun to the specified value
scans the current state of the
sets the robots gun to turn right
sets the robots gun to the robot turn
sets the radar to be used for radar
sets the radar to turn left
sets the radar to adjust the current turn
sets the robots radar radar right
waits for a condition to terminate
called when a is activated
returns the heading of the
sets the radians left angle of the given radians
sets the body color of the body
sets the robots radar to turn right by radians
sets the color of the gun
turns the given radians to the left of the current
turns the right turn by the given radians
sets the radar color
returns the robots gun facing
sets the paint enabled
sets the bullet color
returns the radar heading
sets the output stream snapshot
returns the scan arc
returns the graphics object that this graphics context is being created
sets the robots current gun to the specified value
sets the color of the background
sets the robots radar to turn right by radians
stops the
sets the radians radar to radians
resumes the current thread
sets the radar to turn right by radians when the radar is
rotates the robots gun to the specified angle
rotates the robots gun to the robots gun
turns the robots gun to the specified robots current robots
rotates the robots radar to the left radar
turns the robots radar to the robots gun
rotates the robots radar to the radar
turns the radar left by radians the radar
returns the energy of the peer
returns the graphics context for this graphics context
turns the radar to radians right by the radar
sets the property for the given property
returns the current turn of the gun
returns the estimated number of seconds the radar radar is
returns the number of seconds remaining to turn
returns the current active robots
returns true if the current thread is running
run the test
on scanned robot what to do when the robot is
this method is called by the thread
called when a scanned robot observes
draw the background color
this method is called when a robot is hit
turn the robot on the robot
called when a hit by bullet hit
called when a robot robot robot robot robot robot move
runs the game
creates a view from the specified element
invoked when an action occurs
returns the undo handler
gives notification from the document that an attribute or set of attributes
gives notification that something was inserted into the document
gives notification that something was removed from the document
this method is called by the
cleans up the
writes the specified byte array to the output stream
returns the string representation of the resource
returns a resource matching the given array of resources
extract the next valid name from the given string
parses the given catalog and returns the
returns the ontology model
generates the new registrar
returns the time of the media
sets the time offset of the media time offset
returns the current pattern
sets the current pattern
find local files
sets the activation window for the given component
initializes the view identity properties
sets the view
handle the set analysis time analysis
removes the specified component from the view
adds a component to the view
maps a x y coordinate to the given x y coordinate
returns the x coordinate of the x coordinate
returns the y coordinate of the y coordinate at the specified
sets the default close operation
packs the tree and sets the new value to the
sets the preferred size of the component
this method is called when the is destroyed
returns the shutdown flag
sets the layer
returns the layer
sets the location of the image
this method is used to set the menu bar
finalize the
this method is called when the user selects a
returns the node under the mouse event
returns the tooltip for the given mouse event
paints the component
returns true if the given node is compatible with this node
sets the updater for this
returns the size of the given node
returns the node that is currently being used for this node
returns the size of the image
sets the current state of the model
translates the given axis to a short axis
registers the internal frame to the application
shows the frame
show the window
returns the selected track area
sets the selected track area
returns the current time in milliseconds
handle the changed event
sets the annotation set annotation set to the given value
invoked when a component gains the keyboard focus
handle the change event
show the frame
start the update thread
creates a new annotation area
adds a new episode to the time episode
fires a time changed event
fires a time changed event
refresh the properties
get the track number of waypoint
adds the given object to the list of properties
this method is called when the user selects the selected object
this method is called when a node is
add a waypoint to the
adds a track to the list of tracks
compares the year of two
returns the time in milliseconds since january 1 1970 00 00 00
adds a waypoint to the list of
returns the waypoint at the given position
compares the column name and the column names
checks if the given text is a valid matcher
returns true if the current regular expression matches the pattern
returns the end of the current sequence
show the controls
updates the thread
returns the rate of the rate rates in the rate map
returns the rate of the slider rates
plays the current play rate
plays the given sound
instructs the controller to jump to the specified time
returns the default rate of the
sets the default rate
updates the frame with the current time
returns the nanoseconds of the current group
convert nanoseconds to nanoseconds
sets the media time
fires a media event
fires a media event
sets the time of the media
returns the time of the media
sets the rate of the rate
gets the value of the property
returns the start latency latency
this method is called when the user wants to stop the
stops the media
this method is called when prefetch to prefetch
returns the media time in milliseconds
returns the unique uri of the server
returns the authentication token for the given user
returns a for a given user
this method is called when a user is
check if the nonce is valid
returns the log file for the given path
returns the file name from the given request id
sets the cas login url
sets the ticket validator
sets the ldap factory
determines if the file cache is a file
this method is used to write the content of the file
returns the file name of the file that is cached for the
sets the date format
sets the xsl file
sets the xsl root context
adds a tab to the tab
release any acquired resources
render the page
print the body of the given html
parse the given string
compare this date to another object
test creating a date
tests the create creation date method
tests the create date method
returns an initiliazed instance of exit command component
returns an initiliazed instance of help command component
returns an initiliazed instance of help component
returns an initiliazed instance of string item component
returns an initiliazed instance of back command component
returns an initiliazed instance of change pin component
returns an initiliazed instance of ok command component
returns an initiliazed instance of cancel command component
returns an initiliazed instance of old pin component
returns an initiliazed instance of new component
returns an initiliazed instance of new component
returns an initiliazed instance of pin tip tip component
returns an initiliazed instance of file list property
returns an initiliazed instance of back command1 component
returns an initiliazed instance of add command component
returns an initiliazed instance of remove command component
returns an initiliazed instance of wait screen component
returns an initiliazed instance of pin changed alert component
returns an initiliazed instance of change ping command component
returns an initiliazed instance of pin form component
returns an initiliazed instance of spacer component
returns an initiliazed instance of pin form string component
returns an initiliazed instance of pin pin component
returns an initiliazed instance of ok command1 component
returns an initiliazed instance of exit command1 component
returns an initiliazed instance of hide me logo component
returns an initiliazed instance of hide me browser component
returns an initiliazed instance of back command2 component
returns an initiliazed instance of file added alert component
returns an initiliazed instance of a list component
returns an initiliazed instance of error component
returns an initiliazed instance of success component
adds a value to the internal map
returns the value for the specified key
reads the dictionary from dictionaries
opens the context
adds a new resource to the list
adds a new resource to the list
sets the current context
initializes the service
sets the of the receiver
returns the resolution information
this method is called when the root node is moved
process the event
returns a rpc client that will be used to encode the xml
execute a request
creates a new post
sets the date the time was created
deletes a post from the database
creates a post
sets the categories
post a post edit action
initializes the menu
sets the d value for this
sets the d value for this
sets the d value for this
sets the d value for this
sets the d value for this
sets the d value for this
sets the d value for this
sets the d value for this
sets the d value for this
sets the d value for this
sets the f value for this
sets the f value for this
sets the f value for this
sets the n value for this
sets the n value for this
sets the v value for this
sets the v value for this
sets the v value for this
sets the v value for this
sets the v value for this
sets the v value for this
sets the v value for this
sets the v value for this
sets the v value for this
sets the v value for this
sets the v value for this
sets the v value for this
sets the v value for this
sets the v value for this
gets the
sets the
gets the
sets the
gets the
sets the
sets the d value for this
sets the d value for this
sets the d value for this
sets the d value for this
sets the d value for this
sets the d value for this
sets the d packing value for this merchant item attributes
sets the d fec value for this merchant item attributes
sets the d value for this
sets the n value for this
sets the n value for this
sets the n value for this
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v value for this type
sets the v num value for this type
sets the v value for this merchant item attributes
sets the v value for this type
sets the v value for this type
sets the v num value for this type
sets the v value for this type
sets the v num value for this type
sets the v value for this type
sets the ins value for this
sets the v value for this
gets the
sets the
gets the
sets the
gets the
sets the
gets the
sets the
gets the
sets the
gets the
sets the
sets the classes
sets the charge
sets the
sets the charge
sets the
sets the
sets the menu
sets the destination
sets the
sets the menus
sets the
sets the principal
sets the
sets the value of the property
setter of the property tt tt
sets the component
setter of the property tt tt
sets the value of the database property
sets the
sets the
sets the type
sets the super infrastructure
sets the addresses
sets the
sets the agenda
setter of the property tt tt
sets the
setter of the property tt tt
setter of the property tt tt
sets the addresses
sets the
sets the agenda of the user
sets the
sets the value of publications
sets the
sets the super
setter of the property tt tt
setter of the property tt tt
sets the
sets the
sets the
sets the
setter of the property tt tt
sets the value of super publication
setter of the property tt tt
sets the
sets the
setter of the property tt tt
sets the value of the database property
sets the
sets the
sets the
sets the observation
setter of the property tt tt
sets the
sets the contacts
sets the
sets the numero
sets the value of publications
sets the
sets the
sets the
sets the
sets the component
sets the fin
sets the
sets the roles
setter of the property tt tt
sets the
sets the
sets the
sets the number of
sets the value of super information
sets the entreprise
sets the
sets the cycle
sets the locale
sets the locale id
setter of the property tt super tt
setter of the property tt tt
sets the number of
sets the id
sets the
sets the classes
setter of the property tt tt
sets the
sets the destination
sets the
returns the hash code for this code line code object
adds a new lexical state to the list of lexical states
returns the named code expression code
returns the value of the option as an integer
returns the value of the option as a boolean value
returns the value of the given option
check if the given option is an option
upgrade the value of the upgrade value object to the value
returns the current token
checks if s1 is case insensitive
returns the number of leaves in the
returns the choice of choice
returns the check box
returns the next generation index
returns the value of debug mode
returns the value of the debug lookahead flag
returns true if the debug flag is set
returns the status of the error reporting flag
returns true if the file is a boolean
returns true if the user defined in the
returns true if the user is a valid user
returns the value of the build parser
returns true if the is enabled
returns true if the parser uses parsing parser
returns true if the is checked
returns true if the is a boolean
returns true if the cache is
returns the token factory
returns the output directory
validate the current element
returns true if the value of the multi valued property is set
returns true if the node factory is
returns true if the parser uses the parser parser parser to use
returns true if the visitor is a valid
returns the prefix of the node
returns the visitor for this class
returns the visitor for this class
returns the type of the visitor
the
starts the timer
stops the timer
sets the value of the processed config attribute prefix
adds a listener to the list of listeners
creates the url to the database
returns a connection to the database
update the database with the given update
update the database query
executes a query and returns a result set object
sets the context scopes
sets the scope of the scope of the scope
returns a string representation of the scope
sets the oauth user url
sets the height of the page
clears the token list
generates the highscore list
sets the start of the game
moves the cursor to the next page
this method is called by the framework to perform the
focuses the focus listener
initialize the game
start the timer
starts the timer
returns the height of the spring
update the of the
update the
returns the not in the query
creates the database
initializes the panel
init the panel
initializes the map
this method is called when the new wave is
parse the image
adds a verification type to the list of the verification cases
sets the
returns the current selection
parse the uri
returns the module name
parses a template
sends a score to a given player
fired when the user clicks on the user button
inits the game
initializes the panel
returns true if the input is disabled
returns true if the start level is a start level
shows the highscore
adds the given money to the money
this method is invoked when the request is sent to the server
the
called by the task when the task is executed
update the table
sets the number of key to be used in the cache
connect to the server
this method is called by the user when the user chooses the
verify if lock is not
disconnect user from server
sets the
sets the downloading
add options to the list
adds a new instance of the given instance
returns true if the given character is a valid
handle an exception
get the
invoked when a session is closed
this method is called when a session is created
this method is called when the session is idle
this method is called when a session is closed
this method is called when a session is made
load the config
this method is used to destroy the session
removes the specified object from the world
this method is called when a session is closed
invoked when a session is created
this method is called when a session is made idle
this method is called when a session is made
load the config file
this method is called by the factory
returns the total number of in the current jvm
prepares the file to be created
closes the server
load scripts from file
returns the total number of the
run the script
analyses the object
sets the number of categories
calculates the offset of the given text
sets the number of items in the matrix
sets the category at the specified index
returns a string representation of the object
returns the category of the specified category
check the for the given
sorts the coordinates in the given array
returns a string representation of this object
sets the item at the specified index
show the dialog
returns the value of the category at the specified index
finds the position of the first occurrence of the given relation
returns the button that is currently selected
adds a relation to the relation
returns the preferred size of the image
returns the index of the item in the given index
handles the action event
sets the look and feel
resets the model
sets the window parameter for the window
sets the text
returns the text of the current status of the dialog
clears the text
returns the minimum size of the component
returns the text of the input text
adds a relation to the list of
loads the file and load the file
this method creates the action for the action
creates a file
creates the edit menu
parses the lines in the current line
sets the status message
creates the help menu
returns the status message
sets the
returns the relation between the two items
saves the status of the current status of the
this method is called when the user presses the end of the
sets the value attribute of the object
returns the list of all questions
checks whether the given category is correct
sets the size of the component
returns the number of
returns the number of items in the item
hides the tools
show the tools
returns the clue for the specified number of clue
sets the dirty flag
returns the index of the toolbar that the user has to be
returns the grid
adds a new
resets all the
returns the grid canvas
creates a new instance of application window adapter
invoked when a window is in a component
deletes the subject from the subject
saves the current file to the file
saves the grid
save the grid
sets the current file
adds a body to the list
draw a circle
draw the background color
adds a probe to the current probe
gets the value of the statistic statistic type property
returns the capacity of the given class
returns the table column
resets the iterator to the first node
returns the number of ranges in the current range
sets the number of ranges in the
throws an unsupported operation exception
returns the merge threshold
sets the merge threshold
returns the split threshold
checks if the given partition is contained in the list
returns true if the given point is a valid entry
returns the cardinality
sets the cardinality of the receiver
returns the capacity of the cache
returns true if the specified constant is contained in this
returns true if the range is limited to range
returns true if the range contains the given range
sets the split threshold
returns the minimum value of this object
returns the maximum value of this object
returns true if the minimum value is included in the list
returns true if the include max
sets the minimum value of the parameter
sets the maximum value of the range
sets the minimum value of the given class
sets the maximum value for the given element
sets the minimum value for include
sets the include max value
returns the capacity of this object
returns the local session bean instance
test that the cache is correctly used to create a cache
returns the maximum size of the list
removes the specified entry from the list
returns the average of the average operation of the given operation
puts a value in the map
returns the number of times the operation is done
returns the maximum size of the
create new user channel
returns the pool
sends a session to the server
sends a public key
this method is called when the user selects a game
join a game
leaves the game
load the game
returns the number of users in the list
switch to lobby room
this method is called when the user selects the server
this method is called when the user selects the login server
sets the delay in milliseconds between the message
bind a topic factory to the ldap server
bind a topic to the topic
invokes the server method of the server
returns the local port number
returns the remote port
returns the number of visible user in the network
returns the number of network user
invokes the server method of the server
returns the sender of this connection
append a new parameter
returns true if the last parameter has last
waits until the connection is completed
returns the user object associated with the given nick
sends a message to the server
sends a new transport to the given entity
start the
initializes the
this method is used to start the stopwords
this method is called when the stopwords is finalized
registers a connection with the given connection
remove a connection from the connection pool
sets the flag indicating whether or not the message should be used
returns the value of the database type
returns a connection for the given address
returns the connections
this method is called by the servlet container to indicate that the
notify listeners that the message has been
sends a to the server
notify the server that the server has been removed
notifies all listeners that a channel has changed
returns the original type of the original string
sets the threshold thresholds for the given axis
notify listeners that the current event has been
creates a new instance of
this method is called when the user selects the
initialize the frame
returns the jtext area component
returns the text area
notify the connection listeners that the connection has started
notify the connection to the server
this method is called by the server to send a command to
flush the commands
check if the given index is in the current direction
resets the count of all the buffers
called when the application is exiting
returns the number of commands in the list
returns true if the has flushed to the database
sets the unit to be used for the
returns the unit
returns the degree of the given value
notifies the listeners that the given event has been
resets the internal state of the crane
register a motion device
returns the for the given device
removes a motion device from the device
returns the rgb value of the rgb rgb rgb value
displays the given value in the display
registers a display with display
removes a display from the display
returns the display with the specified name
this method initializes this
initializes the
normalizes the given percentage of the current
start the
this method is called by the
sets the value of the
the of the
add a new to the list
get the mapping for the
returns the of the given input
convert the given object into a kml object
returns the selected operations
append the given code list code to the code other code list
browses for the given file
this method will be called when the user selects the help menu
exit the exit
at startup create and show the main frame of the application
starts the game
returns the amount of profit that have been sold
creates a new curve with the given parameters
returns the number of outgoing connections
sets the number of outgoing connections
close the connection
returns the connection count
sets the number of connections
closes the connection
gets the value of the property
returns the router that is used to store the connection
sets the
returns the maximum number of hosts in the pool
returns the port of the connection
returns the number of hosts in the list
sets the port number for the connection
start the connection
this method is called when the reply reply is received
returns the number of shared files
this method is called when a search message is found
this method is called when a push message is pushed onto the
sets the number of shared files
stops the connection
checks if the given data is a guid
returns the host cache
sets the size of the shared file
returns the hash code for this object
returns a string representation of this object
gets the value of the connection greeting property
returns a string representation of the object
returns true if the online connection is online
returns the query hit source for the given
sets the connection verifier
adds a payload to the payload
returns the connection data
sets the agent header
returns the flag indicating whether or not the connection is
returns a string representation of the message
prepares the message for this message
sets the flag indicating whether or not the connection is
returns the search monitor for the given search
returns the originating connection
sets the vendor code
creates a new file server session
this method is called by the framework to handle the new message
sets the maximum number of failed connections allowed for the user
sends a message to the server
returns true if the given net is a sub net
adds a listener to the list of connected connections
returns the number of bytes in the file
sets the sub supply
returns the sub net
returns the minimum speed in progress
returns the connection list
returns the router that is connected to the router
send a message to all the recipients in the message
returns the port of the packet
returns the net net sub net
clean dead dead dead
creates a search message
returns the payload as a string
closes the connection
adds a connection to the connection pool
request hit query
returns the criteria name
get download speed
adds a listener to the list of listeners
adds a file record to the file
sets the flag indicating whether or not the connection is
returns the flag indicating whether or not the connection is
returns the shared file size
adds a xml element to the block
returns the unique identifier of the
returns the index of the file in the payload
increments the number of failed attempts
returns the payload of the
sets the failed number of failed attempts
returns true if the connection has
returns the port of the packet
returns the hash code of this object
returns a string representation of this ip address
returns the number of active connections in the pool
this method is called when the user presses the ok button
send a message to the server
this method is called when a call back is clicked
returns the client identifier
shuts down the application
adds a host to the host
returns the bounds of the file
handle a failure
search the network for a user
returns the hash
send a message to the server
auto generated getter method
send a message to the server
send a message to the server
returns the
returns the port of the server side port
returns the output count of the message
returns the input message count
returns the number of dropped messages
returns the up time in seconds
returns the message of the current thread
sets the image
sets the start time
sets the resource
update the animation
start the animation
interpolates between the current animation and the specified
returns the distance between this vector and the specified
returns the applet information
initializes the
draw the
start the
sets the current state of the animation
circle coordinates x y
draw the oval with the given oval
fills the interior of the oval with the specified rectangular area
draw the line of the line
this method will be called by the server side
creates a chart
creates a dataset for the given dataset
creates a chart
validates the mandatory fields
sets the translated text
sets the translation state
test the case of case
returns true if the given type is accepted by this class
called by the subclass to leave the type
gets the value of the property
returns true if the is
sets the
sets the
sets the default values of the preferences
removes the project from the project
adds the plugin specific options to the preferences
adds a default property to the default preference
adds a default property to the list
creates the contents of the dialog
checks if the field is valid
open the dialog
creates a radio button
returns true if the given code selection code is enabled
returns the preference store for this page
fills the table with the specified field
enables disables the controls of the controls
enables or disables the controls of the controls
run the action
this method is called when the user clicks on the ok button
performs the default behavior
configures the workspace settings
sets the status bar message
returns the value of the field as a string
this method is called when the user clicks on the ok button
returns the text control
clears the error message
gets the value of empty string allowed
sets whether empty strings are allowed
sets the value of the combo field
sets the text of the field
sets the value of the validate strategy property
shows the error message
notifies the change listener that the value changed
returns the elapsed time in milliseconds
this method initializes this
this method initializes exit menu item
this method initializes j menu item
this method initializes this
find the next file in the list
this method initializes this
this method initializes image root browse
this method initializes okay button
this method initializes this
this method initializes j content pane
this method initializes slider panel
this method initializes action panel
this method initializes image root panel
this method initializes image root display
this method initializes browse
this method initializes this
this method initializes cancel button
this method initializes back button
this method initializes stop start button
this method initializes next button
this method initializes this
this method initializes preferences button
returns a collection of all the places
constructs a new config object with the specified path
encodes all the formats in the list
encode all formats as a flash string
update the contents of the model
returns the indexer
this method will return the index of the file containing the lucene
creates a file containing the file index
load the number of occurrences of the given name
process input input and
parse the value of the given input
checks if the given data is true
parse the csv data
returns the number of records in the record
returns the number of
returns the number of data in the specified data
function call function
builds a csv

sets the age
sets the sex
returns true if the specified data contains the specified data
creates a new person object
returns the item in the list of items
returns the additional attribute of the additional attribute
returns the sex of the gender
returns the index of the item at the specified index
creates a chart
this method initializes this
this method initializes j content pane
this method initializes j jmenu bar
this method initializes j menu
this method initializes j menu1
this method initializes j menu item
this method initializes j dialog
this method initializes j content pane1
this method initializes j button1
this method initializes j menu item2
this method initializes j
this method initializes j content pane3
this method initializes j scroll pane
this method initializes j button3
this method initializes j scroll pane1
this method initializes j menu item1
this method initializes j
this method initializes j content pane2
this method initializes j scroll pane2
this method initializes j menu2
this method initializes j
this method initializes j content
this method initializes j button4
this method initializes j text area
this method initializes j menu item3
this method initializes j popup menu
this method initializes j popup menu
this method initializes j menu
this method initializes j
this method initializes j content
this method initializes j
this method initializes j menu
this method initializes j dialog
this method initializes j content pane
this method initializes j button6
this method initializes j popup menu
this method initializes j scroll
this method initializes j editor pane1
this method initializes j dialog
this method initializes j button2
this method initializes j scroll pane
this method initializes j menu item5
this method initializes j popup menu
this method initializes j editor pane keys
this method initializes j scroll pane keys
runs the test
runs the test
post construction to the
this method is called before the
executes the execution of the test suite
executes the execution of the test
undo the command
executes the test
execute the command
executes the test suite
execute the execution
this method is called by the ant to perform a
executes the test suite
execute the command
executes the test
executes the test suite
returns the properties
executes the command
runs the task
runs the test
runs the
runs the task
posts the test
parse command line arguments
initializes the logging service
run the
runs the task
runs the command
runs the test
runs the test
runs the test
runs the test
runs the task
creates an element
creates an element
creates an element in the properties
creates an element
creates an element with the properties
returns the key of the element
returns the value of the element
unmarshal an input stream into the input stream
marshal the object into the stream
serialize an object using the specified object
unmarshal an input stream into the input stream
creates an element in the test environment
returns an input stream for the specified resource
this method is called by the server to disable the
resets the pin to the specified pin
activates a subscriber
adds a profile to the profile
checks if the profile exists in the database
deactivates the subscriber
returns the status of the status
test of delete profile method of class
tests that the subscriber is successfully
tests that the
tests activate subscriber
test add profile
tests that the profile is successfully
test exists profile with profile
tests that the is
creates a new account
deletes the account from the database
finds a account
update the account with the given account
this method is called when the user selects a book message
process the next transfer
device
this method is used to determine if the object is a context
reads the config from the given list
returns true if the online status of the online
reads the class from file system
returns the number of entries in the list
returns the name of the entry at the specified index
initializes the given class
returns true if the entry at the specified index is write to
sets the name of the entry
returns the string representation of this exception
sets the write index
returns the global name of the global
writes the current state of the
returns the ping method
returns the owner of this object
returns the time stamp
returns the url of the writer
ping the server
returns true if the lockable is lockable lockable
returns true if the current object is locked
this method is invoked by the thread to run the server
returns the set of all hosts in the set
sets the ping method
sets the wait time
returns the communication layer
sets the lockable
returns the inner throwable
sets the time stamp
returns the host id
ping the client
this method is called when the lock is done
called when a reference object is removed from the cache
this method is called when the storage state is changed
returns the global name of the global element
returns the set of all the tasks in the database
returns the new value
returns the old value
returns true if the event is a event
returns true if the event type is a change event
returns the url of the
returns true if the event is locked
returns true if the event type is removed
returns true if the event is locked
returns a string representation of this object
returns the private key
returns the data object
compares this object with another one
returns the hash code of the object
sets the debugging flag
register a listener for storage events
sets the url to the
returns true if the given reference is equal to the other
compares this object with another shared reference
returns the global name of the global global
returns the time stamp
returns true if the object is updated
checks if the user is logged in
remove a listener for storage events
returns a string representation of this object
this method is used to handle the given host
returns the string representation of this object
returns the data object associated with the current object
returns true if the file can be written to the user
returns the lease time in seconds
returns the reference class name
ping the client
adds a listener to the cache
returns a string representation of the object
adds a listener to the list of active listeners
returns true if the file is updated
sets the locker thread
runs the server
runs the connection
returns the class loader used for this class loader
returns the descriptor associated with this descriptor
returns the cache key
returns true if the current time is updated
sets whether the user can write the specified value to the
sets the time of the last update
returns the cached object that is used to resolve the given name
sets the lease time
sets the lost attribute of the object
returns the data
adds a new object to the list
adds all elements contained in the specified collection to this
returns true if the given object is contained in the list
returns true if all of the elements contained in this set contains
returns true if the argument is an other object
returns the logger
returns true if the given other object is equal to this one
returns the cdr
returns the tail of the list
returns the object object associated with the given name
returns a hash code for this object
returns true if this is empty
returns an iterator over the elements in this list
removes the specified element from this set if it is present
removes all the elements of the given collection
retains only the elements in this list that are contained in the
returns true if the connection is connected to the server
sets the car
sets the cdr
returns the number of cars in this collection
removes the car from the list
returns true if there are more elements in the iteration
returns the next car
puts a new object into the registry
removes the current car from the current iteration
removes a listener from the cache
removes a listener for a specific name
sets the logger to be used for logging
this method is called by the user to change the bid
paints the component
returns the class loader for the given class loader
run the connection
lock the lock
removes a named global name from the registry
appends the text to the dialog
clears the buffer
reads the contents of the file
make a panel with the given title
unlocks the given named lock
validates the
creates a server socket
closes the connection
execute a sql update
execute a query
returns the major version number
returns the minor version number
returns the driver major version number
returns the minor version number
whats the version of this jdbc driver
returns the host name of the server
get the sql database sql grammar
checks the error packet
closes the database connection
close the database
start the thread
start the simulation
starts the thread
stops the thread
starts the process process
process the current process
switch to process
process the end of the process
update the statistics of the current thread
process the request and process the next process
process the end of the current process
returns true if the given file is accepted by this filter
connect to the database
disconnect from the database
returns the rdf configuration
sets the rdf configuration
returns a new instance of the bean editable bean
returns the subject part of this code code
sets the subject of the subject
returns the predicate part of this predicate
sets the predicate
returns the object that was used to hold this object
sets the object that this object is associated with
returns true if namespace prefix is enabled
adds a new collection of triples to this model
returns the literal type
adds a new
adds a triple to the list of triples
returns the sql statements for this statement
compares this item with another
returns the value of the given query as a string
compares this object with the specified object for order
returns the value of the specified column as an integer
sets the value attribute of the object
returns the value of the given query
sets the subject value
sets the value of the subject and the given value
returns the uri of the node
returns the repository id
sets the repository id
returns the number of pixels that the given resource is in
sets the radius of the specified region
returns the maximum number of results in the list
sets the maximum number of results to be processed
returns the number of skip results
sets the number of results to skip results
returns the order criterion
returns the sort order of the given criterion
returns the namespace for the given prefix
sets the namespace uri of the given namespace
adds all the given query to the set of all the statements
returns the host name of the xml rpc host
returns the port number of the rpc port
returns the xml rpc port as string
returns the soap soap soap envelope
sets the xml rpc port
sets the value of the users property
sets the value of the tags property
sets the value of the resources property
finds the message in the collection
returns the syntax of the
sets the close model
returns a copy of this message
returns the language tag
sets the predicate
sets the object
returns true if the splash screen should be shown on screen
returns the default domain
creates the menu options
returns the users
runs the connection
runs the connection
notify the message that the user has incoming
returns the blocked
sets the blocked
returns the
returns the device code
returns the category for the given category code
sets the
sets the device code
sets the device name
returns the device number
sets the device group
returns the house name
sets the house name
sets the parameters
gets the mobile number
sets the mobile number
returns the component that is currently focused
stops the connection
returns the number of fields in the corpus
returns the registry string for the given index
returns the registry value for the specified index
disconnect from the database
returns the prepared statement for the database
returns the connection
get the prepared statement for the database
get the prepared statement for the database
select all the devices
returns the search result statement
returns the prepared statement if the statement is prepared statement
select a house
returns the prepared statement if it is not already null
get the prepared statement for the prepared statement
select the user with the given user id
returns the prepared statement if the statement is allowed
executes a query result set
select a device
this method is used to execute the search
check if the given device is blocked
check the device state and update the state
check the for the given device and
check if the given device is allowed to be executed
notify the message that the user has incoming
this method is called when the device is started
services are done
this method is called when a service search is completed
called when the inquiry is completed
connect to the server
gets the value of the is action ok property
at startup create and show the main frame of the application
inserts a row at the specified position in the table
moves the specified row in the range of the specified range
removes a row from the table
sets the column identifiers
adds a column to the table model
returns the column name for the specified column
returns the value at the specified row and column
sets the value at attribute of the table model object
returns the tasks
adds a task to the list of tasks
sets the value of the name property
sets the value of the mbean attribute property
sets the value of the filename property
adds the given uri to the internal context
adds a listener to the list of listeners
removes a listener from the list of listeners
stops the current simulation
resets the counter to zero
convert a byte to a hex string
returns the crawler
returns true if the given address matches the given address
returns true if the given address matches the given address
adds a new client to the list of all the
returns true if this player is currently idle
returns true if the client is in the client
returns the shares of the specified client
returns true if the is idle
removes the resource from the resource
returns a random client object that is connected to the client
processes events from the event queue
this method is called from the default framework to install the module
load the core modules
shows the dialog
hides the page
returns true if the specified array of integers is a int value
returns the base value of the base value
returns a new i value i
returns the details of the element
returns the size of the specified array of elements
roll the current roll to the
roll the current value to the next value
sets the minimum value for a given
returns true if the given array is a legal expression
adds a to the list of
returns the number of elements in the array list
returns the number of elements in the list
returns true if the is a integer
returns true if the value is a integer value
returns the current vector of all sides of this object
roll the dice
returns the name of the
returns the value of the value
returns the value of the details
returns true if the value is a integer value
returns true if this is a integer value
roll the roll to the
returns the
roll the current roll to the
returns a string representation of this object
returns the name of the
returns the value of the base value
returns the value of the integer attribute
roll the dice
returns the value of the string value
returns the details of the element
returns true if the field is an integer
returns the details of the
sets the module name
roll the current roll to the
creates a new
returns the simple name of the module
sets the module author
returns the module author of this module
sets the module version
returns the module version
sets the module short description
append a token to the end of the list
clears the current state of the
returns the module short description
returns an enumeration of the tokens
adds a new dice to the list of dice
returns the module long description
returns the string representation of the current token
sends a service request to the server
sets whether this filter is excluded from the
process a message
adds a function to the current function
returns the excluded flag
starts the thread
sets the target
returns the gui
returns the target
sends a message to the server
removes a symbol from the list
registers a new menu
registers a new menu with the given name
resolves the given message
removes a menu from the menu
removes a menu item from the menu
registers a menu item with the given menu item
registers a menu item with the given menu item
this method is called when the menu item quits quits
join a vector of vectors
returns a string representation of this object
invoked when an action occurs
clears the current target
sets the gui component
sets the menu bar
checks if the given character is valid
add a new to the
removes the given from the
returns the
this method is called by the garbage collector
allocate a new static buffer
returns the current active buffer
returns true if the dynamic output is dynamic
sets the buffer to retain for each buffer
sets the time in milliseconds to the time in milliseconds
sets the time mark
returns the duration of the connection
adds a new inbound message to the current thread
adds a new message to the end of the list
sets the server address
clears the current time
returns the number of bytes sent to the client
returns the number of bytes in the
adds a new message to the list of inbound messages
adds a outbound message to the message
returns the number of outbound messages in the queue
returns the number of messages in the message
returns the total number of messages in the message
announces a connection to the client
announces that the client has been disconnected
connect to the server
connect to the server
sets the originator
returns true if the connection is connected
starts the thread that starts the thread
sets the header of the header
sets the header
this method is called when a new channel is selected
sets the header of the header
this method is invoked by the service
returns true if the message is available
sets the data
reads the message from the message queue
returns the string containing the string as a string
this method initializes server
initializes the given object
load the modules from the specified module
sets the id of the resource
returns true if the client is a client
sets the size of the buffer to be used in the buffer
returns true if the server is a server
sets the mode for this
connect to the server
returns the message that is currently being used in the message
registers the given channel
stops the server
register the module loader
returns true if the message is
connect to the server
sets the gui
sends a message to the server
this method is called when the registration is activated
registers a group manager
called when the user has changed
handles the group message
handles the client message
registers a route manager
initializes the module
sets the flag indicating whether or not the application is initialized
called when the user has changed
returns true if the object is initialized
processes a message group
returns the socket channel
initialize the module
returns true if the group is equal to the group
register a module to the module
returns the name of the group
register a module
sets the name of the group
write the message to the server
returns the short description of the group
returns the module reference for the given module name
sets the short description of this group
returns the default module reference
returns the group description
registers a new message type
adds a group to the group
sets the description of the group
deregister a message type
writes the outbound buffer to the outbound buffer
checks if the id of the group is removable
sets the
sets the module module
returns true if the group is a group
sets the module name
sends a message to the network
returns a member by a group
returns true if the queue has a remaining
puts a message in the queue
removes the next message from the queue
build the console menu
returns the role member of the member
returns the client at the specified id
returns the message that is currently being processed
post a system info to the system
sets the member member
post user info
posts a new post to the current page
show the current level
creates a new group member group
sets the default role
hides the dialog
returns the menu item
invoked when an action occurs
returns true if the current thread is still in the queue
returns a group with the specified id
registers an observer for the connection pool
returns the module module
returns the group client module
returns the module group server
updates the vehicle with the specified vehicle
adds a vehicle to the list of vehicles
make the content of the view
starts the
creates a new map view
returns true if the given vehicle is a
returns the start connection
sets the direction of the connection to the given key
unselects the selected tab
returns the end of the connection
deletes a vehicle
returns true if the given code vehicle code is a
returns the string representation of the receiver
returns the string value of the specified string
initializes the available languages
sets the language
saves the document to the file
saves the document to a file
check the event
returns the members members
returns a random member of the
returns true if the player is leader
returns the current world region
this method is called to broadcast members to the server
update the current world region
this method is called when a members of a members of the
removes a member from the list of members
returns the player by name
removes a member from the
removes a member from the

calculates the of the
checks if the given var var var var var var var var
checks if the given var var var var var var var var
sets the var
sets the var
start the document
returns true if the player has a specific state
returns the variables in the given scope
sets the variables in the given scope
returns true if the given item is collecting
adds a new collection of items to the list of tasks
removes the specified collection of all the elements from the list
adds a new item to the list of items
sets the correlation header
returns true if the is
fills the message with the given message
sends a request to the server
this method will be called when a part of a
sends a request to the heartbeat
resolves the endpoint reference for the given endpoint
test point example
test the order of example
test the sequence of
returns a service client
test the
returns a service client
setup the client for the client
sets up the test
setup the server
this method will be called from the server to save the device
setup the server
tears down the test
setup the connection to the initial values
test the persistence of a example event
sets up the fixture for example open a network connection
setup the server
tears down the test
setup the client for the client
initializes the connection to the initial values
setup the connection to the initial values
creates a new password object with the given password
returns the uuid of the
returns the number of in the current
called when the user attempts to logon to the user
handle acknowledgement request
handle the request delete request
returns true if this is trusted
returns the response for the specified operation
returns the discovery agent
this method is invoked when an operation is put
set the path to the request
this method is called when the user selects a
stops the device
get a new
returns the size of the data
compares this remote device to another object
returns the friendly name of the device
authenticate the request
returns the device class
cancels a service search
get the usb
insert the data element at the specified position
returns true if the user has authenticated
get the bluetooth address of the device
returns the size of the vector
get a record from the database
this method is called when the device wants to receive
removes the element at the specified element
close the channel
get a remote device by remote address
aborts the current
returns the headers that is associated with this response
returns the response code

creates a new instance of
returns the vector of the data in this packet
sends a way to the
returns the response code
creates a new header set
removes the header from the set of headers
send a request to the server side
returns the number of in the current
sends a event filter
this method is used to read the filter
sets the authenticator
sets the
this method is used to send a local
sends a packet to the frontend
send a device to the device
this method transfers the to the current
send a to the server
send a message to the server side
pushes a message onto the stack
peek the next message in the queue
pop the current message from the queue
validates the request
add a new object to the list
removes the specified element from this set if it is present
returns the first element in the list
returns an iterator over the elements in this collection
returns true if the iterator has another element
returns the next element in the iteration
removes the first element from the list
adds the first element at the end of the list
adds the given element to the end of the list
clones the object
removes all the elements from this map
returns an iterator for the specified type
called when a is sent
this method is called when all the requests have been made
registers an instance of the specified behaviour
registers a new code code
handle the given message
registers a sequence of sequence to be processed
resets the data store
called when the client wants to be notified of
handle the of the message
this method is called by the framework to set the data store
handle the reception of a message
registers a new
handle the of the
this method is called when the user selects a proposal
handle reject proposal
handle the given message in the document
registers a handler for the given key
registers a new
handles the message received event
registers a proposal that accepts a proposal
resets the and reset the result
sets the template
registers a proposal handle for the proposal
send a to the server
sets the key for the received message
interrupts the thread
reinit the
handles the sequence of sequence
check if the given reply in the message is banned
check if the server is still available
resets the template to the given template
prepares a
this method is called when the user receives the given message
handles the of a
registers a subscription handle for the given subscription
handle the
called when a is sent
registers a new code code
creates a new subscription
handle all responses
returns the subscription object associated with the given message
this method is called when the user selects all notifications
returns the subscription with the given id
returns the subscriptions of the given subscriber
registers a new instance of
registers a new
returns the subscription
notify the notification of the notification
registers a new
closes the current conversation
called when a is not understood
registers an
called when a failure
registers a new
prepares a
registers the given to the database
resets the internal state of the object
registers a new code code
clear the server
checks if the given code packet code is in the code protocol
registers a new code code
called when the session is finished
registers a new behaviour handle for the given behaviour
registers a new code multi sequence code to be notified of
creates a new iteration
this method is used to set the subscription to the subscription
handle the agree
this method is called when the request is sent to the server
called when the cancel button is pressed
resets the current session to the next session
registers a new request handler
registers a new handle for the given
send agree to the
this method is called when the start of the data is started
resets the data store
close the session
resets the template and resets the state to the given template
resets the session to the initial state
sets the data store
handle all responses
this method is used to set the response object
registers a new instance of the given code code
registers a new
creates a new json recurring id
registers an object in the list of
adds a new parameter to the list
returns the value of the parameter
returns an iterator over the parameter names
prepares a
this method is called by the server to update the
removes the object from the logger
resets the data store
handle the accept operation
resets the template and resets the state to the given template
process request from request
handle reject proposal
adds the specified element to this set if it is not already
returns the element value
removes the specified element from this list if it is present
returns true if the element contains the specified element
returns an iterator over the elements in this collection
returns a string representation of the object
prepares a request to be sent to the server
registers a new request handler
cancel the content of the given message
registers a new instance of
called by the when a cancellation is finished
load a file from the storage
returns the message of this exception
stores the given value into the storage
adds a new object to the list
returns the value of the specified parameter
initializes the data store
resets the internal state of the
called when the user begins a new
called when the end of the end of the end of
registers a proposal with the specified proposal
returns the index of the separator in the given string
registers a new request to be used to prepare the given
registers a proposal handle for the proposal
execute the actual operation
returns true since the connection is done
this method is called by the subclass to perform a transition
this method is called when the is
sets the protocol
returns the property value for the specified key
returns the unique id of the address
compares this object with another object
returns the hash code of this object
returns the value of the specified property
adds a new parameter to the list
removes a parameter from the list
sets the class name
sets the args
returns a string representation of this object
sets the property value for the given property name
compares the specified object with this state
compares this object with the specified object for order
this method is called when the is done
returns the value of the specified property
reset the message to the given code address code
returns the properties of the boot properties
returns the property value for the given key
sets a parameter
sets the given key to the given value
returns the filter value for the given key
get the value of the property with the given key
returns the value of the specified property
this method is called when the is
returns the property value as a boolean
sets the value of a property
returns a string representation of the object
remove an agent from the agent
returns the property value for the given property
returns the service manager
sets the property to the given value
returns the service finder service
called when an agent is suspended
renames a key and its value to the given key
adds a filter to the filter
removes the filter from the given filter
processes an incoming outgoing packet
processes an incoming command
substitutes the next string in the substitutions
this method is called when a workgroup is resumed
returns the number of slices
adds an alias to the list of aliases
called when an agent is moved
add reader to the current line
returns the alias for the alias
returns a filter command filter
returns the command sink
returns the line of the given reader
returns the interface
this method is called when the user agent is connected to the
get a helper for the service
reads the given reader from the given reader
returns the behaviour of this object
prints this properties to the specified output stream
this method is called when the agent is connected
sets the name of the attribute
sets the local name of the local file
adds a new url to the list of addresses
removes the specified url from the list of addresses
sets the name of the
clears all addresses
sets the node
returns the container
returns an iterator over the addresses in the list of addresses
sets the principal
returns the of this principal
sets the owner principal
returns the owner of the owner of this principal
sets the credentials credentials
returns the owner credentials
removes an instance of the resolvers from the context
clears all context resolvers
returns true if this type is a
returns an iterator over the resolvers of this resolvers
checks if the agent is
sets the thread to the given code code
handle the received command
invokes the given runnable object
creates a new behaviour wrapper for the specified behaviour
interrupts the thread
this method is used to invoke the given thread
returns the
suspends the given provision
resumes the given behaviour
resets the period of the period
resets the counter
register a state with the given state
registers a state object for a state
sets the parent of this code parent code
registers a state with the given state
removes a state from the context
registers a new transition
restarts the current session
this method is called when a transition is picked
handle the event
registers a new transition
creates a new default transition
removes a transition from the list of transitions
removes the given code source code from the list of outgoing transitions
returns the root of the tree
returns true if the given source has the specified
returns the state of the specified object
returns the name of the state
returns the last exit value
returns the end of the last exit
this method is called when the user presses the end of the
schedule the current state of the transition
resets the stopwatch
returns the message that is associated with this message
schedule the first time to the first time
schedules the next thread to be done
checks if the given code termination code is in the current
returns the current
returns the children of this node
adds a sub behaviour to this agent
removes a sub behaviour from the behaviours
check if the current iteration is still valid
returns the current
returns the source of this event
returns the children of this node
returns the parent of this code multi parent code
forces a new transition to be changed
returns the previous state
resets the state of this transition
this method is used to take the specified
returns the root of the tree
this method is invoked when the block is closed
handle the block event
blocks the simulation
restarts the agent
handle restart event
sets the agent
restart the given timer
called when the timeout is paused
resets the date to the specified date
resets the timeout
resets the wakeup process
handle the block event
handle restart event
notify the that the designer has been restarted
sets the agent to the specified agent
schedule the first occurrence of the current
returns the current
returns true if the last element is last in the current list
returns the current behaviour of the current
this method is called by the server when the user selects the
returns true if the command is accepted by the command
this method is called by the framework to perform the processing of
sets the flag indicating that the given
sets the
returns true if the is
adds a sub behaviour to this agent
removes a sub behaviour from the
resets the current state of this node
this method is called when the service is deactivated
creates a new message queue
this method is called when the user selects a new channel
decreases the size of the bag
this method is called by the framework to perform a search
returns the next element in the list
returns the location of the toolkit
returns the for a given cid
returns a list of agents that are deployed to the given
get a helper for the service
sets the size of the queue
initialize the agent
returns the name of the content part
returns the number of queue elements in the queue
returns the interface class
returns the command filter for the given filter
returns the size of the queue
sets the name of the
returns the command sink
sets the service
returns the service
start the node
returns the node
returns the for the given
the given component
returns the node for the cid
creates a new instance of the given
returns the for the given
sets the state of the active life cycle
sets the class name
sets the kind of this entry
adds a new code code
returns the children of this node
returns true if the node is a simple
compares the specified object with this object
adds a listener to the listener list
returns the hash code for this object
returns the state of the life cycle
returns the name of the
compares the specified object with this code object code for equality
compares this object with the specified object for order
returns the hash code for this object
returns a string representation of this object
removes a listener from the list of listeners
returns the name of the platform
this method is called by the framework to perform the processing
suspends the controller
resumes the controller
kills the platform
returns an agent controller
returns the current state of the
returns an agent controller
creates a new agent controller
kills the proxy
this method is called by the vm when a is created
sets the
returns the name of the platform
returns the name of the container
returns the platform controller
move the robot in the current location
registers the conversation id
registers a new conversation
remove a conversation from the list of
clones the given entity
removes all elements from this list
returns the message template
prints the stack trace of the stack trace
returns the
returns the aid of the
suspends the life cycle of the suspension
returns true if the given message matches the given code message code
writes the message to the given message
returns the string representation of this object
read the data from the given data set
activate the game
set the value of the given slot
p validate the value and the value of the argument
returns the type of the schema
this method is used to validate the value of the object
validate the value of the given object
returns a string containing the names of the keys in the database
validate an object
sets the sender
returns a filter command filter
returns a new instance of the object described by this instance
wait for the wait for the wait process
creates a new instance of the object
determines if the given schema is in the schema
this method is called by the
creates a new instance of the type
this method is called by the
returns true if the given schema object is compatible with this schema
creates a new instance of the object
determines if the schema is a valid schema
returns a new instance of the object described by this instance
adds a new code code to the receiver
compares the specified object with this instance for equality
creates a new instance of the object
adds a new entry to the schema
adds a new to the schema
adds a schema entry to the schema
adds a new card to the list
adds a new schema to the table
adds a new element to the list of elements
removes the specified receiver from the list of receivers
adds the given schema to the list of schemas
adds a facet to the list of facets
adds a new super schema to the list of schemas
waits for the current thread to terminate the given thread
creates a new instance of the object type
returns the command sink
this method is called by the code validate code method to perform
creates a new instance of the object
this method is called by the object when a valid object
clears all the receiver
adds a binding to the schema
adds a binding to the table
creates a new instance of the type name
creates a new instance of the type
this method is called by the code validate code method to perform
this method is called by the cdl type
determines if the schema is a valid schema
add a new to the table
this method is called when the user finishes the
adds an aid to the destination
adds a schema to the table
adds a new element to the list of
checks the class schema for the given class
removes an aid of the reply to the reply
adds the given schema to the schema
this method is called by the
adds a facet to the list of facets
clears all reply addresses from the current reply
writes the given code output code to the stream
sets the performative
returns the schema object associated with the given name
checks if the given slot contains a slot with the specified name
sets the content of the content
returns true if the slot is a slot
restore the specified input stream
adds a schema to the ontology
checks if the given name is mandatory
sets the content sequence content
returns a new instance of the object described by this instance
this method is called by the
validate the slot of the slot of the given slot
returns the schema object for the given class
sets the reply with the reply to the
returns the schema object associated with the given name
returns true if the given schema is compatible with this schema
returns the schema object for the given class
returns an object from the given object
sets the reply to the reply to the message
removes the queue
creates a new
returns true if the schema is a schema
returns the class for the given name
sets the value of the given attribute
sets the encoding
sets the value of the given attribute
returns the element that is used to translate the element
checks if the schema is a sub schema of the given schema
returns the ontology that is found in the ontology
sets the element template
sets the value of the given attribute
returns a string representation of this object
sets the value of the given attribute
sets the value of the given attribute
sets the name of the given field
returns the absolute value of the given name
sets the value of the given attribute
returns true if the is
sets the language
sets the queue to the next state
sets the value of the date property
returns a string representation of this object
tests this object for equality with an arbitrary object
sets the value of the given property
returns a hash code for this object
sets the name of the variable
sets the type of the variable
returns the name of the
returns the primitive type
sets the ontology
sets the variable
sets the variables
sets the term
sets the arg0 to the given value
returns the variable
returns the aggregate
returns the term
returns the proposition of the current predicate
sets the manager
sets the reply by date
returns a string representation of this object
sets the protocol
decode the content of the given content
sets the conversation id
this method is used to encode the content of the given content
returns the abs abs
returns an iterator over the receiver
this method is used to sort the of the given
encodes the slots
encodes the content of the content of the content
returns the content of the content element
returns an iterator over the reply to this message
append a string to the current
this method is used to decode the content of the given content
parses a
returns the sender of the event
parses a
returns true if the content of the content has a sequence content
returns the content of the content of the content
returns the next token in the stream
consumes a character
returns the element name
this method is used to instantiate the class of all the
decodes a given content
this method is used to sort the of the given
the for the given type name
this method allows the deserialization of an instance of this class
returns the reply by the
returns the reply by date
adds a user defined parameter to the user defined user defined property
returns the user defined parameter for the given parameter
sets the user defined parameters
returns true if the element contains the specified element
removes the user defined parameter from the list
parses a symbol
removes a user defined parameter from the user defined parameters
looks up the named name in the database
finds the ontology in the ontology model
this method is called by the code code
sets the envelope
this method is called by the framework to fill the content of
extract the content content from the given element
extracts the content of the content of the content of the ontology
sets the default envelope
returns the envelope of the envelope
returns the ontology that matches the given ontology
returns a string representation of this object
puts a value in the map
puts a long value into the map
returns the integer value associated with the specified key
puts a boolean value into the map
returns the value associated with the specified key
encode the content of the frame
decodes a new content object
returns an iterator over the in this list
removes a connection from the pool
returns the connection at the given position
get a connection to the given address
returns the capacity of the current
this method is called when the server is started
activate the given channel
this method is called by the framework to perform the action
called after the client has responded to reply to the reply
called when the end of the end of the
sets the mobile agent description
gets the mobile agent description
sets the system
returns the system
sets the language
returns the language of the
sets the new name of the
sets the operating system
gets the operating system
sets the name of the aid
set the value of major version
returns the aid of the current aid
returns the major version of this file
sets the destination
set the value of minor version
sets the agent profile
sets the dependencies
returns the agent profile
sets the value of the agent version
returns the agent version
sets the signature of the
waits until the timeout is exited
cleans up the resources
sets the debugger id
sets the container
returns the container
returns the debugger for the current debugger
clears all agents in the game
adds a new agent to the list of agents
sets the agent id
returns the agent
removes a agent from the list of agents
sets the class name of the class to be used for the
returns an iterator over all agents in this agent
sets the
returns the
clears all agents in the game
adds a new agent to the list of agents
removes a agent from the list of agents
returns an iterator over all agents in this agent
sets the agent identifier
sets the agent name
returns the agent identifier
sets the owner of this object
sets the credentials used to authenticate the user
adds a new argument to the list
returns an iterator over the arguments
adds a behaviour to the end of the list
returns the of this message
handles the arrival of a reply
handles the arrival of a reply
returns an iterator for the given template
handle the agree
removes a behaviour from the agent
handles a failure
sets the description of the description
called when the arrival of a reply is sent
sets the constraints
returns the constraints
handles the arrival of a sequence of the sequence of bytes
returns the lease time
adds a new address to the list
removes a single addresses from the list of addresses
adds a new protocols to the list of protocols
adds a service to the list of services
returns a string representation of this object
removes a protocol from the list of protocols
removes a service from the list
clears all the protocols
clears all the services
renews the search id
returns the last message in the message
returns an iterator over all protocols
sets the search id
returns an iterator over the services in this context
sets the value of the by property
adds a new ontologies to the ontology
sets the maximum depth of the
gets the value of the by property
this method is called when the is down
removes the ontology from the ontology
sets the from attribute of the object
sets the maximum number of results to be processed
clears all the ontologies
returns an iterator over all ontologies in the ontology
adds a language to the language
removes the specified language from this list
sets the value of the code code property
gets the value of the via property
clears all the languages
returns a string representation of the object
returns an iterator over all the languages contained in this language
sets the ownership of the principal
sets the ownership attribute of the object
sets the state
returns the ownership of the user
adds a property to the list of properties
adds a new to the list of services
removes a from the list of services
removes the specified property from the list of properties
removes all the from the list
returns an iterator over the services in this context
clears all properties
returns a string representation of this object
returns an iterator over the properties of this object
sets the sender id
sets the value of the event
returns the event record
sets the
returns the sender of the sender
returns the
sets the message
adds a new event to the list of events
returns the message that this message was sent to
returns an iterator of all events
sets the receiver
sets the behaviour of the
returns the receiver
sets the container
returns the behaviour of this object
adds the given id to the list of
sets the where clause for this object
sets the to value
sets the event that is used to display the event
returns the where where this object is connected to
returns the event that is currently being used for the event
sets the date when the event was performed
removes a given id from the list of
prepares a request for the request
returns a string representation of this object
sets the location where the is located
gets the location where the object was moved
clears all the
sets the buffer container
returns the buffer container
returns an iterator over the elements in this collection
sets the from address of the event
sets the address of the message
returns the proto
returns the current
sets the state of the agent
returns the agent state
sets the state of the agent
sets the comments
returns the current state of the agent
sets the platform
returns the platform
sets the state of the
sets the from id
returns the from
sets the to
sets the acl for the acl
gets the to
gets the acl value
sets the envelope
returns the envelope
sets the acl for the acl
returns the representation of the acl
sets the from attribute of the object
sets the payload of this packet
sets the payload length
sets the to address of the message
sets the payload encoding
returns the payload encoding
adds a new receiver
removes the specified receiver from the receiver
clear all the
returns an iterator over the receiver
start a transport address service
sets the received object
returns the transport protocol used by this factory
returns the connection factory
returns the received data object
this method is called by the timer
writes the given output stream to the given output stream
reads a from the
shuts the down
get the service helper for the service
this method is called by the thread pool to indicate the time
returns the value of the property with the given key
sets the id of the session
sets the id of the
sets the state of the terminate info
runs the thread
returns a connection to the given address
sets the id
reads the next string from the input stream
writes a string to the output stream
reads the date from the date
interrupts the thread
reads a string buffer
writes the date to the file
reads a vector from the file
writes the string buffer to the given buffer
adds a new transport address to the
writes the vector of to the output stream
handles the of the
writes the string array as a string
get the
disable the pending thread
returns the transport protocol used by this factory
returns the connection factory
this method is called when the server wants to keep alive
send the current server to the server
the
deserialize a from the given data
build an exception from the exception
returns the id of the object
returns the list of addresses that this is associated with
gets the value of the my description property
returns the list of urls
returns a transport address for the given url
returns the ownership of the given container
shuts down the
returns the ownership of the given agent
writes the to the file
returns a list of all the in the list
check the search id for the given search id
initializes the data store
load a from the given storage
stores the given storage object
prints the stack trace of the stack trace
initializes the data store
sets the value of a specific key
returns a list of all the for a given key
adds a new url to the list of addresses
removes a specific url from the list of addresses
removes all addresses from the list of addresses
returns an iterator over all the addresses in this collection
removes an instance of the specified resolvers
removes all resolvers from this context
returns an iterator over all the resolvers
adds a new code code to the receiver
removes a receiver from the receiver
clears all the receiver
add a reply to the destination
removes an aid of the reply to the destination
clears all reply to the reply
sets the state of the active life cycle
returns the schema object associated with the given class
this method is called when the user selects the
returns an iterator over the receiver
returns an iterator over the reply to this message
sets the default envelope
interrupts the thread
check if the given level is a level
prints the properties of this object
returns the properties
sets the properties of the application
prepares a
registers the given code transformer code
registers an existing instance of this code code
handle the
this method is called when the user selects the user confirm
handle the
initializes the data store
this method is called when the
initializes the data store
this method is called by the server to update the
this method is called when the is received
returns the code protocol code that is associated with the query
this method is called when the user selects a reject proposal
returns a proposal indicating the requester of the given proposal
registers a query handle for the query
the
sets the
prepares the query for the
returns the text field name
registers the given query query with the given query
registers a new instance of
registers a new
stores the data store in the database
inserts the specified element at the specified position in this list
this method is called to make this object list
writes the object to the output stream
this method is called by the server to update the
this method initializes this
removes the first element of the list
adds the first element at the end of the list
adds the last element to the end of the list
this method initializes j content pane
this method initializes j panel
prints the given object
print a string
prints the current line
print an object and then terminate the line
this method initializes j button ok
print a string and then terminate the line
stores the given value into the storage
refresh the current state of the
this method initializes j table
prints the given object
print a string
print the current date and then terminate the line
print an object and then terminate the line
print a string
writes the object to the output stream
returns a string representation of this object
handle the node
handle dead node
this method is called when a node is unreachable
this method is called when a node is reachable from the network
check if the current iteration is still valid
handle an agent
handle the update update update agent
clones the agent
handle remove remove remove remove
closes the jar file
returns the jar file name
find the class with the specified name
this method is called by garbage collection
this method is called when the agent is dead
this method is called when a message is sent to the server
start the event
returns the child nodes of this node
returns the last ping time
enables the debugger
starts the channel
disable the debugger
registers a new
deregister a node
this method is called when the thread is started
processes the given command
adds a class to the list of classes
adds a new ontology to the ontology
adds a class to the schema
adds a to the list of schemas
returns a list of all the names of the concept names
returns a list of all the names of the predicate
dump the context
returns the value of the code property code
verify if the property is a valid value
compares two port urls
returns the maximum number of
get the for a given url
drops the statement table
checks if the table name exists in the database
create a table with the given name and table
the database driver
this method is called when the server wants to stop the
returns the batch
this method is used to create the
returns a collection of for the given aid
remove a single object
adds an agent to the list of agents
removes the agent from the agent list
removes all agents from the list
checks if the agent is present in the agent
returns the position of the agent
this method is called by the agent to perform a
adds a message to the list of messages
removes the specified agent from the list of messages
removes all messages from the list
returns an iterator over the messages
this method is called by the client
closes the socket and closes the socket
sends a message to the server
checks if the given message is valid for the given message
checks if the given string is valid for the given name
this method is called by the client to fix the
loads the configuration file
cleans the cache
processes the action
returns the message that is currently set in the message
returns the request that is sent to the server
creates a new
sets the message to which the user selects the message
cleans the expired resources
sets the frame icon
removes all subscriptions
this method is called when the is sent
this method is called when the system is done
this method is called when the user selects a new message
sends a message to the server
removes the specified agent from the system
processes incoming messages
removes all agents from the game
sets up the splash screen
sets the progress bar
returns an enumeration of all the subscriptions of this database
sets the editable property
checks if the given name is present in the database
removes the subscription from the database
sets the editable state
this method is called when the observed object is changed
returns the list of agents that this agent is managing
closes the result set
registers the given to the list of
returns the list of message objects
deletes the selected object
add a new to the dialog
returns the component that will be displayed in the cell
register the message with the specified message
close the statement
returns the user action
sets the list of messages to be displayed
returns true if the user is
register an object with the registry
gets the value of the property
this method is called when the user has added the specified interval
unregister a new address
gets the value of the property
serialize an object to a serialized object
this method is called when the list of removed deltas changed
adds the to the ontology
returns the text of the document
register a new address
sets the editable state
this method is called when the contents of the list has changed
handle the command listener
gets the value of the address property
sets the user action
sets the
sets the input handler
deserializes a serialized object from the given string
sets the editable state
returns a string of the name of the given clip
sets the edit text field
sets the value of the field code address code
sets the
returns the user action
returns the value of the given object
sets the user action
register a new object with the
sets the frame icon
returns the column name
this method is called when the user has added the specified element
returns the value at the specified row and column
returns a string that is in the given string
registers a new property change listener
description of the method
this method is called when the user changes the state
invoked when the focus of the component loses the focus
processes the focus event
returns the component that will be displayed in the jlist
registers a new key
description of the method
sets the first line of the line
returns true if the area is broken in the broken area
this method is called when the interval is removed
replaces the given string with the specified pattern
returns the preferred size of the component
this method is called when the contents of the model has changed
sets the horizontal offset of the horizontal scroll bars
sets the font
creates a new agent with the specified name
sets the flag indicating whether the area of the broken area is
sets the origin and orientation of the receiver
returns true if the is
suspends the agent
marks the given line as needing invalidation
this method is called by the parser to scan the text in
returns the font for the specified font
returns the font metrics for the specified font
adds a new message node to the list of nodes
returns a string representation of this object
register an aid
unregisters a string
returns the component that will be displayed in the jlist
this method is called when the user changes the state of the
invoked when the focus lost
returns the aid of the
suspends the specified container
sets the editable state
sets the document to be used by this component
sets the
adds a token to the list of tokens
returns the message that this message belongs to
returns the performative
adds a message node to the
returns the current message to be sent to the server
returns the ontology of the ontology
resume the agent
sets the message to be sent to the server
sets the direction of the arc
sets the msg to which the message is sent
sets the acl for the
change the ownership of the given agent
sets the text of the document
returns the of the message
register the font with the given value
this method is called when the container is destroyed
deletes the current document
sets the enabled state of the read only
kills a
register an aid with the given aid
sets the selected text
shows the about dialog
sets the enabled state of the button
returns the at the given offset in the buffer
saves the current session to the specified container
this method is called when the system system is done
load the
kills the given container
returns the component that is currently selected in the list
register a new object with the field name
this method is called when the user has added the specified event
sets the aid of the
unregisters a string
sets the aid of the
this method is called when the interval is removed
invoked when the focus lost
receives a message from the message
this method is called by the gui to delete the gui
returns the name of the
exit the application
get the for a given aid
shuts down the
sets the
setup the tool
this method is called when the robot enters the
returns the
returns the cancel
returns the request that is sent to the server
returns the description of the filter
shows a status message in the status bar
advances the current time to the specified time
sets the selected text to the given string
deregister a controller
this method is called when the user selects a
returns a connection factory that will be used to create this connection
returns the description of the filter
shuts down the server
refresh the search results

copy the selected text
handles incoming connection
returns the front end of the queue
puts the clipboard into the clipboard
shuts down the server
removes the component from the current session
shuts the connection to the server
refresh the current page
closes the connection
returns the id of the
stops the
returns the properties
shuts down the
shuts down the server
returns the helper for the agent
handles the connection error
encodes the to the given byte buffer
closes the connection

shuts down the server
wraps the api
returns the connection to the outgoing connection
wraps the data
returns the response from the server
returns the front end of the
description of the method
shuts down the server
handle the key typed event by key
called when the connection has been disconnected
this method is called when the server is refreshed
invoked when the mouse has been clicked on a component
description of the method
called when the connection has been disconnected
deregister a controller
description of the method
description of the method
invoked when a key has been typed
get rmi registry
kills the server
handle an incoming connection
description of the method
shuts down the
returns the sslsocket socket factory used by this factory
jbuilder initialisation routines used by jbuilder
returns the component that will be displayed in the jlist
etag the property
sets the relationship between the relation and the relationship
label of the property to be used in the label
title title
sets the where where the object is where the
the value
the entry point for the property entry
the time the is
the name of the property that is used to represent the
the time stamp of the
protege name transparency value
returns true if the property value is read only
the content of the content of the content of the content
the value of the field is
this method is used to set the list of
sets the visibility of the element
a list of extended objects
the
the original event was original
this method is called when the user wants to enter a slot
a list of
the setter for the recurrence
handles commands on the screen
run the worker thread
runs the specified code async code method on the
cancel the current thread
gets the value of the pending property
report a progress progress bar
removes a knowledge source from the model
sets the reasoner component
add a new knowledge source to the knowledge source
updates the factor
sets the component to the new component
adds a new label to the list
returns the label
fires a value changed event
returns the percent of the
returns true if the configuration is a special
updates the current panel with the current panel
this method is called when the panel is activated
returns a string representation of the list of strings
called when the algorithm is finished
add a base directory to the base class
returns the component manager
returns the source of the source
creates a new knowledge source with the given class
setup the configuration file
validate the configuration configuration
validate the learning result
returns a new instance of reasoner
returns the reasoner that is used to compute the reasoner
returns the learning learning algorithm
returns a new learning problem with the given learning class
returns a learning action with the given learning class
returns the algorithm
returns true if the tab at the specified index is the
returns true if the tab is enabled
enables disables the components for the component
returns the form fragment iri
returns the maximum number of
returns the current axiom
returns true if the context is sensitive
returns true if the text area is wrapping
sets the smart indent attribute of the object
sets the wrap lines
returns the component that is contained in this component
when an action is performed editing is ended
when an items state changes editing is ended
returns the graphical coverage panel
returns the shift interval of the shift
returns the shift number of the shift
returns the shift of this concept
returns the shift x coordinate of the shift
removes the panel from the panel
returns the
this method is used to set the trace information
returns the noise noise
returns the maximum execution time in seconds
returns the maximum number of results to be executed
returns the radio button
returns the button that is used to edit the button
returns true if all the are selected
returns true if the user exists in the database
returns true if the current selection is editable
returns true if the value is selected
returns the profile panel
returns the maximum cardinality of the selected item
returns true if restrictions should be checked for the restrictions
sets the selected
shows the given label as a warning
sets the selected
enable or disable more box
this method is invoked when the user selects the
returns the x axis
returns the y axis
returns the name of the individual
returns the circle
writes the of the
returns the individual
this method listens to property changes
returns the suggest class panel
returns the panel panel
mouse pressed method comment
sets the icon
shows the status bar
sets the hint text
resets the
returns the panel that is used to display the current
shows the options panel
returns the add button
invoked when a hypertext link is updated
dispose the
removes all the buttons in the panel
returns the graphical panel that is used to display the
sets the is inconsistent value
returns the is inconsistent value
adds an action listener to the listener
adds an action listener to the button listener
returns the graphical coverage panel
adds an action listener to the button
this method is called by the panel to remove the panel
returns the learner view
sets the visibility of the help button
returns true if the node is a aux tree
clears the given
increment frequency
stops the
sets the days in days
converts the model to a model
returns true if the given filter is filtered from the given namespace
performs sparql sparql query
returns the query as a count
executes sparql query
returns the result of the sparql query
sends a request to the server
stops the execution of the query
returns the sparql query string
returns the value of the json
returns the converter that is used to convert this object to a
sets the converter to be used for this object
returns the
sets the map of the
returns true if the node is
sets the drop
returns a string representation of the given configuration
returns true if the file is
returns true if the configuration is able to be configured to be
returns true if the is
returns true if the given property is a sub property of this
checks if the given description contains the given description
adds a new axiom to the axiom
adds a molecule to the abox
returns the number of nodes in the tree
returns the subtree of the given element
returns the depth of the tree
adds a child to this node
adds a child to the list of children
removes the child
registers a component with the given component
removes a component from the configuration
adds a component entry to the list
sets the sources
resets the statistics for the current thread
frees the component associated with this component
sets the updated value of this object
sets the learning problem
sets the reasoner component
returns the reasoner that is used to resolve the
returns the name of the component
changes the reasoner component to the given reasoner
returns the sparql query for the sparql query
returns the object as a string
returns the manager
clones the chosen description
returns the context for this object
initialize all the reasoner
returns true if the component is a
creates a negative examples from the given result set
makes all the instances of the from the set of values
creates a new instance of the given parallel examples
adds a number to the current
print the current time
print a string
returns the mean of the distribution
adds a new entry to the list
returns the mean of the current value
prints a string
sets the time to the time
resets the time
returns the time in milliseconds since the last time the current time
select the given point in the list
adds a table row to the table
returns the precision for the given number of the current
returns the recall of the given string
returns a string representation of the given tab
returns true if the node is equal to the given node
returns the label of the summary
returns the value associated with the specified key
sets the param
returns the number of elements in the list
gets the
gets the
adds a new tuple to the list of tuples
removes a tuple from the model
returns the root of the tree
computes the level of the tree
adds a level to the level
replaces the old old old object with the new one
extends the given class to be a new one
returns the node at the given position
returns the description of the node
returns the negative position of the last
returns the size of the list
adds a description to the list of descriptions
returns the score for the given node
returns the number of covered examples
returns the number of covered examples
calculates the accuracy of the given accuracy
returns the of the given
calculates the of the given description
returns the
returns the score of the score
returns the addition of the
checks if the execution time limit is reached
checks if the given is too too too many than
checks if the given is too too many
closes the splash screen
returns the task
returns the task
sets the cutoff
returns the tree node
returns the tree
gets the value of the property
prints the tree
gets the value of the property
returns true if the given file is accepted by this filter
returns the description of the filter
returns the length of the task
returns the current position of the current
returns true if the current thread is done
returns the message of the current status of the current
this method is called to go to the directory
returns the task
clears the persistence
search the node with the given name and returns it
search the tree with the given string
prints the node
prints the tree
sets the branch
returns the first node in the tree
returns the number of levels
returns the number of functions in the
returns the current node id of the current node
returns a string representation of the tab
calculates the of the current image
sets the branch
this method is called when the is
sets the cutoff of the node
sets the cutoff
sets the count matrix
returns the
sets the current node
returns true if this is in the current state of the
tests if the given file type is not correct
returns the number of clusters
counts the number of files in the directory
updates the current level
calculates the y coordinate of the y axis y axis
tests whether a file type is a file type
returns the number of clusters
reads the data from the file
tests if the file system type is correct
returns the number of clusters
the file name
tests whether a file type is a file type
closes the splash screen
tests whether a file type is a file type
returns the number of clusters
compares this object with the specified object for order
prints the attributes
compares two
exports the picture
returns the current node in the tree
sets the current level of the current thread
sets the value of the options option
stem the stem of the given stem
returns the ontology list
returns the total number of counts
returns the total number of distinct columns
returns the total number of genes in the
choose a x y x y
excludes the list of the given exclusion list
this method is called when the exclusion list is detected
this method is used to set the of the given list
this method is called when the is in the list of
export the table
update the cutoff of the data
writes the given file to the output file
closes the current data
exports the contents of the file
export the given file to the given file
sets the default column size
inits the display cols
updates the count of all the rows in the table
sets the table to display the table
compares this object with the specified object for order
returns the data component
returns the data component for this file
returns the data node at the specified coordinates
parses the content of the content of the page content
parse the content of the page
returns the modified
resets all the
sets the value of the given column
start the runner
stops the server
returns the applet information
returns the applet information
invoked when the components size changes
returns true if the given node is a parent of the given
returns the resource directory for the resource directory
registers a progress listener for this progress listener
registers a new listener for this gene
registers a new aspect listener
registers a listener for the
registers a listener for this annotation
fires a progress event to all registered listeners
fires an annotation change event
notifies all registered listeners about the event
notify the listeners that the curation sequence is
fires an annotation drag event
returns true if the application is shutting down
returns the top leaf node of the given node
shows the dialog
removes an association between a given and a given
returns the node at the specified location x y and z coordinates
centers the window on the screen
checks if the user is logged in
returns the top leaf node of the given node
returns true if the given gene is
resets the check node
handles the check node check
shows the dialog
creates an image icon
retrieves the user name from the user
returns the name of the system property
returns the name of the user
called when the start of the start and start is started
cleanup the midlet
inits the styles styles
initializes the desktop content
this method is used to create the store
remove a buddy from the list
stores the record store
remove a buddy from the buddy list
add a new buddy to the buddy list
add a record record to the array
resolves the given address
remove a buddy from the buddy list
save the given string to the given string
resolves the given name
load a record from the database
update a buddy list
this method is called by the server to start the
sets the output
creates an instance of the specified line
sets friendly name
run the thread
listen for incoming connections
this method is invoked to indicate the packet that the server is
returns the
gets the
send a packet to the server
stores a friendly friendly name
load the friendly name of the database
creates a new instance of device connector
returns the next message received from the
runs the
creates a default settings for this instance
stores the settings in the given code code
connects to the server
resolves the given address
run the network
resolve a name
this method is used to run the thread
terminates the application
send a new iq message to a buddy
returns true if the animation is still running
updates the record attributes
this method is used to handle the request
checks if the given address is ignored
end application
called when a new device is discovered
called when a search is completed
send a packet to the server
called when the device is completed
returns the string representation of the
gets the address of the address
compares the name of the given buddy
register a new control
reply the next message in the
register a new control
register a new control
get unicast destination
add a new buddy to the buddy list
creates a new
remove a device from the device
receive an error message
sets friendly name
update the friendly name of the mobile device
returns the friendly name of the device
sets the friendly name of the given friendly name
update the settings for the given code code
returns the bluetooth vm
returns the maximum number of connections in the database
returns a debug error message
checks if the given address is known as a known
friendly name of the device
called by the framework when the user receives a
debug message is used to send debug messages to the console
called when the user selects a new one
returns the
called when the screen is removed
update a buddy list
called by the process when a message is received
returns the bluetooth address of the bluetooth device
called when the user clicks on the current task
returns the bluetooth device adress
called when the user selects a removed event
returns the maximum number of connections
send a alert to a specific control
returns a new with the given name
prints the
receive an error message
returns the
called when the user presses the button
creates a new
the
saves the settings to the settings
sends a message to the outgoing message
send a message to the outgoing message
sets the friendly name of the device
handle a update
sets the value of the left menu values
update the settings for the given code code
returns the interface interface with the specified address
remove a control from the list of remote address
sets the statistics
shows the main screen
inherited from superclass
sets the settings for the game
called when the exit is destroyed
this method is used to get the output object
prints a debug message
sets the language
called when the user presses the cancel button
update a buddy list
sets friendly name
sets the font size
send a new buddy message
returns a friendly name for the given friendly name
returns the maximum number of connections
this method is called when the application starts
called when the user presses the current screen
send a alert to a specific
sets the show own messages
returns a new instance of the error code
returns true if the message is a own own own messages
returns the bluetooth address of the bluetooth device
returns the maximum number of connections
sets the value of show join
a error
returns true if the current user wants to be shown
sets the highlight own message
this method is called when a message is sent to the server
returns true if the message is a legal message
this method is used to add a buddy to the buddy
sets the vibrate
gets the value of the vibrate duration property
sets the address of the
prints out the contents of the stack
gets the value of the own bluetooth address property
sets the maximum number of connections
sets the active tab
returns the maximum number of connections
close the tab folder
returns the language of the
returns the language string
sets the watched files
sets the
gets the value of the task type property
returns the last check date
sets the task type
sets the last check date
returns the watched folder
sets the task state
sets the watched folder
returns the watched file state
sets the watched state of the watched watched state
returns a string representation of the object
returns the watched folder
sets the value of the watched folder property
returns the number of watched files
sets the number of watched files
returns the number of files that are watched
sets the
sets the
sets the
sets the watched folder service
sets the watched service service
sets the
sets the financial task service
run the task
sets up the fixture for example open a network connection
test of get files in path method of class files path
test method for
print the bad string
print the string to the console
this method is called when the user presses the end of the
starts the execution of the task
main processing method for the object
adds a value to the end of the list
adds a new value to the end of the list
insert the methods description here
returns the line of the given offset
returns the preferred size of the component
returns the date of the specified date
creates the file help file
returns the reason why the given string is invalid
checks if the given string is valid
returns the reason why a invalid invalid string
load the project
fills the with the settings from the project
loads the project
saves the settings to the current project
load the settings from the current game
sets the value of the value
returns the option object with the specified name
load the
saves the project
constructor for type option
saves the current settings to the current state
sets the value of the given value
validates the value
returns the reason why a given reason is invalid
load the properties from the given project
saves the project
returns the next key value pair
returns true if the given is true
this method is called by the framework to run the
prints the list of
parse the encoding of the given string
returns the progress of the progress bar
returns the file class for the given name
creates a new job
this method is called by the framework when the
returns the dependency
returns the metadata for the metadata
this method will be called by a job to be
this method is called by the thread pool
returns the metadata for the metadata
returns true if the task is ready to be run
runs the
starts the job
returns the metadata for the metadata
runs the
returns the hash hash
returns true if the test run is run
returns the sha1 hash of the
returns true if the metadata is a run of the dependency
returns the number of in the given code number code
returns the metadata for the metadata
checks if the job is run in the project
run the job
returns true if the file is run in the
returns the file that the user can place
returns the next job
returns true if the metadata should be run
runs the
insert the methods description here
returns true if the task is running
returns the metadata for the metadata
this method will be called by a job to be executed
run the test
creates a new code code object from the file
returns the metadata for the metadata
returns the metadata for the metadata
returns true if the task is
creates a new
returns the metadata for the metadata
sets the fallback key
starts the thread
returns an input stream for this input stream
returns the metadata for the metadata
reads the next byte of data from the input stream
sets the calc only
reads the specified byte array from the buffer
starts the thread
notify the job that the job has been
sets the key collision level
returns true if the current thread has finished
sets the collision
stops the current thread
waits until the thread is finished
run the job until the next job has been successfully
creates new thread counter
starts the thread
waits for the thread to wait for threads
release all threads
sets the progress name
returns the progress name
sets the data
gets the value of the fingerprint property
returns the errors
returns the result key
returns true if the collision is a collision
parses the file and returns the file
checks if the given text is a integer

returns true if all the are unreachable
release the instance
returns the reason why the operation is not a timeout
returns the with the specified size
encode a file to a file
a file to be written to the file
returns the value of the specified variable in the specified value
creates a new instance of
returns the port of the server
returns a string representation of the object
returns the host name
returns a list of host list
make a new socket
f0 global theory
f0 global theory
f0 primary key interval
f0 global theory
this method initializes this
this method initializes j content pane
this method initializes j text area
this method initializes drop down combo box
this method initializes j button
this method initializes j content pane
this method initializes j panel input
this method initializes j panel output
this method initializes results main pane
this method initializes algorithm steps results split pane
this method initializes closed form panel
this method initializes panel
this method initializes
this method initializes var rename panel
this method initializes j panel
this method initializes panel
this method initializes panel
this method initializes closed form split pane
this method initializes form text field
this method initializes
this method initializes logic connector reduction text field
this method initializes split split pane
this method initializes s1 text field
this method initializes var rename split pane
this method initializes variable text field
this method initializes j split pane
this method initializes j text field
this method initializes split pane
this method initializes normal form text field
this method initializes split pane
this method initializes text field
this method initializes log text area
this method initializes remove for all panel
this method initializes remove for all split pane
this method initializes remove for all text field
this method initializes j split pane2
this method initializes j scroll pane1
this method initializes log panel
this method initializes log split pane
this method initializes clear log button
this method initializes log area scroll pane
this method initializes j jmenu bar
this method initializes j menu file
this method initializes j menu
this method initializes j
this method initializes j menu item clear history
this method initializes j menu item default example
this method initializes j menu item clear input text area
this method initializes open file dialog
this method initializes open file panel
this method initializes closed form button
this method initializes logic modules reduction button
this method initializes button
this method initializes variable button
this method initializes button
this method initializes remove panel
this method initializes single operations
returns the localized string value
sets the zero lines
sets the fields
sets the
checks if the given list of is
creates a new instance of the code history code instance
returns the current step history
returns the index of the last marker
returns the number of trees in the table
adds a marker to the current position
the
searches for the given tree
removes the given cards from the current turn
prints the horizontal line number
draw the last marker
clears the markers history
sets the gui components
returns the size of the marker history
returns the number of turns in the
searches for the given array of integers in the list of
sets the gui components
sets the gui components
initializes the commands
returns true if the map contains the given array of
sets the gui components
sets the history counter
initializes the commands
checks if the step is still enabled
enables disables the forward button
checks if the current step is reverse
sets the size of the gui
enables or disables the reverse
clears the current status bar
set the enabled state of the play button
enables disables the stop button
refresh the button panel
initializes the commands
sets the gui components
refresh the button panel
sets the label of the marker label
initializes the commands
returns the path to the
initializes the commands menu
enables disables the save button
saves the game to a given game
save the
refresh the texts of the panel
sets the of the board
returns true if the panel is currently editing mode
gets the
initialize the commands
sets the
returns true if the first draw method is drawn
returns true if the game is currently selected
set the first draw draw
returns true if the window is
changes the panel to the given panel
adds a new marker to the end of the list
navigate to the last marker
checks if the player has
change the text of the label
this method is called when the game is won
returns the
forward the step to the next step
sets the
clears the current state of the
clears the
plays all steps in the current play thread
gets the value of the property
rebuilds the clear clear clear clear clear clear clear clear clear
reverse the
sets the
move the current step to the current step
creates a new manager
stops all steps playing all steps
creates a new
returns the
called when the filter is finished
called when the progress bar is done
called when the filter is started
returns the number of lines in the specified array
runs the input stream
interrupts the current thread
returns the toggle button
returns the value of the field
validates the input
this method initializes this
this method initializes this
unregister a adapter
this method initializes this
this method initializes split pane
this method initializes
this method initializes split
this method initializes nome
this method initializes button send msg
this method initializes tf msg
this method initializes file save
this method initializes button draw
this method initializes button
this method initializes load
this method initializes ta logging
returns the expression of this node
resets the timer
returns a column with the given name
clears the index
removes all datasources
inserts a new row filled in the specified position
removes the specified data source from the database
creates the data source
deletes the row at the specified row and returns the value of
sets the value of the field at the given location
registers a new data source
insert a new row in the database
returns the data source
registers a view with the given name
executes the given sql statement
returns a connection to the database
returns a connection to the database
returns a collection of for the given row
frees resources associated with this file
returns true if the current thread is open
returns the temporary file path
returns the strategy for the given adapter
returns the value of the field as a code string code
redo the last operation
undo the operation
sets the selected rows
test that the data sources are removed
test that the data sources is not supported
test that the datasource connectivity is not found
test for
test the union of the
test of select select method of class
returns the string value associated with a key
returns the string value of the given key
returns the string value of the specified key
returns the string value of the given key
notify the cost of the cost of a cost
gets the
process the advertisement
creates an advertisement from the given advertisement advertisement
initialize the
starts the network
run the service
returns the advertisement
clone the advertisement
stops the
this method is called when the is
initializes the components
creates the name of the agent
returns the creature
test of add participant method of class
test of has more participants method of class
test of get next participant method of class
process the advertisement
returns the
returns a string representation of the
test of get method of class
test of get method of class
returns the current hit points
test of get ref method of class edu
test of init method of class
compares this participant with the specified object for order
test of defaults method of class nl
shuts down the server
test of player name method of class
damage a creature
test of description description method of class
creatures in the
test of ability to method of class
returns the zero in bytes of the given creature
test of description method of class
compares this object with the specified object for order
test of weapon method of class moved
initialize the
test of defaults method of class
test of to string method of class org
initializes the solver
test of equals method
test of zero zero method of class
test of method of class net
test of method of class
test of stat method of class net
test of is method of class
returns the modifier for this
test of method of class
test of set size method of class
test of default points method of class
test of is order actors method of class
test of default temporary method of class
returns the stat of the
set the ability scores for the given player
test of set by total method of class
sets the size of the
test of is method of class
returns the of the player
test of get stat method of class
compares this object with the specified object for order
returns the of the
returns the stat of the current
set the value of the
test of is good method of class
test of defaults method of class
returns the
test of get stat method of class

test of get ability method of class land
returns the number of temporary
test of is neutral method of class
test of cap method of class land
send a message to the server
test of dependency method of class
returns the current ability
test of damage method of class
returns the string representation of the current
sets the of the
test of defaults method of class
gets the value of the alt property
a
test of is method of class
test of get stat method of class
test of zero zero method of class
damage a creature
the given
returns the creature for the specified idx idx idx idx idx idx
test of ability score change method of class
returns the zero in bytes of the given creature
sets the shield attribute of the object
set the creature for the given creature
test of default method of class
test of die roll method of class
sets the score for the score
sets the armor value
test of default dice method of class
sets the
damage a creature
creatures in the
returns the current
test of default size method of class
returns the zero in bytes of the given creature
test of method of class
sets the
test of default is method of class
sets the temporary temporary
set the of the
test of default is method of class
test of zero zero land method of class edu
set the
test of default range increment method of class integer
sets the value of the capacity property
resets the
test of default critical method of class pet
test of default weight method of class
returns the current score
test of default description method of class
returns the health of the current
sets the
sets the size of the
returns the number of
sets the
returns the current value of the current ability
sets the
returns the current
sets the
returns the current
sets the name of the creature
returns the name of the creature
sets the name of the player
returns the player name
sets the value of the hit points
returns the current number of points in the current
returns the number of health points
get the hit
sets the value
sets the
sets the value of the cap
sets the
returns the
returns the
set the for the given
sets the total bases of the
returns the
returns the current value of the current
returns the number of elements in this set
sets the level of the current entry
sets the of the
returns the current level of the current
returns the current hit
sets the total number of points in the
returns the current number of points in the current
sets the
sets the
sets the
sets the
sets the name of the attribute
sets the creature class
sets the race
sets the other info
sets the size of the creature
sets the size of the creature
sets the speed of this
returns the name of the resource
returns the creature class
gets the value of the race property
returns the speed of the game
returns the weapons weapons
returns the weapon at the given index
adds a weapon to the list of weapons
returns the random pair of the vertices in the graph
convert an object to a java object
this method is used to publish a new object
this method is called by the system
evaluates the operands of the operand
creates the
encode the given rational number
initializes the bucket
puts a new key value pair into the dictionary
puts a key value pair into the map
puts a string value into the current context
puts a value in the current value
puts a value in the current value
puts a key value pair into the map
returns the string representation of the specified key
returns the value of the specified key as a int
returns true if the bucket can be split at the end of
returns the length of the longest common prefix of the given
returns the value stored under the specified key
purge the database
a simple class to be empty
reads a string from the input stream
writes the socket address to the server
called by the timer when the user has done
prints an error
prints an error
returns the current time in milliseconds in the specified socket
close the socket and disconnect the client
disconnect from the given
this method is called to create a new state
deletes a request
returns the clients list of the rooms
initializes the request state
opens a new new request state
request the request to send a request to the server
send a message to a server
process a new request
deletes the specified request state
process synchronous processing request
process connection closed
this method is called when the server wants to be
sets the policy to be used for
process the process report
notify all the that the user has been made
sends a sync complete message to the server
returns the length of the header
sends a to the server
dump the object to the specified output stream
sets the data
returns the length of the
send a data packet to the server
dump the object to the specified output stream
send a data to the server
returns the length of the header
returns the request type
returns a string representation of the exception
send a data packet to the server
dump the object to the specified output stream
sends a packet to the server
dump the object to the specified output stream
dump the object to the specified output stream
send a data packet
sets the ip address of the host
returns the host name of the host
returns the ip address of the address
returns true if the header is set
returns the
sets the
sets the data
returns the length of the
sends a data packet to the server
dump the object to the specified output stream
sends a to the given server
dump the object to the specified output stream
returns the length of the
returns the error code
send a data packet to the server
dump the object to the specified output stream
returns the command
sends a data packet to the server
returns the
sets the command
send a data to the server
returns the string representation of the type of the
returns a string representation of the command
returns a string representation of this code code
sends a data packet to the server
dump the object to the specified output stream
dump the object to the specified output stream
returns the address of the address
sets the address of the address
send a data packet
dump the data to the specified output stream
sets the ip address
returns the host name of the host
returns the address of the ip address
this method is used to parse the contents of the buffer
returns the length of the header
sends a data packet to the server
returns the for the
sends a data to the server
dump the data to the specified output stream
adds the given header
adds the given object to the list of
add an object to the database
set the length of the
adds the given header
adds the given object to the
adds the given object to the
adds the given object to the
sets the length of the header
adds the given header
adds a new object to the list
adds the given object to the
sets the length of the header
the
send a message to the socket
removes a client table
close the socket and disconnect the client
send a message to a server
sets the status of the sync server
initializes the socket
sends a request to the server
the
reports a new message
report a success of the report
this method is called when the user selects a
notify the closed connection that the connection has closed
this method is called when the user selects a
process connection closed
notify the closed led
process the policy
this method is called to notify the server that the server has
process the request delete state
this method is called when the server is destroyed
delete the request state
sends the request to the server
opens a new request state
notify all registered listeners of the of the game
closes the socket
write the socket to the server
creates figure for this edit part
creates palette tool group
this method is called by the thread
sets the listener to be notified of events
initialize the input stream
sets the new ui delegate
sets the listener that will be notified of changes to the listener
construct a private message from a message
returns the channel with the given name
create a new channel chat channel
sets the channel topic
this method is called when a channel is destroyed
this method is used to send a udp packet
adds a new element to the list
check if the given ip is valid
returns a list of the list of the current
returns true if the given command is a malformed command
updates the icon of the icon
clear the feed
load the url from the given url
executes the command
opens a new file
close the file system
append a string to the log file
this method is called by the thread to run the thread
executes the command with the given command
adds a row to the table
displays the current page
start process windows
sets the cell at code row code
check if the file name is a file
this method is called by the reactor to handle the command
start the server
sends a command to the server
connect to the server
called when a new device is discovered
called when a device is discovered
called when the inquiry is completed
executes the given command in the table
this method is called when the service discovery is discovered
executes the command
this method is called by the
executes the given command
returns the device name
invoked when an action occurs
updates the selected tab
save the selected properties to the file
creates a new api
adds a new tag to the table
adds a new api to the database
this method is called by the application
get the value associated with the key
gets the value of a property
get the integer value of the given key
logs a error
this method is called by the server to connect to the device
returns the delta time of the current time
connect to the server
reads the device from the server
closes the connection
sends a command to the server
shuts down the application
shuts down the application
updates the icon of the icon
open a file
returns the xml representation of this object
load the url from the given url
executes the command
this method is called by the server to execute the command
sends a channel to the output channel
check if the ftp url is a valid ftp server
start the server
add a theme to the list of
update the selected tab
executes the command
saves the selected properties to the file
creates a new api
adds a new api to the database
initializes the framework
get the value associated with the key
gets the value of a property
run the device
returns the integer value of the given key
write the of the
reads device information from the device
enables disables the info
sets the debug flag
kills the device
kills the device
shuts down the server
shuts down the application
increment the number of the current pool
load the command line
returns the name of the specified element
checks if the name of the given name exists in the database
returns the info for the specified index
returns a string representation of the object
make a path to the end of the path
throws an error thrown if the parameter is invalid
show the header
writes the dump of the file
opens a file file
reads the line from the file
closes the input file
returns the index of the smart component
replaces the string with the given string using the given pattern
add a line to the
returns true if the given string is a valid
returns true if the given string is a legal value
returns the line number of the input file
returns the file name of the line
make a path valid for a path
checks if the given macro name is found in the macro
strips the name of the given string
strips the string from the given string
creates a file
closes the file
writes a line of the given string
checks if the given string is a
prints the string
print a string and then terminate the line
this method is called when the user selects a
returns true if the current location is running
adds a new feed to the
removes a from the list of feeds
adds a new to the rss feed
removes a object from the list of
build the columns
returns the layout
build the listeners
build the menus
removes the given item from the list of items
sets the subscription subscription to the subscription
sets the selection state of the widget
sets the subscription selection listener
called when a new playback is changed
check if the given track is valid
connect to the server
disconnect from the server
disconnect from the server
stops the thread
get the condition for the given condition
returns the password for the user
creates a new instance of snmp
check if the user is authorized to login the user
sets the request to be used as the target
returns the request object for the given request
returns the next request from the database
returns the login
deletes a given group
writes the document to the xml file
creates a new group
delete security group
gets the html for the selected roles
returns the user defined user
connect to the server
finds the user type by its login
initialize the table with the specified table
finds the user type by its id
adds a user to the database
modify the user attributes
returns the role of the user
finds the role by name
finds a role by its id
add a role to the role
modifies the role name
find scope type
find scope by id
adds a scope to the scope
returns the list of granted permission
returns the reference permission for the given user
builds a dom document from a dom tree
finds the permission type by its id
build base element
adds a element to the end of the element
returns the session
returns the session id of the user
find a session by its id
deletes the session from the session
this method is used to retrieve the role of a user
returns the role of the role
generates a unique id for the user
begin uml doc
this method is called when the end of the end of the
adds the given undoable edit to this editor
validate the parameters for the given request
validates the parameters of the given parameter
returns a rendered image with the specified page as a rendered image
decodes a rendered image using the specified page
sets the calibration
returns the image that is currently selected in the tree
sets the calibration
returns a rendered image with the specified page as a rendered image
returns the image that is currently selected in the tree
returns the image that is currently selected in the tree
returns the rotation of the camera in the camera
returns the name of the format
returns the mean of the distribution
returns the covariance value of the covariance
returns the of the given
returns true if the header is recognized as a header
sets the x coordinate of the given x coordinate
sets the y coordinate of the given y axis
sets the z coordinate of the specified coordinate
sets the of the given value
sets the value of the specified rgb values
sets the value of the specified rgb values
sets the blue component of the given value
a
sets the rgb value of the specified color
returns the neighbor of the neighbor
returns the neighbor of the neighbor
returns the neighbor neighbor of the neighbor
returns the median of the size of the
returns the neighbor coordinate of the neighbor frame
returns the blue value of the given sample
returns the green component of the specified rgb coordinate
returns the red value for the specified rgb value
returns the minimum value of the
returns the image that is currently selected in the image
returns the minimum red value for the current
returns the minimum green value of the
returns the minimum value of the
returns the maximum number of red
returns the maximum green value of the
returns the maximum value of the
returns the mean of the
returns the covariance value of the covariance
returns the mean of the
returns the covariance value of the
returns the mean of the
returns the covariance value of the covariance
returns the mean of the
returns the covariance value of the
returns the x coordinate of the given coordinate
returns the y coordinate of the given coordinate
returns the z coordinate of the specified vertex
returns the camera position
returns true if the given point is a noise
returns the calibration block
returns the type of the attribute
sets the policy url
puts a user data in the database
returns a request object that contains oauth token
returns the access token
sets the access token
returns the request token
returns the user id of the user
returns the server
get the user object
get the value of a person
returns the friends of the friend
returns the friends for the given index
sets the access token
generates a url for the request
generate a url for the request
get the global application data
get global global data
puts global data into the context
execute a request and return the result
clears the current global application data
puts a new security data into the application context
get app data from user id
get app data from user id
clears the application data
get the user friends app data
get the user friends
get a user object from the user id
get the value of a user id
get indicators for a user
returns the object for the specified user id
get albums
get an from a user
get the album with the given id
get the album id for a user
get the album info for a user
get friends friends
get friends list
get friends list
get
get the mood
get
get a list of photos for a user
get the photo with the given id
retrieves the profile object for the specified user id
get the profile object for the given user id
get status of a user
get the status history for the user
post a new status to the user
post a mood
sets the mood
sets the status of the user
sets the mood
get friends status
get
get the video video
returns the of the given user
returns the of the given user
returns the of the user who wants the user
get the of the user who has the same id
returns the portal
sets the portal
sets the start column
adds a new column to the table
adds a new header to the table
returns the column of the portlet
returns the index of the portlet
inserts a new object into the model
inserts the given code header code into the code code
removes the specified code column code from the specified
sets whether the scroll should be automatically
sets the width of the specified column
sets the spacing between the components
adds a subtask to the task list
returns the of the bean
generates the
creates a new getter for the given bean
writes the url to the file
prints the license info
strips the version number from the given file
validates the module
this method is used to start the of the given resource
this method is called by the reactor to start the
returns the time difference
move the given code move code to the specified size
tests this object for equality with an arbitrary object
compares the specified object with this object
tests this object for equality with an arbitrary object
begins a transaction
this method is called when a transaction is ended
compares the specified object with this object
returns true if the transaction is in the transaction
reset the transaction
returns the session
this method is used to update the object
this method deletes the object from the database
creates a new channel
returns a string representation of this object
returns a hash code for this object
returns a string representation of this object
returns the session
returns a session
sets the connection
reload the channel group
reloads the item from the database
returns the number of indexed items in the list
returns the number of hits in the result set
returns a string representation of the object
returns the hash code of the current object
returns the ttl of the
notify all observers that the item has added to the list
process the given record
notify all registered listeners of the change of the channel
creates a new worker thread
the channel
called when a channel is changed
called when a channel is started
called when a channel is finished
reads the specified byte array from the specified array of bytes
returns an input stream for the given channel
sets the canceled status of the task
returns an input stream for the given url
check if the record is in process
sets the queue
schedules the given record to the scheduler
this method is used to execute the process
the given url
returns the record
resets the model to its original state
increment the given channel
checks if the is
returns the format detected
this method is called when a is
notify the observers of the specified channel
notify all observers that the given channel has finished
check if the given item is a valid channel
called when a finished
adds a new to the list
removes a from the list
creates a new worker thread
creates a new group
deletes a group
update the group
returns the ttl for a given channel
returns the ttl for a given channel
updates the channel with the specified channel
update the item
returns the ttl of the given channel
returns the time to expire
returns a hash code for this object
returns true if the date is a date
returns a string representation of this object
notify all observers that the item has added to the list
sets the minimum delay in seconds
returns the number of items in the specified channel
notify all registered observers that the channel has changed
interrupts the thread
this method is called by the thread to stop the thread
adds a channel to the channel
adds a channel to the channel
returns the channel builder
returns true if the feed contains the given uri
handle the channel change
returns the channels
adds a feed to the feed
removes a feed from the list of feed uris
returns the feed with the given uri
removes a channel from the channel
returns true if the channel is active
returns the time of the given channel
update the frequency of the given period in minutes
sets the number of errors allowed
sets up the fixture for example open a network connection
test
test that a new empty group is empty
test that a channel group has a channel
test the add delete method
test the channel membership
creates a new threads
test the start of a group
clears the channel groups
create the scale channel group
adds the channels to the group
restore the groups of the current group
removes a channel group from the group
run the given
adds a new channel to the channel
sets the active
activates the deactivate processes
deactivates all the
get the db
copy files to the destination file
close the database database
this method is called when a item is found
called when a channel is changed
returns true if the item can be added to the given channel
generate a pvs for the specified channel
returns the name of the testcase
returns the persistence manager
initializes the logging of the priority
creates a new group
updates the group with the specified group
deletes a group
create a new channel
updates the channel with the specified channel
adds a channel to a group
removes a channel group from the group
this method is used to handle the event
creates a new
creates a new
updates the item with the given item
removes the specified item from the list
test delete group
called when a new item is added to the model
this method is called when the user selects a polling
test creating a channel
called when a new item is added to the model
test that the version of the file is not
returns a string representation of this object
returns a string representation of this object
tests the
runs the
returns true if the exception has failed
returns the item at the specified index
adds a new item to the list
returns true if the channel id is equal to the given channel
this method is called when the channel is activated
this method is called by the channel manager to indicate that the
returns the format of the
initializes transient fields
creates the main frame
sets the guide
sets the selected channel
invoked when an action occurs
sets the selected channel
returns the currently selected channel guide
returns the element at the specified position
returns the item at the specified position
sets the registry
returns the channel
sets the channel
returns the global model
returns the channel tree
sets the channel tree
returns the channel tree model
action to perform the action
handle the selected channel
p locate stats for a given feed
this method will be called to select the action for the given
sets the channel to be used for the channel
returns the channel that is currently being used to display
get the model for the
returns the stats for the given channel
returns the channel item list model
sets the detail view
sets the database connection state
returns the view detail view
open a connection to the database
run the current thread
this method is called when a channel is
returns the main gui component
sets the graph
initializes the column width
adds a node to the graph
removes the given node from the graph
removes all nodes from the table
change the node to the given node
this method is called by the
check if the hash code is unique in the database
stops the filter
creates a new code map cell code object
sets the user detail access user
sets the dao dao implementation
check user login
sets the value of activity log dao
sets the employee manager
sets the time card dao
sets the dao dao
sets the site dao
returns the employee for the specified employee id
save member to the database
validates the given member
saves the employee to an existing employee
the employee
save the site
this method is called when a new employee is made
validates the site
validates the employee
returns the activity at the given id
saves the activity
validates the activity
returns the value of the code property
creates a new instance of ticket queue event
returns the ticket queue
returns the incident
returns the value of the property
returns the attachment
creates a new instance of contract
creates a new instance of contract
creates a new instance of project name
action listener for exporting
creates a new empty
creates a new instance of the object
creates a new instance of bug
creates a new instance of the main tab panel
creates the panel containing the
creates a new progress message
returns the splash window
returns the progress bar
increases the value of the counter
this method is called by the thread
resets the window to its initial state
sets the maximum number of progress bars
sets the label
sets the new value to the specified
quits the application
creates a new frame
creates a new panel with the given panel
creates a new status bar
returns the project group
returns the project name
creates a new status bar
notify the status of the player
displays the status of the current status
creates a new empty panel
returns the text of the current user
resets the status of the message
returns true if the is
returns the text of the current user
returns true if the text is currently resets the status of the
this method is called when the user selects the
this method is called when the game is destroyed
creates the panel that displays the message
creates the panel for the up panel
creates the optional incident properties
creates the controls for the panel
creates a new code transport exception code object with the
creates a new webservice with the specified url
creates a new instance of the server
returns the url of the endpoint
this method is called when the user hits a added event
process the given request
returns the url of the endpoint
this method is invoked to distribute a ticket
returns true if the server is ready to distribute a distribute
checks if the ticket is
checks if a ticket is
creates a simple ticket writer
creates a new simple ticket writer
returns the url to the
creates a new mail instance
adds a new code student code to the given ticket
creates a new mail instance
returns the row for the given key value pair
process a ticket removed event
adds a header to the given ticket
adds a file to the given ticket
processes a ticket added event
this method is called when the user hits the event
gets the value of the distribution trigger property
this method is called when the user hits a added event
process a ticket changed event
checks if a ticket is
creates a new instance of exception
creates a new instance of exception
creates a new instance of exception
creates a new code distributor event code instance
this method is called when the game is destroyed
creates a new instance of incident
returns the next long identifier
adds a listener to the list of ticket events
removes a listener from the list of listeners
fire a event added event
fire a event to all registered listeners
notify the listeners that the attachment has changed
this method is called when a incident
creates a new instance of ticket
notify the listeners that the given has been
removes the incident incident
returns true if the key is a base property
test the
sets the property value
creates a new instance of the given ticket pane
add a new incident tab
removes the specified incident
returns the index of the specified incident
this method is called when the user hits the incident
called when a new incident event has been added
this method is invoked when a change in the ticket has been
this method is called when the user has changed
called when a new has been added
this method is called when an attachment has been removed
constructs a new instance of this exception
updates the ticket with the specified ticket
returns the column name
returns the most specific superclass for the specified type
creates a new instance of a code ticket table code
this method is called when a user has changed
this method is called when a ticket is removed
listens for a ticket
creates a new instance of the event queue table
returns the column name
this method is called when the user hits a added side
updates the ticket
this method is invoked when a user changes
removes the specified worker queue listener
returns the ticket at the specified row number
process the given request
returns the most specific superclass for the class
creates a new instance of the exception queue table model
creates a new instance of code ticket queue table code
updates the ticket
invokes the code remove event code method of the
p notification that a specific event was added
notify the view that the incident has been removed
adds a listener to the queue of listeners
sets the value at the specified location
removes the specified worker queue listener
creates a new instance of the code ticket table renderer code instance
creates a new incident table model
updates the incident
sets the queue to the given queue
returns the number of rows in the table
creates a new code incident table code instance
this method is called when a new attachment has been added
creates a new empty table renderer
this method is called when an attachment has been removed
this method is called when the incident has been changed
creates a new object with the specified directory
creates a new instance of
returns the url of the url where the is located
this method is called when a new attachment has been added
this method is called when an attachment has been removed
this method is called when the user hits the incident event
this method is called by the event listener
this method is called when the incident has been removed
handle the event that the ticket has been added to the ticket
this method is invoked when a ticket is changed
removes a ticket from the ticket
process the given request
deletes all files in the directory
returns the attachment index
create a new instance of the ejb create instance
create a new ejb instance
create a new ejb instance
this method is called when a jms message is received
tests if a given file is accepted by the user
this method is called when the user logs in
tests the user
tests the user
perform the
creates a new instance of ejb ejb
returns the application configuration
starts the job
stops the job
returns the cron tab
sets the cron tab
login to the login context
logout the user
perform the login
this method is called when the project is deleted
remove the ejb object
this method is called when the user selects the server
perform the
returns the number of recipients of the recipients
perform the login
logs the current report
logs the current user
setter for property root
adds this comp to the current state of this container
add an error listener to the dialog
clears the session
returns true if the given key is already available in the database
returns true if the server is already deployed in the database
returns the number of services in the pool
returns an enumeration of the keys in the session
returns an enumeration of the service objects in this service
returns the url of the server
returns a string representation of this object
clears the cache
puts a key value pair into the database
returns the associated with the given key
removes a key from the cache
returns true if the server with the specified key is already present
checks if the server is already in the list of
returns a server with the given name and port
creates a new service record
get service by name
this method is used to remove a service from the pool
convert the protocol to a string
returns a server name for the given server
convert a service name to a service name
convert a service to a service
removes the entry from the list
returns the
returns a string representation of the service
returns a string representation of the service
returns a string representation of this object
notify listeners that the busy state has been busy
notify listeners that the task has been paused
returns the value of the specified attribute
returns the event id
compares the specified object with this object
gets the value of the user profile name property
adds a property change listener to the listener list
returns the hash code for this object
adds a vetoable change listener to the listener list
initialize the user
returns the name of the user profile
sets the user profile name
returns a string representation of the object
returns the system
p destroy p
returns the time to expiration
returns the name of the user profile
get the version of the version
compares the specified object with this object
returns true if the current time is still still still still still
removes a property change listener from the listener list
refresh the server
removes a vetoable change listener from the listener list
sets the credential
sets the system
swap the
compares the specified object with this object
returns the hash code for this principal
sets the handle attribute of the object
sets the handle to the property
returns the timeout interval in seconds
this method is called when a connection is connected
called when a connection has been disconnected
this method is called when the server is destroyed
this method is called when the user releases resources
returns the
stops the refreshing
returns a string representation of this object
returns the type of the token
returns the hash code for this token
returns the extended info
destroy the service
sets the extended info
this method is called when the server is destroyed
returns true if this type is
returns true if this type is a reusable type
sets the token to the given code byte code
returns the time to expiration time
refresh the current interval
sets the interval between the time the interval
sets the token
refreshes the current state of the
sets the principal
sets the system
sets the type of the token
swap the
returns a string representation of the interval
sets the start date of the event
sets the ending date
returns the ending date of the last date
convert a date to a string
returns a connection to the database
returns a clone of this object
creates a new instance of
returns a clone of this object
creates a new instance of
creates a new instance of
sets the concurrent access resolution
creates a new code struct code
retrieves the binary blob
creates an array of array of objects
creates a new code struct code
get the job identifier
initializes the refresh threshold
disposes of the token and removes the
returns true if the current session is refreshing
returns the system
returns the default property value
returns whether or not the specified data mapping is allowed to be
deletes the object from the database
sets the concurrent access resolution
this method is called when the end of a path is found
a
the of the
this method is called when the
handles a
creates a new code code object
creates a new instance of
sets the user filter
returns true if the bidi should be collapsed
sets the expand
returns the time in milliseconds to use in nanoseconds
returns true if the is empty
disposes the internal resources
convert the given java string to a java
returns the text for the given string
processes the request
sends a message to the server
returns the maximum number of rows that are allowed in the
returns the time to expiration
swap the
sets the designated paramater to the given value
creates a new proxy object
adds a listener to the list of listeners
adds a vetoable change listener to the listener list
removes the listener from the list of certificate listeners
removes a vetoable change listener from the list of listeners
returns true if this object can be used to be used
sets the layout attributes
sets the value in the column index
sets the designated columns index to the given column
sets the designated column in either the current row or the insert
sets the designated column in either the current row or the insert
sets the native type
process the
returns a clone of this object
sets the queue filter
returns the job identifier
sets the peers of the robot
returns true if this object is able to be used in the
creates a new
sets the threshold for the balance
creates a new client with the specified client
returns a clone of this object
creates a new code struct code
clears the current operation result
returns a binary stream that is used to write the data into
returns the name of the user
returns the default action
returns the value of the property or null if not found
returns the text of the item
removes a property change listener from the listener list
returns the child at the specified index
returns the value of the property or null if not found
clones the document
returns the value of the property
returns true if the program is currently running
returns the value of the specified attribute
returns the index of the event
begin uml doc
returns true if the last element is last in the list
returns the direction of the
returns the language of the document
sets the direction
sets the language
sets the system
returns the icon for the specified icon
returns the share name of the share
returns the share path of the share
sets the share name
sets the share path of the share
sets the pattern matching the pattern
returns the share path of the share
sets the share path of the share
sets the share name
handles the action event
returns a string representation of the
returns the header length
returns the next header
returns a string representation of the filter
returns the header length
returns the next header
returns a string representation of the object
returns the address of the packet
returns the data in the data buffer
returns the packet
sets the color of the
returns the number of
returns a copy of this bit
returns the
returns true if the bit is in the specified bit
returns the of the given bit as a byte
returns the time
returns the size of the
get the type of the record
returns the number of bytes in the data
returns the
returns the status of the
returns a string representation of the object
shifts the buffer at the specified position
returns the
returns the next header
returns the field type
returns the
returns the code
shifts the buffer at the specified position
returns the checksum of the checksum
returns the next header
returns the header length
returns the
returns a string representation of the object
returns the target
returns the destination of the destination
returns a string representation of the object
returns the length of the routing
returns the identifier of the current
returns the sequence number of the current sequence
returns a new bit slice of this matrix
returns a string representation of the object
returns the header length
returns a string representation of this object
returns the
returns the header length
returns a string representation of the object
returns the maximum response delay
returns a string representation of the bin
returns the address of the address
returns true if the tcp transport is
convert a string to a string
add a button to the panel
convert a string to a bin
convert a string to a string
returns the of the
handles the action event
returns the octet byte to be used for this object
creates a string representation of the given string
returns a string representation of the object
returns a hex string representation of the given
returns the header length
convert a string to a hex string
returns the port of the source
returns a string representation of the
returns the port of the remote host port
returns the header length
the
returns the sequence of the sequence
returns the of the
returns the version of the version
returns the class name of the
returns the number of in the ack
returns the label for the
returns a long value of this object as a long
returns the payload length
returns the offset of the data in the data source
returns the next header name
returns a string representation of the filter
returns the hop limit
returns the
returns the src address
returns the value of the
returns the destination ip address of the destination
invoked when a window is in the process of being closed
returns the
returns a string representation of the filter
returns the
returns the start of the data start
returns the bytes read from the stream
returns the length of the header
returns the type of the field
gets the type of the frame
returns the thread
returns the
sets the thread
returns the mac address of the
returns the type of service
returns the
this method is used to send a to the routing
returns the thread that this job belongs to
returns the
returns the header length
sets the thread to use for the thread
returns the
returns the
returns the name of the class
returns the route length of the route
returns the total length of the
returns the
returns the header length
returns the mac address of the
returns the hardware type
returns the identification of the
returns the
returns the protocol used by this protocol
returns the mac address of the
returns a string representation of this object
returns the flag that is used to display the
returns the length of the hardware
returns the mac address of the mac address
returns a string representation of the filter
returns the window
returns the length of the protocol
returns the
returns the mac address of the
returns the string representation of the
show the previous page
returns the opcode of this instruction
returns the fragment offset of the fragment
returns the payload of the
returns the
returns the checksum for the current checksum
returns the hardware address of the
returns the payload of this packet
returns the frame type
returns the
returns the time to live
returns the
returns the mac address of the mac address
returns the address of the destination hardware
returns the mac address of the
returns the
returns the options
brings the front to the front
returns the info
returns the
invoked when a key is pressed
returns the checksum header
returns the option
returns a string representation of the object
returns the frame type
invoked when a window is in a component
returns a string representation of the filter
returns a string representation of the object
returns a string representation of this object
returns the maximum segment size
closes the dialog
returns the target address of the target
returns the prefix to be used for the
returns the string representation of the data
returns the packet
returns a string representation of the filter
sets the
sets the
returns the size of the segment
sets the port
invoked when a key has been pressed
returns a string representation of the object
sets the value of the code broadcast code property
returns the length of the header
returns the router of the router
sets the start time of the task
returns the next header
returns the
returns the header length
returns the override of the override
returns the
sets the end time of the
returns a string representation of the object
returns the length of the string
sets the progress
handles the action event
returns a string representation of the object
adds a banner to the end of the end of the end
updates the progress bar
returns the
returns the thread that this thread is running
returns the property
sets the thread
returns a string representation of the filter
returns the
returns the port of the server
returns the
returns the data of the
returns the thread that this job belongs to
returns the time in seconds to be used for the
returns the broadcast
sets the thread to use for this thread
returns the preferred life time
returns a string representation of the filter
returns the start time of the
returns the
returns a string representation of the object
returns the prefix of the prefix
returns the end time of the
returns the header length
returns a string representation of the object
returns a string representation of the object
returns a string representation of the
returns a string representation of this object
returns the progress of the progress
returns the current hop limit
returns the pointer to the current pointer
returns the next header
returns the
returns a string representation of the header
returns the number of records in the database
closes the dialog
returns the
returns the time of the router that the router is
returns the time in milliseconds between the time
returns the timer
returns the title of the
sets the filter properties
returns true if the data is invalid
finds the
returns the number of bytes in the database
sets the output file
copy the current state of the current object
adds a result set to the result set
returns the trace description
clears the text
sets the file to be used for reading
returns the
cuts the selected text
sets the system
returns the type of the object
pastes the clipboard into the clipboard
returns the protocol
handles the action event
returns the size of the
returns the direction of the data in the
returns the full stop
returns the save menu item
returns the start bytes of the message
returns the close menu item
returns the ending string of the last bytes
returns the find menu item
returns the controller name
returns the copy menu item
returns the user data
returns the clear menu item
returns the
returns the cut menu item
returns the name of the
returns the mac address of the
returns the paste menu item
returns the
returns the next button
returns the
returns the previous button
opens a file path to the file
returns the
returns the length of the write data
returns the
returns the frame that is currently displayed in the frame
returns the attribute info
returns the offset of the write
returns the length of the byte array
returns the number of
returns the data to be encrypted by this object
returns a new data object representing the encrypted data
gets the value of the property
returns the
returns a new validation list object
gets the attrib entry struct attribute of the object
returns a validation list object
initializes the
returns the length of the data
sets the attribute info
returns the data of the data
returns the
sets the data to encrypt the data
sets the encrypted data
returns the rec from file
sets the
sets the data
returns the status of the
returns the maximum value length of the value
sets the
returns the int value of the file
returns the start time of the file
sets the data attribute of the object
sets the identifier value
returns the stop time
closes the program
sets the location of the location
sets the maximum length of the value
format the
creates the path
returns the number of collected uploads
delete the current file
returns the maximum frame length
get the next frame
returns the entry with the given identifier
returns the maximum frame of the user
returns the length of the attribute
returns the length of the native call
sets the attributes
convert the given byte array into bytes bytes of the buffer
returns the channels
returns the length of the byte array
returns the
returns the description of the current item
returns the read offset
returns the wrap
returns the number of
this method initializes list info list
returns the timer for the
reads the contents of the stream
returns the length of the write data buffer
returns the offset of the current
returns the type of the
sets the message list
returns the
returns a string representation of the list
sets the classpath
returns the path to the
sets the wait for
sets the bytes
sets the optimization of the optimize algorithm
sets the
this method initializes
sets the internal code options code
sets the optimization level
convert the byte array into bytes bytes bytes
returns the number of records in the
returns the prolog
removes a program from the program
runs the command
returns the id of the
sets the path
returns the hash code of this code code
convert a date to a string
sets the bidi bidi string
returns the bidi bidi bidi string
dispose of the subject
frees the resources associated with this object
retrieves the base type of the current base type
returns the current object
returns a result set holding the result set of the given result
returns a new array value from the list
returns a string representation of this object
refresh the current session
sets the refresh status of the server
returns true if the profile is empty
dispose of the credential
returns the string representation of the profile
returns the result of the
sets the time out
returns the timeout value
cancels the job
returns the schema name for the database
sets the schema
returns true if the query timeout is null
returns true if the datastream is
sets the of the
end the current thread
returns the server version number
creates the meta model objects for the package
creates a new adapter for an object of class
creates the meta model objects for the package
this just records the information
create a new model
returns the label for the specified type name
this adds a property descriptor for the title feature
this adds a property descriptor for the source feature
this adds a property descriptor for the type feature
this adds a property descriptor for the id feature
this adds a property descriptor for the name feature
this adds a property descriptor for the owner feature
returns the root adapter factory
sets the parent adapter factory
adds a listener to the list of listeners
removes a listener from the list of listeners
notify listeners that the notification has changed
disposes the provider
this adds a property descriptor for the name feature
handles activation of the editor or its associated views
sets the fixture for this domain test case
returns the fixture for this domain test case
sets the fixture for this content test case
returns the fixture for this content test case
returns a diagnostic describing the errors and warnings listed in the resource
this accesses a cached version of the property sheet
sets the mime type of the mime type
returns the window
returns the tree viewer
sets the thread search
returns the current thread search
searches for a search
sets the model to the table model
sets the class attribute of the object
sets the attribute of the field
sets the attribute with the specified field
ignore the given field
ignore the given field
ignore all the fields of the given class
the given primitive type
the given primitive
starts a new region
aborts the region of the server
wait for a server to wait for a server to wait for
joins the cluster
shuts down the cluster
the
returns the server at the specified address
test timestamps of the
test that the table with no tables are not found
test
ensure that populator contains variable sequences
tests the
sets the row to the given row
sets the column text
sets the timestamp
sets the value of the given
test the log rolling
tests the is deleted not deleted method
test
checks the of the given region
get the region info for the current
test of scan method of class org
test of scan and method of class
test of get from method of class org
this method is called when the is
this method is called when the is
the thread and returns the next cluster
test that the table contains a table with the same
tests the transform of the transformation
closes the scanner
test method for
tests the equals method
tests the equals method
tests the equals method
tests the equals method
test hash code method
tests that the hash code passes the primitive hash code
test the hash code method
test of serializable method of class org
test the interpreter
test that the compression method is called by the
test the data of a table name
test the multi table multi table multi table
creates a new table descriptor
remove a from the database
test the ability of the
test the server
returns the number of regions in the server
test stopping the of the
tests the page size of the page
serialize an instance restore it and check for equality
test of stop method of class
test that a filter works with a single filter
update the metrics for the specified device
adds a new cluster to this node
adds a new cluster to this port
removes a node from the list
removes a specific port with a given name
delete a table
shuts down the server
delete the given table
process a path head
get the specified path
returns a response
returns a specific path to the specified path
returns the specified response
deletes a path from the repository
deletes a data from the cluster
adds a row to the table
adds a column to the table
adds a dead node
adds a table to the table
adds a region model to the list of regions
adds a new attribute
adds a cell to the model
returns the value of the specified attribute
adds a column family to the model
returns the column family model for the given index
invalidates the maximum age of the cache
returns the number of runs in the
begins a transaction
get the transaction state for the given transaction
aborts the transaction
creates a new indexed table object
remove a index from the table
returns the key generator key generator
returns true if the specified key is contained in the table
checks whether the given index is in the list of
put a put transaction
creates a group with the specified key
gets the value of the region location property
restart the scan
commit the transaction
start the scan
sets the
sets the scan attribute of the scan object
returns the table that is used to render the table
sets the table to be used for the
returns the scan attribute
sets the table record reader
stops the client
initializes the methods for all the methods
update the metrics for the metrics
sets the compression type of the compression type
adds a family to the list of
adds a column to this element
add a column to the
adds a new scan to the table
adds a column to the table
enables the table
sets the time of the time interval
sets the start row for the given row
sets the stop row
sets the maximum allowable versions
sets the caching caching value for this
sets the filter for the filter
sets the filter
sets the family map
get a table by name
returns the table with the specified name
puts a table in the queue
returns the row filter
sets the close
returns the caching caching value
sets the cache block
adds a family to the map
returns the cache flag
adds a new column to the set of elements
returns the columns that are contained in the table
sets the time stamp of the given time
returns the maximum allowable number of versions
sets the filter
returns the lock lock
returns the lock id
returns the maximum versions of the
returns the time range
flush the contents of the specified region
returns the number of families
returns true if the family has a specific family
flush the contents of the table
compacts the given table
compacts the table
sets the error handler
returns the lock id
returns true if this map contains no elements
deletes the given family
deletes the given family from the list of
delete the specified
delete the columns of the given primary key
splits the table with the given name and the name
deletes the specified column from the table
deletes a column from the database
process a state change event
delete the specified from the database
splits the table into the file
deletes the specified column from the table
returns the time stamp of the file
adds a new code code to the code code object
adds a new column to the table
adds a new family to the map
returns true if the given array of has a
returns the scanner caching
checks whether a given has been found in the
returns true if the given code byte code array of code
checks if the given code byte code array has a
checks whether the given object is a column
sets the scanner caching
returns the result of the current row
returns the bytes as a byte
sets the time stamp
returns true if this object is empty
sets the flag
updates the metrics of the cluster
returns the scanner for the given scan
check if the file system is valid
returns a new scanner for the given array of characters
returns the result of the query
interrupts the thread
this method is used to create a new server
returns the average load of the load
notify the server that the server has been made
flush the current buffer
closes the underlying stream
validate the given put
returns the keeper wrapper
returns true if the given list is in the current state
stops the scanner
returns true if all meta data are online
returns the size of the heap
returns the write buffer size
returns the number of keys in the map
sets the write buffer size
puts a meta region in the dictionary
returns the number of online categories
returns the row at the specified row
returns true if the given key is a region of the online
returns the row at the specified index
removes the meta data for the specified region of the remote server
determines if the given server is a server meta server
checks if the given server is a candidate candidate
returns the of the specified server
removes a region from the model
runs the given thread in the given thread
sets the unassigned state of a given
sets the thread to be used for the
checks if the given is unassigned
sets the specified close request
returns true if the is
adds a new region to the scan
returns true if the scan is complete scan
check if the file system is valid
returns whether the scan of the scan is complete
returns the sequence id of the sequence id
returns the location of the root region
wait for the root region to be clipped
returns the number of meta regions
increment the number of meta regions
sets the location of the root region where the is located
sets the number of meta regions
deletes all rows from the table
moves the cursor down one element in the stream
deletes all rows from the table
applies the given code code to the given code code
returns the seek column
update the update
resets the
sets the row
update the key value pairs
aborts the current
this method is used to determine the value of the specified
removes the value from the specified key
returns true if the given number of more values are more
returns the free memory
returns the total number of bytes that this should be
returns the number of memory used in memory
returns the ratio between the and the
returns the size of the heap
checks if the key is valid
checks value of value
returns the minimum usage of the
evict the lru lru lru lru
update the lru list of lru lru lru
add an entry to the map
removes all entries from the pool
adds a new message to the list of outbound messages
returns the hash value for the given key
retrieves the specified column from this store
returns true if the two objects are equal
returns the index of the hash value in the hash map
calculates the capacity of the given
checks the row of the given row
calculates the threshold for the given factor
this method is called by the garbage collector
returns the head index
returns the lock row in the specified row
returns the tail of the queue
returns true if the given row is locked
returns true if the file has many entries in the list
replaces the value of the given value with the new value
compares the specified object with this map for equality
sets the previous item
sets the next element in the queue
returns the size of the heap
interrupts the lock
checks if the specified row exists
returns true if the table is done
updates the column
this method is used to get the value of the pattern
moves the cursor down one element in the current list
compares the current value of the given key in the current
move the given key to the given key
resets the filter to the default values
deletes the file
returns a column descriptor for the column in the table
computes the path of the given file
moves the given row to the next row
close the file
close the cache
returns the sequence number
returns the edit property
returns the key
check if the current user is allowed to abort the
returns true if the given split should be redirected to be redirected
checks whether all the files have a many files
returns the size of the global memory region
returns the number of regions in the current state
add a new region server
returns a string representation of the interval
wait for the server to online
wait for a server to be a server
this method is called once for the join
start the server
stops the
closes the current session
renews the lease manager
p removes a lease from the database
checks the value of the stale key
sleep for sleep steps
initialize the file
returns the meta region of the given metadata
shuts down the
scan the root region of the specified region in the document
returns the directory where the system is created
checks if the current object is a
increment weight of the weight
increment the weight of the weight
adds a new false positive to the hash map
sets the
returns the minimum value of the specified array of
removes the maximum number of
removes the key from the hashtable
this method is used to write the base64 encoded
compute the ratio between the and the
adds a new row to the bloom filter
returns the filter for the current filter
flushes the filter to the directory
sets the row of the
sets the column
sets the value of the given
deletes the file from the filesystem
returns true if the given column matches the same column
returns true if the given column is a valid
checks whether the given code matches code matches the given
compares this object with the specified object for order
compares this object with the specified object for order
returns true if the key contains the specified key
returns the lock row
sets the lock lock
returns the cell at the specified column
returns the cell with the specified key
sets the access time
deletes a column
get a cell from the array
compares this row with another one
adds a block to the heap heap
caches a block of the block
caches a block of the block
returns true if the given range of the given range of the
returns true if the given time stamp is in the range of
returns true if the interval of the interval is within the interval
returns the block
adds a new byte array to the map
runs the eviction algorithm
returns the current size of the current thread
adds a block of the given block to the block
returns the size of the current size
returns the size of the list
returns the eviction count
returns the number of in the
returns the stats
adds a family to the family
returns true if the given code code is contained in the
returns a shallow copy of this code byte code
sets the row of the
sets the column
sets the timestamp
sets the value of the given
returns true if the given row matches the given column
returns true if the given column is a valid
checks whether the given code matches code matches the given
returns the session id
reads the region location from the file
reads the master address from the remote host
this method is used to determine the address of the specified watcher
sets the cluster state watch watch
check if the specified master address is a master address
returns the scanner for the given
deletes the location region
writes the root region location to the given location
writes the master address to the server
checks if the current user is allowed to be skipped
this method is used to create a new
this method is used to determine if the given is banned
the
close the keeper server
gets the value of the property
start the server
sets the row filter
delete the specified table
called by the process when the user enters the current time
this method is called by the framework to indicate whether the
returns true if the given row is in the table
returns the filter that is used to filter the model
returns true if the filter is not empty
sets the filter to be used for the filter
returns true if the filter is missing
sets whether or not the filter should be used to filter the
gets the latest version value for this
sets the latest version
returns the group id
sets the group id
sets the password
returns the login name
sets the login name
returns the password repeat
sets the password repeat
returns the mail address
sets the m e mail address
returns the first name of the first first name
sets the first name
returns the last name
sets the last name
apply the groups
test of get line of sight method of class edu
test of get speed method of class edu
test of get damage method of class
test of get name method of class edu
test of is method of class
test of set line of sight method of class edu
test of set speed method of class
test of move method of class
test of draw method of class
test of set damage method of class
test of get x method of class
test of set name method of class basic
test of set method of class basic
test of get height method of class
test of retrieve method of class edu
test of create method of class
test of set x method of class
test of set height method of class
test of create method of class
test of get food store method of class edu
test of get terrain method of class board
test of get ant workers method of class engine
test of get y method of class ant
test of get ant method of class
test of get color method of class
test of set food store method of class
test of is method of class
test of set color method of class
test of set y method of class
test of set method of class
test of get food name method of class edu
test of set food name method of class edu
test of get food method of class
test of get ant method of class jgraph
test of get food weight method of class edu
test of set ant method of class jgraph
test of pos x method of class
test of request food method of class
test of get food method of class hbm
test of get food method of class edu
test of set food method of class
test of set food method of class
test of food method of class
test of update method of class cell
test of pos y method of class
test of get color method of class edu
test of get ant method of class hbm
test of die method of class ant worker
test of set ant method of class hbm
test of set color method of class edu
test of get terrain method of class hbm
test of get new instance method of class
test of update pos method of class
test of set terrain method of class jgraph
test of draw method of class main
test of draw method of class engine
test of draw method of class
test of update method of class
test of get energy life method of class
test of get alive method of class
test of set energy life method of class
test of play match method of class
test of place food at method of class
test of get max method of class ant
test of paint method of class edu
test of get war representation method of class edu
test of set max method of class
test of remove ant method of class edu
test of generate method of class org
test of close treasure room method of class
test of match method of class edu
test of get method of class ant
test of calculate path method of class
test of open treasure method of class org
test of move ant method of class edu
test of open maze method of class org
test of update method of class edu
test of grow method of class
test of get power method of class ant
test of set power method of class
test of get max speed method of class ant
test of set max speed method of class
test of move method of class impl
test of get method of class ant
test of set method of class
test of draw method of class
test of get method of class
test of set method of class
test of get dy method of class ant
test of set dy method of class ant
test of get cell data method of class ant
test of set cell data method of class
test of get my hand method of class help
test of set my method of class help
test of get eat method of class ant
test of get ant color method of class
test of get food method of class
test of drop food method of class
test of update experience method of class
test of get max energy life method of class
test of get line of sight method of class
at startup create and show the main frame of the application
initializes the annotations for b b
adds a new message to the list of tokens
adds a new message to the list of messages
returns true if the given line is a line of the given
returns the value of the property
returns true if the given message contains a given message
creates a radio button
adds a listener to the
removes a listener from the list of listeners
check the file
notify listeners of a line of listeners
notify listeners that the specified file has been changed
check if the file is valid
sets the file to be used for
check if the file is full
check if the line is currently in the file system
checks the file for the current file
checks if the tab is currently selected
check if the last file is available
check the file length
enables the controls to be enabled for the controls
check that the file is visible
deletes a marker from the file
writes the properties to the file
checks whether the user has a function after the user
this method is called when the build is fully loaded
sets the value of a property
the
returns the integer value of the specified string
sets the owner of this automaton
shows the stats
show stats
this method is called when the has been updated
dump the debug information
dump the context to the current location
invalidate the cache
returns true if the given assignment is a
returns true if the given array is member of the
cache the cache
removes the given assignment from the graph
inserts the given assignment into the graph
returns the number of bits in the current state
invalidates the cache
invalidates the cache
checks the given array of variables in the cache
invalidates the current node
grow the cache and frees the cache
returns the usage of the memory usage
cache the cache
grow the cache and revalidate the cache
invalidates the cache
insert a new primitive into the array
inserts a new entry into the specified multi int array
invalidates the cache
inserts the specified multi key value pair into the map
cache the cache
grow the cache and the given layout
invalidates the cache
invalidates the cache of the cache
inserts a new value into the hash map
cache the cache
cleans up the cache
adds a new debugger to the list of debugger
invalidates the cache
returns true if the cache began cache began
insert a key value pair into the hashtable
stops the
inserts the given string into the hash table
inserts the specified multi key value pair into the map
updates the size of the
sets up the assignments
chooses the most recently used
chooses the least for the given code code
count the number of allocation
a
simplifies the
enables the of the stack
remove the cache and the cache
checks the equality of the and executes the variables
returns the branch of the current branch
creates a new instance of the given
returns the number of nodes in the tree
make the board
make the initial state
create the
iterates over the and
cleanup the
returns the set of all the forward elements
returns a set of the
cleans up all
returns the next automaton in the automaton
returns the size of the list
returns the number of in the specified index
returns the of the given
handles the of the event
gets the value of the property
cleans up all the
returns the of the given
cleanup the
extract the order of the current order
returns the automaton that is currently being used to represent the given
returns the cost of the
creates the random order
returns the graph
returns the automaton that is currently in the automaton
returns the node that is in the given node
returns the total span of all the
returns the event that is currently in the event
find an event by label
find an event by its id
copy the attributes from the given state to the current state
copies the attributes from the given object to this
shows stats for the statistics
returns the number of users
sets the weight of this edge
returns the weight of this edge
check all the nodes in the graph
adds a new automaton to the current automaton
returns the number of events in the event
returns the maximum number of states in the automaton
returns the maximum number of states in the automaton
returns the state of the label
find a state by its label
removes a state from the list
returns the event at the specified index
returns the of the given
returns the of the given
change the current
concatenate the two elements of the two arguments
check the node for a given node
reduce the
expands the
closes the
this method is called when the is moved
clears the stack
returns the current value of the last element
puts an object in the stack
moves the current one to the next valid one
returns the number of classes in the list
shows the stats
the target for the output
returns the number of bytes that this stream can hold
sets the flags
resets the
returns the flags
copy the flags from this class to the given flags
resets flags for this object
returns the value of the bit flag
returns the of the
returns true if the matrix is equal to the given matrix
returns the standard deviation of the
writes the specified byte to the current output stream
frees the object
returns the number of bytes that can be read from this input
resets the current state of the iterator
load a file from the file
reads the next byte of data from the input stream
show the
saves the data to the file
insert a byte into the buffer
returns true if the buffer is empty
returns the size of the chunk
removes the item from the queue
returns the number of elements in the list
returns the of this topology
sets the attributes for this edge
show the graph

returns the degree of the polynomial
copy the attributes from the specified node to this node
adds a new node to the list
copy the to the given node
adds a new edge to the graph
sets the of the edge
removes the given code code from the code code
returns true if the given time matches the time
removes the given code code from the code code
returns true if the given memory address matches the number of
inserts a new into the database
find the index of the given id
saves the
returns an object that represents the data
dump the
returns the change between the and the given time
returns the of the
get info object
this method is called when the user selects the label
find a info by its id
sets the description of the
returns the description of the
insert a new data object with the specified name and value
dump the data to the output stream
save the profiler
returns the info object by id
saves the database
dumps the current state of the object
cleanup the cache
returns the memory usage
creates a new
bdd bdd bdd bdd is used to determine the
a union of
returns the intersection of the given string
the of bdd bdd
returns the union of the union of the union of the
returns the number of elements in the set
show stats
checks all variables in the current state
returns the memory usage
returns the value of the given cube
returns the number of nodes in the tree

returns a new permutation
replaces the with the given value
restricts the value of the specified column to the given
checks if the bdd bdd is a variable
calculates the number of


returns the or of the given
returns the current
this method is called when the user selects a new
returns the color for the specified row
called when a menu is clicked
enables disables the button
checks if the file cover is valid
creates a new polygon
adds a point to the
sets the primary shape
this method is called when the user selects the
sets the secondary shape
returns the status of the page
returns the covers for the last folder
this method initializes this
this method initializes
this method initializes file menu
this method initializes run menu
this method initializes about menu
this method initializes split pane
this method initializes document split pane
this method initializes document list
this method initializes document scroll pane
this method initializes new menu item
switches the window to the given window
this method initializes open menu item
opens a new document
fills the contents of the window with the contents of the given
deletes the window with the given id
writes the contents of the window to the given contents
this method initializes close menu item
this method initializes save as menu item
this method initializes exit menu item
this method initializes run menu item
this method initializes sub split pane
this method initializes j tabbed pane
this method initializes j text pane
this method initializes problems text pane1
this method initializes console scroll pane
this method initializes console text area
this method initializes bottom split pane
this method initializes j tool bar
this method initializes j progress bar
this method initializes cursor location text field
sets the dao for communication with the data layer
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
disposes the connection
adds a new object to the queue
adds the front of the queue to the front of the queue
returns the next element in the queue
returns true if the iterator has another
removes all elements from this queue
closes the socket
returns the reader
returns the buffered writer
returns true if this is a op operator
returns true if this voice has a voice
returns a string representation of this object
checks if the given user is equal to this user
compares the specified object with this object
returns the hash code of the object
compares this object with the specified object for order
log the given line
returns true if the outgoing connection is being used
sets the delay in milliseconds
starts the thread
returns the packet delay
returns the percentage of progress
closes the socket
returns the transfer rate of the progress
add a document to the document
returns the sentence of sentence
this method is called when the user is to be called
notify the ping server that the user is ping
called when a ping server is ping
this method is called when the user selects a user
this method is called when a user is connected to a remote
called when the line is unknown
convert the byte to a long value
sets the encoding to use for this encoder
returns the encoding used for the encoding
returns the local address of the server
returns the address of the
compares the specified object with this code code
returns a string representation of the object
calculates the derivative of the function
returns a random number between the current
sets the maximum value for the
sets the minimum value for this component
calculates the output of the output
returns the value of the specified
returns the activation function
returns the input
returns the type of neuron
returns the code chunk code at the specified index
returns the destination neuron for this neuron
returns the source neuron for this neuron
returns the neuron layer at the specified position
resets the values of the values
sets the weight of the edge
reset all the synapses to their initial values
returns the number of neurons in the group
sets the activation function
initializes the synapse deltas
returns the number of neurons that are connected to the given neuron
sets the input
sets the type of neuron to the given type
sets the output
calculate deltas for the neural network
returns the number of incoming connections
resets all the values in the set to their initial values
resets all the weights of the layer
calculates the alpha value of the synapse
calculate deltas for the neuron layer
sets activation function activation function
calculates the alpha for the given synapse
sets the layer layers
calculate the delta for the neuron
sets the weights of the average rigid body
this method is used to mutate the given
returns the crossover operator
the of the neural network
calculate the learning rate for the given synapse
returns the fitness value for this chromosome
sets the fitness value
returns the crossover rate
sets the member member
returns the member
sets the fixed value for the fixed value
returns the fixed value for the parameter
returns the mutation operator
adds a new member to the end of the list
returns the mutation rate
returns the fitness value of the
calculates the output neuron for this neuron
returns the member
adds a new pattern to the list of parallel
returns the total fitness of the population
calculates the neuron output neuron neuron
returns the neuron for the given neuron
returns the wheel
sets the population
returns the number of neurons in the given neuron
sets the test set
returns the selection operator
resets all the values to their initial values
sets the learning rate
returns the weight of the
calculates the pattern between the given patterns
resets all neurons in the network
sets the rate
sets the crossover operator
adds a synapse to the internal adjacency list
sets the weight vector
sets the activation function for the neural network
sets the input
sets the mutation operator
sets the output
sets the selection operator
adds a pattern to the list of patterns
sets the weight of the
returns the value at the specified location
reset all to the current layer
returns the delta weight for the given weight
shuffles the patterns in the list
returns the height of the list
sets the value at the specified location
returns the width of the list
returns the of the given synapse
sets the minimum value for the input parameter
sets the output range for the given range
sets the patterns patterns
returns the minimum error value
sets the test set
reduce pattern for all the pattern patterns
calculate the for the given candidate
returns the current network
this method is called when the layer is
returns the partial error mask for the given code code
returns the update weight of the given weight
returns the weight of the given synapse
returns the squared error between the given and the given
resets the of all the synapses
performs the actual filtering of a pattern
sets the delta weight
sets the maximum epochs epochs the maximum epochs epochs
sets the minimum error value for this
tests the test detection
writes the content of the xml document to the output stream
writes the post to the output stream
pops a string from the stack
updates the of the given
this method is called by the server to execute the
adds a task to the queue
adds a task to this task
this method is called when the has been consumed
returns true if the given is allowed to the given
this method is called when the is done
this method is called by the server to execute the next
this method is called when the user selects a string
checks if the task is ok
this method is called when the user selects the current state
executes the task
end the task
this method is called by the framework to set the child level
inserts a task queue at the end of the queue
returns the opcode of this instruction
sets the attribute of the object
adds a task to the task
sets the scheduler that owns this scheduler
returns the level of the level
returns the scheduler
execute the task
adds a task to the scheduler
this method is called when the task ends
terminates a child task
removes a task from the queue
this method is called by the framework to set the child level
sets the parent of the task
adds a task to the current simulation
returns the parent scheduler
adds a task to the list of tasks
prints the debug information
terminates the scheduler
sets the root scheduler
removes a task from the list of tasks
called by the framework to set the child level
called when the task ends
terminates the child
adds a new instruction to the list of warnings
removes a task from the queue
executes the task
adds a task to the queue
sets the value of the variable
updates the concurrency time of the task
returns the for the given string
returns the level of the
remove a
returns the object that is unique to the given id
removes a unique id from the list
this method will be called by the
log the given code string code
log the given code string code
prints the stack trace of the exception
prints the stack trace of the exception
update the trace of the given type
normalize the normalized bag
records the time in milliseconds since january 1 1970
records a time and the time of the given string
records a time in milliseconds
records a time in nanoseconds
evaluate the given function
clears the evaluated value of the result set
opcode to put a opcode
returns true if the given object is a key
grows the array of children
returns true if the game is empty
removes the given key from the stack
grow the parents of the parent node
creates the view component
returns true if the given file is accepted by this filter
sets the message and display the message
sets the default message
sets the message with the given priority
adds the parent node to the parent node
adds the parent ref to the given parent
removes the parent reference from the given node
removes the children of the given node
shrink the tree to the given index
returns true if the node is a valid node
adds a child node to the end of the list
adds the given child reference to the given reference
adds a new flow to the
this method is used to create a new graph with the given
the parent of the node parent
clears the current graph
sets the children
removes a node and its associated
binds the current object to the current state
this method is called when a is destroyed
refreshes the graph
mark garbage as garbage collected as garbage collection
mark the node as deleted
this method is used to serve the web request
returns true if this is a enabled state
checks if the given color is a
clears all the flags in this object
returns true if the given id is contained in the list
returns true if the given id is contained in the list
cleans up all children of this node
sets the value of the
this method is called when the shutdown of the shutdown
returns the namespace uri of the given prefix
updates the of the node
finds a object for the given mac
returns the data for the given object
sets the uri of the
returns the description of the file
initialize the image
destroy the current context
clears the memory
starts the
stops the controls
processes events on this event
returns the number of elements in this collection
deletes a blob from the database
returns the most recent most recent most recent

initialize the image
replaces the labels with the same weights as the same
serialize this object as a string
saves all the properties to disk
this method is called when a is sent to the client
returns true if the timestamp is supported
returns the size of the packet
returns a string representation of the separator
gets the
returns the size of the buffer
sets the packet
enables disables the of the wiimote
returns the enclosing wrapper
returns true if the send traffic is enabled
sets the timestamp of the timestamp
returns true if the loop is enabled
returns true if the timestamp is enabled
returns the loop period
sets the loop period
sets the size of the buffer
returns the size of the buffer
sets the size of the buffer
returns the size of the buffer
returns the length of the buffer
returns the next time in the next time
returns the size of the buffer available in the buffer
removes the port and its default down port
removes the default port port port
removes the timer port
returns the node neighbor
returns the interface id of the nth node in the node
sets the cost of the
sets the length of the message
sets the marked flag
returns true if the is directional
is the address
returns true if the address is unicast
returns true if the address is a non null address
returns true if the address is null
returns the imdb id of the given address
returns the id of the given address
returns the packet type
sets the accounting enabled value
returns true if the accounting is enabled
sets the feedback enabled property
returns the configuration information for the given configuration
returns the information about the file
gets the value of the component message feedback enabled property
sets the capacity of the list
sets the
sets the rate of the generation rate
returns the
returns the rate of the generation rate
sets the marker
sets the marker of the marker
sets the meter
returns the meter
resets the counter to zero
returns the info
returns the mode of the
sets whether the should be enabled
sets the inspection enabled
enables or disables output all the stderr of the process
returns true if inspection is enabled
returns true if the output is enabled
returns the packet that is used to send packets to the given
interrupts the given thread
returns the maximum number of lines allowed for this
sets the maximum number of lines to be used for the next
returns true if the stdout is enabled
sets the output flag
creates a new terminal with the current state
sets whether the output is enabled or not
returns true if the current dialect is enabled
exit the application
quits the application
sets the mean of
returns the binary representation of the binary representation of the binary
returns the string representation of the hex representation of the
minimizes the window
restore the frame
returns the mean mean of the
returns the std normal
returns the
returns the next pseudorandom uniformly distributed random value
returns the next pseudorandom uniformly distributed rgb value
returns the next pseudorandom uniformly distributed value in the
sets the mean of the mean
sets the std normal standard deviation
append a byte array to the end of the data
insert a byte into the buffer
removes the specified byte array from the buffer
sets the real real value
sets the imaginary part of the complex number
returns the hyperbolic tangent of this complex number
returns the size of the data
returns the size of the list
returns an iterator over the intervals in the interval
returns an iterator over the gap
returns an iterator over the intervals in the pool
returns the
returns true if the size of the specified size is full
returns true if the given is
returns the time in seconds
returns the maximum number of
returns the interval
returns the timer for the
returns the time in seconds that the expire time
returns the downstream expiration time of the downstream
returns the echo interval base
returns the downstream time between the downstream and downstream
returns the echo interval
returns the time of the time
remove a key from the
returns a new object with the given key
removes the element from the list
adds a to the list of
sets the type of the
returns the number of
checks whether the type is
returns the command
returns the destination of the destination
returns the next hop
removes the neighbor from the list of neighbor neighbor
this method is called when the is down
returns the size of the image
update the
update the of the
set the expire time
sets the
enables disables the route purge
returns the source of the source file
returns the group of this group
returns the source mask
returns the value of prune lifetime
enables the of the detection
route a route to the destination
resumes the watchdog
sets the type of the
returns the type of the
sets the object
returns the object that is used to display the object
sets the metrics of the font
sets the sample rate
sets the rate
sets the noise strength
sets the power of the
returns the power power of the current target
remove the number of
checks if the given port is already in the data source
invoked when a request is interest in the queue
prints the data entry
adds a gradient to the list of gradient objects
this method is called when the timeout expires
this method is called when the user modifies the cache
creates a new message with the given id
creates a new instance of message
sets the seed of the random seed
sets the grid x y and y values
sets the parameters for the topology parameters
sets the parameters for the topology parameters
sets the
sets the factor
sets the mean of the angular mean
sets the capacity of the container
attach a port to a specific port
sets the bandwidth
sets the size of the buffer
sets the
installs the with the given
sets the buffer mode
returns the value of the link prop delay property
sets the delay between the link in milliseconds
returns the value of the property delay
sets the value of the code prop delay property
builds the object from the given object
builds the object from the given map
returns the id of the
build the object
build the object
build the
build the
returns the size of the buffer
returns the total number of times the
returns the total number of
sets the data unit
sets the area id
returns the next available value
returns the next available value in the stream
returns the next byte of the buffer
returns the next byte in the buffer
returns the peer address of the specified data
returns the peer port for the given peer id
returns the content of the data object
sets the delay between the and the value of the property
returns the current bandwidth
clears the
sets the of the neighbor
sets the
peeks at the specified position in the stack
returns the first element in the list
returns the last element of the list
returns true if the element is empty
returns the capacity of the queue
returns the size of the
sets the capacity of the
returns true if the full is full
returns the capacity of the
returns the size of the
returns true if the game is ready
sets the probability of the
returns the probability of the
sets the value of the max
returns the maximum of the
sets the
sets the key
prune the
prune the
sets the of the table
sets the label for the station
returns the cost of the given cost
returns the port that this service is managing
returns the port that this service is managing
setup the matrix
setup the
returns the port for this service
creates a new port type port
creates a new query port
returns the number of
returns the neighbor
creates a new query port
creates a new port type port
returns the port type of the port
returns the port type of the port
returns the port type of the port
returns true if this join is a join type
returns true if this is a leave
returns the port type of the port
returns the port type of the port
creates a new port event port
handle a broken event handler
creates a new link broken event
calculate the path between two
returns the amount of space between the given value
start the timer
start the timer
handle the
sets the parameters for the topology parameters
sets the parameters for the topology parameters
sets the position of the data in the given coordinates
returns the name of the
returns the contract
sets the number of points in the polygon
sets the value of the sa
returns the
sets the timer duration
start the timer
gets the value of the bb ts property


sets the n
sets the addresses
returns true if the order of the given order is accepted
this method is called by the
starts the
pause the
resumes the
set the energy consumption
returns the current cpu cpu cpu speed
returns the sleep interval
gets the value of the total radio property
sets the bandwidth
sets the
calculate the path between the two
calculate the path loss for the given interval
compute the of the dispersion
returns the of the
returns the id of the
detaches a port from the database
sets the state of the
resumes the execution of the resume
this method is invoked by the thread to run the
returns the
returns the info of the info
returns the time in seconds
initializes the
returns true if the state is stopped
sets the id
returns true if the current thread is suspended
returns the
returns true if the current state of the state is idle
initializes the
sets the interval
returns the
sets the
sets the init
sets the bandwidth
returns the name of the class
returns the init
sets the value of the
returns the of the
returns the number of bytes that this will be sent to
sets the show query port enabled
sets the specified port to the specified port
sets the show root enabled value
returns the number of timeouts in the database
sets the interval between the and the
returns the interval between the and the
sets the size of the window
returns the size of the window
returns true if the obj obj mode is enabled
returns true if the size is enabled
returns true if the component is showing
check if the given port is a
returns the event tester
starts the execution of the test
creates an image for the current
adds an event to the
adds an event to the time
add an event to the list of listeners
add an event to the list of listeners
returns the available port for this group
add an event to the event queue
adds an event to the list of listeners
adds an event to the
adds a new event to the list of
sets whether the user wants to show hidden
sets the show info port
removes the specified index from the event
this method is used to set the object of the current
sets whether the limit redraw is enabled
remove a object from the list
inserts a new event into the database
passes the object to the
removes the given object from the list
returns true if the limit redraw is enabled
inserts a new event into the database
resets the pass to the initial state
inserts a new event into the database
inserts a new event at the specified index
inserts a new event into the database
resets the
enqueues a new object at the beginning of the given object
gets the object at the given position
peek at the specified position
returns the first element in the list
returns the last element of the list
returns the id of the
returns true if the element is empty
returns the size of the available data
returns the id of the
returns the size of the
the
initialize the
returns the maximum number of
returns the info of the info
sets whether the code copy code property is set to be enabled
returns true if the clipboard is enabled
sets the value of the echo enabled property
returns true if echo is enabled
sets the time to live
sets the value of count
sets the delay between the
returns a string representation of this object
send a message to the server
sends a byte array to the buffer
returns the number of threads created by this
sends a byte array to the server
returns the time in seconds
returns the number of threads in the pool
returns the time in milliseconds since january 1 1970 00 00 00
returns the number of threads in the thread pool
returns the next available value in the stream
returns the next available
receive a byte from the buffer
returns the next byte of the specified buffer
this method is called when the sending of the sending of
interrupts the receiving of the audio
returns the rate of the event rate
sets the value of activated
sets the component flag
returns true if the trace level is enabled
returns the object
adjust the hop to the hop
returns true if the component is activated
returns the efficiency of the statistic
returns true if the is
returns the capacity of the current thread
handle the navigation timeout
handle timeout events
sets the
sets the
handle the timeout of the transaction
handle the timeout of the
returns the of the event
returns the id of the
returns the buffer
checks if the timer is paused
returns the available buffer in the buffer
returns the buffer ratio
returns the applet information
handle the remove from queue
draws a line using the current color between the points
displays the dialog box
returns the applet information
fills the specified rectangle
returns the applet information
open the modal dialog
reads the from the given url and returns the result
returns the runtime
returns the nn
sets the wrap y coordinate of the area
sets the visibility of the buttons
sets the read only mode
sets the catalog name
sets the transaction isolation level for the transaction
this is the entry point method
sets the time
adds a condition to the list of
creates a new sql query
sets the condition
appends a property to the properties
sets the property
creates a new sql query
returns a string representation of this object
returns a string representation of this object
sets the time
returns a string representation of the object
sets the additional attribute of the object
creates a prepared statement for the given connection
creates a new prepared statement
sets the city
creates a prepared statement for the given connection
creates a new prepared statement
sets the continent
sets the country
sets the house number
sets the state
sets the street
sets the longitude
returns a string representation of this object
creates the database statement
stores the properties in the database
this method is used to store the object in the database
returns true if the property contains the given property
remove an object from the list
sets the height of the image
returns the height of the image
registers a factory instance that will be fired
returns the piece
sets the size of the pieces
returns the number of pieces in the
process a game
returns the name of the console
returns the id of the
returns the name of the
starts the
creates the panel
creates the icons
returns a new preferences panel
registers the connection listeners for the connection
creates a new container
move the user in the system
handle the addition of a channel
removes the tray icon
connection to a connection
this method is called when a connection is established
description of the method
login to the database
called when a login failed
called when the connection has been closed
invoked when the target of the listener has changed its state
adds a listener to the list of listeners
removes a listener from the list of listeners
notifies all listeners that have registered interest for
handle a channel list
creates the cancel panel
sets the password field
creates the main frame
configure the menubar
shows the dialog
this method is called when a session is established
invoked when a session is closed
returns true if the ui is visible
stops the application
sets the size of the frame
dispose of the component
inserts the given menu into the menu bar
returns the number of menu items
returns true if the frame is active
sets the title of the frame
sets the icon for the icon
sets the visibility of the popup
returns true if the frame is visible
show the frame
hides the dialog
invoked when an action occurs
move the user in the system
sets the running status of the game
update the list of channels
removes a channel channel
allocate a new edge to the given number of edges
allocates a set of for the given route
adds a vertex to the vertex buffers
sets the index of the connection to the given index
creates a new buffer with the given type and edge
allocate a new buffer with the specified size
adds a sub buffer allocation to the allocation
adds a variable to the allocation
returns the variable with the given name
checks if the given object exists in the database
returns the current code container code
adds an element to the list of elements
adds an element to the list of elements
returns a string representation of the object
returns a string representation of this object
adds a new code code to the buffer
adds a variable to the parent
accepts a given location and the current one
adds a thread to the thread pool
returns the operator instance
removes a thread from the thread pool
returns the file list
returns a string representation of the receiver
returns the main file
sets the main
adds a new name to the buffer
prints the list of files to the given list
sets the dublin core module type
creates a new operator
sets the core name of the element
visits a vertex
returns a string representation of this object
returns a string representation of this object
returns the number of
creates the source files for a given scenario
calculate the cost of the given transfer
returns true if the current instance is single
returns the index of the given node in the list of nodes
checks if the given component exist in the list of
returns the sender of the reception of the specified transfer
returns the number of that are allowed on the given transfer
returns the smallest value at the given zero based
returns true if the vertex is a intermediate receive vertex
returns true if the vertex is a
filters vertices and edges
parses the relative constraints
adds a path to the vertex path
parse the relative path constraint
parses the variables
add a constraint to the group
adds a new constraint to the group
parse the data types
removes the given constraint from the group
parse the file names from the given file
parse the group
parse the element
returns the timing for the given timing
writes the workbook to the specified output stream
sets the writer
adds a core selector to the combo box
writes the workbook to the specified output stream
fires on check for updates
notifies the refinement that the given node is checked
adds the combo box selector to the combo box
writes the workbook to the specified output stream
updates the check mark

removes all the from the given
removes all the from the given
sets the
removes all the from the given
remove a vertex
checks if the given vertex is a special
checks if the given vertex is a cast
checks if the given fork is fork
returns true if the given vertex is a join
returns true if the vertex is a init
initializes the relative constraints
returns true if the given vertex is a valid vertex
creates the route steps
populates the vertex with the given constraint
returns the best route route
removes the given instance from the tree
update the keeper
creates the routes
sets the task scheduler
compares route to the given route
returns the route for this node
returns the route for the given edge
returns the gantt data
creates a new route with the given code code
evaluate cost of a edge
adds a new vertex to the end of the list
adds the given vertex to the list of active tasks
inserts the given vertex before the previous vertex
inserts a new vertex at the specified index
inserts the given vertex before the given vertex
returns the previous vertex in the list
returns the next element in the iteration
returns the index of the first occurrence of the specified element
inserts the given vertex at the specified index
returns the schedule at the specified element
returns true if the specified element contains the specified element
returns the index of the specified vertex
returns the index of the given vertex
inserts the vertex before the given vertex
order the order of the order
returns the total order for the given order
the topological order
the given vertex
this method is called when a vertex is
resets the
returns the time in milliseconds of the specified time
returns the previous vertex in the graph
returns the time in milliseconds to be used for the time
returns the time of the specified component
returns the next vertex from the
returns the earliest index of the given vertex
returns the index of the latest predecessor
returns the index of the vertex of the given vertex
returns the schedule for the given component
puts a set of vertices in the given set of vertices
sets the new vertex
returns the next vertex from the
returns the timing
returns the mapping mapping for this mapping
sets the of the
adds a component to the operator
returns the operator
returns the number of vertices
returns the component
adds all vertices to the given set
returns the preceding
removes all the edges that are not used for this object
returns true if the given component is a member of the given
determines if the given instance is
returns the vertex with the given id
returns the time in seconds
returns the fast number of
returns the time of the local search time
displays the frame
returns the number of in the
decorates the specified parent in the receiver
returns the time in milliseconds since the last call to
returns the number of in the current module
returns the number of main type of the current instance
returns the load of the specified component
returns a random color
returns the component associated with the id
returns the end time of the last task
returns the time in milliseconds
parses the given element
sets the data types
compares this object with the specified object for order
sum the sum of the given vertices
clear the of the
returns true if the given object is equal to this one
returns the hash code of the object
removes all adjacent vertices of the current vertex
transform the file to a file
run the analysis
sets the primary index
sets the clipboard contents
create a new
registers the action listener
compares this object with the specified object for order
performs the action
returns the estimated size of the table
returns the panel containing the panel
notify listeners that the model has changed
adds a field to the
adds a new to the list of
at startup create and show the main frame of the application
called when the progress bar is being activated
adds a nature to the nature
adds a nature to the nature
this method is called when the plug in is stopped
returns true if the condition is correct
sets the connection manager
sets the
sets the
sets the
sets the nombre
sets the
sets the descripcion
sets the
sets the
sets the sender
sets the
sets the
sets the
sets the
sets the
sets the
sets the
sets the
sets the
sets the
sets the
sets the value of rol
sets the
returns the name of the first column in the table
sets the
sets the
sets the
sets the
sets the
sets the
returns the fullname
sets the
sets the
sets the
sets the
sets the
sets the
sets the
sets the
sets the value of the pay property
sets the
saves the object to an object
removes the object from the cache
sets the dao for communication with the data layer
sets the dao for communication with the data layer
set the dao for communication with the data layer
sets the dao for communication with the data layer
sets the dao for communication with the data layer
set the dao for communication with the data layer
sets the dao for communication with the data layer
sets the dao for the dao
sets the dao for communication with the data layer
sets the dao for communication with the data layer
sets the dao for communication with the data layer
sets the dao for communication with the data layer
sets the dao for communication with the data layer
set the dao for communication with the data layer
sets the dao for communication with the data layer
sets the dao for communication with the data layer
set the dao for communication with the data layer
sets the dao for communication with the data layer
sets the dao for communication with the data layer
sets the dao for communication with the data layer
sets the dao for communication with the data layer
sets the dao for communication with the data layer
set the dao for communication with the data layer
sets the dao for communication with the data layer
set the dao for communication with the data layer
sets the dao for communication with the data layer
sets the dao for communication with the data layer
returns the user object for the given request
returns the text for the specified key
returns the context for the specified request
p gets a localized text message
returns the user object for the given request
returns the context
the card
registers a preprocessor for this preprocessor
mark a collection as fixed size
applies the row processors to the given row
applies the given cell to the cell
applies the given cell to the cell
generate a new
applies the row to the row
add a group to the group
returns the list of row collections
sets the value of columns to hide
sets the column names to be displayed in the column
sets the to remove the given string from the list
resolve the given formula and returns the value of the given formula
sets the next value
returns true if the current thread is finished
returns the total repeat
returns the current repeat
returns the number of
returns the stop condition
adds a new variable watcher to the list of variables
returns the parameter value for the specified name
returns the number of variables in the list
sets the variables
returns the type of the
sets the value of the current type
returns the value of the given type
sets the value of the current value
sets the value of the thermometer
sets the value of the current value
sets the value of the field
initializes the random number generator
initializes the random number generator
sets the string value to the initial value
sets the simulation
initializes the bool
returns the value of the list of values in the list
stops the simulation
returns the value of last modified
initializes the generator
returns true if the list is currently in the list
creates a uniform uniform instance for the given maximum value
creates a uniform uniform instance for the specified domain and minimum
returns the number of runs in the run
returns true if this object is
creates a gaussian distributed gaussian with the given mean
creates a new binomial distribution with the given binomial distribution
creates a new
sets the run thread
returns a random
sets the maximum value for the
creates the items in the toolbar
creates a new
returns the start sim action
creates a new
adds a listener to the list of listeners notified when the sim
sets the minimum value
removes a sim event listener
sets the seed of the generator
fires a sim event to all registered listeners
sets the generator
sets the start sim action
sets the step
returns the seed of the seed
returns the start or pause sim sim sim action
starts the simulation
sets the start or pause sim sim sim
builds a sim
returns the step sim action
sets the step sim action
returns the reload action
stops the batch
this method is called when the sim button is clicked
pauses the batch
sets the reload action
sets the contribution items
returns true if the model has parameters
returns the action for the monitor
sets the action for the monitor
adds a sim sim listener
edit batch edit batch
sets the value of a parameter
sets the value of a parameter
shows the batch view
returns the action for the grid
returns the value of the specified parameter
sets the grid action
returns the gis action
sets the gis action
parses the xml file
returns the inspector action
returns the output for the given id
sets the inspector action
returns the model file name
returns the chart action
returns the model name
returns the output object associated with the given name
returns true if the model file has a model file name
sets the chart action
sets the model name
initializes the remote control
returns the edit file action
sets the model file name
returns the remote control
sets the edit file action
returns a new line number element
returns the type manager of this model
adds the given output to the output
sets the base directory
returns the start img descriptor
initializes the output manager
returns the base directory
sets the start img descriptor for the image descriptor
returns the random number of random
checks if the given file is already registered
returns the value of the code code property
returns the scheduler
sets the current file name
initializes the scheduler
sets the pause for the
returns the current file name
initializes the controller
returns the controller
returns the name of the model
increase the time of the current time
inform listeners that the event has been fired
this method is called by the framework to run the
returns true if the server is ready to run
adds a listener to the list of listeners
show the current view
sets the state of the simulation
fires a sim event
fires the stop event to the simulation
sets the state of the simulation
sets the state of the simulation to running
sets the paused state of the simulation
build the output
returns the simulation
sets the name of the attribute
sets the workbench window title
show mandatory views
shows the console
creates the expression
creates the header for the header
creates the footer
creates the rewriter
creates a new writer
sets the last value of the last value
returns the suffix of the file
writes the contents of the given output stream to the output stream
returns the expression text
sets the expression text
updates the layers
creates the surface
close the file and write the result
returns the surface
returns the file
sets the file
returns the directory
sets the directory
returns the rewrite
sets the current state of the current state
sets the rewrite to be used to rewrite the current state of
returns the header
closes the current state
sets the header
returns the footer of the footer
compute the of the protocol
returns true if the protocol has a protocol
returns the root node of the given message
send a message to the
schedules a new message to the delivery
schedules a new delivery message to be sent to the server
returns the performative
sets the performative
returns true if the message has sent successfully
sets the protocol
sets the flag indicating whether the sent by the message is received
returns the conversation state
sets the conversation state
returns true if the response is waiting for response
sets the wait for response
sets the following nodes
returns true if this node is a terminal
returns true if the task can be stopped
returns true if the task is positioned in the task
select the task task
returns the priority of the task
stops the current task
checks if the protocol is still in the protocol
update the activity level
executes the action on the specified command
checks if the execution status has been reached
execute the command on the agent
returns the distance between two points
executes the command
adds a conversation to the list
the of the
returns the number of nodes in the
gets the default action
returns the workbench configurer
gets the workbench window advisor
sets the value of the button
returns the value of the checkbox
initializes the given map
returns the species
erases the species from the species
initializes the variables
sets the return return property
destroys the
create a reader for the given file
build the updatable variables
disposes the toolkit
sets the graphics context to render
returns the graphics context
creates the details for the content of the composite
sets the font
returns the current component
handle the event that the given component is
handle the event that the given component is
creates a new dialog parent frame
creates a new instance of the dialog
sets the height parameters
draws the specified image using the foreground color
creates the focus handlers
draw the image to fit the image
this method is called by the component when the
draws the image scaled to the specified image
draw the rounded corners of the rectangle
finds the given popup in the given list of active windows
draw the current rect with the given color
draw the rounded corners of the rectangle
draw the
handle the opened window
draw the circle
handles the closed window event
handles the closing of the window
draw the circle
returns true if the component is a focusable component
returns the parent of the given element
draw the oval drawn by the given
draw the oval
returns the runtime exception if the exception is not an element
draw oval to draw
returns the bounds of the given string
this method is called when the user changes the value
returns the component that is currently visible
returns the object that is used to hold the
draw the rectangle
draw the of the rect
returns the underlying object
this method is called when the user selects a property
returns true if the tree has children
draw the border border
returns the entity object
draws the specified string using the current color
adds a child element to the list
returns the object that is used to hold the
returns the current object
returns the parent of this node
returns the current object
returns the object that is currently being used for this
sets the child
returns the expected child types of the current
optimize optimize
is this a constant pool
returns true if the variable has a temp variable
sets the value of the specified objectives
returns the expected string for the expected type
returns the expected right types
sets the right hand side of the right component
returns true if the operand is a zero value
returns true if the expression is a one
sets the type of the type
sets the species
builds a filename for the specified entity
checks if the file is a file
checks if the file is a file
checks if the file is a file
sets the key
sets the value of the
returns the value of the key expression
gets the value of the value expression property
sets the content type
returns true if the current context has a var var var var
sets the elements
returns true if the element is empty
sets the list of elements to be used for this element
returns true if this element is empty
sets the species
finds the type of the left hand side of the selected type
finds the type of the right hand side of the expression
returns the var that is the species in the given basic entity
sets the x coordinate of the component
sets the y coordinate of the y coordinate
returns the status of the command
sets the status
returns the entity id of the given entity
initializes the environment
this method is called by the class to update the domain
this method is called by the
initializes the range of the domain and the domain
this method is called from the subclass to add a new entity
returns the rgb color of the palette
returns the value of the em b em property
returns the color used to display the color
inserts a string into a string
inserts a string into the database
returns the file class
returns the type of the descriptor
sets the public flag
returns the access flags
sets the private flag
returns the name of the constant
sets the protected flag
returns the descriptor constant
returns the constant value of this constant
sets the final flag
sets the constant value for this constant
sets the constant value for this constant
sets the constant value for this constant
sets the constant value for this constant
sets the constant value for this constant
mark the current synthetic as synthetic
sets the abstract flag
sets the deprecated attribute of the object
returns the string representation of this object
returns the length of the attribute
returns true if this collection contains no elements
returns the value to which this map maps the specified key
returns the constant pool
writes the data to the data stream
puts all the mappings from the specified map into this map
returns the constant pool of the constant pool
clears the current table
returns the class argument
returns the type of the component
returns the number of dimensions of this dimension
returns the dimensions of the specified dimension
returns a set view of the keys contained in this map
returns the string representation of the object
returns a collection view of the values contained in this map
returns the type descriptor
returns true if the inner class is inner
returns the outer class
returns the method descriptor
returns the source file
add an exception to the class
adds a interface to the interface
adds a class to the list of interfaces
add a method to this class
add initializer method
adds a inner class
adds a inner class
adds a new attribute to the list of classes
writes the output stream to the given output stream
returns the index of the current element
returns the code buffer code of this code buffer code
returns the file name
returns the constant constant
returns the line number of the given location
returns the length of the
returns the length of the buffer
returns a set of all constants
returns the size of the entry
add a constant constant constant constant constant constant
add a constant class constant class name
add a constant constant constant constant constant constant
adds a constant constant constant constant constant constant constant constant
add a constant long constant constant
adds a constant float constant constant constant constant constant constant
add a constant constant constant constant constant constant constant
add a constant constant constant constant constant constant constant
creates a new with the given string
adds a new entry to the local variable
returns a collection of all the elements that are currently being processed
returns the inner class
returns the outer class
returns the inner class name
returns a stream for the specified name
creates a local variable
creates a new label
adds a context to the context
returns the context of the file
adds a new node to the end of the list
sets the constant value for this constant
load the constant value
load the constant value
load the constant value
checks if the given string is a valid
checks if the given string is closing
load local variables
returns the end line
sets the end line
sets the start line
returns the end column of the column
returns the start column
sets the end column
sets the start column
checks if the given string is a valid list
load the reference from the local file
checks if the given string is a closing list
checks if the given string is a valid point
checks if the given point is a closing
updates the selection
returns true if the given operator is unary operator
notifies all registered listeners that the selection has changed
this method is called when the user selects a new selection
checks if the given string is a type
load the field with the given type
checks if the species name is a species
checks if the species name is species name
opcode to load a static field
checks if the given string is global global scope
updates the display
updates the display of the current
dispose the painter
checks if the given string is a temporary variable
checks if the given string is a true or false
checks if the given string is a valid
sets the graphics context
returns the graphics context for this component
sets the surface
returns true if the given string is a nil
sets the font
stores the field type in the given field
checks if the given string is self
sets the coordinates of the current drawing surface
sets the drawing parameters for the given dimension
checks if the given string is a branch var var var var
sets the drawing parameters for the given scale
checks if the given species is a variable
stores the field value in the field
draws the specified image using the foreground color
draw the image to fit the image
draw the image scaled to the specified image
checks if the given string is a keyword
draw the current rect with the given color
draw the
draw the circle with the given color
adds the next element to the list
draw a link between the given color and the given color
checks if the given species is terminal
draw a link between the given color and the given point
insert a new instruction into the list
draw the oval with the given color
draw the oval
returns the code code that is associated with the
remove the last element from the list
returns the bounds of the given string
draw the current rect
this method is used to convert the type of the stack
draw the of the rect
replace the current replacement by the given replacement
returns the stack adjustment
invokes the method on the given method
returns the current depth of the stack
draw a string using the current color
returns the message
prints the stack trace of the exception
prints the stack trace of the exception
returns the location of the location
invokes the constructor of the given class
returns true if the flow is a
returns the number of decimal numbers
parses the xml file
parses the xml document
parses the given input stream
this method is used to write the of the
close the file
sets the next time
invokes super method
sets the name of the
schedules a new thread to be executed on the next thread
description of the method
schedules the given action to be fired by the action
sorts the list by index
description of the method
description of the method
invoke the constructor of the class
schedule a new action
schedule a new action
schedule a new action
duplicates the code code argument
schedule a new action at the beginning of the schedule
duplicates the code code array of code code
duplicates the
sets the species
add completions for command
schedules a new action to be performed
add completions for command line
schedules a new action to start the given time
add completions for command
schedules a new action to be performed at the specified time
pops the top and the stack
add completions for command
initializes the default distributions
swap the current swap
sets the color of the axis axes
the
sets the color of the axis and sends a
parses the given element
parse the chart color
parses a color
sets the background color of the plot
gets the image file name
classifies a branch
initialize the input stream
returns the number of fields in the field
returns the field at the specified index
returns true if the record has next record
returns the text of the file
refreshes the tree
adds the given parent item to the tree
schedules a new action to be scheduled to the end of the
schedules a new action to be fired by the action
schedules a new action to be handled by this method
removes the specified action
removes a pause action
returns the pause actions
executes the actions in the current thread
pauses the execution of the execution of the execution
the location of the
sets the input object to be displayed in the editor
updates the outline viewer
adds a local variable to the list of local variables
add a new to the list
this method is called by the
insert a new action into the queue
add a new to the stack
initializes the header
adds a method to the list of methods
creates the text for the text
adds a constant type to the constant pool
returns the instance of the given type
build the schedule
increments the counter of the given local variable
this method is called when the display is displayed
returns the name of the
sets the schedule
called when the user enters the current state
returns the method argument for the given method
stops the
run the installation
returns the entity agent
returns the current route route
returns the distance to the agent
returns the time to the time in milliseconds
this method is called when the jvm
sets the world
this method is called when the user selects a map of buddies
returns the index of the agent that is currently being processed
returns the decay value of the
returns the environment attribute of this object
sets the base attribute of the base class object
sets the base class
sets the skills
adds a skill to the current class
this method is called by the
returns the root element of the tree
sets the root element
sets the parent
adds a breakpoint to the current breakpoint
returns the base class
sets the use global path factory
returns true if the path should be used to be used for
sets the name of the simulation
sets the type of the
returns true if the given
returns the node
sets the node
returns the secondary view id
sets the view id
sets the secondary view id
start the filter
build the species
build the species and species
gets the value of the condition property
sets the
returns the current sequence of the current user
sets the name
sets the condition
gets the value of the condition property
checks if the agent is
collects the of the
writes the agents to the swarm
sets the initial state of the
sets the final state of the final state
returns the name
find the skills
returns the center of the given virtual graphic
returns the center of the given list
returns the center of the given map
returns true if the given object is accessible
registers the given action with the given name
returns the center of the given sphere
returns the center of the given data source
removes a action from the group
adds a filename to the file
checks if the file is a file
removes an action at the specified position
enter scope name
enter scope scope
exits the scope
exits the application
returns true if the variable is a variable
exit the remote context
returns true if the given name is species name
returns the species from the database
adds new species to the species
returns the world species
build all species
checks if the given species is a super class
returns the priority of the current event
returns the last satisfaction
update the external reward
update the external
returns the current task
this method is called when the agent is connected to the agent
returns a task instance with the specified name
initialize the agent
this method is called by the agent to load the agent memory
adapt the treasure to the previous state
this method is called when the user is done
adapt the tasks to the solver
returns the duration of the current task
called when the current task is finished
returns the final reward
this method is called when the adaptation of the adaptation of the
called when the current task is finished
returns the satisfaction of the task
ends the current task
returns the activity of the activity
show the sim result
returns the class instance for the given class
returns the prototype class for the given token
returns the priority of the current
returns the priority of the task
returns the number of trial
adds a new to the
returns the duration of the time in seconds
returns the total duration of the duration in seconds
returns the value of instant satisfaction
returns true if the user can process the request
updates the satisfaction of the user interface
parses the max success and parses the given xml element
parses the element
parses the xml element from the given xml element
sets the
returns the
sets the maximum allowable ec value
adds a new to the current task
returns the maximum allowable success
returns the species class for the given token
returns the start time of the event
returns the duration of the current simulation
returns the success status of the job
returns the location name of the given location
returns the view visibility
returns the place that this job is to be used to
sets the size of the image
returns the value of the specified
this method is called by the
constructs a string representation of this object
creates a string representation of the object
release the resources held by this object
returns a list of all the entries in the given entry
log a message to the console
log a message on the stack
finish writing the specified output stream
returns the character offset
sets the character to be used for the next character
checks if the current token is a valid
resets the to the initial state
adds a mapping to the given file
appends bytes of bytes to the output stream
this method is used to convert the given byte array into a
adds a new mapping to the given uri
returns the next integer value
returns the next element in the stack
executes the given
this method is called by the servlet container
returns the string representation of the object
returns linger time of the connection
returns the number of bytes of this
this method is called by the thread
sets linger time
returns the value of the code long code as a long
start the thread
sets the socket
the given byte array into the current
stop the thread
returns the next element in the queue
start the lifecycle event
gracefully terminate the active state of this lifecycle
adds a mapping to the given file
add a mapping to the context
this method is invoked when the lifecycle event is fired
returns true if the context is a default context
returns true if the live is deployed
sets the
sets the live deploy
this method is invoked by the parser
execute a given command
logs a message in the logger
reads a n bytes from the input stream
sets the path
logs a message with the given throwable
returns the file system object
stops the server
this method is invoked by the config command
send a message to the server
sets the debug debug value
deploy the applications
this method is invoked when the lifecycle is activated
close the current session
logs a message in the logger
logs a message with the given throwable
scan the current scan
start the
stops the
creates the code digester code to be used to render the
executes the processing
p start the specified element
sets the logger
sets the code code property
this method is invoked by the config command
executes the processing
sets the code code property
starts the server
stops the
stops the server
expands the specified url
returns the socket factory used to connect to the server
returns the debug information
sets the debug level
sets the socket factory
returns true if naming conventions is used for naming
log the given message
sets whether the naming of the naming conventions should be used
returns the current logger
logs a message with the given throwable
sets the logger to use for this logger
returns the realm
start the process
sets the realm of the realm
returns the socket factory used to connect to the server
stops the application
sets the socket factory used to connect to the socket factory
adds a connector to this connector
undeploy the apps
deploy the database to the database
adds a new engine to the engine
creates a context for the given path
start the thread
creates a context for the given context
log the given message
create the engine
logs the exception
create a new engine
creates a host with the given name and host name
stop the thread
returns the info
removes a connector from the connector
returns the tomcat authentication
creates a host with the given name and host name
removes the context from the context
removes the engine from the engine
sets the tomcat authentication
removes the host from the host
runs the thread
creates a loader that is used to instantiate the loader
creates a request to be used to create a new request
creates a response to the response
this method is called by the framework to initialize the
creates a new processor
creates a new processor
sets the check interval
start the thread
gracefully terminate the active state of this lifecycle
returns the default context
stops the thread
sets the default context
removes a file from the store
returns the maximum number of idle connections in the database
creates a session
starts the cluster
process the request
creates a session for this session
this method is called by the osgi framework to log the
this method is used to process the request
adds a session to the session
start the store
gracefully terminate the active state of this lifecycle
start the thread
sets the connection url
start the lifecycle event
returns the
creates a session for the session
find a session with the specified id
this method is called when a bound property is changed
removes the session from the session
returns the file that is used to resolve the current context
this method is called when the session expires
clears the store
start the thread
returns a string representation of this object
creates a session for this session
checks if the given session id is loaded
logs a message in the current log
logs a message with the given throwable
load the cache
start the server
remove the cache from the cache
gracefully terminate the active state of this lifecycle
removes the session from the store
returns the session attribute for the given session id
returns a string representation of this object
logs a message to the log
unloads the session
logs a message with the given throwable
this method is called when the session is reached
remove a session from the database
clear the database
writes the session to the session
returns a connection to the database
checks if the given role is in the role
returns a string representation of this object
start the connection
begins a new realm
start the lifecycle event
returns the principal associated with the given username and
abort the authentication process
commit the subject
processes the expires request
closes the connection to the database
opens a connection to the server
returns the container
gracefully terminate the active state of this lifecycle
sets the container
returns the principal associated with the given username and password
returns the principal associated with the given username and password
returns the principal associated with the given username and password
execute the task
execute the task
returns the principal associated with the given code certificate code
returns the date of the current date
returns true if the principal has a role principal
start the thread
returns the principal associated with the given code certificate code
execute the task
load the digester
returns true if the principal has a role principal
execute the task
recycle the object
log a message
this method is used to run the thread
returns the principal associated with the given username and
close the connection
start the event
remove a resource from the resource
returns the digest of the given credentials
remove a resource link
returns the name of the type of the given type
creates a group with the given name and group
creates a role with the given description
returns the digest for the given realm
returns the naming resources
logs a message with the given message name
returns the creation time of the creation time
finds the database with the specified group name
finds the first occurance of a given role
logs a message with the given throwable
finds the database with the given username
removes the specified group from the group
remove a role from the database
removes a user from the database
returns the
returns an enumeration of all attributes
this method is called when the container is selected
sets the
the
the connector
logs a message
logs a message with the given message
the factory
sets the service to be used for the service
the
this method is used to remove the context name
remove a host name
starts the service
remove a service
sets the directory
remove a resource from the resource bundle
sets the prefix
sets the suffix
remove a resource link
returns the timestamp of the last call to the
log the given message
sets the verbosity level for this transport
sets the timestamp of the timestamp
log the given message
logs the given exception
close the writer
the service
sets up the context
writes a message to the root
open the directory
log a message to the log
sets up the request
log a message with the given throwable
start the event
gracefully terminate the active state of this lifecycle
sets the command
fires an instance event to all listeners
sets the environment
fires an instance of event to all registered listeners
logs a message in the system
removes the given string from the list of
returns true if the command is running
returns the web application directory
returns the query parameters
log a message on the stack trace
returns true if the game is ready to be ready
sets the response
sets the input stream
returns the container
sets the container
this method is called when the container is selected
listens for changes in the property
adds an alias to the list of the alias
adds the host to the host
finds the host with the given name
removes the alias from the cache
remove the host from the cache
returns the logger
sets the host name
returns the container
sets the container
create a new context
sends a request to the server
the
log a message on the stack trace
adds default context to the context
sets the container
maps the request to a specific request
sets the debug debug value
returns the live deploy flag
clears all attributes
sets the live deploy deploy flag
returns the class name of the mapper class
returns the name of the host
sets the class name of the mapper class
sets the attribute read only attribute
set the jsp file for this class
returns the deployed context for the given context
logs a message with the given message
logs a message with the given throwable
returns the load on startup
returns the context for the specified uri
returns the value of the named init parameter
returns an enumeration of all the parameters of the parameter
sets the default context for the default context
adds a connector to this connector
returns the parent class loader
logs a message in the logger
adds a child to this container
sets the application listeners
removes a connector from the list of connectors
logs a message with the given throwable
creates the digester to be used to create the digester
deletes the given directory from the directory
get a named request dispatcher
request the request to the request
returns the real path for the given path
unwrap the response to the previous response
add a mapper to the current mapper
install a war
sets the servlet class
returns the deployed context for the deployed context
remove a context from the deployer
remove a context from the deployer
returns the paths of a resource
start the deployer
returns the mapper for the protocol
stops the web service
adds a default mapper to the mapper
sets the route
sets the charset to use for the character mapper
maps the request to a specific request
logs a message in the database
logs the exception
removes the child from this container
start the server
add a ejb instance
log a message to the log
removes the given mapper from the list of all the available
add a resource to the context
log a message
sets the cookies
add a resource env reference
sets the cross context
add a resource link to the context
log a message on the logger
returns the value of the specified parameter
remove a ejb
returns an enumeration of all the parameter names
add a service to the service
removes the environment from the environment
sets the
this method is called when the server is unavailable
remove a local ejb
adds a cookie to the response
adds a header to the request
adds a locale to the request
clears the cookies
clears the headers
clears the current request
sets the authentication type
sets the path to the context
adds a default mapper to the mapper
sets whether the output is output
sets the http method
removes a resource from the repository
normalize the path
sets the query string
sets the path to the request
sets the request timeout
sets the session id
returns the wrapper class
removes a resource env reference
sets the flag
sets the uri of the request to be used to resolve the
merges the parameters in the current context
sets the path to the servlet
sets the principal principal
sets the wrapper class
remove a resource link from the repository
returns the protocol used for this connection
recycle this component
sets the resources used by this application
logs a message to the logger
returns the context
logs a message with the given throwable
returns the response
logs a message to the system
logs a message with the given throwable
sets the loader to use for loading
returns the name of the class that this class is using
returns the value of the specified header
flush the stream
prints the given boolean value
print a character
returns true if the given class is in the context of the
print the given char array
sets the manager manager
prints a double precision floating point number
prints the given float
reads the contents of the given input stream
prints the given integer
print a long
check if the specified servlet is allowed to be allowed
prints the given object
process the thread
prints a string
prints the current line
recycle the request
returns the authorization authorization
print a boolean and then terminate the line
print a character and then terminate the line
returns the name of the parent
print a char and then terminate the line
print a double and then terminate the line
print a floating point number and then terminate the line
stops the thread
print a new line and terminate the line
print a long and then terminate the line
starts the
print an object and then terminate the line
print a string and then terminate the line
writes the specified character to the output
check if the loader is declared in the specified loader
adds a listener for the application application
writes the specified
writes the specified character to the end of the buffer
stops the
writes a string to the output stream
writes a portion of a string
adds a new application parameter to the application
returns the value of the header
returns the error message
returns the status of the response
resets the status of the message
returns the wrapped response
returns the connector
sets the connector to the specified connector
returns the number of content in the response
returns the context of this context
returns true if the given manager is a default manager
sets the context of this context
adds a ejb ejb ejb
returns true if the element is included in the response
sets the included included included included
returns the info
returns the request request
sets the request
adds a context to the environment
returns the protocol
returns the response
returns the output stream
checks if the class is an exception
sets the output stream to the given stream
creates an output stream for the current output stream
adds a resource parameter to the list of resources
this method is called when the response is finished
returns the reporter
returns the input stream
adds a listener for the event
recycle the buffer
returns the absolute location of the url relative to the location
closes the underlying reader
checks if the given class is a persistable
sets the input stream
flushes the current response
writes the specified byte to this output stream
adds a parameter to the list of parameters
writes code len code bytes from the code byte array code
writes code len code bytes from the specified byte array
returns the wrapped request
returns the authorization authorization
sets the authorization credentials for this request
flush the buffer
returns the naming resources
checks if the given class is
adds a locale to the locale
returns the connector
sets the connector
adds a resource to the context
returns the info
closes the current request
add a resource env ref environment
returns the request object
sets the naming resources
returns the response
resets the current state of the request
sets the response
returns the socket
adds a resource link to the context
sets the socket to be sent to the server
returns the input stream
sets the content length
sets the stream to which the input stream will be written
recycle the service
adds a lifecycle event to the list of available
returns the wrapper for this request
sets the wrapper for this wrapper
sets the content type
creates a new input stream
returns true if the application is committed
finishes the current request
adds a wrapper for the wrapper class
recycle the pipeline
sets the content length
sets the content length for this request
sets the locale to use for the current language
sets the content type
returns the ejb context for the specified name
sets the content type
returns the number of content in the content
sets the path
sets the protocol
sets the remote address
sets the scheme
adds a cookie to the response
returns the environment context for the specified environment name
sets the secure status of the request
returns true if the file is included in the list
sets the server name
sets the server port
adds a new date header to the header
closes the underlying reader
adds a header value pair to the list
returns the resource with the specified name
returns the output stream
adds a header value pair to the header
creates a new http request
returns the resource env reference for the specified resource
sets the output stream to which this output is used
sets the public id of the public identifier
sets the suspended status of the
creates a response to the response
returns true if the specified header name is already in the header
returns the resource context for the given resource name
creates a new processor
returns the url for the specified url
creates a new output stream
this method closes the output stream
creates a new instance of the processor
removes the specified application listener from the application
returns the character encoding used for the encoding
returns the reporter
remove the application parameter from the list of applications
p this method is used to encode the url to the url
recycle the service
writes the specified byte to this buffer
remove a ejb
writes code b code b byte code to the underlying output stream
stops the thread
returns the input stream for this input stream
flush the buffer
removes the environment
returns the locale of the current locale
returns the character encoding used for the encoding
removes a listener from the list of listeners
returns an enumeration of all the locales in this collection
sends an error message to the status line
returns the output stream that is used to write the response to
removes a parameter from the list of parameters
returns the writer that will be used to write the content of
sends an error message to the client
returns a reader for this input stream
sends a redirection to the given location
resets the content of the response to the last content
removes a resource from the resource manager
resets the buffer to the initial state
sets the value of the specified header
sets the size of the buffer
remove a resource env reference
sets the header value
sets the content length
reads the contents of the buffer from the specified byte array
sets the content type
remove a resource link
sets the header value
sets the locale to use for the current locale
removes the wrapper lifecycle lifecycle event
sets the status of the status message
returns the protocol used for this connection
recycle the object
sends a message to the client using the specified status
resets the to its original value
creates and returns a new output stream
sets the status of the message
removes a wrapper from the list of listeners
returns true if the connection is close
removes the specified header with the specified name
returns true if the stream has been initialized
finish the response
sets the status of the response
sets the content length for this response
sets the value of an attribute
returns a string representation of this object
returns the writer that is used to write the response
returns the output stream that is used to write the response
returns the servlet context
sets the session timeout in seconds
check if the given address is a same address
start the lifecycle event
parse the username from the given username and password
parse the password from the given password
setter for property
gracefully terminate the active state of this lifecycle
start the event
gracefully terminate the active state of this lifecycle
adds a repository to the repository
this method is called when a session is changed
returns the for the given request
returns a string representation of this object
install the given configuration
removes the specified path from the
sets the wrapper for this deployer
p initialize the servlet
this method is invoked when a property change event
finds the resource with the specified name
logs a message in the database
logs a message with the given throwable
adds a new application parameter to the list of applications
notify the context that the context has a new
add a child to this container
adds a ejb ejb ejb
returns the session
returns the session
adds the environment to the environment
start the thread
logs a message to the logger
stop the thread
returns the actions string
returns a hash code for this instance
adds a resource parameter to the list of parameters
logs a message with the given throwable
compares this instance to the specified object
checks if the specified security permission object is the same
returns a string representation of the object
run the thread
stops the jar
sets up the description of the file
creates the control for the control actions
runs the
sets the value of a property
sets the home
adds a local ejb instance
sets the content length
sets the context msg to use for the message
recycle the reader
adds a resource to the container
add a resource env ref environment
adds a resource link to the context
creates a new msg context
open the given context
recycle this component
sets the bytes to the given byte array
sets the character array of chars
adds a servlet mapping for the specified servlet request
sets the string value
initializes the server socket
this method converts the char to a char
flush the current proxy
returns the level of the current level
sets the value of the int property
returns the stream to which the next message is available
flush the current state of the current thread
flush the buffer
sets the next shell
sets the real real object
recycle this object
sets the value of the specified header
sets the value of the attribute
removes the given header
returns the error page with the given error code
initializes the connection factory
process the query parameters
recycle the buffer
adds a user agent to the list of users
recycle the buffer
advances the current request to the next filter
sets the number of that will be used for the user
adds a mime type to the list of mime type objects
sends the status to the server
sets the mime type
adds a filter to the filter
sets the response
returns the local ejb object for the specified name
ends the current page
adds a string to the array of strings
sets the request content
write the message to the given byte
write the contents of the given chunk to the buffer
adds a restricted user agent to the list of users
returns the mapping of mime mapping resources
writes the specified byte array to the underlying output stream
writes the given string to the output stream
sets the restricted user agents
sets the request
returns the request
this method checks the ssl socket factory
recycle this component
sets the response
returns the response
recycle the output stream
recycle the pipe
returns true if the application is committed
sets the request
returns the request facade
returns the response object
returns the output stream
log the given message
sets the response to the specified response
log a message with the given throwable
initializes the filters
sets the socket
returns the input stream
check if the given string is a special header
returns the reporter
sets the proxy name
sets the content length
sets the content type
sets the locale to use for the content of the response
add a cookie to the response
returns true if the is
sets the
adds a new date header to the header
creates a new request
creates a response to the response
logs a message in the current log
returns true if the header contains the specified header
logs a message with the given throwable
returns the value of the attribute specified by the name
p this method is used to encode the url to the url
start the event
returns an enumeration of all attributes
gracefully terminate the active state of this lifecycle
remove a ejb
removes the environment
sets the value of the specified header
returns the input stream for this input stream
removes the given page error from the page
returns the value of the request parameter
returns a map of the parameter names
returns the absolute location of the url relative to the location
returns an enumeration of the parameters
returns a reader for this input stream
returns the remote address of the remote host
remove a local ejb
returns the host name of the remote host
removes a resource from the container
sets the value of an attribute
remove a resource env reference
adds a cookie to the response
removes a resource link from the model
adds a parameter to the list of parameters
clears the cookies
removes a servlet mapping from the servlet context
this method is called by the filter when the filter is started
this method is called when the filter is stopped
returns the filter config for the given name
p start the context
p this method is called when the application is stopped
returns the query string
returns the url for the given url pattern
returns the file system
binds the current context to the current thread
returns the paused state
returns true if the url is a valid url
creates a new domain object
generates a sql statement for this statement
generates a sql string for this object
generate sql to generate sql
returns true if the value is null
generate sql command
returns true if the value is quoted value
returns the class of the query
generate sql string
sets the class that is used to query the query
generates the sql statement for the query
returns the criteria
returns the value of the given string as a string
sets the criteria for this event
returns the class of the class
generates a sql string for the sql select statement
returns the next key in the queue
returns the maximum value of the object
removes all properties from the given properties
returns the minimum value of the field
returns the next key string
removes the specified property from the list of properties
returns the example
returns the next key in the database
sets the example
update the next key update statement
returns the excluded fields
update the next key
returns the initial number of connections
gets the value of the ignore ignore values property
returns the maximum number of connections allowed for this connection
returns the database wait time
removes the excluded properties from the list of excluded properties
adds a excluded properties to the list of excluded properties
this method is called by the garbage collector
make the connection to the server
removes the specified exclusion pattern from the exclusion list
returns the related object
returns the key generator key
starts the connection
sets the related object
returns true if the current transaction is active
returns the target object
adds a excluded property to the list of excluded properties
sets the target object
returns the name of the mapping from the path
creates a new connection
flush the transaction
returns the simple name for a class
closes the connection to the specified connections
save the object to the database
load mapping paths from map
deletes the object from the database
returns true if the key is persisted
returns the mapping for the given class
sets whether this object is persisted
returns true if the persistent object is persistent
sets the persistent state of this object
adds a new to the current state
mark the current unit as killed
mark the current dirty state as dirty
find all objects that match the given class
mark the current mark as removed
load the given object from the registry
load all objects from the given list
parse the given handler
sets the clazz
sets the cascade cascade attribute of the object
adds a new object to the map
returns the column names
removes a domain object from the list
sets the column names
returns a list of objects matching the given query
returns the class mapping data
sets the class mapping data
returns the domain object for the given id
returns the list of associations between the association and the
returns a list of objects that match the given object
sets the many associations
checks if the specified object is a key
returns the mapping data for this object
returns the one associations one associations are one of the associations
this method is called to parse the path to the specified path
sets the one of the associations to one relationship between one
this method is called by the tag parser to find the tag
checks if the given object id is contained in the relation
returns the list of properties
returns true if the given object id is contained in the database
returns the mapping data for this mapping
returns the relation class
this method is called by the class to indicate the tag of
returns the list of associations between the two associations
returns true if the object id is removed
sets the relation class
returns the inverse of the
sets the many associations one relationship associations
sets the inverse of this
returns the inherited associations
returns the loaded object loaded by the given object
this method is called by the inherited method
sets the inherited associations
find the object that matches the given id
returns the data for the given class
inserts a new table into the database
finds a object for a given id
insert a new object into the database
deletes a record from the database
finds a object with the given id
returns the mapping data for the given class
check version of the statement
returns the mapping data for the given class
returns the mapper that is registered for the given class
returns the mapper registered for a class
returns the configuration
sets the configuration
load objects from the given object
returns the connection to the database
returns a list of objects that will be executed in the database
registers a relation with the given object
returns the statement builder
creates a new find by id
checks if the object is in the domain of the domain
returns the domain object factory
inserts the object into the database
this method is called when the application is created
returns the key generator instance
returns true if all objects in the collection are not already in
returns the relation type for the given class
returns the find objects where the statement is where where
returns true if the xmldata mapping has a relationship
returns the mapper for the given class
deletes the object from the database
creates a new
returns a single string for a single string
deletes the current state of the current object
rolls back the transaction
inserts the new relation into the database
deletes all relations and deletes all associations
insert new object into the registry
update the version number for the given object
loads the associations for the given associations
update the cache
deletes all objects that are removed from the registry
load the object properties from a result set
test insert inheritance
test method for
test that the
test of delete inheritance
returns the prepared statement for the given id
test insert inheritance
test the find inheritance with one relation
load all objects from the given list
creates a new statement string
creates a new statement at the given database
creates a new prepared statement
check if a relationship is persisted
insert a new object in the database
insert a new object into the database
creates a new instance of the statement
creates a delete string
delete the prepared statement for the given id
create a new statement string
returns the prepared statement
look up a property in the path
returns the string value associated with a key
returns a string with the specified key
returns the original string value of the given key
returns the original string value of the given key
closes the window
adds a separator to the end of the list
forces the window to close all windows
removes a child node
returns a tree path for the specified url
navigate back to the history history
builds the menu bar
this method is called by the image to update the image
adds a new tile to the tileset
returns the string value associated with a key
returns true if the tile is a member of tile
returns the original string value of the given key
sets the type of the tile
creates a new tool bar
sets the tile at the specified location
returns a string with the given key
sets the offset to the given position
gets the magic string
returns the original string value of the given key
load the map of input values from the current map
saves the map of the to a given file
sets the width of the image
sets the height of the image
returns the name of the tiles
returns the magic string
this method is used to load the map of set pairs from
dump tree to tree
toggle the visibility of the palette
update image
save the map contents to the given output stream
returns the preferred size of the map
paints the component
returns the set of tile set
this method is used to close the dialog
sets the edit mode
returns the dimension of the selection
draws the image
close the current user
returns the current mode
load all the from the database
returns the map object factory at the specified index
returns the factory for the specified class name
sets the state of the toggle toggle state
compacts the map
adds a factory factory factory factory factory factory to the map
returns an iterator over the elements in this collection
notify all registered listeners about the event
returns true if the window is selected
sets the state of the window
returns true if the current frame is selected
returns true if the current frame is selected
sets the state of the toggle window
sets the state of the toggle button
sets the tile at the specified tile
initializes the properties
adds the given object to the current map
finds the resources for the given name
fires an event to all the listeners
adds a plugin to the plugin
returns the physical size of the map
locate a resource by name
returns the number of plugins
returns an iterator over the plugins
returns true if the failed
returns the number of failed tests
returns minor version number
compares this version with another version
returns an iterator of all the failed classes
selects a new object in the current selection
returns the hash code for this object
returns a string representation of this object
returns the scrollable unit increment
returns true if the plugin is in the plugin manager
returns the scrollable block increment
print a log message
logs a warning message
returns the jar file
save the properties to the file
sets the selected floor
logs the exception
saves the properties to the file
shuts the down
sets the locale
adds a new floor to the map
deletes the floor from the given position
shuts the down method comment
returns the zip entry for the specified name
draw the map
returns the jar entry for the specified name
removes a property change listener from the listener list
returns the weight of the
reports a bound property change
find the entry in the classpath entry
save the map of
returns the locale of the current locale
sets the locale
attaches the window to the window
returns the application file
returns the system plugin manager
returns the user plugin manager
returns the application file
returns a string representation of the
returns the for the server
adds a control to the drop support
creates a new instance of the associated eclass
creates a new connection to the given database
returns the total number of connections
removes a mud object from the hashtable
returns the mud object that is currently being used for the given
removes a mud object from the list of known mud objects
initializes the servlet
this method is used to set the content of the container
load a mud object from a location
this method is called by the framework to set the binding of
writes the current state of the script to the given writer
writes the given code code to the given code string code
removes the specified container from the list of objects
writes the specified code code to the given code string code
returns the next entity in the current state
append a string to the end of the list
returns true if the next character is a valid character
append a new array
returns the next character in the stream
returns the next character in the specified character
returns the next n characters
returns the next char in the iteration
append a key value pair
pop a char from the stack
returns the next character in the input stream
push a json element onto the stack
get the object value associated with an index
returns the next character in the string
returns the value of the lt char gt
skip over the specified char
get the double value associated with an index
get the int value associated with an index
get the jsonarray associated with an index
get the jsonobject associated with an index
get the long value associated with an index
this method produces a string containing the contents of the string
returns the optional boolean value associated with an index
get the object value associated with a key
returns the value associated with a key
returns the value of the specified element or code null code if
get the double value associated with a key
get an optional int value associated with an index
get the value at the specified index
get the integer value associated with a key
get the 16bit value at a specified index
get the jsonarray value associated with a key
get the optional long value associated with an index
get the jsonobject value associated with a key
get the optional string associated with an index
get the long value associated with a key
append a double value
checks if the given key is in the map
returns an iterator over the keys in the map
returns the number of elements in this map
produce a jsonarray containing the names of the elements of this
returns the value associated with a key
put or replace an object value in the jsonarray
removes the element at the specified position in this list optional
returns the value of the specified key or code true code if
produce a jsonobject by combining a jsonarray of names with the specified
writes the contents of the jsonarray as json text to a writer
returns the value associated with the specified key or the double mapped
returns the value of the specified key or code null code if
get an optional jsonarray associated with a key
get a jsonobject associated with a key
get an optional long value associated with a key
returns the optional string associated with the specified key or the
put a key value pair in the jsonobject
removes the mapping for the specified key from this map if present
returns an iterator over the keys in the trie
produce a jsonarray containing the values of the
writes the contents of the jsonobject as json text to a writer
load property value from properties
sets the value of the field
this method is called when the user selects a character
this method is called by the garbage collector
reset the state of the
puts the key value pair into the map
remove a link from the current itinerary
forwards the given node to the backward node
removes a link from the source node
returns true if the given link is a link forward
returns true if the given node is backward in the backward direction
removes the node with the given id from the node
checks if the node is a link forward
updates the status of the mod
returns a string representation of the object
compares this transaction object with another one
returns the hash code for this object
compares this transaction object with another one
compares this transaction object with another one
sets the id of the
returns the level of the current level
sets the level of the current level
returns a string representation of the object
compares this privilege to another
returns a string representation of the object
calculate the size of the
returns the number of
returns the number of
sets the string to be used as the string
returns the number of
sets the id of the
sets the id of the
sets the dimension of the
returns a string representation of this object
sets the end time
compares this member to another
delete the from the database
update the database
sets the style of the
returns the barcode
returns the students
returns the photo
sets the photo
adds a new user to the database
returns the user details as a string
updates the database
returns true if the students primary key is the same
sets the alignment of the text in the text
adds a time slot to the end of the course
adds a time slot to the database
adds a time slot to the slot
deletes the specified course and the slot
returns the time slot for the specified day and day
returns a string representation of this object
returns the time slots
deletes the current user
gets the value of the property
updates the data
compares this bean with another one
sets the
returns the week number of the week
gets the course code
returns the id of the abductor
gets the
add a lecture
sets the id of the abductor
sets the week number
sets the id of the abductor
delete lecture
returns a string representation of the object
compares this object with another one
returns a string representation of the object
compares this bean to the specified object
add a privilege access to the privilege
deletes the current record
updates the current data
add a privilege access to the privilege
add a slot to the
deletes the specified privilege from the privilege
remove a slot from the
returns a string representation of this object
returns the access rights
add a new user to the list
adds a slot to the list of known slots
adds a new user to the database
deletes the current user
deletes the database
get the user object from the database
checks if privilege access privilege access check access privilege
removes a slot from the database
check if the user has privilege privilege
update the database
returns the number of
returns a string representation of the object
compares this object to the specified object
add a slot to the slot
sets up the test case
tears down the test fixture
compares the specified object with this object
tears down the test
tears down the fixture for example close a network connection
test disconnect disconnect
sets up the user
tears down the test
deletes a slot from the database
this method is called after the user is destroyed
test the user bean
returns the code code of the current instance
test the creation of a user bean
tears down the fixture for example close a network connection
test that verifies that the user bean delete the user bean
returns a lecture bean
sets up the
tear down the test
get a instance for the given day and location
get tutorial for a tutorial
returns the
returns the
returns the
gets the no
returns the number of tutorial
gets the no
sets the no
sets the no tutorial
sets the no
adds a class member to the list of classes
remove a member from the list of classes
remove a member from the class
returns the class member of the given uid
returns the class list
adds a new object to the database
update the database
this method is responsible for finding all of the functional classes functional
all the containers of the given containers
adds an attribute to the set of attributes
returns the attribute value for the specified key
returns the value of the key
returns the first chart container container object for the given container
increases the next value in the list
returns the version of the file
sets the s style
returns the information of the note
removes a container container object from the container
this method is called by the reactor to configure the view
get a table by name
returns the upper case name
returns the proposals of the current context
returns a collection of all the community members
returns the number of in the community group
returns an iterator over the in this collection
returns a list of the context objects
compares this object with the specified object for order
check if the given date is currently in the current date
build the package task
builds a for the given task filter
build the work package of the current task
returns the number of in the working directory
build the work package for the given task
returns true if this peer has peers
returns true if the handler is open
returns the current context link
returns the fully qualified name of the context
find all the links in the given list of links
returns true if the package contains a single work package
returns a list of the role list
adds a community to the list of roles
removes a role from the list of roles
returns the version number
sets the version number
returns the workspace model
sets the
returns the code reports preference code
sets the value of reports preference
saves the preferences to the database
saves the current workspace
save the preference
applies the preferences to the current configuration
save the preference settings for the current save
applies the apply apply apply preferences to the current state
applies the preferences to the preferences
apply the preferences apply apply to the preferences
clones the workspace
this method is called when the user has to be done
builds the default view combo box
build the investment for the investment
build the value of the investment production
build the analysis analysis analysis
build the of the panel
the context map with the
build the show ready thread task for the given task
build the context map thresholds
build the context map
this method initializes investment quadrant panel
sets the data editor support
returns a list of all the peers
returns true if the input field is valid
returns the link to the
returns the default panel
returns the main panel
returns the server panel
build the work package and the work
called when a context is changed
returns the value of the is delivery owner property
returns the value of the is optional one
returns the value of the is delivery member community property
returns the value of the is required property
returns the value of the is required property
returns whether the owner of the is specification
sets the value of is delivery owner
sets whether or not the is optional
sets the is required
sets whether the given
sets whether this user is specification or not specification
returns the value of the is normal community member property
sets the view context
sets the community members community
returns the context object that is currently being viewed
sets the original object
returns a clone of the object
returns the object that is used to edit the
build the mapping of the build context
returns the component that is currently being edited
returns a list of all tasks
returns the component that is associated with the component
returns the navigation component
returns the component that is currently shown in the tree
returns true if the input field is valid
returns the code component code that will be shown in the tree
returns the runnable that will be used to execute the runnables
sets the runnable to apply to the thread
returns the default directory
sets the default directory
returns the object that is currently in the domain
this method is called whenever the data model is changed
sets the object collection
returns the column descriptor for the column
returns the value for the column
returns true if the cell is editable
returns the column name for the specified column
sets the object collection
rebuilds the panel
returns the check box for the work packages check box
returns the code check code property
returns the number of children of the package
gets the code code property
returns the work task sub task for this node
returns the value of the code story update check box code property
returns the time with the time reporting of the
returns the map of the map node
returns the time with the time reporting button
sets up the map
gets the value of the phone number type property
sets the phone number type
sets the object to be edited
returns the
sets the
sets whether the user wants to use the specified button
returns the object from context
returns the selected object
adds the widget to the form widget
returns the navigable objects in the domain
called when the task changes
checks if the input field is valid for the given input field
this method is called when the data is finished
returns the name of the task
returns whether the story is or not
returns whether the of the same type is
returns whether members are members are members are members of the same
returns whether the work packages the work packages are work
sets the flag that controls whether or not the story story is
sets the of the
sets the
sets the
sets the members same community members
sets the object collection
returns navigation map
this method is called when the user selects the
whether to write the same properties as an attachment
sets the
sets the flag that indicates whether the attachments are not same
returns the original file to attach to the
returns the file to attach to the file
whether the type of the same type is the same type
sets the flag that indicates whether the type of the same type
returns the model on the existing existing object
whether to use the community to community the community
sets the model on the panel
returns the menu state map
invoked when the user has changed its state
sets the panel to the panel
returns the context object for drop down drop down drop down
sets the object collection
returns the selected object
returns the task link task
returns the object
returns the date of the created date
returns the time of the created text
returns the date of the last modified date
returns the modified time text
sets the date time text
sets the time of the created time
sets the date of the modified date text
sets the time of the modified time
sets the object collection
sets the object collection
returns the completion status of the given completion
returns the completion status completion date
sets the object collection
returns the artifacts check box
gets the check box
returns the all project files check box
builds the main panel
this method is called by the application
this method is called when the launch object is made
returns true if the user has a valid role
returns true if the should be used to build orphaned files
returns true if the discussion only is shown
enable disable dropping drop down the drop down menu
returns the component containing the selected object
sets the object collection
returns the style of the selection
this method initializes search map
returns the perspective to search map
retrieves the list of all the in the database
test if the task is
removes the given object from the collection
update pending changes made in the pending update
sets the launch object to be used for the launch
sets the launch object to be watched
sends a pending update request to the server
invoked when a mouse button is pressed on a component and then
sets the original object
validates the value of the given decimal
invoked when the mouse has been clicked on a component
sets the object collection
invoked when a mouse button has been pressed on a component
returns the
find the node for a given object
sets the workspace mediator
invoked when a mouse button has been released on a component
sets the original object
sets the collection object that is notified of the community
returns the tool tip text for the tool tip
returns true if the should be used to build orphaned files
returns true if the discussion only is shown
returns true if the context is a context
creates the popup menu
test for the given object
test if the object is
returns the original object for the given object
updates the main box
sets the target renderer for the target
selects the selected tree path
returns true if the given node is a
sets the object
drops the drop down drop down drop down
update the buttons panel
updates the buttons panel
sets the main drop down drop down drop down
sets the main drop down drop down drop down
returns true if the task is
returns the all files check box
resets the date to the specified date
resets the week
invoked when the mouse has been clicked
gets the email field
mouse clicked method
returns the
gets the
returns the
gets the
returns the state map of the map
returns the
returns the workspace mediator
sets the work packages drop down drop down
notify the model that the update has been updated
drops the drop down drop down feature
sets up the drop down
adds the navigation actions to the navigation tree
sets up the perspective perspective
sets the object
creates the model wrapper model
release resources allocated by this workspace
returns true if the given node is compatible with this
returns the paint for the given node
returns the title of the
returns the color for the specified color
returns the conversation node node
returns the index of the specified object in the list
returns true if the can green led tasks
returns true if the can green led
this method is called when the filter changes
returns the name of the given attribute name
returns the organizational role check box
creates a combo box with the name combo box
sets the created since creation date
returns the date since the creation time
sets the modified since date
returns the modified date since the last time was modified
sets the stale flag
repaint the tree
rebuilds the tree and the tree
rebuilds the tree
refreshes the body of the notes in the given object
the current community context
checks if the service is still valid
resolve a task
resolve the conflict from the given workspace
sets the property names for the dependent
traverses the children of the parent
returns true if the current action is resolved
returns the object as a string
registers a new target
registers a new merge conflict
checks if the given object is a deleted local
retrieve the object
retrieve the object
sets the owner of the dialog
returns true if the filter is enabled
check if the given context is valid for the given context
returns true if the given context is valid for this package
check if the move is valid
creates the local temporary file local
called by the system to notify the application that the task has
wrap the task
this method is called when a new task is
removes the existing task from the collection of community objects
called when the task is done
returns true if the given node is stale
this method is called when the task is done
returns the enablement value
check if the mini resource is check box
returns true if the audit has no unsaved changes
returns true if the tree is selected
returns true if the current file is selected
returns the total number of
returns the number of in this container
handle the tree path
returns the default chart configurator
handles the tree path
returns the tree for the given path
returns true if this object can open a new
returns the quick report report package
sets the filter
returns the hierarchy
begins a transaction
removes the listener from the drop listener
notify that the transaction has ended
enables the filter
enables disables filtering filtering
commits the cache
disables filtering filtering
this method is used to provide the object to be notified of
disable all filtering
clear the cache of the cache
applies the changes to the cache
sets the callback to be executed
drop the data listener
merges the changes in the cache
sets the
this method is called when the user has added a new one
invoked when the data changes
returns the offset of the first paragraph of the document
notify all listeners that the has been paused
notify all the listeners that the given list of objects has been
notify listeners that the transaction has ended
returns a list of attachments
sets the attachment list
adds a new attachment to the list of attachment
adds a discussion topic to the list of
adds the discussion to the discussion
returns the date the target was
adds a new attachment to the list of attachment
removes the discussion from the list of the topic
checks if the given file is attached to the file
ensures that the components of the topic is valid
returns the number of tasks in the task
removes the attachment
returns a list of all community members
sets the community members assignment list
adds a new member to the community
adds a community to the community
build context map
removes a member assignment assignment
creates a discussion for the package
creates a new discussion discussion container
returns the task plan
returns true if the current state is closed
returns the set of tasks
returns the text of the text
returns the body of this note
sets the
changes the status of the
append a community to community role list
ensures that all members of community members are valid
collects all the members of the given community
returns the activation change by which the user is to be activated
returns the activation change date
returns the activation status
returns the default attachment directory
sets the activation change to the given value
sets the activation change date
sets the value of the relative default attachment directory
gets the
sets the conversation list
add a conversation to the list of questions
sets the workspace file
adds a conversation to the conversation
ensure that the components
collects the references to the community members
returns the workspace file
adds a conversation to the conversation
removes a conversation from the conversation
ensure can display the valid community
returns the number of green children
returns the show calendar perspective toggle perspective
if true the discussion will be shown in the perspective
sets the task task link list
adds a work task to the task list
checks if the community is a
removes a task link from the task plan
removes a task from the task list
returns true if this object is
returns the latest addition of the given date
ensures that all members of community lists are valid
returns the value of the em b em type em references
sets the value of the addition type holder property
check if the given community is using the same role
returns true if this is a
returns true if the can green led
returns true if the task is able to a task
make a community for the current community
returns the string
sets the
gets the task backlog
returns true if the user has role role
sets the body of the note
returns true if the task supports the same
returns true if the task has a work task
build context list for package
returns true if the given object can move a move
returns the last modified date of the last modified date
sets the task type list
returns the project for a given package
returns true if the task has yellow tasks
returns true if the task has gray
removes all work tasks from the task list
returns all the children of the selected group
returns the container body container
find all children of a given topic
returns the container body container
find all children packages
gets the sort order
returns true if the image is gray
removes a from the list of
returns the maximum possible value of the
ensures that the components of the components are valid
returns the minimum possible priority of the
returns the number of
returns the sequence number of the sequence
this method is used to get the parent context for the given
returns true if the package contains a package
returns true if the parent topic is parent
returns true if the context object is a child object
find all work package children
returns true if the given context is a same context
returns true if the task is a valid atomic work task
returns the task type
creates an empty role
returns the role preference
this method will be called when the node is
save the children of the node
creates an empty project
returns the project issue
this method is called by the framework to perform the path
sets the path to the file name
save the children of the node
save the story template to the database
returns the text file name
resolve the
save the story template to the database
returns the base file name
returns the object that is used to represent the object
sets the object to be used for the object
creates an empty object
returns true if the discussion is a discussion topic
returns the package that is currently running
this method is called when the persist state is done
returns true if the discussion object relates to the discussion
gets the value of the project instance property
returns the task domain
save the xml object
returns the text that is used to identify the image
build the path name
saves the to the database
initialize the task domains
retrieves the of the
returns code true code if the package name is work
gets the user preferences panel
sets the user preferences panel
returns the dialog that this dialog is currently selected
returns the main application dialog
returns the desktop preference
sets the main application dialog
returns the current center component
sets the current component to be used for the current component
sets the desktop preference
adds the given component to the current panel
this method is called by the user to do the
saves the preferences to the desktop
hides the panel
build the panel for the user preferences
returns the panel preferences panel
returns the file
sets the user preferences panel
saves the current configuration to the
sets the file
returns the preferences dialog
returns the file preference that is used to store the file
applies the preferences to the preferences
sets the dialog preferences
sets the file preference to be used for the file
notifies listeners that the user has changed
returns the current main component
load the first preference in the file
sets the current main component
apply the preferences apply apply to the preferences
returns the
clones the application
launch the default launch file
sets the
launches the given launch file
build the fields
returns the configuration file
edits the file edit action
builds the
sets the
builds the
builds the
shows the dialog
saves the configuration
sets the error label
creates a new file extension decision
sets the error message
runs the error
handles ok button
handle the cancel button
defines the file preference for the extension of the file
applies the preferences to the current user
returns the email preference
creates a pattern for the given file
applies the apply apply apply preferences to the current state
sets the email preference
check if file is invited to modify file
this method is called when the is loaded
saves the email preference
this method initializes new proxy location field
creates the gui components
standard accessor set the new proxy location
returns the proxy controller
saves the email preference to the database
sets the proxy preference controller
method to be called from
returns the dialog label
applies the preferences to the preferences
sets the dialog label
returns the display label
the link to the
returns the connection port button
sets the display label
runs the
handle the ok button
apply the apply apply apply apply apply apply apply apply apply preferences
add all the to the list of
clones the current instance
build the fields
returns the repository preference
returns the name of the element
sets the preference preference for the repository
returns true if the input field is valid
returns the file
sets the file
run the execution of the execution
returns the file preference for the file
sets the file preference
build the menu
saves the repository preference
sets up the default open menu
creates a menu item
saves the configuration settings in the current workspace
applies the preferences to the configuration
apply the preferences apply apply to the preferences
returns the dialog controller
sets the dialog controller
adds a component to the current frame
returns the dialog for this dialog
clones the workspace
returns true if the fields are required for the fields valid
returns the field validation container
build the build
builds the view panel
validates the required data
this method initializes center panel
sets the panel panel
returns the error message field
returns the error message
this method is called when the ok button is pressed
build the center panel
returns the collaboration preference
sets the collaboration preference
returns the local workspace preference
sets the local workspace preference
saves the local workspace preference
saves the local workspace preferences
applies the local preferences to the workspace
apply the preferences apply apply to the current workspace
clones the workspace
build the fields
build the
returns the dialog label
returns true if the input field is valid
sets the dialog label
returns the dialog message
sets the dialog message
this method is used to add new file extension to the dialog
checks if all fields are valid
returns the user configuration
sets the user
applies the preferences to the current user
saves the user preferences
saves the user in the database
returns true if the data directory is valid
returns the size of the project file history
sets the size of the project file history
applies the preferences to the user preferences
returns the workspace preference
apply the apply style to the current user
notifies all registered listeners that the user has changed
sets the workspace preference
apply the preferences apply apply to the current user
returns the user controller
saves the preference store
clones the current model
clones the user
saves the preference store
applies the preferences to the workspace
apply the preferences apply apply to the preferences
build the fields
clones the workspace
sets the user controller
build the fields
returns the proxy controller
build the sort history
returns true if the client is accepting
sets the proxy preference controller
sets the accept data
this method initializes instant collaboration panel
sets the label to be used for the label
sets the accept message
builds the phone number type
accept the accept
handle the ok button
handle the cancel button
returns the collaboration preference controller
build the phone
chooses the auto build for the
this method creates the phone number building
sets the controller preference controller
returns the file patterns controller
checks if the user is valid for the user
sets the file patterns controller
returns the repository preference controller
sets the controller preference controller
returns the email preference controller
returns the display label
sets the email preference controller
this method is called by the gui to run the
handle the ok button
this method initializes nickname field
returns the controller for the death model
sets the
returns the workspace preference controller
sets the workspace preference controller
applies the preferences to the database
this method initializes enable instant collaboration check box
returns the desktop preference controller
apply the current settings apply
sets the desktop preference controller
clones the current instance
returns the ok button
returns the cancel button
returns the apply button
build the fields
returns true if the user has valid fields
sets up the dialog and starts the dialog
this method is called when the user selects the
expands the tree
builds locations of a button
returns locations for the locations of the gui
returns the login text that is required to login
creates the listeners for the action listeners
creates the panel for the management management
closes the dialog
handle the add button add button
handles the delete button delete
creates the browse button
sets the workspace field
builds the directory button
checks if all fields are valid
returns the browse button
returns the create directory button
sets the value of the portfolio list property
initiates the test port
sets up the panel
removes the current from the current desktop
sets the task list
runs the
returns the apply apply button
returns true if the given file is accepted by this filter
returns the extension of the file
adds a filetype dot extension to filter against
returns the human readable description of the filter
this method initializes ok button
returns the check all button
returns the un check all button
returns the cancel button
sets discussion topic list
runs the action
build the browse button
this method is called by the framework to validate the data
moves the cursor to the next cursor
this method is called when the user selects a invalid data
build ok button
returns the start path of the file chooser
this method is called when the check all button is pressed
checks if the file is selected
sets the selected workspace
this method is called when the is pressed
returns true if the file should be exported
returns true if the export file is a export
this method will be called when the window is closed
creates the cancel button
sets the for the current task
invoked when a component loses the keyboard focus
this method is called when the user selects the ok button
this method is called when the user presses the ok button
exits the application
paints the component
sets the value of list clone
invoked when the mouse exits a component
returns the button map
sets the community list
sets the list of work package list
sets the task domain list
sets whether the refresh is enabled
sets the task plan list
sets the community members list
sets the project issue list
returns the
returns the file preference for the given name
returns the model for the given workspace
returns the model for the given workspace
creates the panel that is used to display the
prepares the gui
adds a file preference to the list of file preferences
removes a file preference from the list of file preferences
sets the list of operating system container
adds a new operating system container
removes a operating system container from the operating system
returns a file preference for the given name
compares its two arguments for order
returns the revision revision
edits the selected file preference
this method is invoked when the node is changed
creates the file preference for the current user
returns the edit controller
returns the panel that is currently being edited
this method will be called when a new node is inserted into
returns the file extension list controller
sets the file extension list controller
returns the dialog that this dialog is currently selected
returns the move controller
returns the move controller controller
returns the suggestions controller
returns the new controller
removes the given node from the parent node
returns the edit edit controller controller
sets the
returns the delete controller
sets the current file preference to be used by the user
returns the modify controller
tests if file name is a file name
sets the new value of the simple property modify controller
deletes the selected file
sets the current operating system system
move selected file up
moves down the selected file in the file system
sets the preference to the default
move up the up up view
moves down the view
this method is called when the user selects the
this method is called when the user presses the complete time
returns the for the given column
returns the value for the column cell
this method is called when the edit view is complete
sets the value at the specified column
returns true if the cell is editable
removes all the views
returns the column name for the given column
cancels the current session
creates the file preference dialog
returns true if the user wants to validate the current page
validate the file name
checks that the file extension is allowed to be saved
tests the file
returns true if the file is existing in the file system
this method builds the panel with the given panel
returns the controller controller
handle the apply button
handle the ok button
build the file filter
checks the application controller
this method is called by the dialog to restore the selected file
handle remove remove remove remove
creates a new dialog
handle the ok button
checks the application controller
returns the directory
applies the apply button to the current state
returns true if the file extension is editable
returns the edit dialog
sets the edit dialog
returns the original file preference
sets the original file preference for the current file
returns the current file preference
sets the current file preference
sets up the file preference
sets the edit dialog
handle ok button click
returns true if save button is enabled
cancel the current file
this method is called when the user edits the current file
returns the file extension mediator
handle cancel button
sets the file extension mediator
returns the dialog for this dialog
gets the file extension panel
returns the table
returns the persistence pattern
returns the file extension table
sets the current file preference
sets the dirty flag
returns true if the file is dirty
sets the file extension table field
returns the file extension mediator
handles the save button
prompts the user to save the current file
this method initializes new action field
sets the new action field
gets the file extension panel
removes the file extension
sets the file extension panel
returns the file extension list
returns the display label
this method is called by the framework to run the dialog
handle the ok button
this method initializes center panel
this method is called by the
builds the ok button
handle the ok button
returns the action controller
sets the action controller
sets the action name
this method initializes new file extension field
sets the new file extension field
this method initializes delete action button
this method initializes add action button
sets the action label
runs the action
returns the panel containing the center of the panel
this method initializes delete button
handle the ok action
sets the panel panel
returns the apply button
handle cancel action
sets the state of the button
returns the action controller
sets the action controller
returns the edit button
handles the ok button
handle cancel button
called when the ok button is pressed
apply the apply button to the controller
handles the ok button
handle the add action button
builds the buttons
sets the edit button
handle the action action rename button
handle the delete action delete button
build buttons
sets the new button
build the north panel
handles the save as button
creates the panel with the south panel
creates and returns a new file extension table
build the file extension list
checks if the given model is valid
build the file extension list
returns the file extension field
sets the file extension field
sorts the file extensions in the given file
creates a new file preference
returns the description field
sets the description field
returns the default file action
sets the default file action box
returns the file type box
sets the file type box
gets the selected file preference
sets the state of the button
returns the dirty flag listener
sets the dirty flag
sets the current file preference to be used for the current file
returns the popup menu
invoked when an action occurs
returns the pane tab pane
action listener interface implementation
sets the tab tab pane
invoked when an action occurs
move the file to the file
move the file to the file
action listener interface implementation
invoked when the mouse has been clicked
build the description file extension
builds the description file
adds a new file to the
returns true if the file is accepted by the filter
creates the default file action
initializes the default file action
initializes the file type box
build the extension fields
build the type of the fields
returns the south panel
returns the cancel button
creates and returns the browse button
returns true if the tab is allowed to remove the tab
build the server panel
creates a dummy file
removes the dummy dummy action
renames the file
creates the rename button
this method is called when a new action is performed
assert that the action is allowed to rename a given action
build the workspace panel
handles the action event
invoked when an action occurs
sets the dirty state of the dirty state
gives notification or update the document associated with the document
returns the parameter set for this parameter
mouse clicked method
initializes the center panel
invoked when an action occurs
gets the local path field
handles the add action button
handle the action rename button
returns the workspace
gets the organization repository
handle the delete action delete button
populate the repository box with the selected organization
this method is called when the user selects a button
this method is called when the user selects the ok button
removes the task from the pool
this method is called when the user selects a button
enables disables the ok button
checks if the input field is valid
returns true if the vertical stretch
initialize the repository
sets the default repository
handles a change in the combo box
returns true if the given file is a root directory
sets whether to use as as root
returns the default title
runs the
returns the default title
this method is called by the ant to run the
returns the file that is the initial file to be saved
executes a given runnable
build the apply button
returns the start file name
this method initializes repository box
this method initializes name box
sets the default repository
build the name
returns true if the file chooser is enabled
returns the default title
returns the panel that is used to display the panel
returns true if the current
returns the default title
returns true if the source is currently being included
returns true if the vertical stretch
adds the given runnable to the list of all the
executes a given runnable
returns the initial selected directory
returns the file that was added to the file
sets the list of the
sets the value at the specified location
shuts down the
returns the cancel button
sets the state of the button
this method is called when the user selects the
updates all of the selected
this method is called when the data is finished
deselect all the
select all the
selects the for the given workspace
selects the for the given repository
sets the check box state
build the panel for the panel
returns the start file of the selected file
moves the cursor to the given code
sets the initial state of the
build the apply button
build the file extension list
returns the default title
this method is invoked when the action is performed
this method is invoked when the user selects the update
invoked when an action occurs
invoked when an action occurs
returns the text file name
build the path name
saves the given object to the database
returns the build object for the current instance
sets up the
returns true if the dao is first accessed audit check
sets the first audit check
moves the cursor to the specified one
returns the value of the first audit check property
sets the check for the first audit
sets the task list
sets the item
returns the text of the editor
selects all the text in the editor
adds an action listener
removes an action listener from the editor
shows the page
returns the workspace
returns the color map
initializes the project
returns the field validation container
returns the of the
returns the rule target
returns the overview of the current page
returns the target of the target
returns the list of all paragraphs
returns the xml string from the xml file
writes the xml document to the xml file
returns a new instance of the current instance of the current instance
returns the default title
returns the default title
this method is called when the user selects the ok button
check the ok button
checks if the input field is valid
this method is called when the user selects the data
checks if the input field is valid
returns true if the is loaded
create an empty object
returns the collaboration server
returns true if the field should be set to false
returns the xml string for the given persistence
gets the value of the property
build the panel
returns the server side instance
method to get the fields
sets the
returns the config file configuration
sets the configuration object
build the file panel
creates a new file
checks if the file exists
get the object by its oid
returns whether or not the file can be downloaded
returns the text that is used to render the text
returns the open source container
build the path name
sets up the properties
build the file panel
sets the object to be used for this object
creates an empty link object
returns the synchronize synchronize files
returns the start file name for the current directory
returns the synchronize perspectives
returns the object that is exported
sets the file security change security
sets the display name
sets the path name
sets the
sets up the file
returns the start path of the file chooser
creates an empty object
returns the open source container
this method will be called when the parent node is
this method will be called after each node in the dom tree
returns true if the file should be included in the
returns the user configuration
this method is called when the attribute list is changed
returns a new instance of the node instance
build the path name
creates an empty object
returns the string value of the
creates an empty object
returns the open source category
this method is called when the node is
this method will be called after each node in the parent
returns true if the given property should be processed
runs the
sets the object to be exported
returns the export preference
sets the export preference
returns true if the should be rebuilt
returns the file name of the export file
remove a object from the database
puts a object into the
returns the object by oid
runs the
returns the value of the constant specified in the constant pool
returns the string constant value for the given field name
returns the file type container
sets the file type container
sets the file list
returns the extension of the file
returns the value of file type values
handle the ok button
returns true if save should be shown
this method initializes ok button
returns the value of the is continue directive
sets whether or not the continue should continue or continue
sets the file to be cancelled
build the file extension list
returns the file type dialog
sets the selected state of the table
sets the new state of the table
description of the method
this method is called when the user selects the file menu item
shuts down the
sets the user preference dirty
returns true if the dialog allows editing the file
handle the change in the workspace
applies the changes to the preferences
gets the edit file type controller
edits the selected file preference
returns a new file extension list controller
returns the file type file type
checks whether the given file name matches the file extension
called when the user selects a file type
returns true if the user is working offline
returns the local final user
sets the local
returns whether the offline server is started
sets the start offline
returns the data list
sets the data list
returns the sticky options
returns the data at the specified position
returns a clone of this object
reads the next line from the input stream
reads a byte from the input stream
sets the list of the right list of the
sets the persistence of the right list
sets the list of the to a persistence
creates the banner
sets the persistence from the left list of the
sets the background color of the selected tab
returns the gc button
sets the gc button
sets the text pane that is displayed on the text pane
removes the specified component from the current layout
returns the preferred size of the container with the specified
returns the minimum size of the container
returns the value for the given column and column
notify the model that the table model has changed
lays out the container
flips to the first card of the container
moves the next card to the parent
moves the previous component in the tree
moves the parent up to the parent of the last parent
resets the selection row to the current selection
returns true if the user can edit the user
flips to the card with the specified parent
gets the cvs controller
returns true if the file has data
checks if the given file is a
checks if the file is a file
returns true if the file system should be displayed
returns the tool tip text for the tool tip
returns true if the user has a valid data
returns the tool tip text for the tool tip
sets the value of the selected option
returns the string representation of this object
sets up the
returns the controller
sets the
returns true if the user can edit the current user
sets the value of the field
returns the validation component
updates the font of the font
notify the validation of the data
notify the validation of the data in the data
sets up the field editors
sets the value attribute of the object
returns the tool tip text for this plugin
sets the can edit
sets up the focus listener
gets the validation map
adds the widget to the form widget
returns the domain object
sets the domain object
returns the write method
sets the write method
getter for property read method
sets the widget to be used for the
paints the border for the specified component
sets the read method
returns a write method object for the given class
sets the widget state for the given widget
returns the read method object
sets the good data widget
invokes the method on the object
invokes the method on the object
returns the value of the code code property
initialize the setup method
sets the value of the field
validates the form without locking the
sets up listeners for the current document
validate the form
returns the tool tip text for this tool
returns true if the data is valid
sets up the
sets the value of the field
returns true if the file is valid
returns true if the parent is parent
returns the path method object
invoke the method on the path
sets the can edit
returns the tool tip text for the tool tip
sets up the field editors
sets the background color of the selected button
sets the ground color
checks if the input verifier is valid
sets up the document
sets the validation component
returns the tool tip text for the tool tip
returns the text field as integer
sets the initial value of the initial value
sets up the listeners for the component
sets up the
sets the value of the field
sets the view key
sets the value of the field
removes the leading zero and clipped text
sets up the listeners for the current document
returns the string representation of the current
sets the value of the date
sets the value of the field
returns true if the user has a valid data
returns the tool tip text for the tool tip
returns the tool tip text for the tool tip
returns the tool tip text for the tool tip
returns the minimum value of the spinner
sets the minimum tool tip
returns the maximum value of the range
returns the tool tip text for this tool tip
returns true if the data has been successfully valid
checks if the value is valid
returns the minimum value of the slider
sets the minimum tool value
sets up the component
returns the maximum value of the range
returns the tool tip text for the tool tip
returns the double field value as double double
returns true if the value is valid
sets the initial value of the initial value
sets up the listeners for the component
sets the view key
sets the value of the field
removes the leading zero and returns the leading zero and
returns true if the text area has the same value
sets the number of rows to be displayed
sets the font for this font
center the window
gets the value of the allow stretch stretch property
returns the tip text for this property
returns the collator
returns true if the is null
sorts the data in the table
sets the null
this method is called when the user selects the
this method is called when the data is valid
creates and returns a new
called when the user cancels the cancel button
gets the message
returns the topic
returns the value of private chat
returns a list of all users
sets the message
sets the topic
sets the private chat flag
returns the from
sets the from attribute of the object
returns the message
sets the message
returns the chat room
returns a list of all
returns the is private
returns the topic name
returns the time of the request
sets the chat room
sets the
checks if the input field is valid
sets the time request
connect to a connection
disconnects the server
this method is called to connect to the database
connect to the server
sets the model
sends a message to the server
this method is called when a new connection is opened
connect to the database
disconnects the connection
sends a message to the server
returns the identity panel
adds a listener to the message
removes a listener for messages from the jabber server
returns the panel that contains the room
send a message to the server
returns the server panel
returns the tabbed pane
fix the path
sets up the fixture for example open a network connection
tear down the test
sets up the test case
tears down the test
build the description property description
returns the date of the
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
tears down the fixture for example close a network connection
sets up the fixture for example open a network connection
tear down the test
tears down the test fixture
tear down instance variables required by this test case
tear down instance variables required by this test case
tear down the test
returns the output stream that is used to write the data to
verifies that the server is not running
opens the connection to the server
returns true if the output stream is
sets the url to the url
creates the builder to be used for creating a new
closes the server
returns the temporary file
sets the value of the checkout to directory property
returns the value of the checkout to directory property
returns the modules
returns the string that is used to represent the string
sets the to the
returns the continuation list
returns the continuation list
move the previous move
moves the cursor to the end of the current traversal
moves the cursor to the beginning of the current
restore the current context
returns the number of times the
sets the refer level
checks if the table contains a given column
insert a new entity
delete entity from database
returns the next value in the table
update an entity
returns the value of the column in the table
returns the next value in the sequence
execute a sql command
checks if the table name exists in database
execute a sql select statement
select a sql select statement
select a long value
select a sql select statement
select a date and select the result
returns the integer value of the given integer
returns the long value of the object
casts the given string to the given string
returns a new date cast object to the given date
copy the evaluation of the current state of the given evaluation
calculates the of the current board
sets the piece of the given position
adds a free to the current position
mark a bomb as winner
sets the tip for this tile
resets the current position of the board to the specified position
adds a free round to the list of free
returns the next player
returns the status of the current board
sorts the free list
sets the status of the current status
stops the server
returns the values of the given array of the values
returns the suggestion to which this suggestion belongs
sets the index of the given index
returns the best possible value of the last position
returns the minimum value for the specified player
calculates the current board of the board
returns the index of the current value
returns the minimum value of the index
returns the position of the
returns the for the given position
returns the value of the specified line as a line value
returns the value of the given position
sets the x y coordinate of the point
returns the y coordinate of the upper left corner of the
sets the to the given value
compares two objects
returns the move
returns the
sets the board to be used for the board
resets the board to its initial state
returns the piece at the given position
returns the of the given pattern
returns the depth of the board
returns the of the given pattern
returns the number of free places
returns the column number for the given position
switches the pause state
returns the row number of the given row
returns the number of that are currently being used by the
starts a new game
returns the number of the given code code
starts a new game
sets the size of the given component
the
sets the suggestion to be used for the player
sets the suggestion to suggestion
stops the server
starts the server
starts the server
displays the panel with the given string
creates the ok and buttons
creates the ok button
returns the player type for the given type
shows wrong message
checks if the player is still running
returns true if the host is a port
check if the client is
displays the game over game
mouse click handler
starts the game
change the player
refresh the board
sets the current suggestion
resets all the suggestions
resets the board to its initial state
returns the status of the board
removes a temporary lock object from the given object
returns the string representation of the given object
returns the string representation of the given
returns the string representation of the given object
parse the mdx expression
returns the json
creates a new query
creates a new statement
returns the connection
returns the json
this method is called by the
this method initializes this
this method initializes txf tipo
this method initializes txf fecha
this method initializes this
this method initializes tabbed pane
this method initializes aceptar
this method initializes combo
this method initializes this
this method initializes this
this method initializes scroll
this method initializes scroll
this method initializes tabla
this method initializes tabla
this method initializes bt sem anterior
this method initializes nuevo
this method initializes ver
this method initializes bt sem signature
this method initializes
this method initializes this
this method initializes tabla
this method initializes panel principal
this method initializes tabla
this method initializes txf nombre
this method initializes jtf nombre
this method initializes scroll
this method initializes guardar
this method initializes cancelar
this method initializes tabla
this method initializes bt guardar
this method initializes this
this method initializes tabla
this method initializes panel
this method initializes tabla
this method initializes lista
this method initializes txf codigo
this method initializes cancelar
this method initializes cancelar
this method initializes bt
this method initializes bt
this method initializes txf de compra
this method initializes txf desde
this method initializes txf de
this method initializes bt
this method initializes bt
this method initializes txf hasta
this method initializes txf numero
this method initializes rb hora
this method initializes bt excel
this method initializes txf inicial
this method initializes rb media hora
this method initializes txf nombre
this method initializes txf hora inicial
this method initializes txf
this method initializes txf numero
this method initializes txf nombre
this method initializes txf direccion
this method initializes rb todos
this method initializes combo
this method initializes txf
this method initializes combo
this method initializes txf registro
this method initializes bt
this method initializes txf telefono
this method initializes rb
this method initializes j check box1
this method initializes guardar
this method initializes txf fecha
this method initializes txf hora inicio
this method initializes cancelar
this method initializes txf hora fin
this method initializes tabla
this method initializes distributions
this method initializes scroll
this method initializes guardar
this method initializes cancelar
this method initializes no
this method initializes nuevo
this method initializes this
this method initializes ver
this method initializes txf codigo
this method initializes tabla
this method initializes bt
this method initializes jtf nombre
this method initializes combo
this method initializes scroll
this method initializes txf
this method initializes tabla
this method initializes tabla
this method initializes jtf
this method initializes jtf fin
this method initializes fecha inicio
this method initializes txf
this method initializes fecha fin
this method initializes
this method initializes txf descripcion
this method initializes txf
this method initializes cancelar
this method initializes detalle
this method initializes tabla detalle
this method initializes txf stock
this method initializes bt
this method initializes
this method initializes txf nombre cliente
this method initializes txf total detalle
this method initializes txf saldo inicial
this method initializes bt
this method initializes txf inicial
this method initializes txf total
this method initializes
this method initializes guardar
this method initializes bt mostrar lista
this method initializes rb hora
this method initializes
this method initializes total
this method initializes tabla total
this method initializes txf nombre cliente
this method initializes cancelar
this method initializes mes
this method initializes tabla mes
this method initializes rb media hora
this method initializes combo
this method initializes
this method initializes
this method initializes txf fax
this method initializes txf total mes
this method initializes txf nombre
this method initializes combo
this method initializes txf email
this method initializes this
this method initializes scroll
this method initializes txf
this method initializes lista
this method initializes this
this method initializes this
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes txf nombre
this method initializes password
this method initializes
this method initializes this
this method initializes panel monitor
this method initializes bt
this method initializes m reloj
this method initializes txf entrada
this method initializes this
this method initializes txf estado
this method initializes this
this method initializes txf
this method initializes j tabbed pane
this method initializes this
this method initializes txf monto
this method initializes txf nombre
this method initializes panel reloj digital
this method initializes combo tipo
this method initializes txf
this method initializes detalle
this method initializes txf desde
this method initializes scroll
this method initializes txf hasta
this method initializes bt aceptar
this method initializes combo
this method initializes bt cancelar
this method initializes bt
this method initializes txf fecha
this method initializes bt
this method initializes this
this method initializes this
this method initializes panel monitor
this method initializes this
this method initializes j content pane
this method initializes bt nuevo
this method initializes scroll
this method initializes lista
this method initializes scroll
this method initializes bt
this method initializes bt aceptar
this method initializes this
this method initializes bt
this method initializes lista
this method initializes txf desde
this method initializes txf fecha
this method initializes txf hasta
this method initializes this
this method initializes bt
this method initializes combo
this method initializes this
this method initializes
this method initializes this
this method initializes combo
this method initializes combo
this method initializes txf
this method initializes bt
this method initializes this
this method initializes this
this method initializes bt
this method initializes j
this method initializes modificar
this method initializes txf detalle
this method initializes this
this method initializes txf cantidad
this method initializes eliminar
this method initializes scroll pane
this method initializes fecha
this method initializes txf total
this method initializes tabla
this method initializes combo clientes
this method initializes txf total monto
this method initializes txf total
this method initializes txf detalle
this method initializes combo tipos
this method initializes txf total
this method initializes txf num
this method initializes
this method initializes txf inicial
this method initializes txf
this method initializes txf final
this method initializes modificar
this method initializes eliminar
this method initializes txf
this method initializes tabla
this method initializes txf total cantidad
this method initializes txf total monto
this method initializes txf fecha
this method initializes txf cantidad
this method initializes txf total
this method initializes txf total
this method initializes txf detalle
this method initializes
this method initializes
this method initializes
this method initializes modificar
this method initializes txf tipo c
this method initializes eliminar
this method initializes eliminar
this method initializes scroll pane
this method initializes
this method initializes tabla
this method initializes txf total cantidad
this method initializes tabla
this method initializes txf total monto
this method initializes txf total
this method initializes combo estados
this method initializes txf
this method initializes txf
this method initializes txf
this method initializes txf
this method initializes txf
this method initializes txf
this method initializes txf estado
this method initializes guardar
this method initializes txf fecha
this method initializes
this method initializes txf
this method initializes txf total
this method initializes combo tipo
this method initializes aceptar
this method initializes cancelar
this method initializes panel
this method initializes txf codigo
this method initializes panel
this method initializes panel
this method initializes guardar
creates the question
adds a new empty option to the current question
removes the last choice questions from the current choice
adds a new empty option to the current question
removes the last choice from the list
this method is called when the user selects the question
called when a question is created
called when a question has been cancelled
returns the number of questions in the questions
returns the number of questions in the city
returns the total number of questions in the questions
returns the number of entities in the given class
creates a new empty option
adds an option to the list
returns the questions questions
sets the min number of options
returns the minimum number of options in the option
removes the last option from the list of options
returns the number of questions in the questions
sets the options
sets the nullable nullable
gets the nullable nullable property
send a data request to the server
connect to the server
returns the radio button for the given host
returns the radio group for the specified host
adds a listener to the socket listener
removes a listener from the socket listener
adds a listener to the socket listener
removes a listener from the listener list
adds a socket listener to the list of listeners
removes a socket listener from the list of listeners
adds a listener to the socket
removes a socket listener from the list of listeners
this method is called when the poll is polled
this method is used to send a data event to the data
returns true if the connection is established
connect to the server
disconnect from the server
connect to the server
returns true if the connection is established
disconnect from the server
returns the base station for the given station id
this method is called when the is
returns the host with the specified id
polls the host catcher for the host and the
returns the host with the specified address
this method is called when the user is done
notify listeners of a new event
listens for incoming messages and waits for incoming messages
adds a listener to the list of listeners
removes a listener from the list of listeners notified when the
returns true if the current time is still running
returns the prototype of the current prototype
returns the address of the
reset the
gets the address of the address
returns the number of in the
returns the type of base best base base type
returns the best available type of the
sets the duty
this method is called periodically in the replication loop
returns the sensor
pauses the sensor
this method is called when the sensor is
stops the controller
this method is called when the user selects a control
sets the state of the player
adds a macro to the macro
returns the macro macro
returns true if the given state is valid
process the next step
frees the controller
adds a new listener to the remote device
adds a remote remote remote to the remote server
sets the current color to the current color
draw the slideshow
this method is called when the slide is
the
starts the blinking
sets the low level of the
sets the flag indicating whether or not the given
starts the server
this method is called by the framework to run the
adds a new code displayable code to the code drawables code
sets the value
sets the sleep time
this method is called when the robot starts
returns the source of this event
returns the source of this event
returns the source of this event
returns the source of this event
change the control mode for the control
sets the sensor position
sets the sensor speed
the
sets the
sets the value of the
sets the d
returns the
returns the inclination of the
returns the current value of the
enables or disables the closed loop
enables or disables the closed loop
disable the closed loop
returns the voltage input value
returns the output voltage for the output
returns the current output of the current output
returns the current temperature in degrees
returns the position of the current position
returns the speed of the crane
returns true if the is allowed to be used
returns true if the right status of the is allowed
returns the value of the
sets the voltage rate
sets the encoder resolution
sets the limits limits
sets the turns
returns the last command in the current time
executes the given command
this method is called to stop the
returns the encoder used by this encoder
returns the
returns the power sensor
executes the given command
stops the
gets the
toggle state of the
executes the given command
returns a string representation of this object
turns the current state of the effect
executes the given command
stops the
returns a string representation of this object
execute a command
halt the
executes the given command
returns the fault sensor
stops the
this method is called to translate the value of the specified
the current game
executes the specified command
stops the
adds a listener for the element
stops the controller
this method is called when the operator is opened
removes a listener from the list of listeners
this method is called when the
returns the acceleration of the
returns the angle between the and the sensor
adds a listener to the switch
removes a listener for
notify the left left side of the left side
notify the right of the right side of the right side of
sets the resolution of the file
adds a listener to the list
removes a listener from the list of listeners
notify the listeners that the sensor has changed
returns true if the value is a fault due
notify the listeners that the sensor has started
returns true if the current user is a fault
notify the listeners that the event has stopped
returns true if the current connection is a
notify the listeners that the direction has changed
returns true if the current is a fault
returns the speed of the simulation
adds a listener for the element
removes a listener from the list of listeners
sets the value of the resolution
adds a listener to the
notifies all registered listeners that the given
removes a listener from the list of listeners
notify the current fault
notify listeners that the has changed
notify the listeners that the fault has been changed
notify listeners that the has started
notify the listeners that the fault has changed
notify listeners that the has stopped
notify listeners that the procedure is connected to the server
notify listeners that the direction changed event
notify the current normal
notify all listeners that the current
adds a listener to the power supply
notify the listeners that the has changed
removes a listener for the power listener
notify listeners that the voltage value changed
notify the listeners that the current power has changed
notifies all listeners that the
returns the priority of the current state
adds a word to the word
removes a from the list
returns the number of elements in this list
returns the index word at the given index
returns the index of the word in the list
returns the number of
compares this object with the specified object for equality
returns the sense of the synset
returns the node list of the node
returns the target pointer that is the target of the target
returns the target pointer
returns the exception at the specified index
returns the source synset of the synset
finds the first relationship in the given map type
returns the target synset
returns the depth of the current document
build the relationship of the given node
returns the direct of the synset
returns the label of the current
returns the tree
returns true if the given position is in the current position
returns true if the given type is symmetric
gets the value of the type property
returns the direct of the synset
returns the tree
returns all the matches of the given operator
returns true if the word is a lexical
returns the synset of the synset
this method is invoked when an argument is chosen in the list
returns the word in the current target
returns the coordinate of the specified pointer
finds the first node in the list
returns the for the given synset
compares this pointer to the specified object for equality
returns the first match of the given operator
returns the current pointer to the tree
returns a list of all matches for the given operator
returns the reverse pointer to the reverse list of successors
finds the first pointer in the tree
finds the first matching target in the target list
prints a type
prints the given type
prints the given type
prints the given type and the list of nodes
moves the cursor to the first move
moves the last element to the last move
returns the list of target nodes
compares this object against the specified object
returns the for the given synset
returns the that is in the given synset
returns the for the given synset
returns true if the word is a lexical source
returns the source of the source
returns the target
returns the offset of the target
returns the member for the given synset
install the
returns the list of target nodes
returns the for the given synset
returns the next token in the stream
returns the next token in the iteration
returns the next token in the input stream
returns a new next integer value from the input
returns the next hex value in the buffer
returns the next token in the input stream
returns the inherited part of the given synset
open the streams
returns the inherited member of the given synset
opens a file
returns the inherited of the synset
returns the for the given synset
returns the member for the given synset
returns the list of target nodes
returns the inherited for the given synset
returns the file type
open the file
returns the inherited part of the given synset
returns the file manager
returns the inherited member of the given synset
returns the inherited of the synset
returns the tree for the given synset
returns the by the synset
returns the for the given synset
returns the for the given synset
lookup a base form
returns the list of targets in the list
returns the index of the given word in the sequence
returns the target tree node
this method is called to handle the request
returns the code pointer code for the code pointer code at the
tests if the given test matches the given test case
returns the of the synset
returns the color provider for the
returns the scanner for this proto
returns the ruleset scanner
returns the
returns the list of targets that are contained in the list
returns the tree for synonyms of synset
dispose of stuff
saves the multi page editors document
save the content of the document
returns the parent of the specified element
returns true if the given element has children
adds a child node to this node
clears the content of this node
updates the outline viewer
creates the pages of the multi page editor
saves the multi page editors document
returns the primary representation of the
sets the value of primary key
returns the starting position of the starting character
sets the starting char position
returns the primary representation of the object
sets the primary primary key value
returns the name of the
sets the name of the
gets the value of the property
sets the
returns the font style
sets the font style
returns the speech community
sets the speech community
returns the included vocabulary
sets the value of included vocabulary
unread the scanner
returns the
sets the
adding the page to the wizard
returns the entries
sets the entries
creates the actions
creates the pages of the multi page editor
saves the multi page editors document
change the page number
creates the buttons for the button bar
returns the initial size of the frame
compares this object with the specified object for order
returns true if the given package name matches the given wildcard
writes the headers to the sequence of
compares this candidate object against the specified object
returns the connector that is connected to the connector
returns the hash code of this object
returns the value of the given key
returns true if the type is a class type
connect to a given host
returns true if the given class is a class
compares this object against the specified object for strict
returns the hash code for this object
determine if the given type is a class type
writes the string to the writer
print the contents of the given code writer code
returns true if the given class is a class
compares this object with another one
write a string to the output stream
returns the name of the column
returns the hash code for this object
returns the first element in the list
writes a string to a writer
returns true if the given method is a class
returns the last element in the iteration
returns the last used time for the last column
clear the log writer
sets the last used time for this object
sets the last used time for this cell
returns true if the type is a class
remove the from the
returns the index of the specified column in the table
returns the x coordinate of the element at the specified position
this method is called from the
set the value of the given c
determines if the given class is a class or not
returns the of the given
this method is called from
this method is called from the
performs the
this method is called from the
closes the current session
adds a watch to the
add a watch watch
returns the name of the package of the package
writes the given arguments to the output
add a watch on the capture entry watch watch entry point
sets the output val
check if a step watch step is set to the given time
returns the string
returns the string
returns the number of times the watch has been rejected
add a watch watch
returns the number of in the
returns the number of tokens in the string buffer
deletes all the from the given
returns the xml document that is used to create the document
this method initializes this
returns the metric name
returns the string representation of the number of days
this method is used to handle the command line
returns the properties for the sensor data
this method is used to handle the command line arguments
returns the client that is currently running
returns the application session
returns the info object for the given light
sets the chart type
sets the date the date is displayed as a new date
sets the end date of the task
sets the source of the message
returns the date the was last used
returns the end date
get the key map
this method is invoked when the item is runtime
this method is invoked when the user changes the
the code is changed code implementation of this
notify the model that the row has changed
notify all table rows in the table model
this method is called when the user selects the edit part
fire table table inserted event
returns the hash code for this object
sets the window size
sets the watch info
get the watch info
sets the user info
show a message with a given id
this method is used to get the user info
generate a watch info for a watch
show a message with the given user id
paint the background of the background
sets the time out and path to the
returns the time in the given sample time
sends a user info to the user
displays the user infos in the user
returns the time in seconds for the given time
this method is called when the user selects the choice panel
show a reminder message
this method is called by the system to indicate the evaluation
sets reminder data to be displayed
this method is called by
sets the time mode for the watch
send a info packet to the server
sets the rate
this method will set the limits of the heart beat
initialize the heart rate limits
sets the exercise to the exercise
sets the attributes to display
initialize the hour choice
sets the window size
this method is called when the exercise is
check if the item is null
sets the limits and repaints the panel
sets the check boxes
returns a string representation of the object

show downloaded data
this method is called when the user selects the user combo box
show a message for the given info
initializes the default buttons
shows the
returns a string representation of this object
send a reminder to the server
send user info to the server
convert a unsigned 16 bit integer to a byte value
returns the integer value of the input text field
send a notification that the watch has a
returns a string representation of the given byte array
sets the input text
encode a byte to a byte
this method is called when the user selects a exercise
returns a string representation of this packet
checks if the input is valid for the input
set the chain lengths
send a to the server
checks the validity of the given hour
sets the size of the wheel
sets the labels
select the exercise
returns the start point of the y coordinate
decodes the in the
sets the exercise data exercise
adds a reminder to the reminder vector
returns the x coordinate of the x coordinate of the
inits the in the choice pane
returns the packet number of the packet
adds the exercise to the vector of exercise exercise
convert the default value to a relational variant
draw the diagram
close the serial port
returns the bytes to read from the current file
returns the y coordinate of the given pixel in the map
parse the given file
parses the response packet
returns the number of remaining bytes in the current session
initializes the default buttons
parse the given byte array
returns the console output piped output
sets the date
intialize the exercise
parse the given byte array
sets the
get searched searched from ht
initializes the recovery time
sets the length of the packet
parses the response packet
returns the distance between the given distance and the distance from the
sets the virtual size of the viewport
this method is called by the digester
initializes the exercise
run the test
this method parses the configuration
generate a new code byte array code
returns a string representation of the object
returns true if the screen can be scrolled
initializes the exercise
returns the reminder for the specified
initializes the exercise
calculates the sample length
returns the sample offset of the lap
this method is called when a data is arrived
the lap of the lap
sets the lap rate
get the time of the lap split time
calc lap lap
returns a
get recording mode
a byte value
decode a altitude in the current format
decode a temperature
commit the session
returns the name of the forum group
gets the value of the property
gets the value of the property
returns the name of the category
load properties from the database
returns the counter value for the given number of keys
returns true if the next element has a next index
returns the next element in the list
update the modified date
returns the watch manager
load the last post
insert the db to the database
updates the modified date
returns the next element in the iteration
returns the previous element
inserts the database into the database
clones a new filter that will have the same properties and that
returns the name of the
returns the description of the filter
returns the author of this object
returns the subject of the document
returns the html tags of the body element
escapes tags for a given input
clones a new filter that will have the same properties and that
returns the name of the
returns the description of the filter
returns an enumeration of the names of the filter
returns the subject of the message
returns the body of the message
initializes the data store
initializes the data store
sets the
checks if the action is valid
executes the sql statement
initialize the data in the database
checks if the database is required
checks if the database is still valid
initialize the data
executes the sql statement
initializes the connection with the given data
sets the value of target data store
sets the connection
returns the result set of the given result set
closes the current connection
executes the strong code execute code method
initializes the manager
returns a string quoted string
initializes the data store
checks if the current user is allowed to execute the given action
executes the action
initializes the data store
executes the action
initializes the data store with the given data
initializes the database
checks if the current user is allowed to perform the
sets the cache for the given cache
checks if the current user is allowed to perform the
checks if the current user is allowed to execute the
returns the last error
sets the key values
returns the key values
sets the xml file name
returns the value of the field
clears the cache
empties the configuration
puts a value in the field
refresh the current state of the model
sets the value of a field
returns the print writer for this file
returns the output for the given name
returns the number of keys in the table
returns the value of the specified field
initializes the data store
returns the redirection path
returns the value of the given key
initializes the pool
checks if smtp server is connected
checks if smtp server is connected
returns a short description of the servlet
this method is called by the framework to perform the cleanup
returns a short description of the servlet
returns the template mode
sets the template mode
returns the template search limit
sets the template search limit
returns the last modification time of the request
returns the template root
sets the template root
returns the default index
sets the default index
returns the name of the tag
returns the default object
sets the default object
gets the value of the template search property
sets the template search
send a page request to the page
returns the pool connection pool for the given name
navigates to the page
initializes the page
set the url of the pool
destroy the servlet
sets the user defined in the user
sets the password
returns the value of the given key
sets the maximum number of connections in the pool
initializes the pool
sets the pool of the connection to the pool
sets the time out
returns the url of the
sets the pool limit
sets the last time the user last time
returns the user defined in the user
sets the current activity
sets the holdability of the result set
set the time in nanoseconds
retrieves the holdability of this code result code object
returns the password
creates a new instance of the current savepoint
creates a new instance of the given code savepoint code object
rolls back the given code savepoint code
returns the maximum number of connections in the pool
creates a code prepared statement code object for sending
returns the number of
creates a code prepared statement code object for sending
creates a code prepared statement code object for sending
returns the time out of the pool
removes a savepoint from the database
sets the map type
returns the number of pools the pool is
sets the auto commit flag
sets the catalog name
returns the time in nanoseconds
sets the read only mode
sets the transaction isolation level for the transaction
returns the number of times the was used
returns the time in milliseconds
returns the last time used to indicate that the last time the
returns the id of the connection
returns the current activity
is the closed state of this connection
returns the code auto commit code implementation
retrieves the catalog name
returns the meta data for this database
returns a map of type map objects
whats the transaction isolation level
retrieves the warnings reported by this connection
is the database a read only
increment times times used to increment the number of seconds
closes the connection
p clear warnings
commits the current transaction
creates a new statement
executes the sql statement that returns the current
creates a code callable statement code object for calling
creates a code prepared statement code object for sending
p process the start tag for the package
this method is called by the body parser to perform the body
this method is called by do do do end tag
sets the file
process the start tag
returns the resource for the specified template path
sets the name of the
sets the value of id
returns the has row data
rolls back the current transaction
sets the value
process the end of this tag
process the start tag
sets the value of the show package tag attribute
prints the message
sets the value of name
this method is called by the body parser to perform the body
process the end tag
returns the value of the show package tag property
this method is called by the processing of the body of the
sets the value of add add file
sets the error
sets the name space for this component
returns the data store name
sets the data store name
sets the action
returns a string representation of this object
this method is called by the framework to initialize the application
initializes the properties object
sets the data store
sets the cache
returns a string representation of this object
sets the start row
destroy the servlet
sets the number of rows to be used for the
this method is called by the server when the server disconnects
returns the number of rows in the table
sets the template loader
sets the value of the glossary
sets the page
returns the template loader for this template
returns the value of the glossary
sets the glossary
returns the total number of rows in the table
returns the glossary
sets the total number of rows in the table
sets the template
adds a new to the glossary
returns the current row
returns true if there are more rows to be processed
puts a string value into the
returns true if the table is no
returns the value of the glossary
moves the cursor to the next row
applies the given text to the current location
checks if the given field name exists in the database
returns the output file
returns the row data
returns the field name for the specified name
returns the tracked count
returns the output for the given name
puts a header value into the header
process start tag
render the end of this page
returns the header value for the specified header
returns the number of cached cache entries in the cache
returns the headers
returns true if the header contains the given header
returns the maximum track number
sets the time of the last modification time
sets the maximum track number of the
returns the string representation of the contents
returns the contents of the contents of the document
returns the maximum number of
returns the length of the contents of the buffer
append a string to the end of the list
sets the maximum number of to be used for the
sets the error message
returns the refresh interval
resets the contents of the buffer to the beginning of the
truncates the contents of the buffer to the contents of this file
sets the refresh interval
sets the hit count
returns the number of hits
returns the dirty flag
sets the page paging status
sets the dirty flag
returns true if the page is cached
sets the time of the cached time
returns the cache hash cache
increments the hit count
returns the total time of the
returns the cache request
returns the cache hits
returns the cache hits cache
returns the start time of the task
returns the maximum track reached for the last track reached
sets the page
returns the maximum number of concurrent conversations
gets the value of the serving page property
sets the client client
returns true if the player has a track
gets the value of the serving client property
gets the value of the is max store flag
returns the maximum track turn over the current turn
prints the current time
returns the number of hits in the page
returns a page with the given id
returns the total number of urls in the cache
returns a string representation of this object
write the file to the file
returns the type of the
this method is used to get the data of the data
returns true if the critical points of the critical points
returns true if the socket is open
this method is used to get the data of the data
closes the socket
sets the socket status
checks if the socket is
sets the socket buffer size
returns the size of the socket
sets the receive buffer size
returns the size of the socket
sets whether or not the timeout value should be used to select
returns true if the timeout value is allowed to use
sets the
sets the timeout for the socket
sets the identification of the
sets the offset of the fragment in the
returns the timeout of the connection
sets the timeout for receiving messages
returns the timeout of the socket
reads the contents of the given file
reads the contents of the given file
called when the game is started
called when the end of the game has ended
initializes the image
returns true if the land has land
adds a style for the given style
adds a css style to a given style
removes a keyword style
removes a style from the list of keywords
adds a token style to the list of tokens
adds a token style to the list of tokens
adds a token style to the list of tokens
this method is called when the text area is typed
initialize the image
sets the main directory
returns the file name of the last file in the database
resets the current state of the
returns the name of the mod
sets the name of the scope to be used for the
gets the main directory name
returns the name of the mod dir
returns the mod name
append a comment
returns the child object associated with the given id
returns the child object of the given
returns the last child of the given
returns the list of the for the given
returns the list of last
returns the list of items
returns the variable with the given id
returns the value of the given variable
returns the last string in the
gets the value of a given variable
returns the last value of the given
returns the value of the specified parameter as a double
returns the last double value of the given
gets the value of a given property
returns true if the given is last in the current
returns the parent of this object
returns the root of the tree
reads the inline comment from the token
display a dialog with the given text
log the given text
add all children of this object to the given other object
adds a comment to the file header
add a new blank line to the list
sets whether the list is allowed to accept
sets whether or not the parser accepts a single
sets whether or not the parser is configured to ignore comments
sets the print info
sets whether or not the print parser should be used to print
sets the
sets whether the parser should be included in the process
adds a trait to the
returns the history of the history
returns the object that is currently being restored to the given
returns the history object
returns the message associated with the given key
returns a message with the given key
returns a message with the given key
returns a formatted message formatted string
returns the user service
returns the folder service
lookup a service bean
logout the user
moves the given item to the current one
this method is called when the database is executed
this method is used to parse the
compares the given item in the database
clears the database
moves the given item to the current one
returns a non busy busy thread pool
sets the maximum number of threads allowed to use
wait for the reply to wait for the reply to be sent
start the channel
creates a new
sets the scroll pane
sets the tempo of the current music
pops up a popup popup
returns the id of the
pops up a popup popup
parse the given jdom element
returns the set of root element
parse the list of records from the given set
returns the records that are currently being used by the root
parse the records from the given records element
returns the records that are currently being used by the root
set the endpoint address for the specified port name
sets the fault code value for this fault
returns the element definition with the specified name
adds a new element to the list
resolve the given symbol table
accepts the visitor
returns the type of the definition
returns the name of the
returns the parent scope
returns the interfaces
returns the qualified name of the parent
returns the class implementing this weaver
returns true if this class is a class
returns true if this class is a interface
define a block definition for this scope
returns a string representation of this object
returns a string representation of this object
returns true if the base scope is a scope or not
define the label for this definition
returns the location of the file
returns a string representation of this object
returns the number of parameter values
sets the number of times the parameter has been set
sets the output directory
define the package name
sets the recurse
p end the head method head
returns the output directory
returns a dummy class for the given class
returns the recurse flag
removes all the scopes from the stack
returns the absolute path of the given element
notify the modlet that the specified path is being downloaded
pops the scope from the scope
creates a new directory
sets the current file
sets the scope of the scope of the scope
returns a string representation of this object
sets the default package name
encodes a concept
returns the name of the target language
decodes a object from the given language
this method is used to convert a code concept code to a
this method is used to decode the given code concept code
creates a concept from the domain
returns the concept of the concept
returns a concept gis concept
encodes a concept
add a new concept to the list
this method is used to decode the given code concept code
this method is called by the digester when the
returns the concept of the concept
this method is used to decode the given code concept code
parses a concept fragment
parses a
parses a term
returns a term token
this method is used to parse the given code concept code
returns the slot of the given slot at the given position
sets the slot value at the given slot
returns the slot of the given slot
load the panel
returns the icons height
returns the icon width
returns true if this collection contains no elements
adds a machine to the list of machines
creates a memento object
returns the
invoked when an action occurs
restore the state of the given machine
invoked when a mouse button is pressed on a component
mouse pressed handle mouse pressed event
invoked when a mouse button has been released on a component
checks if domain is searchable
checks if the given domain is searchable
checks if the given domain is searchable
returns true if the searchable searchable is searchable
returns a string representation of this object
this method is called by the server to refresh the service
called when the thread is finished
this method initializes j text field key id
this method initializes j text field key typ
this method initializes j text field date
this method initializes this
this method initializes j text field serial
this method initializes j scroll pane key list
this method initializes j text field name
configure logger
this method is used to run the
start the thread
starts the thread
closes the current session
sets the buffer time in seconds
get the number of generations for the given data
sets the session
returns the state lock lock state
sets the top level visibility
sets the email address of the user
sets the failed state of the failed job
stops the thread
this method is called when the controller is changed
runs the
opens a socket and opens a socket
convert a char to a string
returns true if socket is opened
convert a byte to a char
opens a socket with the specified port
adds a new generation to the
returns the primary color for this
returns the red component of the generation
returns the sender of the sender
sets the sender of the sender
returns the report block
returns true if the socket is ready to be sent
sets the report block
returns true if the block contains a report block
sets the block report block
returns the fraction of the fraction of the lost
sets the fraction of the fraction lost
sets the remote port
returns the cumulative rate of packets lost since the last call
sets the number of times the cumulative data points to the given
returns the number of times the was received
sets the extended sequence number received value for this
returns the jitter
wait for remote threads to wait for a given remote user
sets the jitter
returns the last
sets the last
returns the delay time in milliseconds
returns the time stamp of the last significant time
returns the item
waits for the number of threads to wait for local threads
sets the item
sets the time stamp of the
sets the delay between the last time the next time
returns the sender info object
sets the sender info
returns the time stamp of the last significant time
returns the number of
sets the time stamp of the
sets the value of the property
sets the count
returns the reason for the
returns the rtp time stamp
sets the reason for the reason
sets the rtp time stamp
sets the sequence number
sets the time stamp
returns the number of sender packets that have been received
sets the detail show data
sets the sender packet count
returns the number of sender messages
sets the payload data
sets the number of times the sender has sent
returns the marker of this
sets the local sdp
stops the connection
returns true if the current state is closed
the data array for a given array of bytes
checks if the packet is valid
sets the number of red
sets the
returns the number of generations
sets whether the connection should be shown
returns true if the is
returns the content type of the content of the content type
connect to the server
sets the red
disconnect from the server
sets the value of show to throw
stops the
sets the input format
sets the format format
sets the number of packets in the input stream
returns the control for the given type
sets the data format
returns the length of the buffer
this method is used to set the length of the time in
returns the minimum threshold value
sets the minimum threshold value for the specified time
returns true if the user can specify the threshold
sets the enabled threshold
clear all the data
adds a packet to the end of the list
inits the gui
the board to be
connect to server
send the board info to the server
sends a move to the server
reads the next token from the board
sets the ship
returns the ship at the specified ship
stops the
write the contents of the file to the file system
sets the axis coordinate of the axis
initializes the
display the current state of the sprite
returns true if the axis is shown
resizes the camera and returns the height
sets the display mode
returns the display mode
sets the bond type
sets the object name
adds a new id to the
gets the value of the bond type property
returns the object name of the object
puts a property into the set
sets the length of the bond
sets the element number
returns the element number
returns the bond length
returns a string representation of the object
add a new atom
sets the location of the location
sets the rotation angle
sets the location of the location
puts a boolean property
add a bond to the list
returns the rotation angle
returns the location of the location
adds a bond to the list of bonds
sets the rotation of the axis
sets the value of the remarks property
returns the rotation axis
returns the number of bonds in the atom
puts a property into the dictionary
translate the coordinates
sets the bounding box of this object
puts a property into the properties
sets the window size
returns the atom at the specified location
handle the command event
closes the input stream
returns the renderer used to render the
returns the description of the filter
returns the radius of the sphere
returns an image icon
add a to the list of
centers the group in the group
sets the preferred height of the component
adds an atom to the sequence of the given
sets the preferred width of the panel
reads the current group from the current file
adds a tab to the top of the stack
removes the specified component from the pane
returns a string representation of this object
resizes the label
load a file
returns an image icon
split the split pane
invoked when the mouse enters a component
invoked when the mouse exits a component
displays the specified group
initializes the splash screen
get system properties
updates the progress bar
processes the argument handler
creates the data directory
hides the splash screen
check if the version is valid
runs the splash screen
sets the look and feel
check the screen size
returns a string representation of the object
returns the
returns the value to which this map maps the specified key
returns true if the map contains the specified key
returns a bean factory for the specified bean factory
this method is used to query the data in the query
render the action
returns the cache key for the request
returns the config file name for the given configuration type
initializes the template context
translates a code code to a code code
this method is called when the file is done
returns the input stream for this input stream
process a line of text
returns true if the file flavor contains any geos of the given
returns the actions for the given component
populates the entity map with the related entity
populates the entity map with the data related to this entity
adds a parameter to the given parameter
sets the entity name
adds a parameter to the list of parameters
adds a hash map of related entity ids to the map
populates the entity map with the data related to this entity
returns the related entity map vector
sets the user info object
populates the entity map with the data related to this entity
populates the entity map with the data related to this entity
populates the entity map with the data related to this entity
populates the entity map with the data related to this object
returns the status of the given
removes all related courses
populates the entity map with the related entity
populates the entity map with the data related to this object
removes all the items from the list
returns the final
sets the local class
populates the entity map with the data related to this entity
auto generated getter method
sets the prim
returns the master delegator
returns the node id of the node
returns the query value id
sets the query value id
returns the query id
sets the query id
returns the id of the attribute
sets the attribute id
returns the value of the attribute
sets the attribute value
returns the entity operator
sets the entity operator
returns the display type id
sets the display type id
returns the display object id for this object
sets the display object id
returns the custom field id
sets the custom field id
returns the section id
sets the id of the section
returns the party id of the party
sets the party id
returns the query name
sets the query name
returns the list of ui objects
returns the generic value of the entity
copies the value of the argument into the list
load a class by its name
returns the id of the agent
returns the current tuple centre id
checks if the given tuple matches the given tuple
this method is used to propagate the value from the tuple
accepts the event
compares this object against the specified object for strict
returns a copy of this tuple
called by the process when a listener is accepted
returns the argument tuple argument code this code is a
returns the previous element in the history
returns the next element in the history
clears the contents of the map
returns the current tuple centre
returns the version number of the given version number
returns the version number of the sub version of the given version
creates the
launches the
returns true if the file is accepted by the filter
returns the extension of the file
displays the current settings
returns the description of the filter
creates the text field
creates the combo box
waits for the event to be notified of events
sets the status message
invoked when a key has been released
adds a library to the library
sets caret line
sets the engine
returns the current line of caret
closes the library dialog
build the table
sets the status message
handles key input field key release
sets the console
solves the goal
returns the value of the specified variable
returns the file manager
sets the frame launcher
returns the frame launcher
sets the status message
sets the engine
returns true if the library is loaded
adds a library to the library
create new theory and add it to the current theory
load the library
unloads a library
returns true if the library contains the given library
compares this object against the specified object for equality
load the theory
returns the boot time
sets the engine
save the theory
save the theory as a
sets the edit area
returns a copy of this tuple tuple instance
undoes the last action
opens the library manager
redoes the last action
sets the caret line
the field input field
displays the application
enables or disables the theory for the theory
sets the debug area
sets the key bindings for the given key
returns the debug area
sets the library dialog
clears the theory
notify the listeners that the event has been
adds a new event listener
reads the token from the token stream
removes the specified event listener from the list of listeners
adds a observer to the observable list
removes an observer from the list
sets the position of the pointer
begin editing a new
this method is called when the end of the end of the
begin a new transaction
this method is called when the transaction is ended
spawns a new task
returns the id of the agent
execute a task
updates the protocol
reset the
this method is called when the next step is made
sets the tuple set to the given tuple set
adds a new listener to the context
removes a listener for the inspector context
removes an agent listener from the list of
returns the template with the given template name
removes the specified
this method is called when the is
sets the protocol
get the current snapshot of the snapshot
reset the data to the initial state
go to next step
set the tuple set in the set of data
resolve the tuple and centre of the target
sets the protocol
reset the message
this method is called when the next step is next to be
sets the tuple set to the specified tuple set
exits the application
returns the node type of this node
spawns a new thread
called when the user selects a new one
called by the parser to find the next state
this method is used to execute the main method
ends the current process
called by the system when the user is an error
debug method for debugging purposes
sets the pv object to be used for the remote server
start the
this method is used to send a socket to the server
this method is called by the client when the server is closed
runs the server
resets the current state of the
displays the user
stops the current thread
this method is called by the
this method is called when the user submits the current status
quits the application
returns the version of the version
this method is called when the user selects the user selected
returns the user agent
returns the
reads the data from the xml data
test get active schedules
fills the given combo box with the specified combo box
invoked when an action occurs
handles the
removes all student requirements from the student
handles action events
gets the course model list model
load the data from the xml schema
returns the model that is used to define the
returns the term model
show the schedule
returns a new table model
gets the term schedule
returns the about box
returns the text of the user input
returns the term combo box
returns the code code property
set the value of a student
returns the student
set the value of a course
gets the value of a course pk
set the value of
gets the courses of the
returns the
set the value of
returns the id of the
set the value of the requirement description property
returns the radio login radio button
gets the requirement description
set the value of courses
set the value of
returns the id of the
set the value of course name
gets the course name
set the value of credits
returns the number of credits
returns the button that was pressed
set the value of
returns the id of the
set the value of the enrollment date
gets the enrollment date
set the value of the major property
returns the major version of this file
set the value of date of birth
set the value of grade
set the value of home
gets the grade
set the value of semester
gets the semester
gets the value of the home property
set the value of year
set the value of total credits
returns the total number of credits
set the value of classification
set the value of the expected date
gets the value of the expected date property
set the value of first name
set the value of last name
set the value of host host
set the value of courses taken
set the value of
returns the id of the
returns the host name
set the value of port
set the value of start date
set the value of end date
returns the port of the server
returns the end date
set the value of requirements
set the value of login
set the value of location
returns the login
set the value of password
returns the password
sets up the fixture for example open a network connection
test method for
test of get get method of class org
test of get editor dialog method of class
test of set method of class saga
sets up the fixture for example open a network connection
initializes the preference list
deletes the player from the database
sets the of the gui
prints the stack trace of the exception
returns the value of the specified class
sets the value of a specific key
returns the editor dialog for the given frame name and frame
initializes the event parser
returns a list of patterns for a given type
gets the
sets the
returns the events events
returns the configuration
returns an iterator over the events in this event
sets the configuration
returns the event associated with the specified index
returns the scores document
sets the scores document
adds a new event to the list
returns the part of the part
returns the number of events in the list
puts a part into the string
add a group to the group
adds a group to the group
returns the parts
adds all events from the given event
returns the regular expression pattern
returns an enumeration of the names of the parts
initializes the menus
sets the regular expression pattern for the regular expression
adds all events from the given event handler
returns the group for the specified index
returns the dom document
returns the part name of the specified group
sets the group
creates a dom element
returns true if the part of the part of the part of
returns the element type of the given element
this method initializes debug menu
returns the element that is the source element of the document
returns an enumeration of the types of this type
returns a list of events for the given type
returns the configuration
sets the configuration
returns the src data
sets the src data
notify the listeners that the event has been modified
gets the commentary commentary source
browses the url of the
auto generated event handler method
this method is called when the user presses the ok button
this method is called when the user clicks on the button
populate the view tables
returns the values of the given column
adds the given code pane code to the code pane code
adds an error pane to the pane
adds the given events to the pane
this method is invoked when the user has a commentary event
returns the current status of the game
returns true if the board is reached
returns the opposite color of this player
returns the checker for the given index
returns true if the game is a double
returns the start point of the sprite
returns the die
returns the end point of the
returns true if the point is off
returns true if the type is unavailable
checks if is hit checker
makes the player move
this method is called when the game is over
stops the simulation
returns true if the event has been notified
creates a new content object
this method is used to determine if the component is in focus
sets the component
returns the y coordinate of the y coordinate
show the splash screen
returns true if the measure allows constants
sets the dist
returns the
returns the number of clusters
returns the
returns the distance between the current
returns the selected algorithm
recomputes the current
sets the points of the polygon
returns the selected measure
update the data in the data
sets the number of clusters
sets the items to be displayed in the list
assigns the items to the given collection of items
enables disables the settings
opens the given cluster
initializes the distances of the given code code
closes the given collection of clusters
format a float value
returns the distance between two points
centers the code clusters code in the given
returns the distance between two points
combines two
combine two clusters
returns the to go to the current position
sets the number of clusters
sets the index
calculates the of the given clusters
returns the distance cache
returns the of the
invoked when an action occurs
returns a collection of the items in this container
returns the distance between this point and another
returns the distance between this point and another
returns the representative
sets the representative value for this
returns the distance between this point and the specified
this method is used to create a new cluster
returns the distance between the two points
this method is called when the is
returns the coordinate at the specified index
this method is used to calculate the random item
returns the of the
returns the number of dimensions of the array
adds a new color to the history
paints the history
returns the connectable point in the cluster
adds a new paintable item to the history
returns the menubar for this menu bar
creates the clusterer
ends the current clusterer
returns the clusterer that is currently selected in the panel
returns the clusterer
sets the locked points
this is the entry point method
sets the exception to be used for future exception
sets the max max count
sets the number of the current
called whenever the part throws an exception
sets the previous prev count
sets the last update date
refresh the page page
returns the password for the given password
searches directory for a directory
get a class by name
add a url to the classpath
binds the udp socket to the server
send data to the remote server
returns the device name
encodes the specified charset to a string
encodes a string
decode a string
returns the device id of the device
returns the version of the
sets the
sets the sql statement
sets the connection
tests that the add change entry are
returns the error message
create an empty archive
create a single entry for the archive
updates the interpolated value
stops all plugins
adds a listener to the list
removes a plugin from the list
dispatches an event to the registered listeners
enables disables the component
clears the current map
inits the gui
sets the gui components
updates the selected person
sets the time
returns the time
clears the progress bar
sets the value of the progress bar
sets the text
sets the minimum value of the range
this method initializes this
this method initializes sp description
this method initializes this
this method initializes tf name
this method initializes tf distance
this method initializes date
this method initializes sep general
this method initializes pnl start time
this method initializes end time
this method initializes pnl total time
this method initializes physical attr
load settings from the application
returns the content panel
load the projects
saves the projects
initializes the renderer
initializes the editors editors editors editors editors
this method initializes this
this method initializes main panel
this method initializes j jmenu bar
this method initializes project menu
this method initializes mi project exit
this method initializes mi project new
this method initializes mi project open
this method initializes help menu
this method initializes mi help about
this method initializes mi help help
sets the additional data path
updates edited track in the table
returns the project settings for the project
adds a person to the database
returns true if the mouse wheel is visible
sets the mouse wheel mouse wheel mouse wheel
returns the for each route
returns true if the user exists
paint the marker
loads the given file from the file
sets the waypoints
save the file to a file
returns true if the track is painted on the background track
removes a property from the list
sets the paint path to the specified track
returns the integer value associated with the given key or code default
returns the track color
returns the value of the specified key as a boolean
sets the track color
returns the track style
sets the track style used to display the track
returns the value associated with the specified key
sets the value of the property
sets a property
sets a boolean value
sets the value of a key array
adds a log entry to the log
returns the age of the person
updates the selected person
clears the text fields
sets the configuration
sets the kernel
starts the server
returns the configuration
this method is called to go to the next game
sets the connection manager
this method is called when the keep alive thread is stopped
returns the connection manager
stops the
returns the header for the given header
returns the footer
returns the header for the given header
returns the footer
p this method is called after the tag has been finished
returns the url of the page
returns the
returns the domain name
returns the object name of the object
check if the given operation is available
returns true if the parameter is
returns the plugin descriptor
compares this object with another
main processing method for the main object
initializes the gui
initializes the dialog
fail
get the angle of the given node
returns the end of the pixel and angle
returns true if the server started the server
stops the server
invoked when an action occurs
print the contents of the output area
print a character
prints a char array
print a double value
print the current value of the given code float code
print the contents of the output area
print a long
prints the given object
print a string
print a new line
print a boolean and then terminate the line
print a character and then terminate the line
print a double and then terminate the line
writes the specified byte to this output stream
test the of the
test that the is stopped
test
test
test method for
test method for
test method for
test method for
test method for
test method for
tests that the get public method works as expected
test for get replies
test method for
test method for
test the is
test that the user is shown
test of update status method of class
sets the retry on error
sets the url to the url specified in the url
write the current server to the server
login to the server
starts the item
start the given object
returns true if the user is a favorite
check if the user has login password
returns a new group view
open the database
closes the database
returns a cursor positioned at the specified table of all profiles
write a profile to the profile
update the profile
returns the cursor list in the database
update the friends list
update the profile
log out the log
returns true if the user is logged in
logout the user
save the foot sheet
sends a status message to the server
save a to the given
save the
returns a cursor for a specific user
saves the profile to the database
returns a cursor for all the users in the profile
retrieves the user profile from the current session
this method is used to the external application
the login to the given external client
returns the status of the given data
save the data in the database
update the status of the
gets the timezone
returns the timezone
returns true if the user is protected
sets the count
destroys the status
destroys the status
this method is responsible for the user
returns the status of the given id
checks if the user is
checks if the user is currently following the user
check if the user is valid
this method is used to remove a user object from the list
notify the user that a user has been logged in
returns a status object for the given status
sets the date of the value
returns the date of the recurrence
sets the value of this since id
sets the source of the application
sets the status
show the user with the specified name
show the user
this method is called when the user selects a user stop
updates the status of the status text
updates the status of the status message
checks if the specified user is already in the user
sets the language
returns the string representation of the input string
reads the variables from the given resource
reads the variables from the given resource
finds the resource path of the resource
record the record
this method is called by the
stops the recording
returns the presentation reconciler
this method is called upon plug in activation
this method is called when the plug in is stopped
returns the plugins resource bundle
gets the process
this method is called when the plug in is stopped
returns the plugins resource bundle
checks the state of the field
initializes the field editors
this method is called by the job thread
performs the default defaults
this method is called when ok button is pressed
disposes of the editor
sends a to the server
sets the enabled status of the database
returns the database database
this method is called upon plug in activation
this method is called when the plug in is stopped
sends a to the current
sends a to the client
returns the process
returns true if the current user is running
this method initializes group breakpoints
this method initializes composite select
create an instance of
resets the
disable the current state of this component
this method initializes
this is a callback that will allow us
this method initializes composite main
this method initializes combo term
resets the viewer
returns the state of the
this method initializes group select
this method initializes combo reduce
creates the composite select
this method initializes group active module
this method initializes combo active module
this method initializes group show
sets the selected item
adds a module to the module
this is a callback that will allow us
removes all modules from the module
this is a callback that will allow us
passing the focus request to the viewers control

resets the viewer
stops the thread
resets the viewer
returns true if the model is disposed
adds a module to the module
stops the thread
send a to the given
check the state of the field
initializes the preference store
performs the actual processing of the default
returns the value of the checkbox
returns the code button code property
notifies the value that the given value has changed
returns true if the buffer is full
sets the file attachment attribute of the object
returns true if the of the contains any elements
adds a new object to the queue
checks if the current object is ready to be
returns the value of this rational number
returns the hash code for this object
compares this object with another one
item state changed
initializes the icon tray icon
returns the value1
classifies the current test
classifies the current test
set the value of the object
returns the name of the constant pool entry
returns the descriptor of the constant pool entry
returns the name of the class
add a interface to the constant pool
returns the magic number of the magic
returns the name of the attribute in the form
returns the minor version of the file
returns the major version of the file
returns the data input stream for this connection
returns the class name of the class name
returns the start pc of the file
returns the number of locals in the scope
sets the start pc
returns the name of the superclass
returns the constant pool index
returns the attribute with the given name
writes the attributes
adds a to the
tests if the given string matches the pattern
adds a rule inclusion to the rule
returns the precedence of the operator
adds a exclusion rule to the exclusion list
returns true if the given code other code is more significant
compares this object with the specified object for order
compares the specified object with this rule
this is used to create a new object
invoked when a
sets the given field to the given object
called when a new object is exited
tests if the given string matches the given string
returns the name of the field
replaces the old old text with a new one
counts the number of occurrences of the precedence
returns the class name of the source
counts the number of elements in the array
this method is called by the object when a new object
matches the rules in the rule
returns the name of the target
add a class info to the class
returns true if the given object is a protected object
returns true if the method is a constructor
sets the current event to the current one
returns true if the event is protected
returns true if the initializer is static
release the source
the event listener
release the
add a field reference to the given field
returns the default instruction
add a method ref info
returns the target
returns the class loader
returns the type of the descriptor
returns the modifiers of this field
returns the class that this class is associated with
returns the type name of the descriptor
returns the index of the current byte
returns the name of the field
returns the name of the method
returns the type of the method
returns the referenced type name
returns the of the stack
returns the name of the class that this class represents
returns the usage of the stack
returns the field
returns the method
load a class from the classpath
add a string to the
returns the instructions list
sets the bytes
adds a instrumentation descriptor to the
returns the opcode of this instruction
instruments all the in the given class
dump the contents of the code byte code to the specified output
returns a new cast object with the given casts
adds a new number of info to the current
creates a new code list code
returns the modifiers
returns the usage of the stack
this method is called after the properties is loaded
returns true if the class is a
returns true if the class is
adds a constant pool entry to the constant pool
returns the consumption of the stack
returns the instrumentation instrumentation object
returns the type of the method
returns the agent arguments
sets the offset
returns the name of the class
adds a new code info code to the current
adds another code code to this code list code
returns the offset of the current entry
set the attribute
creates a hot spot for the given index
returns the package name
insert a constant value into the pool
returns the code factory code that will be used to create a
add a long info info
returns the list of the in the list
this method is called by the framework to perform the calculation of
returns the list of the in the list
returns the name of the spot
returns the of the current spot
inserts a new instruction into the list
instruments the of the current module
creates a code source code for the given code location code
sets the context
returns the instruction at the specified index
returns the context
add a double info to the current
runs the main method
replaces the given instruction in the stack
adds a local variable to the list of local variables
add a name and type info
add a to the
returns the declared field for the given name
returns the number of in the stack
returns the entry at the specified index
returns the superclass of this class
returns the index of the given instruction
returns the index of the given opcode
get the utf8 utf8 utf8 utf8 utf8 constant pool
returns the modifiers of this class
returns the index within this instruction in the specified array
get the value at the given index
adds a field to this field
instruments the class in the given class
returns the index of the first instruction in the stack
returns the class name of the constant pool entry
sets the specified object
returns true if the attribute is synthetic
returns the field specified by name
adds a interface to the list of interfaces
clears the stack
sets the value of the given object
returns the code factory code that will be used to create a
returns the entry index
add a method to this method
returns the declaring method of this method
creates a new code list view code instance
creates a new code list view code
returns the name of the current entry
returns the constant pool
get the field name
get the name of the method
returns the named node
returns the mapping of the entities contained in this map
the of the document
notify listeners that the tree structure has changed
returns the child of parent at index index in the parents child
returns the number of children of parent
returns the child of the specified index
returns the index of child in parent
returns the number of children
returns the index of child in child
returns true if the given node is a leaf
returns true if the node is a leaf
normalize the string
returns the root node of the tree
returns the attributes
b dom b implements
returns the named node in the document
initializes the statement if it does not already exist
returns the database implementation
gets the value of the dt name property
returns the notation name
creates a new instance of sqlexception
creates a new instance of code code instance
the elements list element name
creates a new document fragment
creates a new instance of
creates a new instance of
prints the stack trace of the exception
prints the stack trace of the exception
parses the given input source
parse the given string
checks if the is
returns the sql or null if not found
b dom b implements
returns the connection
returns the statements
sets the dtd
internal method to set the internal subset of the internal subset
creates a new instance of
creates the dtd dtd
returns the documents map
sets the auto commit mode
returns the current connection to the database
commit the current transaction
rolls back the transaction
returns the child nodes of this node
returns the attributes
returns a new instance of the code org
returns the id of the
returns the database schema implementation
compares the specified object with this node as a boolean
returns the hash code for this object
register a layer with the terrain layer
returns the mouse button for the given button
adds a new number of to the list
returns the of the
returns the of the user
returns a new metric instance instance
puts the metric of the given metric
returns the current interval
returns the peak events
called by the thread to remove the specified work
returns the cumulative cumulative secs
advance the interval
returns the cumulative cumulative cumulative probability of the quote
advance the interval in milliseconds
copy the value from the specified interval to the end of the
returns the current frequency
returns the peak that is used to indicate the peak
adds a new event to the list
advance the interval before the specified interval
returns the interval that is currently active
returns the of the current
returns the date of the
returns the maximum session time in milliseconds
returns the events time
resets the interval to start
returns the cumulative cumulative distributions
returns the maximum session time
adds a new event to the list
returns the time in seconds of the current session
returns true if the current time is past the time
returns the age of the current time
returns the duration of the time interval in milliseconds
returns the age of the age
returns the total intervals
adds a new code code to the end of the list
returns a string representation of this object
returns the xml version of this object
returns the string
adds a new number of to the end of the list
stops the
removes the current object from the list
resets the session
returns the current snapshot of the given
returns a category with the given id
returns the for the given
the item order
sets the game screen
initializes the applet
inits the input manager
sets the title of the screen
initializes the button
initialize the game
returns the background image for the given level
start the game loop
initializes the button
updates the game screen
draw the game
update the
updates the sprite
returns the width of the image
returns the height of the image
returns the frame at the specified index
updates the specified time in milliseconds
draw the block
rotate the image
sets the x coordinate of the x coordinate
sets the y coordinate of the y axis
sets the velocity of the block
sets the velocity of the block
returns true if the game is going down
moves down the block
sets the relative mode of the mouse
this method is called when the game is down
checks the input and pause the game
pauses or disables the paused state
exits the application
resets all actions to the game actions
returns the action key for the given key
handles mouse drag
creates a new graphics object
reloads the data from the database
returns true if the day layer is visible
gets the value of the world layer visible property
returns the preferred size of the table
scroll the current page
displays the user to login
displays the user to the current user
sets the
add friend to the friend list
remove a friend from the friend list
adds a new chat message to the chat
opens a friend list
open the
opens the chat chat window
opens the bag
opens the help menu
opens the party window
starts the clock
returns true if the is
this method is called when a session is closed
returns the width of the screen
returns the height of the screen
returns the revision number
sets the revision number of the revision
load settings from the file
saves the settings to the file
add a chat chat chat to the chat
sets the of the
sets the start quest attribute of the object
sets the level requirement for the
generates weather weather the weather
returns the weather effect
sets the quest requirement for the current quest
returns true if the is
generates the appearance of the
this method is called when the user selects a new
generates the
remove all species from the species
sets the requirement
sets the item type
sets the badge requirement
sets the id
sets the potential
returns the speech
sets the speech speech
sets the speech speech speech attribute of the object
returns the quest speech
sets the index
returns the index of the current entry in the list
sets the badge
returns the badge
sets the money of the player
returns the money of the player
sets the speech
returns the end speech
this method is called when a player is done
returns true if the trainer is
returns the highest level of the current page
sets the minimum level of the current search
sets the connection status of this connection
returns the of the given species
adds a new to the list of
removes a from the list of
returns the map matrix
sets the map matrix
returns the next in the game
returns the value of the given x y coordinates
starts the game
returns the
returns the of the given code code
returns the number of items in the request
sets the required item
sets the x coordinate of the x coordinate
returns true if the given point is in the
sets the y coordinate of the map
sets the x coordinate of the x coordinate
sets the warp y coordinate of the
take a given player from the list of
returns the x coordinate of the x coordinate of the map
returns the y coordinate of the warp map
returns the warp x coordinate of the x axis
returns the warp y coordinate of the
sets the species
sets the minimum level of the current search
returns the minimal level of the current page
sets the maximum level of the
returns the maximum level of the
sets the sprite
sets the number of
returns true if the item at the specified coordinates are
returns the number of
returns the sprite of the sprite
returns the number of
sets the probability of the
returns the type
sets the type map
adds a day to the
sets the id of the quest
removes the specified day
adds a to the
returns the current quest id
removes the from the
sets the type of npc type
adds a to the
removes the from the
returns the type of npc
sets the potential
removes the warp data from the given data
adds a new npc data to the list of npcs
removes npc data from the npc
sets the minimal level of the
returns the minimal level of the minimal level of the
returns the species official wild variation
this method is called when a player is saved
save the player
sets the ending player
get the level of wild species of the species
returns the requirement requirement requirement
returns the item id
returns the species
returns the requirement for this request
this method is called when a player selects a player
returns the level for the
get the level of the species
sets the money
add a player to the game
returns the number of times the player has been made
this method is called when a session is created
removes a player from the list
this method is called to flush all the players
adds a warp tile
returns the warp tile at the specified location
sets npc to
checks if the square at the given location is a wild card
calculate the stats
checks if the bomb is
this method is called when the player is
sends a string to all the clients in the given player
returns the of the player at x y
returns the x y coordinate of the given coordinates
returns the offset of the
saves the file to a file
load the specified file from the file
returns the y coordinate of the offset
returns a random direction
stops the server
this method is called when the player is paused
sets the current quest id
returns the current quest id
checks if a player has completed
notify the player that a quest has been paused
returns the rank of the
sets the rank of the
returns true if the is
switches out the current state of the munge effect
sets the
returns the class of the class
sets the class that this player is to be
returns the password hash
returns the effect at the specified lock
initialises the client list list
adds a friend to the friend
remove a friend from the friend
initializes the boxes
switch to a specific
adds a new code code to the list of badge
returns true if the given code badge code is in the
returns the number of in the current page
returns true if the is
removes the status from the given status
sets the password hash
returns the session
sets the session to the session
attaches a field to the given position
the
called when the user selects a player
sets the last
the of the current party

adds a new to the
returns the number of boxes in the box
returns true if this player can the
move the given direction to the given location
change the health of the weapon
move the cursor to the last move
notify listeners that the status of a
switch to a
returns the money of the player
sets the value of money
returns true if this is a mod
sets the mod
initialise the client
this method will add a new to the list of possible
move the given one
shows the game panel
plays the sound at the specified position
move the opponent
creates a new board
move a player
returns true if this player has finished
returns the turn of the player
checks if the board is
returns the winner of this player
turn the turn
returns the square of the given square
this method is called when the player selects the game
alert the user to reject a game
move the byte at the specified position
kills the game
this method is called when the connection is established
shows the connection error
paints the image
returns the mimetype
returns the styles
adds a new picture to the cache
returns a hashtable of all the keys in the database
clones the document
sets the content
this method initializes j frame
this method initializes about dialog
this method is called when the player starts the player
returns the error message for the given error message
log the given message
logs a parameter
moves the cursor to the first row in the table
sets the date and time at which the given date is in
sets the time at which the given time is available
sets the binary binary binary
gets the value of the operation request property
sets the value of the operation request property
get the binary stream for the given index
add a new request to the cart
get the blob value stored in the blob
adds multiple the cart to the cart
sets the cart
adds new new code code to the current
gets the value of the corrected query property
sets the new release
returns the blob object associated with the given column name
sets the value of the corrected query property
sets the value of a specific index
gets the value of the shipping type property
sets the value of the shipping type property
sets the boolean value of the given boolean
gets the value of the is rate inclusive property
gets the value of the property
sets the value of the is rate inclusive property
gets the value of the shipping price property
sets the value of the property
sets the value of bytes
sets the value of the shipping price property
add a value to the shipping type
sets the condition
returns a copy of the tax charges shipping rate
sets the value of the given string
returns the engine query
returns a new shipping charges with the specified price
sets the value of the engine query property
sets the timestamp at the specified time in the database
returns the delivery method
gets the value of the property
sets the value of the property
gets the value of the total results property
sets the value of the delivery method property
sets the double value of the specified double
sets the value of the total results property
returns a copy of the product with the specified value
adds a value to the title
returns the collection summary
gets the value of the total pages property
sets the value of the collection summary property
puts the given search results into the map
sets the search index
sets the value of the total pages property
gets the value of the postal code property
returns the parent collection of this code collection code
sets the value of the collection parent property
sets the value of the postal code property
gets the value of the customer page property
sets the value of the customer page property
gets the value of the search results map property
returns a new collection summary of the collection summary
sets the value of the search results map property
returns a collection of the parent of the given parent
gets the merchant id
returns a collection of items that are contained in the collection
sets the collection item
sets the value of the merchant id property
returns the search bin set
p request a customer request with the customer id
creates a new request with the given name
sets the value of the search bin sets property
searches for a customer content with the specified name
searches for the request with the specified request
gets the value of the review sort property
sets the response group
adds a new query to the list
returns the alternate versions
sets the value of the review sort property
add a new item to the list
clears the cart with the specified values
p returns a new instance of the query with the specified value
sets the request
gets the value of the similarity type property
adds a new result to the results
returns a child transaction with the given item
sets the value of the alternate versions property
sets the transaction item
sets the value of the similarity type property
adds a page containing the total number of pages
add a search results to the results list
returns a new request with the specified condition
adds a new item to the list of items
adds a new set of items to the set
returns a new request with the delivery method
sets the item
returns a new request with the specified id
returns the required parameters for this object
sets the value of the required parameters property
a request to the specified
returns the available parameters
creates a new request with the specified id
sets the value of the available parameters property
gets the value of the average rating property
sets the value of the average rating property
returns a new request with the specified parameters
gets the default response groups
gets the value of the total reviews property
sets the value of the default response groups property
add a value to the query with the specified value
sets the value of the total reviews property
gets the value of the total review pages property
p returns a new
gets the value of the available response groups property
sets the value of the total review pages property
sets the value of the available response groups property
sets the item id
sets the name of the operation
sets the average rating value
sets the description of the operation
sets the total number of reviews
sets the parameters required for the required parameters
sets the total number of review pages
sets the parameters to be used for the available behavior
sorts the given array of values
gets the value of the property
sets the review
adds a new response to the response group
gets the value of the customer id property
sets the value of the customer id property
sets the response information
sets the value of the property
gets the value of the review page property
sets the value of the review page property
adds the promotion to the promotion
returns a new shipment item with the given id
gets the value of the tag page property
sets the promotion
sets the transaction item id
sets the value of the tag page property
gets the value of the tags per page property
gets the value of the property
sets the value of the tags per page property
creates a new
returns a new similarity with the specified items
sets the items
returns the name of the tag sort
searches the item with the given request
sets the value of the tag sort property
sets the request list
sets the value of the property
returns a customer content with the specified id
returns a new
sets the search bin set
lookup the request with the specified values
clears the request response
p returns a new customer content with the specified id
returns the summary
adds a cart response to the cart
sets the value of the summary property
p the request that the request request header tag with the specified
gets the value of the details property
sets the value of the details property
p returns the content of the request that is used to render
sets the promotion to the given code summary code
lookup a specific sort request
add a new assessment item to the sif order details
gets the value of the sales rank property
adds a new code value code to the cart
sets the list of request
returns a tag with the specified name
returns a new tag with the specified id
p navigate to the page with the specified tag
creates a response with the given request
returns a lookup tag with the specified tag
sets the tags
returns a new instance of the specified value
returns a new tag with the specified name
sets the value of the sales rank property
returns a tag with the specified tag name
sets the tag name
gets the value of the list page property
sets the value of the list page property
request a request with the specified request
add multiple items to the list
returns the request for the specified seller
sets the lists of lists
sets the value of the list type property
sets the request list
returns the small image
sets the listing listing
add a value to the group of elements
sets the element
sets the request search
gets the value of the availability type property
sets the value of the availability type property
gets the value of the offer listing id property
gets the value of the is node property
sets the value of the is touched property
sets the value of the offer listing id property
gets the value of the minimum hours property
sets the value of the small image property
sets the value of the minimum hours property
gets the value of the maximum hours property
sets the value of the maximum hours property
gets the exchange id
sets the availability type
sets the value of the
creates a new request with the specified value
sets the minimum value for the specified
sets the value of the exchange id property
sets the maximum number of hours to be used in the service
this method is used to retrieve the email of the email
creates a new request with the first name
p answer a list of search with the specified name
returns the price
p returns a list with the specified request
gets the value of the price list price property
sets the value of the lowest list price property
creates a new request with the specified type
sets the value of the price property
gets the highest list price
returns a list with the name of the specified request
sets the value of the highest list price property
returns the medium image
gets the value of the price sale price property
returns a list of search cookies for the given
sets the lowest sale price value for this offer summary
gets the sale price
request a search request for a specific value
gets the highest sale price value for this admin product
sets the highest sale price value for this serie vo
sets the value of the sale price property
returns a new collection summary with the specified price
returns a new collection summary with the given price value
returns a new collection summary with the lowest price
returns a collection summary with the price price
sets the value of the medium image property
gets the value of the amount saved property
sets the key
sets the value of the amount saved property
returns the value of the specified values as a code max code
sets the request
sets the value of the key
adds a new value to the metadata
gets the value of the percentage saved property
returns a new shipment package with the given
sets the package
sets the value of the percentage saved property
gets the audio format
returns the binding of the binding
sets the value of the audio format property
sets the value of the binding property
sets the value of the availability property
returns the large image
sets the value of the
sets the name of the code name code property
sets the title
sets the value of the type
sets the value of the
sets the audio format
returns the availability of the availability
gets the total price
sets the value of the availability attributes property
sets the value of the total price property
sets the value of the entity id property
returns the subtotal
sets the value of the large image property
sets the value of the subtotal property
sets the value of the user id property
gets the value of the quantity property
returns the tax
sets the value of the tax property
add a value to the name
sets the value of the quantity property
add a new entity id to the current entity
gets the value of the shipping charge property
add a user id to the current user id
sets the value of the shipping charge property
adds a value to the time
returns the promotion
gets the address of the address
sets the value of the promotion property
gets the value of the list item id property
sets the value of the list item id property
sets the value of the address store address property
sets the total price of the cash total amount
gets the date added
sets the total amount of the sales time
sets the value of the date added property
sets the tax amount
sets the shipping charges of the cash
sets the discount to the discount price
gets the value of the hours property
gets the value of the quantity property
sets the value of the quantity desired property
sets the value of the store hours hours property
gets the value of the quantity received property
sets the value of the quantity received property
gets the value of the is eligible for super shipping property
sets the value of the item property
add a list item with list item id
returns the tag type
li rss 1
sets the value of the is eligible for super property
sets the value of the code property code
sets the value of the tag type property
add new item to the current item
the quantity of the aggregator received by the aggregator
sets the item
returns the distinct items
returns the item attributes
gets the value of the sales restriction property
sets the value of the distinct items property
returns the tracking number
sets the value of the tracking number property
gets the value of the carrier name property
sets the value of the carrier name property
sets the value of the sales restriction property
add a package to the package
gets the value of the distinct users property
creates a new shipment for the given package name
sets the value of the distinct users property
sets the value of the item attributes property
returns a lookup request with the specified name
returns a lookup request with the specified id
returns the total usages in the union of the
sets the transaction id
sets the value of the total usages property
adds a cart item to the cart
sets the item
returns the first
adds a new instance of offer listing
sets the value of the first property
creates a new instance of cart
sets the list of request
gets the value of the merchant item attributes property
add an exchange with the specified id
returns the last
request a request with the specified request
searches for the items with the given items
adds a new offer to the list
sets the value of the last property
sets the value of the merchant item attributes property
adds a new sale listing with the specified price price
gets the value of the is in property
sets the value of the is in property
returns true if the value of the is in unit requirement
sets the value of the is in eligibility set property
add a new offer listing with the given value
sets the
sets the value of the promotion in
sets the value of the promotion in eligibility requirement
p offer the value of the code offer code property
adds a new instance of the specified listing to the list of
returns a new
sets the units of the units with the given units
returns the collections
p this method is used to set the availability of the
add a name to the tag
returns a copy of this product with the same product
sets the similar product
creates a new tag with the given type
adds a new instance of the given type
sets the value of the collections property
add a distinct value to the current value
gets the value of the valid operations property
sets the value of the valid operations property
returns the elements of the response
sets the value of the elements property
creates a new tag with the given name
adds a new address to the list of addresses
sets the name of the group
create a new response group with the specified value
sets the response information
p returns a new instance of the given code tag code
sets the response group
adds a new to the list of
gets the value of the property
sets the value of the points property
add a first value with the given
gets the value of the value property
sets the value of the value property
returns the subjects subjects
add a value to the

sets the last
sets the value of the given url for the same object as
sets the value of the subjects property
add multiple tagged values with the given values
adds a number with the given number of combinations
adds a number of pages to the page
p creates a new instance of sales with the given name
adds a transaction to the transaction
add multiple tagged values with the given tag
setter for property transaction
sets the value of the address property
add multiple tagged values with the given tag
adds the shipping charges to the charges
create an instance of
sets the list of tagged items
gets the value of the offer summary property
sets the shipping charges
create an instance of
sets the lists
sets the value of the offer summary property
sets the tagged
create an instance of
returns the http headers
create an instance of
sets the value of the http headers property
gets the value of the offers property
returns the arguments
create an instance of
creates a response with the specified request type
sets the value of the arguments property
the
sets the
gets the value of the request processing time property
sets the value of the request processing time property
create an instance of
sets the value of the offers property
sets the value of the request
add a to the model
request a request with the specified request id
sets the variation dimension
sets the value of the arguments that is used to send requests
create an instance of
adds a request to the request
gets the value of the total offers property
create an instance of
sets the value of the total offers property
gets the value of the total offer pages property
sets the value of the total offer pages property
gets the variation summary
adds a specific market value
create an instance of
sets the total results
p offers a new offer with the same value as the
offers a offer to the offer
sets the total number of pages
sets the offer value
sets the listing listing
sets the listing listing
create an instance of
sets the value of the condition property
sets the value of the variation summary property
returns the delivery method
sets the value of the delivery method property
returns the shipment items
sets the value of the shipment items property
create an instance of
returns the packages
sets the value of the packages property
add a value to the shipment
create a new shipment for the specified shipment
add a shipment item to the list of shipment items
creates a new shipment for the shipment
create an instance of
gets the
create an instance of
sets the value of the actor property
create an instance of
sets the value of the property
create an instance of
create an instance of
gets the customer reviews
create an instance of
sets the value of the artist property
create an instance of
sets the value of the customer reviews property
creates a new
create an instance of
gets the reviews
create an instance of
sets the value of the reviews property
create an instance of
create an instance of
create an instance of
returns the similar products
create an instance of
sets the value of the similar products property
create an instance of
create an instance of
create an instance of
gets the value of the maximum age property
gets the
create an instance of
sets the value of the property
create an instance of
create an instance of
gets the value of the tracks property
create an instance of
gets the value of the brand property
sets the value of the tracks property
create an instance of
sets the value of the brand property
create an instance of
sets the value of the amazon maximum age property
create an instance of
returns the browse node
sets the value of the browse nodes property
create an instance of
returns the browse node
create an instance of
sets the value of the browse node property
gets the value of the search inside property
create an instance of
sets the value of the search inside property
create an instance of
create an instance of
gets the lists
create an instance of
create an instance of
sets the value of the property
create an instance of
create an instance of
returns the tags
create an instance of
sets the tags
create an instance of
sets the value of the composer property
gets the value of the minimum gallery property
create an instance of
create an instance of
sets the alternate versions
create an instance of
sets the value of the item
create an instance of
sets the value of the item
create an instance of
sets the value of the item
create an instance of
sets the value of the amazon minimum age property
create an instance of
returns the sales rank
gets the value of the property
create an instance of
returns a new instance of the small image
create an instance of
sets the value of the property
add an item to the playlist
create an instance of
add a large item to the large image
create an instance of
create an instance of
adds an image to the set of images
create an instance of
sets the value of the item attributes
create an instance of
returns the value of the lt merchant item
create an instance of
add item to collections
create an instance of
gets the value of the property
create an instance of
returns the subjects value of the subjects subjects
create an instance of
sets the value of the property
returns the offer with the specified summary
create an instance of
returns the value of the analog video format
adds a value to the list of offers
create an instance of
returns a summary of the given summary
create an instance of
adds a value to the
create an instance of
create an instance of
adds a new item to the questionnaire
create an instance of
add a to the
create an instance of
sets the value of the analog video format property
returns the similar item of this instance
creates a new
adds a value to the
sets the value of the director property
create an instance of
sets the tracks value
create an instance of
create an instance of
creates a new item with the given value
returns the future launch date
create an instance of
p returns the value of the code item code in the specified
create an instance of
sets the value of the future launch date property
add a to the list of lists
create an instance of
returns the tags value
create an instance of
create an instance of
gets the modes
sets the image sets
create an instance of
create an instance of
create an instance of
gets the value of the seller id property
sets the value of the seller id property
create an instance of
gets the value of the seller name property
sets the value of the seller name property
gets the value of the item page property
create an instance of
gets the value of the seller legal name property
sets the value of the property
sets the value of the seller legal name property
create an instance of
sets the value of the item page property
sets the value of the nickname property
create an instance of
returns the page
sets the value of the page property
creates a new code node code object that is a node
create an instance of
returns the value of the more about
create an instance of
sets the value of the more about property
gets the value of the location property
create an instance of
sets the value of the location property
create an instance of
gets the value of the average feedback gross property
sets the value of the average feedback rating property
create an instance of
gets the value of the total feedback property
sets the value of the total feedback property
create an instance of
gets the value of the total feedback pages property
create an instance of
sets the value of the manufacturer property
sets the value of the total feedback pages property
gets the seller feedback summary
create an instance of
sets the value of the seller feedback summary property
create an instance of
gets the seller feedback
sets the value of the seller feedback property
gets the value of the maximum price property
create an instance of
sets the value of the pay pal property
create an instance of
sets the value of the seller
sets the value of the maximum price property
sets the name of the
creates a new
sets the nickname
sets the page to the specified page
this method is used to convert the given value to an
create an instance of
this method is used to determine the value of the given
sets the location to the specified location
create an instance of
sets the average feedback
sets the total feedback
create an instance of
sets the total feedback
sets the seller feedback
create an instance of
sets seller feedback
create an instance of
gets the value of the total property
sets the value of the total property
gets the value of the total variation pages property
sets the value of the total variation pages property
returns the variation dimensions
sets the value of the variation dimensions property
create an instance of
add a big integer2 to the total number of
add a page containing the total number of
gets the value of the minimum price property
add a variation to the model
adds a new item to the list of items
create an instance of
returns the user defined location
sets the value of the user defined location property
create an instance of
sets the value of the minimum price property
sets the user defined location
sets the city
sets the state of the given state
sets the country code
create an instance of
lookup the specified lookup with the specified lookup
sets the request
returns the browse node id
sets the value of the browse node id property
create an instance of
gets the value of the is category category property
sets the value of the is category root property
returns the music label
create an instance of
returns the properties of the properties file
sets the value of the properties property
sets the value of the aspect ratio property
returns the children of this node
sets the value of the children property
create an instance of
returns the node that is the parent of this node
sets the value of the music label property
sets the value of the ancestors property
gets the value of the top property
sets the value of the top property
returns a new instance of this units with the units of the
gets the new value of the code new code property
sets the value of the new releases property
creates a new
create an instance of
creates a new code browse node code with the given name
creates a new code browse code with the specified root node
creates a new code browse node code with the given properties
creates a new code browse node code with the given value
sets the path to the node that is connected to the given
create an instance of
sets the top of the top top bottom top
returns the neighborhood
creates a new
create an instance of
simulates a request to the operation with the given request
returns a help information for the given values
sets the information
sets the value of the neighborhood property
returns the total price
create an instance of
sets the value of the sub total property
adds the items to the cart
adds the items to the cart
sets the saved for the cart item
gets the value of the cart id property
sets the value of the cart id property
create an instance of
gets the value of the property
sets the value of the property
gets the value of the merge cart property
sets the value of the merge cart property
returns a new instance of the request with the specified value
create an instance of
returns the request for the specified value
returns a new instance with the specified value
returns a new code cart code object with the specified values
gets the value of the property
returns the request that will be used to maintain the request
sets the request
create an instance of
gets the value of the quantity property
sets the value of the quantity property
sets the value of the property
create an instance of
returns the associate tag of this tag
sets the value of the cmis tag property
gets the assembly instructions
create an instance of
adds a new item to the cart
adds a new instance of offer to the list
add a new quantity to the cart
adds a new tag to the parent tag
add a new item id to the list
create an instance of
adds the specified metadata item to this metadata data model
sets the meta data for this meta data
adds the given code node code to the current node
sets the browse node
create an instance of
create an instance of
create an instance of
sets the value of the assembly instructions property
gets the value of the list id property
create an instance of
sets the value of the list id property
create an instance of
create an instance of
sets the value of the power property
gets the product group
create an instance of
sets the value of the product group property
create an instance of
gets the value of the product page property
sets the value of the product page property
create an instance of
create an instance of
create an instance of
sets the value of the sort property
returns a list with the condition matching the specified condition
create an instance of
returns a list of request objects for the given request
the specified request to the specified value
create an instance of
lookup a list with the specified id
returns a list with the specified type name
gets the assembly required
creates a new request with the specified id
returns a list with the specified value
create an instance of
p requests that the request with the specified page request is a
returns a list with the request request
returns a list with the specified value
returns a list with the request request
create an instance of
create an instance of
returns a new
returns a new bin with the specified value
create an instance of
sets the value of the assembly required property
creates a new
returns a new
sets the browse node id
create an instance of
add a to the
sets the
create an instance of
returns the search index
returns the response with the specified request value
returns the response with the specified value
create an instance of
sets the value of the search index property
create an instance of
adds a new to the
p release a title with the given title
create an instance of
request a lookup with the specified request
returns a response with the specified data
sets the transactions list
create an instance of
returns the transaction item id
sets the value of the transaction item id property
create an instance of
sets the value of the quantity property
gets the value of the unit price property
sets the value of the unit price property
create an instance of
gets the total price
sets the value of the total price property
gets the value of the child transaction items property
sets the value of the child transaction items property
create an instance of
adds a transaction item id to the transaction
returns a quantity with the specified quantity
gets the value of the audience rating property
returns a new instance of price with the given price
returns the total price of the item
sets the value of the transaction id
adds a new transaction item to the list of items
create an instance of
create an instance of
sets the top level attribute of the object
sets the title
adds the header with the specified header
sets the header
create an instance of
returns the swatch image
sets the value of the swatch image property
create an instance of
returns the thumbnail image
create an instance of
sets the value of the thumbnail image property
sets the value of the audience rating property
returns the image of the image
sets the value of the tiny image property
create an instance of
create an instance of
create an instance of
sets the swatch image
sets the image
sets the image thumbnail image
create an instance of
sets the image to be used for the image
li rss 1
sets the large image
sets the value of the category
create an instance of
returns a response indicating that the specified
create an instance of
create an instance of
sets the value of the component
add a title bar
gets the value of the total property
sets the value of the total property
create an instance of
gets the value of the excerpt property
sets the value of the excerpt property
tests the total of the
sets the value of the code in code property
create an instance of
add a group with the given values
returns the number of the
sets the value of the number property
create an instance of
adds a track to the track
simulates a number of
sets the track
create an instance of
add a new itens value to the cart
adds a cart item to the cart
sets the cart item
create an instance of
returns the height of the image
sets the value of the height property
returns the length of the units
sets the value of the length property
create an instance of
gets the value of the weight property
sets the value of the weight property
returns the text stream
returns the width of the image
sets the value of the width property
returns a new package with the same size as the height of
create an instance of
returns a new instance of the number with dimensions length
returns a new package with the same size as the
sets width of the width of the specified coverage
sets the value of the text stream property
create an instance of
creates a cart with the specified values
sets the item
create an instance of
creates an argument
p creates a new
creates a new listing with the given id
create an instance of
creates a new listing with the given type
creates a new listing with the given parameters
create an instance of
returns the requirements for the promotion
sets the eligibility requirement
create an instance of
sets the value of the name
adds a value to the header
create an instance of
sets the review object
sets the review
returns the release date
create an instance of
create an instance of
add a new instance of customers
sets the value of the release date property
add a value to the name property
sets the nickname
sets the location
create an instance of
creates a new alternate version with the given alternate version
sets the alternate version
create an instance of
create an instance of
this method is used to navigate to the actor
create an instance of
creates a new item with the specified name
create an instance of
creates a new
creates a new request with the specified cookie
create an instance of
creates a new
creates a new code merchant page code with the specified value
creates a new conv object with the average value
sets the total feedback
returns the back finding of the
sets the total feedback
create an instance of
creates a new request with the given rating
add a collection of values to the collection
sets the collection of
creates a new code warehouse code object
creates a new item with the given name
create an instance of
create an instance of
creates a new item with the given string
create an instance of
sets the value of the back finding property
creates a new item with the given name
create an instance of
add a shipment to the shipment
create an instance of
sets the shipment
creates a new item with the given name
create an instance of
returns a new item with the specified name
returns the price of the price
sets the value of the lowest price property
create an instance of
gets the highest price value for this
sets the value of the highest price property
returns a new item with the specified condition
create an instance of
gets the value of the single merchant id property
sets the value of the single merchant id property
create an instance of
returns a new price with the lowest price value
returns a new instance with the price price
creates a new item with the given name
returns a new price with the lowest price
this method is used to display the sale price
creates a new
create an instance of
returns a new item with the specified number of months
gets the value of the cart item id property
sets the value of the cart item id property
create an instance of
sets the action to the specified value
sets the cart item id
to be used by this object to ensure that the
create an instance of
creates a new item with the given name
create an instance of
returns a property with the properties of the given property
gets the value of the band material type property
sets the property
request a delivery item request
create an instance of
searches the request for the request
sets the request
returns a object with the specified lookup
sets the request list
sets the value of the guide property
creates a new item with the given name
adds a number of results to the list
adds a new page to the list of pages
adds all the lists of values to the list of lists
creates a new code tagged code instance
sets the list value for this list
returns a new
creates a new request with the specified launch request
returns the result of the subtraction of this code code

sets the last
gets the value of the items property
sets the value of the items property
creates a new instance of the code cart code object
creates a response with the specified values
the given item in the request
add a value to the request object
create an instance of
creates a new code code with the specified values
sets the value of the band material type property
sets the value of the list property
creates a new request with the specified page number
returns a new
returns a new instance of the given value
returns the first with the specified
returns a new code tagged code items that has
returns a new instance of the item with the given value
gets the value of the rating property
sets the value of the rating property
creates a new item with the given string
returns a list of
returns a distinct representation of the distinct list of
returns a stldata type object
returns a
gets the value of the rated by property
the
sets the value of the rated by property
sets the rating value
sets the value of the comment
sets the date
creates a new item with the specified name
sets the rated value
returns a new item with the specified value
creates a new instance of the code cart code object
creates an instance of code item code
create an instance of
creates a new instance of the code cart code object
creates a new instance of the code cart code object with the
creates a cart item with meta data
creates a new item with the specified id
gets the value of the property
sets the cart object
sets the request
sets the value of the property
returns the help type
sets the value of the help type property
returns the registry number
sets the value of the request item minimum price
returns a help request for the given value
sets the help type
sets the value of the registry number property
returns a help request that is used to store the request
creates a new item with the specified name
sets the value of the list name property
gets the value of the is verified property
gets the value of the included property
sets the value of the is verified property
sets the image value
returns the height of the image
creates a new item with the specified value
returns the width of the image
tests the ability to return the value of the given image
sets the name of the property to the given name
sets the value of the property
creates a new item with the given name
gets the value of the total items property
returns the tag with the specified tag
sets the request list
sets the value of the total items property
creates a new item with the given value
gets the value of the owning merchant id property
returns a new item with the specified name
sets the value of the included property
sets the value of the owning merchant id property
gets the date the value was created
gets the value of the promotion id property
sets the value of the date created date property
creates a new item with the given name
sets the value of the promotion id property
gets the value of the date property
sets the value of the date property
gets the value of the promotion category property
searches for a request with the specified values
sets the value of the promotion category property
gets the merchant promotion id
add a new item to the current item
sets the value of the merchant promotion id property
sets the value of the customer name property
gets the group claim code attribute of the object
sets the value of the group claim code property
gets the value of the partner name property
creates a new item with search index
gets the value of the coupon combination type property
sets the value of the partner name property
sets the value of the coupon combination type property
returns a new item with the specified value
returns the additional name of the
sets the value of the start date property
sets the value of the additional name property
returns a new item with the specified name
sets the value of the end date property
gets the value of the required property
gets the terms and conditions
p request that the specified request is a request to the page
sets the value of the terms and conditions property
returns the eligibility requirements
sets the value of the eligibility requirements property
sets the value of the image property
p search for a page with a specific value
gets the value of the property
sets the value of the property
returns a new item with the specified value
gets the value of the item property
sets the value of the item property
sets the value of the required property
creates a new request with the given string
gets the value of the total votes property
gets the value of the message property
sets the value of the total votes property
sets the value of the message property
creates a new request with the given name
creates a new promotion details
gets the value of the total time read property
creates a new promotion details with the specified value
creates a new promotion details with the specified value
sets the value of the total time read property
removes a date item from the request
returns a new instance of the promotion details
creates a new promotion details with the specified value
create a new
adds a value to the promotion details type
sets the audience rating
creates a new promotion details
add a new value to the end of the time interval
add a new value to the aggregator
this method composes the promotion details details
sets the promotion details
sets the value of the list id
add a promotion item to the sif item sku
sets the value of the given attribute
add a new message to the
adds a registry to the registry
sets the list of the value to the specified value
returns the distinct tags
sets the value of the distinct tags property
adds a list of type
gets the value of the property
request a response with the specified request
creates a with the specified browse node
sets the browse nodes
adds a new item to the list of items
adds a page containing the total number of pages
request a request with the given request
this method is used to create a new response with customers
sets the customers
sets the date to the specified date
adds the feedback to the feedback
sets the feedback
sets the date to the specified date
adds the top of the top of the stack
sets the top seller
add a new customer name to the customer
sets the distinct tags for the given tag
gets the value of the type property
sets the value of the
sets the distinct value
sets the value of the type property
sets the partner value
returns a copy of this tags with the same name
sets the first element with the first element
returns the component type of this component
returns a copy of this with the last
sets the value of the component type property
returns a copy of this tag with the tag
sets the additional name of the additional attribute
sets the tag
sets the comment
returns the value of the percentage off
sets the value of the percent off property
sets the value of the property
sets the value of the amount property
returns the fixed amount of the
returns a list of image with the specified image
sets the value of the currency code property
sets the value of the fixed amount property
returns the formatted price
sets the value of the formatted price property
returns the ceiling of the
sets the value of the price
sets the average rating value
sets the value of the cash code
sets the ceiling price
sets the value of the price
add a to the
adds a number with the given value
sets the type of the component
add a quantity to the quantity of sku
gets the value of the listing page property
decrease the value of the percent
sets the value of the listing page property
adds a new value to the total number of times the input
add a fixed value to the fixed amount
gets the value of the offer status property
sets the value of the price plus ceiling
sets the value of the offer status property
returns a list of items that contain the given list
returns a list of all tags that have been added
sets the list item list
sets the keywords for searching for a specific request
sets the listing listing
sets the status of the offer with the specified value
creates a new listing with the given parameters
sets the code seller listing id code property
sets the sort request for the given search criteria
sets the title
returns the transaction id
returns the argument with the argument argument
sets the argument
sets the value of the transaction id property
returns the narrow by
sets the value of the narrow by property
returns the request that is mapped to the specified
sets the request list
sets the bin with the given values
sets the value of the
sets the bin
sets the value of the product to the same value
returns a copy of this with the specified title
returns a copy of the specified similar data set
sets the similar viewed product
creates a new creator with the specified value
p p return the value of the code creator code property
creates a new node with the given path
returns the transaction date
gets the value of the cart property
sets the value of the transaction date property
sets the value of the items property
adds a new request to the cart
adds a new request to the request
gets the value of the transaction transaction epoch property
adds a new merge merge merge merge merge merge merge merge merge
adds a new request to the request
sets the value of the transaction transaction epoch property
add a new request to the list of request values
gets the value of the property
gets the value of the battery description property
sets the value of the property
returns the search result for the specified
sets the request
gets the value of the property
sets the value of the property
returns a new instance with the specified value
returns a copy of this units with the specified units
gets the value of the customer id property
lookup the request for the request
sets the request list
sets the value of the customer id property
gets the value of the cart items property
sets the feedback range with the given seller
sets the value of the cart items property
sets the value of the period that was added
sets the seller feedback
gets the value of the ordering customer id property
returns the saved items for the current item
sets the value of the ordering customer id property
add the accessory to the
sets accessory accessory
sets the value of the saved for later items property
returns the totals
request the response that is sent to the server
returns the customers content
sets the value of the totals property
returns the transaction items
sets the value of the transaction items property
sets the value of the battery description property
gets the value of the property
gets the value of the is link property
sets the value of the is link property
sets the value of the property
sets the source of the source
sets the content of the content of the content
sets the link to the
adds a transaction to the transaction
sets the value of the transaction id property
gets the value of the similar products property
add a value to the condition
sets the value of the similar viewed products property
sets the transaction transaction date
p returns a new
gets the value of the other categories similar products property
gets the value of the feedback page property
sets the name of the transaction
sets the value of the feedback page property
sets the value of the other categories similar products property
add a new customer id to the customer
returns a value indicating the seller with the specified
add a value to the customer id property
returns a new seller with the specified ids
adds a new cart to the cart
sets the totals value
sets the feedback request to the given value
adds a transaction with the given value to the current transaction
sets the value of the pay pal field code code
sets the seller id
adds a transaction with the given value to the current transaction
sets the value of the pay pal field code code
sets the value of the pay pal field code code
adds the given value to the total number of sub items
returns a parameter with the specified parameters
sets the parameter
add a cart with the cart value
sets the merchant id
returns a copy of the specified image
adds a new code max item code to the current list of
sets the image set
adds a list of ids to the list
sets the name of the list to the given value
returns a new instance of the cart with the same value as
adds a top level to the top of the stack
returns a new code code object containing the same
sets the other categories product
adds a new code value code to the code code
returns a new instance of the cart with the same value as
add a similar to the cart with other categories
returns a new
adds the response array to the response group
sets the operation information
sets the response group information
gets the value of the listing id property
sets the value of the parent
sets the title
returns the rating
sets the value of the listing id property
sets the value of the rating property
gets the value of the votes property
sets the value of the votes property
sets the total number of results to be returned by the given
sets the page number of the page
add a customer to the customer
sets the customer
returns the reviewer
sets the value of the reviewer property
gets the value of the battery type property
request a response for the given request
gets the sku sku value
returns a list of lists of all the lists
sets the value of the sku property
sets the value of the summary property
add a comma seperated value for the keywords
adds a single value to the query
adds the cart item to the cart
sets the item
gets the value of the property
sets the
add a transaction item to the transaction
sets the rating of the given value
a review with the given number of months
sets the value of the property
sets the customer id
sets the reviewer to the reviewer
sets the total number of months
sets the date to the specified date
sets the summary
add a result to the results
sets the content of the content of the content
add a page number to the page
gets the value of the property
adds the given seller to the seller
sets the seller
creates a new node with the given key
sets the value of the property
adds a parameter with the given parameters
if the operation is not yet set the current operation returns the
sets the cart object to the specified value
sets the value of the battery type property
sets the name of the argument to the value
add a value to the argument
gets the value of the ship property
sets the value of the ship property
sets the user defined location
sets the city
sets the state of the given state
sets the country
gets the value of the is ship international traits property
returns a new similarity with the specified lookup
sets the list of request objects
sets the value of the ship international property
sets the request response
sets the seller listing
sets the seller
gets the sub condition
sets the value of the sub condition property
gets the value of the condition note property
sets the value of the condition note property
add a new value to the condition
sets the sub condition
sets the condition
sets the
sets the
returns a response with the specified request
returns a with the specified items
sets the value of the index name property
gets the value of the results property
sets the value of the results property
gets the value of the pages property
sets the value of the pages property
gets the value of the material type property
gets the value of the relevance rank property
sets the value of the relevance rank property
gets the value of the offer page property
sets the value of the offer page property
sets the index name
p return the index to search for the given value
sets the page search index
sets the value of the search index with the specified query
sets the rank rank
sets the search index
sets the value of the property
adds multiple seller to the request
sets the request list
sets the value of the seller property
sets the value of the material type property
sets the exchange id
adds a new to the listing
sets the value of the property
sets the
sets the
sets the
sets the
sets the
sets the value of the name
sets the
sets the value of the address
sets the value of the address
sets the value of the address to the specified address
adds a new code code to the title
sets the value of the city
sets the value of the state to the specified address
sets the postal code address
sets the country
sets the price
sets the value of the code seller listing code property
add a new date to the end of the list
gets the value of the search in keywords property
sets the status to the specified value
sets the value of the search inside keywords property
sets the value of the pay pal property
add a value to the condition
add a sub condition to the list
sets the seller listing
sets the value of the
p add a collection of title
verifies that the operation with the given values are not supported
sets the operation
create an instance of
adds the seller listing with the given seller
adds multiple combinations of the list
gets the value of the seller nickname property
sets the list
sets the value of the seller nickname property
returns the checksum
sets the value of the checksum property
returns the page type
sets the value of the page type property
returns the page number
returns the variation page
sets the value of the page number property
returns the sequence number
sets the value of the sequence number property
sets the value of the variation page property
verifies that the specified
sets the value of the code page type code property
sets the page number of the given page
p searches for the specified code code
gets the value of the list owner property
returns a request with the specified condition
returns a new instance of the given code string code
sets the value of the list owner property
returns a new request with the specified delivery method
sets the feedback to the feedback
sets the feedback date range
create a request with the specified request
gets the value of the meta data property
sets the value of the meta data property
returns a copy of this code units code
returns a request with the specified type
returns a copy of this units with the specified units
the specified request to the specified value
add a value to the product collection property
adds a new code order code and a value to the criteria
create a request with the specified id
returns the total price
sets the value of the item total property
returns a new request with the specified number of
add an item id to the cart item
returns a new request with the specified id
sets the value of the pay pal field code code
add an exchange id to the exchange
returns the height of the specified extent
returns a request with the specified group
returns a new instance of the specified units extent
creates a new instance of the cart object with the specified value
returns the value of the code item code by the specified amount
returns a new instance of the width of the width of the
returns a new instance with the specified id
returns a new request with the specified request
sets the nickname
gets the value of the eligibility requirement type property
returns a new instance of the quantity with the specified value
sets the value of the eligibility requirement type property
adds a new value to the title
returns a new request with the specified value
add a value to the product group
gets the value of the currency amount property
sets the value of the currency amount property
adds a value to the list of items in the list
searches for a search with the given name
sets the value of the
returns a new
adds a value to the list of items
returns a new price requirement with the given price value
add a metadata item to the cart
searches for a specific request with the given string
adds the given item to the price
adds the cart item with the specified value
returns a new request with the specified value
creates a new
creates a new code track code object with the specified number
returns a new request with the specified number of pages
returns the value of the specified request
returns the items
sets the value of the items property
returns a new request with the specified
sets cart request
clears the value of the specified request
sets the cart request
clears the value of the specified merge cart property
sets the value of the code cart code property
add a value to the group with the specified values
sets the value of the code merge merge code property
sets the value of the code cart code object
sets the value of the code cart response code property
returns a subject with the subjects subjects subject
returns the name of the bin
sets the subject of the message
sets the value of the bin name property
gets the value of the bin item count property
sets the value of the bin item count property
sets the specified
sets the disc
sets the name of the bin
simulates a number of bin items in the specified extent
returns the guide id
returns a copy of the bin with the given values
sets the value of the guide id property
sets the bin parameter
creates a new guide with the given name
gets the merchant
sets the value of the merchant property
adds a language to the language
sets the language
returns a help with the given help request
sets the request
gets the value of the offer attributes property
sets the value of the offer attributes property
add a value to the cart item
sets the key value pair pair
gets the points
sets the value of the points property
sets the value of the birthday property
gets the value of the percentage property
sets the value of the percentage property
gets the
sets the value of the property
gets the value of the wish list id property
sets the value of the wish list id property
sets the number of the
creates a new code offer code with the specified value
sets the value of the percentage seller
sets the seller
sets the feedback
offer the specified offer as a
returns the location of the location
adds a specific host to the list of offers
adds a new to the list of points
sets the value of the location property
adds a new to the list of
sets the value of the offer listing property
add a new type to the
start a new date
the given date
add a customer id value
gets the value of the eligibility requirement description property
sets the nickname
returns the lowest price
sets the value of the eligibility requirement description property
returns a new customer with the specified customer
sets the value of the lowest new price property
gets the value of the description property
add a customer to the list of the list
returns the lowest price
sets the value of the description property
sets the lowest used price
sets the location of the customer
gets the value of the price price property
add a new code customer to the customer object
sets the value of the lowest price property
returns a customer with the specified tag
gets the value of the price price property
returns a new instance of the promotion promotion sku
sets the value of the lowest price property
sets the customer reviews
category with category
creates a new instance of promotion
gets the value of the total new property
returns a new instance of the date with the specified value
sets the value of the total new new property
description of the method
description of the method
gets the value of the total used property
returns a new instance of the given value
sets the input encoding
sets the value of the total used property
sets the input encoding to the input encoding
gets the value of the total property
sets the user agent
sets the value of the total property
returns true if the user agent is set
gets the value of the total property
sets the service url
sets the value of the total property
returns true if the service is running
new price summary
sets the proxy host
returns true if the proxy is a proxy host
returns a new instance of the frequency with the lowest price value
returns a new instance of the price with the lowest price value
connect to the specified port
returns a new instance of the price with the lowest price value
returns true if the proxy port is a set of proxy port
sets the total number of questions to the given value
sets the total number of the offer with the specified value
sets the total number of offers
sets the total number of offers
returns the calendar type
creates a new instance of the
creates a new instance of aws
sets the value of the calendar type property
searches the item search for the given request
lookup the for the given request
browse the given
searches for a list of items
lookup a list of
searches the request for the given search request
lookup the response customer
lookup the similarity between the request and the request
lookup the requested seller
returns the cart object for the specified request
adds a new cart to the cart
creates a new instance of response
returns an unmarshaller instance
modify the current cart
clear the cart cart object
lookup the lookup transaction
creates a listing listing listing listing
creates a listing listing listing
lookup the response tag for the given lookup tag
gets the value of the units units property
add required parameters to the request
reads the stream from the input stream
sets the value of the case property
returns the type of the case of the type
sets the value of the case material type property
returns the thickness of the
sets the value of the case thickness property
returns the type of case
sets the value of the case type property
returns the catalog number
sets the value of the catalog number property
returns the description
sets the value of the description property
returns the type of the chain
sets the value of the chain type property
gets the value of the type property
sets the value of the type property
gets the value of the size property
sets the value of the size property
sets the value of the color property
gets the compatibility
sets the value of the compatibility property
returns the computer hardware type
sets the value of the computer hardware type property
returns the computer platform
sets the value of the computer platform property
returns the connectivity of the connectivity
sets the value of the connectivity property
gets the value of the continuous speed property
sets the value of the continuous speed property
gets the value of the country of origin property
sets the value of the country of origin property
gets the cpu manufacturer
sets the value of the cpu manufacturer property
gets the cpu speed units
sets the value of the cpu speed property
gets the cpu type
sets the value of the cpu type property
gets the value of the property
sets the value of the property
gets the value of the age property
sets the value of the gallery property
gets the value of the delay shots shots property
sets the value of the delay interval shots property
returns the value of the delivery option
sets the value of the delivery option property
sets the value of the department property
gets the club type
gets the value of the decimal number property
sets the value of the club type property
sets the value of the decimal number property
returns the dial color
sets the value of the dial color property
gets the value of the dial window material type property
sets the value of the dial window material type property
returns the zoom level for the
sets the value of the digital zoom property
gets the value of the display size property
sets the value of the display size property
gets the value of the set piece quantity property
sets the value of the set piece property
gets the value of the property
sets the value of the property
returns the description
sets the value of the description property
gets the value of the property
sets the value of the property
gets the value of the property
sets the value of the property
gets the value of the age property
sets the value of the gallery property
returns the external display support description
sets the value of the external display support description property
gets the value of the type property
sets the value of the type property
sets the value of the fax number property
returns the time the first issue lead
sets the value of the first issue lead time property
gets the value of the disk mz description property
sets the value of the disk drive description property
gets the fixed shipping charges value
sets the value of the fixed shipping charge property
returns the value of the code type code property
sets the value of the type property
returns the graphics card interface
sets the value of the graphics card interface property
returns the graphics description
sets the value of the graphics description
gets the graphics memory size
sets the value of the graphics memory size property
gets the value of the attribute property
sets the value of the attribute property
returns the bridge system
sets the value of the bridge system property
returns the pick thickness
sets the value of the pick thickness property
gets the value of the pickup configuration property
sets the value of the pickup configuration property
gets the value of the hard disk count property
sets the value of the hard disk count property
gets the value of the hard disk size property
sets the value of the hard disk size property
gets the value of the has auto focus property
sets the value of the has auto focus property
returns the display color support for the display
gets the value of the has mode property
sets the value of the display color support property
sets the value of the has mode property
gets the value of the has in camera table property
sets the value of the has in camera table property
gets the value of the has red eye reduction property
sets the value of the has red eye reduction property
gets the value of the has self timer property
sets the value of the has self timer property
gets the value of the has mount property
sets the value of the has mount property
gets the value of the has video out property
sets the value of the has video out property
gets the value of the has property
sets the value of the has property
gets the value of the material type property
sets the value of the material type property
gets the hours of the hours
sets the value of the hours of operation hours property
returns the software software
sets the value of the included software property
gets the value of the includes property
sets the value of the includes property
gets the value of the property
sets the value of the property
gets the value of the ingredients property
sets the value of the ingredients property
returns the instrument key
sets the value of the instrument key property
gets the value of the is property
sets the value of the is property
sets the value of the isbn property
gets the film color type
gets the value of the is email notify available property
sets the value of the film color type property
sets the value of the is email notify available property
gets the value of the is property
sets the value of the is property
returns the flavor name
sets the value of the flavor name property
gets the value of the is lab created property
sets the value of the is lab created property
gets the value of the is property
sets the value of the is property
returns the iso integer with units units
sets the value of the iso property
gets the value of the issues per year property
sets the value of the issues per year property
returns the item that is currently being used by this
sets the value of the item dimensions property
returns the keyboard description
sets the value of the keyboard description property
returns the
sets the value of the product group property
gets the value of the club property
sets the value of the club flex property
gets the languages
gets the value of the club property
sets the value of the club property
sets the value of the languages property
gets the legal legal legal value
sets the value of the legal property
returns the line voltage of the
sets the value of the line voltage property
gets the value of the list price property
sets the value of the list price property
returns the macro focus range
sets the value of the macro focus range property
gets the value of the type property
sets the value of the type property
gets the value of the property
sets the value of the property
returns the value of hand orientation
sets the value of the hand orientation property
gets the value of the manufacturer manufacturers description property
sets the value of the manufacturer manufacturers description property
gets the value of the hard disk size property
sets the value of the hard disk size property
gets the value of the manufacturer range age property
sets the value of the manufacturer maximum age property
returns the hard disk interface
sets the value of the hard disk interface property
gets the value of the manufacturer min age property
sets the value of the manufacturer minimum age property
returns the hardware platform
sets the value of the hardware platform property
gets the value of the manufacturer parts description property
sets the value of the manufacturer parts description property
gets the value of the material type property
sets the value of the material type property
gets the value of the maximum property
sets the value of the maximum property
gets the maximum color depth
sets the value of the maximum color depth property
gets the value of the maximum focal length property
sets the value of the maximum focal length property
gets the maximum high resolution
sets the value of the maximum high resolution property
gets the maximum horizontal resolution of units
sets the value of the maximum horizontal resolution property
gets the value of the maximum low resolution property
sets the value of the maximum low resolution property
gets the maximum resolution for this resolution
sets the value of the maximum resolution property
gets the value of the maximum speed property
sets the value of the maximum speed property
gets the maximum vertical vertical resolution
sets the value of the maximum vertical resolution property
gets the maximum weight recommendation
sets the value of the maximum weight recommendation property
gets the value of the memory slots available property
sets the value of the memory slots available property
gets the value of the metal stamp property
sets the value of the metal stamp property
gets the value of the is adult product property
gets the value of the metal type property
sets the value of the metal type property
sets the value of the is adult product property
returns the movie description
sets the value of the mini movie description property
gets the value of the units focal length property
sets the value of the minimum focal length property
gets the value of the speed property
sets the value of the minimum speed property
sets the value of the model property
gets the value of the model year property
sets the value of the model year property
returns the modem description
sets the value of the modem description property
gets the value of the monitor size property
sets the value of the monitor size property
gets the value of the is property
sets the value of the is property
returns the size of the frame that this
sets the value of the monitor viewable diagonal size property
returns the mouse description
sets the value of the mouse description property
gets the value of the property
sets the value of the property
returns the musical style
sets the value of the musical style property
returns the native resolution
sets the value of the native resolution property
returns the network interface description
sets the value of the network interface description property
gets the notebook display display value for this launch
sets the value of the notebook display display property
returns the notebook device description
returns the lens type
sets the value of the notebook device description property
sets the value of the lens type property
gets the value of the number of property
sets the value of the number of property
gets the value of the number of issues property
sets the value of the number of issues property
gets the value of the number of items property
sets the value of the number of items property
gets the value of the number of keys property
sets the value of the number of keys property
gets the value of the number of pages property
sets the value of the number of pages property
gets the value of the number of property
sets the value of the number of property
gets the value of the number of rapid fire getter for shots
sets the value of the number of rapid fire shots property
gets the value of the number of stones property
sets the value of the number of stones property
gets the value of the number of strings property
sets the value of the number of strings property
gets the value of the number of tracks property
sets the value of the number of tracks property
gets the value of the zoom property
sets the value of the zoom property
returns the original release date
sets the value of the original release date property
gets the value of the output property
sets the value of the output property
returns the number of package dimensions
sets the value of the package dimensions property
gets the value of the property
sets the value of the property
gets the value of the minimum color property
sets the value of the minimum color property
gets the value of the shape property
sets the value of the shape property
gets the value of the method property
sets the value of the method property
gets the surface
sets the value of the surface property
gets the value of the type property
sets the value of the type property
gets the value of the property
sets the value of the property
gets the value of the price rating property
sets the value of the price rating property
gets the value of the processor count property
sets the value of the processor count property
sets the value of the media type property
gets the value of the memory slots available property
sets the value of the memory slots available property
gets the value of the tag property
sets the value of the tag property
gets the value of the box property
sets the value of the box excluded property
sets the value of the publication date property
returns the level
sets the value of the reading level property
gets the value of the recorder track count property
sets the value of the recorder track count property
sets the value of the region code property
gets the value of the region of origin property
sets the value of the region of origin property
returns the removable memory
sets the value of the removable memory property
returns the value of the resolution type
sets the value of the resolution modes property
sets the value of the return policy property
returns the ring size
sets the value of the ring size property
gets the safety warning
sets the value of the safety warning property
returns the secondary cache size
sets the value of the secondary cache size property
gets the value of the settings type property
sets the value of the settings type property
gets the value of the sold in in property
sets the value of the sold in stores property
returns the size of the per
sets the value of the size per property
gets the value of the skill level property
sets the value of the skill level property
gets the sound card description
sets the value of the sound card description property
gets the value of the speaker count property
sets the value of the speaker count property
returns the speaker description
sets the value of the speaker description property
gets the stone
sets the value of the stone property
returns the stone color
sets the value of the stone color property
returns the stone cut
sets the value of the stone cut property
returns the stone of the stone
sets the value of the stone shape property
gets the value of the stone weight property
sets the value of the stone weight property
returns the current
sets the value of the operating system property
sets the value of the property
gets the value of the subscription size with units property
gets the value of the sensor resolution property
sets the value of the subscription length property
sets the value of the sensor resolution property
gets the value of the system bus speed property
sets the value of the system bus speed property
gets the value of the system memory size max property
sets the value of the system memory size max property
gets the value of the system memory size property
sets the value of the system memory size property
gets the value of the system memory type property
sets the value of the system memory type property
gets the value of the page indicator property
gets the value of the package quantity property
sets the value of the page indicator property
sets the value of the package quantity property
gets the value of the release date property
sets the value of the release date property
gets the value of the total weight property
sets the value of the total diamond weight property
gets the value of the total external free property
sets the value of the total external free property
gets the value of the total ports property
sets the value of the total ports property
gets the value of the total weight property
sets the value of the total weight property
gets the value of the total internal free property
sets the value of the total internal free property
gets the value of the total measure weight property
sets the value of the total metal weight property
gets the value of the property
sets the value of the property
gets the value of the total parallel parallel ports property
sets the value of the total parallel ports property
gets the value of the property
sets the value of the property
gets the value of the property
sets the value of the property
gets the value of the total serial ports property
sets the value of the total serial ports property
gets the value of the property
sets the value of the property
gets the value of the property
sets the value of the property
gets the value of the property
sets the value of the property
gets the value of the property
sets the value of the property
gets the value of the product site launch date property
sets the value of the product site launch date property
gets the value of the variation property
sets the value of the variation property
returns the product type name
returns the variation description
sets the value of the product type name property
sets the value of the variation description property
gets the value of the product type property
gets the value of the vendor property
sets the value of the product type property
sets the value of the vendor property
gets the value of the property
sets the value of the property
gets the value of the watch movement type property
sets the value of the watch movement type property
gets the value of the website property
sets the value of the website property
gets the value of the water resistance depth property
sets the value of the water resistance depth property
gets the value of the frequency property
sets the value of the frequency property
creates an actor with the given name
creates a new
creates a new
create an instance of
creates a new code merchant item code
creates a new
creates a new
creates a new code merchant item code
add a value to the code merchant item attributes code
creates a new instance of the given rating type
creates a new
adds a value to the aggregator
creates a new
creates a new code merchant item code
creates a new code merchant item code
creates a new code merchant item code
creates a new
creates a new
creates a new code merchant item code
creates a new code merchant item code
p sets the value of the
creates a new
creates a new code merchant item code
creates a new
returns the removable storage
sets the value of the lt units gt value
sets the value of the removable storage property
creates a new
creates a new
creates a new
returns the value of the required property
creates a new code merchant item code
sets the value of the required voltage range property
sets the value of the lt gt lt gt tag
creates a new code merchant item code
creates a new code merchant item code
creates a new code merchant item code
creates a new
creates a new
creates a new
creates a new instance of the specified platform specific platform specific platform
creates a new
gets the value of the running time property
sets the speed
sets the value of the running time property
creates a new
creates a new
gets the value of the name property
sets the value of the lt gt lt gt tag
sets the value of the name property
sets the units value for this
sets the value of the lt gt lt gt tag
adds the creator for the creator
creates a new code merchant item code
creates a new code merchant item code
creates a new
creates a new
creates a new code merchant item code
creates a new code item code
gets the value of the material type property
sets the value of the lt gt item
sets the value of the material type property
creates a new code merchant item code
creates a new code merchant item code
creates a new
creates a new
sets the value of the lt item attributes
sets the square quantity
sets the value of the lt gt lt gt tag
sets the value of the lt gt lt gt tag
sets the value of the lt gt lt gt tag
sets the value of the lt gt lt gt tag
sets the value of the lt gt lt gt tag
creates a new code merchant item code
sets the value of the lt gt lt gt tag
creates a new instance of the
creates a new code merchant item code
create a fax number with the specified number of
creates a new feature item
creates a new code conv item model code
creates a new code merchant item code
creates a new
sets the value of the lt shipping shipping shipping value
creates a new code merchant item code
creates a new
creates a new code merchant item code
sets the amount of units that will be used to represent a
creates a new code merchant item code
creates a new code merchant item code
creates a new
creates a new code merchant item code
creates a new code merchant item code
creates a new
create an instance of
creates a new code merchant item code
create an instance of
creates a new
creates a new
sets the
create an instance of
creates a new code merchant item code
creates a new code merchant item code
creates a new code merchant item code
returns a new code item code
creates a new code merchant item code
creates a new code merchant item code
creates a new
creates a new code merchant item code
sets the value of the lt quot item attributes quot quot
sets the value of the lt gt lt gt tag
creates a new instance of the given item
sets the value of the lt quot item attributes quot quot
creates a new
sets the value of the lt quot item attributes quot quot
sets the value of the lt units gt item
sets the value of the style property
creates a new code merchant item code
creates a new
creates a new
creates a new code item code with the specified name
sets the value of the code code property
creates a new
creates a new instance of the given
creates a new
returns the size of the supported media size
creates a new
sets the value of the supported media size property
creates a new code merchant item code
creates a new code merchant item code
creates a new
creates a new
sets the maximum age value for this range
sets the value of the merchant item attributes
creates a new
creates a new
sets the maximum value for this
creates a new code merchant item code
sets the maximum focal length
returns a copy of this with the maximum number of images
sets the maximum number of units to be used for the maximum
returns a new
returns a copy of this item attributes
sets the maximum value of the
returns a copy of this with the maximum
creates a new
creates a new
creates a new instance of the specified
creates a new code merchant item code
creates a new
sets the minimum focal value for the specified pixel
sets the maximum
creates a new code conv item model code
sets the value of the model year
creates a new code merchant item code
sets the amount of the specified units
creates a new
creates a new
sets the value of the lt gt lt gt tag
creates a new code merchant item code
creates a new
creates a new code merchant item code
creates a new
creates a new instance of the
creates a new
sets the value of the lt gt item
add a number of issues
sets the number of items in the model
sets the number of keys to the given value
sets the number of pages to be used by this object
sets the value of the lt gt item
sets the total number of peers
sets the number of stones
sets the value of the lt string gt item
sets the number of the numerical value
sets the units for the
p this method is used to create a new merchant item
sets the output value
creates a new
creates a new code merchant item code
sets the value of the lt gt tag
creates a new
creates a new code merchant item code
creates a new
creates a new code merchant item code
creates a new code merchant item code
create a new code item code
creates a new instance of the specified flash
creates a new
creates a new
sets the value of the lt rating quot item quot integer
returns the merchant item attributes
creates a new
creates a new
sets the value of the lt gt lt gt tag
creates a new
creates a new instance of the specified amazon ec2 json
creates a new
sets the value of the code merchant item attributes code
create a new instance of the specified recorder type
creates a new
creates a new
p used to create a new code merchant item code
adds the given values to the set of methods
sets the value of the specified memory item
creates a new code merchant item code
returns a new code item code
creates a new code merchant item code
creates a new
creates a new instance of sales item
creates a new
sets the value of the attribute specified by the value of the
creates a new
sets the value of the lt gt lt gt tag
create a new code merchant item code
creates a new code merchant item code
creates a new code merchant item code
creates a new
sets the value of the code merchant item attributes code
creates a new
sets the value of the lt gt attributes
creates a new instance of the specified
creates a new
returns the revenue tax value
creates a new instance of the specified
sets the value of the tax property
creates a new instance of the specified shape
creates a new instance of the specified
creates a new
returns a new code item code representing the
creates a new
sets the frequency item
returns a new
sets the maximum memory value for this merchant item attributes
sets the value of the address attribute
sets the units representative
returns a new
creates a new
returns a new instance of age value
sets the value of the lt item attributes
returns a new instance of the minimum age with the specified value
p used to create a new merchant item
sets the value of the
creates a new
sets the value of the
creates a new
adds all the items in the given array of artist
returns a copy of the given code code
sets the aspect ratio of the
sets the total number of ports
sets the value of the code code property
creates a new
sets the value of the code assembly code
returns a new code item code representing the number of
sets the value of the
creates a new
returns a copy of the audio with the specified values
sets the value of the lt gt lt gt tag
adds a value to the aggregator
creates a new instance of the specified parallel arc
sets the value of the back finding attribute
sets the value of the lt gt lt gt tag
sets the value of the code attachment code property
sets the value of the lt gt lt gt tag
sets the value of the included attribute
returns a copy of this serial port number
sets the value of the attribute with the specified value
sets the value of the lt gt lt gt tag
sets the value of the lt gt lt gt tag
returns a new instance of the specified
sets the value of the lt gt lt gt tag
sets the value of the
sets the value of the lt gt lt gt tag
sets the value of the
sets the value of the lt gt lt gt tag
sets the value of the attribute with the specified type name
creates a new
sets the value of the attribute with the value of the attribute
creates a new
sets the value of the attribute with the given value
sets the vendor id of the vendor
sets the value of the
creates a new code merchant item code
returns a new
creates a new code merchant item code
returns a new instance of the specified extent
create a new item
sets the value of the attribute with the specified type name
creates a new instance of the
sets the thickness of the given style
sets the frequency item attributes
sets the value of the attribute with the given type
sets the actor
sets the artist
sets the catalog number
sets the audio format
add a value to the category list
sets the value of author
returns a copy of this category with the given categories
sets the camera manual level
sets the value of the lt gt element
sets the dublin core creator
sets the value of the
sets the director
returns a new
sets the feature
sets the value of the lt gt element
sets the format
sets the value of the attribute with the given type
sets the flash flash type
sets the value of the attribute with the specified size
sets the picture format
sets the value of the attribute as a string
sets the platform
sets the value of the attribute with the specified value
sets the channel
sets the return method
add a value to the underlying host
sets the special features
returns a new
sets the supported image type
sets the value of the
returns a new instance of the given platform specific platform specific platform
sets the value of the lt gt element
sets the speed
sets the value of the attribute with the specified name
sets the value of the lt gt element
sets the value of the lt units extent gt value
sets the value of the lt gt element
adds the creator of the creator
sets the value of the attribute with the specified value
returns a new
sets the value of the lt gt option
sets the delay value
sets the value of the attribute with the given name
sets the value of the attribute with the given number
sets the color of the specified color
sets the value of the
this method is invoked by the base class to perform a
add a value to the director
sets the foreground color of the display
sets the size of the display
sets the quantity
sets the value of the lt gt item
sets the value of the lt gt element
sets the value of the lt gt item
sets the value of the lt gt element
sets the value of the lt gt element
sets the value of the attribute with the given value
returns a new
adds multiple values to the set of values
sets the value of the lt gt element
sets the value of the attribute to be used as the
sets the value of the attribute with the given type
sets the number of to the specified number
adds a feature to the attribute of the doclet item list object
sets the value of the
returns the number of issue periods
sets the name of the attribute to the specified value
stores the specified value in the list
returns a copy of the given values
returns a copy of this form with the specified values
sets the value of the
sets the value of the attribute specified by the set of attributes
returns a new
sets the value of the genre
sets the value of the lt gt element
sets the value of the flex flex
sets the attribute of the object
sets the value of the
sets the value of the
this method is used to draw an image with the same size
sets the value of the attribute with the given attribute name
sets the to the given value
sets the value of the
sets the value of the attribute with the specified configuration
sets the value of the hand for the specified property
sets the number of the hard disk capacity
sets the size of the hard disk capacity
sets the value of the attribute specified by the name of the
this method is used to provide the value of the specified platform
sets the focus to the given value
returns the value of the
returns whether the specified object has a new camera
returns a new instance of the with the specified color
sets the value of the
sets the
sets the video type
sets the value of the
sets the value of the attribute with the specified type name
sets the value of the
returns a new instance of the specified extent
sets the value of the include include attribute
add a new item to the ingredient
add an array of items to the set of ingredients
sets the value of the
adds the specified
sets the product of this product
sets the value of the attribute
sets the value of the lt gt element
sets the value of the attribute
sets the value of the lab item
sets the value of the attribute
sets the units of the units
sets the value of the attribute
sets the value of the
sets the value of the item attribute
sets the value of the
sets the label value
adds a value to the language attribute
sets the language value
sets the value of the attribute as a legal path with the
returns the code item code that contains the value of the
sets the value of the
returns the price of the item with the given value
focuses the given
sets the value of the attribute with the given type
sets the value of the attribute
sets the value of the code manufacturer code property
sets the
sets the value of the
sets the value of the
sets the
sets the material type
sets the value of the attribute with the specified values
returns a copy of this with the maximum units
sets the maximum color value
sets the maximum focal length
sets the maximum value of the resolution
returns the maximum horizontal gap between the horizontal and vertical
sets the maximum value for the resolution
returns a copy of this code item attributes code
sets the maximum value of the
returns the maximum value of the horizontal gap between the
sets the units recommendation
sets the value of the attribute specified by the name of the
sets the memory consumption
sets the value of the code name code property
sets the value of the code name code property
sets the value of the
sets the minimum focal length
sets the minimum value for the attribute
sets the value of the model attribute
sets the value of the model year property
returns a new instance of the given code item code
sets the size of the monitor
returns the value of the code item attributes code property
sets the value of the
sets the value of the lt gt element
sets the style attribute
sets the value of the resolution type
sets the value of the
sets the network interface
displays a message that is a display of the given technology
the given device
sets the value of the number of
p returns a new instance of number with the number of issues
sets the number of items to the specified value
returns a new instance of the specified number of keys
sets the number of pages to be displayed
sets the value of the number of
the number of members of this
sets the number of stones of the specified value
returns a new instance of the value of the specified number of
sets the number of tracks to the specified value
sets the operating system with the given name
returns the sensor for the sensor
sets the zoom attributes
sets the value of the
sets the output value
sets the package name of the package that this object will
add a quantity of package items to the list
returns a new
adds a value to the
sets the value of the attribute
sets the value of the attribute as a color
sets the value of the shape
sets the value of the attribute
sets the of the surface
sets the value of the attribute with the given type
sets the value of the attribute
sets the value of the
returns a new instance of the with the specified
returns a copy of this picture with the specified values
returns a new instance of the platform specific platform specific platform specific
sets the price attributes
adds a value to the primary key
sets the value of the
sets the product group
creates a new instance of product
sets the product type name
sets the product type
sets the value of the tag attribute of the doclet tags
li rss 1
sets the value of the
sets the value of the lt gt element
sets the value of the
adds a value to the list of all the methods
sets the recorder to the specified value
sets the value of the
sets the value of the
returns the policy with the specified value
sets the release date
removes the specified memory item from the cache
sets the value of the attribute with the given name
sets the value of the
sets the value of the
sets the ring size
returns a copy of this time with the specified time
sets the value of the attribute with the specified name
returns the minimum value for the specified
sets the value of the attribute with the given type
sets the value of the attribute with the specified type name
returns a copy of the shoe with the specified values
sets the size of the attribute
sets the size of the
sets the skill level
sets the value of the lt gt element
add a new instance of the given type to the list of
sets the value of the
sets the number of the speaker
sets the speaker name
sets the value of the attribute with the given values
sets the stone of the stone
sets the stone name
sets the stone path
returns a new instance of the stone with the specified name
returns a new instance of the specified
sets the value of the attribute
sets the style attribute with the given style
returns a new instance of the subscription with the same name
returns a new
sets the value of the
sets the value of the
sets the maximum amount of the units in memory
sets the value of the system memory extent
sets the value of the
returns a new
sets the value of the page item attribute
sets the value of the
sets the title
returns the total number of that match the given
sets the total number of external items
sets the total number of items in the specified port
returns a copy of the total weight of this unit
returns the total number of that this instance belongs to
returns the sum of the items of the given units
sets the value of the lt gt item
returns a copy of this object with the same name
sets the value of the lt gt item
sets the value of the lt gt item
sets the total number of serial ports
sets the value of the lt gt item
sets the value of the lt gt item
sets the value of the lt gt item
sets the value of the lt gt item
sets the value of the lt gt element
sets the variation of the
sets the variation name
sets the value of the attribute with the specified value
sets the value of the
sets the value of the same total extent property
sets the value of the lt gt item
sets the value of the frequency
sets the age
sets the category
sets the category bin bin
sets the character
sets the list of
sets the value of data link protocol
sets the focus
sets the
sets the value of form factor
sets the element type set element
sets the gender
sets the ingredients set element
sets the interest
sets the language name
sets the material type element
sets the length
sets the size
sets the primary color
sets the shoe size
sets the target brand
returns the value of the specified object
returns the value of the specified object as a double
returns true if the object is a boolean
returns the value of the given object
returns the value of the object as a float
returns a string representation of this object
returns the agent at the specified index
returns the operator at the specified index
returns the number of generation generation
returns the minimum number of applied evaluators applied to the
sets the probability of the probability distribution
returns the size of the agent
execute a command
returns the results of the last printed results
sets the input pipe
sets the base probability of the
creates a object based on the parameters of the given object
creates a new object
returns the distance between this and the specified
returns the distance between the given and the specified value
sets the value
returns the distance between this node and the given
returns the distance between the given and the specified
returns the distance between the given and the specified
sets the from attribute of the object
sets the to string
returns the vector of
sets the core
returns the core
returns the
returns the parameters
calculate the fitness fitness of the population
returns the fitness improvement of the solution
sets the memory
returns the number of operators
returns the average fitness of the current
returns the number of agents in the given agent
returns the of the neural network
returns the current sample model
compares the specified object with this operator
returns the hash code of this object
returns the operator name
returns the operators
creates a new instance of the code hash code instance
creates a new instance of help
checks whether the given player is already in the database
this method is called when a player is done
this method is called by the framework to initialize the
adds all the given objects to the list of participants
clears the map
returns true if the given operator is contained in the list
sends a command to the given target
check the of the
returns the hash code of this object
check the connection to the target
returns the code bot code instance that is associated with the given
removes a bot from the list
removes all the elements from this collection
the conflict resolver for the given operator
returns the conflict for the given operator
creates a new code target group code instance
returns the hash code of this object
returns the hash code for this player
compares the specified object with this group
compares this player to the specified object
adds the given target to the list
removes the target from the target list
removes the target from the target map
returns an iterator over the elements in this iterator
returns an iterator over all targets
this method is called to create a new player
returns true if the iterator has another
returns the next element in the iteration
creates a new instance of code plugin manager code instance
removes the current object from the collection
initializes the
compares this instance to another instance
enable the plugin
disable the command
check access to the access rights
creates a new server
this method is called when the user selects the
sets the connection to the connection
removes a connection from the pool
registers the connection to the server
creates a new instance of lag
removes the command manager instance
sets the operator
load the plugin from the given plugin
activates the plugin
compares this object with another one
creates a new instance of the bot
called by the plugin to load the plugin
creates a new instance of plugin list
register the help commands
register the job to the database
removes the command manager
sets the server commands
called by the framework to perform the uninstall command
adds a permission to the session
adds a group to the session
returns the permission for the given permission
returns the permission object for the specified permission
returns group group
returns a group by name
get user by login login
returns the group group
returns the previous token stream
sets the previous token
returns the next token in the queue
returns the next token in the input stream
returns the next token in the iteration
clears the current token
sets the value of the field
compares the specified object with this constant range
returns the hash code value for this object
returns a string representation of the given field
compares the specified object with this range and returns code true code
returns the hash code for this code code object
compares this filter to the specified object
returns the hash code value for this object
initializes the analyzer
reset the data
commits a commit operation
resets the
writes the value to the output stream
returns the path to the file name
writes the to the stream
writes the specified byte array to the end of the array
sets the similarity
write a 16 bit unsigned integer
write a byte to the buffer
returns the index of the term in the current interval
write a byte array into the stream
writes a byte to the pool
sets the merge scheduler
returns a clone of this object
add a new document to the list
adds a collection of names to the list of names
adds a new indexed property
adds a term to the list
returns the name of the file that is used to determine the
returns a copy of this payload
sets the print stream to which this connection is used
returns the value of the code reader code instance
returns the directory where the file is currently
returns a token stream that is allowed to this token
writes a string
deletes the given term
checks if the given file exists
returns the modified file modified by the given name
change the current file
returns the length of the given file
deletes a file
creates an output output for the given name
deletes the documents contained in the given terms
reads a string from the input stream
returns a clone of this object
closes the file
returns true if this is a implicit
checks if the resource is selected
returns the build label
sets the build label
gets the value of the property
sets the
gets the value of the to recipient list property
sets the recipient list
returns the build subject prefix
sets the build subject prefix
returns the url of the http url
sets the url of the http url
returns the build properties
sets the build properties
processes the command line commands
returns the test logs
returns the source directory
sets the source directory
returns the install
sets the install
returns the path to the href test
sets the path to the target test path
returns the directory name of the javac directory
sets the directory name of the javac compiler
returns the path to the target directory
sets the path to compile the target directory
returns the file name of the test manifest file
sets the file name of the test manifest file
returns the name of the drop file
sets the name of the drop html file
returns the template name
sets the name of the drop template
returns the html tag for the given start tag name
the command has been executed so extract extract the needed information
creates the fields of the dialog
this method is called when the ok button is pressed
cancel pressed
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
this adds a property descriptor for the start date feature
this adds a property descriptor for the duration feature
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the sampling rate feature
this adds a property descriptor for the name feature
this adds a property descriptor for the unit feature
this adds a property descriptor for the scale feature
this adds a property descriptor for the nominal frequency feature
this adds a property descriptor for the weighting feature
this adds a property descriptor for the value id feature
this adds a property descriptor for the expected level feature
this adds a property descriptor for the timestamp feature
this adds a property descriptor for the measured level feature
this adds a property descriptor for the values property feature
this adds a property descriptor for the type feature
this adds a property descriptor for the scope feature
this adds a property descriptor for the scale feature
this adds a property descriptor for the date feature
this adds a property descriptor for the weighting feature
this adds a property descriptor for the validity feature
this adds a property descriptor for the value feature
creates the meta model objects for the package
this adds a property descriptor for the calculation standard feature
this adds a property descriptor for the octave band number feature
this adds a property descriptor for the octave band type feature
this adds a property descriptor for the octave beginning band feature
this adds a property descriptor for the number feature
this adds a property descriptor for the name feature
this adds a property descriptor for the scale feature
this adds a property descriptor for the value feature
this adds a property descriptor for the ground effect feature
this adds a property descriptor for the temperature feature
this adds a property descriptor for the descriptor feature
this adds a property descriptor for the channel feature
this adds a property descriptor for the pressure feature
this adds a property descriptor for the mode feature
this adds a property descriptor for the humidity feature
this adds a property descriptor for the type feature
this adds a property descriptor for the peak date feature
this adds a property descriptor for the brand feature
this adds a property descriptor for the condition feature
this adds a property descriptor for the matched feature
this adds a property descriptor for the model feature
this adds a property descriptor for the serial feature
this adds a property descriptor for the type feature
this adds a property descriptor for the feature
this adds a property descriptor for the number feature
this adds a property descriptor for the length feature
this adds a property descriptor for the name feature
this adds a property descriptor for the name feature
this adds a property descriptor for the parent feature
this adds a property descriptor for the infrastructure feature
this adds a property descriptor for the sub network feature
this adds a property descriptor for the network feature
this adds a property descriptor for the x feature
this adds a property descriptor for the y feature
this adds a property descriptor for the z feature
this adds a property descriptor for the name feature
this adds a property descriptor for the sub networks feature
this adds a property descriptor for the level feature
this adds a property descriptor for the name feature
this adds a property descriptor for the location feature
this adds a property descriptor for the closed feature
this adds a property descriptor for the sub network feature
this adds a property descriptor for the size feature
this adds a property descriptor for the name feature
this adds a property descriptor for the code feature
this adds a property descriptor for the name feature
this adds a property descriptor for the code feature
this adds a property descriptor for the type feature
this adds a property descriptor for the area of use property feature
this adds a property descriptor for the south latitude feature
this adds a property descriptor for the code feature
this adds a property descriptor for the north latitude feature
this adds a property descriptor for the name feature
this adds a property descriptor for the dimension feature
this adds a property descriptor for the type feature
this adds a property descriptor for the code feature
this adds a property descriptor for the left longitude feature
this adds a property descriptor for the name feature
this adds a property descriptor for the type feature
this adds a property descriptor for the right longitude feature
this adds a property descriptor for the iso feature
this adds a property descriptor for the iso feature
this adds a property descriptor for the valid feature
this adds a property descriptor for the measure feature
this adds a property descriptor for the iso code feature
this adds a property descriptor for the comment feature
this adds a property descriptor for the name feature
this adds a property descriptor for the path feature
this adds a property descriptor for the name feature
this adds a property descriptor for the id feature
this adds a property descriptor for the street feature
this adds a property descriptor for the started feature
this adds a property descriptor for the city feature
this adds a property descriptor for the finished feature
this adds a property descriptor for the province feature
this adds a property descriptor for the country feature
this adds a property descriptor for the status feature
this adds a property descriptor for the service feature
this adds a property descriptor for the start date feature
this adds a property descriptor for the end date feature
this adds a property descriptor for the name feature
this adds a property descriptor for the alive feature
sets the fixture for this operation test case
returns the fixture for this operation test case
sets the fixture for this time history test case
returns the fixture for this time history time test case
sets the fixture for this noise event parameter
returns the fixture for this event parameter test case
sets the fixture for this measure measure test case
auto generated setter method
returns the fixture for this measure test case
returns the fixture for this xor measure measure test case
sets the fixture for this time history parameter test case
returns the fixture for this time history parameter test case
sets the fixture for this device test case
returns the fixture for this device device test case
sets the fixture for this certification test case
returns the fixture for this certification test case
sets the fixture for this line test case
returns the fixture for this line test case
sets the fixture for this point test case
returns the fixture for this point test case
sets the fixture for this bare test case
returns the fixture for this infrastructure test case
sets the fixture for this network test case
sets the fixture for this test case
returns the fixture for this network test case
returns the fixture for this test case
sets the fixture for this sub network test case
sets the fixture for this subject test case
returns the fixture for this sub network test case
returns the fixture for this subject test case
sets the fixture for this coordinate system test case
sets the fixture for this coordinate reference test case
sets the fixture for this datum test case
returns the fixture for this coordinate system test case
returns the fixture for this coordinate reference system system test case
returns the fixture for this datum test case
returns the fixture for this area test case
sets the fixture for this test case
returns the fixture for this result test case
sets the fixture for this note test case
returns the fixture for this note test case
sets the fixture for this source test case
returns the fixture for this source test case
sets the fixture for this service test case
returns the fixture for this service test case
sets the fixture for this job test case
sets the fixture for this model test case
sets the fixture for this address test case
returns the fixture for this job test case
returns the fixture for this model test case
returns the fixture for this address test case
sets the fixture for this life test case
returns the fixture for this life test case
this just records the information
this just records the information
create a new model
create a new model
returns the label for the specified type name
this just records the information
create a new model
handles activation of the editor or its associated views
handles activation of the editor or its associated views
handles activation of the editor or its associated views
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
this just records the information
create a new model
this accesses a cached version of the property sheet
handles activation of the editor or its associated views
this just records the information
create a new model
this just records the information
create a new model
this just records the information
create a new model
this just records the information
create a new model
handles activation of the editor or its associated views
handles activation of the editor or its associated views
handles activation of the editor or its associated views
handles activation of the editor or its associated views
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
this just records the information
create a new model
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
handles activation of the editor or its associated views
create a new model
this just records the information
create a new model
handles activation of the editor or its associated views
this just records the information
this accesses a cached version of the property sheet
handles activation of the editor or its associated views
this accesses a cached version of the property sheet
this accesses a cached version of the property sheet
returns the image icon
sets the upper left corner of the upper left corner of the
sets the origin of the origin left
returns the width of the image
returns the image associated with the specified index
sets the image at the specified index
saves the current file name
save the image to the file
at startup create and show the main frame of the application
adds a weight to the weight
compares this object with the specified object for order
compares the specified object with this math transform
this method is called after the is destroyed
compares this object with the specified object for order
returns the
returns the without the original
update the metadata for the given metadata
returns true if the is
returns true if the value is a original value
validate the properties
validate the properties
validate the properties
initializes the servlet
closes the session
close the session
helper method to create a log error
this method is called by the server to populate the list of
add a node to the
removes the node value from the
adds a connector node to the
sets the priority of the connector node
removes the connector node from the
sets the node inactive
sets the active node active
add transformation tag to the
remove all transformation from the
this method is used to handle the controls of the current user
ping the server
purge the history
the
returns the modified element
returns the imported manager
this method initializes persistent connections check box
this method initializes separator
this method initializes web navigator text field
this method initializes defaults button
this method initializes restore button
this method initializes web navigator text field
this method initializes apply button
this method initializes this
this method initializes browse button
this method initializes sep
this method initializes interceptors table
this method initializes server port text field
this method initializes interceptors inner table
this method initializes server host text field
this method initializes find free port button
this method initializes j check box
this method initializes this
this method initializes root document text field
returns the output stream that is used to write the response
flush the buffer
returns the writer
returns a short description of the servlet
insert the methods description here
sets the domain value for this
reads a line of bytes from the specified buffer
prints a boolean
prints a char to the output stream
prints a double precision floating point number
prints a float
prints the given integer
print a long
print a string
prints a string
print a boolean and terminate the line
print a character and then terminate the line
print a double and then terminate the line
print a float and then terminate the line
print a new line and terminate the line
print a long and terminate the line
print a string and then terminate the line
this method initializes defaults button
this method initializes restore button
this method initializes apply button
this method initializes interceptor description
this method initializes sep
this method initializes server port text field
this method initializes remove table
this method initializes interceptors inner table
this method initializes j tool bar
this method initializes view button
removes the specified element from this list
adds a new ingredient to the list
returns the number of rows in the model
returns the value at the specified row and column
returns the name of the column
sets the list of
returns the recipe with the given row number
invoked when an action occurs
initializes the panel
this method initializes my bar box
invoked when an action occurs
invoked when an action occurs
this method initializes rating slider
sets the id of the
this method initializes min
changes the content panel
gets the value of the advanced search panel property
invoked when an action occurs
invoked when an action occurs
invoked when an action occurs
this method initializes max
this method initializes limits
builds the panel with the
creates the list of the given ingredient
invoked when the mouse has been clicked on a component
displays the given action
invoked when an action occurs
this method initializes deselect button
this method initializes glass panel
invoked when the mouse has been clicked on a component
switches the panel to the panel
invoked when the mouse has been clicked on a component
sets the
updates the list of
prints the list of all the
returns true if the connection is connected
action listener for the button
sets the recipe object
this listener the method is called when the user selects the slider
invoked when an action occurs
sets the glass glass
getter for property glass name
returns true if the given value is missing
returns the value of the given numeric value as a double
sets the value of the specified attribute
evaluates the classifier and returns the result
sets the attribute name
adds the given instance to the set
replace missing values
returns the size of the matrix
returns the total number of
returns the number of missing values
returns the distance between two nodes
returns the dataset
gets the value of the property
sets the
checks if the given label is equal to the given
sets the weight type
returns the number of intervals in the list
sets the number of intervals
returns the label of the given label
returns the number of attribute values
returns the context directory
returns the name of the key
returns the full name of the user
returns the url to the url
returns the maximum size of the history
this method is called after the initialization is done
cleanup the
returns the maximum number of bytes that this can
returns the name of the storage factory
returns the last modified date of the file
sets the id of the next element
sets the time zone to the time zone
sets the history
sets the user base
returns the number of posts in the list
gets the email
returns the password
returns the roles of the role
check if the password is correct
sets the roles
adds a new role to the list of roles
returns the file name
clears the roles
returns the number of users in the list
adds a role to the role
returns the default roles for the default
checks if the user is already logged in
returns the user object associated with the given username
test bad post exception
test the history string
test password exception string
test that the user is successfully logged to the user
sets the capacity of the current
returns the discovery
the given object
executes a command
sleep for a given number of milliseconds
shuts down the server
reads a word from the current address
shuts down the server
this method is called by the
test the encoding of the
tests the sequence factory
test
tests the public method for creating a new certificate
test the certificate request
test the
test authentication request
sets the errors
verify that the key value pair works properly
tests that a new with a new date
tests the add method
hashes the password
test the encode authorization template
verify that the certificate is properly verified
test the distribution of the algorithm
test that encoding encodings are rewritten for the same length
tests the read length method
test that arrays are stored as a
test for authorization with a field
test
returns the position of the point in the current position
sets the animation to the specified animation
adds an animation to the animation
returns the current animation
returns the animation that is currently running
creates a new text fields
this method is called when the user selects a text
returns the family and
returns the family and
cleans up the soap message
this method will filter the search result
returns a string representation of the
returns the family of the given seed
this method is called when the xml response is received
load url document from url
gets the value of the abs property
sets the absolute
clean the page
adds extra extra bindings to the given binding
returns the age of the current year
returns the friends of the friend
returns the language of the document
returns a list of all the users that are not equal
this method is called when a friend is accepted
returns the level of user
add a friend to the friend list
adds a friend to the friend list
returns the number of access control
delete a friend from the friend
delete a friend from the database
returns the access control access control
sets the scene graph to be used for the
moves the current song to the next music
moves the current song to the previous audio
sets the progress bar value
returns the music with the specified name
sets the text
create a audio track
this method is called by the
sets the current state of the
returns true if the is
gets the value of the lid type property
resets the ball position
returns the static physics node

launches the

minimizes the ball
method for left
sets the contact to the current state
returns the points
method to add a new to the right score
resets the physics object to the default
resets the current physics object to the initial pose
sets the lower right lower right corner of the
gets the dynamic physics node
sets the lower left lower left x coordinate
launch the application
launches the left of the launch region designer
retract all the
launches the launch ai
returns the right
gets the left
updates the corrector
sets the
returns the chance for the chance
returns the position of the screen
returns the right chance of the chance
returns the type of the
this method is called when the ball is paused
sets the text of the node
returns the text of the node
updates the
sets the scale
returns the scale factor for the scale
adds a menu page to the page
activates a menu page
gets the value of the catcher property
move selection up to the selected tab
moves the selected tab down to the previous state
gets the left
resets the page
returns the right
returns the launcher
performs the action
moves the selected item up one
sets the position of the first text in the text area
display the text in the middle of the second text
moves the selected item down one
sets the text of the first text
sets the second text
resets the selected menu item
performs the action
sets the color of the node
sets the text
sets the position of the given item
sets the scale
returns the current position of the current frame
sets the position of the current position
returns the height of the image
returns the width of the image
sets the menu page node
updates the current position of the screen
draw the display
performs the action
returns the energy
resets the current state of the
returns the action callback
reads the file from the file
returns the score of the given string
returns the keyboard handler for this component
returns the mouse look handler
sets the mouse button
returns the up vector
sets the up vector
returns the camera handler
calculate the gravity of the gravity
returns the near clipping distance
sets the near distance
returns the far x coordinate
sets the far x coordinate
returns the near y coordinate
sets the value of the near y property
returns the far y coordinate of the y coordinate
sets the far y coordinate
returns the near clipping plane
sets the near clipping plane
returns the z coordinate of the far clipping plane
sets the far z coordinate
initializes the key bindings for the current state
adds a camera boundary to the camera
creates the transformation matrix
update the camera
returns the transformed location of the quad
returns the transformed direction of this object
returns the up up
returns the left coordinate of the left side of this node
sets the machine
returns true if the projection is parallel to the projection
sets camera to perspective
parallel parallel to update the camera
normalize the camera
returns the width of the image
sets the map of nodes to be used for this node
returns the height of the image
returns the x coordinate of the pixel at the given x coordinate
returns the y coordinate of the pixel at the specified coordinate
returns the node that is currently being used for this node
sets the position of the sprite
sets the maximum value for the slider
sets the scale
sets up the up axis
returns the speed of the move
sets the speed of the crane
this method is called when the camera perspective is activated
parallel parallel to draw the camera parallel
returns the physics space
returns the machine
unlocks the lock
returns the debugging flag
sets the fps
sets the
sets whether the glass pane should be shown
sets the textures to be used for rendering
sets the value of show room
toggles the state of the
toggles the physics engine
toggles the depth of the show depth
print the current camera
this method is called by the jvm to perform the
take the screen
toggle the mouse cursor
returns the energy energy for the menu bar
returns the input handler for this input handler
restarts the chance to restart the
initializes the texture map
populate the texture map with the given spatial
removes all the textures from the internal map
restores the textures to the initial state
removes the room from the model
restores the room
handles activation of the editor or its associated views
handles what to do with changed resources
handle the dirty action
make a sub group of groups
sets the context action context
fills the context menu with the specified context
this method is called when the menu bars state is added
updates the action bars
the default action default implementation of the action
handles a key pressed event
this method is called when the model is refreshed
initializes the context menu
fills the context menu with the specified context
initializes the content provider
initializes the label provider
initializes the listeners
this method is called by the framework to set the actions
handles the open event
handles double click on the given double
this method is called when finish button is pressed in
finish the
this method is called when the plug in is stopped
defines the actions for the given action
execute the command
creates the context menu for the given viewer
this method changes the value of the property change
this adds a property descriptor for the nom feature
this adds a property descriptor for the login feature
this adds a property descriptor for the password feature
this adds a property descriptor for the nom feature
creates a new adapter for an object of class
this adds a property descriptor for the feature
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the nom feature
this adds a property descriptor for the feature
this adds a property descriptor for the feature
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the feature
creates the meta model objects for the package
creates the meta model objects for the package
this adds a property descriptor for the feature
this adds a property descriptor for the not feature
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the nom feature
this adds a property descriptor for the feature
this adds a property descriptor for the feature
this adds a property descriptor for the date feature
this adds a property descriptor for the note feature
this adds a property descriptor for the feature
this adds a property descriptor for the feature
adds a listener to the listener list
called when the user enters the date
creates the popup menu
returns code true code if the receiver is visible
removes the listener from the collection of listeners who will
sets the text to display in the text area
sets the font
sets the footer visible
sets the visibility of the grid
sets the value of the decimal separator to be shown in the
sets the image that the receiver will be resized
sets the locale
sets the theme for the theme
disposes the toolkit
returns true if the button is on focus on focus
this method is called when the popup menu is shown
sets the editable state
this method is invoked when the user changes the text
disconnects from the inbox
returns the number of messages in the inbox
returns the number of messages in the inbox
returns the number of messages in the inbox
returns the message associated with the given message
this method is used to invoke the
initialize the configuration with the given properties
validates the server
starts the
stops the
sets the destination of the destination
setup the control adapter control adapter
returns true if the output is output
sets the output output
add a method to the list of exclude classes
returns the element name
add a method to the list of classes
returns true if the given method is a
checks if the method is included in the given method
adds a new tag to the mapping
unmarshal a given method name from the bos
adds a class to the
reads the xml from the given input stream
reads the xml document from the given xml input stream
reads an xml document from the xml document
reads the xml document from the given xml document
writes the xml object to the given object
get the friends of the user
this method is called by the server to start a new token
this method is called by the context manager to resume the
p this method is called when the end of the token is
saves the given preferences to the preferences
deletes the token secret
creates a user entity data object populated with the data
creates a task data object populated with the data
describes the instance and its content for debugging purpose
describes the instance and its content for debugging purpose
creates a test entity data object populated with the data
describes the instance and its content for debugging purpose
create an instance of
create an instance of
sets the action
updates the graphics context
show a message
gets the value of the property
this method paints the background
sets the
sets the name of the label
release any acquired resources
returns the current percentage of the total number of bytes
returns the task
sets the end date of the task
sets the percentage done for the progress bar
sets the start date of the task
sets the task
creates a user entity data object populated with the data
gets the value of the property
gets the value of the property
gets the value of the property
sets the
sets the
sets the
reset all properties to their default values
returns the default component for this component
returns the first component that is associated with the specified component
returns the last component of the component
sets the value at the specified position
adds a row to the table
returns the index of the element in the list
commit all changes to the given time
returns the table model for the given table
update the table model
returns a zip entry
reads the next entry in the file
closes the entry
hashes the canonical hash map
process a tree
this method is called to show the
validates the name of the given
build the
sets the config file name
open the quick eeprom
sets the parameters and update the
sets the start time
returns the time in seconds
returns the end time of the
returns the
returns the value of the plane property
returns the x coordinate of the x coordinate
returns the y coordinate of the y coordinate
invoked by the tree selection listener for the tree
sets the end time of the event
sets the end
returns the time in seconds
the
clears all the
returns the record
returns the root of the tree
returns the cells
gets the zip
make a string containing a
make a string with a given int
copy a file from the filesystem to a file
returns polygon polygon
returns image scaled to image
mouse moved event
sets the value
initialise the comment
sets the value
parse the xml element
checks if this number is a number
returns the integer value of the integer
checks the value of the number field
returns a string representation of the object
logs a message
returns the tag name
sets the attribute
returns the value of the specified attribute
deletes the attribute
returns true if the given attribute name is already present in the
returns the number of elements in this list
returns true if the element has elements
clears the elements of the list
adds a new element to the list
inserts the specified element at the specified position in this list
adds a new text to the end of the list
inserts the specified string at the specified index
returns the element at the specified index
replaces the element at the specified position in this list
removes the element at the specified position in this list
removes the specified element from this list
returns the element with the specified name
finds the index of the element with the specified name
sets the elements elements
sets the location of the line
adds a sprite to the sprite
finds the sprite at the given coordinates
invoked when a mouse button is pressed on a component and then
adds a sprite sprite listener to this sprite
removes a sprite action listener
invoked when a mouse button has been released on a component
handles mouse pressed events
notify all registered listeners about the event
paints the elements of the graphic element
invoked when a mouse button is pressed on a component and then
invoked when a mouse button has been pressed on a component
called when a mouse button has been released
sets the drop drag drop for the sprite
returns the time in milliseconds
sets the sprites of the sprites map
resets the coordinates of the current coordinate system
invoked when the mouse exits a component
invoked when the mouse has moved moved a component
invoked when the mouse enters a component
adds a new graphic element to the sprite
invoked when the mouse has been clicked on a component
checks the area of the screen
creates a sprite with the given name and the sprite
creates a sprite with the specified location and the
returns a buffered image that contains the image of the given image
returns a buffered image that can be used to display images
sets the snap to destination
this method is called when the phase is changed
print the contents of the graphic
resolves the package name
registers the event to be used for the
registers the board event listener
registers the controller on the current scene
registers the move on board
sets the sprite manager
registers a collision event with the specified sprite
adds a new graphic filter to this filter
returns the url of the
returns a object from the given url
sets the spring context object name
reads the next token from the input stream
starts the game
update the coordinates of the given coordinates
returns the distance between two points
counts the number of characters in the database
validates the password
returns true if the master is a master master
returns true if the item is
sends a round request to the server
jumps to the given rank
send a message to all the
wait for next round till the next round
returns a random location from the given location and returns it
returns a random location from the given coordinates
spawns a task spawn task
returns the current health
returns the current mp
returns the id of the map
returns the x coordinate of the location
returns the y coordinate of the y coordinate
invoked when an action occurs
sets the
broadcasts a packet to all connected clients
this method is called by the
checks if the location is in the given location
returns the
sets the effect
notify the player that the player has began
broadcasts a packet to all connected clients
send a message to the server
returns the attack speed of the
returns the maximum number of
returns the end x value for the specified id
returns true if the map contains the given id
checks if the given job is enabled
returns true if the map producers id is
returns true if the given is
returns true if the given id is in the map
returns the type1 of the
deletes the house info
sets the house information
deletes a note from the database
returns the distance between the point and the given point
tests if the point contains the point
returns the distance of the specified point in the current point
returns the distance of the given point in the current tile
returns true if the point is inside the same point
returns the type of this object
get a connection from the database
saves the current state of the database
returns the last primary key
this method is called to notify the user that a item has
returns true if the is
sets the
returns true if the current is disabled
stops all
applies the given function to the map
returns true if the given values are deeply
returns true if the is
returns true if the time is ready to wait until the time
copy the files to the directory
deletes the track
deletes all tracks from the database
closes the current playback
returns the
sets the tempo factor
sets the tempo of the
returns the tempo of the
sets the programs array of the
sets the program to be used for the program
initializes the sequence
adds a new morphism to the end of the graph
adds a new morphism to the table
resets the selected coordinates to the current one
processes the sequence of tracks
creates a new sequence with the current value
plays the sound
process a midi event
pause the playback
resume the current thread
gets the
returns the number of elements in the model
sets the of the current music
returns the of the given row
returns the range of the given
returns the tick position
processes the given channel
returns the range of the given
sets the tick position
processes the event in the current continuous stream
returns the position of the tick
processes the control change
sets the position of the tick
sets the x coordinate of the x coordinate
sets the y coordinate of the y axis
initializes the given midi channel
returns the value of the code cell editor code
returns true if the sequencer is open
invoked when an action occurs
returns true if the sequencer is running
initialize the
invoked when the mouse has been clicked on a component
run the
returns the value of the cell editor
make a
sets the morphism of the morphism
make a pitch by key
sets the list of elements to display
creates a program change event
creates a new instance of
make a
creates a tempo event
handles the action event
makes a duration
returns the group name
returns the name of the
make a voice to a channel
returns true if the properties has been set
apply the properties to the current settings
reverts the current settings to the current settings
returns the table
sets the expression
sets the expression
returns the vm that is currently running in the
parses the current token
executes the given element
parse the given number of arguments
executes the given and returns the resulting
returns true if the token is a legal type
remove note from the list of
returns the smallest active layer index
returns the for the given note
converts the given to a specific type
sets the model property
compares this object with the specified object for order
creates a melody
start the
sets the parent form
returns the parent form of this form
adds a pitch to the
clears the model
removes selected rows
creates a score with a
move selected rows up down
move selected rows down
resets the column
creates a new note note with the same value
creates a new note note that is shifted by the
returns the nearest key in the bloom filter
sets the parent form
sets the degree of the
removes the global degree of the
reverts properties to their default values
returns the number of selected objects
returns the form object at the specified index
returns the start percentage of the given index
invoked when a component loses the keyboard focus
returns the percentage of the specified index
returns the scale map
returns the text of the text
invoked when the user has changed its state
listens for action events
returns the group name
shows the splash screen
hides the splash screen
sets the message to be displayed in the text area
add a link to the end of the link
sets the manager manager
gets the value of the property
gets the value of the property
returns true if the given item is selected
returns the manager
returns the x coordinate of the pointer
returns the y pointer
adds all to the given
sets the window to the given value
zooms the image
adds a prototype to the
sets the current action
adds a point to the list of points
removes a prototype from the
adds a new points to the list of points
removes all points from the list
load the plugins
sets the network model
sets the list of network objects
adds a problem to the model
adds a list of problems to the model
draw the axes
starts the thread
returns the value of the integer value
draws the points in the given graphics context
returns the value of the current value as a long
returns the value of the float precision
draw the selection background
returns the real value of the receiver
returns the complex number
draws the selection points
returns the complex number of the complex number
returns the string representation of the key
returns the factor for a word
imaginary complex number
recalculates the current selection
returns the sum of the ring at the specified x
computes the sum of this complex number and returns the result
adds a ring to the map
adds a complex number to this complex number
returns the difference between two ring
subtract a string from the vector
returns the difference between this complex number and the specified complex number
this method is called when the selection is selected
returns the ring ring of this ring
subtracts the given complex number from this complex number
shuffles the elements in the map
subtracts the specified complex number from this
returns a new instance of the ring string negated
complex number of complex imaginary complex number
sets the value to the value
returns the product of this complex number and returns the result
returns a new code code object that is the same
multiply this complex number by a complex number
translate the key value pairs in the hashtable
imaginary complex imaginary complex number
adds a point to the current selection
compares two ring ring objects
returns the hyperbolic sine of the integral x
adds a point to the selection
divides this complex number by the specified complex number
add a word to the dictionary
sets the value of the x
removes a point from the current selection
returns the inverse of this complex number
subtract a value from the given word
inverts the imaginary part of the complex number
draw the zoom rectangle
returns a complex number of this complex number
negate the real number
returns the complex number of this complex number
returns true if this matrix is empty
returns the zero value of the rational
returns true if the imaginary part is one of the imaginary part
returns the code code of the rational number
returns true if this is empty
returns true if this complex number is real
invoked when the mouse has been clicked on a component
returns the absolute value of the complex number
returns the sum of the rational number divided by the specified rational
returns the imaginary argument
returns the n divided by n n
returns the square of this complex number
adds a rational to this rational
returns the complex number of this code complex code
adds a number of number of number of number of
returns the complex number of this complex number
returns the difference between this rational and the specified
invoked when the mouse enters a component
returns the complex number of this complex number
returns the difference between this rational and the specified
subtracts the given rational from this rational
returns the list
subtracts the given number of num elements from this
returns the product of this rational number
returns the of this complex number
returns the product of this rational number
returns the of this complex number
shows an error dialog with the given message and the error message
multiplies the number of charges and denominator
returns the of this complex number
multiply the given value by the specified number of elements
invoked when the mouse button has been moved on a component
returns the hash code for this code long code
returns the rational number of the rational number
returns the nth rational number of the rational
this method is called when the user selects a new one
sets the status of the given error
divides this rational with the specified denominator
compares this complex number with the specified complex number
divides this number by the specified number of
returns the inverse of this rational
invert the number of elements in this matrix
sets the status of the message
returns a negated or negated
negate the number of the current state
returns the numerator of this rational number
returns the denominator of this rational number
sets the status of the given object
returns the absolute value of this rational number
returns the value of the current double as a code double code
sets the status of the message
returns a string representation of this rational number
clears the status bar
returns the hash code of this object
reduce the number of iterations
updates the title of the file
creates a new project
discard all the
method that checks for the
returns the expected domain
returns the domain
opens the file chooser dialog
revert the current file to the current file
sets the matrix of the matrix
sets the ith vector
returns the matrix of the
returns the first morphism of the morphism
returns the second morphism of the second morphism
quits the application
returns the complex number
returns the complex number
returns the matrix of the
returns true if the module is
returns the current directory
returns the polynomial
sets the current directory
returns the matrix of the
sets the status of the
returns the matrix of the matrix
returns the value of the element
a
returns the matrix of the
creates a morphism on the given module
returns the translate
returns the domain element at the beginning of the list
returns the constant that is associated with the given element
returns true if this module is
sets the status of the
returns true if this ring is
returns true if the morphism is contained in the theory
returns true if the morphism is
compares this object with the specified grammar for the same
sets the
returns the
returns the morphism of the current object
returns the code rational code
the neural network
returns the ring
the
returns the element
returns the morphism that is associated with this automaton
sets the
sets the network model
sets the
sets the
refresh the networks list
returns the
enables disables all actions
this method is called when the run is finished
start the run process
start the partial run
returns the element at the specified index
returns true if the ring is a ring
returns the module module for the given index
returns true if the module is a null module
returns the ring
returns the current
removes a for the given
returns the value of this complex number
returns the element that is the sum of the ring
returns the ring
compares this ring to another
returns the module module
returns the morphism that is associated with this morphism
returns the number of
returns the value of the ith element
returns the value at the specified index
returns the number of
returns the string representation of the ring
returns the value of the element at the specified index
returns the value of the ith value
returns the value of the specified cell
returns the nth value of the specified cell
returns the value of the specified cell
returns the value of the specified column
sets the value of the matrix
returns the of the given row
sets the value of the matrix to matrix
returns the for the given row and column
returns the coefficients
returns the of the given row
returns the of this polynomial
returns the for the given row and column
returns the coefficients
sets the value of the coefficients
returns the form of this
returns the of the given row
returns a scaled version of this matrix
returns true if the given row is zero
returns the of the polynomial
compares this object with the specified object for order
returns the for the given row and column
returns the power of the given power
returns the coefficients
returns the number of in the form
returns the form for the specified index
returns the form of this
sets the labels
returns a new instance of the multiplication of this matrix
returns the of this polynomial
returns the index of the specified label
returns the index of the given label
returns the power of the given power
returns true if the label has labels
returns the number of minor row in the specified cell
creates the default
creates a default
returns the number of in the matrix
returns the form of this
sum of the sum of the
returns a new instance of this matrix
returns the power of the given power
returns the normalized version of this matrix
returns the current list of the form
returns the dot product of this vector and the given vector
returns the number of elements in the list
sets the of a given matrix
returns the of the given
returns the sum of the sum of the
returns the product of two vectors
sets the of a given matrix
returns the difference between the two points
returns the number of minor row in the specified cell
returns the product of this matrix
returns the sum of the sum of the
returns the number of in the matrix
sets the of a given matrix
returns the power form
returns the difference between the two
sum all the elements in the table
returns the number of minor elements in the specified cell
returns the sum of the sum of the
returns the product of this tensor and the given product
returns the name of the
returns the difference between the two points
returns the of the polynomial
returns the name of the
returns the product of this matrix
returns the current frame coordinate
returns the sum of all the elements of the polynomial
returns the minor value at the specified row and column
compares the name of the given object name
returns true if the name of the given other
returns true if the given other is equal to this one
returns the sum of all the values in the matrix
returns the number of rows in the specified row and column
returns the conjugate of this polynomial
returns the sum of all of the values in the matrix
resolve the dictionary
returns the sum of the sum of this matrix
compare this object with another map
returns the type of the constant pool
returns the type of this code code
returns the number of form forms
returns the specified code form code
returns the number of form forms
creates a new instance
returns the form for the specified index
creates a new
returns the form
returns the module
creates a new
creates a new
compare against the current map
returns true if the given
returns the simple form of the form
tests if the given code d code is contained in this
returns the index of the first occurrence of the specified
returns the address of the player that is received
returns the expected address of the module
returns the vertex at the specified index
sets the given code
inserts a new vertex at the specified coordinates
returns the limit for the current form
returns a new instance of the map
returns true if the domain is identity
returns true if this is a type
returns the form of this form
returns the current domain
deletes the
returns the current morphism
appends the given arrow to the current list of ground
compares this object against the specified object
returns the number of factor
returns the domain of the domain
returns the
returns the at the specified index
compare this object to another
sets the factor
returns the factor for the label
insert a new factor at the specified index
returns the factor for the given factor
appends a new to the list of
returns the name of the
prepend a new to the current one
returns the at the specified index
returns the number of in the list
returns the current
returns the index of the specified element
append a new to the current list
returns the
sets the name of the object
returns true if the list is set
sets the name of the
returns the domain of the domain
removes the duplicates
compares this map with another map for equality of their
sets the current
returns a new domain
removes the factor at the specified index
returns the dimension of the
returns the element that is currently being used by this factory
returns the number of times the has been made
returns the dimension of the specified
returns the index of the given
compares this object with another one
returns a clone of this object
returns the weighted ground value
returns true if this form is equal to the same name
returns the difference between the morphism and the given map
returns the integer value of the element
display the current display
returns a copy of the list of all the elements
returns the mod integer value
the dictionary
displays the given code code
returns the hash code for this object
returns a new instance of the mapping theory
returns the real real part of the element
registers a new repository
returns the hash code of this object
returns the type of the power
compares this instance to the given one
resolves the given dictionary
compare this map to another map
returns the rational number of the element
returns the hash code of this object
creates a new
creates a new
tests this object for equality with an arbitrary object
returns a copy of this map
returns the complex number
compare this object to another
returns the type of this
compares two map for equality
resolves the given dictionary
returns the element that was selected
returns the name of the
returns the name of the
returns the current
sets the name of the
sets the current
returns true if the given code code is equal to the
returns the dimension of the image
returns the dimension of the specified
returns the received form
returns the expected form
returns the hash code of this object
returns the form for the specified index
returns the string representation of the current value
returns the number of the
returns true if the given map is equal to this map
returns the factor
sets the factor
returns the form for the specified index
returns the name of the entry
checks if the given form is a builtin
checks whether the given builtin is a builtin
clones the diagram
register a new
returns the map of theory definitions
compares this name with the specified object for order
creates a new
creates a new
returns the map of the map theory morphism map
returns the morphism that is associated with this morphism
returns the power form of the given
returns the group name
puts a property into the properties
returns a property with the given key
returns the morphism that is associated with the morphism
returns the properties of the component
applies the properties to the properties
returns the form list form for the given
returns the number of
returns the form input form the given input
returns the output form of the output
returns the name of the
check if the given form has a sig sig
returns the view
returns a limit of the for the given
compare this object with another one
returns true if the info has a info
returns a form of the given
compares two objects
returns a short description of this action
returns a negated predicate
returns the tip for the specified index
checks if the specified specification is compatible with this
returns the tip text for the given index
adds all the pairs of the given to this matrix
returns a simple form of a simple form
adds all the pairs of the given to this list
add a predicate to this predicate
creates a new instance of the class
returns the primitive value
returns true if the given map equals another one
removes the specified form form the form
removes the given set of forms
removes a from the
sets the car to the specified car
sets the cdr
removes the from the list of
this method is used to pass the environment to the environment
returns the top level stack
puts a symbol in the symbol table
removes all forms from the database
puts a symbol into the statement
returns the symbol for this symbol
sets the symbol to the symbol
adds a primitive to the list of
the value of the variable
returns the environment environment
resets the global context
resets the context and the current context
returns the code of the code code
sets the scheme code
returns the
closes the connection
returns the port of the socket
resets the hashtable to the initial state
returns the port of the server
returns the rational number of the rational
returns the environment that is currently being used by this
returns the form
gets the value of the args property
returns the body of this code soapmessage code
compares two objects for equality
compares two triple objects
resets the global global variables
returns the double value of the thermometer
compares this pair with another one
compares two pair pairs
sets the environment
open the file
sets the run info
close the current connection
parse the given reader
evaluates the given string
sets the number of spaces to be used for the size of
evaluates the given list of
open a block of the block
evaluates the given
opens a block of text
open a block with a given type
open inline element
returns the output port
parse the string
returns the complex number
returns the input port
close the block
close the inline element
empty the element
sets the error
empty the string
sets the error
writes the text in the text
sets the error
returns a string of the given text
print out the text in the text
resets the hashtable to its initial state
writes a module to the module
writes the element to the module element
parses the start of an element
writes a single module to the given one
writes the form to the form
writes the form reference
parses the module definition
writes the forms
writes the to the
writes the to the
repeat the specified print writer
parse the xml element definition element
writes the reference to the given
returns the relative path to the file path
parse the given code definition code
parse the definition
parses the form definition
parses the given form and returns the resulting
parse the network definition
parse the definition
parses the scheme code scheme code
prints out the modules in the modules
prints the elements of the current element
print the forms contents
prints the
returns the element associated with the given name
returns the module with the specified name
returns the named morphism that is associated with the given name
returns the with the given name
returns the form for the specified name
returns the scheme code
adds a resolved form to the resolved form
adds a resolved to the resolved
returns the absolute path of the path
reads the memory from the bus
writes the memory of the given memory address
adds a memory to the memory
adds the given offset to the end of the list
adds a cycle to the end of the sequence
adds additional cycles
returns the number of cycles
sets the number of cycles for the current simulation
returns the constructor
creates a new operand operand
returns the operand of this operand
returns the processor
returns the opcode of this instruction
run the program
returns the pc of the
sets the pc
returns the
sets the byte
returns the x coordinate of the x coordinate
sets the x coordinate
returns the y coordinate of the y coordinate
sets the y coordinate
returns the
sets the
returns true if the is
sets the c
returns true if this is a
sets the d
returns true if the field is a
sets the value of the attribute
returns true if the is a
sets the
returns the value of v v v v
sets the v
returns true if the is a z
sets the z attribute of the object
returns the value
set the value of the third field
verifies the given length
puts a new byte into the buffer
puts a new byte array into a byte array
returns the number of remaining bytes in the buffer
aligns the given position to the next position in the list
returns a string representation of the object
returns the length of the encoded encoded string
returns the
returns null if not found
returns the
returns null if not found
returns the
returns the at the specified index
returns the
returns the at the specified index
returns the
returns the object of the specified
returns the
returns the object of the specified
returns the
returns the for the specified
returns the
returns null if not found
returns the
returns null if not found
returns the
returns the for the specified data
returns the
returns the for the given
returns the
returns null if no is found
returns the unmarshall data for this object
returns the raw length of the given object
marshalls the object into the data object
returns the raw length of the given object
description of the method
marshalls the object into the data object
this method is called when the is pressed
returns the raw length of the raw data
sets the parent composite of this component
deletes the tag from the parent
this method is called by the
copy the fields of the current class to the som
this method is called when the component is removed from the container
called when an object is removed from the object
called when an object is removed from the object
called when a new object is discovered
gets the value of the increment in secs property
returns the time in seconds
wait for the state to be stopped
wait for federation to arrive
makes the request request request request
processes the event
called when a new is received
enables disables the management
registers interests to the user
run the task
shut down the
simulate a simulated simulated simulated simulated simulated simulated simulated alg
simulate a
runs the simulation
returns the value of the time
this method is called by the model to indicate that the model
called when the user selects a new
update the data in the som
update the data in the som
sets the simulation time
adds a component to the component
removes a component from the container
returns a list of components
returns the delegate
sets the delegate
waits until the animation is paused
adds a new listener to the list
reads the row number from the given row
writes the row at the given row
this method initializes this
this method initializes j content pane
this method initializes j tabbed pane
this method initializes j federation name field
this method initializes j filename field
this method initializes j filename
this method initializes j name field
this method initializes j som filename
this method initializes j som field
this method initializes j time management
this method initializes j process panel
this method initializes j log panel
this method initializes j debug panel
read the row number from the given row
writes the row at the given row
this method is called when the user selects the menu item
adds a new object to the table
removes a object from the table
this method is called when the row is read
write a row
returns the number of children of parent
sets the finished finished
returns the is joined
shows a property
this method will be called by the server to initialize the thread
connect to the database
start the tick timer
start the tick timer
sets the file
creates the federation
the federation
this method is called when the user selects the
publish the subscription
initializes the time interval
initializes the time
initializes the tick
called when the user selects a new one
simulates a step to the simulated step
this method is called when the game is paused
causes the current tick to be used
shuts down the
p the federation
disconnect from the server
exit the application
sets the simulation time
this method is called when the federation is not allowed
this method is called when the federation is not null
the federation
this method is called when the is restored to the federation
this method is called when the federation is done
this method is used to encode the given code code
this method is called when the user selects the
the future to be
parse the file
returns the current indent
sets the indent
clears the indent
returns the tab
sets the tab
adds the tab to the current tab
removes the current indent and returns the result
this method is called by the code code method
sets the line
this method is called when the federation is not allowed
this method is called when the federation is not null
the federation
waits until the current thread is stopped
registers a listener for simulation time events
removes a listener from the simulation listeners
returns the object that is managed by this class
this method is called when the is restored to the federation
returns the
request attributes for all attributes
this method is called when the is done
request a set of
returns the time manager
sets the time manager to use
gets the value of the property
gets the value of the property
sets the value of the given attribute
sets the value of the given attribute
returns the attributes of the attribute
updates the object
update the model
deletes the object from the given object
removes the given object from the list of listeners
removes a object from the given object
returns the class of the given object
returns a string representation of this object
returns the class for a given handle
registers a new listener
returns the class that is used to resolve the given class name
returns the class that implements the interface class
turns on off the of the turn
returns the object that is associated with an object
turns off the turn on off
returns the codec factory used to instantiate the factory
returns the adapter
publish all the
creates a new
creates a new
this method is called when a set of has been received
publishes the model to the current publish
subscribe to the
the model to the
unsubscribes from the current channel
registers a new listener
unsubscribe all the from the
returns the attribute at the given offset
returns the number of attributes in the attribute
add an attribute to the
returns the set of managed objects
notify all listeners that the object has changed
returns the attribute value for the given attribute
notify the listener that the object has been created
returns the attribute value of the attribute name
returns the value of the named attribute
creates a new object class
get the attribute value
returns the value of the named attribute or code null code
sets a new value
returns the model
registers the given object
returns the local name for this node
sets the value of a property
returns the value of the named attribute
deregisters an object from the list of objects
sets the value of a float valued property with the given name
returns the value of the named attribute
sets the value of the parameter with the given name
this method is used to handle the object
returns true if this is a ancestor of this code ancestor
returns the object that is associated with the given name
returns the map of the current map
returns true if the key is contained in the list
checks if the given object is a valid object
returns the number of objects in the list
returns true if the specified value is contained in the list
registers a new listener
returns a set view of the mappings contained in this map
returns the value associated with the specified key
returns the set of keys contained in this set
puts the specified value in the hashtable
puts all of the mappings from the specified map into this map
removes the mapping for this key from this map if it is
publish the current state of the
the model to the
returns a collection view of the values contained in this
subscribes to the
unsubscribes from the active channel
returns the value of the named attribute
resolves the
sets the name of the object
returns the value of the specified property
returns the raw length of the given object
returns the leaf of the codecs
get a value from the short name
returns a new instance of the given element
set the value of the short name
sets the fields
returns the value of the specified property with the specified name
set the value of a long
adds a new alternative to the list
returns the value of the specified valued property with the specified name
returns the alternative
returns the alternative name for the given alternative name
returns the value of the named property
returns the value of the named property
add a value to the aggregator
returns the value of the enum value
returns the for the given enum value
sets the name of the
returns the implementation of the
returns the leaf of the codecs
returns a new instance of the given element
this method is called when the user selects the
returns the
set the value of an attribute
returns a string representation of this object
returns the equivalent of the given element
called when an object is removed from the list
send a tag to the
send a packet to the server
receive a new element from the current state
called when a new object is removed from the
receive a new
called when the object is deleted
sets the
called when a tag is deleted
this method is used to translate the map
the given value to a new value
update the object
update the object
deletes the object and deletes the object
deletes the object from the database
tests parsing of file
report the end of a dtd file
report the end of a dtd file
sets up the fixture for example open a network connection
returns the model
tests the creation of an interaction
test the send method
called when a new packet is received
tests the receive frontend
test of lookup object method of class
tests the lookup of the lookup type
test of lookup object class method of class
tests the lookup of the lookup type class
test of lookup object method of class
tests the creation of a attribute
test remove object
test that the object is being tested
test that the object is deleted
tests the register codec method
test the resolve codec method
test
test
returns the data types
marshalls the object into the specified buffer
returns the raw length of the raw data
returns the data of the specified data object
marshalls the object into the specified buffer
returns the raw length of the given object
returns the enumeration value for the given enum name
returns the for the given type name
returns the encoding for the specified encoding name
resolve the
registers a codec for the codec
registers a new encoding to the given encoding
registers a codec record with the given name
registers a codec record with the given codec and codec
get the octet boundary for the reading
encodes the
returns the length of the encoded encoding
decode the wrapper
sets the value of the new
returns the handle of the handle
adds a parameter to the list of parameters
returns the parameter handle for the specified parameter
returns the handle of the event
adds a new attribute
returns the handle for the attribute specified by the attribute name
sets the attribute handle set
returns the handle for the attribute handle
sets the behaviour
returns the name of the class that this belongs to
returns true if this class is relevant
sets the value of the relevance flag
sets the value of the new value
invoked when a component gains the keyboard focus
returns the value of the field with the specified name
shuts down the application
this method is called to go to the current user
returns the localized string for the specified key
test
writes the given writer as a writer
sets the background color of the background
returns the details of the item
sets the status of the transaction
returns the code code at the specified
shows the dialog
adds a listener to the page
removes a listener from the list of listeners
sets the byte map
the object
sets the data of this packet
compares the specified object with this instance
reads a array of objects from the stream
reads the name of the file
returns a list of all glyphs in the list
returns a string representation of this object
returns the bounding box of the bounding box
returns the width of the image
returns the height of the bounding box
this method is used to set the state of the
adds a new code commands code to the given code code
cleanup the output
closes the view
returns a new instance of the object
called when the tree changes
start the application
start the application
returns the model for the given code admin code
start the application
removes all selected from the model
returns the item form
saves the current page
clears the item form
starts the
adds a new admin gateway to the model
saves the current state of the model
removes the selected route from the route
adds a new item to the form
removes the form item form the form
starts the application
saves the model
returns the weight
this method is called when the processor encounters a select
searches for the given string in the database
searches for a search result
clears the processor
returns the processor processor
update the status of the current thread
this method is called when the is selected
saves the model
removes all the selected from the table
start the application
start the application
start the application
start the application
returns the schedule schedule
returns the model format
returns the invoice charge
clears the given model
removes the specified schedule schedule object from the schedule
clears the invoice charge
this method saves the to the database
this method is called by the framework to save the page
this method is called when the user selects the
adds a invoice to the investigation
adds the invoice ion
adds a new schedule schedule
returns the facility agreement
remove the invoice format from the billing
removes the invoice charge
clears the facility account
removes the schedule object from the database
start the application
start the patient
saves the accounts in the database
this method is called by the framework to initialize the
adds a facility to the
start the
removes the facility account
returns the charge model
saves the current state of the model
returns the invoice type
returns the invoice
start the application
clears the invoice
clears the invoice type
start the application
saves the current page
this method saves the current page
returns the patient model
adds the invoice type
remove the invoice type
gets the value of algorithm
clears the charge algorithm
saves the current state of the
adds a charge to the
removes the charges of the charges
returns the charge item
removes all charge item from the charges list
saves the current state of the model
adds a to the list
removes the charges item from the charges list
copy the server dir to the directory
change label status change
start the application
start the application
returns the panel that is used to display the given view
start the application
start the processing of a new model
start the tree
this method is invoked by the editor panel to start editing
returns the form definition model
refreshes the template list
clears the transition form model
saves the current page
start the application
start the tree
start the application
start the
returns the term type
clears the type of term
returns the record type type
saves the current page
clears the record type
adds a term type
remove the term type
saves the current record
start the application
removes the selected record type from the record store
returns true if the action is triggered
start the application
this method is called when the user selects the action
returns the form definition
start the form
clears the form definition
returns the form state
clear the form
saves the current state of the datastore
saves the current state of the model
returns the form
clears the form
adds a form state to the current state
save the
this method is called when the form is being
adds a form to the current form
this method is called by the framework to initialize the
save changes to the model
returns the record model
starts the action
returns the term
start the application
removes the form definition
this method is called by the editor panel to start editing
checks if the action is currently selected
clears the record
creates a new panel with the given width and height
saves the current page
returns the view model
returns the right view of the model
split the panel and returns the
adds a new test item to the current group
gets the pref information
returns true if the size of the given size changes
add the left side of the list to the current selection
adds the right to left side
adds the left side of the selected control
move the selected object up
adds the right to the table
moves down the current model
removes the term
prints the hierarchy of the hierarchy
move the selected up
move the selected item in the list
sets the default
returns the default save number
updates the state of the button
start the application
returns the term model
returns the controller that is currently managing
clears the custom controller
saves the current page
adds a custom controller to the controller
removes the controller from the controller
saves the current page
returns the value of the given model
sets the value attribute of the object
returns the listener for the window listener
change the category label
gets the control panel for the given view
returns true if the user is a menu view
refresh the panels
returns the panel that contains the panel
get the first panel
change the item label
returns the second panel for the given view
starts the task
start the application
refreshes the list of the
this method is called by the editor panel to update the editor
start the application
start the application
returns the form type
start the application
clears the form type
saves the current form
removes the form type
registers the action to the current page
start the application
returns the model of the default model
saves the application settings
returns the list of in the database
start the application
returns the rule map
clears the rule map
saves the current security manager
adds a rule map to the map
removes the rule map from the map
start the application
executes the action
start the user
returns the current login
displays the given panel
this method is called to start the application
this method is called when the user selects the selected control
displays the view
adds a custom view to the model
returns the default setting for the model
returns the application view
adds the view
start the user
removes the given view from the application
start the model
returns the model for the model
sets the properties of the panel
import the selected model
import the objects in the database
import the model
copies the selected items to the current page
start the dialog
paste items in clipboard
start the dialog
p called when the base is selected
start base panel
start base panel for a
sets the properties of the given reference
highlight the control
sets whether the file should be skipped
export the selected model
this method exports the model to the model
export the model to the model
this method is called to start the
start the application
this method is called when the user selects a new access list
start the application
saves the current access list to the database
creates a new access list
returns the role
clears the selected role
clears the settings from the given settings
start the application
saves the current role to the security manager
saves the current settings to the database
adds a role to the role
adds a setting to the settings
remove a role from the role
removes the setting from the settings
start the application
returns the role group
clears the selected role
saves the role to the security manager
change the password of the user
add a role group to the group
remove the role group
import the users
removes a specific model from the list of items
change label status label
returns the number of columns in the view
get the properties for the selected control
returns the schedule value for the specified cell
start the application
start the application
returns the translation model
clears the current translation
saves the current page
adds a translation to the model
returns the unit conversion unit type
removes the translation from the current page
clears the unit conversion unit
start the application
saves the current state of the model
adds a unit to the model
start the application
removes the unit conversion from the selected unit
start the application
returns the type of the base model
returns the identifier source
clears the location type
clears the source of the source model
saves the current state of the model
executes the action
adds a location type
this method saves the to the database
remove the location type
adds a source model to the model
start the server
removes the source code from the source
start the application
returns the default model
clears the address list
saves the current state of the
adds a new address to the list
returns the audit model
clears the audit
removes the address from the
adds a new audit to the list
start the application
start the application
returns the model
clears the location of the given location
saves the current page
copy the current view
adds a location to the model
removes the location from the current location
remove the reference to the
returns the reference to the model
show the properties
removes the selected reference
checks if the drag drop is supported
save the reference to the database
this method is called by the framework to start the item
start the application
adds a reference to the model
start the application
removes the selected ref from the
returns the order state
clears the order of the order
saves the current state of the database
adds the order state to the order
removes the order state from the list
returns the order instance state
this method is called by the framework method to start the
clears the order of the order
saves the current state of the database
start the workflow
adds the order to the order
removes the selected order instance
returns the order model
saves the current controller
returns the order of the base model
this method is called when the user selects the start activity
clears the order of the model
start the application
saves the current model to the database
clears the order of the given order
returns the order type of the transition
clears the order type of the model
edit the view
clears the location of the given location
saves the current page
start the patient
add a order to the list
saves the current state of the model
returns the order type
starts the user
clears the order type
returns the portal model
saves the current state of the database
removes the portal user from the portal
adds a transition to the current state
adds a new user to the portal
adds a transition to the current state
removes portal portal portal
remove the order type
refresh the list of the
action to perform when the action is fired
change the password
this method is called by the action to transition
start the application
removes the location from the current location
returns the visit type
removes the given type from the list of changes to the current
start the application
the patient selected
saves the current state of the
adds a new visit type
removes the selected type from the list
visits the rows selected
returns the content type
clears the content type
saves the current page
search for the selected patient
adds the content type to the content type
removes the content type from the content type
start the application
start the application
visits the visits visits
start the application
returns the job model
returns true if the selected patient is selected
clears the job
returns the icon for the model
saves the model
clears the icon
add a job to the current job
saves the current page
returns true if the selected number of visited elements are visible
removes the job from the job
adds a icon to the model
removes the icon from the toolbar
start the application
returns the first selected patient
returns the scheduler model
visits the first selected model
removes the selected reference from the model
clear the job
this method is called when the user selects the selected
start the application
start the application
import patients from patient
returns the number of columns in the table
export the patient
returns the model element
returns the type of the model
removes all items from the selected item
clears the selected item
saves the model
saves the model
returns the value for the cell at code column index code and
adds a new item type to the list
adds a new item to the list
remove the item type from the list
removes the selected item from the list
returns the panel that is used to display the
returns true if the entity is not empty
start the
opens the patient chart
saves the
start the form
this method is called by the framework to set the state of
saves the current state of the
start the application
checks if the entity is
starts the
checks if the entity is
returns the current screen coordinate image
saves the current state of the application
start the application
returns the form screen image
clears the screen image
saves the current state of the application
remove the form screen
clears the form type
saves the current page
adds a form type to the form
select the
returns the form model
returns the form record
save the record
removes the records from the record list
remove the selected records from the list
creates a new item
start the application
submits the task
returns the schedule template
removes the template from the schedule
saves the current page
adds a template to the schedule
start the application
returns the currently selected
removes the template from the schedule
start the application
returns the frequency model
clears the frequency of the frequency
saves the model to the database
removes the frequency
start the application
adds a slot to the table
returns the appointment type
returns the resource
clears the selected resource
removes the appointments from the given appointment
saves the model
adds a user to the group
adds a location to the resource group
saves the appointments to the database
adds a resource to the list of resources
remove the appointment type from the group
this method is called when the model is started
saves the current page
start the application
schedule a task with the schedule
returns the current workplace model
clears the status of the appointment
saves the current state of the project
adds the appointment status to the status panel
removes the currently selected appointment from the list
updates the status of the appointment
extract the order from the template
returns the service call
returns true if the control is
sets the control
sets the new table columns and contents
returns true if the content column is replace
returns true if the reference group has reference group reference
sets the content of the content column
sets the selected nodes
sets the selected objects
returns the tree selection event
sets the tree selection event
returns the first selected action
returns the first selected control
sets the new action
returns true if the first action has been selected
returns the first parent control of the parent node selected in the
returns the first selected tree node
sets the default action
returns the first parent tree node selected by the user
returns the action
sets the action
adds a new target node to the target
sets the target node of the target
adds a new node to the source node
sets the source node of the given node
sets the target nodes
returns the source node of the source node
returns the target node of the target
sets the source nodes
sets the selected columns
returns the action reference
sets the selected model
sets the selected models
sets the action reference
sets the selected rows
returns the view ref id
returns true if the selected rows is selected
returns true if the row is selected
sets the view ref id
sets the view ref id
gets the event action type
sets the event action type
returns the item event
sets the item event type
sets the mouse event
returns true if the mouse click event is clicked on the mouse
removes the filter from the filter
returns the context reference id
sets the context reference id
sets the context reference for the context reference
sets the list selection event
adds a new child to the list
deletes a node from the
moves the node to the parent node
sets the parent dialog
update a new user object
sets the addition of the list of added nodes
sets the deleted nodes
sets the update nodes
returns the base model
sets the base model
returns true if the model is base model
returns true if the table has a fixed table
sets the base models
add a list of active monitors
returns true if the patient has a patient
clears the patient
adds a new view to the list of opened views
this method is called when the last controller of the last controller
returns the parent of the specified component
start the application
returns true if the context is already defined
returns true if the context is already defined
returns the report
clears the report
saves the report
adds a report to the report
removes the report report
upload the file to the current file
checks if the file is currently selected
checks if the file is currently selected
sets the view
this method is called when the user wants to upload the html
sets the view
this method is used to convert the file to pdf
sets up the wizard panel
returns the component associated with the component
start the application
this method is called when the user starts the application
move the up one
move down the
returns the default base model
updates the state of the button
clears the base base
rebuilds the model and all its children
clears the results of the search results
rebuilds the panel
select the selection
start the application
this method is called when the user presses the ok button
returns the selected single selection
returns the list of selected objects
sets the results
this method is called by the server to start the script
sets the list of results
saves the current state of the model
returns the script model
displays the list of
executes the action
this method is called by the framework to initialize the component
this method is called when a modal state is started
populate the table with the current model
rebuilds the panel
open access to the access record
save changes made to the model
update the models
returns true if the model is sending update on save
create a new
sets the parent of the save model update
rebuilds the panel
returns the horizontal split panel
returns true if the view is a menu view
returns the id of the current object
returns the top left corner of the button
sets the id of the resource
returns the active ind
open system export system
returns true if the active state is active
start the frame
returns true if the active state is active
open system import
sets the active state
this method is invoked when a frame is opened
sets the active status of the active
returns the display string
sets the active ind
returns true if the player has volume
gets the component med id
sets the component med id
open reference builder
description of the method
populates the base form
sets the id of the resource
sets the deleted ind
open application view
returns the time inserted model
sets the insert time in the model
returns the insert user reference
returns the package model of the model
returns the application view for the given application
sets the user reference of the user to the user
open application panel
gets the value of the med item id property
sets the active ind
sets the id
getter for property admin route comments
returns a specific gateway for the adaptation route
returns the system ref
sets the admin route
sets the system reference
returns the admin route reference
sets the id of the resource
open the control tree
sets the reference to the admin route
returns the sequence route
gets the system transaction sequence
sets the sequence
sets the system transaction sequence number
open dialog dialog
returns the update dt
returns true if the route is a route
sets the update time to the given value
sets the active ind
open the reference builder
returns true if the default route is not a default route
returns the update user reference
gets the price
sets the default route
updates the user reference
sets the price of the price
sets the default route ind
sets the version of the version
this method is called when the user is to be stopped
collects the of the
returns true if the field is not deleted
this method is called when the user selects the patient
sets the deleted ind
select the access list
sets the insert time in the model
open the default builder
getter for property form ref
sets the user reference of the user to the user
sets the reference to the form reference
gets the facility location reference
sets the location of the facility to the given location
sets the system reference
gets the status ref attribute of the requirement object
saves the preference panel
open the builder
sets the status of this
open the inventory
sets the system transaction sequence number
sets the insert time in the model
open the job scheduler builder
sets the update time to the given value
returns the panel that is currently visible in the database
sets the id of the resource
sets the user reference of the user to the user
updates the user reference
returns the application frame
gets the item ref
sets the version of the version
sets the active ind
clears the cache
sets the reference to the item
gets the value of swig item type ref
maximizes the window
sets the type reference
sets the not deleted ind
opens the view in the given view
returns the reference
finds the patient controller controller
sets the ref attribute of the object
opens patient chart
sets the insert time in the model
returns the order template ref
sets the user reference of the user to the user
sets the order template reference to the given value
opens the control controller controller
returns the strength of the time in seconds
this method is used to determine if the given controller is a
sets the id of the subscription
sets the strength of time strength
returns the number of for this unit
sets the system reference
sets the strength of time strength
open the builder
open the section
sets the system transaction sequence number
open the management controller
sets the update time to the given value
returns the form id
open the resource builder
updates the user reference
sets the form id
open the specified controller type
sets the version of the version
sets the strength of the
open the frequency builder for the given controller
returns the strength unit reference
send a message to the parent
open the job builder controller
sets the strength of the
open the setting for the setting
sets the id of the resource
returns the strength of the
sets the strength of the
open a custom view controller
returns the application mediator
returns the strength of the unit
open the email form controller controller
this method is called when the user clicks on the button
sets the strength of the unit
enables disables the of the
sets the system reference
sets the active ind
enables the ok cancel button
returns true if the field is deleted
sets the system transaction sequence number
notify the listeners that the cancel button has been changed
sets the update time to the given value
updates the user reference
sets the version of the version
disable the action when the cancel button is pressed
sets the id of the resource
disable the action
sets the enabled state of the action
prepares the form
sets the active ind
removes the listener from the list of listeners
gets the check script
sets the script that is executed by the script
sets the insert time in the model
sets the user reference of the user to the user
returns the dialog if it is currently selected
returns the max strength unit reference
sets the maximum strength unit of the unit
gets the value of the med id property
sets the id of the subscription
sets the insert time in the model
returns the minimum strength unit reference
sets the minimum unit for the unit that is applied to the
sets the user reference of the user to the user
called when the user closes the dialog
sets the strength of time strength
returns the listener for the closing of the window
sets the id of the resource
returns the display of the
gets the value of the per weight unit ref property
returns true if the player has volume
sets the number of folds for the unit
returns the rules for the
sets the active ind
sets the id of the resource
returns the range of the range of the last tier unit
submit the cancel form on the dialog
sets the range of the current age
sets the id of the resource
returns the cancel submit form
sets the active ind
returns the background color of the
returns the range of the range of units in the range
sets the active ind
sets the insert time in the model
sets the background color of the background
returns the check digit
sets the range of the unit to be covered by this unit
sets the check digit
sets the user reference of the user to the user
disable the action
returns the range model of the range of the range
returns the item volume reference
sets the range of the age of the unit
enables disables the action
sets the reference to the code unit code
gets the index
returns the location reference
sets the index
returns the foreground color
sets the location reference
enables or disables the action
sets the id
returns the range model of the range of the range
sets the insert time in the model
sets the insert time in the model
sets the range of the unit to be covered by this model
this method is used to enable the of the given context
sets the system reference
sets the user reference of the user to the user
sets the user reference of the user to the user
returns the range of the reference to the current reference
sets the id of the resource
gets the value of item icon ref
returns the source reference for this source
sets the range of the route
sets the reference to the item icon
sets the source reference for this model
sets the system transaction sequence number
sets the update time to the given value
sets the system reference
sets the active ind
sets the system reference
updates the user reference
sets the form id
sets the version of the version
sets the system transaction sequence number
sets the system reference
sets the update time to the given value
sets the system transaction sequence number
updates the user reference
sets the system transaction sequence number
sets the insert time in the model
sets the version of the version
sets the update time to the given value
sets the user reference of the user to the user
sets the update time to the given value
updates the user reference
updates the user reference
sets the system reference
sets the version of the version
sets the system reference
sets the version of the version
sets the system transaction sequence number
sets the update time to the given value
updates the user reference
sets the version of the version
sets the system transaction sequence number
sets the update time to the given value
sets the id of the resource
updates the user reference
returns true if the current object is modified
sets the active ind
sets the version of the version
sets the price of the price
returns the current
sets the description of this filter
sets the insert time in the model
sets the id of the resource
sets the id of the resource
sets the user reference of the user to the user
returns the model of the model that this task is running
getter for property item form ref
sets the reference to the item reference
sets the id of the resource
sets the active ind
sets the active ind
returns the evolution of the
returns the item volume
sets the volume of the volume
sets the id of the resource
sets the active ind
sets the reference to the code unit code
sets the insert time in the model
sets the insert time in the model
gets the directions
sets the active ind
sets the user reference of the user to the user
sets the user reference of the user to the user
sets the directions
gets the alert ref
sets the reference to the exchange
sets the insert time in the model
checks if the level is allowed to be
returns true if the is allowed
sets the system reference
returns true if the range of the range is undefined
sets the user reference of the user to the user
sets the system reference
returns true if the range of the range is wrapping or not
returns true if the given code group code is in the current
returns the default ind
sets the id of the resource
sets the system transaction sequence number
returns true if the is
sets the system reference
returns true if the default is
sets the system transaction sequence number
sets the update time to the given value
sets the default
gets the value of the generic name property
sets the default
updates the user reference
sets the update time to the given value
sets the generic name of the imported type
sets the default
sets the system transaction sequence number
sets the active ind
sets the version of the version
updates the user reference
sets the update time to the given value
sets the check digit
sets the system reference
returns the deleted ind
updates the user reference
sets the version of the version
sets the version of the version
sets the deleted attribute of the object
sets the insert time in the model
sets the system transaction sequence number
sets the user reference of the user to the user
sets the update time to the given value
sets the ref attribute of the object
getter for property sequence
load access to the access list
updates the user reference
sets the sequence of to be used for the
sets the index
sets the version of the version
load access to the access list
sets the form id
sets the insert time in the model
sets the system reference
this method is called by the access to access the access list
sets the user reference of the user to the user
load access to the access list
sets the id of the resource
sets the system transaction sequence number
sets the source reference for this model
load access list results from the given reference
sets the update time to the given value
sets the system reference
updates the user reference
sets the active ind
load access to the access list
sets the version of the version
sets the id of the resource
sets the system transaction sequence number
sets the id of the resource
load access to the access list
sets the update time to the given value
returns the effect type reference
update the list of results
sets the active ind
sets the effect type
updates the user reference
sets the check digit
returns the entity ref
returns the delivery order
sets the active ind
sets the entity ref attribute of the entity reference model object
sets the version of the version
load access list results by reference
sets the insert time in the model
sets the user reference of the user to the user
returns the reaction ref
this method is called to notify the user that a reference has
sets the reaction reference to the reaction
returns the severity reference
sets the severity reference to the given value
sets the id of the resource
sets the system reference
sets the index
sets the id of the resource
sets the system transaction sequence number
sets the insert time in the model
load the access list results for a specific access file
sets the user reference of the user to the user
sets the id of the resource
sets the update time to the given value
sets the entity ref attribute of the entity reference model object
this method is called when the user wants to load the results
updates the user reference
sets the source reference for this model
sets the active ind
sets the insert time in the model
sets the system reference
sets the version of the version
returns the custom schedule indicator
load access to the model
sets the user reference of the user to the user
returns true if the user is a custom schedule
sets the active ind
sets the system transaction sequence number
gets the value of the interaction entity ref property
returns true if the user is a custom schedule
sets the interaction reference for this entity
this method is called when the user wants to load the
sets the update time to the given value
sets the custom schedule
returns the interaction type ref
updates the user reference
sets the value of not null
load access to the model
sets the type ref of this interaction
gets the database table ref
sets the foreign table ref table ref
sets the custom schedule
sets the reaction reference to the reaction
sets the version of the version
returns the rule execution ref
action to access default table action
sets the rule execution ref rule
returns the rule used in the rule
sets the rule script reference for this rule
refreshes all the tables in the database
sets the id of the resource
sets the severity reference to the given value
sets the system reference
refresh all the tables except for the given
sets the id of the resource
sets the error message
sets the insert time in the model
returns the foreign key id
sets the system transaction sequence number
refreshes the table
sets the foreign key id
gets the value of directions prefix
sets the update time to the given value
sets the direction of the
sets the user reference of the user to the user
refresh the table
sets the active ind
sets the active ind
gets the
gets the instance ref
updates the user reference
sets the
returns true if the context is already being made globally
sets the reference to the instance of this instance
gets the company ref
gets the
sets the company reference
sets the version of the version
returns the interface ref reference for this interface
gets the credit card number
sets the
sets the credit card number
this method is called to refresh the table
returns the exact amount of
sets the reference to the interface ref interface
gets the value of the credit card type ref property
sets the credit card type for this unit
returns true if the exact value is exact
returns the last error time instant
sets the time to the last error
returns true if the exact value is not
sets the exact value
sets the id of the resource
sets the exact amount of
sets the insert time in the model
sets the reference to the instance of this instance
returns the current
sets the exact amount of
sets the user reference of the user to the user
sets the error message
sets the current transaction interface for the current transaction
sets the system reference
sets the active ind
returns the last process dt
getter for property quantity
sets the time in the last process
select the first row in the table
sets the location reference
sets the quantity of the
sets the system transaction sequence number
sets the check digit
select first row
sets the
sets the update time to the given value
accessor method for x directions suffix
returns the reference
updates the user reference
returns the verification value
sets the directions
adds the given quantity to the conclusion
sets the ref attribute of the object
returns the state reference
returns the message number of the message
sets the verification value of the verification value
sets the state reference
adds a tree node to the tree
returns the reference
sets the errors message
gets the value of the indication ref property
sets the version of the version
sets the ref attribute of the object
getter for property messages processed
removes a tree node from the tree
sets the indication of the ref
sets the messages processed
sets the id of the resource
sets the id of the account
returns the outbound message
sets the system transaction sequence number
returns the account balance
returns the description
sets the index
gets the value of transaction class ref
returns true if the message is outbound
sets the account balance
getter for property sound
sets the reference to the transaction class
returns the charges charges
sets the description
sets the active ind
sets the
returns true if the outbound message is a outbound
sets the charges charges
getter for property transaction display
sets the charges attribute of the object
returns the reference
gets the value of charge ref
gets the value of the account closed dt property
sets the outbound message
sets the insert time in the model
sets the ref attribute of the object
returns the duration of the
sets the transaction display
sets the charge ref of this object
sets the account that was closed
gets the value of charge item id
returns the reference
sets the not outbound
sets the charge item id
returns the transaction time
sets the user reference of the user to the user
sets the ref attribute of the object
sets the duration of the
sets the outbound message
sets the transaction transaction time
returns the credits of the account
sets the source reference for this model
returns the peak queue for this model
sets the credits of the credits
returns the duration of the
returns the value of the specified setting
sets the peak queue
sets the system reference
returns the value of a setting
sets the duration of the
sets the insert time in the model
returns the date time model setting for the application
sets the insert time in the model
gets the account open dt
gets the duration unit reference
sets the system transaction sequence number
sets the user reference of the user to the user
returns the value of a setting
sets the account open account
returns the script
sets the user reference of the user to the user
sets the script to be executed
sets the update time to the given value
sets the duration unit for this unit
returns the transaction object
returns the size of the queue queue
returns the show discount on invoice ind
sets the transaction object
updates the user reference
returns the account payments
returns true if the invoice discount is on the sales supply invoice
sets the reference to the instance of this instance
returns true if the invoice is not visible
sets the size of the queue
sets the account payments
gets the value of transaction type ref
sets the invoice discount on invoice
sets the version of the version
returns the interface control ref reference
sets the discount on the invoice
returns the poll for the poll
sets the transaction type ref
sets the discount on invoice displayer on the invoice
sets the interface to be used for the interface
sets the id of the resource
sets the poll task ref
returns the trigger ref
returns the current sequence number of the
sets the system reference
sets the sequence of the message sequence
sets the trigger ref attribute of the assignment object
getter for property process custom controller ref
gets the rate unit reference
sets the custom controller reference to the specified value
sets the system transaction sequence number
sets the rate of this unit to the specified value
sets the update time to the given value
returns the process settings form
sets the active ind
this method is used to determine if the table is visible
gets the billing provider ref
updates the user reference
sets the process settings form
sets the location reference
sets the billing provider
returns the maximum rate of
sets the version of the version
sets the active ind
returns the queue capacity
sets the charges attribute of the object
sets the column labels
sets the maximum rate of
sets the capacity of the queue
sets the message
sets the charge item id
sets the column labels
gets the value of charge rate
returns the start time of the
gets the message control id
returns the minimum rate of the
sets the charge rate
gets the value of charge type ref
sets the start time
sets the message control id
sets the charges type of this object
sets the minimum rate of the
returns the message time
gets the facility account id
sets the message to be displayed in the
returns the rate
sets the facility type id
returns the initial form id
sets the value of the action to control with an action
sets the initial form id
sets the time rate
returns the stop dt
sets the facility type id
sets the insert time in the database
sets the value for the specified context
gets the rate
sets the stop time
sets the insert time in the model
sets the user reference of the user to the user
sets the rate for the
sets the value for the specified
sets the user reference of the user to the user
returns the owner of the owner form
returns the message info
sets the owner of the form
sets the message info
gets the patient id
returns the line item
sets the patient id
sets the line item
sets the id of the resource
returns the message trigger
returns the line item description
sets the message trigger
sets the line item description
gets the rate weight
sets the system reference
sets the system reference
sets the rate for the
sets the active ind
set the value for the given context
sets the message type
sets the id of this object to the specified value
gets the value of the business rule ref property
sets business rule ref reference
sets the focus on the current component
sets the system transaction sequence number
sets the system reference
sets the focus on the component
returns the custom controller reference
sets the update time to the given value
sets the reference to the custom controller reference
sets the system transaction sequence number
gets the volume reference
sets the definition of the definition
returns the total time of the processing process
sets the system transaction sequence number
updates the user reference
gets the tax ind value for this tax subtotal
sets the volume reference
sets the total time of the job
returns true if the tax is
sets the version of the file
returns true if the tax is not tax
gets the ind attribute of the visor grafo object
sets the tax
sets the active ind
sets the not tax
gets the value of audit
sets the outbound message
sets the tax gross
returns true if this is
sets the audit
sets the update time to the given value
sets the update time to the given value
sets the insert time in the model
returns true if the is not
sets the user reference of the user to the user
updates the user reference
returns the priority sequence
sets the charges attribute of the object
sets the
updates the user reference
sets the priority sequence
sets the version of the version
sets the patient name
sets the not
returns a new model for the model
sets the charge ref of this object
sets the version of the version
sets the state reference
sets the ind attribute of the object
gets the value of charge currency ref
selects the tab at the specified index
sets the value of the ref property
sets the discount on invoice displayer on the invoice
sets the system reference
sets the system reference
sets the charge item id
sets the system transaction sequence number
returns the charge sequence
sets the id of the resource
sets the update time to the given value
sets the charge sequence
sets the system transaction sequence number
updates the user reference
gets the value of charge status ref
returns the transaction name
sets the version of the version
sets the value of the status of the charges
sets the active ind
sets the transaction name
updates up the action table
sets the charges type of this charges object
sets the update time to the given value
returns the contact form id
sets the deleted ind
sets the insert time in the model
sets the contact form id
sets the facility type id
updates the user reference
sets the insert time in the model
gets the cost currency ref attribute of the requirement object
sets the version of the version
sets the user reference of the user to the user
sets the user reference of the user to the user
sets the value of the code cost cost ref code property
gets the credit charge id
sets the id of the resource
getter for property item form ref
sets the patient patient
sets the credit charge id
sets the reference to the form reference
returns the value of the pay pal field code payment code
clears the patient controller
sets the payment for the given payment
sets the active ind
sets the id of the resource
returns the algorithm used to generate the script
gets the value of the payment currency ref property
sets the algorithm used to generate the script
sets the value of the pay pal field code payment code ref
returns the algorithm used for the algorithm
saves the patient patient
sets the id of the resource
sets the algorithm used to change the algorithm parameters
sets the reference to the item reference
returns the algorithm value
sets the algorithm value for this
returns the patient patient
sets the active ind
returns the item package number
sets the charge ref of this object
gets the value of charge type ref
sets the charge type ref
sets the check digit
returns true if the patient has a patient
sets the package name of the package
sets the active ind
sets the definition of the definition
sets the id of the resource
returns the value of the payment type ref property
sets the deleted ind
sets the charges attribute of the object
sets the account balance
sets the description of this event
sets the reference to the code payment code property
gets the fee ref ref
sets the system reference
clears the patient
sets the charge ref of this object
sets the deleted ind
sets the index
sets the name of the account
sets the value of the code fee code property
gets the value of charge code
sets the insert time in the model
sets the insert time in the model
sets the fixed date column
returns the form id
sets the charge code
sets the user reference of the user to the user
sets the system transaction sequence number
sets the user reference of the user to the user
returns the rounding
gets the charge code
sets the form id
sets the source reference for this model
sets the rounding rounding rounding
sets the update time to the given value
sets the fixed result table column and the result
sets the charge code
returns the of the item
sets the system reference
getter for property form record id
sets the active ind
sets the system reference
updates the user reference
sets the value of the item strength property
sets the form record id
sets the system transaction sequence number
sets the fixed date column
sets the version of the version
sets the update time to the given value
sets the system transaction sequence number
gets the value of charge item status ref
returns the item strength unit reference
updates the user reference
sets the fixed result table column and the result
sets the charge item status
sets the update time to the given value
sets the insert time in the model
sets the version of the version
gets the value for the charge item text
sets the unit
sets the value of the item text
updates the user reference
sets the grid table column result
sets the version of the version
returns the volume
sets the user reference of the user to edit
returns the inventory item id
checks if the application context is already in the context of the
sets the volume of the
gets the value of charge item type ref
sets the inventory item id
sets the value of the item type reference
gets the value of the item volume unit
returns true if the table id is modified
returns the invoice id
sets the value of the code cost cost ref code property
sets the insert time in the model
sets the volume unit
sets the value of the invoice id property
sets the id of the resource
closes the current form
sets the user reference of the user to the user
returns the cost of the item
gets the value of the type ref property
sets the reference to the type ref
sets the definition of the definition
sets the cost of the item
sets the volume of the volume
sets the active ind
returns the item reference for this item
sets the background color of the background
sets the system reference
sets the reference to the item that is currently being edited
sets the reference to the code unit code
sets the reference to the custom controller reference
this method is called by the framework to perform the
gets the alert override reference
sets the system transaction sequence number
sets the order id
this method adds the invoice charge invoice
sets the to the given value
sets the update time to the given value
returns the display item for the item
schedule a schedule for the given schedule
sets the id of the resource
sets the id of the resource
returns duplicate reference ref
updates the user reference
sets the duplicate duplicate ref
sets the version of the version
sets the foreground color of the foreground
gets the patient location reference
returns the effective start dt time
sets the active ind
sets the insert time in the model
sets the effective start time of the start time
this method sets the charges model
gets the value of the med order sequence property
sets the patient location reference
sets the active ind
sets the user reference of the user to the user
returns the bill partner form id
returns the invoice icon ref
sets the check digit
sets the bill customers partner id
gets the program ref
sets the reference to the invoice icon
sets the sequence order relevance
getter for property bill from text
sets the bill part of the bill
sets the program ref
gets the bill patient id
sets the id of the resource
gets the value of record item type ref
gets the medical condition reference
sets the bill patient id
sets the record type ref
gets the bill program reference
sets the deleted ind
sets the bill program reference
sets the price
getter for property bill to text
returns the effective time dt
sets the form id
sets the medical condition reference
sets the bill to text
sets the effective time to stop the given time
gets the billing location reference
sets the system reference
sets the reference to the billing location
returns the value of the component
sets the index
sets the billing provider
sets the ref attribute of the object
sets the active ind
sets the system transaction sequence number
gets the value of the quantity unit ref property
get the value from the control
sets the update time to the given value
sets the insert time in the model
sets the charges attribute of the object
sets the quantity of the unit
returns the component associated with the component
updates the user reference
sets the user reference of the user to the user
gets the order admin route reference
gets the value of record item state ref
returns the component at the specified location
sets the charge ref of this object
sets the source reference for this model
sets the version of the version
sets the facility type id
sets the order admin
returns the component that is associated with the specified name
sets the record state reference
sets the system reference
returns the order admin route text
sets the charge code
returns the component that is associated with this component
sets the location of the facility to the given location
sets the order text of the route
sets the id of the resource
returns the component that is currently being edited
gets the order admin reference
sets the system transaction sequence number
sets the charge code
sets the insert time in the model
returns the panel that is currently active in the current page
returns the service provider ref
sets the order admin
sets the update time to the given value
sets the charge item status
returns the panel that is currently active in the context
returns the order admin site text
sets the service provider ref provider
getter for property form folder ref
sets the active ind
updates the user reference
sets the user reference of the user to edit
sets the reference to the code form code property
sets the order text
sets the reference to the custom controller reference
returns the service ref
sets the version of the version
sets the value of the item text
gets the order daily daily order
sets the reference to the service
gets the invoice currency ref attribute of the requirement object
sets the insert time in the model
sets the order of the daily daily daily daily orders
returns the service start dt
sets the invoice currency ref
returns the format type reference
returns the invoice dt
returns the order of the order
the file chooser dialog
sets the start time of the service
sets the type ref format for this model
sets the user reference of the user to the user
sets the invoice id
sets the value of the item type reference
sets the insert time in the model
sets the user reference of the user to the user
sets the value of the code cost cost ref code property
returns the invoice format ref
sets the invoice reference
getter for property order form reference
gets the invoice report ref attribute of the object
sets the invoice report ref
this method adds the invoice charge object as a
sets the reference to the item that is currently being edited
sets the definition of the definition
returns the invoice text
sets the order of the order form reference
sets the text of the invoice
sets the id of the resource
returns the service stop time
getter for property order
returns the invoice form id
sets the system reference
sets the service stop time
sets the invoice form id
sets the order text
sets the active ind
sets the form id
sets the system transaction sequence number
this method is called when the user selects a menu popup menu
sets the duplicate duplicate ref
returns the short display
gets the invoice status ref attribute of the requirement object
sets the update time to the given value
sets the effective start time of the start time
sets the short display
sets the invoice status ref
updates the user reference
returns the order of the order of the
sets the version of the version
sets the insert time in the model
sets the minimum order of the
sets the user reference of the user to the user
sets the text of the invoice
sets the system reference
sets the effective time to stop the given time
foreign key to reference
sets the id of the resource
sets the invoice type ref
sets the active ind
gets the order unit reference
sets the facility type id
sets the system transaction sequence number
sets the order of the unit to be viewed
sets the system reference
sets the location of the facility to the given location
returns the term id
returns the dialog ref
sets the reference to the dialog ref
sets the term id
set the state of the record
sets the reference to the code form code property
returns the statement text
sets the system reference
sets the update time to be updated
sets the insert time in the model
gets the order total
sets the text of the statement
sets the system transaction sequence number
sets the user reference of the user to the user
sets the order total
sets the system transaction sequence number
returns the date the model is being created
sets the system reference
sets the date form to the specified date
updates the user reference
sets the id of the resource
sets the update time to the given value
sets the reference to the item that is currently being edited
sets the update time to the given value
sets the strength of time strength
sets the version of the version
updates the user reference
returns the reference to the form type reference
updates the user reference
sets the system transaction sequence number
sets the reference to the reference to the attribute type
sets the active ind
sets the version of the version
sets the insert time in the model
sets the record type ref
gets the application control id
sets the version of the version
sets the user reference of the user to the user
sets the application control id
sets the strength of time strength
executes the script
sets the form id
returns the data type ref
sets the data type ref
sets the update time to the given value
returns the number of rails per rails
sets the short display
sets the system reference
sets the weight of the
updates the user reference
sets the version of the version
returns the display script
sets the number of folds for the unit
sets the display to be used for the script
sets the system transaction sequence number
getter for property display text
this method is called when the popup menu is called
sets the system reference
returns the type reference
sets the display text
returns the display type reference
sets the update time to the given value
sets the table tooltip
sets the type ref
sets the display type reference
returns the form type screen id
sets the system transaction sequence number
set the form type
returns the
updates the user reference
gets the image icon ref
sets the title
sets the reference to the image icon
sets the
returns the image x1
sets the version of the version
sets the update time to the given value
sets the image that is currently being clipped
sets the id of the resource
returns the image x2
updates the user reference
sets the image x2
returns the image y1
sets the image between the image points
sets the version of the version
sets the active ind
returns the image y2
returns the suppress indication of the replay
sets the check digit
sets the image y2
returns true if the indication of the suppress indication of the indication
sets the insert time in the model
returns the value of the data type
returns true if the indication of the indication indication whether or not
sets the user reference of the user to the user
returns the record for the given detail record
sets the id of the resource
sets the suppress indication of the indication
sets the indication of the indication indication that the indication of the
checks whether the given set of records has any records that have
sets the active ind
returns true if any of the given terms contains any matching terms
sets the index
sets the suppress indication of the indication indication of the indication indication
returns the short display of the short label
checks if any records matching the given records in the list of
returns true if the short display is short
returns true if the display is not short
sets the short display
sets the system reference
sets the insert time in the model
sets the display of the display
returns the deny transition
sets the short display display
returns true if the transition is deny
sets the user reference of the user to the user
returns true if the transition transitions is deny
sets the system reference
sets deny transition to deny
sets the source reference for this model
sets deny deny
sets deny deny
sets the system reference
sets the insert time in the model
sets the system transaction sequence number
sets the system transaction sequence number
sets the user reference of the user to the user
sets the system transaction sequence number
gets the value of record item type transition transition
sets the id of the resource
sets the update time to the given value
sets the record type transition id
sets the update time to the given value
gets the value of role group ref
sets the reference to the group referenced in this group
updates the user reference
sets the update time to the given value
updates the user reference
sets the version of the version
sets the system reference
sets the id of the resource
sets the system transaction sequence number
updates the user reference
sets the active ind
sets the update time to the given value
sets the check digit
updates the user reference
returns the state of the given workflow id
sets the version of the version
sets the version of the version
returns the transition model for this automaton
sets the id of the resource
sets the index
sets the active ind
sets the insert time in the model
returns the value id of the value term
sets the background color of the background
sets the user reference of the user to the user
sets the value of the term id property
sets the source reference for this model
returns the value
sets the reference to the custom controller reference
sets the system reference
sets the value of the display model
returns the value unit ref
sets the system transaction sequence number
sets the value of the code code property
sets the update time to the given value
sets the id of the resource
updates the user reference
sets the version of the version
returns the reference to the form icon reference
sets the reference to the reference to the reference to the icon
sets the version of the version
sets the insert time in the model
removes the tree nodes from the tree
sets the user reference of the user to the user
sets the id of the resource
removes all records from the database
sets the active ind
removes a tree node from the tree
getter for property child form type
sets the system reference
remove the deleted record from the list
sets the reference to the child form
sets the reference to the custom controller reference
returns the form type for the given field
sets the system transaction sequence number
sets the update time to the given value
sets the data type ref
updates the user reference
sets the active ind
getter for property child form id
sets the version of the version
sets the value of the child form id property
sets the reference to the child form
returns the identifier of the source
sets the source of the source
returns the term category
sets the data type ref
sets the term category
returns the term id value
sets the location of the facility to the given location
gets the group record ref ref
sets the tree model
sets the group record ref attribute of the group object
sets the insert time in the model
sets the tree expand tree paths
sets the id of the resource
returns the maximum number of detail sequence for the sequence
returns the detail sequence of the sequence
sets the user reference of the user to the user
sets the detail sequence of the sequence
sets the tree collapse path
sets the active ind
getter for property item definition ref
getter for property form record detail
sets the check digit
sets the reference to the item definition reference
sets the form record detail record
gets the value of record item domain ref
refresh the form
sets the record domain reference
sets the id of the resource
sets the id of the resource
gets the value of record item ref
refresh the form
sets the record ref
sets the active ind
sets the active ind
sets the index
updates the renderer
returns a term term
gets the value type of record ref
sets the insert time in the model
mark the records as deleted
sets the value type reference value
sets the form record id
sets the user reference of the user to the user
sets the tree expand tree
this method is used to get the detail term
sets the source reference for this model
returns the report report reference
sets the system reference
sets the report report
returns a term model for this unit
sets the insert time in the model
sets deny deny
sets the system transaction sequence number
getter for property form definition transition id
sets the insert time in the model
sets the id of the resource
sets the user reference of the user to the user
sets the transition definition id
sets the update time to the given value
sets the system reference
sets the insert time in the model
updates the user reference
sets the user reference of the user to the user
returns a term order term
sets the form id
sets the version of the version
sets the user reference of the user to the user
sets the system transaction sequence number
sets the reference to the group referenced in this group
sets the record ref
sets the id of the resource
sets the system reference
gets the result model ref attribute of the requirement object
sets the active ind
sets the result of the operation
sets the name of the
sets the update time to the given value
sets the value of the child form id property
sets the system transaction sequence number
updates the user reference
sets the update time to the given value
sets the reference to the child form
sets the system reference
sets the version of the version
updates the user reference
sets the data type ref
sets the version of the version
sets the active ind
sets the system transaction sequence number
sets the id of the resource
sets the system reference
sets the update time to the given value
sets the active ind
updates the user reference
sets the check digit
sets the detail sequence of the sequence
sets the system transaction sequence number
sets the update time to the given value
sets the form record detail record
sets the value of the display model
this method is used to log the current record detail
sets the id of the resource
updates the user reference
sets the id of the resource
sets the value of the code code property
sets the description of this filter
sets the index
returns the value of values reference group
sets the active ind
returns the display sequence of the sequence
sets the id of the resource
sets the value of the values reference group
sets the display sequence
sets the insert time in the model
returns the value id of the field to be used for the
sets the form record id
sets the user reference of the user to the user
sets the id of the resource
sets the location of the facility to the given location
sets the values of the term id
returns the value of the code column code ref property
sets the insert time in the model
sets the insert time in the model
sets the source reference for this model
sets the user reference of the user to the user
sets the active ind
returns the order of the order
sets the value of the flag to display the value of the
sets the order of the order
sets the user reference of the user to the user
sets the system reference
sets the insert time in the model
sets the version of the version
sets the system reference
sets the active ind
sets the record ref
sets the system transaction sequence number
sets the user reference of the user to the user
sets the active ind
sets the system transaction sequence number
sets the result of the operation
sets the reference to the child form
sets the system reference
getter for property dynamic view script
sets the update time to the given value
sets the record ref
sets the dynamic view of the script
sets the update time to the given value
updates the user reference
sets the data type ref
returns the file id
sets the file id
sets the version of the version
updates the user reference
returns the form type id
sets the form id
sets the form type id
sets the system transaction sequence number
sets the insert time in the model
sets the version of the version
sets the user reference of the user to the user
returns the name of the screen
sets the term id
sets the name of the screen
returns the current screen sequence
sets the screen position
returns the term sequence
sets the system reference
sets the system reference
sets the term sequence
sets the value of the code term id code property
returns the term text
sets the system transaction sequence number
sets the text of the term
sets the update time to the given value
sets the value of the display model
updates the user reference
sets the system transaction sequence number
sets the version of the version
sets the update time to the given value
returns the view ref
sets the value of the code code property
sets the view reference
updates the user reference
sets the version of the version
sets the insert time in the model
returns the term category ref
sets the category ref
sets the user reference of the user to the user
sets the id of the resource
sets the term name
returns the term name
sets the index of the term in the current term
sets the value of the flag to display the value of the
returns the record data
returns the name sound
sets the id of the resource
sets the date record
sets the sound name
returns the term owner ref
sets the id of the resource
sets the id of the resource
sets the active ind
sets the active ind
sets the owner of the term
returns the term source ref
sets the active ind
sets the source reference for this term
sets the value of the child form id property
sets the check digit
gets the term ref
sets the term ref
sets the active ind
sets the reference to the child form
sets the record ref
sets the insert time in the model
returns the term type ref
sets the data type ref
sets the user reference of the user to the user
sets the record state reference
sets the type ref
sets the data type ref
returns the record sequence
sets the record sequence
sets the value of the code term id code property
sets the update time to the given value
sets the value of the display model
sets the index
sets the result of the operation
updates the user reference
sets the insert time in the model
sets the value of the code code property
sets the insert time in the model
sets the user reference of the user to the user
sets the version of the version
foreign key to reference
sets the user reference of the user to the user
sets the record relationship type
sets the system reference
sets the version of the version
gets the related charge ref ref
sets the related charge item ref
sets the source reference for this model
sets the system transaction sequence number
sets the insert time in the model
sets the insert time in the model
sets the system reference
sets the update time to the given value
returns the related foreign key type reference
sets the related form type ref
updates the user reference
sets the user reference of the user to the user
returns the related order template ref
sets the user reference of the user to the user
sets the system transaction sequence number
sets the order template
sets the version of the version
gets the related record ref ref
sets the related record ref
sets the update time to the given value
gets the related term category
sets the system reference
sets the related category term
updates the user reference
sets the date record
gets the related term id
sets the related term id
sets the version of the version
gets the related term ref
sets the related terms reference to the term
sets the system reference
sets the system transaction sequence number
sets the id of the resource
sets the record ref
sets the system transaction sequence number
sets the record state reference
sets the update time to the given value
sets the active ind
sets the record sequence
updates the user reference
sets the background color of the background
sets the result of the operation
sets the system reference
sets the update time to the given value
sets the reference to the reference to the reference to the icon
sets the id of the resource
updates the user reference
sets the value of the display model
getter for property form status
gets the value of the value currency ref property
sets the reference to the status of the form
sets the system transaction sequence number
sets the value of the code code property
sets the value of the code code property
sets the insert time in the model
sets the active ind
sets the version of the version
sets the id of the resource
sets the term id
sets the user reference of the user to the user
returns the current state of the sequence
sets the charge ref of this object
sets the state of the sequence
returns the value of the data type
sets the system reference
sets the term sequence
sets the active ind
sets the id of the resource
sets the system transaction sequence number
sets the text of the term
sets the update time to the given value
updates the user reference
sets the insert time in the model
sets the active ind
sets the update time to the given value
sets the version of the version
sets the insert time in the model
sets the user reference of the user to the user
sets the id of the resource
sets the user reference of the user to the user
sets the reference to the custom controller reference
returns the rule sequence
sets the value of the flag to display the value of the
sets the rule sequence
updates the user reference
sets the system reference
sets the system reference
sets the system transaction sequence number
sets the system transaction sequence number
sets the value of the code code property
sets the update time to the given value
sets the update time to the given value
updates the user reference
sets the active ind
updates the user reference
returns the from model ref
sets the version of the version
sets the from attribute of the state object
sets the version of the version
sets the insert time in the model
sets the user reference of the user to the user
gets the value of record action ref
sets the reference to the record that is selected
gets the value of record model ref
sets the reference to the dialog ref
returns the role type role record type role
sets the value of record transition ref
sets the value of the flag to display the value of the
sets the value of the code term id code property
sets the id of the resource
returns the item type of the model
sets the location of the facility to the given location
sets the form id
sets the id of the resource
sets the active ind
sets the value of the display model
sets the system reference
sets the background color of the background
sets the active ind
sets the system transaction sequence number
sets the background color of the background
sets the value of the code code property
returns the to state reference
sets the state of this model reference to a new state
returns the entity table ref
getter for property transition form type ref
sets the reference to the table reference
sets the reference to the reference to the type of the transition
sets the version of the version
sets the id of the resource
gets the value of swig icon ref
sets the foreground color of the foreground
returns the value of the value string property
sets the reference to the icon for this sprite
sets the value string value string value
returns the transition rule ref
sets the insert time in the model
sets the id of the resource
getter for property form state ref
sets the rule ref rule ref
sets the reference to the reference to the reference to the attribute
sets the user reference of the user to the user
sets the active ind
gets the value of record item icon ref
sets the value of the code term id code property
sets the update time to the given value
sets the reference to the item ref icon
sets the date form to the specified date
updates the user reference
sets the record state reference
sets the active ind
sets the system reference
sets the insert time in the model
sets the value of the display model
sets the version of the version
sets the state of the sequence
returns the reference to the form reference foreign key
sets the user reference of the user to the user
sets the reference to the form
sets the system reference
returns the model type ref
sets the value of the code code property
sets the model ref type
sets the data type ref
gets the value of record icon ref
sets the reference to the new record icon ref
sets the insert time in the model
sets the system transaction sequence number
sets the system transaction sequence number
sets the version of the version
sets the user reference of the user to the user
sets the update time to the given value
sets the reference to the reference to the attribute type
gets the value of the visit id property
sets the system reference
updates the user reference
sets the value of the visit id property
sets the insert time in the model
sets the version of the version
sets the system transaction sequence number
sets the detail sequence of the sequence
sets the user reference of the user to edit
sets the system reference
sets the update time to the given value
sets the insert time in the model
sets the user reference of the user to the user
sets the update time to the given value
updates the user reference
sets the system transaction sequence number
sets the version of the version
sets the record ref
updates the user reference
sets the system reference
sets the update time to the given value
updates the user reference
sets the version of the version
returns the owner of the owner of this user
sets the system transaction sequence number
sets the version of the version
sets the owner of the owner of this user
sets the term id
sets the update time to the given value
updates the user reference
sets the id of the resource
returns a role that is a role of the role
sets the patient location reference
sets the id of the resource
sets the id of the resource
sets the reference to the service
sets the active ind
sets the reference to the custom controller reference
sets the active ind
getter for property active list display type
sets the system reference
sets the active list of active references to the given value
returns the screen coordinate of the current screen
sets the background color of the background
sets the value of the code term id code property
returns the value of the value term text
sets the id of the resource
sets the value of the text field
sets the system transaction sequence number
sets the version of the version
gets the template business rule ref attribute of the requirement object
sets the id of the resource
sets the template business rule ref
returns the template for the template
sets the active ind
returns true if the template is a template
sets the active ind
returns true if the template is not a template
returns the active list of active states
sets the template to the template
sets the reference to the form
returns true if the list of active updates
sets the template to be used for the template
sets the location of the facility to the given location
returns true if the list of active updates
sets the id of the resource
sets the template for the template
getter for property form transition ref
sets the insert time in the model
sets the insert time in the model
sets the active list of active active
sets the reference to the
returns the priority of the template
sets the user reference of the user to the user
sets the active list of active objects
sets the from attribute of the state object
sets the user reference of the user to the user
sets the priority of the template
returns the role reference
sets the reference to the role of this role
sets the active list of active states
sets the path to the image
gets the concurrent user access ref
sets the active ind
sets the system reference
sets the title
sets the insert time in the model
sets the id of the resource
sets the number of concurrent sessions access
sets the column name for the column
returns the comparison operator
sets the comparison operator of this operator
sets the user reference of the user to the user
sets the system transaction sequence number
sets the data type ref
sets the reference to the custom controller reference
sets the update time to the given value
sets the active ind
returns the application id
returns the default zoom value
sets the application id
updates the user reference
sets the default zoom value
sets the system reference
sets the id of the resource
gets the filter field type ref
sets the version of the version
sets the filter type ref
sets the update time to be updated
gets the place order ind
sets the deleted ind
sets the system transaction sequence number
returns the input type reference
sets the active ind
returns true if the place order is place
sets the input type reference to the given value
sets the insert time in the model
getter for property template form type
updates the user reference
returns true if the order of the order is not broken
sets the insert time in the model
sets the reference to the template form
sets the user reference of the user to the user
sets the place order
gets the value of the term type icon ref property
sets the user reference of the user to the user
sets the rule sequence
sets the version of the version
sets the place order
sets the insert time in the model
sets the reference to the term ref of the term
returns the model ref
sets the system reference
sets the place to place the place in the place
sets the user reference of the user to the user
sets the model ref attribute of the model object
sets the system reference
returns the negate comparison order
sets the reference to the dialog ref
sets the value of the visit id property
returns true if the comparison comparison is in the union of the
sets the form id
sets the system transaction sequence number
returns true if the negation is negated negation
getter for property display form type reference
sets the update time to the given value
sets the negate comparison state
sets the update time to the given value
sets the system transaction sequence number
sets the negate order
sets the display form reference type
sets the system reference
updates the user reference
sets the negate comparison value
sets the template name
updates the user reference
getter for property form definition ref
returns the template text
sets the version of the version
sets the template text
sets the reference to the reference to the attribute definition
sets the version of the version
sets the update time to the given value
getter for property form display type
sets the system reference
sets the system transaction sequence number
updates the user reference
sets the display type reference to the given value
sets the state of this model reference to a new state
sets the system transaction sequence number
sets the id of the resource
sets the version of the version
sets the reference to the code form code property
sets the update time to the given value
sets the reference to the reference to the type of the transition
sets the id of the resource
getter for property form group ref
returns the access term id
updates the user reference
sets the access term id
sets the reference to the reference to the reference to the current
sets the reference to the icon for this sprite
returns the reference to the form reference foreign key
sets the active ind
sets the rule ref rule ref
sets the reference to the reference to the reference to the location
sets the active ind
returns the reference to the form icon reference icon
sets the update time to the given value
sets the reference to the reference to the attribute reference
gets the value of the authorization ref property
sets the reference to the authorization reference
returns the controller ref type
sets the reference to the controller type
sets the reference to the reference to the attribute type
sets the id of the resource
updates the user reference
getter for property header display type reference
sets the reference to the header of the
sets the version of the version
sets the active ind
sets the insert time in the model
sets the insert time in the model
gets the application group ref
sets the application group ref
returns the application reference
sets the user reference of the user to the user
sets the application ref
sets the data type ref
sets the user reference of the user to the user
sets the version of the version
sets the id of the resource
sets the id of the resource
sets the system reference
sets the label of the label
sets the insert time in the model
returns the list of hide items
sets the user reference of the user to the user
sets the system transaction sequence number
sets the active ind
returns true if the list is hidden
sets the active ind
returns the check action ref
sets the update time to the given value
returns the audit ref
sets the check action ref
returns the setting for the setting
sets the audit ref
sets the id of the resource
returns the context reference
updates the user reference
returns true if the not list is hidden
sets the reference to the reference to the given value
returns the audit user ref
sets the context reference to the given value
sets the audit user ref
returns the system change
sets the insert time in the model
sets the list of hidden values
sets the version of the version
sets the system change
gets the value of the system change user ref property
sets the not list of hidden items
sets the user reference of the user to the user
sets the system change system
sets the active ind
returns the jar file id
sets the list of hidden regions
returns the system time for this session
sets the jar file id
gets the deny level
gets the value of record model type ref column ref
sets the system system time
getter for property menu form type reference
returns true if the user is a deny
sets the record model type ref
sets the reference to the type of menu form
returns true if the user is not already resolved
returns the entity id
gets the settings value for this bean
sets the deny level
sets the entity id
sets the reference to the settings type
sets deny deny
sets the deny level
sets the insert time in the model
sets the system reference
sets the system reference
sets the insert time in the model
sets the user reference of the user to the user
sets the insert time in the database
sets the user reference of the user to the user
sets the user reference of the user to the user
sets the system transaction sequence number
sets the system transaction sequence number
sets the system reference
sets the location reference to the given location
sets the update time to the given value
returns the value of permission date
sets the system reference
sets the update time to the given value
returns true if the user has a valid date
updates the user reference
sets the system transaction sequence number
returns true if the permission is not not allowed
updates the user reference
sets the id of the resource
sets the owner of the owner of this user
sets the update time to the given value
sets the system transaction sequence number
sets the version of the version
sets the permission date
sets the version of the version
updates the user reference
sets the update time to the given value
sets the value of permission date
returns the permission entity ref
sets the version of the version
updates the user reference
sets the id of the resource
returns the value of the data type
sets the reference to the foreign entity reference
sets the value of the application controls property
sets the version of the version
sets the active ind
returns the application control
sets the id of the resource
returns the preferred height of the image
sets the active ind
sets the preferred height of the code code
sets the data type ref
sets the reference to the custom controller reference
sets the preferred width of the panel
sets the active ind
gets the preparation type ref attribute of the object
sets the type ref
sets the location of the facility to the given location
gets the preview file id
returns the group reference
sets the group ref
sets the preview file id
sets the application group ref
returns the reference to the source entity ref
sets the insert time in the model
sets the insert time in the model
sets the source entity ref attribute of the entity model object
returns the print report ref
sets the user reference of the user to the user
sets the user reference of the user to the user
returns the calculation update script
sets the form id
sets the system reference
sets the print report ref
gets reference reference group reference
sets the system reference
sets the update of the update engine
sets reference group reference
returns the filter model for the model
returns the column spec
sets the id of the resource
gets the rule parameter ref
sets the rule parameter ref
returns the value of the data type
sets the column spec
sets the system transaction sequence number
sets the system transaction sequence number
returns the list of active polls
sets the id of the resource
returns the value of the data type
returns the fixed width of the control
sets the transaction type ref
sets the system reference
sets the id of the resource
sets the update time to the given value
sets the fixed width of the control
returns true if the list of is active
sets the active ind
sets the update time to update the value of the update
returns the control focus lost script
updates the user reference
returns true if the list of active pull elements are not modifiable
gets the value of user group type ref
sets the active ind
sets the control that is used to focus the control panel
sets the user group type group
returns the application dialog ref
updates the user reference
sets the application application reference
sets the list of active pull list
sets the active ind
sets the term id
sets the version of the file
sets the version of the version
sets the list of active pull not interested in the list
sets the insert time in the model
returns the application control column
sets the update time to the given value
sets the user reference of the user to the user
sets the pull list
updates the user reference
gets the rule input type ref attribute of this rule
gets the security context ref
sets the rule input type reference
returns the application control value
sets the security context ref
sets the insert time in the model
sets the system reference
returns the form control columns
sets the user reference of the user to the user
sets the control columns control
sets the system transaction sequence number
returns the script script
sets the form id
sets the insert time in the model
sets the script to be used for the script
sets the update time to the given value
sets the system reference
sets the user reference of the user to the user
updates the user reference
sets the id of the resource
sets the help url
sets the maximum width of the
sets the version of the version
sets the system transaction sequence number
returns the minimum width of the image
returns the icon reference
sets the minimum width of the
sets the update time to the given value
sets the reference to the icon reference
returns the original column id
returns the action form type reference
sets the original column id
updates the user reference
returns the owner reference
sets the value of the term id property
sets the insert time in the model
sets the owner reference of this object
sets the version of the version
sets the id of the resource
sets the reference to the type of the action form
sets the system reference
sets the value of the display model
sets the user reference of the user to the user
sets the active ind
returns the minimum width of the control
returns the reference to the code add view ref code property
sets the value of the code code property
returns the action order type reference
sets the id of the resource
sets the reference to the view ref attribute of the object
sets the system transaction sequence number
gets the access list term id
sets the minimum width of the control
sets the system reference
sets the access list term id
gets the application control group ref
sets the version of the version
returns the minimum width of the label
sets the application control group reference
sets the order type ref
sets the update time to the given value
sets the background color of the background
sets the minimum width of the label
updates the user reference
returns the minimum height of the image
gets the control icon ref
sets the active ind
returns the action view ref
sets the reference to the control icon
sets the version of the version
sets the minimum height of the row
sets the reference to the authorization reference
sets the system transaction sequence number
returns the model class name
sets the model class name
sets the view reference
returns the model of the model
sets the foreground color of the foreground
returns true if the type is a separator
sets the model to be used for the script
sets the insert time in the model
returns true if the type is a tab
sets the user reference of the user to the user
returns true if the section is full
sets the update time to the given value
sets the reference to the settings type
returns true if the type is section
sets the system reference
returns true if the section is a section
sets the id of the resource
sets the display sequence
returns true if the panel is group
updates the user reference
returns true if the section is not full
sets the reference to the code form code property
gets the value of the access type ref property
sets the system transaction sequence number
sets the access type reference
compares this object with the specified object for order
sets the insert time in the model
sets the update time to the given value
returns the model number of the model
updates the user reference
returns true if the focus is focus
sets the version of the version
sets the user reference of the user to the user
getter for property post layout script
sets the version of the version
sets the system reference
sets the active ind
sets the layout of the given script
returns the row spec
returns true if this model is bound to the model
sets the row spec
sets the system transaction sequence number
returns the model ref id
returns the source reference model
sets the update time to the given value
sets the source reference model
sets the system reference
returns the source reference for this model
updates the user reference
returns true if the source is in the source
sets the id of the resource
sets the version of the version
sets the id of the property
sets the active ind
sets the system transaction sequence number
sets the active ind
getter for property tab layout
sets the display sequence
sets the tab layout
returns the application name
returns the tab location reference reference
sets the insert time in the model
sets the reference to the tab location
sets the insert time in the model
sets the active ind
sets the user reference of the user to the user
sets the update time to the given value
sets the application control name
sets the user reference of the user to the user
sets the owner reference of this object
sets the plugin name
updates the user reference
sets the active list of active references to the given value
returns the plugin ref
returns the validation script
sets the reference to the plugin reference
returns the view ref id
sets the validation script
sets the system reference
returns true if the image has a path
checks the validity of the controls
sets the version of the version
returns the application control associated with the specified application
returns the row to reference land reference
sets the system transaction sequence number
returns the application control by name
returns the model control for this instance
sets the reference to the row that was produced by this
sets the update time to be updated
sets the view reference
sets the reference to the child form
returns the select action ref
returns the view type ref
updates the user reference
returns the control script for the script
sets the reference to the selected action
returns the action view ref id
sets the view type ref
sets the version of the version
returns the right click action
sets the control script for the control
sets the system reference
returns the right arrow arrow id
sets the system transaction sequence number
returns the table context for this table
sets the reference to the table context
sets the data type ref
sets the update time to the given value
sets the id of the resource
returns the background processing state
returns the value of the property change
updates the user reference
sets the id of the resource
sets the active ind
sets the id of the property
sets the version of the version
returns true if the background thread is currently background
sets the active ind
returns true if the background
sets the insert time in the model
returns the business rule
sets the application group ref
sets the id of the resource
sets the user reference of the user to the user
returns the original panel id
sets the active ind
sets the background processing
sets the original panel id
sets the application ref
sets the owner reference of this object
gets the value of pref panel id
sets the value of pref panels id
sets the data type ref
sets the active ind
sets the system reference
sets the background processing
sets the reference to the reference to the attribute type
sets the system transaction sequence number
sets the update time to the given value
updates the user reference
gets the value of the business rule type ref property
sets the background color of the processing of the background
sets business rule type ref value
sets the version of the version
getter for property application panel name
sets the insert time in the model
sets the application panel name
sets the user reference of the user to the user
sets the insert time in the model
sets the id of the resource
gets the base model type reference
gets the value of the application panel ref property
returns the multiple value ind
returns true if the value is multiple one
sets the application panel ref type ref
sets the insert time in the model
returns true if the value is not multiple values
sets the user reference of the user to the user
sets the base model type reference
sets the user reference of the user to the user
sets the multiple value of the multiple
sets the active ind
returns the overview
sets the value of the multiple multiple valued property
sets the overview
sets the application control id
sets the application id
sets the multiple value of the multiple valued property
sets the rule input type reference
returns the background color of the
gets the rule process check ref value for this rule
sets the reference to the reference to the given value
sets the rule process ref rule
sets the background color of the background
sets the insert time in the model
sets the user reference of the user to the user
sets the system reference
sets the rule sequence
sets the order template reference to the given value
sets the system reference
sets the system reference
sets the system transaction sequence number
gets the template reference ref
sets the category template category
sets the owner of the owner of this user
sets the update time to the given value
sets the system transaction sequence number
updates the user reference
sets the system transaction sequence number
returns the qualification of the qualification
sets the update time to the given value
returns the throw exception
sets the class name of the class loader
returns true if the throw statement is throw exception
sets the qualification of the qualification
updates the user reference
returns true if the throw exception is thrown if the exception is
sets the id of the resource
sets the version of the version
sets the charge item id
sets the context reference to the given value
sets the throw exception to the
sets the version of the version
sets the throw exception to the thrown exception
returns the default tab tab
returns the class of the script
returns the menu
sets the record ref
sets the throw exception
returns true if the toolbar button is disabled
returns true if the tab is a tab
sets the active ind
sets the update time to the given value
sets the class to instantiate
returns true if the tab is not a tab
returns the view with the control id
returns the control panel with the given id
getter for property app toolbar form type
sets the form id
sets the default tab
updates the user reference
returns the control panel with the specified name
sets the application toolbar type reference
returns the panel with the specified id
returns the chart type reference
sets the chart component type
sets the default tab tab
returns the chart toolbar type
returns the panel with the specified name
sets the version of the version
sets the chart panel reference
sets the default tab tab tab
sets the reference to the settings type
returns the name of the application who is running
replaces the old application with the new name
sets the name of the control to be used for the application
sets the insert time in the model
sets the user reference of the user to the user
gets the system action icon ref attribute of the object
sets the reference to the group referenced in this group
sets the system icon
sets the form id
sets the id of the current object
sets the system reference
sets the system transaction sequence number
sets the display sequence
sets the update time to the given value
sets the active ind
sets the id of the resource
sets the system reference
returns the divide top bottom bottom bottom
updates the user reference
returns true if the top bottom bottom top bottom is top bottom
sets the version of the version
returns the panel containing the panel
returns the parent panel
sets the top bottom bottom
sets the view reference
sets the id of the resource
sets the insert time in the model
sets the top bottom bottom bottom mode
sets the user reference of the user to the user
sets the top bottom bottom coordinate of the top bottom
returns the category ref category reference
gets the value of the parameter view ref property
sets the active ind
sets the view ref attribute of the object
returns the current location reference
returns the target control context
returns the display class reference
sets the reference to the current location
sets the reference to the class reference
returns the current role reference
returns the display sequence number
returns the model reference
sets the current role reference
returns the of the divider
sets the target control context
sets the category reference to the given category
returns true if the divider one one
returns the script language ref
sets the id of the resource
returns the target control term id
returns true if the divider is a divider
sets the language ref
returns the script reference
sets the touch location and forces the window to be changed
sets the reference to the model
sets the target control term id
sets the
returns the script type reference
returns the combo dynamic search ind
sets the insert time in the model
sets the touch
sets the type of script reference to the given type
sets the active ind
returns the tab tab indicator
sets the user reference of the user to the user
sets the system reference
sets the foreign table ref table ref
sets the active ind
returns true if the tab is hidden
sets the category ref
returns true if the tab is hidden
sets the id of the resource
returns true if the combo search criteria is allowed
sets the tab
sets the id of the resource
sets the system transaction sequence number
sets the not hidden tab
sets the term id
returns true if the search criteria should be selected
sets the update time to update the update date
sets the application control id
sets the system reference
sets the input type reference to the given value
sets the tab tab indicator for the tab
gets the term
update the user reference
sets the active ind
sets the insert time in the model
sets the combo dynamic search combo
gets the add term category ref
sets the system transaction sequence number
sets the active ind
sets the version of the file
sets the term
sets the add term
sets the user reference of the user to the user
sets the update time to the given value
sets the search combo for the search
sets the application control name
sets the application control id
updates the user reference
returns the reference
sets the ref attribute of the object
sets the insert time in the model
sets the term ref
sets the combo combo for the search
gets the sql join list
returns the column class
returns the reference
sets the sql join list
sets the column class
sets the version of the version
sets the ref attribute of the object
returns the context reference for this entity
sets the user reference of the user to the user
sets the context reference to the entity that is being edited
sets the text of the term
sets the system reference
returns the column format
returns the layout constraint
returns the context sequence
sets the column format
sets the context sequence
returns the term text in the terms of the term
sets the system transaction sequence number
returns true if the term is editable
returns the location of the location in the x axis
sets the data type ref
sets the column name for the column
sets the update time to the given value
sets the location of the x location
returns the reference to the combo group
returns true if the term is not term
sets the class to instantiate
updates the user reference
sets the reference to the combo group
returns the location of the location
sets the term text
sets the version of the version
sets the location of the y location
sets the not term text
returns the maximize ind
sets the location of the facility to the given location
sets the term text in the text field
returns true if the maximize button is maximize
sets the control class
sets the insert time in the model
sets the comparison operator of this operator
returns true if the value is not maximized
sets the id of the resource
returns the combo box for display
sets the user reference of the user to the user
sets the access term id
sets the maximize
sets the update time to the given value
sets the context reference to the given value
sets the maximize value
sets the system reference
sets the id of the resource
returns the control description
returns true if the combo box is display
sets the maximize ind
sets the active ind
sets the control description
gets the value of the auth role group ref property
updates the user reference
sets the system transaction sequence number
sets the auth role group reference
returns the control format
sets the active ind
sets the update time to the given value
sets the reference to the authorization reference
returns true if the display is not combo
sets the application application reference
updates the user reference
returns the minimum size of the rectangle
sets the control format
getter for property detail record ref reference
sets the minimum size of the component
returns the default allowed status
sets the detail record ref
returns true if the default is allowed
sets the display combo field to display
gets the title of the panel
returns true if the default is allowed
sets the default allow default
sets the title of the panel
sets the insert time in the model
sets the default flag to true when the default is not allowed
returns the preferred size height of the preferred size
gets the free text term
sets the default allow default
gets the control type ref attribute of this object
sets the user reference of the user to the user
sets the id of the resource
sets the preferred size height of the video
sets the free text category
sets the display to display the value of not a combo box
returns the preferred size of the preferred size of the preferred size
sets the reference to the control type reference
sets the preferred size of the preferred size
sets the active ind
sets the system reference
returns the default focus focus
returns the panel that holds the display of the
sets the combo box to display the given display
returns true if the focus is focus
sets the default focus to the default focus
returns true if the embedded panel is embedded in the panel
sets the default focus
sets the insert time in the model
sets the system transaction sequence number
sets the default focus focus
sets the user reference of the user to the user
sets the update time to the given value
gets the value of the combo combobox term id property
sets the value of the code term id code property
returns true if embedded panel is not null
updates the user reference
sets the value of the display model
sets the embedded panel
sets the version of the version
sets the combo values for the selected field
returns the value of role type ref
getter for property init script
sets the display sequence
sets the role type ref
sets the value of the code code property
sets the intial script to be used in the script
returns the height of the image
sets the embedded panel
sets the form id
sets the height of the image
sets the version of the version
sets the create embedded panel
sets the system reference
sets the insert time in the model
sets the comparison operator of this operator
returns the size of the width of the image
sets the width of the size
sets the insert time in the model
sets the user reference of the user to the user
sets the system transaction sequence number
sets the user reference of the user to the user
returns the original control id
sets the context reference to the given value
sets the update time to the given value
sets the original control id
returns the maximum width of the
returns true if the limit width is limit
sets the owner reference of this object
updates the user reference
returns true if the maximum width of the range is not
sets the system reference
sets the maximum width of the
sets the version of the file
sets the maximum width of the
sets the control description
sets the maximum width of the
returns the minimum width of the range
sets the system transaction sequence number
sets the value of the code term id code property
returns true if the minimum width is limit
sets the update time to the given value
sets the system reference
returns true if the minimum width is not allowed
updates the user reference
sets the control format
sets the minimum width of the
sets the value of the display model
sets the version of the version
sets the minimum width of the
sets the minimum width of the
returns the locked ind
returns true if the lock is locked
sets the value of the code code property
sets the system transaction sequence number
returns true if the lock is locked
sets the locked flag
sets the locked lock
sets the id of the property
sets the version of the version
gets the control report ref
sets the locked lock
sets the default focus focus
sets the maximum width of the
sets the active ind
sets the reference to the tab location
sets the reference to the control report
sets the minimum width of the
sets the entity id
sets the update time to the given value
sets the insert time in the database
sets the user reference of the user to the user
sets the model ref attribute of the model object
sets the id of the resource
sets the model ref
updates the user reference
returns the model script
sets the reference to the control type reference
sets the system reference
sets the model model
sets the version of the version
returns the render custom controller reference
sets the active ind
sets the system transaction sequence number
gets the category reference id
sets the category reference id
returns the visible visible
sets the render custom controller
sets the update time to the given value
gets the search term categories reference
returns true if the component is visible
updates the user reference
returns true if the not visible
sets the search term category
gets the user language ref
sets the id of the
sets the user language ref
sets the visible status of the window
sets the version of the version
sets the visibility of the not visible
sets the description of this filter
sets the active ind
sets the visible visible
sets the display sequence
returns the document type ref
sets the reference to the document type reference
sets the insert time in the model
sets the create embedded panel
sets the file id
sets the short display display
sets the user reference of the user to the user
returns the key sequence
sets the insert time in the database
sets the key sequence
sets the user reference of the user to edit
sets the source reference for this model
sets the security context ref
sets the reference to the custom controller reference
sets the system reference
sets the system reference
sets the system transaction sequence number
returns the template reference
sets the short display
sets the template reference to the given value
sets the system change
sets the update time to the given value
sets the display sequence
sets the system transaction sequence number
updates the user reference
sets the key reference to the key value pairs
sets the system change system
sets the version of the version
returns the drag selected model
sets the system system time
returns true if the drag is selected
sets the id of the resource
sets the system reference
returns true if the model is drag or not
sets the active ind
sets the id of the resource
sets the id of the resource
sets the system transaction sequence number
sets the drag model
sets the type ref
sets the active ind
sets the update time to the given value
sets the active ind
returns the child reference
sets the drag selection
sets the description of this filter
sets the child reference
returns the number of the implementation
returns the child sequence of the sequence
sets the check digit
updates the user reference
sets the sequence of the sequence
sets the number of the implementation
sets the drag selected model
sets the update time to the given value
sets the insert time in the model
sets the version of the version
returns the embedded view layout
sets the user reference of the user to the user
updates the user reference
sets the deleted ind
gets reference reference category reference
sets the embedded view layout
sets the reference to the category reference
sets the insert time in the model
getter for property reference group
sets the reference group
sets the version of the version
sets the user reference of the user to the user
gets the reference type ref attribute of the object
returns the parent reference
returns the embedded reference view
sets reference to reference type reference
sets the parent ref attribute of the object
sets the index
gets the value of the ref relation ref property
returns the system defined
sets the reference to the relation reference
returns true if the current instance is defined
sets the reference to the view reference
returns true if the current instance is not system defined
sets the system reference
sets the system defined in the system defined in the system
sets the insert time in the model
returns the flat ind
sets the not system defined in the current instance
sets the system transaction sequence number
sets the system defined in the property
sets the user reference of the user to the user
gets the system group only ind attribute of the project object
sets the update time to the given value
sets the default focus focus
returns true if the effect is flat
returns true if the system group is a group only
updates the user reference
returns true if the group is not a group
sets the version of the version
sets the system group to be used for the system
sets the source reference for this model
sets the current group to the system group
returns true if the effect is not flat
sets the system group level
sets the system reference
returns the default
sets the system reference
sets the flat effect
sets the system transaction sequence number
sets the default
sets the system transaction sequence number
sets the not flat effect
sets the update time to the given value
sets the update time to the given value
updates the user reference
updates the user reference
sets the flat gray effect
sets the id of the resource
sets the version of the version
sets the version of the version
gets the default unit ref attribute of the object
getter for property focus gained
sets the id of the resource
sets the active ind
sets the focus to the given script
sets the default unit reference
sets the background color of the background
sets the active ind
returns the focus lost script
sets the id of the resource
sets the focus lost script
returns the from unit reference
sets the deleted ind
sets the from unit
sets the insert time in the model
sets the active ind
returns the reference to the form view reference
sets the user reference of the user to the user
sets the category reference id
sets the reference to the view reference
returns the numerator of this rational
sets the numerator
sets the system reference
sets the insert time in the model
sets the user reference of the user to the user
sets the system transaction sequence number
returns the to unit reference
sets the description of this property
sets the unit to the given unit
sets the update time to the given value
gets the default value for the default relational reference rule ref
returns true if the status is active
updates the user reference
sets the display sequence
returns true if the user is a new status
sets the id of the resource
returns the order of the model
gets the location type value for this reference
sets the version of the version
sets the insert time in the model
sets the location of the location form
returns the name of the order of this
sets the default value for the rule reference
returns the grow height
returns the reverse order type of the model
gets the location icon ref
sets the user reference of the user to the user
sets the active ind
returns the order charge for this reaction
sets the location icon reference for this location
sets the background color of the background
sets the id of the resource
returns the list of the
sets the key sequence
returns the location type reference
sets the grow height
returns the display order of the
sets the location type reference
returns the grow width
sets the security context ref
sets the active ind
sets the short display
sets the reference to the settings type
sets the grow width
returns the delivery order
sets the system reference
sets the background color of the background
sets the system reference
sets the insert time in the model
sets the id of the property
sets the id of the resource
sets the system transaction sequence number
sets the user reference of the user to the user
sets the system transaction sequence number
returns the order icon ref
sets the update time to be updated
sets the reference to the order icon
sets the update time to the given value
updates the user reference
gets the order instance reference
sets the version of the version
updates the user reference
sets the order of the status of this instance
sets the version of the version
sets the state of the sequence
sets the insert time in the model
sets the system reference
sets the active ind
sets the user reference of the user to the user
returns the order form type reference
sets the order of the order
getter for property chart form type
sets the path to the image
sets the reference to the order icon
sets the id of this object to the specified value
sets the system transaction sequence number
sets the chart form type reference
returns the order item type reference
sets the order item type
returns the first view in the list
sets the update time to the given value
sets the id of the resource
updates the user reference
sets the comments
returns the report ref
sets the version of the version
sets the intial script to be used in the script
sets the report ref
sets the form id
sets the reference to the custom controller reference
sets the id of the resource
returns the default duration
sets the system reference
sets the detail record ref
sets the insert time in the model
sets the default duration
sets the active ind
returns the default duration unit
returns the insert new number of lines
sets the system transaction sequence number
sets the default duration unit
returns the order of the given workflow id
sets the id of the resource
sets the update time to the given value
sets the insert new lines
updates the user reference
sets the id of the resource
sets the system transaction sequence number
sets the version of the version
sets the active ind
sets the active ind
sets deny deny
sets the insert time in the model
sets the user reference of the user to the user
sets the user reference of the user to the user
sets the id of the resource
gets the order instance of this instance pk
sets the insert time in the model
sets the order of the transition
sets the deleted ind
sets the user reference of the user to the user
returns the instance of the instance
sets the reference to the group referenced in this group
sets the instance of the date instance
sets deny deny
sets the inset of the area
sets the system reference
sets the active ind
sets the insert time in the model
sets the check digit
sets the user reference of the user to the user
returns the instance of the instance model ref
sets the system transaction sequence number
gets the order type of the transition
sets the reference to the instance of the instance
sets the order type
sets the form id
sets the update time to the given value
gets the instance status ref
sets the reference to the group referenced in this group
sets the instance of the status ref reference
updates the user reference
sets the insert time in the database
sets the system reference
sets the version of the version
returns the key stroke associated with this component
sets the system reference
sets the system transaction sequence number
sets the id of the resource
sets the key stroke
sets the user reference of the user to the user
sets the index
sets the update time to the given value
sets the system transaction sequence number
returns the instructions for this object
sets the sound
updates the user reference
sets the display sequence
sets the update time to the given value
returns the order of the role
sets the insert time in the model
sets the instructions for the given type
sets the version of the version
updates the user reference
sets the id of the resource
sets the user reference of the user to the user
returns the order of the order of the
sets the version of the version
sets the active ind
returns true if this is a order as needed
sets the source reference for this model
returns true if the order of the order of the
sets the system reference
sets the active ind
sets the default duration
sets the reference to the custom controller reference
sets the system transaction sequence number
sets the default duration unit
sets the id of the resource
sets the update time to the given value
sets the order of the customer
updates the user reference
gets the order of the order
sets the active ind
sets the version of the version
sets the background color of the background
sets the order of the customer
sets the locked lock
returns the order frequency reference to the reference to the order
returns the role of the role
sets the order frequency
sets the model ref attribute of the model object
sets the id of the resource
sets the id of the resource
sets the insert time in the model
returns the order of the order
sets the drag selected model
sets the order of the orders
sets the user reference of the user to the user
sets the insert time in the model
sets the active ind
sets the model model
sets the from attribute of the state object
sets the user reference of the user to the user
sets the active ind
returns the negative comparison number
sets the insert time in the model
sets the reference to the order icon
sets the reference to the custom controller reference
returns true if the comparison aggregator is negative
sets the user reference of the user to the user
sets the insert time in the model
gets the order status ref
sets the order item type
sets the embedded view layout
sets the order status of this object
sets the user reference of the user to the user
returns true if the comparison operator is negative
sets the order of the order
sets the state of the sequence
returns the order priority
sets the negative comparison
sets the order priority
sets the system reference
sets the order of the order
sets the system reference
returns the order protocol ref
sets the negative comparison operator
sets the order ref protocol to be used for this model
sets the id of the resource
sets the negative comparison between the two
sets the system transaction sequence number
returns the order provider reference for this instance
sets the system transaction sequence number
sets the order of the order
sets the order provider reference to the given value
returns the parameter model ref
sets the update time to the given value
sets the update time to the given value
sets the reference to the view reference
sets the order frequency
sets the active ind
updates the user reference
updates the user reference
sets the version of the version
sets the model ref parameter
returns the overview ref
sets the version of the version
sets the overview of the
returns the parameter reference
gets the order quantity
sets the from attribute of the state object
sets the form id
sets the order item type
sets the reference to the parameter ref
sets sku reference quantity
sets the system reference
sets the insert time in the model
gets the value of the parameter model ref property
sets the order priority
returns the order start time
sets the insert time in the model
sets the user reference of the user to the user
sets the source reference for this model
sets the order start date
sets the order ref protocol to be used for this transport
sets the user reference of the user to the user
sets the system transaction sequence number
sets the system reference
sets the state of this model reference to a new state
sets the parent id
sets the system transaction sequence number
sets the update time to the given value
sets the reference to the reference to the type of the transition
visits the given model patient list
sets the quantity of sku to be viewed
sets the id of the resource
updates the user reference
sets the reference to the icon for this sprite
sets the version of the version
sets the order start date
sets the active ind
sets the order of the order
returns the order of the order selected
sets the rule ref rule ref
gets the order of the order of this transition
sets the order of the transition
sets the order of the order
sets the deleted ind
sets the update time to the given value
sets the not required flag
sets the insert time in the model
updates the user reference
sets the user reference of the user to the user
sets the flat gray effect
sets the form id
sets the id of the resource
sets the order status of this object
sets the order status of this object
returns the right arrow action ref
sets the version of the version
sets the system reference
sets the owner reference of this object
returns the order stop dt
sets the arrow head action ref
sets the system reference
sets the active ind
returns the focus gained ref attribute of the object
sets the order of the
sets the order of the
returns the right click action
sets the background color of the background
sets the system transaction sequence number
sets the system transaction sequence number
sets the right click action
sets the reference to the table context
sets the reference to the code code property
sets the state of this model reference to a new state
sets the update time to the given value
sets the reference to the reference to the type of the transition
updates the user reference
sets the id of the resource
sets the order template reference to the given value
sets the version of the version
sets the reference to the icon for this sprite
returns the ordering user reference
sets the active ind
returns the order template location reference
sets the ordering user reference to the given value
sets the rule ref rule ref
sets the insert time in the model
sets the order template reference to the given template
gets the source ref attribute of the object
sets the focus to the given script
sets the insert time in the model
sets the user reference of the user to the user
sets the user reference of the user to the user
sets the update time to the given value
sets the reference to the source reference
sets the form id
sets the system reference
gets the type ref
updates the user reference
sets the system reference
returns the focus lost action ref
sets the order template reference to the given value
sets the reference to the isotope type
sets the system transaction sequence number
sets the update time to the given value
sets the version of the version
returns the order type reference
updates the user reference
sets the focus lost action
sets the system transaction sequence number
sets the version of the version
sets the order type ref
sets the update time to the given value
updates the user reference
sets the focus lost script
sets the version of the version
sets the ordering user reference to the given value
returns the visit ref
sets the reference to the code code property
sets the reference to the selected action
gets the owner user group ref
sets the id of the resource
sets the id of the resource
sets the owner user group reference
returns the skip focus
sets the active ind
returns true if the focus is clipped
sets the system reference
returns the font ref
returns true if the focus is not clipped
sets the owner of the owner of this user
sets the id of the resource
sets the font ref font
sets the focus to the
sets the insert time in the model
sets the user reference of the user to the user
sets the focus to the focus
sets the system transaction sequence number
sets the active ind
sets the focus on the focus
sets the system reference
sets the check digit
sets the font size
sets the patient location reference
sets the system transaction sequence number
returns the font style reference
sets the source reference for this model
sets the update time to the given value
sets the deleted ind
updates the user reference
sets the font style reference
returns the user reference
sets the record domain ref
sets the user reference to the given user
sets the template for the template
gets the value of user role ref
returns the list of the identifier of the given source ref
sets the system change
returns the list of for the given
sets the user role ref
sets the index
sets the version of the version
sets the id of the resource
sets the update time to the given value
sets the display type reference to the given value
sets the insert time in the model
sets the system change system
gets the scheduled scheduled dt
sets the user reference of the user to the user
updates the user reference
sets the active ind
sets the scheduled time
sets the system system time
sets the source reference for this model
sets the version of the version
sets the system reference
sets the deleted ind
sets the insert time in the model
sets the user reference of the user to the user
sets the system transaction sequence number
sets the update time to the given value
sets the id of the resource
returns the provider role ref
sets the system reference
sets the reference to the role provider
updates the user reference
sets the end date of the time
sets the version of the version
returns the time dt dt
sets the id of the resource
sets the reference to the service
sets the start time of the time
sets the active ind
sets the form id
sets the system transaction sequence number
gets the birth dt
sets the system reference
returns the group next control ind
sets the birth time
returns the height of the unit
sets the reference to the source reference
sets the system transaction sequence number
sets the height of the unit in units
sets the update time to the given value
sets the reference to the isotope type
returns true if the group is a group of control
updates the user reference
returns the reference
sets the system reference
sets the width of the unit in units
sets the version of the version
sets the ref attribute of the object
returns true if the group is not a leader
sets the visit id
gets death dt
sets the death time
sets the update time to the given value
sets the group of the group to be the next control
sets the system transaction sequence number
returns the death tricks
returns true if the game is
sets the id of the resource
updates the user reference
sets the current group of the group control
returns true if the game is not destroyed
sets the death attribute
sets the id of the resource
sets the not death
gets the value data type ref value
sets the active ind
sets the death signal
gets the value of death status ref
sets the id of the
sets the group next control ind
sets the death status of the ai
sets the value of the code data type code property
returns the reference
sets the active ind
sets the deleted ind
sets the ref attribute of the object
sets the insert time in the model
sets the id of the resource
sets the template for the template
sets the user reference of the user to the user
getter for property group panel layout
sets the system reference
sets the version of the version
sets the id of the resource
sets the insert time in the model
sets the active ind
sets the system transaction sequence number
sets the term id
sets the active ind
sets the user reference of the user to the user
sets the update time to the given value
gets the level ref
sets the group panel layout
sets the active ind
updates the user reference
sets the level ref
gets the value of the portal role ref property
sets the portal ref role attribute of the portal object
gets the source ref attribute of the object
sets the user reference to the given user
sets the source ref attribute of the object
returns the time to which the was created
returns the type reference
sets the user role ref
sets the end date of the time
sets the type ref
sets the version of the version
gets the dt
sets the insert time in the model
sets the date time
sets the user reference of the user to the user
sets the first name of the first item
sets the location reference
sets the update update date
sets the start time of the time
sets the insert time in the model
sets the grow height
sets the patient id
gets the status ref attribute of the requirement object
returns the identifier of the identifier
sets the user reference of the user to the user
sets the status ref
sets the reference to the service
update the user reference
sets the identifier of the answer to the given value
sets the system reference
sets the visible visible
returns the arrival mode for this session
sets the system reference
sets the version of the file
sets the middle name of the middle of the
sets the arrival mode for this
sets the insert time in the model
sets the system transaction sequence number
returns the password reset ind
returns true if the password is encrypted
sets the update time to the given value
sets the value of the visit id property
returns true if password is not password
sets the system transaction sequence number
sets the user reference of the user to the user
resets the password of the password
updates the user reference
returns the warnings
resets the password for the password password
sets the grow width
returns the language ref
sets the update time to the given value
sets the warnings
sets the version of the version
reset the password for the password reset
sets the language ref
updates the user reference
gets the portal role group ref value for this reference
getter for property disposition ref
sets the version of the version
sets the portal role ref
sets the disposition reference
sets the id of the resource
returns the help file id
sets the last name of the last modification time
gets the dt
sets the date time
sets the active ind
returns the association reference
sets the association reference
sets the help file id
sets the suffix
gets the to reference reference
sets the system reference
sets the to the given location reference
gets the status ref attribute of the requirement object
sets the insert time in the model
sets the status of this
sets the user reference of the user to the user
sets the location of the facility to the given location
sets the system transaction sequence number
sets the location reference
returns the system user ref
sets the system reference
sets the system user reference to the system
sets the middle name of the middle of the
sets the initial form id
sets the system transaction sequence number
sets the update time to the given value
gets the status ref attribute of the requirement object
sets the update time to the given value
updates the user reference
sets the status of this
sets the insert time in the model
updates the user reference
sets the version of the version
gets the value of the multiple birth ref property
sets the version of the version
sets the user reference of the user to the user
sets the of the person to the given one
returns the reference
sets the location reference
sets the ref attribute of the object
sets the id of the resource
sets the patient id
sets the id of the resource
gets the patient portal ind value for this
sets the ref attribute of the object
sets the prefix to be used for this node
returns the reason for the text that is currently being executed
gets the primary care reference location
sets the reason for the current
returns true if the portal ae should be hidden
sets the active ind
sets the id of the resource
sets the foreign primary reference to the primary primary key
returns the primary
sets the birth time
sets the active ind
sets the active ind
sets the primary primary user primary reference
returns true if the portal documentation
sets the level ref
sets the insert time in the model
sets the source ref attribute of the object
sets the user reference of the user to the user
sets the reference to the service
sets the hide patient portal
sets the type ref
sets the system reference
sets the reference to the role provider
returns the list of for a given
returns the patient name
returns the list of the identifiers of the given source id
sets the date time
sets the end date of the time
sets the not hiding of the document
returns the age of the person
sets the id of the resource
returns the age in years
sets the death time
returns the age in months
returns the age in days
sets the visit
getter for property visit
returns the visit
sets the start time of the time
sets the system transaction sequence number
sets the system change
sets the of the patient to be hidden
returns the debug display name
sets the active ind
sets the status of this
sets the check digit
sets the system reference
sets the system change system
sets the arrival mode for this
returns the maximum length of the html text
sets the id of the property
sets the update time to the given value
sets the system transaction sequence number
sets the system system time
sets the update time to the given value
sets the active ind
updates the user reference
updates the user reference
sets the maximum length of the html
sets the index
sets the version of the version
sets the version of the version
sets the death signal
sets the id of the resource
sets the insert time in the model
sets the system reference
gets the status ref
sets the disposition reference
sets the user reference of the user to the user
returns the html size of the html page
sets the status ref
sets the death status of the mission
sets the date time
sets the source reference for this model
sets the active ind
gets the content type ref
getter for property to status ref
sets the content type reference
sets the reference to the icon for this model ref
sets the system reference
returns the icon type ref
sets the visit status of the reference
sets the reference to the icon type reference
sets the html size
gets the image file id
returns the model type ref
sets the system transaction sequence number
sets the image file id
sets the system transaction sequence number
visits the specified type reference
returns the execution type
sets the insert time in the model
sets the execution type
sets the update time to the given value
returns the external application
sets the update time to the given value
sets the user reference of the user to the user
sets the external application
sets the to the given location reference
updates the user reference
returns the path to the resource image path
sets the insert time in the model
sets the resource path to the resource path
sets the reference to the image icon
sets the version of the version
sets the user reference of the user to the user
updates the user reference
sets the insert time in the model
sets the system reference
sets the system reference
sets the user reference of the user to the user
sets the version of the version
sets the system transaction sequence number
sets the system transaction sequence number
sets the path to the image
sets the update time to update the update
sets the update time to the given value
returns a new queue model for this job
sets the location reference
sets the id of the resource
updates the user reference
updates the user reference
sets the version of the version
sets the version of the version
sets the patient id
sets the active ind
sets the intial script to be used in the script
sets the reason for the current
sets the deleted ind
sets the insert time in the model
sets the user reference of the user to the user
sets the reference to the service
returns the current printer location reference
sets the reference to the reference to the given
sets the identifier of the answer to the given value
returns the code display model code used to display the
sets the printer used to represent the given reference
sets the insert time in the model
sets the system change
returns the current model
sets the current printer model
returns the current printer ref
sets the system change system
sets the reference to the code printer code
sets the initial form id
returns the printer type ref
sets the reference to the code printer type code attribute of the
sets the system reference
sets the system system time
sets the insert time in the database
sets the system transaction sequence number
returns the test fixture
returns true if the test is a test
sets the user reference of the user to the user
returns true if the test is not a test
sets the test test test code
sets the insert new lines
sets the current test
sets the system reference
sets the test test test test fixture
returns the content of the help file
sets the language ref
sets the update time to the given value
sets the id of the resource
returns the content model of the current content
updates the user reference
sets the version of the version
sets the id of the resource
sets the last name of the last modification time
returns a copy of the file copy of the model
sets the system transaction sequence number
returns the directory where the file directory is stored in
returns the path to the directory
returns the path to the file
sets the active ind
sets the id of the file
sets the id of the resource
sets the user reference of the user to the user
sets the update time to the given value
sets the active ind
sets the foreign table ref table ref
sets the active ind
updates the user reference
sets the active ind
sets the insert time in the model
sets the version of the version
sets the status of this
sets the content type ref
sets the user reference of the user to the user
sets the status ref
sets the middle name of the middle of the
sets the insert time in the model
sets the inset of the area
sets the display sequence
sets the user reference of the user to the user
returns the entity table id
sets the entity table id
sets the system reference
sets the deleted ind
sets the status of this
sets the id of the resource
returns the access sequence
sets the access sequence
sets the visit status of the reference
sets the system transaction sequence number
sets the id of the resource
sets the of the person to the given one
sets the update time to the given value
sets the insert time in the model
sets the visit type reference
returns the file name of the file
updates the user reference
sets the file device name
sets the user reference of the user to the user
sets the active ind
sets the active ind
sets the version of the version
returns the file directory
sets the file directory
sets the scheduled time
sets the system reference
sets the nickname of the user
returns the file type reference
returns the nickname of the nickname
sets the file type reference
sets the file device name
sets the insert time in the model
sets the system transaction sequence number
sets the nickname of the nickname
sets the user reference of the user to the user
sets the file directory
returns the job status ref
sets the job status ref
sets the system reference
sets the file id
returns the reference to the scheduler
sets the key stroke
sets the reference to the scheduler
returns the topic reference
sets the system transaction sequence number
sets the topic reference to the topic reference
sets the file type reference
sets the system reference
sets the update time to the given value
sets the insert time in the model
sets the update time to the given value
updates the user reference
updates the user reference
sets the system transaction sequence number
sets the user reference of the user to edit
sets the prefix to be used for this node
sets the version of the version
sets the update time to the given value
sets the version of the version
returns the environment node of the model
sets the insert time in the model
updates the user reference
returns the path to the original file
sets the id of the component
sets the primary primary location of the abductor
sets the path to the original file
sets the version of the version
sets the user reference of the user to the user
returns the label for the reference to the label provider
sets the system reference
sets the system reference
sets the primary primary user primary reference
sets the reference to the label action ref
sets the system transaction sequence number
sets the database url
sets the system transaction sequence number
sets the update time to the given value
sets the database username
updates the user reference
sets the update time to be updated
sets the id of the resource
sets the version of the version
updates the user reference
returns the environment ref
sets the environment ref
sets the version of the file
returns the path to the code path code
returns the virtual text contents
sets the path to the code path code
gets the production of this production
sets the contents of the clipboard
returns true if the production is in the production
sets the id of the property
returns true if the production is not production
sets the production to the production
sets the production to the production
sets the suffix
sets the production of the production
returns the environment id
sets the active ind
sets the environment id
returns the default settings form id
sets the system reference
sets the default settings for the current workplace
sets the system transaction sequence number
sets the id of the resource
sets the hostname of the server
sets the id of the property
sets the active ind
gets the connectivity type reference
sets the reference to the physical type of the model
sets the ip address of the address
returns the node ref
sets the insert time in the model
sets the reference to the node reference
sets the system transaction sequence number
returns the node type ref
sets the user reference of the user to the user
sets the reference to the node type ref
returns the job action ref
returns the service port
gets the test patient ind
sets the job ref
returns the dns name
sets the port of the service service
returns the job controller ref
sets the dns name
sets the controller for the job controller
returns true if the patient is patient
sets the insert time in the model
returns the preferred height of the label
returns true if the patient is not a test
sets the id of the resource
returns the job script
sets the test patient
sets the user reference of the user to the user
sets the local hostname
sets the job script for this job
gets the filter ind attribute of the object
sets the system transaction sequence number
sets the test case
returns true if the filter is
sets the preferred height of the label
sets the view ref attribute of the object
sets the patient
returns true if the filter is not understood
sets the filter
sets the system reference
sets the active ind
sets the filter to be used for the filter
sets the update time to the given value
sets the filter ind
sets the system transaction sequence number
returns the name of the node queue
sets the system transaction sequence number
returns the preferred width of the label
sets the queue name of the node in the queue
updates the user reference
sets the id of the resource
sets the update time to update the value of the update
sets the insert time in the model
sets the version of the version
sets the id of the resource
updates the user reference
sets the user reference of the user to the user
sets the preferred width of the label
sets the version of the file
sets the active ind
sets the instance of the date instance
sets the value of the code cost cost ref code property
sets the active ind
returns the ip address of the printer
gets the job execution ref
sets the ip address of the address
sets the check digit
sets the job status ref
returns the left click action ref
returns the scheduler id
returns the printer port
sets the scheduler job id
sets the port to which this task is running
sets the system reference
returns the current
returns the expiry time
sets the current reference to the code printer code
sets the expiry time
sets the left click action
sets the system transaction sequence number
returns the printer tray ref
sets the printer tray ref
sets the update time to the given value
gets the link application control id
updates the user reference
sets the system reference
sets the version of the version
sets the id of the application
sets the insert time in the model
sets the index
sets the id of the resource
sets the system transaction sequence number
sets the user reference of the user to the user
sets the id of the item
sets the insert time in the model
sets the update time to the given value
sets the name of the
sets the cost of the item
sets the user reference of the user to the user
sets the active ind
updates the user reference
sets the background color of the background
gets the value of item location ref
sets the version of the version
sets the id of the resource
sets the reference to the item reference
sets the source reference for this model
returns the item quantity
sets the active ind
sets the quantity of the item in the model
sets the system reference
sets the charge item id
returns the component quantity
sets the active ind
sets the quantity of the component
sets the volume of the volume
returns the component reference for this component
sets the component reference for this component
sets the system transaction sequence number
sets the reference to the code unit code
sets the check digit
sets the update time to the given value
returns the label for the label
sets the barcode
updates the user reference
returns the current appointment for the model
sets the insert time in the model
sets the version of the version
sets the id of the resource
sets the user reference of the user to the user
getter for property item form type ref
sets the reference to the item form type
sets the description of this filter
sets the reference to the item icon
sets the insert time in the model
sets the id of the resource
gets the lot number
sets the active ind
sets the index
sets the lot number
sets the user reference of the user to the user
gets the value of the status ref property
sets the locked lock
sets the cost of the item
sets the insert time in the model
sets the system reference
sets the status of the appointment to the specified value
getter for property item form id
sets the active ind
sets the record state reference
returns the slot for the specified sequence number
sets the item form id
getter for property supplier business form id
sets the user reference of the user to the user
sets the status of the appointment to the specified value
sets the supplier business form id
returns the item image file id
returns reminders of the reminder attachment
sets the background color of the background
sets the source reference for this model
sets the id of the property
sets the item image file id
sets the system transaction sequence number
sets the system reference
sets the system reference
sets the update time to the given value
sets the item name
sets the active ind
updates the user reference
returns the item name
returns the completed time model
sets the duration of the task
sets the system transaction sequence number
sets the completed date
sets the system transaction sequence number
sets the item name index
sets the version of the version
sets the update time to the given value
getter for property item name sound
sets the update time to the given value
sets the insert time in the model
updates the user reference
sets the sound name of the item
returns the number of
sets the user reference of the user to the user
returns the item price
sets the version of the version
returns true if the calendar is hiding
updates the user reference
returns true if the calendar is hiding
sets the price of the item
sets the instance of the date instance
sets the date from the calendar to the calendar
sets the date to the
sets the version of the version
sets the insert time in the database
sets the hiding of the calendar
sets the user reference of the user who created the user
sets the insert time in the model
sets the owner reference of this object
sets the volume of the volume
sets the user reference of the user to the user
gets the status icon ref
sets the location reference
sets the id of the resource
sets the status icon for this model
gets the status change reason value for this
sets the status change
sets the system reference
sets the active ind
gets the value of the reminder ref property
sets the system reference
sets the reminder to the reminder
gets the reminder text
sets the system transaction sequence number
sets the reminder text
sets the update time to the given value
sets the system transaction sequence number
sets the system reference
updates the user reference
sets the insert time in the model
sets the update time to the given value
sets the user reference of the user to the user
sets the version of the version
gets the value of the med item package id property
returns the resource ref
returns the appointment instance model
updates the user reference
sets the resource ref attribute of the resource reference object
sets the system transaction sequence number
sets the duration from the time to the time
sets the med package id
sets the system reference
sets the version of the version
sets the update time to update the update
sets the id of the resource
sets the id of the resource
update the user reference
sets the system transaction sequence number
sets the update time to the given value
sets the model ref attribute of the model object
sets the version of the version
sets the active ind
sets the active ind
gets the appointment instance id
updates the user reference
gets the value of the price currency ref property
setter for property appointment instance id
sets the value of the price reference property
sets the version of the version
sets the file id
sets the insert time in the model
sets the user reference of the user to the user
returns the attachment model for this model
sets the insert time in the model
sets the system reference
sets the value of code recipients code
sets the system reference
returns the recipient message
sets the user reference of the user to the user
sets the model model
sets the system transaction sequence number
sets the id of the property
sets the instance of the date instance
sets the update time to the given value
updates the user reference
sets the version of the version
sets the system transaction sequence number
sets the active ind
returns the frequency of the current model
sets the update time to be updated
sets the id of the resource
returns the appointment id
returns the resource text
sets the id of the attribute
setter for property appointment id
sets the resource text
returns the slot of the slot
sets the slot of the sequence
updates the user reference
sets the active ind
sets the system reference
sets the active ind
sets the version of the version
returns the volume reference to the value of the volume
sets the id of the resource
sets the system transaction sequence number
sets the reference to the unit of the unit
sets the insert time in the model
sets the insert time in the model
sets the id of the resource
sets the user reference of the user to the user
sets the update time to the given value
sets the user reference of the user to the user
returns the time of the first time ind
sets the insert time in the model
returns the type of appointment in the model
sets the active ind
returns true if the time is a one time
sets the user reference of the user to the user
updates the user reference
returns true if the time is not one
sets the time in seconds to be used for the time
returns the message channel ref
sets the active ind
sets the id of the resource
sets the time in time to seconds
sets the version of the version
sets the channel ref to the given channel
sets the time in milliseconds to use for the time
returns the message flag ref
returns the repeat value
sets the message flag
sets the repeat value for the current row
sets the file id
returns the message format ref
gets the value of the repeat value unit property
sets the repeat unit attribute of the object
sets the message format ref
sets the insert time in the model
sets the negative comparison between the two
sets the active ind
returns the message template ref
sets the user reference of the user to the user
getter for property appointment form type ref
sets the insert time in the model
sets the template ref
sets the appointment type reference to the specified value
sets the system reference
sets the user reference of the user to the user
getter for property appointment type group ref
sets the system reference
sets the group type group ref
sets the system transaction sequence number
returns the appointment type icon ref
returns the column gap between the columns
sets the resource text
sets the system transaction sequence number
sets the value of the appointment type icon ref
gets the sending address of the sending of this message
sets the update update date
sets the slot of the sequence
sets the update time to the given value
returns the appointment type ref
sets the sending of the sending of the message
gets the value of the message status ref property
updates the user reference
updates the user reference
sets the column gap between the columns and the column
sets the value of the appointment type ref
gets the display owner ref
sets the system reference
sets the message status ref
sets the sending of the sending of the sending of this component
sets the version of the version
sets the version of the file
returns the receiving address of the receiving message
sets the background color of the background
sets the receiving address of the address
sets the subject of the email
gets the block schedule ind value for this block type
sets the system transaction sequence number
returns the receiving owner of this node
returns true if the schedule is a block schedule
sets the receiving channel ref
sets the update time to the given value
sets the system reference
returns true if the block is a block of schedule
returns the text of the recipient of the message
updates the user reference
sets the block schedule
sets the text of the recipient of the text
sets the not block schedule for the schedule
returns the number of messages in the left of the message
sets the version of the version
sets the block schedule for the block
sets the id of the resource
sets the system transaction sequence number
sets the system reference
sets the update time to the given value
sets the active ind
returns the appointment type id
updates the user reference
sets the system transaction sequence number
gets the default appointment status ref
setter for property appointment type id
sets the default appointment status for this component
sets the update time to the given value
sets the version of the file
updates the user reference
sets the value of the visit id property
sets the version of the version
sets the model ref parameter
gets the conflict strategy reference
returns the schedule time for this schedule
sets the conflict strategy for the conflict reference
sets the id of the resource
sets the id of the resource
sets the id of the resource
sets the active ind
sets the location of the facility to the given location
sets the active ind
sets the duration of the task
sets the active ind
sets the foreground color of the foreground
sets the insert time in the model
returns the duration unit reference
merges the given model to the model
sets the user reference of the user to the user
sets the duration unit for this unit
returns the reference to the schedule template ref
getter for property appointment frequency ref
sets the reference to the view reference
sets the reference to the template
sets the id of the resource
sets the reference to the parameter ref
sets the insert time in the model
returns the schedule type ref
sets the value of the appointment frequency
returns the free text of the free text
sets the schedule type ref
sets the user reference of the user to the user
returns true if the text is free
sets the system reference
returns true if the text is not free
sets the slot of the sequence
sets the insert time in the model
returns the current value of the appointment priority ref
sets the text of the free text areas
sets the system reference
sets the reference to the code code property
sets the text of the free text area
sets the user reference of the user to the user
sets the system transaction sequence number
returns the appointment start dt
sets the free text
sets the update time to the given value
sets the appointment start appointment
sets the system transaction sequence number
returns the time start time
updates the user reference
sets the insert time in the model
sets the source reference for this model
sets the start date of the schedule
sets the id of the resource
sets the update time to the given value
sets the version of the version
sets the user reference of the user to the user
updates the user reference
sets the active ind
sets the version of the version
sets the check digit
sets the security context ref
returns the schedule stop scheduling
sets the id of the resource
sets the stop time of the schedule
sets the status of the appointment to the specified value
sets the form id
gets the appointment stop dt
sets the active ind
sets the appointment that is notified when the appointment is selected
sets the system reference
setter for property appointment id
sets the index
sets the system reference
sets the insert time in the model
sets the insert time in the model
sets the system transaction sequence number
sets the user reference of the user to the user
sets the user reference of the user to the user
sets the value of the appointment type ref
sets the system transaction sequence number
sets the update time to the given value
sets the source reference for this model
sets the system reference
sets the system reference
sets the update time to the given value
updates the user reference
gets the patient portal template
updates the user reference
sets the system transaction sequence number
sets the system transaction sequence number
sets the version of the version
sets the update time to the given value
sets the version of the version
sets the update time to the given value
updates the user reference
sets the duration of the task
updates the user reference
sets the patient portal template
sets the version of the version
sets the duration unit for this unit
sets the version of the version
sets the insert time in the model
sets the user reference of the user to the user
returns the preferred size height of the preferred size
sets the ordering user reference to the given value
sets the id of the resource
sets the status change
sets the id of the resource
sets the preferred size height of the preferred size
sets the system change
sets the active ind
sets the active ind
getter for property default appointment type ref
sets the system change system
returns the preferred size of the preferred size of the preferred size
sets the default appointment type for this component
returns the appointment instance for the model
sets the system system time
sets the id of the resource
sets the preferred size of the preferred size
returns the current model
sets the active ind
sets the insert time in the model
sets the id of the resource
gets the ind attribute of the visor grafo object
sets the system reference
sets the user reference of the user to the user
sets the insert time in the model
returns the frequency id
sets the frequency id
sets the user reference of the user to the user
returns true if this is
sets the location reference
sets the insert time in the model
sets the resource id
sets the user reference of the user to the user
returns the resource type ref
sets the system transaction sequence number
returns true if the is not
returns the quantity of the resource
sets the system reference
sets the resource type ref
sets the quantity of the resource
sets the active ind
sets the security context ref
sets the title
sets the start date of the schedule
sets the
sets the system transaction sequence number
returns the title abbreviation
sets the form id
sets the update time to the given value
sets the title of the abductor
updates the user reference
returns the slot duration
sets the value of the code code property
sets the not
sets the duration of the slot
sets the update time to the given value
sets the version of the version
sets the stop time of the schedule
gets the slot duration unit reference
sets the slot duration unit
sets the value of the appointment frequency
updates the user reference
sets the system reference
sets the ind attribute of the object
sets the reference to the code code property
sets the version of the version
sets the schedule type ref
sets the system transaction sequence number
sets the appointment start appointment
sets the update time to the given value
sets the system reference
updates the user reference
sets the version of the version
sets the record ref
sets the system transaction sequence number
sets the update time to the given value
sets the status of the appointment to the specified value
updates the user reference
gets the repeating section view reference
sets the appointment that is notified when the appointment is selected
sets the version of the version
sets the view section view
sets the value of the appointment type ref
sets the report report
sets the duration of the task
sets the duration unit for this unit
sets the insert time in the model
sets the user reference of the user to the user
sets the ordering user reference to the given value
sets the scheduled time
gets the status change time
sets the date time change
sets the arrow head action ref
sets the status change
sets the system reference
sets the right click action
sets the system transaction sequence number
sets the title
sets the title of the abductor
sets the update time to the given value
updates the user reference
sets the user id
sets the version of the version
sets the id of the resource
returns the report image for the model
returns the section column spec
sets the id of the resource
sets the id of the property
sets the active ind
sets the id of the resource
sets the column spec for the column
sets the active ind
returns the user id
returns the user ref id
sets the active ind
sets the user
sets the id of the resource
sets the active ind
sets the background color of the background
returns the number of columns in the control table
sets the insert time in the model
sets the context reference to the given value
sets the user reference of the user to the user
returns the report id
sets the reference to the custom controller reference
sets the report id
sets the reference to the custom controller reference
sets the control columns control columns
sets the system reference
sets the insert time in the model
sets the default settings form
sets the user reference of the user to the user
sets the system transaction sequence number
returns the jasper file id
sets the id of this object to the specified value
set the jasper file id
sets the update time to the given value
returns the section layout
getter for property file id
updates the user reference
sets the file id
sets the version of the version
sets the reference to the code form code property
sets the insert time in the model
sets the view ref attribute of the object
sets the active ind
sets the insert time in the model
sets the user reference of the user to the user
sets the check digit
sets the layout of the section
gets the value of the report icon ref property
sets the user reference of the user to edit
sets the reference to the report icon
sets the report ref
set the jasper file id
gets the report sql
sets the file id
sets the report sql
sets the form id
returns the section row spec
sets the view ref attribute of the object
sets the system reference
returns the pdf file id
sets the pdf file id
sets the index
sets the preview file id
sets the system transaction sequence number
sets the report ref
sets the section row spec
sets the insert time in the database
sets the update time to the given value
sets the report sql
sets the system reference
gets the value of the report type ref property
sets the user reference of the user to the user
updates the user reference
sets the report type ref
sets the source reference for this model
sets the system reference
sets the version of the version
sets the system transaction sequence number
returns the number of sections in the section
sets the id of the resource
sets the system reference
sets the system transaction sequence number
sets the update time to the given value
sets the system transaction sequence number
sets the system transaction sequence number
updates the user reference
sets the update time to the given value
sets the active ind
sets the update time to the given value
updates the user reference
returns true if the section is expanded
sets the version of the version
sets the check digit
update the user reference
sets the version of the version
returns the xslt stylesheet id
sets the version of the version
sets the html xslt file id
returns the xslt stylesheet file id
sets the id of the resource
sets xslt xslt file
returns true if the section is expanded
sets the index
sets the active ind
sets the expand section expand
sets the background color of the background
sets the insert time in the model
sets the user reference of the user to the user
sets the expand section expand
sets the source reference for this model
sets the system reference
returns the class of the model
sets the number of pages that are expanded
sets the system transaction sequence number
adds a new base object to the list
removes the object from the list
returns the user name
sets the display sequence
sets the update time to the given value
returns the modified value of this field
returns the name of the field
returns true if the user is a new id
sets the modified value of the property
updates the user reference
returns true if this is not a
copies the given display into this class
sets the location of the facility to the location
returns true if the given column is modified
sets the id of the resource
gets the section view ref
returns true if the field has been modified
sets the id of the abductor
sets the id of this object
returns the database table field model for the database table
sets the version of the version
returns the hide display area
resets the modified state of the document
returns true if this object has a unique identifier
returns true if the source identifier is a source
sets the id of the resource
resets the modified time of all the modified
returns true if the display is hiding
this method is used to display the
sets the active ind
returns the short display name
returns true if any of the modified categories are modified
returns true if the display is hiding
sets the section view ref
checks if the given id is the id
compares two objects
checks if the given id is a
sets the data type ref
sets the display display
returns true if this is empty
sets the display display
merges the model with the given model
returns the value of the data type
sets the hide display area
returns true if the value is null or null if not null
sets the active ind
compares this object with the specified object for order
sets the id of the resource
returns the database table name
sets the insert time in the database
sets the database table name
sets the insert time in the model
sets the user reference of the user to the user
sets the active ind
returns the value of the specified property
gets the auto assign seq ind
returns the location id of the location
sets the user reference of the user to the user
returns true if the auto assign seq
sets the location id of the form
sets the auto assign seq
returns the date time value for the given model
sets the reference to the selected action
sets the system reference
returns the user group model for this user
sets the auto assign seq ind
sets the insert time in the model
returns a parameter model for the given parameter
sets the location icon reference to the icon
this method returns a parameter model for the given parameter
sets the user reference of the user to the user
returns the value of the column at the specified index
sets the system transaction sequence number
returns the migration migration where sql migration sql where migration
sets the index fields for this field
returns true if the current time is in the time
sets the migration migration migration sql migration statement
gets the value of location status ref
sets the update time to the given value
returns whether the current instance is not null
gets migration ref type
returns the role of the user role
copies the time from the specified time to the current time
sets the location status of the reference
sets migration migration ref
updates the user reference
getter for property model cache type ref
sets the reference to the model that is being edited
sets the hql order by hql
sets the location type reference
sets the id of the user
returns the code base model code that is appended to the
returns the average durations of the average of the
returns the model of the model
returns the class that is currently being used for the class
sets the form id
returns the id of the hql
returns the hql
returns true if the model is model
returns the sql id for the given id
returns true if the search result has a search results
sets the search results
gets the patient location ind attribute of the pvmsystem control object
sets the location of the facility to the given location
returns true if the model is not model
returns the hql
returns the end time model for this time
returns the hql full database type
returns the generation script
returns true if the patient is a patient location
sets the model
returns the time model for this time
sets the script to be fired
returns the start time model for this time
sets the model to be used for the model
returns true if the patient is a patient location
returns the start date of the current calendar
sets the model model ind attribute of the pvmsystem control object
sets the patient location
sets the active ind
returns the field name
returns the identifier source ref
sets the patient location
sets the source ref
sets the birth time
sets the patient location
sets the id of the resource
returns the identifier suffix
gets the primary contact form id
sets the value of the term id property
sets the suffix to be used for the identifier
sets the package name
returns the identifier type ref
sets the primary primary contact date id
sets the value of the code code property
returns the primary column
returns the nearest hour model
sets the ref type ref
returns the schedule ind
sets the primary column
sets the version of the version
returns the subtract days
returns true if the schedule is a schedule
returns the date time model for the specified number of days
sets the insert time in the model
returns the subtract hours for the specified hours
sets the source reference for this model
returns true if the schedule is not scheduled
returns the default location reference
sets the user reference of the user to the user
sets the schedule
sets the default location reference to the given location
returns the match unique ind
sets the system reference
sets the not scheduled schedule
sets the time zone offset
returns true if the is unique
sets the schedule ind
returns true if the is unique
returns the day of month
sets the match unique
returns the data hash value for this time
sets the exact match for the given match
returns the time zone offset
sets the form id
sets the system transaction sequence number
sets the match unique ind
merges the given model and a model match to the given model
returns true if the date is on or off
sets the system reference
sets the system reference
returns true if the date is after the specified date
returns the patient model model
returns true if the value of the given date is before before
sets the first name of the person
returns the time in milliseconds to be used to display the time
returns the patient model
sets the system transaction sequence number
sets the system transaction sequence number
returns true if the given date is before the given date
returns a base model for the given base class
returns true if the given date is after the given date
sets the update time to the given value
sets the update time to the given value
returns true if the date is on or after the given date
sets the focus on the focus
returns true if the model has patient model
sets the update time to update the update
updates the user reference
checks whether the given class has a query model
updates the user reference
sets the version of the version
returns the query model for the given class
updates the user reference
sets the insert time in the database
sets the version of the version
returns the view patient query model
sets the id of this component
returns true if the model has a patient view model
sets the version of the version
sets the user reference of the user to the user
sets the system transaction sequence number
sets the id of the resource
returns the view visit visit visit
sets the last name of the user
returns true if the model has a view model
sets the active ind
returns the error message
sets the error address of the error
sets the active ind
gets the address type ref
sets the address type reference to the given address
returns the city text
sets the free text
returns the city reference
sets the city reference
sets the middle name of the user
gets the country value for this country retrieve
sets the text of the country label
gets the county text
sets the text of the county
gets the county reference
sets the county reference
sets the source reference for this model
sets the insert time in the model
gets the state field type ref attribute of the field value object
reset the password for the password reset
sets the user reference of the user to the user
returns the name of the field to be used for the
returns true if the indicator is a indicator
returns the field name of the field
sets the id of the resource
sets the insert time in the model
sets the state field type ref
returns the model type
gets the primary language ref
sets the user reference of the user to the user
returns the value of the class
returns the group reference
returns the last word in the string
sets the primary language reference
returns the reference for this field
sets the notes
sets the active ind
returns the provider form id
gets the other designation
returns the time zone
sets the check digit
sets the id of the form
sets the value of the other designation
returns the valid attribute of the object
gets the suppress listing ind
returns true if the user is a view
returns true if the view is not not a view
sets the reference to the role of this role
returns the state of the text of the
sets the text of the current state of the text area
sets the form id
sets the source reference for this model
returns true if the listing of the listing of the query is
sets the state reference
returns the value of the parameter as a parameter
sets the suffix
sets the value of the street
sets the index
sets the system reference
sets the id of the resource
sets the system reference
sets the system reference
returns true if the listing of the listing of the query is
sets the insert time in the model
sets the system transaction sequence number
sets the system transaction sequence number
sets the user reference of the user to the user
sets the active ind
sets the suppress listing
sets the update time to the given value
sets the update time to the given value
sets the system transaction sequence number
sets the comparison operator of this operator
sets the source reference for this model
updates the user reference
updates the user reference
sets the data type ref
sets the system reference
sets the version of the version
sets the version of the version
sets the update time to the given value
sets the value of not invalid
checks if the specified time range is valid
returns true if the given time matches the time of this rule
updates the user reference
sets the system transaction sequence number
sets the update time to the given value
increments the counter by the specified amount
updates the user reference
sets the user login
sets the suppress listing ind variable
sets the version of the version
gets the user pin
sets the insert time in the model
sets the user pin
sets the user reference of the user to the user
returns true if the component has a component
returns true if the form display has a form display
sets the model ref attribute of the model object
returns the suppress sort ind
returns true if the model is base model
sets the version of the version
returns true if the sort is a sort flag
sets the negative comparison between the number of
returns true if the current sort flag is set
sets the reference to the parameter ref
this method is invoked when an action is sent to the user
sets the suppress sort
sets the system reference
sets the sort criteria
cleans the database
returns the time model for the given key and time
sets the system transaction sequence number
get primary key value
remove a method from the database
allocate a new group
sets the suppress sort
builds a new cache with the specified name
sets the update time to update the date
updates the user reference
returns the identifiers for the patient type
runs the
checks if the contents of the given document is valid
sets the system reference
this method initializes this
returns the selected value
sets the value attribute of the object
adds a new child to the table
returns the child context of the given id
returns the context id of the child table
returns the list of for a given
returns true if the context id is child context
returns the number of tables in the database
this method is invoked when the user selects the messages
this method initializes this
adds a new child to the list of children
adds a new table to the list of
returns the selected object
this method is invoked when a table is updated
sets the value of the selected object
clears the lists
adds the action to the action
sets the value of the term id property
sets the value of the code code property
prepares the edit session
sets the version of the version
invoked when the interval of the interval changes
this method is called when the user selects a new value changed
invoked when an action occurs
sets the system transaction sequence number
adds an object to the list
removes the object from the list
update the application control id
returns the application control id for the given object
this method is called by the framework when the component is changed
reports a property change
sets the value
clears the text of the instruction text
adds a new text to the
applies the model to the model
clears the text of the instruction text
configure mediator
returns the value of the field
returns the title for the tab
gets the table access ref attribute of the object
sets the font
returns the listener that will be notified when the selected tab is
sets the reference to the table
adds a new item to the list
returns the template control ind
returns true if the template is a control
prepares the user to edit the current selection
sets the editable state
returns true if the template control is not a
sets the value of the field
returns true if the instance is a free
sets the
sets the value of the given object
adds a select action to the list of the
sets the template control
sets whether the text area is editable
sets the value
sets the current template control
adds a listener to the model
sets the editable property
sets the value of the text field
returns the value of the text field
adds a listener to the
sets the value attribute of the object
returns the action associated with this menu
sets the action to be used for the action
adds a menu item to the menu
adds a new menu to the menu
sets the action to be used for the action
convert a string to a string
sets the editable property
sets the value of the date
sets the value
returns the value of the content
sets the template control
sets the value of the text field
adds a listener to the model
adds a listener to the
sets the flat
returns true if this instance is free
sets the instance
update the model with the model
adds containers to the given container
run the document
checks if the given document is valid
returns the control layout
sets the control definition
returns the height of the image
sets the height of the image
returns the width of the image
sets the width of the image
removes the selected row from the table
returns the control
applies the given model to the given table
sets the control
sets the default size of the
sets the model to be edited
refreshes the original model
enables disables the lock of the
updates the listeners
bind the request to the given bind control
returns the model at the specified index
adds a new row to the model
adds a new row to the model
returns a string representation of this object
adds a list of model to the model
sets the template for the template
inserts a new row at the specified index
inserts a new row in the model
removes the specified row from the model
sets the rendering of the cell
removes the given from the list of
sets the model class
sets the resize columns
sets the resize columns
sets the original list of the
tests if the given row is the expected
move selection up to the specified one
returns true if the row can move up the selected row
load the table
returns true if the row can move the selected rows
load multiple rows from the given table
sets the foreground color
displays the given chunk of the current chunk
sets the background color of the component
returns the processing instruction label
sets the column editing column
register the focus to the focus
displays the given rows
clears the rows
sets the value of the document
initializes the panel
returns the value of the document
sets the state of the buttons
adds a listener to the model
load the background for the specified component
this method is called when the model is refreshed
applies the model to the model
applies the model to the model
adds a container to the given container
adds a container to the given container
adds containers to the model
applies the model to the model
creates the blur
adds containers to the model
sets the term id
adds a listener to the model
returns the default node format
sets the default node format
returns true if the selected node is selected
initialize the tree
adds the listeners to the tree
returns the selected node
load the
load the background
returns the selected object
debug method to dump the contents of the tree to a given
returns the node label
sets the node label
returns true if the action is executable
adds all the nodes in the given collection of nodes
executes the action
returns the value of the field
adds new data to the model
delete all nodes in the tree
build the layout spec
update the nodes in the model
sets the value attribute of the object
removes the specified offset from the list of tokens
this method initializes this
sets the term sequence
highlights the given text
returns the selected item in the model
returns the selected model
expands all paths in the tree
adds a component to the control panel
sets the current row to the current row
expands the tree
returns a string representation of this object
returns the growth of the growth row
sets the renderer to be used for the
returns the growth of the specified row and height
build the row spec
returns the text controller in the text area
sets the editable state
sets the value of the current date
returns true if the controller is currently running
returns the selected value
sets the tree model
configures the
adds listeners to the button
returns true if the controller is not rtl
returns the action listener for the action
adds a new item to the table
removes the specified item from the list of items
inserts a new item into the table
returns an action listener that will be used to remove the selected
returns the listener that moves the selected item in the table
returns the listener that moves the selected item in the table
returns the number of rows in the table
initializes the panel
returns the action listener for the selected action
returns the specification for the given specification
adds a listener to the
creates and initializes the remove down button
this method is called when the action is refreshed
sets the text controller for the controller
gets the cmd
executes the select select select action
returns the
sets the
returns the command to be executed
sets the command to be executed
returns the cmd
sets the cmd parameters
show or hide the mouse wheel event
creates a control for the form control
creates the form control
sets the label
sets the text controller for the controller
adds the action to the select list of items
processes the event
creates an image for an interaction
sets the text controller for the controller
adds the given action to the table
returns the number of columns in the text field
replaces the contents of the table
sets the column size in the text field
returns the view with the specified id
returns true if the component is in the context of the specified
returns true if the context contains a component with the specified context
sets the height of the unit in units
returns the component with the specified context reference
returns the component with the specified id
returns true if the component is label
invoked when an action occurs
transfers focus to the current cell editor
returns true if the component is already in the context
initializes the local variables
returns the label with the specified context
sets the width of the unit in units
returns the label with the specified id
returns the label with the specified name
returns the scroll component with the specified name
returns the name of the form control with the specified name
sets the update time to the given value
validates the script
sets the value of use fixed width columns
updates the user reference
returns the references for this
returns the references for the given component
get a script control for the given control
returns true if the column is in the end of the table
returns true if the column is in the first column
returns the panel
this method is used to send a action
returns true if the panel has a panel
checks if the fields are empty
checks if the form fields are empty
returns the control with the specified id
sets the filter to be used for the filter
returns the component with the specified name
returns the parent panel of this parent
returns the control with the specified name
returns the user defined tag
sets the user defined tag for the user defined tag
sets the value of the code data type code property
sets the value of the code term id code property
sets the version of the version
sets the visible visible
puts a new object into the cache
clears the current lock
adds a sql query to the given sql statement
this method is used to convert the given sql to the given
convert the to a long
returns the model class for the given reference
adds a parameter to the list of parameters
adds a list of parameters to the list
puts a value in the cache
returns the hash value of this object
creates a sound index object
removes a key from the cache
creates a string index for the given string
clear the cache
creates a work slot
call the method on the call object
returns the value of the column value
creates the data models
adds a reference to the group
creates the model reference
this method is called when the application is loaded
creates a group reference
creates the schema table for the table
this method is called when the panel is selected
this method is used to read the contents of the file
inserts the given model into the table
migrate the current select data to the database
upgrade the database to the database
creates the data models
returns the table model
saves the rows to the file
creates the model sets the model sets the model sets the database
process a row
process a row in the table
creates the models
create an instance of
clear the cache
creates the refs for the table
creates the
store the transaction to the given transaction
this method is called when the database is
returns the item form for the given item
returns the item form for the given item
returns a specific evolution of the given type
get the poll for the given call
call all commands in the command
checks if the given column is missing
this method is called to get the database database database database
stores the given service call to the given interface
sets the table model
returns the name of the table
starts the service
returns a med
returns the ref for a particular leg item
get a model for the given
returns the table model for the given table
store error message to the object
checks if the table is a child of the given table
call all the command on the command
this method gets the interface message for the given interface
call the service method
returns the interface message for the given interface
returns the interface processor for the given interface
returns the interface processor for the given interface
returns the interface processor for the given interface
clear the cache
process a message in the database
returns the interface transaction for the given interface
retrieves a evolution model for the given effect
get the interface transaction interface for a given interface
process transaction transaction
sets the inbound reference to the given service
retrieves a evolution model from the given effect
stores the given object in the database
get account with the specified id
get account by id
retrieves a specific product from the database
returns a specific for the given call
returns a specific gateway for the given type
returns the form definition model for the given form
get the form definition model for the given vo
returns a specific gateway item for the given
returns the for the given item
returns the state of the model state
returns a specific gateway type for the given type
this method is called to perform the creation of a new
returns the charge algorithm for the given call
checks whether the table name is a table
returns the evolution item type for the given type
returns the state of the model state model
returns the charge algorithm for the given type
returns the table column model for the given column
returns the second table column
returns a specific for the given leg and
clear the cache
returns a specific for the given item
this method stores the patient in the database
returns the charge item model for the given service id
returns the type of the form type
returns the charge item model for the given
returns the type of the form type
this method stores the current record in the database
get application view by ref
returns the application control for the specified control
stores the record in the database
returns the application control for the specified column
returns a user model object
returns the tree
this method returns the panel node of the tree
returns the user model with the given id
retrieves a specific product from the database
returns the user by reference id
store the record in the database
this method creates a reference to a model
retrieves a specific evolution model from the product
stores the reference of the given relation
checks if the application has a valid
returns the panel node for the given child
stores the given access to the current datastore
returns the container by referenced by the specified id
this method creates the merge page
get access to the access service
this method adds all the to the given container
returns the form record for the given record
returns the container associated with the specified call
stores a new in the database
get access to the access control
get application panel
store the given call to the database
gets the application panel tree model for the given id
returns a form model object that can be used to instantiate a
get the date value for the specified setting
returns the primary column for the table
returns the location type for the specified location
returns a form model object that can be used to instantiate a
returns a specific med
returns the location type for the given type
returns the primary column name for the given table name
get the string value of a specific setting
get a specific evolution from the
returns a string value for the specified setting
returns the first singular table name
stores the given object in the given location
returns the charge for the given service id
get the value of a setting
returns the reference group for the specified group
gets the charge charge for the given
get the reference to the group
get integer value
checks if the context is a
get a single setting
returns the ref tree for the given ref
returns the application column pref version
returns the ref tree for the given
returns the application column pref version
returns the tree
creates a new instance of the given child node
creates a new instance of a fitnium variable
this method returns the model for the specified call
removes the reference from the cache
returns the reference for the given call
get reference no cache
store the in the database
returns the reference for the given type
get reference to cache
returns the reference for the specified group reference
clears the list
returns the reference for the given group
get the for a given
this method will store the given code code in the
returns the reference to the reference to the given group
returns the dialog for the given call
checks if a reference is a reference
get the for the given
returns the order instance container container for the given container
returns the ref of the specified reference
get the order for the given container
gets the application control pref
get the ref of the given
this method is used to get the display for the given reference
gets the application control pref
get the display model for the specified reference
returns the panel tree model for the given child
returns the display for the given reference
returns the display for the given reference
returns the value of the specified attribute
returns the value of the specified display as a string
returns the value of the specified short code short code
stores the given code code in the database
this method is responsible to create a facility agreement
returns the display model for the given id
returns the instance for the given
this method creates a new reference to a child reference
returns the instance for the given type
returns the display for a given id
creates a facility agreement
create an instance of
returns the value of the given id
returns the value of a short display value
duplicates a duplicate of the
stores a template in the database
returns the reference for the given reference
returns the order instance state instance for the given state
returns the next value in the database
get the order instance state
returns the application control type for the specified type
retrieves a template with the specified id
returns the transaction data for the given transaction
returns the reference for the given reference
get the application control type for the specified type
gets a template from the given template
executes the call method
get the script contents by reference
returns a object based on the given class
returns the record state record for the given state
returns the first search result for the given model
returns the order instance for the given service
get the record state state
stores a new instance in the database
get a facility account
returns the order of the given
adds the given model to the list of models
get access to the access model
gets a facility account
returns the translation model for the given call
returns the translation model for the given translation
gets the application panel pref
returns the order state of a given service
returns a list of sql parameter objects
returns the order state of a given state
returns the script by reference
gets the application pref pref
remove a relationship between the given parent and the parent
returns a form model object that can be used to instantiate a
get access to reference facade
returns a form model object that can be used to instantiate a
returns the conversion unit model for the given type
returns the record type type for the specified record type
retrieves the schedule for the given call
returns a unit model for the given type
this method creates a new reference to a child reference
get the schedule for the given type
get the record type type
returns the order type for the specified type
get the order type
this method is called by the framework to set the layout directives
this method is called when the layout is selected
update the patient with the given id and update the service
this method will be called to store the application in the database
stores the given service in the database
clear the cache
inserts a patient into the database
inserts a patient into the rms rms rms rms rms rms
returns the order of the given service
returns the tree builder for a given service
returns the order of the given service
get the order of the given
returns the tree object for the call
gets the application panel tree
extract the order from the given order id
returns the record item for the given record
returns the term tree model for the given call
gets the application panel tree
returns the invoice format for the given code
returns the invoice format for the given format
returns the tree model for the given call
returns the record item for the given record
creates a new child reference node
stores the patient
returns the view order instance instance
returns the order instance for the given instance
prepares a new order for the given template
returns a script with the given id
returns the ref id for the given reference
this method returns the invoice payment for the given payment
returns the ref id for the given reference
returns the invoice payment payment method
returns the patient model for the given patient id
get the order catalog controller
get the order catalog controller
returns the ref id of the specified group
stores the user in the database
returns the reference id for the given group
this method creates an entity object from the database
this method returns the invoice type for the given type
sets the patient
get the application panel for the specified application
returns the value of the specified identifier
get invoice type
get the boolean value of a specific setting
returns the patient id from a transaction
this method is used to display the model for a specific leg
returns the term concept concept model
get application panel
returns the time in seconds
returns a term concept concept
get the version of the call
returns the user by user name
returns the database version of the call
stores the patient
get the boolean value of a specific setting
returns the patient for the given id
stores the patient in the database
this method will store the of the invoice
this method stores the of the given type
stores the template
returns the terms of the given query
stores the specified group
stores the specified model
stores a template in the database
returns the identifiers for the patient type
returns the invoice for the given id
returns the terms of the given query
stores the specified group and returns the value for the
returns the invoice invoice for the given id
get the database database database for the given call
get patient id for a given
change the role of the user
get application view
change the location of the given user
returns the order type of the given type
returns the patient id for the given id
get application view model
returns the role of the user
stores the given customizer
get the portal user object by user login
returns the type of the given type
store the in the database
returns a term type model
get the for a given
returns the display for the category specified by group
returns the form definition transition model for a given state
get the for the given
start the refresh thread
adds a job to the scheduler
stores the current audit
returns the content type for the specified content type
get content type
get the visit id for the given leg id
this method will be called by the scheduler
returns the job scheduler model for the given job
returns true if the cache has changed
execute a job in the scheduler
this method is called when the user modifies the cache key
returns a job model for the given job id
returns the audit model for the given service id
this method will store the current state of the given service
executes a term
start the job scheduler
get the audit model for the given
starts a job scheduler
returns the environment for the specified call
returns the item location for the specified location
returns the patient list with the given patient id
returns the item location for the given item
returns the environment for the given type
this method will be called by the service to notify the service
gets the patient list model
returns the contents of the given file
stores the given file in the database
get the local file local file
returns the term model for the given query
get the file model for the given call
returns the item type for a specific type
returns the item type
get the file with the given file
returns the term model for the given
returns the time in the database
returns the language ref identifier
this method will store the item in the database
gets the patient portal user
gets the patient portal user
returns the item with the given id
store the given location in the database
returns the item with the given item id
returns the content of the help content
returns the content of the help of the given
returns the controller controller for a specific service
stores the patient in the database
returns the location model for the given location
returns the controller controller
get the patient object for the given patient
get patient with patient id
returns the location of the location specified by the id
this method is used to clear the service
stores the given appointment in the database
returns the location model for the given location
this method will store the appointment in the given patient
this method will store the model to the specified model
returns the appointments for the specified appointment
returns the appointment status for the given appointment
returns patient for appointment
returns the status of the appointment
get patient view
returns the icon for the specified resource
this method stores the appointments in the database
get the report type
get the model type
returns the location tree
returns the icon for the given
this method will be called to the report
gets the portal user
returns the report
removes a resource from the schedule
get the report for the given
gets the portal user
stores the given call to the given database
returns reference to cache
returns the last command executed
sets the last command executed
executes the session
executes the given session
returns the appointment type for the specified appointment
connect to the database
executes the given session
get the appointment type for the given appointment
returns the permission model for the given call
gets the view patient patient object
executes the given query
call the method on the call object
this method will store the job in the database
creates a view patient model object
returns the permission model for the given type
visit a model visit
this method will be called to store the appointments in the database
returns a job model for the given call
visits a model object
this method will be called to notify the model that the given
get view patient form
get the job for the given job
store the given in the database
returns the appointments that the appointment has been published
this method will be used to store the given
returns a tree model for the given model
get view patient form
returns the appointment model for the given appointment
returns the type of the given call
retrieves the view patient record
gets the visit type
saves the model to a database
returns a printer for the given call
gets the view patient record
get the current printer
executes a method call
returns the scheduler instance for the given scheduler
store the given object in the database
returns the scheduler instance instance
get the visit model for the given call
returns the frequency model for the given call
gets visit visit
get the frequency model for the given call
returns the reference id for the specified resource
waits until the thread is paused
checks if wakeup process is enabled
polls the specified processor
process a command
wakeup method called by the
returns the processor by key
this method is called to notify the command processor that a command
run the thread
returns a long reference to a resource
consumes the next time
adds a new object to the queue
pause the paused state
process a command
this method is called when the processor encounters a
returns the job scheduler model for the given job
refresh the records in the database
this method will store the plugin in the database
stores the given message in the database
returns the scheduler job for the given job
refreshes the records in the database
refreshes the list of the records in the database
returns the message for the given call and call
returns true if the group reference group reference is a group
returns true if the service is a match
adds the given parameters to the list of parameters
returns the message for the given call
returns the plugin object associated with the given id
sets the tree model
compares this object with the specified object for order
refresh the records in the database
get the plugin from the plugin
refresh the records
refresh the list of the records in the project
this method is used to sign the
refreshes the list of the
refresh the records in the database
store the server
refresh the records in the database
stores the given reminder to the database
returns a server with the specified id
refresh the list of
returns a server with the given id
this method is invoked when a client is ready to be
creates a new
get the reminder for the specified call
get the reminder to the specified
edit the given order
this method is called by the framework to display the order
this method visits a
refreshes the patients
retrieves the role group for the given group
refresh the list of patients
returns the first resource that is currently assigned to the given
creates a new
create a new type
creates a phone number
download a download request
creates a directory name with the first directory name and suffix
creates a new
download the download process
get the role group for the given group
add a conversion type to the list
this method is called when the service is deployed
returns the conversion conversion conversion measure unit
creates a new
returns the model item for the given appointment
convert units units to units units
returns the value of this value by argument
returns the value of the fraction of this rational
returns the value of the given decimal places
returns the conversion measure from the unit
creates a new
execute a query
refresh the records in the database
returns the location of the location reference
returns the default appointment type for the given time
stores the given patient in the database
returns the number of rows in the table
start the document
this method is invoked when the form type is started
start the
this method is called when the tab is closed
returns the end of the image
adds a separator to the table
end the html document
starts the
this method will store the role of the given service
end the current template
retrieves a resource schedule schedule for the given leg
adds a separator to the given
updates the form
adds a new text to the text
adds a text to the text area
adds a text to the text
adds a text to the text area
adds a text to the text area
adds a text line to the text area
returns a resource schedule for the given type
adds a new font to the text
start the
adds the text to the specified font
this method is called by the application
adds a separator to the table
returns the role of the given call
this method will store the resource in the database
get the role of the given role
get a resource by its id
get a resource by its id
returns a rule filter rule for the given rule
returns a schedule template for the given call
returns a schedule template for the given type
returns a rule filter rule for the given filter
retrieves the user resource model for the given resource
get the user resource model for the given call
this method returns the rule map for the given call id
retrieve patient patient appointment
this method is used to get the rule map
gets the view patient appointment
stores the given script in the database
returns the script model for the given call
returns the script model
stores the value in the database
returns a setting for a specific setting
get a setting
returns the user state of the given service
returns the user state model for the given call
gets the user template text
gets the user template text
returns a user template
returns the user template for the given type
search for a query
adds a new indentation to the current indentation
checks whether the is correctly
test
checks incompatible
checks incompatible
sorts the map in the given map
returns the next element in the iteration
registers adapter factories
sets the decorator value
returns true if the user can execute the command
creates a new colour
populates the palette
returns a string representation of this object
sets the property value for the given property
creates a property editor for the given parent
sets the property value for the given property
calculates the bounds of the given request
draws the outline of the outline
adds a point to the polygon
returns the bounds of this rectangle
returns the start point of the line
inserts the given point at the given index
removes all the points from the container
removes the point at the specified index
sets the end point of the line
sets the point at the specified point
sets the points of the polygon
sets the start point of the component
sets the template
sets the scale
sets the rotation of the figure
sets the scale
sets the scale factor for the current scale
translate the current coordinate
sets the size of the image
returns the location of the first point in the location
returns the transformed version of this point
returns the target decoration
returns true if the y axis is a north east coordinate
returns true if the south is a south
returns true if the east side of the cell is east
returns true if the west is valid
this method is called when the user changes the selection
clears the cache
dispose the graphics2 d
finalize the garbage collector
returns a new code rendered image code object that contains the
returns the image that is used to render the image
returns the image that is currently loaded from the canvas
returns the root element of the tree
returns an image descriptor for the image
returns a new image instance with the specified url
returns a new image instance with the specified url
returns a new image instance that can be used to render a
returns a new image instance with the specified image
returns a new image instance that is used to render the image
returns a new image instance with the specified image
returns a map of all the edit parts
returns a list of the values
sets the extra data
returns a hash code for this object
returns true if the aspect aspect ratio is clipped by this aspect
returns the hash code of the object
copy the current state of the current state from the current state
creates the image
draw the
returns the buffered image
creates a new
get the colour of the
handle the destination browse button
updates the page complete
paint the figure
resets the cache to the default font cache
sets the absolute clip
sets the alpha value for the alpha channel
sets the value of the
sets the line dash style of the line
sets the current translation
sets the interpolation setting
sets the value of the
returns the translation of the point to the point
this method is called when the user clicks on the advanced screen
returns the value of the specified data container
sets the value of the specified property
returns the value of the specified object
sets the value of the specified property
sets the value of the given property
returns the code to code value
returns the type of the given code
returns the line style for the given value
returns a decorator for the specified value
returns the label for the given code
creates a new rgb color
returns the major version of the file
returns a new rgb object representing the rgb
returns a new version of this version number
creates a new blue rgb object
returns the minor version number
creates a new version version object
returns the version number of the
returns a new version of this version
returns the
returns the name of the figure definition
returns the
returns the y coordinate of the y axis
returns true if the specified points is contained in this object
returns true if this collection contains all of the elements in the
add a point to the end of the list
add a point to the end of the list
returns the index of the first occurrence of the specified element
returns true if this object is empty
returns the of the polygon
returns the index in this list of the last occurrence of the
returns the point that is the nearest point to the given point
returns the point that is closest to the given point
returns the number of points in the list
invert the line segment of this
resizes the given size and returns the new size
resizes the component
returns the additive dimension
translate the point
returns the angle of the
returns the scaling factors for the dimension
scales the dimension by the minimum scale
returns the difference between the point and the point
returns the distance between this point and another
returns the square of the euclidian square of the square
returns the length of the image
returns a point that is the opposite of the edge
returns the vector of vector coordinates
creates a new point at the given x and y coordinates
creates a new y coordinate of the given y coordinate
translates the point to the coordinates of the current point
returns the point of this point by the given point
returns the
sets the x and y values
translates the x y coordinates to the given coordinates
negate the point
returns the point of this point
returns the magnitude of this tensor
returns the dimension of the image
returns the scalar product of this vector and another
returns the centre of the image
returns a vector with the magnitude of this vector
returns whether the given envelope is contained in the
returns true if the point contains the point
returns true if the envelope contains the specified envelope
translate the origin of the origin
returns a new bounding rectangle that can be used to paint the
returns the origin of the
returns the minimum that this shape is connected to
sets the file
sets the dir
adds a fileset to the fileset
sets the schema file name
sets the default grouping grouping
sets the file
this method is called when the user selects the configuration
returns the path to the output file
sets the schema directory
sets the file
add a fileset to the fileset
sets the directory where the file is located
add a fileset to the fileset
sets the database engine
sets the database engine properties
sets the package
sets the name of the generated file to be used for the
sets the global properties
performs the actual processing of the file
sets the
sets the
sets the file
sets the directory to be used for the
adds a fileset to the fileset
sets the package
sets the
sets the
sets the
sets the
sets the type of the
sets the type of the
sets the verbose mode
sets the warnings
sets the
sets the verbose flag
sets the
sets the
sets the test case
sets the name of the strategy that the strategy is used to
sets the generate schemas schema
sets the
sets whether case insensitive should be case insensitive
sets the automatic conflict strategy
sets the properties
executes the test
sets the schema
sets whether or not the warnings should be reported
sets the package name
sets the line of the line
sets the force
sets the attribute of the object
sets the type of the
sets the directory where the should be generated
sets the attribute of the object
sets the test case
sets whether imported schemas are imported
sets whether or not the generator should be generated
sets the
sets whether case insensitive should be case insensitive
sets the target file
sets the properties
sets the file directory
sets the type of this class
returns the file directory
sets the directory
sets the generate mapping
sets the name of the
sets the file that is used to determine the grammar
process the file
the
sets the report status
sets the print flag
sets the profile
sets the nfa
sets the
sets the
sets the
sets the flag
sets the
sets the grammar option
sets the flag indicating whether this
sets the trace
add jars to classpath
executes the given command and returns the result
scans the given list of files
scans the file for the given file
test the
test that verifies that the pattern is
test that verifies that the pattern is
removes all mappings from this map
returns true if the given name is contained in the list
log a message at the specified format and log level
delegate to the appropriate method of the underlying logger
delegate to the appropriate method of the underlying logger
returns true if the logger is enabled
returns true if the fatal logging is enabled
p log a message with code level code
p log an error with code org
p log a message with debug log level
p log an error with debug level
p log a message with info log level
p log an error with info log level
p log a message with warn log level
p log an error with warn log level
p log a message with error log level
p log an error with error log level
p log a message with fatal log level
p log an error with fatal log level
delegate to the code method code method
delegate to the log
log a message at level debug
delegate to the log4j logger with code debug code
delegate to the log
delegate to the log4j logger with code info code priority
delegate to the log4j delegate
delegate to the log4j logger with code warn code
log a message at error
log an error with error log level
log a message object with the code level code
p log an error with fatal level
returns the level of the current
returns the level of the current level
returns true if the given level is enabled for this logger
this method is used to print the message
p this method is used to print the trace object
delegates to the wrapped code code method
log an exception
returns a logger by name
debug method for debugging purposes
delegates to the wrapped code debug code method
delegates to the code write code method
log an error at the debug level of the debug
logs the given message and the current thread
create an instance of
formats a log message and format the log
log a message at the info level
log a message at the specified format and info at the specified
p log a message at the specified level and returns the information
log a message at the specified format and info at the specified
log a message at the specified level of the current thread
log a message object with the code level code level
log a message at the specified level
is this logger enabled for the warn level
log a message at the specified level
log a message at the specified level and returns the trace level
p log a message at the specified level according to the specified
log a message at the specified trace level
p log a message at the warn level and sends a
p log a message at the specified format and warning
log a message at the specified trace level
log a message object with the code level code level
logs a message at the debug level
logs a message with the specified level
logs a message at the specified level and the log
p log a message at the specified format and if the specified
log a message at level debug according to the specified format and
p log a message at the error and sends a
delegates to the underlying stream
p log a message at the specified format and if the specified
logs a message at the debug level of the debug
log an error at the error level
logs a message at the info level
logs a message at the specified level and returns the status
log a message at the specified level according to the specified format
logs a message at the specified level of the specified format and
log a message object with the code info code level
returns the log record
logs a warning
logs a message at the specified level
publish a new record
p log a message at the warn level at the warn level
delegates to the wrapped code code method
log a warning
logs a message at the current level of the error
logs a message at the specified format and sends a
p log a message at the error level and the error level
logs a message at the specified format and sends a
log an error at the error level
log a message with the given level
returns the map that this map is being removed
returns the validation report
returns true if the entry has been validated
returns true if this class is a static
returns the notation that is used to create the notation
returns true if the ready to validate the ready state
returns the factory used to create the
returns the report builder
load the root lib
load the current libraries
returns the id of the given object
logs a message with code error code
logs a warning message
sets the
returns the integer value of the specified message
returns true if the entity is empty
sets the value of is valid empty
returns true if this is a
sets the
prepares the parsing rules for parsing
returns true if the report has already been validated
sets the preferred size of the component
logs a message with code error code
logs a message with code message code
this method is called when the tool is done
finds the source of the given grammar source directory
load the resources
sets the output directory
sets the value of force relative output
sets the input directory
returns the file library name for the given file name
returns the file that is used to export the file system
returns true if the dot fragment of the genome is reflexive
returns true if the dfa dfa dot cross mapping generation
returns the directory where the library should be exported
returns true if the trace is a trace
returns true if the profile is a profile
returns true if the report is
returns true if all output files are preserved
returns the timeout value for the entry point
returns the message format
returns the number of errors in the current thread
returns code true code if this is a
sets the format of the message
sets the timeout value for the specified timeout
sets the generate implied dot
sets the dot
sets the lib directory
sets the profile
sets the report
sets whether the grammar should be printed to be generated
sets the force all files
sets the
synchronizes the current state of the current object
fills the data with the specified number of characters
returns the element at the specified index
returns a string representation of this object
returns the next element in the iteration
returns a string representation of the type of this token
returns a string representation of the object
this method is called when the is
draws the mid line
draw the corner image on the corner
sets the layout calculator
this method is called by the canvas to draw the canvas
assert that a node is not ok
adds a child shape to this shape
returns the error message
determines if the specified date is expired
this method is used to get the user preference for the user
clones the font with the given
returns the cell that is used to render the given cell
creates a new session
creates a session from a session id
update the database with the given id
deletes the given session
deletes a record from the database
insert a new session
deletes a session from the database
deletes the specified session
this method is used to create a new session
deletes a session id from the database
delete categories from database
this method is used to create a new session
delete categories by id
update status of the session
delete a topic
returns the value of the given type
checks whether the given message is a destination
checks if the given message is a valid
returns the number of in the current pattern
sets the letter of the
sets the tiles of the tile
returns the width of the rectangle
creates the text for the classifier
this method is called by the system to indicate the training classifiers
this method is called by the system to indicate the training
this method is called by the system to indicate the training classifiers
test
returns the ascent of the font
this method will be called by the
prints all rows in the table
writes the specified file to the file
returns the final value of the
connect to the server
closes the socket
sets the next element
returns the next element in the list
sets the prev
returns the previous list
close the iterator
send a news message
returns the integer value of the specified object
returns the offset of the field
returns a static field
tests this object for equality with an arbitrary object
compares two card cards
returns a string representation of the card
returns a map of the
add a thread to the pool
returns the scanner code scanner scanner code used for the
returns the partition scanner scanner
returns true if the word is a start character
returns true if the given character is a start character
returns true if the given word is part of the word
returns true if the given word is part of a word
creates the document for the given element
evaluate the given language
this method is called when the user clicks the ok button
runs the action
the action has been activated
sets the path
sets the listener to receive events from this stream
adds a new object to the list of objects
evaluates the solution
evaluates the solution
test that a matching type is found in the privilege type
returns the exit value
sets the command line
sets the exit value
sets the process value for this process
sets the working directory value for this project
sets the null if the value is null
atomically increments the lock thread
atomically increments the lock locks
returns true if the lock is locked
sets the job type name
this method creates the xml element
returns the job type name
returns the project name
returns a list of parameter names
returns the element of the given element
returns the of the
returns the server id for the given url
sets the child node of the given node
returns the id of the abductor
sets the id
cancels the job
cleanup the log
returns the action for the given code action code
hashes the given string to a string
returns the id of the abductor
gets the
returns the id of the abductor
returns the maximum number of retries
get the global parameter value
adds a session identifier to the session
returns the retry attempts
sets the pages of the page
returns the seconds retry
sets the active session id
returns true if the parameter is required
returns the remove parameter
returns true if the parameter value is a remove parameter
sets the parameter name
sets the parameter required
sets the value of code parameter value code
sets the remove parameter
sets the remove parameter value
setter for property value seperator
this method is called when the lock is refreshed
sets the
returns true if the is cancel
sets the action
creates a new map for the given
revokes the session id from the session
release lock on a lock
cancels the job on the given job
returns a session with the specified key
sets the id
removes a server from the server
puts a session in the hash map
sets the
removes a session from the cache
sets the value of the valid page property
sets the id
sets the current date
returns the page that is currently displayed
sets the directory where the directory is used for
setter for property host name
sets the method
sets the protocol value for this
sets the maximum number of retries
sets the template
sets the valid status
sets the valid page parameters value for this page
sets the weight
sets the value of the parameter to a global parameter
this method is called when the user selects a bad session
sets the close out mode
adds a new session identifier map to the database
gets the
sets the variable name
sets the ctp attempts attempts
sets the seconds before retrying when the user enters the
sets the hash map to the specified monitor
stops the
the given code code
returns the id of the
returns the sleep period
returns the best matched matched by the current status of the
returns the status of the
returns the value of the specified parameter
returns the algorithm for the given type
sets the parameter value
returns a list of all the nodes that are descendant of the
returns a list of all the parameter names
returns the session id of the current session
returns a copy of the hash map of the values in the
returns the id of the abductor
checks if the current session is expired
returns true if the first session is allowed to allow a session
sets the global parameter list
returns the number of statements to be used for the database
returns the maximum number of rows that this is
returns true if the first session id is set to the first
sets the maximum number of rows to be displayed
returns the update count
returns the flag
sets the database driver class
sets the number of database statements to be used for the database
sets the database password
sets the sleep period
returns the flag
sets the
returns the disabled disabled flag
set the value of the database user property
sets the result set value for this result
sets the
returns the value of the main session identifier property
sets the number of update count
sets whether the should be disabled
this method is called by the framework to indicate whether the application
returns the value of the main session identifier indexed property
sets the id
returns the id of the abductor
sets the
sets the date
returns the date of the
sets the code
gets the value of identifier allow index
returns the code
sets the
returns the message
sets the value of the details property
gets the value of details
sets the name of the step to be used for the step
returns the name of the step that was used to execute the
returns true if the field is
cancels a job
kills the thread
returns the number of jobs in the current thread
get the counter associated with the specified name
returns the current queue size
gets the found on main session
returns the number of threads in the current thread
returns the class name of the executor for this executor
returns true if the visitor is repeated
returns the maximum number of concurrent threads
returns the maximum size of the queue
returns the number of threads in the pool
returns true if the given date is still valid
sets the maximum size of the queue
returns the total number of total rows in the database
resets the indexes to their default values
sets the exception thrown by the exception
returns the exception that caused this exception
sets the first click session identifier
sets stats for the given time
returns the dump file
sets the lock status
sets the main session identifier
returns the path to the logging
set the
sets the date for the given date
is killed
sets the algorithm used to generate the best
sets the index of the to be used for the
sets the found on main session
apply the pattern pattern to this pattern
sets the repeat visitor
toggle index of the given element
returns the default start year
returns the node stats element
returns the date format symbols
returns the status message
returns the status message for the given status code
checks if the given status code is valid
sets the statistics for the statistics
prints the tree
configure the factory
sets the value class
sets the limit of the array
parse the given date as a string
removes the first object from the list
returns true if the iterator has another
provides serialization support
test method for
test method for
test method for
test method for
test method for
test method for
test method for
sets the start date of the task
test that the date is truncated
returns the class of the file with the given name
returns the backing map
sets the format symbols used to represent symbols
creates a new code store code
sets the value of the calendar cache
sets the calendar value for the given field
adds a to the list of objects
sets the value of the calendar cache field
returns the last exception
closes the database
returns a localized pattern for this pattern
returns the pattern to use to use
execute a job
sets the
returns the error message
returns the standard standard out message
returns the alternate insert value
sets the alternate insert value
returns the alternate update value
sets the alternate update value
sets the class of the source class
returns the class of the source class
returns the parameter definition
sets the value of the property
returns the data file
returns the parameter list of the
returns the sql string for this query
creates a pipe from the current url
sets the sql string
initializes the file
returns the type desc of the type
returns the node
returns true if the given property is a property
sets the in session
sets the property
sets the column property
sets the property value
convert a long value to a binary file
sets the column name
returns the month of year
returns the column name for the given column
returns the hour of the day
get a job for the job
returns the minute of hour
returns the current date only
returns the value of enable date
returns the date of the calendar
returns true if the is validated
reads the object from the object
returns the owner of this entity
sets the owner of this
returns the date part of the given field
returns the version of the metadata file
get the lookup object for the specified name
returns the thread manager
returns the queue that contains the queue
returns the comparator used to represent the aggregates of the
adds a step to the list of steps
returns the maximum size of the list
generates a package declaration
add a new step to the
returns the size of the merge size
returns the size of the buffer
returns the batch manager
returns the executor executor
returns the comparator that is used to sort the data
returns the number of steps that are still running in the given
returns the code code of the code value code and code
returns the total number of bytes read from the buffer
increments the number of records in the record
returns true if this object is always
returns the write buffer size
increment the error count for the given
get the output object for the output channel
sets the comparator used to sort the sort order
returns true if the record is allowed to be repeated
returns the core class name
increment the count
sends the aggregate batch to all the
returns the port of the given port
sets the config
returns the configuration of this node
sets the thread group
sets the thread groups
returns a thread group for the specified port
sets the class that this class is used to instantiate the
returns the class of the node
returns the for the given port
returns the queue that is currently running in the queue
traditional getter method that returns the name of the
returns the source thread
returns the object that is used to represent the object
gets the step
returns the error code
returns the event
returns a new in the
returns the new port
returns the channel
returns the current job
returns a map of shared lookup
adds a new executor to the given executor
get the port
returns the executor for the specified name
adds a new code executor code to the current state
returns a map of all the parameters for the given node
adds a new executor to the pool
returns the server details
returns the servers server
checks if the server is alive
checks if the server is alive
returns the
returns the number of records in the record
returns the name
returns the attribute of the object
returns the index of the port used to identify the port
returns the error code
get ports used for the worker thread
the
returns the xml element
returns a node with the given name
handle the event
sets the string value of the job
handles a port event
sets the connection pool
handle an exception
puts a key array data array data array data array data array
returns the call
returns the namespace of the namespace
returns a object representing the
returns true if the threshold is low low
interrupts all steps
get the unique name for a given object
get the unique name for a given object
returns the id of the
creates a new project
returns the string representation of the given string
returns the timing
returns the total time in nanoseconds
sets the value of the waiting time
returns true if this is a waiting for a waiting
returns the hash code for the given record
clears the batch log batch
add headers to the output stream
strips the from the given
clears the batch log batch
returns the event
returns the id of the abductor
returns true if this is used to be used
sets the of this
returns true if the object type is an object type
returns the class of the port
is the array of the type
returns the element that is currently being used to represent the
returns true if the constant is constant
returns the code
returns the index of the port
sets the index attribute of the object
sets the data type port
returns the constant value of the constant pool object
whether the default instance type is used to be inherited
returns the executor executor
generates a new
get the for a
get the value of a parameter
returns the for the given

returns the message for the specified group
checks if the parameter set contains the specified parameter set
returns the directory where the cache is used to generate the directory
adds a new trigger to the
returns the key for the given entry
returns the job configuration for the given xml node
returns the
this method is called when the job is done
returns the log of all the job
sets the executor for the job
returns the number of errors in the error
returns a object representing the data in the data
returns the last exception that caused the exception
increments the number of errors in the given record
increments the number of errors in the given code code
creates the table
checks if the given handler is allowed to be handled by this
creates a new table
returns the file name of the file that is used to store
adds the batch to the list of statements
returns the batch size
this method is called when the log is received
returns the connection
this method is called by the server to load the command
sets the boolean value of the given object
sets the value of the byte array at the specified position
handles an error message
sets the double value of the specified field
set the value at a given position
sets the specified position in the object at the specified position
sets the value at the specified position
this method is called when the cpm is fired when the fatal
sets the value of null
sets the value of the given object
sets the string
sets the timestamp at the specified time in the database
returns true if the first thread is a start stop
p record a job message
creates a new table
adds the batch to the database
returns true if the last thread is thread to complete
returns true if the current thread is currently running
sets the value of null
returns true if the last thread to enter the last thread
returns the list of triggers
get the step for the step
sets the object reference for the object
returns the index of the port in the source
sets the source port
sets the sort
returns the sort
returns the source field definition
returns the files in the list
configures the document builder factory factory
returns a list of
returns the number of channels
returns the current file channel
returns true if the file has downloaded bytes
this method is called by the framework to initialize the
sets the user name and password
shuts down the application
get a connection by the given parameter
get the java type of the given
shuts down the server
returns the sql statement that is used to generate the sql query
returns the engine
shuts down the server
pauses the server with the given name and the server
this method is used to get the results of the given data
returns the xml representation of the node
pauses the server
returns the channel
returns the simple date format
returns the decimal format
returns the format of the given class
returns the metadata for the database
the
load the table name
returns the primary key columns
returns the key columns from the database
get surrogate key
puts a key array data array data array data array into the
returns the string representation of the given string
sets the value of the byte array at the specified position
sets the double value of the specified field
sets the given position
sets the specified position to the specified position
sets the value of the specified position in the buffer
sets the value of null
sets the value of the given object
sets the contents of the given string
creates a new read command
adds the batch to the list of statements
sets the value of null
sets the string
returns true if the is empty
load a node list from the given string
sets the static field
removes the element at the specified position in this list
returns true if the element at the specified index is the same
sets the class name
sets the equation element
sets the type of element to other
returns the class name of the variable
removes the current object from the list
returns true if the method is open
returns a hash map containing the hash map
prints the array list of the given array of the current
print the hash map
stores the given variable in the stack
adds a variable to the variable
adds a declared variable to the variable map
returns the element with the given name
clears the map
adds a new variable to the list of variables
destroy the frame
this method is called by the framework when the window is destroyed
detects the default charset for the charset
returns a reader for the given input stream
sets the total price
removes the specified product from the cart
returns the value of the product in cart
returns the cart product of the cart
sets the id of the node
sets the gender
sets the client name
sets the balance of the account
sets the children of the children
sets the order list
sets the quantity
sets the price in the cart
creates a new children and adds it to the database
creates a new children and adds it to the database
this method is used to determine the account for the given user
check the account for the account
this method is called when the user selects the user account
deletes a user from the database
this method is called when the product is
change the price of the product
change the stock product of the given stock and its
add a stock product to the list of stock
change the description of the given product
change picture product
delete a product
sets the id of the user
this method is used to find the user account with the given
checks if the given code code is supported
sets the start value for this
sets the start value for this
checks whether the test suite is still loaded
sets the delta
sets the parameter
sets the parameter
sets the number of iterations
sets the start time stamp
returns the best score of the current measure
sets the duration months
checks if the given code code is supported
adds a new configuration to the configuration
sets the time of the specified time
adds a new configuration to the configuration
adds a parameter to the list of parameters
sets the parameters
sets the group by config
returns the current time in milliseconds
returns the current time in milliseconds
returns the time server
returns the value of the double property
sets the value of the double property
validate the value of the method
returns the price of the given price
returns the expected expected for the expected expected
returns the value of the string
sets the value of the string
sets the trading system
returns the integer value of the property
sets the value of the integer value
sets the value of the product
sets the description
sets the param id
returns the average moving average
returns the total length of the moving average
returns the average price of the last item
returns the error code
sets the
sets the time comparator
returns the value of the
sets the
gets the value of the buy property
returns the event
returns the position in the table in the table
rounds the given value as a rounded value
returns the decimal places
calculate the average value of the
returns the number of decimal places
returns the average of the given value
returns the average of the current simulation
initialise the array
returns the last value of the last value
returns true if the value is initialised
sets the product name
increments the index of the current index
sets the dao for the dao
sets the data source
sets the filter
sets the parser
sets the file path
sets the timer
import the prices
sets the country
sets the exchange
sets the suffix
clones the given object
returns true if the entity is a valid entity
returns true if the product of two are
adds a new validator to the list
sets the transactions
sets the book to the given book
sets the cash manager
sets the service
returns the cash balance
sets the initial balance of the account
sets the account name
sets the current books current book
compute the margin for the
computes the margin for the given
returns the
returns the value of the specified product
sets the sell
sets the ticker
returns the type of this
remove all books
sets the type
puts a new alias into the database
sets the product type
returns the alias of the given source
returns the stop loss of the
this method computes the stop and passes to the
sets the valid from
sets the underlying
sets the alias of the user
sets the valid to value
delete the entity from the database
deletes all the templates
delete the database
save or update entity
load the entity from the database
scans the last entry in the cache
add a transaction to the current transaction
change cash cash
validates the parameter value
find the account with the given name
create cash manager
returns the balance of the account with the given account name
sets the cash balance
unpack a
compares two time objects
validate the given code code
returns the hour of the calendar
returns the millisecond of the time
initializes the file
save the data in the file
close the file
writes the given rows to the database
returns the time in milliseconds
append the given parameters to the end of the list
returns a string representation of the given parameters
returns true if the given year is leap
returns the last open position
returns the post method
sets the input
sets the mail sender
sets the from address
returns the size of the open concurrent store
returns the value of the specified price
creates a new configuration
returns the price of the given price
creates a composite config for the given configuration
merges the configuration parameters into the given configuration
returns the profit on the transaction
this method is called when the context is closed
notify observers that the transaction has been closed
returns the time generator
import the from the database
returns the trading system bean id
returns the time generator
updates the given transaction
an object
checks the and right y
test of fields method of class org
adds a tester to the list of tests
returns true if the class is called
returns true if the value is a valid
returns true if the receiver is a
build the price of the sale
returns the value of the some value
sets the value
adds the given
returns the default test product of this product
sets the product of the configuration
counts the number of elements in the list
creates a transaction transaction
creates a new product parameter
populate the product with the current settings
creates a new http client
creates an instance of the code http client exception code
this method is called when the player rotates the specified
sets the field
sets the
sets the field
sets the current position of the goal
sets the field
sets the turn of the player
move the player to the given player
returns the team
returns the strategy used to instantiate the strategy
checks if player is a player
this method is called when the player rotates the
sets the field
returns the next pseudorandom uniformly distributed
returns the next pseudorandom gaussian
sets the seed of the random number generator
returns a new instance with the specified value
returns a new code big decimal code whose value is
returns the signum of the value
returns a new scale by multiplying the value of the
returns the hash code value for this object
returns the precision of the precision
send a message to the server
initialize the node
updates the routing table
returns the next in the
returns the degree of the number of
sends a request to the server
notify the controller that the player has changed
returns true if the given keys matches the given array
adds a new query to the query
adds a new key storage to the map
returns the value of the specified node
returns the long value of the specified node
this method is called by the network
returns the double value of the specified node
check if the current value is a
executes the
this method is called by the ant to check the statistics
this method is called by the protocol process when the
moves the node to the next one
process an event on the transport
returns the neighbor at the specified index
returns the degree of the polynomial
removes the specified element from the network
removes the specified element from the network
returns the peer node
returns the degree of the number of
returns the node at index i
adds a node to the view
returns the degree of the number of
removes the given node from the view
returns the degree of the view
this is the entry point method
fired when the user clicks on the send button
fired when the user types in the key up
sets the default namespace
adds a namespace uri to the namespace
visits the document
adds a namespace uri to the namespace
this method is invoked to visit the node
p this method is called when the user selects a special token
tests the
tests the main program program
initialize the options
returns the
generate the output stream
test of re perform init method
proves that it has transitions
test method for
displays a banner
test method for
close the underlying writer
test of get first valid position method of class org
tests move from the
tests the move from set
tests the move from set reg ex
test of generate init method of class
test dump state
test dump of the dump of the and the
test dump of the dump of the and character positions
test dump dump method
returns the hash code of this object
test dump move
test dump states for state
test dump states
test of re perform method of class
visits the given document
copy a node
returns true if the property with the given name is contained in
returns the value of the property with the given name
returns the javascript value of this file
this method is used to provide the constructor for this
adds a new update to the list of
initializes the document
creates a document node
parses the document contents
opens a connection to the database
writes the given string to the output stream
writes the given string to the output stream
sets the type of this
returns the type of this
compares this object with another one
writes the given string to the output stream
sets the declaration
sets the items
returns the declaration
sets the item
sets the
sets the default value for this property
returns the item at the specified index
writes the content of the given writer to the given print writer
gets the
writes the given string to the output stream
sets the items
writes the given string to the output stream
writes the content of the given writer to the given print writer
sets the item
writes the given string to the output stream
sets the
returns the item at the specified index
gets the value of the property
writes the content of the given writer to the given print writer
writes the given string to the output stream
writes the given string to the output stream
adds a new item to the list
removes the item from the list
sets the pub pub
returns the pub med
sets the items
writes the given string to the output stream
writes the current quote to the given writer
sets the item
sets the attribute
returns the element at the specified index
returns the value of the specified attribute
sets the attribute value
writes the given string to the output stream
sets the text
sets the system
sets the value of is parsed
sets the attribute name
returns true if the current instance is parsed
returns the attribute with the specified name
sets the content
returns the content of this object
sets the
fetch the next request from the current thread
parses the dtd
sets the
gets the value of the property
parse the given parse specification
sets the namespace attribute of the object
clears the current map
at startup create and show the main frame of the application
returns the user id of the table
returns the type reference for the given type
returns the reference for the field
returns the type of the given type
returns the reference for the given method
compute the method map
removes the dead
compute the type reference
clear the soft caches
returns true if the class is inner inner class
returns the outer class of the class
returns the declared method reference
returns code true code if the receiver is a static
get the for the given ir
remove the given module from the list of modules
returns the bytecode index of the bytecode bytecode bytecode bytecode
returns the number of instructions
returns the of the
load all sources from the module
returns the bytecode stream that the is associated with
get the contents of the jar file
returns the class loader used by this class loader
returns the program counter
initializes the graph
adds a seed to the
process the edge
returns the number of parameters
clears the caches caches
checks if the given point is contained in the map
returns the of a given target
returns the number of concurrent nodes that are currently being visited
initializes the factory
make the equation make a number of equation
creates the variables
call this method to inform the call that a call to the
build the scope of the current scope
adds the application modules to the scope
factory method for the class count for the
check if the given field is
starts the query
checks whether the given predicate is possible to be inlined
returns the number of arguments
sets the basic block
adds a new node instruction constraints to the tree
adds a node instruction to the graph node
checks whether the given is live in the given
returns the argument types
sets the default value of the given value
returns the value of the parameter
ensures that the given symbol is in the current value
returns the number of arguments
returns the phi value for the given number of phi
this method is called by the algorithm
returns the exception thrown by the exception
the cache
add a to the cache
the
this method is called when the method is called
sets the values of the array
removes a property from the pool
returns the index of the first instruction in the list
returns true if the block is a catch block
returns the phi for the slot at the given slot
returns the phi for the local
returns the def value of the given index
returns true if this is a static
returns true if the request is dispatch
returns true if the request is a special
returns the type of the declared result
returns the declared method of the target
returns true if the given block is a catch block
builds the local cache
this method is called when the local is running
initializes all the instructions
returns the def value of the given def
returns the use of the given
returns the number of definitions contained in the given code code
returns the number of in the given code code
checks if the given basic block has a valid edge
returns true if the given code block code is in the same
returns true if the current state is enter
returns the reference to the
setup the location map for the current site
visit the instructions on the stack
visits all instructions
returns the indices of the specified instruction
returns a new site with the specified reference
returns the index of the new instruction
returns the basic block for the given instruction
computes a
returns true if the of a given block is
checks whether the given site is allowed in the target
returns the target of the caller to the given target
sets the local index to the specified local index
handle the event that is called by the
check if the user can be used to be used for the
returns the height of the stack
initializes the
construct a new
returns the type of this object
initializes the
returns the node that is currently being used to represent the node
returns the exit
sets the catch block
returns the catch block
the instruction list
compute the of the block
computes the edges of the
returns the type abstraction
make empty blocks
clears the
add all classes in the given class loader
this method is used to record the given class
adds a new exceptional edge to the end of the list
update the pi
find a selector for a selector
the eager construction algorithms
iterates through all the and them
returns the node for the given number
checks if the given class is a
checks if the given interface is in the interface
returns the type of the given class
returns a new problem problem that is a of the given
checks if c1 c1 is a assignable to c1
populates the node
this method is called when the graph is updated
adds the given basic block to the block
returns the context associated with the specified context
adds a to the list of
adds a to the given block
adds a new code code to the given code code
adds a new allocation to this type
returns a new instance of the with the given type
adds the given to the list of all the nodes
adds a new code code to this code code
the given sql statement to be
registers a new node
creates the nodes for the given map
translates a enhanced statement into a enhanced expression
creates the parameters for the callee
creates a new node with the given type and returns the
creates the special for the given ir sym file
creates the normal statements for the given key
add a new call to the list of
initializes the for java class
initialize the core class loader
initializes synthetic class loader
returns the loader class loader
returns the extension loader for this class loader
returns the reference to the application loader
returns the synthetic loader class
adds a new file to the scope
adds a class loader to the scope
add a classloader to the list of classes
adds a loader to the scope
adds the given code to the scope of the given scope
adds a new code transformer code to the given code
sets the selector
sets the selector
returns true if the constant uses the constant pool key
sets the use constant specific keys
returns the value of the use stacks for lexical
sets the value of use stacks for lexical
returns true if the current font is a
sets the value of the use lexical for
returns true if the is
sets the static handle for init static
returns the for the given method
returns the def used to create a cache object
registers the given code code to be invoked by the
adds a new site to the list of constraints
adds the call constraints to the given node
adds the constraints for the given field
adds a new code code to the given code node code
this method is used to set the implicit
this method is invoked to indicate the
sets the transitive root of the root node
sets the find key
iterates over all the keys and then calls the method
executes the given code polynomial code s contained in this code array
sets the current implicit points to be used by the
scans the given type declaration
skips the current outer element
returns the number of keys in the map
update the side effects of the given list of
adds the constraints to the given code node code
replaces the current value of the given code code
returns pointer key for given array key
assign a key to the given key
the context for the target context
checks if the is
returns true if the given is
returns the method
returns the type of the method
the
returns the constant pool of the given constant
register a class
returns the reference for this class
sets the context interpreter
returns the for a given method
returns the for the given type
extract the package from the given type
returns true if the last timed out out of the is
reads the bytes from the given stream
clears the reader
process the
returns the singleton constant object after the
returns the raw name of the current type
process the
returns the number of parameters
returns the class loader for the given class name
returns the class type reference
marks the node as needing to be done
expands the tree
returns an image icon
returns the plugins resource bundle
returns the filter for a given set
checks if the given call is a primitive type
sets the major version of the file
sets the minor version number
a
returns the number of in the specified index
returns the of the given rgb value
returns the of the specified
returns the value of the specified
a
returns the of the given string

a
a
a new
sets the access flags
sets the name of the class to be used for the
sets the name of the index
sets the interface name indices
sets the name of the
sets the interface names
add a method to the list
adds a node constraints to the given node
adds a new field to the list
adds a method to this class
adds a new field to the given type
adds an attribute to the class
sets the raw table
sets the raw table
sets the raw data
get the value of the offset from the
sets the index of the
sets the value of the long index
sets the value of the double property
sets the value of the specified integer
sets the value of the float value
sets the value of the lt string gt
sets the index of the
sets the code code code code code code code code code code
sets the raw handlers
sets the attributes
initializes the attribute iterator
returns the raw offset of the raw data
returns the raw size of the raw data
returns the offset of the data in the current position
returns the size of the data in the data file
returns the index of the first occurance of the file
returns the name of the file
moves the current state to the next token
initializes the field with the specified attribute
initialises the method attribute
initializes the class attribute for this class
is this a address
returns the next class
outputs the class of the class to the given output
writes the class to the given class
sets the print line number
sets the flag that controls whether or not the print class is
delete method from the list
visits the given method
returns a method that is the method that is
returns the code reader code of the code code
replaces the current method with the specified method
returns true if the model has changed
removes the given class info from the list of
sets the hierarchy hierarchy
prints the path to the given path
verifies that the verify blocks of the verification of the
compute the of the given type
visit a enum declaration
returns the result of the summarized key
puts a new code code into the map
compiles the stack
writes the given string to the output stream
writes the content of the document to the given writer
returns the output
emit a label of the given label
emit an instruction
emit a
start the pass process
ends the pass
returns the next label
inserts a new code idx code at the beginning of the
inserts the given slot at the specified index into the list
insert a new instance in the specified slot
replaces the current with the specified index
returns the entry zip file
add a new method exception handler
open a file
inserts a new instance of the given code code
sets the output jar file
adds a jar file to the jar file
adds a jar entry to the jar
adds a new input class to the input
adds a directory to the list of directories
sets the index attribute of the object
begins traversal of a traversal
returns the last name of the last entity
insert a new instance at the beginning of the document
returns the output file
inserts the given object into the database
replace the current page with the given
adds a handler to the
set the jar file
sets the ignore flag
add an output stream entry
end the output file
closes the current jar file
returns true if the edge is transfer
returns the merge function
tests the
tests the init method
test the
test of solver method of class graph edge
checks whether the shared bit vector is set to
tests that the
tests that the
checks whether a bit vector is set to null
tests that the
tests the
returns true if the given pipe is already processed
returns a scope that is a scope of the given class
add the given tag to the namespace
sets the for the given element
adds a new node to the list
returns the label of the specified node
returns the node at the specified index
returns true if the call is a call call
returns the plugins resource bundle
adds a module to the module
adds a module to the module
adds a module to the system
checks if the given node is a descendant of this node
add recursive to the
returns the target for the given
returns the method reference
adds a synthetic container to the
creates a field reference reference
creates a method reference
creates a getter reference for a given method
creates a setter for the given method name
returns the loader that is used to resolve the
returns the loader used to load the resource bundle
returns the reference to the application loader
returns the synthetic loader
adds a class loader to the scope
returns true if the field is

create a new file context
creates a new code context code instance
creates a new context instance
creates a context for the given context
creates a new instance of the context
returns the parent of the given entity
sets the parent of the given entity
delegates to the wrapped visitor method
called by the parser when entering a component
post processing method for the process entity
visits a
this method is called when a entity is destroyed
returns the parent of the given entity
visits a file entity
this method is called when a new entity is deleted
sets the parent of the entity
visits a field entity
performs a visit of the given entity
called by the when a field is destroyed
visits a type entity
this method is called when the entity is destroyed
returns true if the element is a suitable for the
visits a function entity
leaves the entity
visit the script entity
returns true if the special bounds has been resolved
called by the drmconnector when a new entity is destroyed
invokes the visitor for the given code code
called by the parser when entering a component
post process node
visits the given node
leaves the node
visit a function expression
leaves the expression
called when a function is a function
this method is called by the context parser to perform the
leaves the given statement
visit local scope
leaves the scope
visit a block of block
this method is called when a block is finalized
block block block
block block block
visit a loop
this method is called when a loop is encountered
this method is called once for the loop
visits an exception caught
throws an exception
visit a
performs a visit of the given
leaves the
visit the given code code
checks if the given node is a visit of the assign nodes
calls the method on the given code code
invokes the method on the given code call code
visits the given var var var var var var var var var
leaves the
visits the constant constant
this method is called when the is successfully moved
visit the binary binary expression
leaves binary binary expression
determines whether a field is defined in the context
visit unary expr
unary unary expr
runs the
visit length array
make a reference to a global reference
this method is called when the length of the is complete
visits a array reference
this method is called when the is incremented
delegated to the wrapped method
this method is called when a statement is definitely removed
visit the given code code
called by the when a new is destroyed
visit the given
leaves the
visit the given goto and returns true if the given goto is
ensures label is part of a statement
called when the is removed from the given statement
visits a
throws an exception if the statement is definitely used
throws a code statement exception code if the
leaves the statement
visit a complex expression
process all the of the given
applies the given code bit code to the code code instance
throws an exception if the condition is not reachable
checks if the expression is in the block
this method is called when the is removed
ensures that the given code code is already in the
creates a new
delegates to the wrapped visitor method
registers a field literal in the given literal
this method is called when a literal is removed from the
visit a literal literal
this method is called whenever the value of the literal is
this method is called before the element is
this method is called whenever the literal of a literal
visits the given object reference
this method is called when the is finalized
visit a
this method is called when a new is executed
visit an array reference assign a assign assign assign statement
this method is called when the array assign a
executes the operation assignment assign a non assign operation expression
throws an array of operands assign an operand reference to the
delegated to the wrapped object
this method is called when a new object is moved
executes the operation assignment assign a non null operand
throws an object reference to an operand that is not null
called when the translation is done
visit a block of the statement
replace the theory at the end of the list
this method is used to assign a code block code
executes a method visit
returns true if the operand is not unary
throws block expr
visit a var assign var
this method is called when the scope of a is created
executes the operator assign operation
throws an exception
visit a switch statement
initialize the
this method is called when the value of the is activated
this method is called when the is
ensures that the given is valid
adds a work to the work list
adds all statements to the work work statement
called when the value of the variable has changed
throws an exception
creates a new statement
visit a visitor
creates a new
creates a new
creates a new
this method is called when a is created
update the work list
this method will be called to perform the internal processing of the
visit the given
this method is called once at the beginning of the
leaves the
visit a
override this method to override the default implementation to do
returns the default interval for the current user
leaves a block
returns the interval of the periodic rocket
evaluate the operator
returns the left hand side of this node
returns true if the given cell has a variable
leaves the given
visits a
check the graph is correct
leaves the given empty state
evaluate the operator
returns true if the cell has a variable cell
visit a primitive primitive value
this method is called when the primitive is
visit a
leaves the
copy the given set of bits into the given set
this method is called from the parser to change the representation of
cast the given to the given
this method is called when a new is cast
returns the backing store
visits a instanceof
removes all the elements from this collection that are contained in the
returns code true code if this collection contains all the elements in
add an object to the list
replaces the object with the specified b
this method is called when the is destroyed
puts an element in the map
returns an iterator over the elements in this population
adds all of the elements in this set to the specified set
adds all of the elements in the specified set to this
adds a set of elements
adds a vector to the current vector
adds a new object to the list
removes all elements from the list
returns true if the given object is contained in the list
returns true if the given set of other

clears the whole
sets the current value of the vector
intersect this set with another
returns the difference between this and another
returns a subset of this primitive set with a given set of
adds a basic stroke between two pairs
ensures that the internal storage array is mapped to the specified capacity
sets the
adds a code int code to the code vector code
removes the specified element from this set
intersect this set with the given set of
checks whether the given code exit code is executed
expands the given offset and returns the number of
adds all of the elements in the specified set to this
sets the bit
clears all bits in this array
clears the bit set
returns the bit value of the bit set
sets the bit mask to the same value as the current one
performs the operation for the specified set of
sets the bit set to true
performs xor operation on the bit set with the specified
returns whether the given code code is equal to this
copy the given bits into this set
counts the number of bits in the population
returns the length of the bit set
counts the number of pairs of all the
adds a new code code to this code code
removes the specified element from this collection
returns the intersection of this object
adds all the objects in this collection to the current
intersect this set with the given set of all the
sets the
adds a node to the block
checks if the given element is contained in the queue
returns the value of the specified column
returns the number of elements in the list
returns true if the list contains no elements
returns true if the specified element contains the specified element
removes the element from the queue
peeks the next element in the queue
transfers the backing map to the backing store
bubble up the element at the end of the heap
sets the value at the specified location
returns the iterator over the indices contained in the iterator at the
removes the top element of the stack and returns it
ensure that the internal storage array is held in the internal storage
processes the given process
waits for the to be
make a classpath to be used to build the classpath
sets the input
returns true if any node has any successor
adds a new to the list of
adds a new to the list of
removes the given code code from the
removes the given from the list of numbers
adds an edge to the graph
returns true if the iterator has another
returns true if there are more elements in this iterator
returns the next element in the iteration
returns true if there are more elements in this iterator
sets the pending children of the given element
returns the next element in the iteration
initializes the iterator
initializes the node with the given graph
initializes the given object
returns true if there are more elements in this iterator
checks whether the given node is by the given node
returns the of the given node
this method is called when the line position is clicked
evaluate the operator
returns true if the cell has a variable cell
compress the given node
adds all the given values to this set
adds all the values in the given vector to the current
checks if the given value is equal to this
the node
sets the value of the given integer
returns true if the specified value is contained in the list
adds all elements contained in this set to this set
adds the given other
adds a new code int code to the end of the list
returns true if the specified value is contained in the list
test the
test the
test the
test the plugin
test the plugin
test the plugin
test the compiler
test the hash code method
leaves the given
visits each element of each element
test that verifies that the is correctly used to generate a
tests the constructor of the constructors
tests the constructor of the constructors
tests the constructor of the constructors
adds a new point to the map
returns the number of reachable objects
adds a new instance of the given instance
merges the dfa states and merges states to the dfa
returns the dfa for the given
sets the dfa for the dfa dfa
removes the given node from the list of children
get the exception info for the given exception
emit a warning
receive notification of a parse error
receive notification of a non recoverable error
returns true if the file is accepted by the filter
returns true if the file is accepted by the filter
sets the maximum heap size
returns a new path containing all the paths in the root
clears the map
returns the path to the root of the root path
returns true if the specified path is contained in the list
adds a new code ap code to the list
removes a named access
returns true if the path is
returns the head element
returns the number of elements in this collection
returns the element at the specified position
returns a string representation of the object
compares this path with another one
sets the path to the given code path code
sets the path to the given set of
sets the path to the given path
sets the
sets the path to the given path
sets the renaming attribute
returns true if the tileset is
this method is called by the framework to handle the
persist the specified object and updates the map
checks if the given b b b b b b b b
returns true if the given element is in the specified position
returns true if the given index is in the specified
this method is called by the
this method is called by the
optimize the current state of the given operator
returns the name of the
checks if the given input is a update of the base
creates a new code history code instance
extends the union of the iterator to the given value
returns true if the given quad is than the given quad
returns the value of the specified element in the pointer
initializes the domain domain domain
creates a new
creates a new normal flow flow function
returns a string representation of this object
compares this object against the specified object for equality
checks if the given input is a update of the base
returns the index of the relation delta
returns true if the given is
returns true if the given instance is a tracked by this
creates a auxiliary version of the given set
creates a new instance of the given block
sets the prune allowed
sets the path to the given code local code
the current state of the
returns the number of in the alphabet
returns the event multicaster for the specified event
returns the rule type
returns the number of states
returns the state of the given name
returns the initial state of the automaton
returns the successor of the given event
initialize the property
returns true if the given event is triggered as a listener
build the program for the given
this method is called when the user leaves the tree
adds a new message to the list of messages
creates a program entry for the given php object
returns true if the given event type is accepted by this object
compute the event map
returns the type of the property
initializes the tracked instance of the tracked instance
adds all the in the given to the model
checks if the given object is a valid
returns the index of the fixture in the relation
make a new
returns the solver to use for this solver
returns true if the given is a
adds a type to the list of type objects
creates the nodes in the tree
returns a stldata type object
adds a new instance of the given instance to the given instance
returns the code code instance for the given code key code
checks if the given is
adds a block to the block
creates a new
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
iterates over all the aliases for the given key
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
checks whether a class creation node is created
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
this method is used to compute the definitions of the given instance
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
this method is called by the framework to run the
visits the given type specific ast node
start the
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
update the ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
performs the changes made to the given text
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given package specific ast node
visits the given type specific ast node
visits the given type specific ast node
saves the current expression to the current expression
visits the given package declaration
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
sets the current state of the process
visits the given type specific ast node
visits the given type specific ast node
visits the given type
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type
visits the given type specific ast node
visits the given type specific ast node
visits a simple type node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
insert the methods description here
visits a simple type node
sets the query before query
creates a new
adds the pages to the page
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
checks if the given node is a valid node
visits the given type specific ast node
populates the
visits the given type specific ast node
visits the given type specific ast node
visits the given type specific ast node
creates the nodes in the given map
creates the given normal statements
adds the pages to the page
resets the
performs the changes made to the model
performs a save operation on the given composite
hook for subclasses to perform cleanup before
post a load
hook for subclasses to perform the pre processing of a
post a resolution to the given class
load the classes from the classpath
this method is called when the security manager is made to modify
adds a package to the target package
sets the target packages
sets the excluded classes
sets the packages that are ignored in the given
prints the given printer to the current graph
parse the call graph call
adds a new edge to the graph
adds a new node to the list
this method is used to translate the given code code
counts the number of targets
build the classpath
add a skip method to the list of methods
find the method data
executes the action
sets the analyze dependent directories
sets the auto search in directories
sets whether the application is closed
sets the report
sets the property
sets the main classes
sets the modules
sets the modules directory
sets the output directory
sets the property graph
sets the rules for the
sets the selected classes
sets the value of the code must understand second code field
sets the statistics for the file
sets whether or not the given structural constraint is
sets the structural rules
sets whether the user tracking the specified level
sets the timeout for the specified timeout
sets the type state of the option
sets the type of the upn p state
sets the rules state rules
test that the is tested
tests the
tests the
tests the
test the of a
test the output stream
test the output stream
tests the
test iterator
tests the
handle the of the
adds a new access to the context
returns the reference for the field
returns the reference for the given method
the of the
returns the code invocation code for the code invocation code
load all sources from the module
unions the union of the two arrays
returns the collapsed entry for the nth decision
returns the collapsed collapsed item
build the scope of the current scope
adds the application modules
the implementation of the set recursion method implementation
adds a node node exception to the given ast node
adds a node instruction to the graph node
adds a block instruction constraint
adds a new node instruction constraints to the tree
resolve the classpath entries for the project classpath
returns a scope that is a scope for the given class
returns the value of the specified parameter
ensures that the given symbol is in the current position
returns the phi value for a given value
returns the index of the first instruction in the list
returns true if the catch block is a catch block
returns true if the given block is a catch block
returns the basic block number block number
returns true if the given basic block has a valid
returns true if the given code block code is in the same
returns the ir
creates a new
creates a new
returns true if the given cell has a variable
scans the given type declaration
checks whether the given site is allowed in the
returns the target of the given type and returns the target
returns a new machine state machine
sets the local index to the specified local index
assign a value to the given context
initializes the
returns the type abstraction
resets the dictionary
computes the edges of the
adds all classes to the given class loader
update the pi
returns the index of the last instruction in the graph
adds a block to the block
adds a to the list of
adds a to the given block
adds the given to the list of all the nodes
adds a new to the cache
returns a new instance of the
adds a class loader to the scope
add a classloader to the list of classes that are
adds a loader to the list
adds the given code to the code scope code
adds a new code transformer code to the list of
registers the given code code to be invoked by the
adds a node to the graph
process a field access
adds a block instruction constraint
returns the points to set to the given set of
sets the find key
this method is used to set the implicit
this method is called by the
sets the transitive root of the root node
p record the given number of points to the given
adds a new node constraints to the end of the list
returns pointer key for given array key
translate the given module
checks if the is
sets the factory
returns the for the given method
process a type
start the method
checks if this is
process the
sets the current state of the specified
puts an object in the current map
adds all of the elements in the specified set to this
returns an iterator over the elements in this list
returns a triangular algorithm
sets the
adds all contained elements in this set to the given set
adds all of the elements in the specified set to this set
sets the bit mask
clears the bit set of the specified bit
returns the bit mask of the bit
sets the bit set to true
returns true if the given code intersection code is in the same
adds a new code code to this code code
returns the intersection of this object
intersect this set with the given set of all the
sets the
adds a node to the
returns the value of the specified column
transfers the current map to the current backing map
sets the pending children of the given element
initializes the iterator
sets the value of the bit set
sets the parent class
starts the process
waits for the to be
returns the classpath to use for the classpath
sets the value of the string property
returns the constant pool
sets the value of preset
a
enables the fake fake textarea
sets the class info for the given class
emit an instruction in the stack
emit an array of instructions
insert the given object into the list
sets the manifest builder
adds a new instruction exception handler to the stack
p sets the input class name
add a new method exception handler
sets whether the should be included in the
visit instructions for each element that has received the given
closes the jar file
test the get cell method
tests the init method
tests the
test the creation of a solver edge
tests that the
tests the ability to set the mutable sparse function
tests the of
test bit vector
tests the correct functionality of the
tests the ability to set the mutable sparse mutable

creates a new context context
make a type context for this context
creates and returns a context for the given context
creates a context for the given context
creates a new context instance
delegates to the visitor visit
called by the parser when entering a parse tree node
post process entity process
visits an entity
this method is called when a entity is destroyed
this method is called when a new entity is found
visits a file entity
leaves the entity file
visits a field
called by the parser when a new entity is destroyed
visits a type entity
this method is called when a type entity is destroyed
visits a function entity
leaves an entity
visit the given entity
invokes the closure of the given entity
delegates to the wrapped visitor method
called by the parser when entering a component
post process node
visits a node in the tree
leaves the node
visit a function expression
leaves the function expression
called when a statement is a function
called when a function is definitely destroyed
visit local scope
leaves the scope
visit a block of block
leaves block buffer block
block block block
leaves block block block block block
invokes the visitor method on the given code code
called when the loop loop is collapsed
this method is used to allow the to be reused
this method is overridden by subclasses to perform processing on the given
visits an exception caught
throws an exception
checks if the node is correct
process the given
delegates to the wrapped visitor method
leaves the state of the
delegates to the super method
called when a is destroyed
delegates to the visitor visit
called by the when a call to a call
visits a var var var var var var var var var var
called by the context to indicate that a savepoint is
visits a constant
leaves the given constant
visit the binary binary expression
leaves binary binary expression
delegates to unary expression
this method is called when a unary expression is unary
visit length of the array
this method is called when the array length is detected
visits the given array ref
this method is called when a is leaving
visits a declaration
this method is called when a statement is definitely removed
delegates to the wrapped visitor method
called by the when a node is destroyed
delegates to the wrapped visitor method
leaves the
visits a goto goto
visits the given statement and returns true if the statement is a
called when the is not null
executes the given statement
throws an exception if the statement is definitely used
leaves the stmt in stmt
leaves the statement
visits a expression
checks if the expression is in the block
checks if the expression is in the block
this method is called when the expression is collapsed
delegates to the wrapped visitor method
creates a new
delegates to the wrapped visitor method implementation
registers a field literal in the context
this method is called when a literal object is closed
visits the given literal
this method is called when a literal expression is encountered in the
this method is called when a literal is encountered
this method is called when a literal is leaving a literal
visits a reference object
this method is called when a object is finalized
delegates to the wrapped visitor method propagating visitor
this method is used to assign a new code code
visits an array reference assign
this method is called when an array of
executes the operation assignment assign a new operand
throws an array of operands assign an operand to the
delegated to the wrapped object
this method is called when a new object is moved
executes the operation assignment assign a non operand
throws an object nop
visits an assignment expr assign assign expression
this method is used to assign a block of block
executes a method visit
throws block expr
visits an eq expression
this method is called when the scope of a variable is definitely
executes the variable assign operation
invokes the method on an operand
delegates to the visitor visit
this method is called when the value of the is activated
this method is called when the is
throws a visitor
throws a code nop code implementation
visits a catch catch catch
this method is called when a is created
delegates to the wrapped visitor method
leaves the
delegates to the wrapped visitor method
leaves a block
leaves the given
throws a visitor
leaves the state of the given node
visit a primitive primitive
this method is called when a new primitive is instantiated
delegates to the wrapped visitor method
called by the
visits a cast expression
called when a cast is wrong
visits a
leaves the
invokes the code marshall code method
invokes the code marshall code method descriptions
invokes the code marshall code method
returns the id of the route
sets the id of the route
start the streaming track
start the track
pause the track
stops the track
stops the
returns true if the service is currently being downloaded
returns the altitude of this
returns the current point of the current location
returns the name of the
returns the id of the given position
returns the
returns the start geo point for this node
save the route to the given position
save a new
uploads the given route to the given route
deletes the
returns the last geo point
deletes the route at the given position
logs an error message
returns the end point of the geo point
deletes the route
save a new route to the database
save the current data to the given data
returns the id of the video
sets the photos
returns the point of the point that this edge is in
returns the video video
sets the
sets the point of the circle
returns the video path
sets the points
deletes the video
saves the current state of the
creates a new instance of file with given id and new
sets the distance between the distance and the distance
sets the
returns a string representation of the object
returns the id of the photo
adds a point to the end of the list
sets the user specified password
returns the photo description
returns the user
returns the password
returns the path to the photo
returns the description of the
deletes the photo
gets the value of the type property
returns the
adds the given point to the current position
create a new video
plays the video
this method is called when the photo is not already loaded
show the photo in the photo
returns the string representation of the
sets the user password
insert a new photo at the given location
deletes the user pass
insert a new path into the database using the given path
get route with a route
returns the current location of the last point
update the photo id
start tracking the track
stop the track
sets the upload
get full route route for a given id
get the path to the photo
insert route into database
sets the current photo
save the current state of the file
configures the plot
returns the temporary file directory for the given directory
deletes the photo from the database
deletes the temporary directory
insert a video
insert a new point in the database
updates the route position
delete route with given route id
update the video
sets the upload
update route with the given name and its route
insert a new video file
get the path to the video file
update the details of the given route
open the database
insert a new point in the city
sets the data in the database
returns the first geo point in the table
delete the video with the given id
returns the last point in the table
returns the last geo point in the table
delete route with given route id
insert a new into the
update a placemark with the given name and update its title
get the first geo point for the given id
sets the upload and update the
insert a new route into the database
insert a new route into the database
update route with the given route
sets the data in the table
returns the last geo point in the database
updates the details of the given row
delete the row with the given id
deletes the route with the given id
delete route with given route id
check if the server is already in the database
sets the server id and server using the given id
check if the server id is already stored in the database
creates a new with the given id
returns the placemark with the given id
updates a placemark with the given name
sets the
deletes a placemark from the database
create a new photo
saves the photo to the file
returns the photo with the specified id
update the photo id
sets the photo to be uploaded
deletes the photo from the database
create a new video video
saves the video file to the video
returns the video video object for the video
updates the video with the given video id
deletes the video
mutate the hole hole
returns the effective thickness of the hole
updates the current state of the
updates the
unloads the specification from the given specification
this method ensures that serialization returns the unique
unload the current
this method initializes this
handles the event
notifies all registered listeners that the selection changed
removes the specified from the world
initialize the server
send a message to the server
closes the connection
returns the next word in the sequence
prints out the current
prints out the current
returns the next char in the alphabet
sets the parameters of this function
sets the parameters of the function
returns the character at the specified index
move left left
move the
rotates the
returns the point of the
resets the current state of the
rotates the
move left left
move the
this method moves the left leg of the
move the given point in the right wheel
move left left
rotates the
this method is called by the
rotates the with the given
this method is called by the
move the given to the right
this method is called by the
this method is called by the
this method is called by the
move the given right leg and the given one
move the given to the right
rotates the with the given
this method is invoked to move a ride left
the
rotates the given on the right hand side effect
move left left
move a right
move right
this method is called to move the left leg
move left left
move a right
the
rotates the given on the right hand side effect
this method composes the left
this method is called when the third command is
move left left
move right
this method is called when the is left
move left left
move right
this method composes the left
this method is called when the third command is
stops the
resets the list of commands
tests if the specified code name code is loadable
fix the predefined types
returns the index type
returns the integer value of the field
returns the long value of the object
get the float value of the object
sets the type of the
returns true if the given type is in the type
returns the fold fold
build the context
checks the for the given type
packs the center to the current frame
creates the root pane that will be called by the
show the splash screen
returns the value of the join
returns the target object of the target object
returns the object that is currently executing
update the database with the specified name
creates a new instance of tree popup
invoked when a mouse button has been released on a component
invoked when a mouse button has been pressed on a component
invoked when the mouse has been clicked on a component
starts the result set
shuts down the
creates a new instance of popup
displays the current page
this method is called whenever the observed object is changed
creates a new instance of code this code
configures the browser impl
constructs a prolog prolog list with the given list
append a to the classpath
stops the search
returns the name of the display name
returns the name of the display name
compares the specified object with this object
find all files in the directory
initializes the game
restarts the game
create the screen
returns the type of the menu
sets the type of the menu
moves the previous index to the previous option
updates the loading screen
selects the next index
paints the game
deactivates the given code code
start loading the thread
draw the title of the screen
draw the help about screen
this method is called when the menu is
load the images
run the current thread
move the cursor up
sets the title of the title
draw the options on the screen
returns true if the loading background color is on the background
adjust the sound sound to the sound
stops the loading thread
frees the resources associated with this image
sets the dimension of the view
pauses the game
resumes the game
restarts the player
checks if the given code code is valid
updates the game state
change screen
notify the error that the user has changed
returns the list of all the
goes back to the screen
sets the time in milliseconds to be used as a time in
returns the time in milliseconds
creates an image
move the current line
save the palette to the palette
returns the size of the palette
find the color for a given color
sets the position of the sprite
find the next palette entry
sets the color at the specified index
sets the color at the specified color
repeat key release
sets the color at the specified color
frees the instance
returns the current screen
returns the screen of the given screen
sets the animated sprite for the given tile
pause the current screen
returns the current tile in the tileset
resume the current screen
returns the cell at the specified position
returns the height of the cell
notify the component that the user has changed
returns the cell width
returns the number of columns in the grid
returns the number of rows in the grid
sets the cell at the specified location
push the screen at the top of the stack
returns the last stack index of the given index
returns the x coordinate of the x coordinate
returns the y coordinate of the y coordinate
sets the reference position of the reference
returns true if the given point is in the specified location
sets the visibility of the sprite
returns the current sprite index
returns the index of the next element in the stack
sets the current sprite index
returns the current sprite
sets the sprite for the sprite
updates the sprite with the specified key
returns the tile at the specified location
paints the sprite
returns the damage
called when the animation is finished
notify the game object that the game has been moved
returns the key states for the given key
frees the instance
initializes the sprite
show the menu
hide the menu
plays the sound at the specified index
this method is called to load the screen
closes all the sounds
free resources allocated by this application
release the sound
clear all the background
called by the midlet to terminate midlet
start the thread
stops the thread
returns the fps fps
returns the main canvas
sets the type of the menu
draw the options on the screen
deactivates the given code code
resumes the game
updates the game state
start the application
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the kind feature
this adds a property descriptor for the symbol feature
this adds a property descriptor for the pin count feature
this adds a property descriptor for the port reg feature
this adds a property descriptor for the index feature
this adds a property descriptor for the reg feature
this adds a property descriptor for the pin index feature
this adds a property descriptor for the config feature
this adds a property descriptor for the latch reg feature
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
sets the selection to the viewer
creates a new adapter for an object of class
creates the meta model objects for the package
this method is called by the animation
resets the current selection
mouse released mouse listener interface
mouse released mouse listener
invoked when a mouse button has been released on a component
invoked when the mouse has been moved moved
sets the images of the image
returns the selected index
resets the current selection
mouse released mouse listener
invoked when a mouse button has been released on a component
move the to the next move
sets the images of the image to be displayed
move the to the next move
sets the animation speed
sets the color of the given color
sets the grid flag
forces the game to minimize the current theme
swap two points in the puzzle
this method is called by the
this method is called by the animation
returns the node corresponding to the given production
a

resets the iterator to the default values
reloads the values from the given result set
returns a string representation of the object
returns a clone of this object
returns the number of mappings in this collection
checks whether the map contains the specified key
parse a vector of
converts a position into a string
returns the value to which the specified key is mapped in this
puts the value to the specified key
sets the parser type
puts all the keys contained in the specified map into this map
clears the current state of the
returns the set of mappings contained in this map
returns the set of mappings contained in this map
adds a new inode to the list
returns the element at the specified position
removes the specified element at the specified position
returns true if this is empty
returns the iterator for the grammar
returns the entry table entry for the given table
returns the message of the node
returns a string containing the message text
adds a statement to the end of the list
returns the number of statements in the pool
returns the statement at the specified index
returns the label
returns the expression
returns the try block
returns finally block
sets finally block for this block
returns the statements that this class represents
sets the value of statements
sets the statements
removes the specified element at the specified index
returns the element at the specified position
adds a new inode to the list
removes the given element from the list
returns true if this is a while
tests this expression for equality with an arbitrary object
returns the value of the node
sets the node value
returns true if this type is a boolean
returns true if this class is public
returns the hash code of the object
compares this method signature
gets the transformation
sets the transformation
returns the expression type
returns the message
returns a hash code for this object
clones the object
returns the parent of this node
updates the document with the given document
returns the number of lines in the specified line
load the master configuration from the master file
sets the file to be used for the file
sets the session config
returns the config for the given type
returns a template with the given configuration type
copy the template from the given template
renames the name
updates the template with the given template
sets the default template
adds a behavior to the worklist
returns the tag set
creates a template with the given name and template
returns the excluded tag set
returns the current set of the tag tag
creates a template
returns the tag set for the given action
scrolls the view to the left scroll position
scrolls the right view
writes the document to a file
sets the accepted revisions
sets the accepted revisions
returns the string that contains the revisions string
returns the offset of the line column
saves the current file to the database
returns the comparison set
returns the document with the given id
saves the session to the specified file
adds a document to the document
sets the base text
returns the document manager
returns the current collation type
returns true if the given point is in the list of active
removes a document from the document
returns the range of content range
sets the enabled state of this component
sets the mouse hover listener
returns the file where the file is saved
sets the file to save the file
marks the modified as modified as the modified
closes the current session
refreshes the comparison set of the current state
this method is called when the document is selected
redraws the component
handles the click on the click
returns true if the given difference between the given points
this method is called by the factory when the
clears the current text
highlights a subset of the given number
creates the status pane
returns true if the server is a alive
finds the id of a set of
this method is called when the user selects the cancel button
creates a new file
scrolls the view to the scroll bar
get the status of a particular request
centers the offset on the given offset
sets up the template
sets the type configuration
returns the configuration
creates the panel for the template
creates the panel that contains the template for the
handles the configuration of the selected configuration
cancel the edit
enables disables the editing of the editing
writes the template to the given file
this method is called when the user selects the delete template
writes the template to the given file
this method will be called when the user selects the selected template
saves the configuration configuration
deletes all the rows from the model
creates the document builder
parses the profiles
tokenize the task
sets the status of the task
returns the string representation of this object
compares the given type with the same value
returns the optimum symbol ratio
returns the type of this atom
sets the length of the
sets the length of the base text
returns true if the given point is the same as the same
saves the document to the document
removes a document from the document
load the master configuration from the master file
sets the
gets the value of the property
removes the annotations from the model
creates a template
returns the current collation object
saves the file to the specified file
sets the text to be used for the current document
removes a document from the model
returns the base path for the document
closes the session
removes a document from the document
returns the document model for the given id
sets the document content
template method that is invoked when the user selects the delete template
this method will be called when the user selects the selected file
saves the configuration configuration
returns true if the given difference between the given
paints the chart
returns the current document
returns the number of lines in the specified line
scrolls the view to the left scroll position
scrolls the right view
sets the location of the view
shows a new template help dialog
returns the tooltip for the given mouse event
cancel the edit
enables disables editing of the editing
returns the number of lines in the text area
sets the scroll position
returns the scroll position
adds a listener to the scroll pane
draw the caret
switches to the language
this method is called when the user selects the space
returns the color for the specified value
get the color for the given array of values
returns the color of the specified value
returns the color of the specified value
returns the color map
sets the som branch group
sets the color of the
sets the gray scale
remove the som branch group
sets the group of the
set the gray scale for the
gets the data branch group
sets the rgb scale color to the red green component
removes the branch group from the
sets the viewing translation
sets the scale color
translate the view to the current perspective
sets the preferred color for the hour component
sets the scale color for the temperature scale
returns true if the display is a regular expression
shows the regular tree
show som
sets the graphics flag
sets the visibility of the axis visible
sets the visibility of the neurons
sets the background color of the component
sets the to be used for this branch
returns the background color of the
returns the rotation behaviour
sets the color to the default color
returns the current
displays the given in the tree
sets the radius of the sphere
returns the radius of the sphere
sets the
returns the topology of the
updates the rotation of the current image
apply trans apply to the center of the vector
this method is used to set the color of the data points
sets the size of the
initializes the popup menu
handles the action event
sets the transparency of the transparent pixel
sets the caps of the shape3 d
sets the opaque transparency of the opaque
sets the color of the appearance
sets the visibility of the rendering
toggle the selection state of the toggle
sets the selected state
update the
update the geometry
hides the
sets the transparency of the canvas
returns the current
updates the coordinates of the
sets the radius of the geometry
update the coordinates of the
update the appearance of the appearance
hide the line
sets the geometry to the
returns the number of lines in the file
this method initializes the intersection of the
calculates the number of lines in the
sets the capabilities of the surface
returns the current axis
returns the matrix of the given matrix
returns the vectors of the matrix
sets the visibility of the axis
sets the capabilities of the image
test of compare method of class
sets the busy status of the task
sets the cursor to the default
adds a canvas to the canvas
description of the method
returns the current classification panel
returns the menu bar
returns the train control
returns the button that is shown in the view
this method returns the neuron size of the neuron
gets the value of the size spinner
returns the som trainer
sets the fields to the training values
creates the combobox combobox
calculates the combobox
sets the
sets the type combo box
checks if the ok button was pressed
cancel the cancel button
sets the icons
sets the description vector
sets the resources for this class
returns a string representation of the object
returns the number of descriptors
returns the next random pattern
sets the action listeners
returns the next token in the current stream
returns true if the current iteration has more
resets the counter to zero
initializes the random sequence
returns the number of activities
sets up the combobox combo box
returns the activity counter map
check if the is
returns the number of lines in the line
returns a random line of the current line
enables disables the button
returns the number of classes in the given class
resets the action performed
this method is called when the training thread is performed
starts the update process
this method is called when the user selects the
pause the emulation
sets the update interval
notifies the time training update
update the
called by the framework to indicate the training status of the training
returns the balance of the
this method is called by the thread
returns the smallest balance of the
starts training thread
sets the training thread
returns the index of the
stops the training thread
returns the string representation of the current instance
returns a string representation of the given number
updates the selection of the given object
sets the of the current som
this method sets the number of
returns the vertices
returns the string representation of the vertices
sets the table
returns the table of the table
returns the string representation of the vertices
initializes the topology
sets the dim dimension
returns the weight of the given weight
sets the weight of the specified weight
sets the weights
sets the som som som
returns a string representation of this object
sets the initial of the
adjust the number of
sets the of the learning capabilities
this method is called by the framework to initialize the layout
adjust the learning rate of the confusion matrix
sets the vertices of the given array
sets the table
returns the index of the given grid coordinates in the grid
returns true if the given point is a square of the same
returns a string representation of this object
creates a grid coordinates from the grid coordinates
returns the time in seconds for the given time
returns the value of the specified time and the second time of
returns the strength for the given
initializes the topology
set the default values for the orbit
sets up the name of the
train the som
sets up the name of the
train the som
builds the
this method is called by the framework to initialize the building
initialize the
returns the number of finished executions
initializes the
returns the maximum time in seconds
returns the
sets the of the som
returns the final
sets the final
sets the frequency frequency
returns the current
returns the of the som
sets the
sets the frequency of the frequency
returns the final learn rms rms
returns the index of the given coordinates in the model
sets the final learn for the som
returns the current time in the som
returns true if the given coordinates are equal
returns true if the time is finished
returns a string representation of this object
creates a grid coordinates
resets the
check if the time of the time has been changed
sets the tooltip text
returns the number of dimensions of the current
sets the value of the parameter values
initializes the
returns the
returns the fast value of the given x coordinate
checks whether the current value is greater than or equal to the
checks whether the values of the values are equal
returns the absolute position of the label
returns the label of the given position
returns true if the xor mode is enabled
returns the absolute position of the relative position in the
paints the background of the panel
paint the background image
paint the foreground color
creates a handle for the given context
clear the offscreen
sets the visibility of the grid
creates a buffered image with the specified width and height
returns the dirty flag
adds a new offscreen dirty to the internal buffer
clears the internal buffers
releases resources resources used by this factory
sets the background image
sets the background color of the background
removes the cell views from the view
sets the model that is used by this model
sets the layout cache for the graph
highlights the given cell
returns the bounds of the given cell view
creates a new workflow
transform the source file
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
validates the pattern constraint of em bpel variable name em
validates the min length constraint of em bpel variable names em
validates the item type constraint of em bpel variable names em
validates the min length constraint of em em
validates the pattern constraint of em bpel variable em
validates the min length constraint of em bpel variable names em
validates the item type constraint of em em
validates the min length constraint of em em
validates the item type constraint of em base type em
initializes the version id
this method is used to set the process and the previous state
initializes the annotations for b b
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
checkin the
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates the meta model objects for the package
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the meta object for class
sets the value of a property
sets the style property
returns the css theme for the current theme
called when the user changes the theme
called when the theme changes
returns the element that is currently being used for this container
sets the container element to be used for this component
returns the element that is currently being used for the
sets the element to be used for the
sets the element style
sets the bottom margin
sets the left margin
sets the right margin
sets the top margin
sets the bottom margin
sets the left margin
sets the right margin
sets the top margin
returns the index of the widget at the specified index
inserts a widget into the container
returns the spacing between the table and the end of the table
sets the height of the widget
sets the horizontal alignment of the widget
sets the vertical alignment of the widget
sets the width of the cell
sets the spacing between the table and the specified cell
adds a widget to the container
adds a html fragment to the page
ensures that a widget is visible
returns the horizontal scroll position of the given horizontal scroll bar
returns the vertical scroll position of the given widget
scrolls the widget to the bottom scroll bar
scrolls the widget to the left
scrolls the widget to the right
scrolls the widget to the top of the widget
sets the horizontal scroll position
sets the position of the vertical scroll bar
sets the widget to scroll bars
returns the horizontal scroll bar
sets the scroll bars visibility
returns the scroll bars scroll bar
initializes the engine
build the rendering of the current rendering
load the template from the given template
initializes the widget
called by the framework to perform the creation of the
build the rendering of the rendering
called when the engine is done
returns true if this object is ready to be ready
returns true if the given state has been set
returns the element for the specified attribute name
returns true if this is ready to be ready
sets the element for the given element
sets the element to be attached to the given element
returns true if the state of the given state has changed
returns the element for the specified attribute name
sets the element for the given attribute
sets an element
returns true if the item is valid
returns true if the index is in the select list
returns true if the item is in the given index
called when the select index is selected
called when the focus is gained
creates a css style
creates a new css class
transforms a key value pair into the given key
update the direction of the
sets the
returns true if the is
attach the to the current
detaches the component from the parent
publishes a
called by the framework to load the stylesheet
this method is called when the user wants to unload the page
creates a css style sheet
creates a css style sheet
sets the style sheet
sets the style sheet
returns true if the is
returns the row style
returns the odd style
returns the selected style
returns the selected style
returns the style of the row where the label is displayed in
returns the style of the cell that is displayed in the table
returns the css stylesheet url
creates a css style sheet
returns the base class
adds the given class to the super class
adds a css class to the list of required classes
applies the widget to the given widget
applies the widget to the widget
applies the element to the given element
applies the given element to the given element
this method is called when the user selects the imported declaration
adds a new declaration to the list of
adds a new declaration to the list of
gets the value of the property
gets the value of the property
sets the declaration
sets the declaration of the given type
returns true if this is empty
returns true if this is anonymous
sets the published value
returns the selected text
returns true if the input stream is read only
click the button
selects all the items in the range
sets the read only mode
sets the selection range
sets the text alignment
returns the container for the given document
toggle the class of the given element
called when a child is added before
called after the child is removed
hook method called after the view is removed
hook method called after the remove method is removed
sets the style for the given style
notify the listeners that the state has changed
notify the listeners that the state has changed
open the dialog
open the dialog
this method is called by the
adds a child to this node
returns the child with the given name
sets the parent of this node
this method is called to indicate the end of the file
returns a description of the locked filter
returns the level of the given type
returns the number of children of this node
adds a child to this node
inserts a child at the specified index
removes the child at the specified index
returns true if the mob is empty
returns the number of mob in the current
prints the
returns true if the is
returns the monster name
adds a new monster to the list
removes the specified monster from the list
this method is called when the player is exiting
adds a player to the list of all the
sets the static flag
returns the
the monster
sets the player position to the given position
returns true if the member is member of the group
returns the position of the player at the specified position
returns the c1 color
sets the c1 c1
returns the c2
sets the c2
sets the rectangle
process window event
returns the mnemonic for the given character
adds a listener for the interactive event listener
saves the document to a document
at startup create and show the main frame of the application
returns true if the font is underlined
returns the valid time at the specified time
returns the valid date
import data from clipboard
returns true if the given data flavor has already been defined as
this method is called when the user selects the
this method is called when the user selects the
sets the render property
returns the render property
sets the renderer for this cell
returns the number of visible row count
updates the controls to reflect the current state of the
creates the button bar
this method is called when the application is created
returns the amount of grams
creates a new user object
adds a new account to the list
returns the move
begins the battle
returns the possible
returns the uuid
returns true if the is enabled
sets the
returns the species data
returns the balanced level balanced
returns true if the ability can be used to negotiate the ability
sets the enabled
returns the move set data
sets the type of this
creates a new
returns the of the move
returns the data item data object
disposes the toolkit
returns the move data
returns the move set to the specified data set
returns true if the species can learn learn
returns the
saves the data to the given data stream
sets the value of the substitute property
sets the data length
returns the random number generator
saves the species database to the database
returns the length of the data in the data
this method is called by the thread
returns the substitute
attaches the current field to the
removes the given from the list of moves
sets the abilities for the given type
p is ability wrapper p
returns true if the current user has substitute substitute all the
p check if the ability is a ability to be used
returns the species at the specified index
returns the number of species in the database
this method is called when a list of items in the list
returns the name of the given
returns true if the given point is in the
this method is called by the
removes all effects
removes the effect from the given effect
returns the effect with the given type
disposes the toolkit
returns the of the
applies the given input stream to the given input stream
applies the effects of the given
switch to
returns the opponent of the given opponent
replaces the with the
sorts the list of active sort
sets the
updates the of the current state of the
returns the number of times the player has been made
this method is called when the user selects the next
returns true if the is
returns the gender of this entity
this method is called when a session is created
normalize a normalized unit
returns the name of the ability to be used to create a
attempts to reduce the of the given entity
returns true if the move is a move
returns the effect value
returns the
returns the
returns the ability ability
sets the ability to be used for the ability to add a
check if the item is in the species
returns a view of the species in the specified species
saves the given data to the output stream
load the data from the given input stream
removes an item from the list
adds an exclusive item to the set
returns the item name
switch to the given
this method is called by the
returns the tier
returns the item that was previously created by this

switch to the given
this method is called by the
returns the tier
checks if the is valid
returns the move entry
turns the on the given
the player
sets the
checks if the is
returns the
returns the lock lock
apply the
returns true if the is

returns true if the workload is supported by the job
sets the value of the percentage
returns true if the specified code code is a exclusive exclusive
clones the object
sets the item
returns true if the given is
returns the tier
returns true if the given code code is a
checks if the given field has any effects
this method is called when the user wants to tick
sets the types of the given type
returns the current tier
returns a copy of the field effect
returns true if the is
sets the field to the specified field
begins a new tick
switch to a specific
switch to the given
displays a field in the
displays a field in the
this method is called when the user selects a
displays a field in the cmr field
apply the given field to the current group
displays a field in the cmr field
apply the given field to the current group
returns true if the is not found
returns true if the given is transformer
displays a field in the
displays a field in the
displays a field in the cmr field
displays a field in the cmr field
this method is called by the
apply the to the

apply the given field to the current group
apply the given field to the current group
returns the sprite that is associated with the sprite
returns the code move entry code with the given code code
the player
calculate the stats for the given array of samples
returns true if this is a special special
returns the multiplier for the given type
compares this type with another type for equality
shuffles the
returns the string representation of this type
returns true if the given code code is a
returns true if the raise raise raise is valid
returns the stat of the current stat
returns true if the event is a listener
this method is called when a damaged move is damaged
attempt to hit a
this method is used to determine if the given is
returns true if the given object is a
saves the file to a file
sets the attacker
checks if the given target is effective false otherwise
saves the object to the given output stream
calculate the stats
returns the entry list entry
move all the to the
returns true if the given is a special
attempt to check if a given location is hit
this method is called when a duplicate is collapsed
a
load the specified file from the file
returns true if the player is attacking the game
load a file from the file
load the file from the given file
sets the accuracy of the accuracy
returns true if the given is a
returns the type of this
returns the number of in the set
returns the exception that was thrown by this method
returns the of the user
returns the move set at the specified index
returns true if this is a switch
returns true if this object can be critical
sets the power of the game
move a move to the given location
returns true if the critical hit rate is critical
returns true if the player is a attack
begins a tick
returns true if this is a
merges the given one with the given one
load the file from the file
checks if the given is in the given list of moves
tests this object for equality with an arbitrary object
returns the trainer name
returns true if the given move is a move
returns the opponent of the opponent
checks if this type is a type
returns the critical hit factor
returns the code move entry code for a given entry
p is critical
sets the value of the specified element
returns the of the given index
returns the maximum number of in the given index
returns the move entry at the specified position
returns true if the first turn is a turn
switches to the current state of the current move
returns the original ability
switches out the effect of the current state
sets the enabled state of the tree
returns the effect effect at the given index
sets the appearance of this component
adds a key listener to this toolbar
checks if the effect is not available
removes the key listener from this panel
checks whether the position contains the specified position
adds a controller listener to the controller
removes a controller listener from this controller
returns true if the effect is in the effect of the specified
adds a mouse wheel listener
removes a mouse wheel listener from this canvas
sets the background color of the component
updates the appearance of the appearance
returns the current increment button
returns the background color
returns the decrement button
returns the effect with the given type
checks if the given type has a level
sets the title text
returns the title bar
returns true if the ability is present
adds a child component to this container
adds a child component to the container
creates a rounded corners and height of the rectangle
returns true if the item has a given name
removes the specified component from the container
returns true if the current state is active
returns the species name
sets the nickname
returns the nickname
returns a list of all the statuses that are currently active
returns a list of all the active objects
checks whether the current state of the is active
notifies all listeners that the event has been changed
begins the emulation
removes all the from the list
creates a new button
creates a simple scroll button
notify the that the effect is
the effect of the effect
removes the status from the given status
removes the specified status
returns the display text
fires an action performed event
removes all the status from the given type
sets the spacing between the
sets the active state of this layer
returns the party id of the party
sets the visibility of the component
returns the field
returns the display of the parent
returns the name of the move
returns true if this component is showing
returns true if the is
renders the component
returns a clone of this object
sets the padding of this pad
sets the value of the top left corner of the rectangle
sets the value of the given attribute
returns a string representation of this object
sets the enabled state of the button
checks if the given code code is a
invoked when an action occurs
invoked when a controller button is clicked
returns the x coordinate of the last mouse event
returns the character associated with this character
sets the key code
returns the sprites current value
sets the character key used to identify the key value
returns the absolute x position of the image
returns the absolute y coordinate of the image
returns the amount of amount that the event was changed
the children of the
compares the specified object with this object
adds a child to this component
returns a clone of this object
returns a string representation of this object
adds a component to the container
removes the specified component from this container
sets the foreground color
returns the child at the specified index
updates the appearance of the appearance
returns true if the component contains a child
returns the code code entry for the given code code
returns the index of the child index in the specified component
removes all children
renders the children of the given graphics
updates the specified child
returns a clone of this object
returns a string representation of this object
sets the background color of this component
sets the opaque attribute of the object
updates the component
renders the component
move the move to the specified move
update the canvas
returns the packed size of the image
reinit the current input context
this method is called when a damaged is moved
sets the disabled foreground color
sets the location relative to the given location
returns the disabled foreground color
sets the text
sets the horizontal alignment
returns the horizontal alignment of the image
sets the vertical alignment of the image
sets the location of the context relative to the context
returns the vertical alignment of the image
returns the font value for the specified
returns the owner of the component
returns the image for the given state
returns the image that is used to draw the image
returns the rollover image
sets the disabled image
sets the context
sets the image to be used for the down image
sets the image to be displayed when the mouse is moved
presses the action
sets the
restarts the timer
start the timer
returns true if the current thread is running
returns the health of the player
sets the appearance of this component
translate the current coordinate
called when the text is changed
returns the absolute x coordinate of the absolute x coordinate
checks if all are
enables or disables the repeat key
returns the absolute y coordinate of the parent
enables disables the key repeat
disables the key stopping time
returns true if the key repeat is enabled
checks whether the given status is supported by the given status
sets the bounds of the component
sets the height of the image
sets the width of the image
returns the for the given number of the given
sets the focusable attribute of the object
called when a session has been opened
this method is called when a session is closed
removes the focus
called when the exception is caught during the
returns true if the given point is inside the rectangle
returns true if the point at the x y position is inside
sets the glass pane attribute of the object
returns true if the glass pane is a glass pane
update the team
sets the horizontal padding
returns a string representation of this object
fires a mouse wheel event to all registered listeners
notify listeners that the controller has been successfully
sets the border border
registers the ability to register
this method is used to determine if the given is
returns true if the is
returns true if the effect is
compares this object with the specified object for order
removes all effects from the list of effects
adds a new to the list of effects
returns the number of layers in the given layer
adds a to the list of
removes a from the
returns the list of moves
returns a move entry with the given name
load the list of

this method is called upon plug in activation
returns true if the field is unique in the database
returns true if the preview mode is selected
returns the handle for the screen
returns true if the file saver is
tests the open field
test method for
test method for
tests the open field
tests that the open
tests that the open open
tests that the open many open open
tests that the open
reads the contents of the given file
parse the
returns a string representation of the given char
extended request data key to hold editpart visual id
creates palette tool group
creates palette tool group
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the target feature
this adds a property descriptor for the source feature
this adds a property descriptor for the label feature
this adds a property descriptor for the descricao feature
this adds a property descriptor for the software feature
this adds a property descriptor for the label feature
this adds a property descriptor for the descricao feature
this adds a property descriptor for the label feature
this adds a property descriptor for the feature
this adds a property descriptor for the descricao feature
this adds a property descriptor for the software feature
this adds a property descriptor for the feature
this adds a property descriptor for the feature
this adds a property descriptor for the software feature
this adds a property descriptor for the source feature
this adds a property descriptor for the target feature
this adds a property descriptor for the target feature
this adds a property descriptor for the source feature
load the term in the database
search terms for a given query criteria
returns the index of the term at the given index
returns the number of terms in the list
sets the data
returns the data
begin uml doc
this method will generate a string representing the current state of the
returns the links in the
this method will be called by the server to display the node
returns the list of the interfaces that are contained in the table
quits the application
saves the current state of the file
returns a description of the test
remove all clients from the server
remove the
execute the command
returns the shell
waits until the thread is finished
returns the hex value for the specified z coordinate
returns the color of the
sets the progress
test the send request
invoked when an action occurs
invoked when the user has changed its state
returns the field for the given field
sets the colors for the given colors
shows an error dialog
returns the url of the file
returns the child node of the given key
test the assert that the
returns the text of the given xpath
returns the name of the tab
returns the of the
notify the event listener to notify the event
returns the email of the current user
returns the phone number of the current user
returns the contents of the buffer
adds the listener to the directory
appends the string to the buffer
show popup menu
sets the default values for all the preferences
sets the pref value
copy the link location
shows an error dialog
this method is called by the tree model to do the processing
tree tree changed
rolls the current roll to the treasure
prints a treasure to the given item
this method is called when the user selects the percentage
parse the fraction of the current
modifies the given item
initializes the handlers
checks if the category is
disable the item types
prints the current log
prints the string to the new log
creates and returns a new
creates a new default treasure item
removes the treasure item from the given item
this method creates and returns a string representation of the
adds a new property to the map
prints out the
append a string to the current property
print the items
roll the current roll to the dice
returns a map of all the rows that are not rolled to
returns a string representation of the
create a new tab
this method initializes this
removes the selected tab
print the of the
removes all tabs from the map
add a table to the table
returns the string representation of the rings
returns a map of the data
print the of the
roll the dice
returns a string representation of the
checks the table for the given table
returns a string representation of the
test of item method of class net
creates a new
level
prepares the generator for the generator
this method will be called by the
print the of the
adds a new amount of text to the
adds a bonus to the list
adds brackets to the end of the list
adds a to the
adds a feature to the material attribute of the object
adds a name to the list
adds a prefix to the list of properties
adds a new second weapon to the list of the
adds the size of the to the size
add spell to the list
disable all the items in the gui
adds a suffix to the list of the properties
enables the of the
enables minor items
this method initializes j jmenu type menubar
reloads the configuration
initializes the captcha service
flush the buffer
flush the session
sets the application context
creates the field editors
prints the ant script
closes the output stream
prints the ant task to the ant task
runs a task in the ant task
prints the given jar file
run the build process
print a task
print a task
print ant task to output ant task
prints the given string
print a string
print a comment
prints a value
prints a copy of a file to a file
print a task
prints the given ant task to the given ant task
prints a task to the directory
prints a brand new brand and displays the given context
prints the given string to the console
prints the path structure
prints a project declaration
print the current project
print a property
print a string
print a start tag
print end tag
prints the tab
print a message with the given value
prints a message to the output
prints the current line
prints a task
prints a declaration of a given type
print the end of the target
prints a task to the given local file
prints a task to a given target
print the name of the directory
p print a property value
returns an enumeration of all the parameters of this
returns the value of the specified parameter
creates a new user
this method is called when user authentification user approve
this method is used to create the email user
deletes a user
returns all resources associated with this database
retrieves a resource by its code
creates a new
update the
deletes a
get by name
gets the
returns the
returns all
returns the number of
updates the user with the given user
updates the user password with the given password
deletes a user
get user by email
get user by id
updates the user object
get all approved users
update the list of plant
returns a list of all approved users
returns the user role of the user
returns the user id of the user
this method transfers the query to the given processing
returns a list of the
removes a from the list of
this method is called by the framework to perform a processing
returns the op name
returns the element
constructs a new object with the given
creates a new instance
creates a new instance
creates a new with the given
creates an instance from the given
creates a new instance of
reports the report of the specified report
determines if the second value is greater than or equal to the
returns the first element in the list
returns the value of the record count
returns the second element of this object
returns the record start value
this method is called by the thread pool thread to the
invokes the call back method
returns the value of the record dropped
returns the list of result objects
returns the total value for the total search hits
returns the number of response received
creates a new provider provider
returns the url string
returns the path to the script
returns the error state
returns the failure message
returns the software software
returns the send time
returns the id of the object
returns the source of the event
returns the protocol query
sets the mail host
sets the address of the address
send a mail to the server
replaces the given string with the given string
requests the request to be complete
returns the time needed to reduce the time
returns the content of the content of this object
returns the record count
returns the record dropped
connect to the given ami
returns the software software
add a task to the task
returns the send time
returns the diagnostics
sets the protocol query
sets the time needed to reduce the
sets the record start
notify all users that the user has entered their own
sets the record dropped
sets the total search hits value for this search result
notify the user that a user has been destroyed
sets the software software
this method is called when the analysis is done
this method is called when the
sets the send time
sets the type of the attribute
sets the search criteria
sets the diagnostics
sets the url
returns the url of the url
returns the of the search result
adds a bio search
clears the search results
removes the end segment of the given concept
adds a segment to the end of the list
returns the value of the record count
returns the start value of the record start record
returns the value of the record dropped
returns the total value of the total search hits
sends a request to the user account
returns the state of the failed
returns the error message
returns the software software
returns the send time
sends a request to the client
sends a new client request to the user
update the list of plant
creates the email
counts all
returns the last job date
returns the concurrent thread number
sets the concurrent thread number
returns a string representation of the object
add a concept to the list of concepts
add a new sort order to the list of concepts
adds a query to the query
returns the number of concepts in the list
returns the concept at the specified index
clears the list of concepts
send a mail to the server
executes the operation
sets the count of the
adds a processor to the list of processors
returns the total record
returns true if there are more messages to be processed
clears the current session
gets the value of the total count property
resume the
adds a query query to the query
cleans the data from the database
adds a new query to the query
returns a new capabilities query that is used to query the query
returns the thread that this thread is running
sets the thread
returns the number of ping requests
returns the request string that will be used to send the request
replaces the given string with the given string
this method is called to receive text
reports the report of the given report
sets the dublin core module
returns the total matched value for this
returns a list of all the
returns the number of records dropped for the record
returns the record start
update the client with the given client id
creates a client connection
deletes a client from the database
update the time in the given time interval
returns a list of all date alerts
returns a list of all date for a given date
returns the list of months that are notified when the user has
returns the first job date
returns all the admins in the list of admins
returns all the admins in the database
returns the total number of in the database
returns a list of all for the given server
returns a list of all for the given server
returns the type of the marshall type
returns the first lower case string for a string
returns the upper case of the upper case
returns a property with the given name
render the given string and returns the result
render the given string and returns the result
returns the web conversation
returns the text of the response
returns the title of the response
assert that the given key is the correct title
checks if the specified parameter name is a valid form parameter named
returns true if the parameter with the given parameter name is contained
tests that the page is correctly used to make sure that the
assert that a form element is not present in the form
returns true if the given text table is in the table
returns the web table with the specified summary
submits a submit button
assert that the given checkbox name is selected
assert that the given checkbox is selected
assert that a radio option is present in the radio button
assert that a radio option is present in the radio button
assert that the given option is selected
assert that the given select value of the given select value matches
assert that the given select value of the given select value matches
assert that a submit button with a given name is submit
assert that a submit button with a given name is present
assert that a submit button is submit
assert that a button with a given id is present
assert that a button with a given id is present
this method is called by the frame to go to the frame
executes the delete request
sets the broker service
this method is used to get the value of the request
returns the broker service
create a new broker context
this method is used to handle the request
check the given checkbox name
deselect a checkbox
close the zip entry zip zip zip zip zip zip zip zip
closes the stream
dump the response to the given stream
returns the format of the request
returns the page with the given name
replaces the with the given string
convert the xml into a xml document
returns a string that is in the given string
get the method name from the referer url
returns the dom document for the given page
returns the template for the given page
returns the of the given url
returns the http uri for the http server
returns the for the specified url
render the text
checks if the tag is a copy of the given tag
handle the image that is broken in the image
returns the size of the image
convert the value to a long value
returns the user for a user
checks if the room id is correct
get the user id
returns the id of the
returns the of the request
returns the room
returns true if the given component is a named element
renders the element with the given element
this method is used to display the title of the element
select the template element
render a group
adds the page to the list of room elements
returns true if the given component is a named
renders an element in the table
adds a new inline inline script to the list of the
returns the element that is currently being used to create the
add the list of pages to the list
renders the string representation of the contents of the
edit the template
edit the given element
renders the element to the specified element
hides the pages in the folder
returns the file name
adds a new inline inline script to the
returns the channel id
show the content of the page
creates a new element with the given element
returns the element
opens a new element with the given element
returns the base sharing base
adds a new listener to the list of listeners
returns the text area of the element
adds a channel name to the channel
creates the text for the text area
create a channel subscriptions to the subscriptions
returns true if the given element named name is currently visible
returns true if the given component is a named element
returns the last element of the given element
returns true if the given element named name is currently in the
returns the last element in the given element
renders the child string with the given name
returns the tool bar
this method is used to set the element to be used for
this method is called to make the text of the element
returns the preview button for the specified element
returns true if the given is a
returns true if the given is a
returns true if the given is a
renders the element to the specified element
returns true if the given is a
renders the element with the given element
returns true if the given component is a named element
renders an element with the specified element
checks the mails to see if they are selected
returns the color of the
returns true if the given component is a named element
renders an element with the specified element
renders the element with the given element
returns true if the given component is a named element
renders the element with the specified element
sets the attribute for the parent element
generates a element for the given element
this method is called when the user is an user
returns the imdb name for a given link
returns the type of the link that is associated with the given
returns the prefix for the given type of link
render a display string
returns the of the given
save a block of text
creates the default system
returns the string that is used to edit the edit string
sets the element to the given element
sets the xml element to the given xml element
retrieves the object from the metadata object
save a block of the current token
returns the plain text
returns the object associated with the specified key
sets the user
returns the plain text plain text
returns the object representing the deleted object
returns the named object
returns the delegate for the specified object
drops the content of the content of the content
returns a collection of all the entries that are deleted
returns a sorted sort object
returns the names of the current object
puts the object into the container
sets the of the
removes the object from the collection
sets the attribute of the object
returns the next new name
called when the persistent object is loaded
remove all objects from the database
returns the object for the given persistent object
returns true if the duplicate names are duplicate
unlocks the current thread
this method is called when the user selects a
write the end of the current cache
clears all the cache entries
removes the objects from the cache
adds a key to the
this method is called by the garbage collector
returns a string representation of the object
replace all occurrences of the string in the given string
this method is used to determine the of a given string
returns the plain text content of the current text
returns true if the entity is indexed
registers an object
start reading the thread and starts the thread
reads the data from the given element
start writing the current thread
adds a session to the session
returns the equation that is the specified string
returns the object representing the class of the database
returns true if the page contains the specified page
clean up all the garbage collection
unloads the object from persistent store
returns the next new folder with the given name
remove the object from the cache
returns true if the mail report is enabled
this method is called when the is in the
removes the room from the room
removes the user from the session
returns the author information
returns the time of the last edit time
the color
returns the full name of the
gets the value of the page new version property
returns the author information
link to the author of the author
returns the folder
compares this object with another one
returns the document
returns the most recent version of the current version
returns the plain text content of this text component
returns the page
returns true if this object is indexed
returns the right of the chapter
returns the actual version of the last entry
returns the next page in the list
notify all the observers of the given object
returns a short description of the element
returns true if this is a new one
returns true if the user has read the specified user
returns the previous page
notify all registered oi model listeners that the given
returns a list of all keys for the given
sets the root element of the file
returns true if the current time is already in the pool
returns the path to the file
copy the contents of the specified persistent instance
copy the contents of the specified
adds a child to this node
returns true if the given time is in the
returns the icon for the mime type
returns the top level mail thread
returns the current page in the list
returns true if the user is printable
returns the user who last last modification
retrieves the object from meta data
sets the content type
returns the object associated with the specified key
returns the object that was deleted
returns the named object
returns the object representing the primary key
load all fields from the database
returns a collection of all the entries that are not deleted
returns a collection of all the names of the
removes an object from the cache
returns true if the given user is already in the database
returns the next new name
adds a new parent to this node
returns the object for the given persistent object
moves the selected room to the target
returns the code equation code of the code equation code
returns true if the file is currently selected
returns the name of the
associates a session with the session id
returns true if the user is a status of the
returns true if the inline is
this method is called when the session is destroyed
returns true if the file has a file
returns the user object
returns the plain text content of this text area
puts object into the database
returns the plain text content of this message
returns the top level mail thread for the given node
returns the code mail mail code in the given code mail code
returns the page that corresponds to the given page
returns the page that is currently selected in the page
returns the previous mail group in the mail
updates the list of documents in the list
returns the next page in the list
returns the element
sets the element
clean up the garbage collector
returns a object representing the id of the object
logs out the user in the session
creates and returns a copy of the object
returns the title of the user
copy the object into the persistent object
deletes the current state of this object
this method is called by the
this method is called when the user changes the dirty state
returns true if the user is a
drops the current object from the database
returns the container
returns the title of the title
returns true if the current user has changed
logout from the session
creates a new text page with the specified form
returns a string description of the type of the given type
returns the name of the channel
renders the given
notify the server to the current transaction
returns the header
returns the set of personal keys for a given room
returns the url string for the url
returns the url string of the
initializes the instance variables
returns the inline link title
returns the channel id
returns the is deleted
returns the default type name
returns the room
returns the time of the last edit time
checks if the room is owner of this room
returns the name of the specified component
prints the current level
registers the current object
clears the list of objects
sets the container
sets the creation time of the current time
returns the display name
sets the display name
sets the is deleted property
sets the description
sets the value of the id property
removes the content of the current content
stores the given set of values to the database
returns a string representation of this object
unloads the current state of the application
this method is called by the
returns the xml file name
returns all the owner of the user
returns the path to the xml file
updates the timestamp and time of the current time
this method is called when the association is destroyed
returns true if the current user has changed
the
returns a child with the specified name
returns true if the is in the
returns the full path to the
removes a session from the session list
returns the full name of the current
check if the password is equal to the given password
returns the home page
returns the next new folder with the given name
returns the next room with the given name
sets the locale
sets the
returns the root room of the room
returns a string containing the user profile
returns the type of the user
returns true if the given code parent code belongs to this
checks if the user is a owner of the given owner
returns a set of biggest that is smaller than the same
moves the mail page to the given page
creates a new template
creates a new template with the given name
returns the current path of the current object
removes a child from the list
removes the parent
returns true if the parent is inherit
adds a task to the list of tasks
sets whether the inherit parent is set
sets the code specifier code instance
connect to a given port
connect to the server
sets the count of the current state
returns the task port
returns the properties of the given property
returns the index of the port in the local port
returns the port that this task is operating on
sets the quiet flag
sets the pipeline property
returns the amount of the verbose amount of the verbose amount
returns the index of the port index in the output
sets the value of the specified cell
returns the type of this code port code
sets the amount of the amount of the
returns true if the port is connected
returns the value of the field
returns the current value of the left hand side of the node
returns the properties data
returns the quiet amount
add a connection to the connection
gets the value of the count type property
returns the right value of the right hand side of the
checks if the task is valid
disconnect from the server
sets the amount of the quiet amount
gets the value of the direction property
returns the top element of the
sets the value of the given field
returns the properties of the given property
returns true if the port is valid
returns the can inherit value
load the bundle from the given bundle
returns the code task code
returns the bottom value of the bottom
returns a localized message for the given key
returns true if the folder should be used to use solution
counts the number of the
returns true if the text is positioned at end of
sets whether the templates should be used for use in the solution
sets the parent task
returns the child task at the specified index
returns the type of the given token
returns the document that is used to create the document
executes the
creates an element
generates a description of the given description
b dom b implements
adds a connection to the pool
returns the root node of the document
removes a connection from the list of connections
returns the first extension
returns the result of the test runner
reads the file and returns the file
returns the friendly name of the friendly
writes the contents of the file to the file
removes a connection from the pool
returns the parent task
sets the long parameter
returns the is group
returns the task at the specified index
updates the current state of the text
returns the parameter value as a long parameter
adds a value to the allowed attribute
returns the data for this dialog
updates the enabled state of the actions
clears all connections
returns the number of allowed values
updates the selected data from the data file
sets the short parameter
updates the current state of the gui
sorts the rank
returns the data for this
updates the data in the data file
returns the value of the specified attribute index
returns the short parameter
called when the user clicks on the ok button
returns true if the cell is editable
sets the specified port
opens a working directory and select it
returns true if the cell is
returns the display name of the
updates the enabled state of the project
calculates the crossing crossing crossing
creates the list from the task list
this method is called when the user selects the selected export
returns true if the cell is selectable or not
updates the data in the dialog
returns true if the given cell is valid
called when the user selects the selected option
returns the data property data
sets the task group
maximizes the widget
sets the task to be displayed
adds a component to the component
sets the parameter selected parameter
the
returns the task group
updates the text of the text area
sets the selected state of the menu
sets the status text
closes the current model
sets the x position
returns the parameter
sets the divider location
invoked when an action occurs
sets the dirty flag
returns the location of the divider
invokes the method
fix the location of the given location
sets the y coordinate of the y position
returns the size of the view
paint the component
sets the left component
sets the current file
sets the right component
update the selected paths in the model
generate a string representation of the parameter
sets the components borders
tests that the pipeline is valid
sets the task selected
removes the pipeline from this pipeline
returns the model of the graph
sets the projects list
updates the port data
sets the new project name
returns the port
returns the data for the data model
sets the selected project
returns the selected project
updates the enabled state of the filter
returns true if the selection only is allowed to be selected
adds a task to the list of tasks
sets the selection only
updates the data in the data set
clears the task
returns the prefer flag value
returns the task at the specified index
sets the prefer value
returns the pipeline pipeline
updates the data from the data
returns the number of tasks
called when the user clicks the ok button
creates a cell from the given task
returns the undo manager
adds a parameter to the list of parameters
sets the task to be used for the task
sets the solution
updates the dialog
returns the parameter at the specified index
adds a project to the project
updates the settings
returns the number of tasks in the task
returns the path to the tree to the given path
returns the number of parameters
called when the ok button is pressed
checks if the project solution has been assigned to the current project
select a file
update the
returns true if the project has a project
select a file
returns the cell at the specified index
returns true if the pipeline has any pipeline
registers an action
checks if the given class is already in the list
returns the action for the given class
returns the port at the specified index
returns the current undo manager
creates the task browser
updates the project
updates the selected project
updates the project
returns the total number of ports in the total number of threads
returns the total number of ports in the total number of jobs
returns the attribute value from the attribute node
returns the result of the result of the result
notify the observers that the event has changed
returns the attribute value from the attribute node
exports the solution in a solution to a file
checks if all the ports are valid
focuses the component
exports the project to a file
creates a dom node that is used to store the document
focuses the task browser
this method will be called when a pipeline is
creates a child element
focuses the browser
exports the project to a string
returns the tree of the tree
gets the value of the preference browser property
returns the center pane
returns the next connection to the database
creates the preference browser for the current browser
add all the tasks to the given task
creates the menu bar
creates the project menu
creates the help menu
this method is called when a task is received
checks if the token is a token
creates a node with the given name
generates a task for the given token
returns the value of the attribute specified by the attribute name
returns the value of the given attribute and returns the resulting
returns the value of the specified attribute node
checks if the specified role has a role
checks if the given role has any role
this method is used to convert the given user into a string
returns the name of the file
returns the current files
returns the file at the specified index
removes all rows from the table
adds a new row to the table
initializes the content of the property
returns the value at the specified row and column
sets the value at the specified row and column
compares this object with the specified object for order
sets the marked flag
returns the value of currency from
gets the value of the return property
sets the value of the currency from property
sets the value of the return property
returns the currency to which this is associated
sets the value of the currency to property
create an instance of
sets the value of the amount property
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
this method is called when the check is executed
returns true if the dependency is resolved
checks if the plugin is resolved
adds the given plugin to the plugin
load the jar file
returns the url of the
returns the name of the
returns the plugin name
test that verifies that a
test that the plugin is correctly loaded
set the endpoint address for the specified port name
gets the value of the entity property
sets the entity type
returns the entity
sets the entity
returns the entity entity
returns the name of the entity
sets the entity entity
returns the entity
returns the entity
sets the entity
sets the entity
returns the entity
sets the entity
returns the entity
returns the entity
sets the entity
sets the entity
returns a string representation of this object
returns the sails current sail
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of the person
returns a string representation of this object
adds a string to the buffer
returns the string representation of the object
returns a string representation of the object
returns a string representation of this country
returns a string representation of the current
returns a string representation of this object
returns the entity
this method is used to log the user
sets the entity
sends a message to the server
checks if the given date is in the range of the given
removes the membership membership from the given entity
deletes a entity
start the transaction
called when the end of the transaction is ended
removes the membership type entity
returns true if the entity id is
returns the name of the entity
posts a request to the server
this method is used to get the request
called when the context is initialized
this method is called when the servlet is destroyed
check if the class is a class
format date format
extracts the label from the given method
this method is called when the command button is pressed
returns the footer for the page
returns the full name of the class
tests the functionality of the code code method
adds a new email to the email
handles login request
adds a profile profile to the list of
checks if the user is online
update the profile
sets the start time of the event
sets the format
sets the started state
insert a new table with the given name and type
inserts a new relational table with the given name and value
creates a new table with the given name
creates a new table with the given name
load a file
returns true if the database is
opens a table with a given table
this method is called by the to indicate the contents of
load the database table
the database table
this method is called when the user drops the database
compare two byte arrays
sorts the table in the given list
creates a new index
closes all the resources held by this table
returns the index of the given element
creates a new index
sets the last
deletes the record
moves the cursor to the next position
moves the cursor down one
moves the cursor down one
checks if the given index is valid for this data structure
returns the structure of the given structure
returns the structure of the structure that contains this structure
returns the structure of the
returns the structure of the
returns the structure of the given structure
returns the structure that contains the given structure
returns the full definition of the current
returns the string representation of the current state
returns the definition of the given string
returns the number of elements in the list
returns the number of names of the current
sets the parameters for the query
add a order by clause
locate the order by clause
this method is called when the user enters the context
sets the number
show the view
add a remainder to the current

returns a connection with the given name
a with the specified name and

get the for a given database name
returns the of the database
returns the element with the specified name
the element with the given name and
a element
returns the element with the specified name
returns the element name of the element type
returns the of the database
returns the data for the given cell
load a font
close the splash screen
returns a string representation of this object
returns the debug string
returns the value of the attribute
returns a string representation of the object
checks if the user is authorized to login the user
gets the value of the must filled property
returns the commands
returns true if the value is unchanged
returns a string representation of the expression
returns the type of the block
returns the expression
returns the calendar value
returns the mutable block of this code block code
returns the password for the given
returns the start date of the
returns the end date of the event
tests the password password text
returns the is
returns true if the tier is
returns true if the tier is
gets the value of the is tier rich css property
returns the is tier generic type
initialize the
detects if the is
detects if the is
detects if the is
detects if the device is or not
returns true if the is
detects whether the device is currently android
detects the android android android firmware
detects android android android android android android android android android
detects whether the current language is a native
returns true if the user is
detects if the current user is allowed to detect a
detects if the browser is firefox
returns true if the is black
returns true if the is black
detects if the web browser is running
returns true if the is directional
detect whether the should be black
detect whether or not the should be black
returns true if the user is
returns true if the user is
returns true if the user is
detects if the is
detects whether the is
detects if the device is currently
detects if the is
detects if the user is allowed to detect a
detects whether the user is currently
detects whether the is
returns true if the is
detects if the is
detects if the is
detects if the device is
detects if the is
returns true if the game is currently running
returns true if the user has
detects if the is
returns true if the is
detects whether the mobile is
returns true if the tier detection is
detects if the is
detects whether the google is selected
returns true if the should be
returns the value of the attribute
sets the parser
append a node to the end of the list
inserts a new node into the container
removes a node from the list
sets the handler
returns the first item in the list
returns the handler
returns the length of the children
returns the component type of this component
parse the node
parses a stream
returns the date
returns the value of the comment
returns the value of the
append the given node to the end of the list
inserts a new node at the specified position
returns the first item in the list
sets the parser
parse the document
parses the given input stream
sets the handler
parse the given string
parses the given input stream
parse the given string
sets the whitespace
returns true if the parser is whitespace
sets the comments
returns true if the comment is a comment
parses the
returns the rank of the card
sets the rank of the card
returns the suit of the card
sets the suit of the card
returns the color of the card
sets the description
sets the selected frame rate
returns the current clipping area
sets the clipping rectangle
check if the color is a color
sets the color of the
sets the number of bytes per packet
returns the color for the specified block
closes the reader
returns the chunk of the specified x and location
returns the x coordinate of the region
returns the z coordinate of the region
get the data stored in the stream
returns the root tag of the tree
returns the region file
applies the to the given x y z coordinates
applies the to the
checks if the given is a emitter
returns true if the given key is excluded from the
returns true if the surface is a surface
render the file structure in the list
returns the maximum height of the image
returns the minimum height of the image
this method is called by the thread to render the thread
sets the heading
sets whether the model is sortable
returns the is sortable
sets the state of the
sets the state of the
sets the state of the
returns the state of the checked state
returns true if the value is valid
returns true if the current state is checked
returns the radio button
returns the radio button
returns the version of the file
returns the row at the specified index
returns the widget at the specified position
sets the cell
adds a row to the table
adds a new row to the table
replaces the current row with the specified row
sorts the column
adds a listener to the table
returns the column descriptor for the given column
removes a listener from the list
removes all listeners
notify all listeners that the cell update is updated
fire a sorted event
the
sets the
prints the report
sets the accepting
checks if the given code code is a
this method is used to loop through the given loop
add a b b to the
prune the
checks if the current instance is in the list of the
returns true if the given code
returns true if this is a
sets the output level of the output
checks if the goal is in the goal
returns true if this object is a release
returns the goal
returns true if the given set is a regular expression
returns the agent
checks if the current object is a valid
returns true if this proposition is a proposition
compare this object with another one
returns the in
returns the in
returns true if the state has been explored
returns true if the node is expanded
compare this instance with another one
returns true if the is expanded
checks if the current state of the given set of
this method is called when the user wants to change the state
initializes the
returns true if the given state is a same state name
returns true if the server is accepting
this method is called when the is selected
check if the current thread is a
checks if the given state is a legal state
returns true if the server is accepting
adds a new automaton to the list of destinations
returns the matching state of the given state
checks if the is allowed
gets the
returns the
removes a state from the list
checks if the agent is
returns true if the current state of the state is already in
calculates the of the
returns the
checks whether the current state of the states of the state machine
calculates the next empty iteration
adds a state to the stack
checks if the action is allowed
checks if the current object is a valid
updates the of the given
returns true if the given value is negated
returns the action
returns true if this feat is equal to the other object
returns the agent name
returns the next element in the iteration
gets the
checks if the given set is inconsistent
gets the
returns true if the expression is a proposition
checks if the current object is a valid
returns true if the block is a
checks if the goal is
compares this phi with the given argument
checks if the current instance is valid
checks if the given set is a regular expression
gets the
gets the
compare this object with another one
returns the proposition
returns true if this object is a release
compare this object with another one
returns true if the given value is negated
returns true if the agent is running
called when the user selects the
this method is called by the server to start the
check if the given class is a local variable
this method is called when the user selects the
checks if the given search is a
returns true if the phi
search the search engine
returns true if the
this method is called to indicate the state of a search
returns true if the given phi
returns the name of the
returns the error message for the current
sets the output writer
sets the notification
unset the notification
returns an agent with the specified name
returns the specification of this object
returns true if the notification has been selected
sets the output level of the output
returns true if the is a precise sleeping
check the properties of the current state of the properties
this method is called by the framework when the
this method is used to indicate whether the event listener is notified
adds a property to the list
creates the automaton
called when the agent is closed
returns the properties
wake up the agent for the given agent
adds an action to the
checks if the current game is running
returns true if the is
checks whether the given is a
returns the
checks if the given is a context for a specific goal
add a plan to the plan
add a plan to the plan
removes a goal from the goal
adds a new literal to the
adds a new literal to the given literal
adds a new literal to the given literal
returns the number of stages
compares this object with the specified object for order
adds a new message to the queue
sets the queue to the given queue
returns true if the next message is in the queue
returns the next message in the queue
returns true if the given agent is pending
checks if the given is a
returns the env
compares this object with the specified object for order
executes the action
this method is called by
returns the string representation of the
adds a new message to the queue
sets the queue to the given queue
this method is called to determine if the agent is ready to
returns the next message in the queue
this method is called by
returns true if the given code code is already pending
consumes the next token and then consume it
skip the given channel
sets the token source
consumes the next token and then advance the current state
returns the next token in the list
sets the of the
sets the token source
returns a list of all tokens
returns a string representation of the object
messaged when the parent is down
resets the state of the state machine
returns the index of the child element
returns the parent tree
this method is used to set the state of the input stream
returns the ancestor of the given token
skip the current token
returns the ancestors of this node
returns the tree as a string
sets the token to the token
process the token
report an error
returns the text in the text
sets the text
compares this object with the specified object for order
returns the number of syntax errors
recover from the input stream
sets the code code
this method is called by the
gets the value of the ag name property
returns the name of the
adds a goal to the goal
push the current state of the given set of
adds a literal to the end of the
select a
choose the plan of the plan
returns a applicable plan for the plan
updates the plan usage
returns the number of in the
sets the prop
gets the value of the prop property
sets the sender
returns the for the given plan
sets the receiver
returns the rule for a given rule index
gets the value of the msg id property
sets the msg id
returns the annotation
sets the annotation
sets the plan usage flag
creates a new
applies the to the given
checks if a given input stream is already parsed
returns a string representation of the list
returns the event
sets the annotation
returns the annotation
sets the top guard of the
remove the next from the buffer
returns true if the is
gets the value of the property
returns the size of the rule cache

returns true if the given term t1 of the given terms

returns true if the given literal is a literal
clears the given term
returns the base
suspends the execution of the suspend process
returns the belief of the given
returns true if the job is suspended
this method is called when the is suspended
sets the source of this object
returns the belief of the given
returns the source of this event
sets the list of the receivers names
returns a term that is a term
returns the id of the
returns the belief of the given
returns the
returns true if the given object is equal to this plan
returns true if the lock is locked
returns a string representation of the object
returns a string representation of the key
locks the lock
unlocks the
sets the belief base
pushes a new onto the stack
peeks at the top of the stack
removes the top most recently used element
returns the number of rows in the list
returns the of the given
removes a goal from the list of
returns a string representation of the object
adds a new literal to the given literal
returns the event for the specified number of rows
returns the nth angle in the array of the current
returns the nth guard of the given interval
the
resets the hash code cache
drops the given number of rows
drop the given number of rows
sets the number of
returns the of this
returns true if the category is a action
returns true if the category is
returns the event that was fired by the event
returns true if the is
returns true if the category is
returns true if the category is locked
returns the of the
applies the similarity of this effect to the given angle
returns the term of this structure
adds a new literal to the given literal
returns true if the category is null
returns the current value of the code code
adds a rule to the set of rules
removes a rule from the set
this method is called when the is done
returns a string representation of this rule
adds a rule to the list
removes a rule from the list
adds a new literal to the given literal
adds the given plan to the list of
this method is invoked to transform the
add a belief base to the
replaces the current state of the given
returns true if the is
returns true if the is empty
add a belief base pair
sets the top guard of the
adds all plan to the plan
adds all the plans to the plan
returns the plan
returns the number of rails in the list
sets the label
sets the plan library plan
returns the label
sets the event trigger
sets the list of the current context
sets the body of this request
sets the rule base
reverse the body of the
sets the prefix to be used in the list
sets the value of the id property
returns the rule base
returns the goal type
returns the event trigger
returns the base base
sets the goals base
returns a guard for the current state
returns the content of the expression
returns the literal value
adds a rule to the list of rules
make the
returns the functor of the functor
returns the size of the content
adds a term to the list of terms
returns the term at the given index
returns the string representation of the
returns a string representation of the object
returns the type of the goal
adds a plan to the plan
returns the predicate indicator
adds a plan to the plan
returns the content of this goal
returns the
sets the constraint library
adds a constraint to the given constraint
sets the goal
returns the
sets the
makes the
sets the
returns the term of this term
returns true if the group is
returns true if the constraint is
returns true if the plan is a
clears the applicable plans for the applicable plan
returns the name of the
sets the content of the content
returns the predicate indicator
adds a new content to the content
checks if the given is a
returns the type of the action
sets the action type
returns a clone of this object
removes the content of the content of the content
returns the op operator
returns the lhs of this term
gets the value of the rhs property
returns true if this expression is unary
sets the trigger
sets guard to guard
gets the
returns the relevant relevant
sets the context
returns the
returns the term of this term
adds a context to the context
removes a context from the context
sets the applicable plans to be used for this plan
returns a deep copy of this object
sets the list of annotations
returns the op operator
returns the formula of this formula
returns the formula of this
sets the actions
returns true if this object is
adds a constraint to the constraints
the given package
adds all the constraints to the given set
sets the inbox
adds all the constraints to the given list of constraints
removes the given annotation from the list of all the
returns true if this type is negated
checks if the given
sets the negated attribute of the object
adds a new source
creates a new messages list
returns the terms in the list
clears the inbox
checks if the given code structure code has a source
sets the value of the given term
sets the list of
returns the value of the term
this method is called when a new message is sent
returns true if this object is a
gets the value of the cycle property
evaluate the current value
returns a clone of this object
returns the op operator
sets the cycle
returns the
sets the annotation
returns the id of the
returns the current term
gets the value of the id property
returns the content of this term
returns the env of the env
returns a message with the given name
returns true if the given is allowed to be satisfied
removes a goal from the goal
returns the term to be used for the term
adds a new to the list
a goal
returns true if this is a trivial
stops the running process
returns the term as a term
sets the
sleep for the current thread
returns the
returns the category
clones the object
returns true if the variable is a variable
returns true if the is
the
the
returns true if the category is start
returns true if the is
returns true if the variable is a variable
returns true if the current thread is running
returns the predicate indicator
creates a new instance of this object
print the current
returns the term at the given index
make the vars
creates a term variable
sets the flag indicating the user has changed
returns true if the server is running
returns the name of the

returns the receivers completion term
gets the value of the terms id property
returns a message for the given name
removes a literal from the model
returns a literal with a given literal
returns true if the given predicate contains the given predicate
returns a string representation of the map
adds a new literal
returns a new literal that contains the specified literal
sets the current stage
returns true if the socket is
writes the string to the output stream
check if the input stream is ready to be ready
reads the next line from the input stream
closes the socket and closes the socket
sets the indexing type
executes the given action
returns true if the given
returns true if the thread is running
sets the output level to be used for the output
writes the string to the output stream
check if the input stream is ready to be ready
closes the socket and closes the socket
starts the
terminate the
reads a boolean value from the input stream
reads the value of the input parameter as a string
reads a normalized value from the input stream
reads the value of the input parameter
this method is called whenever this type is
this method is called when the sensor is updated
adds a new abstraction engine
opens the bluetooth device
compares this object with the specified object for order
adds a engine instance to the
notify all listeners that the has been
notify the listeners that the component has changed
sets the connected flag
this method is called by the server to get the auction
terminate the current thread
wait for a new
wait for a literal to be performed
synchronizes the current state of the given object
checks if the given path is a
this method is used to mark the given code loop code
adds an edge to the current state
prune the
initialize the
returns the number of
returns the hash code of this object
gets the value of the to state property
returns the from state
this method is called when the edge is
prune the cache for the given number of
checks if the path has been made
returns the ith tuple
annotates the given edge
returns the model
returns the model state
returns true if the model is model
this method is called by the factory to create a new vm
check the search for the given code
check the given search for the given class
search the search result for the given search
this method is called to indicate that the search is
returns the error message for this error
add a plan to the plan
adds a literal to the given literal
adds a new literal to the given string
deletes a literal from the given literal
adds a goal to the

removes all the goal from the goal
adds a plan to the plan
updates the plan usage
adds a literal rule to the given literal
returns a string representation of the object
select the for the given select goal
returns the id of the current thread
sets the thread id
adds a new goal to the list
removes a conversation from the list of
adds a to the
removes a from the given
removes the given code message code from the list of messages
adds a listener to the list of listeners
notify listeners that the has been changed
notify listeners that the specified
this method is used to send the action to the action
returns the string representation of the given integer
compares this object with the specified object for order
adds a new to the list of
removes the specified name from the list
adds a new message to the list of the
this method is called by the
returns the term of this predicate
select a
sets the source of the source
returns the source of this event
returns the belief base
returns a clone of this object
returns the term at the given index
make the vars
creates a term variable
sets the belief base
sets the type of the action
returns the source of the source
adds a new literal to the given literal
makes the
returns the term of this
returns the term of the goal literal
returns the name of the group
creates a term for the given input
adds a new literal to the given literal
returns a copy of this term
the predicate

adds a new literal to the given literal
clears the given term
sets the tail of the current element
sets the value of the term
returns the last element of the list
appends the given term to the end of this list
returns the concatenation of the terms of the given term
returns the plan
sets the plan library plan
sets the rule base
returns the rule base
adds a rule to the rule base
add a plan to the list of
adds a plan to the plan
returns the
sets the constraint library
add a constraint to the given constraint
returns true if this annotation contains any annotation
converts this literal to a term literal
returns the base goal
sets the base
returns a string representation of the object
this method is called when a new messages
returns the logical formula of this formula
returns the logical formula of this function
sets the event that is used to process the event
sets the list of
sets the body of the request
reverse the body of the
sets the prefix to be used in the
returns the event that caused the event
returns the string representation of the current context
sets the
sets the
returns the
adds a new to the list
returns the current
returns the content of this term
clones the expression
returns a clone of this code abstract list code
returns the lhs of this term
returns the rhs of the rhs
returns a string representation of this object
sets the of the agent
adds a goal to the goal
adds a new literal to the
adds a new literal to the
adds a rule to the list of rules
adds a plan to the plan
returns the term as a term
creates a new object
sets the env of this environment
adds a new to the list of synonyms
removes a from the
returns the agent with the given name
configures the configuration
adds a new vehicle to the list
removes a predicate from the
clears the
finalize the environment
adds a new to the list of the
returns the name of the agent
adds a new message to the inbox
removes a listener from the list of listeners notified when
removes a message from the inbox
clears the inbox
sets the
adds a sensor to the
removes a sensor from the
clears all
adds a sensor to the sensor
sets the current environment
this method is used to send the action to the server
returns the string representation of the given
removes a predicate from the
adds a to the
removes a from the given
removes the given from the list of
the
adds a new to the list of rules
notify listeners that the has been

this method is called by the
check if the given set of rules are allowed
checks if the application is still running
check if the given set of rules are set
check if the given set of rules are set
check if the given set of rules are set
the current value to the next value
returns true if the value is in the current value
returns the
returns the
returns the goal
returns the action
returns the functor of this object
check if the given set of rules are set
returns true if the given property is a regular expression
compare this object with another one
called when the user selects the
called when the has changed
called when the has changed
p this method is used to format the log record
checks the properties of the given code properties code object
adds a property to the list of
creates the automaton for the
returns the properties
executes the given action
start the simulation
checks if all the constraints are satisfied
this method is called by the
initializes the
initializes the code initializer code and sets the result
this method is called after the initialization is done
returns true if the is total
returns the same line as the same as the same as the
sets the xsl fo fo xsl fo fo
sets the xsl
sets the data
returns the data
returns the xml element
sets the xml
returns the data
returns the data
sets the
gets the value of the property
sets the
returns the data
sets the data
sets the data
returns the current
returns the xml element
sets the xml
returns the current period
sets the current
sets the current period
sets the code numero code property
sets the credit
sets the
returns the journal data
sets the
sets the journal data
sets the
sets the credit card
returns the data
returns the data
sets the data
sets the data
sets the
sets the
sets the journal
sets the journal
sets the journal
sets the journal
sets the accounting currency value for this
sets the
sets the value for this
gets the pk of this centro pk
sets the pk of this centro pk
gets the password
returns the username for the user
sets the password
sets the username
get the code
sets the code code
returns the primary key
sets the primary key
sets the pk of this personal
returns the key
sets the key
returns the current
sets the todo todo
returns the numero
sets the session
sets the
returns the todo todo description of the code code
sets the todo todo todo
returns the todo todo description of the code code
sets the todo todo todo
returns the
decreases the of the
gets the value of the property
gets the value of the numero property
sets the numero
returns true if the is free
returns the current
sets the current
returns the current time in the current period
sets the current period
returns the maximum counter value
sets the maximum counter value for this j2
start the clock
initializes the task
pause the paused thread
resumes the paused state
stops the timer
sets the clock
help to exit the application
prints the version and the exit version
prints the help and exit the help
gets the value of the address property
sets the machines
load the configuration from the given configuration
saves the configuration file
sets the host
saves the configuration as a file
sets the address of the address
sets the name of the
sets the port number
sets the comment
returns the config
returns the explanation of the
returns true if the global level is global
returns the explanation for the
removes a component from the list
adds a component to the component
removes a component from the list
refresh the display
starts the
adds a new map to the map
removes the last map of the keys from the map
this method is used to display the display view
prepares the conversation id
sets the attribute of the map
returns a new controller object
sets the given attribute
called when the user presses the back button
returns the value of the specified attribute
returns the value of the specified key
returns the controller that is currently running in the back
returns the controller that is currently being used by this controller
removes the specified attribute from the map
returns the map
returns the controller
switch to the previous page
returns an initiliazed instance of image component
sets the recipient of the recipient
sets the
start the application
pause the midlet
called to signal the midlet to terminate
composes a page with a given page
cleanup the manager
adds a directory to the directory
search for the record
check the server server trusted server
initializes the proxy
tests that the content of the document has been read
test that verifies that the document is correctly parsed
tests that the next document iterator is positioned
tests that the get attribute value method works as required
tests that the next document has been skipped
tests getting attribute value
tests that the server side constructor throws an exception
tests that the client factory throws a null connector exception
tests that the client side is not null
tests that the excluded type
creates a new instance of the current value
creates a new client instance
creates a new instance of the current client
sets the size of the table
called after the session has been created before the
tests that the
tests the
tests that the excluded methods are not handled
test that the
tests that the excluded
tests that the excluded
test that the
tests that the excluded
test that the default authorization is not supported
test that the server is not deployed to the
test that verifies that the authorization is not authorized to access
returns the sql query string for the given query and column
test the creation of a server
test the
tests the
test the enable disable method
test that the server side
test method for
tests that the
tests that the
tests that the get hidden items are not handled by this method
tests that the get hidden items method is not supported
tests that the
returns the test class under test
tests the
tests the digester with a valid property
tests the excluded
returns a new identity with the given domain and domain
parse a date and returns the date
validate the document
returns a string representation of this object
sets the shared password for the user
sets the authentication provider
returns localized message for the given resource bundle
logs a message
test get config form
returns the traversal manager of this instance
returns the authentication manager
sets the server server
sets the port
starts the thread
processes the request
sets the connection to the connection
test that the form configuration is correctly loaded
sets the username
tests the validate configuration of the configuration
tests the validate configuration of the configuration
sets the password
returns the content handler of the current content handler
tests the validate configuration of the configuration
sets the hint for the batch
sets whether the http server uses the http
test the validate configuration method
test the validate configuration of the server
set the
tests the validate configuration of the configuration
sets the https https
enables or disables the
sets the username for the user
returns the error response for the specified error
sets the password to use for the http request
sets the server verify server
sets the
returns the id of the given
sets the domain name
returns the id of the document
returns the document associated with the specified key
sets the url to the provider
sets the security security pattern
sets the display url
this method is used to create the cause of the given resource
close the stream
returns the exception message
returns the exception thrown by the given exception
sets the actions to be displayed in the list
collects the attributes of the current category
checks if the user id is a user group or group
sets the new value for the insert checkpoint
adds a property to the list
adds a new property to the list
returns the cookies
returns the first character in the sequence
adds a property to the set of properties
sets the current checkpoint
returns the parent of this block
sets the current date to the next token
adds a new node to the tree
returns true if the event has changed since the last commit
merges the given object into the target object
restores the current record
log a
returns the format for the given pattern
test
test
ensure that the proxy is properly protected
tests the of the external service
ensure that the directory manager is instantiated
sets up the session
test that verifies that the authentication manager is able to perform
test that verifies that the authentication manager is able to authenticate a
sets the password to use for the web server
this method is called when the session is finished
sets up the
sets up the
sets up the fixture for example open a network connection
sets the up
sets the internal
sets whether the user can separate threads
sets up the fixture for example open a network connection
tests the connection to the connection
tests the connection with a direct connection
tests the validate configuration of the configuration
test the validate configuration
test tunnel authentication
test the validate configuration of the server
test that verifies that the user can be disabled
test tunnel authentication
test the identity
tests the creation of a new identity
test that the identity is used to create a new instance of
creates a new value object
creates a new client
creates a new
this method is called by the digester to restore the current
sets the start date
sets the content of the user that is used to login
sets the content of the url to display in the content area
sets the user name
sets the excluded property type
sets the type of the list of invalid volume
sets the included object included in the request
sets the version information for the software version
sets the included categories
sets the excluded categories
sets the hidden items
sets the track deleted items
returns true if the track is deleted
sets the
returns true if the is
sets the
sets the domain and name of the domain
sets the domain of the midlet
sets the authentication server
sets the authentication port
sets the authentication connection
sets the authentication https
enables or disables the authentication process
sets the authentication
sets authentication to verify the server
sets the authentication ca
sets the authentication domain name
sets the content handler for the content handler
sets the feed type
returns the content authorization manager
sets the roman to the given value
returns the current state of the
this method initializes menu estimation
this method initializes menu
the button click action
this method initializes menu specification
compute the data of the
this method returns the structural analysis analysis
this method initializes menu
display the card selected card
this method initializes menu bar
returns the symbol table
check if the action events are enabled
returns the symbol table
sets the symbol table for this table
sets the selection
returns the selection
sets the selection
returns the symbol table
sets the symbol table
checks if the rank is legal
executes the action events
checks if the item state changed
check if the edit action was selected
toggles the visibility of the component
check if the bounds of the current value is correct
check the check box state changed
sets the recompute and checks for the
checks if the current number of the current
this method is called when the user selects a
checks if the item state has changed
check the bounds of the
checks if the item is selected
clears the button action events
checks the state of the check box
returns the dialog for the current frame
this method initializes this
compute the data of the
toggles the state of the
this method initializes box
this method initializes box
this method initializes box
this method initializes box
this method initializes graphics check box
this method is called when the first stage of the button is
this method initializes mult graph check box
this method initializes card panel
returns the symbol table
returns the dialog
action to be called when the user selects the user
sets the button action action listener
returns the
returns the dialog dialog
this method initializes menu
edit the action events
this method initializes menu specification
this method initializes menu
this method initializes opt set dialog
this method initializes menu bar
initializes the data managers
returns the symbol table
sets the symbol table
returns the data
returns the data table
compute the of the
compute the of the
this method is used to compute the names
computes the names of the
toggles the visibility of the panel
initializes the table
reset all restrictions and restrictions
reset the subset restrictions
reset the subset restrictions
reset restrictions for the

handles the action events
compute estimation of
sets the value of the beta resolution flag
returns the
sets the display of the table
this method initializes this
this method initializes j panel
sets the current text field
this method initializes j panel2
this method initializes cancel button
this method is called when the selection changes
toggles the visibility of the
this method initializes
this method initializes
this method initializes levels radio
this method is called when the user selects the
this method initializes trend radio
this method initializes no breaks radio
sets the recompute and checks to see if the is selected
this method initializes one break radio
this method initializes two breaks
sets the range of the
resets the current state of the
called whenever the part throws an exception
sets the hidden panel
hides the panel
hides the panel
returns the name of the
returns the names of the names of the names
returns the date range name
called when the is done
writes the current state of the
sets the name of the
output the file to the output file
this method is called when the output is
this method is called when the file is processed
this method is called when the file is written
returns the of the
sets the global settings for the global settings
sets the global settings for the
this method is called when the combo model is selected
this method initializes cfg
this method initializes cfg rem non config
returns the
returns the
handle the action event
this method is called when the user clicks the configuration
returns the
cancel the action events
returns the
returns the table
returns the minus phi
enables disables the menu
enables disables the of the
returns the chooser chooser for the user
returns the current state of the project
this method initializes this
this method initializes this
the y axis
this method initializes j check selector
this method initializes inventory selector
this method initializes j panel1
this method initializes this
sets the
this method initializes menu bar
this method initializes spec menu
this method initializes card display panel
this method initializes est menu
sets the
this method initializes j scroll pane
sets the
this method initializes this
this method initializes this
this method initializes j tabbed pane
this method initializes kern panel
this method initializes spectrum panel
this method initializes plot add res panel
this method initializes tests panel
returns true if the current noise is selected
this method initializes h selector
this method initializes ci selector
this method initializes graph check box
returns the current
this method initializes start date selector
this method initializes j tabbed pane
this method initializes scroll pane
this method initializes table
method generated to support the promotion of the white noise attribute
rolls the current roll over the
step the step action event
this method is called when the user selects the card card
returns the name of the
sets the est of the box
clears the model
returns the
returns the
this method initializes init
executes the action
sets the name of the
sets the
sets the
returns the model type
returns the check checkbox
sets the state of the selected module
returns the current state of the project
clears the model
returns a string representation of this object
sets the model type
returns the number of in the current state
returns the number of the coverage selector
toggles the visibility of the component
returns the seed for the seed
resets the
returns the standard deviation of the number of fragments
sets the model type
returns the seed for the seed
returns the name of the coefficient
returns the name
returns true if the seed is currently selected
method generated to support the promotion of the check property
returns true if the connection is selected
sets the lower range of the bounding box
returns the name of the
sets the levels
returns the variable names
returns the
returns the selected
called whenever the part throws an exception
returns the model
gets the value of the property
cancel button events
sets the value of the name property
returns the criterion for the selected criterion
returns the number of the selected
returns the variable names
sets the name
returns the threshold value
sets the model type
sets the new value of the code struct code property
sets the variable names
action to be called when the user selects the user
this method initializes this
this method initializes j panel1
this method initializes j panel2
this method initializes ok button
this method initializes j table
this method initializes default button
checks if the y axis is
toggle the state of the
returns the id of the
plots the configuration file
returns the of the
returns the maximum number of
cancel button events
sets the legend
returns the maximum number of retries
sets the selected data
sets the model type
sets the name of the table to be used for
sets the variable names
returns the
returns the value of rel rel change parameter
returns true if this is a arch
returns true if the is
returns the start method of the radio button
returns true if plot is auto auto correlation
returns true if the current is set to the default
returns true if the plot is
sets the default action action listener
returns true if port is a
returns true if the is
action listener for the action events
returns the model control model
sets the defaults
sets the model type
calculates the of the
returns the of the given
sets the visibility of the plot
this method initializes num
this method initializes step selector
this method initializes minor ticks
adds a sip route to the route
checks if the session has a session
fires a property change event to any registered listeners
returns the value of the property
returns true if the property is set
resets the property value
sets the value of a property with the value
returns the adapter platform specific adapter for the specified adapter
returns the parent of this node
returns true if this node is a leaf
the node
adds a message type
sets the id of the
sets the map of the map
sets the value of an attribute
write the request to the output stream
gets the type of this message
process the response
sets the type of message
p reads the translated template
p this method is used to retrieve the context
returns the document request
this method is used to translate the request body to the given
sets the document request
p reads the request in file
returns a proxy for the request
sets the response
sets the mode
returns the url of the specified type
sets the url for the specified url
sets the test
creates a new
expands the template
expands the template
returns the name of the component
returns the trimmed data
returns the application properties
called when the user selects the select
adds a filetype dot extension to filter against
returns the human readable description of this filter
returns the number of contents of this code code
returns true if the contents of the buffer is empty
clears the current cap
returns the object counter
returns the load factor
sets the
notifies all listeners that the tree node changed
adds a listener for the tree model event posted after the tree
returns the number of children of code parent code
returns the root of the tree
returns true if the node is a leaf
removes a listener from the tree
returns the next plugin
prints the statistics
sets the value
sets the next element
returns the next element in the iteration
this method is used to create the directory file
returns a list of all elements in the list
open system system
initializes the default preference store
checks if the given code is deleted code
sets the value of the given value
returns the ip address of the ip address
gets the value of the sw property
returns the observation
sets the code lista nome software code property
base
performs the processing of the request
closes the prepared statement
rolls back the transaction
sets the ip
returns the construct
creates a new topic
resolve the given local identifier
creates a new website
this method is called when the document is started
ends the document
start a new element
this method is called by the start of an element
writes the end of the element
writes a newline
writes the content of the element to the content
writes the content of the text to the given string
writes the value of the attribute as an escaped string
registers the given instance as a new instance of the given class
returns the topic with the given topic
registers a new instance of the given construct
returns the specified construct as a code object code
returns the topic with the given identifier
returns the topic with the given locator
merges the given topic into the target
returns the construct object by its id
returns the index of the given element in the list
writes the association to the association between the association and the association
writes the occurrence of the occurrence
writes the to the xml document
writes the name of the element to the given name
writes the type of the given type
writes the scope of the current scope
writes the locator
writes the specified identifiers to the file
writes a set of locator
this method is used to reference the topic value of the topic
returns the attributes for the given attribute
adds a attribute to the
fires an event to the event listener
dispose of resources
returns an iterator over the elements in this collection
returns the value for the specified key
returns the number of elements in this collection
returns true if the given object is contained in the list
returns true if the given object is contained in the list
removes the specified object from this set if it is present
removes the specified element from this set if it is present
rehashes the map to the new capacity
clears the current state of this object
dump the object to the debug output
returns true if the topic is associated with the given topic
rehashes the map to the new capacity
test that the default values are not null
returns the properties for the properties
test that the feature set method is called by the method
test that the feature
test method for
test basic basic basic name
test the basic
tests the association
test method for
test method for
creates a new document
attach a child element
attach a element to the given element
at startup create and show the main frame of the application
returns a simplified expression of this expression
returns true if the specified axis is empty
returns true if the x axis is before the next point
returns true if the x axis is after the specified location
returns true if the specified point is contained in the list
returns a byte sequence containing the bytes of the sequence
start the
returns a character sequence that is used to convert the contents of
starts the
this method is called when the user selects a new object
sets the contents of the buffer to the specified offset
returns a string containing the message in the given message
sets the contents of the buffer to the specified offset
returns a reader that can be used to read the data from
formats the given output stream to the specified format
outputs the given object to the format
this method is used to format the error
consumes the next token
launches the process in the given launch
peeks at the top of the stack
sets the handler for the handler
returns the prefix of the given namespace
adds a new import to the schema
add a new include include element
this method is used to get the type of the given type
adds a reference to the
this method is called when the element occurs
parse the given schema
p receive notification of the end of this
start the task
called when the task finishes
starts the task
saves the data to file
updates the sprites
returns the interval in milliseconds
returns the file chooser for the mojo
sets the selected file
returns true if the preview button is selected
sets the preview
sets the title of the dialog
saves current state of current file to the current file
returns true if the preview panel is shown
sets the preview
adds the specified entry to the list
inserts the specified element at the specified position in this list
returns the element at the specified position in this list
replaces the element at the specified position in this list with the
removes the element at the specified position in this list
resizes the internal array to the new capacity
returns the type of this code code
returns true if the byte buffer is battery low
returns the of the current
returns the sensor type
returns the version of the
returns the digital value of the digital value
append the text to the file
returns the analog value of the analog analog analog analog value
send a command to the server
returns the distance between the channel and the specified channel
returns the value of the channel
reads the value of the channel
calculate the of the function
calculates the derivative of the function
this method is called by the kernel function to indicate the activation
function function
returns the activation function
sets the description of the
sets the name of the user to the given name
returns the activation function of the function
this method is called when the function is called
this method is called when the function is called
this method is called when the function is called
function function
calculates the derivative of the function
calculates the function function function
this method is called when the function is called
calculates the function function function
returns the winner of the input stream
turns on the current state of the current thread
turns off the turn
returns the parent assoc node
returns true if the display is a display check
returns the user id of the user who inserted the table
returns the name of the class that this is associated with
saves a member in the database
changes the range of the given warranty to the given value
checks if the given record is open
sets the logged in user
adds a new row to the table
adds a new row to the label
adds a new row to the table
adds a label to the given row
adds a new row to the table
adds a new row to the label
shows the popup window
adds a component to the table
close the popup
adds a sub menu to the menu
creates the toolbar
update the caption
returns the active skin
change the skin to the given skin
check if the input is valid
commits the current transaction
adds a field to the field
adds a field to the field
adds a field to the field
refresh the dash of the current dash
returns the subject text
refresh the dash of the dash
saves changes to the preferences
returns the for the given
closes the window
centers the dialog on the dialog
sets the visible
register a permission to be used for this user
creates the permissions for the user
adds a forum use case
removes a forum use case
sets the lookup type for this map
removes the named lookup from the map
adds a new code admin code to the current
returns the lookup type for the specified type
adds a task to the task set
removes a task from the list of active cases
removes a task set from the task set
removes a task set from the set of tasks
returns the content of the specified task
removes contributions from contributions
returns the content of the specified task
execute the task
sets the event admin
creates a new instance of the task
returns the menu factory for the given menu
adds a new context menu set to the context menu
returns the position of the menu
removes a context menu set from the context menu
registers a new user
sets the event manager
registers a target for the given target
unregisters a target
starts the workflow
performs the next step
show notification of a new message
show a notification
creates a fully qualified name for the given task
send a task to the given task
send a task to the server
creates a new key
returns the notification text
creates a new order object
returns the text
this method is called when the request is made to the service
returns the html text that is displayed in the html document
resets the current state of the document
creates a new
this method is used to set the value of the
saves the configuration to the properties file
returns the value of the attribute specified by the attribute
run the page
oracle form method
returns the creation time of the creation time
returns the last accessed time in milliseconds since january 1 1970 00
returns the context class name
returns the task manager
gets the value of a header
returns the context for the test
returns the sys name
returns true if the specified header is a header
this method is used to encode the url to the url
returns the protocol
sets the version
returns the remote address
sets the content of the domain
returns the remote host
method to set status of the status message
returns the default task name
returns the task name
initialize the task
sets the parameters
oracle form method
returns an instance of the exception handler
returns the parameters for the parameter
returns the parameters of the given parameter
returns the session associated with this session
returns true if the user is in the user role
fulfills the given task
creates a new
creates a new
empty the context menu
creates a new key count table
creates a select all string
lookup a link in the database
creates a new select string

returns the class name of the object class
returns the string representation of the object
adds a new object to the domain
adds a new object to the domain
returns the xml representation of the extern definition
returns the xml string representation of the internal
oracle form method
creates a new search result object
tests this object for equality with an arbitrary object
returns a hash code value for this object
creates a sortable object with the given value
creates a new sortable item with the specified data
re delegates to the given workflow context
adds a question to the list of questions
checks the given property to see if the given property is
checks the given property to see if the given property is
creates a new completion completion object
returns the state of the given code code in the
checks if the input text is contained in the text
creates a new member of the given string
creates a member of a member
creates a new bookmark with the given text
creates a new subscription
creates a new component with the given id
creates a new component with the given title
creates a new member of the member
creates a new
saves completion of a task
creates a new code code object
send a warning message
called when the user selects a property change
edit the
creates a new
called when the user changes the value of the
creates and returns a new
process state change
notify the change of the value change listener
accepts a workflow
this method is used to delete a downloads
returns a downloads for the given
process the selection
save completion information
creates a new member member member of the given group
this method is called by the framework to add a new
returns the group name
returns the subject of the message
this method is called to translate the
returns the subject text
creates a new mail address
creates a new member member member member
sets the text to be displayed in the text area
runs the thread
shuts down the application
updates the state of the given contributions
registers the given components to the component
this method is called by the factory
sets the pool of the pool
creates a new notification
this method is called when the user wants to load a
oracle form method
this method is used to remove all the dates in the
parse the html document
parse the given wiki document
creates a new group
creates a group admin
creates a new question
returns the author of the
sets the
creates a new question
saves the configuration
this method is called by the public method of the application
returns the mark position
deletes a single instance of the class
returns the role of the oracle form
returns the actor
saves the password to the specified password
returns the member of the member
sets the
oracle form method
checks whether the given schema is in the database
returns the member cache home
creates a new subscription
creates a new instance of the completion of the given completion
continue the
creates a new completion object
deletes the admin
saves the group in the database
reads the next byte of data from the input stream
creates a question producer
creates completion completion and creates a new
repositions this buffer to the position at the beginning
registers a factory with the factory
checks if the state of the given state is a state
creates a text producer object
unregisters a factory from the properties
returns the factory for the given data source
sets the context
returns the data source for the given properties object
returns a string representation of the object
creates a connection pool connection
sets the active configuration
oracle form method
returns the document that is used to convert the xml document to
sets the factory used to communicate with the datasource
create a new file input stream
returns the last page number
prepare the transformation
returns the source strategy for this class
returns the query result
returns the value of the parameter
this method is used to transform the xml document
moves the page to the next page
sets the stylesheet parameter
returns the file item for the specified file name
returns the serialized value
goes to the previous page
flush the buffer
returns the serialized value of the given object
creates the begin of the html document
returns the html code for the end of the html element
sets the page to the page
adds a new view to the list
returns the adapter type
render a code code in the given code code
sets the number of rows in the table
sets the page size
returns the name of the file
returns the home interface of the home interface
returns the type of the adapter for the given type
sets the page to the page
checks if the parameter name is already in the parameter
sets the sorted sort
returns the result of the
sets the result of the given query
adds a new script link to the current link
returns a string representation of the object
sets the current page to the given value
adds a css link to the current link
sets the parameters
returns a string representation of this object
sets the page to the first page
sets the href attribute of the object
sets the list of items
tests this object for equality with an arbitrary object
sets the last page to the last page
returns the string representation of this object
sets the parameter
sets the media media
creates a new entry in the database
creates a task in the given task
creates a task for the given name
returns a reference to the table model
returns a string representation of the object
checks if the given parameter is a parameter
returns the value of the given parameter
deletes all the from the database
returns a string representation of this object
creates a begin of the head
adds a context to the context
sets the url of the url
sets the delay in seconds
returns the html code for the html page
initialize the
sets the path to the file
initializes the server
render an output stream
sets the server info
returns the path to the base path
sets the html string
returns the path to the home directory
sets the remote address
writes the response to the request
sets the transformer
returns the language of the language
executes the query and returns a result set object
returns the locale of the user
returns the xslt transformer
compares this object with another one
sets the remote host
creates a begin html for the html
creates the end of the html document
returns the css style for the css link
initialize the servlet
returns the script link list
returns the html head
sets the url to the
sets the css style
creates a new exception data object
returns the title of the frame
returns true if the root cause of this code code has
handle the given exception
returns the value of the lt message s gt tag
returns an instance of the exception handler
returns the css style for the css link
handle the given exception
returns the script link
returns the value to which the specified name is contained in
this method initializes this
returns the error message
returns the localized message
returns the data object that is used to validate the data from
returns the localized message
returns the localized message for the given locale
returns the localized message for the given language
returns the message
load context object from context
returns the message
returns the message of the given locale
returns the status message
returns the parameter value at the specified index
puts a value into the context
check if the given resource is included in the list of
sets the locale
returns a new object
accepts a visitor
render an output stream to the specified output stream
returns true if the item is equal to this object
this is used to extract the value of the property
returns a hash code value for this object
end the given object
returns the object
end the iterator
sets the css link for this link
end a property
emit a set of set of properties
ends the sorted array
start the object
caches the cache
start the iterator
sets the css css style for the css
sets the schema name
start a property in the given property
start the property set
start the sorted array
this method is used to determine if the request type is
returns the value of the domain
sets the link to the script
clears the cache
notify the listener that the server wants to notify the
sets the
called by the sub classes to override the default
creates a new
sets the script links
returns the current value
creates a select string
sets the error message
returns the session id of the session
adds a new object to the list of objects
returns an iterator that enumerates the objects in this object
returns true if the object is equal to this one
creates a prepared select statement
accepts a visitor
adds a new object to the domain
sets the on load command
creates a new query statement
adds a sorted object to the list of sorted values
sets the select string
creates a select string from the given key
sets the count of the number of characters
sets the status message
select the given query
select the query
returns the number of rows in the database
returns the element at the specified index
clears the status message
sets the value of the key
creates a new single single value query statement
returns the element at the specified index
tests the query result for the query result
checks if the given type is a valid type
creates a new object with the given def
clears the error message
returns a new instance of the given binding factory
returns true if the given object is a valid instance of the
returns the column name for the given column name
compares this object with another object for equality
returns the name of the for the given code name
returns the hash code of the object
returns the of the domain
sets the inserts the result in the table
returns the number of rows in the database
render the domain object
returns the object def
removes the given position from the list
returns the collection of objects in the collection
this method is called when the user selects the first
returns the number of elements in this collection
returns the hidden property
returns the count of key value pairs in the specified key
returns true if the enumeration contains more elements
returns the object used to resolve the object
sets the filter
returns the next element of this enumeration
returns the xml schema for the xml schema
returns the property def for the given column name
returns the number of rows in the specified group
compares this object with another one
returns the value of the property
returns the key
emit a set of set of properties
returns the hash code for this object
executes the update statement
sets the value of the property
returns the intern def instance in the given property
sets the updates
ends the sorted array
sets the property
adds a new object to the list of
creates a query result object from the given domain object
returns the property def for the given property name
this method is called by the framework when the user enters the
creates a new property
notify the listener that the server wants to notify the
sets the chars to be replaced
sets the
sets the flag
returns the result set of the given result set
the value of the property
modifies the column name
starts the of the given property
returns the property def for the given column name
sets the value of the given column
sets the value of the given column
compares this object with another object
sets the locale
returns the hash code for this item
returns the structured text that is used to edit the
returns the next object in the database
creates a new code code instance
returns true if the given object is equal to this
returns a connection to the oracle database
creates a select all string
executes the query and returns the result
creates a select string with the given key
oracle form method
returns the visitor for the given key
returns the of the current filter
creates a select string from the database
creates a query result object
creates a select string with the given key
accepts a visitor
executes the given sql statement
called after the load of the load
creates a select string from the given select object
compares the specified object with this object
returns the hash code for this object
load the cache object
creates a select string with the given key
returns true if the statement has more results
returns the key
creates a new
sets the sql string to be used for the sql query
this method is called by the base class
returns a collection of all the domain domain objects
returns the key for the given key
creates a new
returns the object name of the object
returns the sql select statement
executes the given sql statement
select the query
creates a new key count column list
executes the update statement
prepare statement to prepare statement
returns the hash code of this object
checks if the given property name is in the given property name
select a query
creates a new instance of the given name
initializes the implementation
returns the number of in the given
returns the joined object definition
returns the
returns the
initializes the property set
returns the object definition
select a query
returns the of the domain
returns true if the property change listener is changed
returns the hidden property of the given name
sets the position of the current entry
returns true if the should be added to the dynamic list
returns the temporary object
select a query
returns the list of
creates a new property
select a result in the database
returns the instance of the code code object
returns true if the model is loading
release the resources
render the domain object
select a key in the database
equivalent to new object
this method is called when the domain object is finished
select the given query
this method is called when the end of the iterator is finished
emits a property in the property
find the type of the given type
called by the
this method is called when the array is sorted
inserts a new record in the database
start the of the
this method is invoked to start the iterator
p start a property
creates a new object
called by the property code set code
this method is invoked to start the sorted array
creates the order by the given domain
updates the current value of the code result code
creates a limit by the given limit
executes the given query in the database
resets the
update the database
returns the query result for the given query
sets the value of connection setting
returns the structured text that is used to represent the class
deletes the current object
creates a new domain object
returns the key
prepare statement
returns the sql query for the given domain
creates a new delete string
creates a new
sets whether to use the cache for the cache
deletes the given database entry
this method returns the sql query for the given domain object
closes the connection
closes the statement
commit the current connection to the database
creates a new update update string
this method is used to create the connection
creates a new
rolls back the transaction
this method is used to log the trace of the trace
accepts a visitor
convert the given type into sql type
returns the number of affected
returns the tablename definition
prepare statement to prepare statement
returns the maximum value of the column in the database
returns the object
returns the in the given domain
creates a new prepared update update update
returns the maximum value of a column
returns the xmldata object associated with the given def
returns the object for the given def
returns the column modifier for this column
creates the key for the table
checks if the given url is authorized to the ldap server
deletes the current instance
creates a select string with the given name and value
deletes the current instance
start generic documentation
creates a new prepared statement
creates a prepared update update
start generic documentation
sets the base attribute of the object
updates the current database
closes the session
updates the database
sets the request controls
creates a select all string
sets the limit of the
sets the order of the table
creates a select string with the given key
returns the filter
returns the modifier for this definition
returns the grouping expression
sets the filter to be used for the filter
returns the key of the column definition
creates a select string from the given object
tests this object for equality with an arbitrary object
returns the hash code of this object
returns the name of the home class
creates a new property
checks if the given property name is key value pair
creates a new select string
adds a hidden attribute
returns the domain object definition
creates a string object from the domain table
returns the name of the current definition
returns the hidden property of the given property
returns the key of the table
creates a select string
compares the specified object with this map for equality
returns true if the object is the same object
returns the type of the property
returns the column name
creates a select string from the given select object
returns the join definition
returns the hash code for this object
creates a select string with the given name
returns the table name
returns the value of the type of the
returns the value type
creates a select string from the table
adds a new grouping level to the list of definitions
gets the table name attribute of the jboss class editor object
returns the name of the nested property
returns the hash code for this object
returns the key of the table
creates a string object
returns the hash code for this object
returns the query to be used for the query
sets the join def
returns the column definition for the given column name
compares this instance to another instance
sets the table name
creates a new
returns the hash code of this object
adds a nested def definition to this definition
adds a key name to the given key
returns a string representation of the object
compares the specified object with this key
creates a new table with the given name
add a placeholder to the table
adds a property definition to the set of properties
replaces placeholders in the current context
returns the hash code for this object
returns true if the given placeholder is a placeholder placeholder
compares the argument def to the object
sets the table name
returns the mapping definition for the specified property name
returns true if the given object is equal to this one
add a column definition
creates a new table with the given name
returns a hash code value for this object
sets the query to be used for the query
replaces the placeholder with the given placeholder name
returns the string representation of the operator
sets the parent join def
called when the end of the key is encountered
returns the parent join def
returns the primary key definition object associated with this object
sets the child join def
returns the child join def
p end key of a key
creates a new table with the given domain and update the table
returns the property def for the given name
returns true if the given object is equal to this
returns the hash code of this object
this method is called when the mapping is encountered
returns the hash code for this object
adds a placeholder to the symbol list
this method is called when the user modifies the object def
returns true if the given placeholder is a placeholder for a placeholder
sets the primary key value
called by the property parser to handle the end of a property
adds a mapping to the mapping
creates a new select table
returns the join def def
creates a new prepared update update update
returns the joined object def
returns the key def
returns the mapping def def
start a key definition element
p start a key item definition
creates a new prepared update update
creates a select string from the given domain object
returns the relationship definition definition
returns the grouping def definition
start mapping definition
returns the nested def def definition
returns the placeholder definition
creates a new object of the given object
creates a new property definition
returns the object def
creates a new joined object
creates a relationship definition
visits the given domain object
returns the buffer
visits the specified domain object iterator
ensures that the given property is a property
returns the current
visits a propety set propety
sorts the array in ascending order
called when the column is not in the table
creates a select string with the given parameters
returns the temporary object
called when the end of the hidden button is pressed
returns the code list code of the code class code in the
called when the condition is joined
p asserts that the end of the nested element is being nested
gets the value of the property
pushes the result of the end of the table
end the document
returns the label for the specified
returns a new domain object
the given language
called when the user is going to be skipped
checks if the given code code is selected
compares this object with the specified object for order
start the document
checks if the given code is selected code
compares this code object code for equality with another
creates a new instance of code result set object code
this method is called when the join is being updated
returns the label for the specified language
returns a hash code for this object
checks if the tokenizer matches the given string
returns a string representation of the label
description of the method
convert the given code string code to a code string code
returns a string representation of the given list of
returns the raw paragraph
returns true if the given object is a type
returns a string representation of the object
accepts a specific implementation
adds a new text to the end of the current list
adds a new paragraph to the current line
deletes the specified key from the database
returns the paragraph type
returns true if the element has sub elements
returns a string representation of this object
accepts a specific implementation
calls the on structured text
returns the paragraph type
removes a key from the cache
translate a text in the given text
returns true if the element has sub elements
returns the paragraph type
visits a structured structured text
accepts a specific implementation
adds a new text to the current
adds a new paragraph to the current text
returns the paragraph type
returns true if the has sub elements
accepts a specific event
start the
creates a structured text for the given structured
returns a hash code for this object
compares this object with another one
returns a string representation of the object
returns true if the given schema name matches the given schema
p start a join condition
returns the bit field
add a new tuple to the table
add a new row to the table
returns the hash code of the object
compares this matrix with another one
returns a string representation of the object
returns the tuple object
returns the tuple bit row
sets the tuple bit row to the current row
this method is called when the object is created
checks if the specified pixel at the specified location is the same
returns a new tuple
returns the tuple at the specified position in the tuple
returns the index of the row that is stored in the table
returns the object at the specified position in the tuple
compares this object against the specified object
returns the hash code value for this object
returns the row at the specified position in the tuple
returns a string representation of this tuple
returns the index of the column in the table
returns a copy of this tuple tuple
start the object desc
adds a new row to the table
creates a new object with the same name and the nested element
returns the of the given text
returns the hash code of this object
compares this object with another one
returns a string representation of the object
returns the of the given text
returns a clone of this object
creates a result set with the given attribute
returns a string representation of the current value
removes the specified code int code from the current row
returns the differences between the two positions and the given field
returns the checked checked check table for the given row
returns the hash code for this tuple
start a placeholder placeholder placeholder placeholder placeholder
returns the of the given positions
compares this object with another one
creates a string with the given domain object
returns the current mark of the specified position in the current row
creates a new name
returns true if the user can add a dynamic constraint
gets the value of the list property
returns a clone of this tuple
adds a new string to the list of the elements in the
sets the value attribute of the object
adds a new object to the list
sets the value of the current value
returns true if the current position is empty
checks if the given character is a delimiter
returns the hash code value for this object
returns the element at the specified index
compares the specified object with this object
creates a new delete string
creates a new
returns true if the item is the same as the object
returns a new document that contains the current document
returns the hash code value for this object
creates a new insert string
creates a new instance of the given name
adds a new entry to the list of
add an entry in the list
creates a new
adds a name to the list of the
join a join
render the given output stream to the given output stream
returns the value of the named attribute
checks if the given name exists in the list
render the given writer
sets the value of the given property
sets the value of the object to the given value
this method is called when the user selects an error
adds a sortable item to the list
returns the value of the named attribute
creates a new prepared statement
creates a new object
this method is called when the user selects a message
returns the number of values in the list
clears the messages
clears the
removes the given position from the list
clears the error messages
this method is called by the framework to set the xml
returns the number of elements in this collection
returns the hash code for this object
returns the version of the resource bundle
creates a new prepared update update
creates a new prepared update update update
called by the sax parser to invoke the
called when a workflow is started
creates a new update update string
returns the actual state name
returns the current state of the workflow
executes the given method in the context
creates a new update update string
sets the initial state name
returns the initial state name
creates a new key count column list
returns the state of the given state
adds a html part to the content body part
adds a state to the state
sets the mail host
adds a new transition to the current state
deletes a key value pair from the database
adds the given part to the content part
returns the multipart content
sets the value of bcc addresses
returns the maximum value of the column in the database
sets the internet address of the message
sets the from address of the address
sets the subject of the message
sets the internet address of the message
returns the maximum value of the column in the specified column
returns the table name
removes a key from the cache
returns a new object
checks whether the given schema is in the database
returns the key column
returns true if the role has checked
returns the cache object
this method is used to save a member role
select a group of dbobject
refreshes the given object
returns the notification message of the given member
this method is used to find the given
creates a new password
this method is called when the password is entered
returns true if this object is
returns the body of the message
deletes the member from the list
returns the authors
returns the rating events
returns the
save a to the given
sets the author of the given author
gets the text published as a published publishers
sets the reviewer
creates a new entry in the database
returns the question of oracle oracle oracle
returns the sort string
returns the authors of the authors
returns the id of the oracle form
returns the actor
returns the oracle product id
returns the member with the given name
retrieves a member by id
oracle form method
returns the for the given
oracle form method
returns true if the given object is a same member
returns true if the given member is same as
returns the of the user
returns the member of the given user
gets the mail address
returns the class name of the member class
returns true if the person is female
returns the authors of questions in the database
returns the full name of the member
sets the refused to the oracle database
returns the id of the database
returns the name of the class that this class is
adds the index to the current index
returns the authors of the authors
select a new
returns the questions from the given
this method is used to modify the of the database
this method composes a new instance of the given
returns the authors
checks if the given id is already in the database
deletes a record from the database
select a new
update the range of
select a new
returns the for the given
select the given object from the database
returns the class name of the member class
returns the authors questions
returns the number of groups in the database
select a single object from the database
returns the published query result object
creates a new domain object
returns the ratings of the given
returns true if the given is granted to the permission
returns the authors of a given
returns the published result
returns the result of the specified query
creates a new
returns the permission object for the given id
creates a new
returns the questions from the given query
gets a question from the database
oracle form method
oracle form method
this method is called when the user got a question
returns the root questions of the given query
returns a group of query admin view
sets whether the selection filter should be filtered
checks if the given is the root of the form
returns whether the questions in the database is already in group
checks whether the given rating is legal
returns true if the key is participant in the
checks whether the given rating is legal
save a new to a file
get the filtered query
checks if a participant is group of group
returns the current question
returns a group of query admin view
test check for
returns the number of participants of a given group
creates a new
returns a query for the specified group
called by the framework to load the workflow
returns the id of the
removes a participant from the database
returns the maximum version of a oracle form
returns a query that relates the query to the specified
oracle form method
oracle form method
returns true if the audit is completed
oracle form method
returns the authors result of the given lsid
returns the full oracle product of this database
returns the for the given
returns true if the question is the root of the question
adds a new index to the list of
insert the methods description here
returns the code code object that fulfills the given
returns true if the given bookmark is already in the database
returns the completion of a oracle record
deletes a record from the database
oracle product method
sets the author of the given author
returns the entry at the given position
sets the reviewer
description of the method
returns the childs of the given
deletes the entry in the database
this method is used to skip the completion of a single object
returns the childs of the given
creates a new
returns the published published result
returns the published query result object
creates a link to the given
oracle form method
fills the domain object in the history
inserts a new entry in the history table
creates a new domain object
returns the text that describes the current
returns the authors result of a specific record
returns the for the given
checks if the given group is a group of group
checks if a group is a group
sets the value of the lt s gt
select a single instance of a group
oracle form method
sets the answered status of the given element
select a generic object
oracle wrapper for the
returns the count of the given key
returns the parent of the specified
returns the responsible responsible for the responsible
returns the responsible for the given author id
sets the answered of the given code
called when entering a parse tree
sets the version of the database
returns the version of the version
sets the answered node
select a query with a specific group
check completion of the completion of the task
oracle form method
this method is called when a question is rejected
creates a query statement
returns the parent question of a given question
creates a single value query statement
called when a is entering
sets the open from
oracle form method
checks roles for the given
oracle form method
check that the given password is authorized to be used
sets the open cms request
oracle form method
returns the
this method is called to make sure the of the
returns the for the given
associates the given object with the given id
returns the number of contributions
sets the checked state of the given state
deletes a role from the database
returns the result of the specified type
creates a new group admin role
creates a new participant
creates a new history
returns the number of childs of the specified
deletes a group group role
returns the ratings of the given
deletes a participant role
deletes a role from the database
insert the methods description here
retrieves a group with the given name
returns true if the participant has role participant id
creates a new instance of the given and
checks if the given parent id is contained in the database
returns the maximum version of the database
returns true if the group has role group admin
oracle form method
checks if the given depth level is visible
creates a select string for the given table
oracle form method
saves the password to the given password
checks if the value is in the value
the of the
returns the id of the actor
sets the actor id
sets the user id
create new
returns the user id
returns the authorization authorization
checks if the participant is registered
checks if the group is a group of group
refreshes the authorization properties
returns true if the user is a guest
adds a question to the database
adds a new code code to the database
adds a member to the
deletes a member in the database
refreshes the member in the index
removes the content of the given content group from the database
sets the
sets the
a interface for
save a to the given
test check for a given name
returns true if the member is
called when a is made to the user
called when a is made to the user
called when a new transition is
called when a new transition is
checks whether the given tasks has been open
registers a task task
returns true if this state is a private
returns true if the is
checks if the given group is a valid ami
returns true if the state of the is published
returns the number of rows in the current group
puts a key value pair into the map
returns a member for the given
returns true if the database is checked
sets the states of the current state
sets the action
returns true if the database is private
deletes a record from the database
returns the close
injects the given xml element into the database
injects the content of a node into a string
injects the given xml element into the database
sets the root node name
deletes this object from the database
returns the transition
checks the given value against the given name
oracle form method
returns true if the notification is notified
sets the notification
returns the value of the specified attribute
gets the mail body
sets the mail body
sets the value of the element
sets the mail subject
gets the value of the mail subject property
returns an xml representation of this object
sets the group name
returns the number of registered database instances
sets the id of the user who is used to create a
returns true if the task stack is empty
peek at the top of the stack
pop the current task from the stack
pushes a new task onto the stack
renders the html forms contents
clears the stack
returns the minimum value of the group
returns the first or second or second or second second
returns the pre checked pre
returns the pre pre checked pre
returns the depth of the group
test the
returns true if the index is valid
returns the index writer for the given index
called by the framework to load the workflow
returns the next object in the list of terms
searches for a lucene query
refreshes the content of the content index reader
returns the index writer for the specified index
called when the user has changed
refreshes the member index reader
adds a new search string to the current search
called when the user modifies the current state
creates the test indexes
close the index
returns true if the value is created or not
returns the role id of the current record
returns the id of the document
returns true if the current state is currently active
checks if the directory path exists in the directory
returns true if the current state is open
returns true if the given participant is a participant
checks whether the state of the given state is set
register a registry
activates the component
unregister a
adds a contribution to the list
register a version
removes a contribution from the list
returns true if the given permission is contained in the list
adds a new authenticator to the list
unregister a
removes a from the list
returns the of the
returns the active authenticator
checks if the given array of roles matches the given array of
checks permissions for the given code permission code
returns a xml string representation of the object
compares this object against the specified object
returns the value of the specified key in the database
returns a hash code for this object
returns the value of the specified key in the database
returns the html body of the html body
sets the value of the preferences key
sets the body
set the of the database
returns the mail
returns the of the
returns the locale for the given locale
gets the date pattern
returns true if the database is
returns true if the user is a valid entry
returns the database server
sets the database configuration
returns the server
creates the mail address
returns the subject text
adds a mail to the list of the mail addresses
this method is called by the factory
this method is called by the factory
adds a question to the list of questions
returns the state of the given code code in the
save a question in the database
edit the question
publish a publish state
called when the user changes the value of the
this method is used to delete the workflow
edits completion completion
publish a completion state
delete a completion state
called when the user selects the change
processes the answered processor
verify if the is answered
process the processor
tests if the current connection is rejected
returns the localized message for the given locale
oracle form method
convert a given into a string
convert the given exception to a warning
convert a to a warning
returns the view associated with the current context
handle the given exception
gets the text published for the given
creates a new entry in the database
returns the for the given
returns a published result from the database
oracle form method
returns the actor for the given actor
returns the authors of the authors
returns true if the given member is same as
retrieves a member by a specific id
returns the for the given
returns the authors of the authors
returns the questions from the given
returns the authors of the authors
returns the authors
returns the authors questions
returns the for the given
returns the authors of a given
returns the questions from the given query
checks if a given id is contained in the database
deletes a record from the database
update the range of
creates a new domain object in the database
creates a new query with the given id
returns the permission for the given id
creates a new
returns the question given a question
checks if the given is the root of the form
checks whether the questions in the given group exists
get filtered query
returns the maximum version of the given version
this method is used to translate a single select statement into a
test for the given string
returns true if the question is the root of the question
called when the user selects a new enter
deletes a record in the database
returns the childs of the given lsid
called when the leave number of leaves is
returns the childs of the given
description of the method
returns the published query result
returns the published published
this method is used to completion the given completion
returns the notification text that displays the current
resets the text to the given language
sets the value of the lt gt tag
returns the authors result of the given lsid
returns the for the given
returns the parent of the specified
returns the question question for the given question
returns the childs of the given lsid
sets the answered status of the given element
returns the result of the specified type
sets the answered of the given code code
oracle form method
insert the methods description here
sets the open from
sets the open cms request
this method is called when the is destroyed
sets the
sets the
oracle form method
this method is used to select the result of a
called when a new transition is
called when a new transition is
called when a new transition is
called when a new transition is
this method returns a query result object for the given query
creates a single value query statement
returns true if the is
check that the given authentication is authorized to the given authentication
returns the published query result object
returns the user id
test check for a given string
render a string to the given location
checks whether the actor is
returns the html for the html document
saves the password to the
disposes the task manager
adds a to the
render a menu item
returns the html code for the given code xhtml code
render a new
render the main application
renders the beginning of the given string
render the end of the user
removes a from the
render a title in the current context
render a task
returns true if the member is a member
release the task manager
returns the message in the given locale
returns the error message for the given locale
returns the selected options
checks whether the given state is allowed to be checked
executes the oracle command
returns a member of the
returns a string representation of this object
oracle form method
returns the xml representation of this
oracle form method
returns the object name for the given object
gets the value of the property
adds a permission to the database
returns the value of the specified column as a
returns true if the value of the parameter is sorted
returns true if the stack is empty
returns the current
returns the path to the resources that are in the path bundle
pops a top off stack
pushes a new top level view into the stack
clears the stack
returns the
sets the blocked status of the blocked thread
search for the given query
returns the content index writer
returns the index writer
refreshes the content of the content index reader
refreshes the reader index
adds a task to the registry
register a permission to be used for this user
returns the application menu
adds a new to the
render a string to a specific
removes the from the
adds a new to the registry
render the default locale
adds a new menu manager to the manager
returns the permission of the user
checks if the directory path exists in the directory
removes the specified menu manager from the manager
disposes the task
returns the string that is currently in the given string
returns the page id of the page
creates the login page for the given user
creates a navigation navigation navigation
returns the sql insert statement
returns the show task show group
run the login
removes a from the
returns the question for the question
runs the task in the given context
returns the show task show task type
oracle form method
removes a task from the menu
adds a menu to the
registers a new tab in the user
sets the page
process the preparation time
render the menu
render the menu
creates a string representation of the given
oracle form method
removes a task from the list of items
sets the actor
removes a task from the list of active menu items
oracle form method
disposes the toolkit
oracle form method
sets the actor id
returns the user id
checks if the request is in the redirect request
returns the form search form
registers a permission object for the given user
returns the task show task information
add general tasks to the database
sets the group id
returns the ratings for the player
oracle form method
returns the view stack
registers a task in the classpath
adds a skin to the
checks the roles for the actor
registers a new tab in the system
removes a task from the registry
sets the to the deletion of the current
run the task
p remove skin from skin
returns the contribution of the currently selected
checks if the request type is a valid request
registers a context for this context
adds a task to the registry
sets the parameters
get the context associated with the given lookup
returns the subject text
this method is called when the request type handler is received
returns the member history
sets the view
removes a task from the registry
sets the direct view
returns the locale of the user
activates the component
returns the url of the
sets the http http server
returns the searcher
returns the authenticator configuration
sets the preferences to the given value
returns true if the has a
retrieves the authenticator
returns the member cache for the cache
returns the configuration for the configuration
returns the message for the given locale
returns the name of the skin
adds a skin to the list of
returns the formatted message formatted in the specified locale
returns the navigation width
gets the heading height
removes the specified skin object from the
returns the login view
creates the mail address
returns the name of the skin skin
returns the role home
returns the of the
returns the configuration configuration for this configuration
get the configuration for the given configuration
returns the configuration name
change the skin value for the given skin
returns the link member role home
returns the context url for the given request type
registers the given to the configuration
returns the link permission role
returns the current permission
returns the group home
returns the group of the user who has logged in
returns the participant home
returns the home page of the question
returns the question hierarchy hierarchy for this hierarchy
gets the question author of this question
returns the completion home
returns the completion author
returns the subscription manager
returns the home page
returns the group for the member group admin member
returns the group for the user
returns the author reference to author
returns the reference to the child home
returns the child to the person
returns the code member completion code property
returns the question for the person
this method returns the completion of the
returns true if the given value is a role
returns the member reference to the member class member
creates a permission object for the given field
returns the group home to group
returns the reference to the question subscription to the question
returns the current code question code
returns the questions for the question
returns the nested group home
returns the error message for the specified error
returns the formatted message string
returns the path to load files
prepares the command to be used to prepare the given cmd
creates a new order object
oracle form method
invalidates the session
creates a new
sets the page to the given page
this method is called by the browser
returns the format of the current date
returns a dom representation of the xml document
returns a xml document of the given xml document
writes the specified byte to this output stream
oracle form method
oracle form method
returns the object for the given object
returns the member authentication home
returns the member cache home
creates a member of a member
creates a new
creates a new group
creates a group admin
creates a new question
creates a new question
creates a new instance of the given
creates a new entry in the database
deletes all the cases from the database
executes a sql query
checks the query result
get for a given database
returns the sum of all days of the given user
get for a
returns the selected selectable gui
returns the amount of the diagram
sets the diagram amount
returns the amount of the graph
returns the add button model
sets the amount of the graph
returns true if the is incremental
sets the add button
returns the integer value of the integer value
returns the label value
sets the label value
returns the current toggle model
sets the current toggle increment
returns the model selection model
sets the model selection model
sets the diagram amount of the nobel prize
processes the queue of the queue
sets the amount of chips
processes the current thread
puts all the mappings into the specified map
puts all the entries from the specified map into this map
returns the value of two values
adds a semantic vertex to the end of the list
adds a new edge to the graph
removes a semantic vertex from the
creates an edge
creates an edge with the given semantic
removes semantic edge from this edge
process a message
receive notification of the beginning of a document
initializes the graph
receive notification of the end of a document
run the thread
run the thread
this method is called when the server thread is started
send a message to the server
receive a packet from the socket
send a message to the server
sends a message to the server
this method initializes exit menu item
this method initializes file menu
this method initializes j internal
this method initializes j desktop pane
this method initializes j frame
this method initializes j internal
this method initializes new menu item
this method initializes j content pane2
this method initializes j tool bar
this method initializes j menu item
show the splash screen
this method initializes main frame
at startup create and show the main frame of the application
returns the number of
returns the number of years
returns the content of the content of this uri
returns the current type
returns true if the document is empty
returns true if the document is an error
returns true if the error is a child of the current type
returns true if the error is an error
returns true if the current element is an internal error
returns the content of the content of this object
sets the content of the content
sets the id
sets the document
returns the
returns the begin location of the
returns the end of the object
returns the
returns a duplicate of the given node
returns true if the node is equal to the given node
removes the given item from the document
returns the entity by id
returns the context
returns the value of the general identifier of the issuer
returns the namespace of the namespace
sets the
sets the namespace
returns the entity by id
sets the type of this object
returns a duplicate of the node
creates a new object
returns the for the given uri
returns a new uri object with the given uri
returns the uri for the given uri
creates a pointer to the pointer pointer
creates an element with the given type
creates an element
creates an element with the given type
creates an attribute with the given type
creates a new attribute type
creates a new attribute type
creates a new
creates a new
creates a new
returns a duplicate node in the document
returns the attributes of a given node
returns a collection of all the comments
returns the child elements of the given node
returns the child nodes of a given node
returns the first child of a given node
returns the last child of the given node
returns the next sibling of the given node
returns the parent node of the given node
returns the previous sibling node for the given node
returns the content of the node
returns the user data object associated with the given key
checks if the given node has an attribute
checks if the given node has a child node
checks whether the given node is an element of the list
returns true if the node is equal to another node
returns true if two nodes are
returns true if the given node is equal to another node
sets the user data
the given node and returns the node as a
stores the given file into the database
store the given file in the given directory
stores the given file in the format
writes the given file to the given file
returns the of the turtle
returns the document as a string
returns the document model
creates a new assertion
creates a statement with the given statement
creates a new assertion
returns a clone of this object
sets the window close listener
sets the size of the frame
builds the menubar
builds the north panel
tests the set configuration
test of get row method of class org
tests the get configuration method
test set property no prefix
sets the tool tips
test set property
sets the index of the label
returns the property value for the specified property
tests the functionality of the property
sets the value of the property
returns the file chooser for the user
returns the property value for the given property name
tests getting a string property string
removes the button
sets the value of a property with prefix
builds the north panel
test method for
returns the current configuration
load the default configuration
copy the current preferences to the current configuration
clears the output properties
reports a warning
clears the dynamic properties
save the user prefs
test persist user
clears the current parameters
throws a error exception
returns the string associated with the specified key
returns the mnemonic for the specified key
receive notification of a non recoverable error
sets whether the output properties are set to true
refresh the parameters panel
updates the indicator label for the label
enables disables the remove button
refresh the items in the menu
enables disables the
returns the state of the button
refresh the
toggle the off button
sets the on off button
refreshes the label indicator for the current state
creates the north panel
the panel
refresh the configuration label
refresh the application
the gui
creates the
enables the remove button
checks if the given index is a stylesheet
performs a transformation on the component
this method is called by the user when the user is done
adds a listener to the list of listeners
remove a particular
tears down the fixture for example close a network connection
executes the given operation
returns the set of all the servers
returns true if the server is a normal
returns all the required servers
returns the properties of the ant task
this method is called by the framework to perform the action
commit the current session
compares this topic with another
returns the model for the given fully qualified name
compares this topic with another
returns the result of the
adds a content path to the content
returns a clone of this object
sets the problem
copy the contents of the input stream to the output stream
compares this object with another
compares this object against the specified object for strict
returns a string representation of this object
this method is called when the is done
sets the time range for the given month
updates the pending status of the
returns the transaction transaction date for the given transaction
sets the status of the user to save the current button
this method is called when the user is
returns true if the row has changed
generates the invoice path
verifies if the given invoice is a valid invoice
highlights the given highlight
checks if the given color is
sets the read only mode
fired when a click is clicked
method to create the label for the
sets the title function
enables disables the buttons
adds a widget to the table
sets the read only mode
returns true if the row is visible
this is the entry point method
sets the

returns true if there are more tokens
returns the next token in the current position
returns the next token in the current token
count the number of tokens in the current token
returns the invoice type
sets the default value for this
sets the invoice type
returns the
returns a string representation of the component
sets the
sets the default date
validate the
removes the old past the given time from the database
returns the user id of the user
returns sql string to store a sql snippet
checks if a site is
this method is called when the invoice is invoice
creates the accept purchase invoice
sale sales
this method is called when the invoice is accepted
gets the value of the to property
sets the value of the to property
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
sets the credits
removes a book from the book
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
removes all the from the project
show confirmation
returns the root node of the tree
updates the console console menu
initializes the look and feel
installs the frame
initializes the welcome dialog
sets the dock component of the dock
returns the parameter at the specified row
returns the frame controller
this method is called by the framework to initialize the application
returns the code template manager code instance
this method is invoked by the framework method to do the order
returns the view associated with this view
invoked when a procedure has been changed
initializes the tool bar
returns the recent file menu
sets the view
build the filter
adds a listener to the list of recent files
selects all attributes
notify listeners that the recent file list changed
called when an entity has changed
initializes the query
build the filter
sets the value of the domain property
refresh the view
resets the db entity
removes all the buttons from the action
selects all attributes
returns the elements class
returns the value at the specified location
returns true if the cell at row and cell index and column
invoked when a procedure has been changed
selects the given relationship
selects the parameters for this query
called when the entity is changed
enables disables the buttons
invoked when a property changes
returns the divider location property
removes all buttons from the action
invoked when the target of the listener has changed its state
updates the panel with the given entity
selects all attributes
returns the class of the element
this method is called when the user selects the relationship
update the entity in the database
removes all buttons from the action
creates a button
reloads the entity list from the database
creates a combo box model
returns the data node
returns true if the entity changed
returns true if the data node is changed
returns the domain of the domain
sets the domain
returns true if the domain changed event has been changed
sets the domain changed value for this
returns the object that is currently being used by this object
returns true if the data map is changed
returns true if the is
returns the component that this component lives in
sets the text
returns the directory where the user is currently
creates a combo box
creates a combo box
creates a combo box
creates a new default cell editor for the given jtext field
creates a table cell editor for the given combo box
create an instance of
returns the key stroke key
this method is called when the user selects the project
returns the icon name
returns the last directory in the tree
returns the preferences for the application
report an error
returns true if the path is in the tree
centers the window on the screen
updates the status bar
invoked when an action occurs
creates a menu item
creates a jcheck box menu item
creates and returns a jbutton that can be used to create a
returns true if the portlet is always on the current page
returns the window that is currently being displayed
sets whether this is a always on the current page
returns true if the text should be shown
returns the frame that is associated with this view
sets the showing text
this method is invoked when the
returns true if the specified object is contained in the list
log a message with the given severity and level
returns the preference for the current domain
this method is called by the filter when the user selects a
checks if the given pattern matches the given pattern
returns the data map for the specified name
sets the selected index
sets the live check enabled attribute of the object
returns the data node of the current node
returns the tooltip
sets the single notification
returns true if the notification is a single single
adds a file to the list of files
removes a file from the list of files
centers the window on the window
removes all files from the list
this method is invoked when a hypertext link is updated
returns the controller for this project
pause the execution of the paused state
resumes the execution of the paused state
sort the list of keys
returns true if the given file is accepted by this filter
returns the key ordering
returns a description of the filter
returns the number of rows in the model
returns the event source
returns a description of the type of this entry
accept all directories and directories
moves the row up to the specified row
accept all directories and directories
moves the row down one row
removes all children from the list of children
removes the given entity
adds a new strategy to the last call
notifies all listeners that the tree has been selected
cancels editing the editing of the editing
selects the given rows
returns the path to the tree
sets the selection path
updates the progress bar
returns the classloader for this class loader
selects the specified row and column index
adds a file to the list of resources
updates the templates for the given code template code
returns the minimum number of columns in the column
sets the minimum number of columns in the table
returns the preferred size of the preferred column
sets the default renderer for the component
adjust the view size for the given view
creates the project path
installs the column panel for the given column
clears the selection
removes the specified panel from the browser
refresh the preferred size of the preferred size
scrolls the table to the right
updates the entity cell
this method builds the jgraph component for the given type
returns the graph map for the given domain
unregisters a controller from the session
returns the selected type
sets the selected type
called when the project is opened
this method is called when the user selects the selected domain
this method is called when a entity is moved
this method is called when the relationship is invalid
updates the given actions
performs the action
returns true if the path is
returns a copy of the current object
this method is used to encode the given object
creates a new entity
this method is invoked to handle the action
returns true if the given configuration is in the path
removes the given action from the list of methods
returns a confirm dialog for the confirm delete dialog
removes a database entity from the database
removes a query from the database
removes a procedure from the list
closes the project
checks if the controller is on close
returns true if the given object is a path to be used
performs the action
returns the free name for the given code name code
this method is invoked to handle the action
this method is called by the plugin controller when the user clicks
handle the event that the entity has changed
updates the state of the
handle the event that has been added to the model
this method initializes j panel
called when a entity is removed
shows the given node
returns true if the class is already registered
adds a listener to the entity manager
enables disables the path
returns true if the controller is already registered
rename a entity listener
this method is called by the controller when the user clicks the
this method is called when the user selects the selected entity
builds a menu item
this method is called by the
returns the key ordering
creates a query query
this method is called when the application is running
this method is called when the application is running
this method is called when the application is running
build the text for the validation text
clears the view
this method is called when the user selects a
hides the gui
copy the selected text
toggle the console
shows the console
sets the console property
appends a message to the log
returns true if this node is detailed
sets the detailed value of this item
stops the logging of the console
returns the selected schema
sets the table
returns the name of the table
select the selected table
this method is called by the framework to set up the adapter
returns the name of the procedure that is used to identify the
returns the naming strategy used for this component
the
this method is called when the application is started
prepares the generator for the database
writes the of the current batch
update the
sets the view
this method is called when the user selects the
returns the adapter that is currently being used by this adapter
sets the token
select the selected
creates the view for the view
this method is called when the plugin is running
action to perform when the action is loaded
this method is called by the framework to initialize the context
returns the problem
action for selected action
updates the current state of the uis configuration
fire a domain event to all listeners
returns the validation error message
notify listeners that the data node has been successfully
initializes the panel
this method is called to create a merger that can be edited
notify listeners that the data map has been cleared
invoked when a mouse button has been released on a component
fire a query event to all listeners
fire a procedure event to all listeners
fire a procedure parameter event
edit the current state of the database
updates the collection view
clears the current path
this method is used to determine the encoding of the charset
convert a comma separated list of encodings to a comma seperated list
this method is called when the application is running
this method is called when the application is running
sets the selection path to the selection
sets the db relationships
returns the object that caused the event
show data source editor action
creates a new data source action
this method is invoked when the user data contains an action
removes the action data source action
edits the data source action
edit the data source action
validates the map
configures the database generator
this method is called before the database is created
this method is called before the test is executed
sets the fully qualified name of the class that is used to
notify listeners that a
create a new adapter object
creates a new data source object
installs a new window and resizes the window
fires an object attribute event
sets the data node
returns the data map
sets the data map
sets the map data map
returns the line number of the given position
returns the width of the line
fire an relationship event to all listeners
sets the delegate
returns the value of the current context
binds a property change listener to bind and sets state to
binds a button to the binding
binds a component binding to the binding
binds a component binding to a binding field
p sets the binding for the binding
returns the view
returns the value of the specified property
returns the directory where the user is currently running
adds a callback method to the list of listeners
generates the
fire callback method event
returns the root of the document
fire an entity listener
fills the artifact version from the artifact
returns the quote for the given sql statement
sets the columns
sets the column types
load the data map
creates the generator for the action
load data map from file
returns the message that is displayed in the message
this method is called when the user shuts down the event
adds a listener for the scope event
cleans up the sync process
returns the object for the given context
returns the entity object
returns the name of the variable that is stored in the given
strips the package name from the package name
returns the entity resolver
strips the string from the given string
returns the name of the given character
returns true if the entity is abstract
convert the given constant into a constant pool
returns true if the entity is abstract
checks if the relationship is accessible to the relationship
returns the query method name
returns a collection of all the parameter names
checks if entity entity is in relationship
parses the qualifier pattern
returns true if the relationship between the relationship and the relationship
returns the type of the query
adds a type to the package name
returns true if the relationship has one relationship
checks if the entity entity is a relationship
format the type of the given type
returns true if the relationship contains a relationship between the relationship
returns the class name of the class that this class extends
sets the classpath to be used for the classpath
creates a classpath to be used to create a classpath
sets the map
sets the adapter factory
execute the task
sets the user name
validate the attributes of this object
this method is used to instantiate the workflow generation
returns true if the specified filter is included in the filter
validates the attributes
returns a list of entities for a given list of entities
this method is called by the framework to receive a specific port
sets the value of the make pairs property
validate the attributes of this object
sets the additional maps path
sets the
sets whether the path should be used to use the path to
sets the
sets the output pattern
sets the exclusion entities
creates a writer for the given template type
sets the value of include entities
creates a new instance of the config
returns true if the file is already modified
initializes the mailet configuration
returns the path to the destination file
adds a collection of entities to the gedcom
returns the adapter for the adapter
returns the primary key generator for this class
sets the pk generator pk of this pk pk
returns the adapter that is used to edit the adapter
returns the name of the entity that is mapped to the specified
creates a sequence string
returns true if the current datastore is not natively in the database
returns the table name for the given entity
returns the schema name for the entity
creates a structured adapter for the database adapter
finds the resource with the specified name
configures the extended types extended type
creates a pk generator
factory method to instantiate the factory
returns the pk generator pk of this pk pk
returns a new date with the specified time
writes a blob to the stream
writes the clob value
writes a clob value to the given clob
returns a qualifier for the given query statement
drop the sequence string
returns a action for the given query
drops the given node from the database
returns the list of all the sequences that are older than the
checks if the table exists in the database
creates a connection between the given connection and the given
executes a update update statement
returns the translator factory
sets the translator factory
creates a unique id for a node
returns the primary key cache size
sets the pk cache size
this method is used to handle the code code
attach a channel to the channel
sets the channel
sets the query cache
returns the channel manager
adds a query to the list of statements
route the given query
returns the of the xmldata
sets the relationship between the given type and the relationship
unset the relationship between the given relationship
returns the user object associated with the given key
removes the given code result descriptor code from the code result set
initializes the given properties object with the given properties
sets the user property
deletes the object from the database
returns the qualifier for the current temporal
add a prefetch to prefetch
initialize the properties with the given properties
add a collection of to the
clears the
returns a query with the specified parameters
adds a ordering to the list of ordering
sets the fetch size
adds a list of to the list of
add a ordering to the list
returns the prefetch path
sets the prefetch path
returns the last prefetch hint
clears the
removes the path from the path
creates a path to the given path
gets the value of the statement property
validate the given validation result
add a prefetch prefetch
sets a new parameter
returns the fetch limit
sets whether the data should be
sets the fetch size
returns the offset of the fetch
returns the number of rows that are allowed
sets the fetch limit
initializes the metadata for the metadata
returns a object representing the
returns true if the lock object is using locking
returns the database entity
returns the size of the page
resets the batch
returns the object id
sets the page size
adds a new snapshot to the map
adds a snapshot of the current snapshot
sets the root of the entity
adds a snapshot of the current map of updates to the given
adds a snapshot of the current snapshot
routes a query to a router
returns the data map
returns the relationship for the resolver
returns the root of the tree
sets the statement fetch size
traverse the
adds a path to the
removes a path from the node
returns the metadata metadata for the given entity resolver
sets the qualifier expression
a qualifier expression
redirects the query to a
returns the replacement query for the given entity resolver
returns the for the given class
sets the sort spec string
returns true if the first object is sorted first
sets the path to the path to the
returns true if the path exception is thrown if the path is
gets the value of the sort spec string property
sets the sort order
returns true if the ascending order is ascending
returns true if the current element is descending
returns true if the case insensitive is case insensitive
returns true if the sort order is a case sensitive
sets the sort case insensitive
sets the sort order of the table
returns the sort spec for this query
sets the sort spec
sorts the list of objects in the list
this method is used to encode the given host
initializes the given properties object with the given properties
returns the size of the parameters
convert the given value to a clob value
returns the query
adds a new attribute to the list of attributes
creates a new prepared statement
this method is called when the database is broken
append the given part to the tree
returns true if the given attribute is included in the database
returns the trim function of the function
sets the trim function of the function
append the attribute value pairs to the given string
returns the default template
sets the default template
applies the qualifier to the given query
appends the limit of the specified code clause code to the end
sets the parameters
returns the number of elements in the tree
append all joins to the given node
returns true if the is distinct
returns the code code property
sets the column names
sets the result of the job
sets the relationship between the given db and the given relationship
returns the parent data domain
sets the delegate
runs the driver
returns the delegate
executes the given sql statement
returns the failures
returns the object that holds the store
returns true if the database should be created
returns true if the store has changed
clears the cache
returns the queries
returns a list of all results that match the query
returns the number of in the query
returns the first first rows of the given query
returns a list of all queries
enumerates the attributes of the entity
returns the domain of the domain
checks if the domain is stopped
closes the transaction
this method is used to retrieve the data object from data base
returns the event manager
creates a new object with the specified name
sets the event manager
returns true if the interceptor is on commit mode
sets whether the parser is on the commit mode
returns true if the transaction is configured to be used to access
sets the value of the using external transactions flag
unregister the given objects
sets the transaction delegate
adds a map to the map
returns the data map with the given name
resets the cache
clears the data maps
returns the number of registered objects
retrieves the data store cache for this database
creates a new transaction
executes the query on the specified query
returns the snapshot of the data row
handle the request query response
called when the has changed
returns the entity resolver
sets the query builder factory
adds a filter to the filter
removes a filter from the list of channel filters
returns the number of snapshots in the bag
returns the maximum size of the list
stops the server
returns the data source factory
returns the data map associated with the specified name
adds a data map to the map
returns the data source
returns the data node for the specified data
sets the event manager
sets the entity resolver
returns the event subject
executes the query in the list of query objects
resolve the current
prints the exceptions stack trace to the given print writer
returns the data context
returns true if the exception has all exceptions
executes the query
executes the next query
evaluates an expression
pushes a marker on the stack
appends the given chunk to the end of this stack
appends the given chunk of the end of the chunk
extract the template string from the database
returns the query
sets the columns
returns the qualified name of the column
returns the
returns the name of the procedure
closes the iterator releasing any resources associated with this
returns true if the query has generated keys
guess the type of the given type
check the next row in the iteration
returns true if the connection is closing
returns the width of the table
sets the closing attribute of the object
binds the binding to the binding context
creates a new
returns the procedure
select the db relationship between the given relationship and the given relationship
initializes the default factories
removes a factory from the factory
registers a new class
gets the value of the default type property
sets the entities
returns the type of the given class
sets the source node of this node
unregisters a type from the registry
sets the destination node
creates a new type
returns the delegate
sets the destination
sets the batch size
register a new object
returns the value of the given string
returns true if the is
returns true if the character is
returns the meta data for this database
returns true if the table name is included in the table
releases the resources held by this code controller code
load the db relationships
returns the url of the data source url
returns a connection to the database
sets the naming strategy
notify listeners that the connection has been closed
returns a connection to the database
returns the description of the error
adds a validation failure to the list of failures
checks if the batch has failed
returns true if the graph manager is notified when the user changes
returns true if the graph is enabled
sets the version
creates a new context context
returns true if the graph has changed
called by the client when a new object is received
this method is used to convert the event to a message object
convert a serializable object to a event
returns true if the thread is single threaded
returns the external subject
returns true if the event is running
returns true if the external event is notified when a
this method is called when a new message is received
builds the string for the configuration
removes the listener
removes all the specified subject and the subject
removes a listener from the subject
returns the posted by
removes a listener from the queue
shuts down the server
posts an event to the event queue
this method is called when the user selects a subject
this method is invoked when a non
sets the value holder object to be used for editing
creates a new value holder for the given persistent object
adds a factory factory factory factory
removes a descriptor of the given name
creates a proxy descriptor for the given entity type
checks if the descriptor is initialized
returns the descriptor of this descriptor
removes all events from the given type
returns true if the event is empty
returns the owner of the given object
this method is called when the parent class is fully qualified
invokes the callbacks for the callbacks
adds a property to this property
adds a property to the property set
invokes the implementation of the callbacks
adds a database root to the database
removes the property declared in the given property
adds a subclass to the class
returns the property with the given name
returns the class descriptor for this class
returns the value of the property
creates a new instance of the object
sets the value of the property to be used as the superclass
this method is used to merge the object properties
returns the accessor
adds the default callback to the list of listeners
adds a callback to the list of objects
this method is called when the object is being activated
returns a query cache for the specified properties
returns the delegate
clears the current context
returns the cache
removes a key from the list
called by the scheduler to initialize the cron service
called by the policy when the policy is changed
removes the specified group from the group
rotate the string to the specified value
returns the data domain object
returns the data source for the given data name
returns all properties that have been set
returns the injector
returns the channel data
returns the context
returns the context data for the given channel
returns the configuration of the configuration file
sets the configuration resource
returns the configuration location of the configuration file
returns true if the object is a fault
invalidates the current object
returns a string representation of the given position
returns the position of the given code long code
sets the string value at the specified position
make a wrapper object for the given context
truncates the code clob code value that this code clob code
returns a list of the
synchronizes the entities with the given entities
returns a list of the objects that are contained in the list
notify listeners that an attribute has been added
fire relationship added
sets the naming strategy
mark the persistent object as dirty
prints the map of the given map
prints a collection of
sets the current time to the new time
prints the project version
prints a string
executes the query
prints a property
prints a property
prints a property
calculates the index of the given value
sorts the list
runs the query
fires the event
retrieves the blob data
fires the given argument
retrieves the position of the specified pattern
sets the contents of the specified byte array
sets the given byte array at the specified position
sets the stream to write to the database
truncates the code clob code value that this code clob code
returns the map of the current map of the
returns true if the object is a fault
returns a map of the given collection
invalidates the current state of the object
returns the set of the set of objects that are resolved
finds the resource in the specified resource
clears the results
finds the directory resource with the given name
replaces the old result with the new result
returns true if the directory should be skipped
sets whether the directory should be skipped
returns true if the current directory is currently running
sets whether the current directory is skipped
returns true if the classpath should be skipped
sets whether the classpath should be skipped
returns the class loader for this class loader
returns true if the path should be skipped
sets whether the absolute path should be skipped
adds a path to the classpath
add a path to the list of paths to be added to
adds a file path to the list of directories
sets the primary key name
returns the primary key name
adds a field to the database
p encodes the specified xml file
returns the reverse name of the reverse
sets the primary key
returns true if the is
creates a new relationship object
sets the generated flag
add join join to join
sets the fk name
returns the foreign key name
removes a db relationship from the database
sets the to many
returns the fully qualified name of the schema
returns true if the given type of source is target
returns the entity matching the given entity
returns true if the entity is qualified
sets the catalog name
returns true if the source is the source independent
adds an attribute to the list
clear the list
returns true if the relationship is a primary entity
sets the callback method for a specific method
returns the attribute for the given path
adds an attribute to the set
returns true if the database is
sets the primary key generator for this entity
returns true if the user is used to use the locking for
sets the used for locking
returns the database attribute of the entity
returns the primary key generator instance
returns true if this entity is inherited from the entity
returns the name of the attribute that is stored in the database
checks if the path is
returns the delete rule
returns true if the attribute is mandatory
called when entity is added to the database
returns the maximum length of the database
returns the attribute value
sets the rule for the delete rule
updates the database attribute path with the new value
called when entity is removed from the database
initializes the cache
returns the path to the database relationship
returns the path to the reverse relationship between the db and the
construct the current state of the current state
creates a listener for an entity
sets the db relationship path
event fired when an entity relationship is added
event indicating that the relationship has changed
sets the lifecycle registry
returns the entity resolver for this entity
maps the location to the given location
sets the qualifier expression
returns the relationship between the current entity and the target
returns the collection type
returns the tree for the given entity
sets the entity
returns the tree for the given entity
this method will be used to ensure that the encoder is able
p encodes the specified xml file
adds a parameter to the list of parameters
removes a call parameter
returns the result of the query
returns true if the is
sets the catalog name
sets the schema
adds a listener to the list of listeners
returns the class name of the class that this class represents
removes a listener from the list of registered listeners
lookup entity database
sets the relationship
returns an object that is the entity that is used to resolve
returns the callback map object
sets the old name
returns the lock type
sets the entity listener factory
sets the lock type
returns the attribute for the given path
returns the attribute with the given name
creates a new join join
returns the source of this entity
this method will be used to print the
returns true if the client is allowed to be connected
adds a column to the table
sets the abstract
returns the attribute with the specified name
removes the attribute with the specified name
returns true if the server is a server only
returns the relationship between the given rel name
removes a relationship from the list of relationship
returns the relationship between the relationship
sets the server only
returns the declared qualifier expression
returns the super entity name
sets the direction of the arc
returns the entity that this entity is listening to
sets the entity
sets the target entity of the entity
returns the name of the entity that this entity is mapped to
sets the name of the entity that the entity is used to
returns true if the value is a many
writes the to the given print writer
sets the super entity name
returns the client class name
append the prefix to the current page
sets the client class name
returns the query for the given query
adds a query to the query
removes a query
returns the super entity
append the prefix to the current page
clears the
returns the database entity database entity
sets the database entity
find a database entity
find the database column name for the given entity name
finds the db relationship for the relationship
returns the attribute for the given attribute
adds a to the list of existing
adds a result to the result set
gets the relationship for the relationship
adds an entity entity to the database
removes all associations between the relational and the relationship
adds a db entity to the database
compares this node with another one
determines if the entity is an entity
adds a listener to the list of registered listeners
applies the given graph to the graph
undo the change
removes a listener from the list of registered listeners
creates a new instance of replacement map
translates a template path to a db path
returns the database entity database entity
returns the entity entity for the given class name
returns the entity entity for the given entity name
returns the expression that is associated with the given parameter
join a predicate expression
returns the expression of the expression
returns the database entity name
returns the expression that is associated with the given expression
tests if the given object is a valid object
creates a deep copy of this object
sets the database entity name
removes a database entity from the database
traverse the traversal
traverse the expression
called when an entity is changed
transforms the given transform to the given transformer
removes an entity entity from the entity
encode the specified properties
called when an entity is added
removes an entity entity from the entity
called when an entity is removed from the entity
returns true if the default is
adds a procedure to the list of procedure objects
returns true if the is not
returns the namespace
sets the namespace
generates a string representation of the attributes
returns the escape char
returns the expression for the given index
this method is called by the parent to indicate that the children
print the content of the tree
sets the values of the values contained in the given value
returns the next
resort the index of the current object
returns the source of this object
creates a new server event bridge
returns the entity resolver
set the remote channel listener
returns the channel
create a channel channel
initializes the event bridge parameters
returns the context
returns a list iterator iterator over the elements in this list in
returns an iterator over the elements in this list in the list
returns the number of messages processed by this job
returns the session
returns the property name for the given property mapping
sets the root of the given xml document
encodes a property
sets the value of the property
encodes an object into a string
this method is used to encode the object as a string
initializes the document
returns the root node of the given node
returns true if the given xml tag is a valid value
encodes the collection of elements in the jsonarray
decodes a double value from the xml string
pushes a element to the parent element
decodes a string value from the xml string
decodes a string
p this method is used to decode the xml object
decode the xml content
decodes the xml document from the xml
decode the element
visits the given visitor
visits the given visitor
tests that the select query works correctly
tests that the select query works correctly
test that select query works
test of select long in select method of class select query
tests the query with the correct query
test the do
test the do query
test creating a query with a single
test that verifies that the select compound query works
tests the select exception
test the build query
test the
test the service manager
test the
test that the department department is deployed in business department
test the number of columns in the model
returns a string containing the result of the given
tests the fetch entry
tests that character in a qualifier
tests the functionality of the select query
test that eager objects are grouped correctly
test has changed
tests the code code method
puts a snapshot of the current snapshot
test
test
test
test conflicting with a record
invokes the procedure for the procedure
returns true if the reverse comparison algorithm is supported
returns true if the syntax schemes can be equal to this
returns true if the character is a trim char
returns true if the lob lob supports the lob lob supports the
returns true if this dialect supports
sets the template to be used for the query
get the data source info object for the given name
creates the schema for the schema
creates a data source info object from the properties
traverses the tree
test method for
test that the marker is with a string
test that the pad markers works correctly
test
test the size
test the evaluation of a regular expression
ensures that the expression is correct
test of in parameter method of class
test that the expression is correctly applied to the
test that the expression is not
test that the expression is not
test that the expression is correctly used to generate a null
demonstrates that the object is deleted
test decode mapping
returns the path to the invalid path in the database
returns the invalid path as a string
returns true if the property is invalid
compares two versions
convert the given data source factory to a
returns the query for the specified query
returns a collection of all the queries
returns the qualified name of the query
returns the model url
returns a data map for the specified path
returns an iterator of names of the model names
returns a list of all the entity names
checks if the given entity is a valid entity name
returns the entity id of the given entity
returns an iterator of names of the entity names
creates a query with the given query
returns a map of the query
load the model index
load a mapping from a given entity
load a query
finds the model name
finds the url for the given path
opens an input stream for the url
opens an input stream for the specified entity
opens an input stream for the given entity name
sets the date of birth
test that verifies that the template is correctly used for the template
test that a single is rejected
test that the works properly
test the
test the
test the
removes the specified event from the list of
load a data map from the given uri
maps the location to the location specified by the location name
returns a new instance of the locator that is used to resolve
prints the attributes of the given attributes
returns the field for the given class
this method is used to write the schema type
checks if the is
notifies the listeners that a property change has been changed
analyses the relationship
returns true if the property value is set
returns the source of the event
returns the target element
adds a connection to the connection pool
connect to the connection
disconnect from the connection
p delete the current object
moves the current record to the next record
moves the current record to the previous record
sets the relationship between the given object and the given value
returns the value of the specified object
sets the current object
listens for changes in the property list
validate the current record
returns true if the connection is connected to the root
adds an element to the diagram
adds a root element to the tree
modify the bounds of the given bounds
removes a connection from the list of connections
commits changes to the model
sets the bounds of this object
returns the element of this element
returns a single element for the given object
removes the element at the specified position in this list
rolls back the transaction
this method is called by the editor to update the editor
toggle auto layout property
returns the editor for the given address
returns a new editor object for the given context
returns the server address
executes the query
listens for the button
returns the command to be used for the command
returns the command to be executed
returns true if the user is enabled
handles the action event
checks if the relationship is valid
returns the part part of the element
returns the relationship between the given relationship
hide the
this method is invoked when the property changes
returns the model element
returns the connection anchor
invoked when an action occurs
sets the bounds of the element
adds components to the component
sets the attributes to be used for this component
refresh the model
p process button pressed
the method is selected
called when the user selects a widget
checks if the is
returns the dao for the dao
returns the current context data
find the object that matches the given query
find a list of objects in the database
returns a string containing the keywords of a specific keywords
update the quantity of inventory
returns the order id of the object
returns the child of the specified parent
returns the number of children of code parent code
returns the index of child in parent
returns true if the given node is a leaf
returns the child of the given parent
returns the number of children of code parent code
returns the index of child in parent
returns true if the given node is a leaf
sets the root of the tree
adds a path to the
sets the sort spec string
sets the page size
sets the ascending order
sets the descending order
returns a list of the
returns the context object for the context
creates a service wrapper object for the service
sets the fetch size
returns true if the reference is serialized
exclude a specific attribute
returns the incoming property
returns the number of commit the
returns true if the is
sets the
process the ownership of the database event
returns the data channel
factory method for the context object
gets the value of the project project property
start the
binds the given binder object to the given binder
creates a visitor for the given class
returns true if the given class is
creates a new array type
checks if the method is supported by the method
adds a new argument type
sets the type
returns the type of the
returns the number of elements in this list
compares the argument to the code
checks whether the given type is supported by the factory
compares the given name of the given type of the given name
add a field to the database
returns true if the specified field is in the database
checks if the given method is a method
checks if type is defined
returns the field type
tests if the given string is equal to the same name
finds the type of the given type
checks if the given field is a valid field
adds a new type to the list of type
adds a variable to the list of variables
checks if the given variable name is declared in this class
returns the name of the variable
adds an error to the list
checks if a method is present in the given type
creates a new operator
creates a new instance of
creates a new piece of the given piece
creates a new instance of
creates a new piece of the given piece
creates a new instance of
creates a new square with the given piece
returns a list of string representation of the list of strings
returns the value of my turn
test the loading of a file
returns the list of move list
tests the game controller
sets the turn
sets the move
sets the move list
returns the name of the
creates a new piece of the given piece
creates a new move object
creates a copy of the given board
saves the game list to the given game code game game code
creates a move from a given move
copy the contents of the given actor
gets the next move
make the next move
checks the move to move
prints all the current players
quits the game
checks if the game is over
initializes the values
displays the error message in the input stream
parse a string
prints the board
runs the game
sets the pieces of the board
creates a new game controller
stores the piece in the given piece of the given piece
creates a new instance of game controller
restore last game pieces
restore the piece information
creates a new controller
creates a new controller
returns the level of the player at the specified level
invoked when a mouse button is pressed on a component
returns the players
repeat n times
returns the value of show legal pieces
displays the game
returns true if the legal moves is legal
this method is called when the user selects the player
this method is called when the game is paused
returns the player type of the player
returns the player machine for the specified color
returns the human player
returns the name of the game
creates a new square with the given piece
returns the time left of the specified color
gets the time left string
creates a new code timer code instance
returns the is timing
creates a new instance of the given code char code
returns a new piece of the given piece
make a copy of the board
returns a list of all the moves moves
returns the board type
returns the next turn
returns the number of pieces in the specified side
returns the moved moved
returns the difference between the side of the given side
returns the current board type
returns the number of in the given code player code
returns the total number of times the player has been killed
returns the move history
returns the checked state of the given side
returns a list of the
returns a king for a given piece
returns true if the side of the given side the side
checks if the game is over the game
returns a piece at a given position
returns the piece moved at the specified color
sets whether the video is legal on the video
returns the last piece moved at the specified color
sets the value of the show legal moves property
returns true if the piece is moved moved moved
returns true if the given column is usable
sets the timed game
returns the string representation of this code indian code
sets the type of board
gets the
sets the value of the game in progress property
sets the board type
returns the color of the opponent
sets the checked state of the radio button
sets the player type color
returns the current color of the opponent
sets the special value of the given side
sets the time left
sets the piece at the specified location
returns the character at which this character is
sets the piece moved moved to the piece of the piece
sets the time left string
sets the piece moved to a piece moved
sets the board
sets the piece moved to the given piece
sets the name of the game
sets the piece moved at the given position
sets the board
compares the given object to this board
start the timer
returns true if the given board is checked
sets the moved attribute of the object
stops the timer
sets the location of the cell
sets the next turn to the next turn
sets the last location of the table
toggles the turn of the game
starts the game
compares the specified object with this one
checks whether the given player is a right
returns true if the game is over the game
saves the game to a file
reads the file from the file
checks if a game is over
check if a player is tie to move to the next board
check if a player is tie to move to the next board
checks if the board is win
checks if the board is win
moves the moves and moves the given one
get possible moves of the given move
returns a list of all the moves moves
returns a list of all moves for a given player
make a move move
make a move to a move
make a move to the given move
move the move to another move
move the move to the other move
make a move to the given move
undoes the move move
invoked when an action occurs


checks if a move is
this method is called when the user selects a move
returns the context
returns the logger manager
returns the component that is associated with the given name
sets the id of the object
deactivates all the radio buttons
removes the behavior from the behavior
returns the behavior of this component
returns the default value of the default value
returns the controller that is used to draw the controller
sets the value of the current value
returns the position of the
removes the parent object from the context
returns true if the component is
sets the mouse button
returns the text in the text area
clears the current position
returns true if the is auto clearing
submits the current text
add a close button to the list
removes the close button
returns the tab
returns the value of the current value
returns the parent interface
returns the window
deactivates the radio button
returns the current tab
returns the id of the
removes the tab from the map
removes all the elements from the applet
updates the tab
this method is called when the user selects the
gets the value of the papplet property
sets the title of the applet
shows the current screen
hides the applet
returns the value of the string as a string
shows the splash screen
returns the value of the controller
returns the value of the controller
returns the controller
returns the tab tab tab
returns the group control group
returns the label of the controller
returns true if the tab is a tab
returns the label of the current panel
returns the tab
hides the dialog
sets the visibility of the component
removes the parent object from the map
hides the popup
open the
closes the open
scroll the scroll bar
scrolls the window to the scroll bar
returns the value label
returns the value of the label as a string
returns the text of the current element
returns the font
returns a string representation of the object
returns the time in milliseconds since january 1 1970 00 00 00
resets the current state of the time
sets the speed of the speed
returns the number of milliseconds
returns the second value of the second
returns the minute of the minute
returns the hour
returns the day of the day
adds a child to this element
lock the lock
unlocks the lock
saves the current state of the file
hides the window
trigger the controller
returns the double attribute of the object
sets the arguments
adds a syntax syntax to the syntax
parse the given reader from the reader
parse the string
removes a child from the list
removes a property
removes a child
creates a new element
creates a new with the given name
returns a stldata type object
returns the expected input for the given input char
creates a new entity with the given name
this is the entry point method
called by the framework to perform the view before the user is
reads a list of beans and returns a list of
adds a frame to the list of frames
selects an explicit frame
cascade iconified menu
the frame
dispatch a new object to the specified object
creates a trait with the given trait
binds the given traits to the given object
binds the given object to the given code code
p this method is used to create the object with the specified
removes a trait from the container
prints the current time
returns a string representation of the object
prints the current
returns a string representation of the object
prints the status of the
returns a string representation of the object
returns a string representation of the object
this method is fired when the user clicks on the event
sends a simple message to the server
removes an element from the list
open the database
open the database
returns true if the url is
returns all authors of the database table
returns a cursor for the list of all database accounts
this method initializes this
this method initializes j content pane
this method initializes j content pane
this method initializes j jmenu bar
this method initializes j panel
this method initializes j menu
this method initializes j button
this method initializes this
this method initializes j button
this method initializes j menu item login
this method initializes j content pane
this method initializes j scroll pane
this method initializes j
this method initializes j table
this method initializes j menu item logout
this method initializes j menu
this method initializes this
this method initializes j menu item
this method initializes j panel
this method initializes j text field
this method initializes j text field
this method initializes btn login
this method initializes this
this method initializes
this method initializes this
this method initializes this
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes j
this method initializes j
this method initializes j stock
this method initializes j text field
this method initializes j stock
this method initializes j text field1
this method initializes j
this method initializes j text field2
this method initializes j
this method initializes j
this method initializes j text field
this method initializes
this method initializes
this method initializes j
this method initializes j text field nom
this method initializes j item
this method initializes j item tipo
this method initializes j item pedido fin
this method initializes this
this method initializes j content pane
this method initializes j text field
this method initializes j menu
this method initializes article
this method initializes j
this method initializes j cancelar
this method initializes j menu client
this method initializes j menu
this method initializes this
this method initializes j content pane
this method initializes j
this method initializes j menu item
this method initializes j menu item
this method initializes j panel
this method initializes j text field
this method initializes j menu item modificar
this method initializes this
this method initializes j menu item
this method initializes j
this method initializes
this method initializes j
this method initializes j text field nom
this method initializes j
this method initializes j combo box
this method initializes j
this method initializes this
this method initializes j
this method initializes j text field
this method initializes j cancelar
this method initializes j content pane
this method initializes
this method initializes j
this method initializes j text field
this method initializes j combo box1
this method initializes j button
this method initializes j text field
this method initializes j button
this method initializes j scroll pane
this method initializes j text field
this method initializes j table
this method initializes j text field id
this method initializes j
this method initializes j text field
this method initializes j combo box
this method initializes j check
this method initializes j button
this method initializes j text field
this method initializes j
this method initializes
this method initializes j text field
this method initializes j button
this method initializes j login
this method initializes j radio button
this method initializes j
this method initializes j text field
this method initializes j logout
this method initializes j radio button1
this method initializes j
this method initializes j radio button2
this method initializes j text field
this method initializes j j j j j j me
this method initializes this
this method initializes j registro
this method initializes j text field
this method initializes j text field
this method initializes j datos
this method initializes j text field nom
this method initializes j text field
this method initializes j menu item
this method initializes j panel
this method initializes j text field
this method initializes j button
this method initializes j menu item
this method initializes j button
this method initializes j text field
this method initializes j
this method initializes j combo box
this method initializes j panel
this method initializes j button
this method initializes j button
this method initializes j
this method initializes j scroll pane
this method initializes j
this method initializes j table
this method initializes j pedido
this method initializes j pedido
this method initializes this
this method initializes
this method initializes
this method initializes
this method initializes j check box
this method initializes j
this method initializes j cancelar
this method initializes
this method initializes j text field
this method initializes j text field1
this method initializes j button
this method initializes this
this method initializes j text field
this method initializes j combo box
this method initializes j scroll pane
this method initializes j table
this method initializes j jmenu bar
this method initializes j menu item login
this method initializes j menu item logout
this method initializes j menu
this method initializes j menu item
this method initializes j menu item package
this method initializes j menu
this method initializes j menu item
this method initializes j menu item
this method initializes j menu item modificar
this method initializes j menu item
this method initializes j menu
this method initializes j stock
this method initializes this
this method initializes j panel
this method initializes jcb tipo
this method initializes jcb
this method initializes jbtn add
this method initializes this
this method initializes j content pane
this method initializes
this method initializes j text field
this method initializes j text field1
this method initializes j text field2
this method initializes j
this method initializes jcb
this method initializes j jmenu bar
this method initializes jcb
this method initializes jbtn add
this method initializes jcb
this method initializes this
this method initializes jcb
this method initializes jbtn add
this method initializes j text field nom
this method initializes jcb
this method initializes j text field
this method initializes jcb
this method initializes jbtn add
this method initializes j panel5
this method initializes j text field
this method initializes
this method initializes j panel6
this method initializes j text field
this method initializes j scroll pane
this method initializes j table
this method initializes j button
this method initializes j button
this method initializes j button elimina
this method initializes drink
this method initializes j table import
this method initializes jbtn compra
this method initializes j menu
this method initializes j button
this method initializes j menu item login
this method initializes this
this method initializes j content pane
this method initializes article
this method initializes j
this method initializes j cancelar
this method initializes j text field
this method initializes j text rol
this method initializes this
this method initializes j
this method initializes j
this method initializes j combo box
this method initializes j
this method initializes j combo box1
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes j button
this method initializes j text field
this method initializes j
this method initializes this
this method initializes j aceptar button
this method initializes j cancelar button
this method initializes this
this method initializes j aceptar button
this method initializes this
this method initializes j cancelar button
this method initializes this
this method initializes j
this method initializes j
this method initializes j text field
this method initializes j
this method initializes j cancelar
this method initializes j text field
this method initializes j text field nom
this method initializes j text field
this method initializes this
this method initializes
this method initializes this
this method initializes j table
this method initializes j
this method initializes this
this method initializes j cancelar
this method initializes j content pane
this method initializes j text field
this method initializes
this method initializes j button
this method initializes j cancelar
this method initializes j text field
this method initializes j text field1
this method initializes this
this method initializes j
this method initializes this
this method initializes j
this method initializes j cancelar
this method initializes j
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes j button
this method initializes jcb tipo
this method initializes this
this method initializes j check box
this method initializes j text field
this method initializes j text field1
this method initializes this
this method initializes j button
this method initializes j button1
this method initializes this
this method initializes jcb
this method initializes j aceptar button
this method initializes j text
this method initializes j stock
this method initializes j nombre text
this method initializes jbtn add
this method initializes j text
this method initializes j table
this method initializes j descripcion text area
this method initializes j modificar button
this method initializes j stock
this method initializes j cancelar button
this method initializes j cancelar button
this method initializes j tipo combo box
this method initializes jcb
this method initializes j text field
this method initializes jcb
this method initializes j button
this method initializes jcb
this method initializes jcb
this method initializes j item pedido fin
this method initializes jcb
this method initializes jcb
this method initializes j table table
this method initializes j table
this method initializes j aceptar button
this method initializes j modificar button
this method initializes j button
this method initializes j button
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes j aceptar button
this method initializes j button
this method initializes this
this method initializes j text field
this method initializes this
this method initializes j panel
this method initializes j text field
this method initializes j text field nom
this method initializes j menu item logout
this method initializes j text field
this method initializes j button
this method initializes j panel
this method initializes j password field
this method initializes j password field
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes j button modificar
this method initializes j text field num
this method initializes this
this method initializes j text field num
this method initializes j login
this method initializes this
this method initializes j logout
this method initializes j datos
this method initializes j menu item
this method initializes j menu item
this method initializes this
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes this
this method initializes j text field
this method initializes j text field nom
this method initializes j panel
this method initializes j button
this method initializes this
this method initializes j combo box
this method initializes j text field cod cliente
this method initializes j button
this method initializes this
this method initializes j table import
this method initializes j button
this method initializes this
this method initializes j panel
this method initializes j text field
this method initializes txt password
this method initializes btn login
this method initializes this
this method initializes
this method initializes
this method initializes j
this method initializes this
this method initializes j
this method initializes jb start
this method initializes jb stop
this method initializes j
this method initializes j content pane
this method initializes j stock
this method initializes j
this method initializes j
this method initializes j
this method initializes
this method initializes
this method initializes j
this method initializes j menu item
this method initializes j menu item
this method initializes j menu item consulta
this method initializes j menu item
this method initializes j menu
this method initializes j menu item
this method initializes j menu item
this method initializes j menu
this method initializes j menu item
this method initializes this
this method initializes j
this method initializes j
this method initializes j menu item
this method initializes j menu item
this method initializes j jmenu bar
this method initializes j
this method initializes j cancelar
this method initializes j
this method initializes j combo box
this method initializes j combo box1
this method initializes this
this method initializes j
this method initializes j
this method initializes j text field
this method initializes j
this method initializes
this method initializes
this method initializes j
this method initializes j cancelar
this method initializes j text field1
this method initializes j stock
at startup create and show the main frame of the application
returns the content of the xml content
returns the number of children of this node
sets the name of the element
sets the value
returns the explorer view
adds an error to the
returns the file model
returns the
returns the model
gets the value of the property
adds a new frame to the list of
sets the
sets the standalone flag
test the plugin
adds a new info to the panel
adds a new thread to the job list
adds a process to the current process
adds a file to the buffer
returns the copy buffer of the current move
returns the current directory
returns the current select buffer
returns the buffer
confirm the dialog
sets the current directory
sets the launcher
this method is called by the thread to run the processing of
adds a process to the list of
returns the current frame
this method is called by the process when the user presses
returns the size of the desktop
returns the main frame
returns a new child with the specified name
this method is called when the user selects a dialog box
returns the input stream for the given input stream
returns the local file
returns the magic number of the magic
returns an output stream for the given output stream
returns the parent
sets the parent of this node
returns a new with the specified name
returns an input stream for the given input stream
returns the file local file local file
returns the magic number of the magic
returns the path to the
returns an output stream for the specified output stream
returns the path to the
returns true if this is a directory
returns true if the file is valid
sets the launcher
sets the parent of this object
add a number of to the list of
remove the ftp bean from the current
add the given
adds a shortcut menu to the given menu
get a child with the specified name
get the list of the correct
returns the local file local file
adds a listener to the viewer
clears the list of all the windows
returns the magic number of the magic
applies the given zoom to the current zoom factor
returns the name of the launcher
returns the size of the image
returns an output stream for the given output stream
returns the image view
returns the list of items in the menu
returns the size of the image view
returns the info image
returns the
returns the maximum size of the image
returns the minimum size of the image
returns the preferred size of the image
returns the menu bar
refresh the image
sets the image
sets the image file
sets the zoom factor
returns the toolbar
returns true if the connection is valid
adds a listener to the viewer
applies the given zoom to the current font
display the text in the text area
returns the info file
returns the preferred size of the component
sets the buffer
sets the file to be used for the file
adds a listener to the viewer
applies the given zoom to the current font
sets the buffer of the file
sets the file to be used for the file
this method is called by the
returns true if children of this type is a shortcut
returns the child at the specified index
returns the number of children of this shortcut
returns the index of the shortcut node in the
sets the parent of this node
returns the shortcut shortcut
returns true if the shortcut is a shortcut
sets the shortcut
compares this object against the specified object
gets the
returns a string representation of this object
returns a hash code for this object
sets the file
adds a child to this element
returns an enumeration of all the children
returns the children of this node as an enumeration
returns true if the children of this node is allowed to be
returns the child at the specified index
returns the child at the specified index
returns the number of children of this node
returns the number of children
removes the specified internal frame from the list of
returns the index of code node code in the receiver
returns the index of code node code in the receivers children
returns the parent of the tree
returns the parent of the tree
returns true if this node is a leaf
makes the node
make the node
sets the done
returns a string representation of the object
the
returns a string representation of the object
returns true if the receiver allows children
returns the child at the specified index
returns the number of children of this node
returns the ftp server
returns the index of the node in the tree
returns true if the component is a leaf
sets the ftp
sets the object
invoked when an action occurs
sets the to be used for the
sets the frame for the
this method is called when the user selects the
sets the of the table
run the action
sets the parameters for the
sets the object
returns the disk
returns the jad file
recursively add all the directories to the directory
returns the disk
returns the viewer
adds a message to the current text area
initializes the view
run the
make the given type
returns the current directory
handle the user clicking on the button
returns the root of the tree
recursively searches for the directory and recursively recursively recursively recursively
returns the root of the tree
returns the ftp host
initializes the
initializes the
returns the root of the tree
returns the shortcut container
mouse click handler
sets the container node
start the stop search
sets the ftp root
sets the root of the explorer
this method is called when the user selects the
invoked when an action occurs
this method is called by the properties to set the properties
invoked when an action occurs
sets the file list
adds a new entry to the registry
returns the working registry
sets the frame
sets the
returns the quality quality of the jpeg image
adds a shortcut to the shortcut
this method returns the
returns the number of children
sets the file to be used for
returns shortcut shortcut
returns true if the is
returns the shortcut at the specified index
returns the shortcut index of the title
returns true if the images shown in the table should be shown
returns true if preview preview images are shown
sets the shortcuts
returns true if the drag drop is dropped
auto generated getter method
returns the value of the use resume property
returns the zoom factor
sets the quality of jpeg images
compares two objects
compares two objects
returns true if the given object is equal to this one
compares two
compares two objects
sets the language
compare two
get the image for the given file name
returns the image for the given image
sets the flag
sets whether the images should be shown in the table
sets the preview preview shown
returns the at the specified index
sets the use drag and drop support
sets the use magic number
sets whether the user wants to resume the resume
sets the zoom factor
adds a new entry to the file loader
gets the value of the show in disk list property
add a ftp request to the list
returns true if passive mode is passive
returns the number of children
sets the host
returns the ftp ftp server
sets the password
returns the ftp server at the specified index
sets the port
returns the index of the ftp title
sets the value of show in disk list
sets whether passive mode is passive
sets the
sets the user
accepts directories and directories for a file
accepts directories and directories
accepts all directories and subdirectories and returns true if the
accepts all directories and subdirectories and returns true
returns true if the given pathname is a pathname
adds a filter to the list of filters
returns true if the file is accepted by the filter
returns true if the file is accepted by the filter
accepts external directories
checks if a given regular expression matches
returns true if the given file is accepted by the filter
removes all the filters
checks if a given regular expression is contained in this
p checks if a given regular expression ends
checks if the given regular expression matches the given regular expression
sets whether the search should be searched for search
sets whether or not the case sensitive is used to use case
sets the port of the port
sets the timeout for the specified timeout
returns the socket timeout
returns the server name
returns the user name
returns the reply
returns the message
returns true if the passive mode is passive
adds a property change listener to the listener
removes a property change listener from the listener list
sets the reply
sets the reply message
sets the server name
sets the user name
change the separator to be used for the given separator
checks if the given string is a valid address
release resources held by this object
adds a property change listener to the list of objects
returns the context strategy used to render the object
returns the icon for the given cell
returns true if the cell at row and column is editable
creates and returns a new
creates a new rule pane
creates a new rule pane that will be used to create a
updates the dependent styles
generate a new
sets up the fixture for example open a network connection
tests the basic style of the dependency
factory method for instantiating the renderer renderer
this method is called by the digester to create the configuration
sets the draw parameters
returns the thickness of the edge
creates the strategies for the given code code
returns the thickness of the edge at the specified edge
returns the thickness of the edge at the specified position
creates the strategies for the given code code
creates a new instance of the strategies
creates and returns a new
creates and returns a new
returns true if the given query passes the query
returns the description of the concept
returns the connection object associated with the given figure
sets up the fixture for example open a network connection
test the accept strategy
calculates the radius of the given query
calculates the radius of the node
sets the expected number of visits
verifies the counter
creates a menu with the given key
creates the menu bar
adds a menu to a menu
adds the given menu bar to the menu bar
adds a toolbar to the toolbar
sets the separator
invoked when the user has changed its content
returns the action chain
returns a string representation of the object
returns a relation between the two positions
returns the relation
returns the number of relations in the relation
returns a string representation of the object
returns a string representation of the object
returns a relation between the two nodes
returns a string containing the number of the
calculates the size of the vector of the given
calculates the y coordinate of the first point of the given
creates the relations relation
returns the number of elements in the specified array
returns a string representation of the object
returns a new relation with the given relation
adds a relation to the sequence
returns the relation sequence of the given sequence
returns the number of sequences in the sequence
adds a new experiment
returns the element at the specified index
returns the number of experiments
creates a new collection of concepts
this method is called when the component is loaded
this method is called when the setup is setup
returns the model of the current model
returns the value of the model
returns the button
adds a parameter to the table
adds a parameter to the table
checks if the value is in the minimum value
sets the resolution
sets the value of the property
returns the value of the tick
sets the value of the attribute
sets the value of the property
sets the property change property change
returns the veto support property change
sets the veto property change
logs the exception thrown by the given exception
calculates the attribute description
print the results of the given class
finds the closure of the given object and returns the
sets the value of the code code property
calculates the zero for the current extent
called after the experiment has finished
calculates the arrow arrow for the given arrow
calc up arrow arrow
calculates the of the current page
initializes the
finds the of the given object and returns the
this method is called when the search level depth is found
returns the concept collection
this method is used to set the given attributes
finds the lattice element from the given set of
finds the next edge in the graph
returns true if the next edge has been found
returns the next edge in the adjacency list
returns true if the iterator has another
initializes the specified depth and a child of the given
initializes the given element in the sequence
sets the edge distance between the two nodes
returns the next element in the iteration
returns the force in the given element
sets the parameters used to generate the force body
the edges of the graph
returns the k k k
returns the value of the given element as a
sets the lattice
sets the of the project
tests the
calculates the projected coordinates of the current
calculates the of the lattice
this method is called when the local init method is called
creates and returns a concept info
tests the correct linear strategy
performs the layout of the current layout
creates a new structure with the current position
creates a new concept info object
calculates the number of elements in the vector
this method is called when the local is created
assigns the current position to the lattice
calculates the number of elements in the vector
returns a collection of the high of the concept
returns true if the job is done
returns the information for the local concept information
returns a collection of the low of the
returns a concept info
tests the correct method
resets the to its original value
tests this object for equality with an arbitrary object
returns the size of the vector
calculates the force factors for the
forces the to force forces to force the space
this method is called when the local is running
performs the setup of the graph
returns the force distribution
returns true if the current thread is done
updates the concepts of the
compute the relation between the relation and the current
returns the number of entities in the database
returns the number of in the
checks if the given entity is
sets the context
returns a string representation of this object
calculates the of the
calculates the of the
tests that the
returns the of the empirical distribution
returns the relation between the relation and the relation
returns the set of elements of the given type
returns the number of entities in the current
checks if the given entity is
calculates the of the given
creates a new layouter object
creates a new strategy
calculates the of the given
returns true if the number of times the iteration has completed
tests the chain of
returns true if the element contains a specific lattice element
returns the concept info for the given index
tests this edge for equality with an arbitrary object
performs the layout of the layout
returns true if the current object is valid
returns a string representation of this object
sets the concept set
tear down the test
assigns the lattice and coordinates to the new one
returns true if the current state is done
returns a clone of this object
returns a string representation of the object
applies the logical and
this method is used to bitwise and and and at least one
set the set of all the
sets the set of distinct values
tests the append functionality
tests the append functionality
test the creation of a new value
test the creation of a new argument with another one
returns the number of elements in the current state
test the first of the first in the list
test the first of the first in the set
returns the hash code for this object
returns code true code if the receiver is in the specified index
test the output of a
returns the length of the current value
test the resize method
test method for
test the output of a
puts the specified value at the specified position in this list
removes the specified value from the receiver specified by the specified index
sets the relation
finds the minimal with the specified parameters
sets the relation
resizes the given size to the specified size
returns true if the given set of other is a subset
adds a feature to the own attribute of the object
adds a new instance of the given type to the list
returns a new object that represents the same type of the object
compares this object against the specified object
returns code true code if the receiver is a
print the differences for the given code
dump the contents of the given writer into the output stream
returns true if the object is valid
returns the upper bound of the interval
internal method to update the number of attributes
method increment count
returns an iterator over the attributes of this class
returns an iterator over the objects in this list
returns a string representation of this object
sets the context
finds the for the given
finds the dependencies of a decision
creates the test case
tests the
test the confidence
test method for
tests the premise of the premise
compares this lattice element with another one
returns true if this set is a subset of other
fires a relation changed event to all listeners
tests the intersection of the lattice
sets the number of expected values
find the with the given set of intent
returns the height of the image
test method for
returns a new concept object that is a concept of the given
tests the addition of a figure
counts the number of edges in the graph
this method is called when the user selects a update
resets the filter
verifies that the actual code code object is valid
checks if the current state is valid
creates the environment
sets the permissions
load the binary binary
move the given point to the current position
sets the current position of the turtle to the given number of
make the cursor blinking time
sets the delay between the cursor in the specified delay
invoked when the user selects a change in the text area
advances the current animation
resets the animation to the current animation
start the mode
ends the current mode
finish the animation
returns true if the current animation has finished
opens a new dialog
this method is called by the scanner
interprets the script file
a string
parse the line
this method is called by the
creates a string from a file
returns the word in the tree
returns the expression of a given expression
handle the
returns the number of in the given tree
initializes the effect
returns true if any of the given object contains the given
returns the stub for the given target
returns the local partner
returns the item in the given item
returns the identifier for the specified item
adds a new code code to the list of schemas
returns the namespace of the namespace uri
creates a new binding for the given string
creates a message from the given string
creates the service
returns the qname of the given qname
starts the server
stops the embedded service
returns the configuration
returns the scanner scanner
returns the crypto provider
returns the alias for a given endpoint
saves the rule to the given url
returns the resolver associated with the given id
returns an xml representation of the xml content
returns a string representation of the event recordable
process the result of the given command
returns the character value for the specified character
this method is called by the
convert the given byte array into a string
decode the crc 16 bits of a crc
registers the
this method is called when the is removed
initializes the reader
update the poll frequency
updates the reader
stops the server
reads the data from the stream
close the serial port
creates a string from the given url
creates a new context
returns the index of the next unused
clears the context
notify the listeners that the user has changed
creates a property element
returns a new element with the given id
clean up the object
returns the object for the given item
initialize the service
initialize the item
initializes the item
load the config from the configuration
this method is overridden by subclasses to add interfaces to the
this method will be subclassed to all superclasses of the class
load the given class
save an object to the database
saves the model
returns the query query string
returns a schema object representing the current schema
sets the catalog index
returns the index of the catalog
returns true if the is in the query
gets the value of the response query property
returns the name of the type of the schema
returns the documentation for the given code locale code
returns the short name of the given locale
gets the description of the given type
returns the action
gets the message
gets the value of the partner property
gets the value of the slot name property
returns a soap envelope
returns the body of the message
returns the item identifier associated with this item
returns the catalog name
sets the property
returns the value of the property
sets the index
returns the index of the
returns the connection to the database
returns true if the embedded object is embedded in the
returns true if the given property contains a specific property
returns the value of the right of the list of rights
returns the driver name
load the internal database
creates a new event
called after the document is inserted before the
called after the document has been finished
called after the data is done
start the element before the beginning of the element
called after the start of the element has started
called after the end of the element is inserted
called after the end of the element is ended
called after the document has ended
returns the default locale for the user
returns the configuration
returns a short description of the servlet
adds a new user to the database
generate a string for the given password
returns the friendly name of the given partner
creates a list of the options
returns the identifier for the given uri
returns the link to the given item
creates the
cancel the current thread
adds a widget to the table
sets the vertical alignment of the cell
sets the horizontal alignment
flush the buffer
returns the selected date
sets the selected date
start the login box
reloads the page
reloads the page
displays the password field
updates the poll frequency
method used to set the keystore password
resolve a endpoint
returns the store
this method is used to provide a new
returns the configuration
returns the endpoint of this endpoint
creates the empty
creates the empty keystore
load the specified file from the given file
load the given input stream from the given input stream
saves the given file to the given file
saves the current to the specified output stream
generate a key pair pair using the given algorithm
returns a x509 certificate with the given name
returns the certificate for the given password
this method is used to parse the certificate
returns the certificate with the given alias
returns the private key for the given key and password
sets the certificate for the certificate
load the xml file
find the first file in the language
returns the value for the specified key
returns the value for the specified key
returns the value of the specified key
returns the payload of the payload
creates the description of the field
helper method to escape the field in the given field
a string
check the table with the given table name
creates the tables
closes the result set
close the statement
close the connection
creates a service
this method is called when the service is initialized
destroy the service
validate the array for location sequence
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
whenever a new property is set ensure all others are unset
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
creates a new query from the database
creates a new query object for the given code code
creates a new query instance for the given taxonomy
creates an instance of a simple documentation
creates a new query instance for the given name
parse a response description
parses an xml document
parses a response name
creates an instance of a simple description of the given type
creates an instance of a code code object from the xml
creates an instance of a simple name for a schema
shows an error message
this method is called when the user selects a new
resolve the
ensures that the given gate is a resolve gate
dispose of frames
this method is called when the user selects the
sets the
enables or disables the
updates the look and feel
creates a new empty empty
this method is called when the user selects the client
this method is called when the user selects the selected tab
initializes the partner settings
adds a panel to the panel
this method is called when the exit is done
opens the file specified by the specified file
load the file chooser dialog
saves the current file
save the current directory
saves the current file to the file
centers the window on the screen
shows the dialog
applies the apply button to the panel
revert the current panel to the previous button
shows an error message
shows an error message
selects the tree panel
sets the caret position
closes the current frames
adds the to the
reloads the keystore
this method is called when the user has chosen to the user
saves the current page
this method is called when the user selects the user
opens the given file
called when the user finishes the connection
load the document from a file
saves the file to a file
creates a new
shows an error dialog
shows the dialog
sets the list of messages to be displayed
sets the message type
sets the level of the selected tab
sets the list of uddi objects
sets the partners partners
called by the dialog when the dialog is done
called when the user selects the ok button
cancel the cancel button
shows the dialog
shows an error dialog
shows an error dialog
edit the current row
initializes the panel
shows an error message
shows an error dialog with the given message
called when the panel is changed
returns the current configuration
generate for the
this method will generate the certificate
select the file chooser for the user interface
process the security request
checks if the given string is empty or null
saves the to the given
adds the given option to the list of options
removes the specified indices from the list
move the index up one
move the index to the index
sets the object at the specified index
removes the specified indices from the table
add the current context to the current page
removes the selected object from the list
performs the actual tests
this method is called when the user selects the selected
selects the selected tab
sets the selected
toggles the check box
checks if the value is empty
sets the partner text
sets the editable property
sets the distinguished name dn
load the fields from the database
shows the dialog
sets the label of the user
add a partner to the list
edits the partner
adds a string to the end of the list
removes the specified indices from the list
select the panel
applies the gui components to the panel
applies the dialog to the given panel
applies the content of the given event to the
fills the fields of the given
fill the gui panel
fills the panel with the
fill the with the given event
processes the given request
import a certificate file
this method is called when the user selects the ok button
populates the partners partner frame
sets the certificate state of the partner
clear the communicator
clears the security
shows the dialog
shows a modal dialog box
clears the password
returns true if the text field is empty
process a runnable
open dialog
closes the dialog
shows the dialog
this method is called when the panel is changed
loads the from the given file
process config file config
process the for the given interfaces
saves the configuration to the given file
inserts a new interface
adds a new interface to the list of known classes
sets the alias for the attribute
sets the clazz attribute of the object
sets the reference
sets the config
load the from a resource
saves the configuration
clean up the object
returns the item that is currently being used in the given item
initialize the service
initialize the item
this method is overridden by subclasses to add interfaces to the
this method is called by the service
sets the context service for the context
finish the wizard
returns an element from the xml configuration
destroy the service
creates the tables
initializes the configuration
destroy the service
returns the value for the specified alias
initialize the xmldata for the given configuration
load the given class
auto generated getter method
auto generated setter method
auto generated setter method
test the do stuff
test for method get cascade
test that duplicate of the are
test that ensures that a object is in memory
test method for
sets up the value of the object
set the exception to be thrown
add a mock method to the mock method
prints the current object to the system
prints the mock method to the system
replaces the execution of the mock object with the given
replace the invocation with the given invocation
resets the mock object to its initial state
returns the method for the invocation
replace the object with the given invocation
test the do stuff
test for method get cascade
test that ensures that a object is in memory
check the class exists in the given class
puts the in the
returns the current value
returns the long value
returns the long value of the given
returns the of the
returns the of the
sets the value of the given code code
sets the value
returns the value of the code code property
returns the value of the specified position in the specified position
sets the value of the specified
opens the file system
reads a byte from the input stream
closes the stream
p automatically managed component initialization
p return a reference to the scoped data bean
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p return a reference to the scoped data bean
p return a reference to the scoped data object
p return a reference to the scoped data bean
p return a reference to the scoped data object
p return a reference to the scoped data bean
p return a reference to the scoped data bean
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
p automatically managed component initialization
cleans up the editor ui
returns a sound object from the sound file
returns a sound object from the sound stream
returns a sound from the sound stream
returns an audio input stream for the given audio file
sets the last updated time
gets the value of the property
sets the
theres no need for two creates because we dont need
gets the value of the product property
sets the product id
creates a new customer
saves the customer
sets the
gets the value of the property
theres no need for two creates because we dont need
saves the payment object to the database
sets the id of the product
saves the inventory of the given sale
gets the value of the transaction line type property
deletes the message from the database
sets the category id
sets the
this method creates a new instance of the object
sets the map of the map
gets the value of the property
saves the database to the database
sets the
sets the average cost
creates a new revenue source object
gets the
renews the backup
saves the conversion
sets the
sets the date the value should be used to build the
saves the product to a database
saves the to the database
sets the print format
returns the photo set
sets the
gets the value of the property
sets the
sets the
gets the value of the property
sets the
theres no need for two creates because we dont need
gets the value of the property
sets the
deletes the message from the database
theres no need for two creates because we dont need
theres no need for two creates because we dont need
theres no need for two creates because we dont need
saves the photo set to the database
saves the store to the database
gets the value of the property
theres no need for two creates creates creates a new business object
creates a new physical product object
sets the
commit the
sets the
theres no need for two creates because we dont need
saves the physical product to the database
sets the
creates a new guid
this method is used to save the
gets the value of the property
sets the
theres no need for two creates because we dont need
gets the value of the is printed picture property
sets the is printed picture
sets the file name
returns the file extension
sets the file extension
sets the phone number
sets the actual file
saves the discount bo
returns the file size
sets the size of the file
gets the value of the property
sets the deleted state of the document
gets the value of the property
sets the
saves the database to the database
theres no need for two creates because we dont need
sets the print type
gets the discount
sets the photo type
sets the password
sets the discount
gets the value of the property
sets the date of the date
sets the
theres no need for two creates because we dont need
sets the store
create a new service
saves the database to the database
sets the customer
sets the number of the
saves the to the database
gets the value of the property
sets the
saves the service type service to the database
gets the value of the property
gets the value of the property
gets the value of the property
sets the
gets the value of the property
sets the
commit the transaction
returns true if the user is online
gets the value of the property
sets the
sets the value of the for rent
gets the value of the property
sets the
sets the last name
sets the price of the product
sets the transaction line list
returns the
sets the
sets the membership
calculates the subtotal for the given transaction
process the request and request
process the request and return the response
process the request and return the response
calculates the total of the total amount of the tax
returns true if the transaction is currently being accessed
sets the transaction
gets the value of the property
gets the value of the property
returns the transaction template for the given userid
returns the exit status
returns the isolated flag
returns true if the system is currently running system
sets the isolated flag
sets the method
update the
update the
adds a new phone to the list of
login to the user

delete the phone
sets the
deletes the address
checks if the bill is paid
salva
returns the position of the child element at the specified index
returns the of the given vector v
returns the product of this vector as a product of this vector
returns the norm of the vector
returns a normalized vector of normalization
returns a new vector of
returns the subtraction of this vector v v v
returns the of the
returns the coordinates of the current polygon
returns the identity of the identity
multiply this matrix by a
returns the for the given column
set the value of the given
returns the point at the given x and y coordinates
set the value of the element
returns the v
translate y coordinates to y
returns the vector
sets the matrix
sets the value of the ith element
returns the value at the specified index
returns a deep copy of the current copy
copy the transpose of the transpose of this matrix
returns the of the given v
returns the product of this vector as a product of this vector
multiply this matrix by a given number of rows
returns the result of the union of the result set
returns the square of the square of the square
returns the result of the multiplication of this matrix
returns a normalized version of this object
returns the result of this matrix
returns the distance between this point and the specified
returns the subtraction of this matrix by a sub class
returns the coordinates of the
returns the inverse of this inverse transform
returns the coordinates of the
solves the
print the
compares the given double precision value against the given precision
returns a line plane for the given plane
multiply this matrix by a given amount
adds a matrix to the matrix
returns the multiplication of this matrix by a given
draw the sprite at the given location
draws the polyline
sets the current state of the
sets the current state of the
sets the draw
returns the number of points in the lod point
this method is used to draw the line at the specified position
this method is invoked when the surface is added
returns the number of in the given area
this method is invoked when the user is connected to the game
adds a geo element to the graph
this method is invoked when the user is connected to the game
adds a drawable object to the list
draw the image
draw all of the picking objects in the sphere
draw the hidden neighbor
draw the highlighting
draw the label of the given renderer
draw surfaces of drawables drawables
removes a drawable from the list
sets the material color
returns the current plane
sets the current plane
returns the element at the specified index
this method is called when the user selects the update
returns the matrix
returns the label matrix for this element
creates a new point intersection object
returns true if the component is visible
creates a new geo point
draw the given renderer for picking the current renderer
sets the thickness of the line
creates a new geo point with the given path
draw the label of the given draw
creates a new geo point with the given coordinates
returns the geo element
sets the geo element
process mouse moved event
process the right press action
returns the pick picked by dx dy
handle the right drag operation
this method is called when the is released
returns the pick point at the specified coordinates
sets the coordinate from points
sets the coordinate of the given coordinate
sets the coordinate of the given geo coordinate
returns the point at the given lambda
sets the layer at the given position
point3 d
sets the matrix drawing matrix to the given value

returns the drawing matrix
point3 d with cartesian coordinates x y z coordinates
point3 d
returns the drawing matrix
returns the matrix of scene coordinates
returns the label matrix for this matrix
sets the drawing matrix

sets the label matrix
returns the matrix

initializes the matrix
returns true if this is pickable
returns the rotation matrix
sets the coordinate system
returns true if this object is pickable
sets the alpha value for the alpha value
initializes the matrix
returns the xml representation of the object
returns the of the
resets the modelview matrix
sets the dash of the line
remove a geo element
draw the segment
sets the coords of the given region
update the coords of the
set the coordinate system from the current position
sets the grid coordinates in the grid
returns true if the grid has any grid
draw a quad at the given coordinates
sets the points of the polygon
creates polygon polygon
creates polygon and polygon
creates the coordinate system
returns the coordinate system coordinates
draw the sphere
sets the value of the m system property
sets the coord system
draws the given point in the matrix
returns the number of
returns true if the coord sys is made
add a point to the coordinates
returns the
returns true if the part of the surface is closed
returns the length of the unit
creates and returns a copy of this object
sets the geo element
returns a string representation of this object
starts the polygon
compute the plane line plane

sets the coordinates of the line line
sets the coordinate of the given coordinate
sets the coordinate of the given geo point to the given coordinates
returns the point at the given point
returns the unit of the unit in the unit
convert the given to a screen
update the update
adds a polygon to the polygon
update the
returns the euclidian view
ends the polygon
this method is called after the polygon has finished
draw a circle on the plane
draw a circle arc elliptical
draw circle arc p1
set the mouse location for picking picking
draw the path
centers the view on the given coordinates
adds a dictionary dictionary to the dictionary
writes out the current entry
processes all the steps
adds the patterns to the list of patterns
returns the dictionary entry
writes the dash of the current font
writes the exception to the given exception
returns the font reference for the given font and
reads all the data from the database
the
adds a glyph to the font
returns the font for the given font
associates the specified value with the specified key in this map
removes the key and its corresponding value from the hashtable
returns the angle between the given angle and the specified angle
removes the specified angle from this
returns the tag with the given id
returns the action for the given action code
reads a 32 bit signed 32 bit integer from the input stream
sets the bounding box
writes an integer
sets the value of the boolean value
sets the value of this value to the value
sets the value of the given value
sets the value of the date type
sets the value of the specified value
sets the value of the float value
sets the value of the type
sets the value of the long value
sets the value of the given object
sets the value of the short value
sets the value
this method is called by the
declares a predicate
declare a rule that is a rule in the rule
declare a predicate
returns the number value of the specified number
returns the extra information of the extra info
sets the extra information for the given extra
returns true if the value is a integer
mod a number of integers
dump the debug information
sets the
sets the
sets the
sets the
add a field to the constant pool
add a field to the constant pool
add a field to the constant pool
sets the
sets the
sets the
sets the
sets the
adds a load
returns true if the constant pool is a constant
sets the
wraps the given object and returns the object
add a new value to the stack
returns the id of the given class
returns the id of the given instance
add a new constant pool entry
returns the instance id value for the given id
adds a new push to the stack
sets the id value for the given id
returns the script stack trace
writes the contents of the given stream to the output stream
returns the message for the specified locale
returns the next int value from the array
returns a random integer between two numbers
returns the next pseudorandom uniformly distributed uniformly 9
returns the next secure secure interval
returns the next secure time in ms
returns the next pseudorandom gaussian
returns the next value in the distribution
returns the next
load the data from the given array
load the data from a file
returns the adapter for a specific data
returns the next digest value
returns the next replay of the replay file
sets the seed of the
sets the seed of this seed to the given seed
sets the whole format
sets the whole format of the whole format
returns the additive inverse of this fraction
sets the denominator format
sets the numerator format
rescale the
sets the current state of the
shifts the current element
sets the time to the specified time
rescale the
estimate the error estimate of the error
resets internal state to the initial state
returns the end of the path
sets the starter
calculates the step height of the given
returns the time in seconds
returns true if the output involves dense of the complex
sets the window size
increments the number of values in the list
checks if the empty list is empty
check if the empty list is empty
sets the value of the quantile
returns the determinant of the
returns the covariance matrix of the
returns the correlation value for the given x y coordinates
returns the covariance of the covariance matrix
checks the of the matrix
adds a data to the end of the map
sets the y coordinate of the y coordinate
sets the x coordinate of the x coordinate
removes the data from the given coordinates
validates the data in the xy plane
validates the covariance data
returns the sum of squared deviations of the sum of the
checks the array of int values
returns the
checks the given array of
checks the given positive number of positive values
returns the intercept standard error
checks if the given code long code is negative
checks if the given code int code is allowed in the
returns the significance of the slope
adds a value to the table
sets the distribution
adds a value to the list
parses a string to produce a
sets the imaginary character
sets the imaginary part of the imaginary part
calculates the energy for the given
sets the real format
update the
update the
adds a real matrix to the current vector
translate the matrix into a real matrix
compute the key of the given row and column
sets the distribution
compute the of the y coordinate
parses a string
checks the row index
check if the index of the given matrix is valid
checks whether the given code code is compatible with the
checks whether the given matrix is compatible with the same dimension
checks whether the given column is compatible with the same dimension
checks if the value is zero
sets the value of epsilon
optimized method to add a real real vector to this
checks the index of the given index
checks the given dimension
returns true if the matrix is symmetric
returns the distance between the and the given map
the
returns the of the given real
returns the determinant of this matrix
calculates the of the map
the block at the given index
this method will check if the given step is flipped and pause
counts the number of values
checks if the objective is
returns true if the objective function is optimal
the
returns the number of variables in this tileset
initializes the variables
returns the basic row of the given column
discards the variables
update the
returns the sum of squared deviations of the y axis
sets solver to search
compute the of the y axis
returns the value of the function
compute the coefficients of the polynomial
returns the result of the current result
returns the value for the specified key
returns true if the map contains the specified key
removes the specified key from this map
sets the expansion mode
sets the initial capacity
returns the value for the specified key
returns the first solution that is used for the given population
returns the next generation algorithm
removes the specified key from the current map
creates a new instance of population
creates a new instance of population
returns the message for the specified locale
sets the shape
sets the scale
sets the alpha value for this
sets the value of the beta parameter
returns the probability density of the given code double code
sets the numerator degrees of freedom
modify the denominator degrees of freedom
this method returns the probability of the cumulative probability distribution function
sets the number of successes
sets the population size
sets the degrees of freedom
optimized method to compute the real real matrix
sets the scale
sets the size of the sample
sets the number of trials
returns the probability density of the given code double code
sets the probability of success
sets the gamma distribution
sets the mean of the mixture
sets the standard deviation
this method is called by the distribution
calculates the probability density of the probability distribution
sets the normal
sets the mean of the distribution
returns the probability density of the probability distribution
sets the number of successes
this method is called by the distribution function to
returns the alpha value of this object
returns the delta of the vector
parses a string from the given string
returns the value
returns the y coordinate of the upper left corner of the
returns the infinity norm of the vector
returns the resource url
returns the resource as an input stream
sets the discover resource
returns the discover that the is being scanned
normalize the vector
returns the orthogonal distance to the plane
add a resource name to the collection of
returns the axis of this quaternion
sets the dictionary
returns the angle of the rotation
finds the resource with the given name
finds the resource names matching the specified resource name
finds a resource by its name
finds the resources for a resource
find a resource class
sets the class loaders loader
adds a class loader to the classpath
finds the resource with the given name
returns an iterator for the resource names
finds the resources for a resource
adds a new loader to the classpath
adds a loader to the loader
checks if the given class loader is a ancestor of this class
returns the system property
returns the class loader class loader
returns the loader class loader
load the class loader
compute the of the
returns the intersection of the given conic
sets the coordinate system to be used as the coord sys sys
sets the points of the polygon
sets the points of the polygon
removes a segment from the list of
creates a segment and adds it to the start point
sets the segments of the segment
the of the two points
distance between two points
evaluates a string
this function is called by the kernel to all the functions
sets the value of the given angle
checks whether the position of the parent is changeable
sets the region changed geo point in the geo point
returns true if the number of contains the same
initialize the start point
returns true if there are redo possible
returns the
compares the label to the given string
returns the sql string to be used for the
registers a new
adds the algorithm to the set of the algorithm updates
returns true if the given step is available
compares this object with the specified object for order
returns the
returns the
translate the vector by a given vector v
initialize the point with the given point
sets the geo circle to lie between the given geo element
applies the to the
sets the file name of the image file
returns the sql fragment for this component
returns the maximum parameter value for this
returns the minimum value for the
evaluates the curve
evaluates the given boolean value
initialize the conic
initialize the
returns the maximum parameter value
returns the minimum value of the parameter
returns all children of this node
affirms if the expression is allowed to branch division
returns the set of default names
returns the element with the specified type
replace the values of the given geo element
creates polygon and polygon
sets the of the curve
checks if a given function is a polynomial
returns all the predecessors of the predecessors of the node
sets the start interval
replace the values of the given geo element
sets the of this function
sets the expanded state of this node
sets the integral of this function
translate the vector by a given vector
translate the vector by a given vector3 d
returns the
adds a random number to the random number
returns the list of the
builds the construction of the given buffer
returns the element at the specified index
clears the construction of the construction
compares this object with the specified object for order
returns true if this is possible to be possible
returns all the predecessors of the block
returns the input points
returns the construction element at the specified index
returns true if the given point is in the plane
returns the xml representation of the object
returns the
returns the
returns true if this conic is possible
initializes the undo info
returns the free input points
returns the free label for the given suggested label
mirror the covariance of the mixture
puts the geo geo in the label
registers the given geo element as a geo element
a geo element from the given geo point
removes the given geo element from the list of geo geo
returns the string that contains the data needed to write the macro
removes a random number from the random number
sets the step
sets the circle
sets the expression
sets the circle
returns true if the constant is constant
evaluates the given value
update all numbers of the random number of random numbers
update the construction of the current state
returns the long description of the
returns true if this is a implicit
returns the derivative of this function
resolves the current kernel
returns the integral of this expression
returns the name of the variable in the given variable
returns the expanded value of this expression
sets the of the polygon
returns true if the term contains only constant
returns a copy of this node with the given
applies the operation to the given value
applies the operation to the given value
returns the matrix cols
returns the number of rows in the matrix
sets the point of the given geo point
translate the given vector v by a given vector v
replaces the old value with the old value
returns the label for the spreadsheet specified in the spreadsheet
angle of angle with angle between the given geo label and angle
parses the
angle of vector of
angle of angle between the given geo label and angle
returns true if the given point is in the current position
add geo geos to the polygon
returns the hits for the given hits
returns the hits for the given hits
returns the point of the that is closest to this point
returns the hits
deletes all points from the polygon
returns the of the given
returns the of the
parses a expression
x y z u x y z u x y z
returns true if the label contains label index
y y y z u y y y y y y y
returns the equation of this equation
parses the ll
build the path to the
transforms the given code transform code to the code transform code
returns the bounds of this drawable
returns true if the given geo element is a child of this
checks the value of the given x y value
adds a geo element to the list
returns true if the euclidian view is visible
conic circle with midpoint
circle point with the given label and the circle
circle circle point
returns the numeric column
step the construction
writes the specified object to the graphics2 d object
step the algorithm
creates new point to the given point
creates a new point intersection
covariance list
returns true if the label is a geo element
returns a boolean value indicating whether or not the given geo element
see if the given label is a dependent node
checks whether the given geo element is a geo element
function dependent function of the function
returns the moved geo point
returns the hits for the given geo polygon
adds a label to the set of dependent nodes
of the vector with the dependent expressions
derivative of c h of this function
determinant of list
returns the line of the line
distance between the label and the distance
distance of the distance from the label
distance of points
conic the ellipse with the given point
removes the algorithm from the set of the elements that are contained

evaluate the given math expression
c c
expands the given function with the given label
rotate func density
returns true if the background image has the background image
returns true if the list is tracing
format the
convert a string to a string
convert a string to a string
sets the value of the loaded label
returns the string representation of the value
returns the string representation of the value
updates the label of the component
returns the
set the coordinate system from the given coordinates
returns the expression node evaluator
flushes the output stream
sets the style of the style
returns a string containing the macros for the given macros
throws an exception if the implementation is not supported
sets the color of the
convert the coordinate space to a screen coordinate
convert y coordinate to clipped y coordinate
turns the screen coordinates into a screen coordinates
convert the coordinate space to a screen coordinate
convert the coordinate space to a screen coordinate
integral of c
intersect the line with the specified line
writes the given point to the current location
invert the of the polygon
returns the expression for the given expression
the string to the given string
evaluate the given math expression
returns the error message for the response
returns the preferred height of a row
inserts a new row into the table
insert a new row in the table
handle the command event
sets the command
process a
returns the value of the specified row
returns the default file path
returns the default image path
dispatches the event to the keyboard
returns the default locale
sets the default application
load the file list
this method is called when the user selects the file
saves the default image path to the specified path
saves the default locale
save the current file list
saves the configuration of the user
handles the action event
compares this quaternion with the given coordinates
sets the labels label
adds a string to the history
parse a function
invoked when an action occurs
adds a perspective to the perspective
initializes the application
removes the perspective from the given index
shows the save dialog
invoked when an action occurs
closes the panel
removes the frame from the frame
this method is called when the panel is opened
parse the label and parse it as a string
updates the tool tip text view
updates the panel and updates the panel
updates the title of the window
updates the title bar
displays the window
download the jar file
sets the labels of all dock panels
invoked when the user drags the dock panel
disables the
mouse event handler for mouse events
counts the number of characters in the specified character
returns the layout
parses a expression
parses a bracket
returns the default toolbar
apply the language to the language
applies the current state of this object to the
called when the user selects the gui
returns the code base url code of the code code
returns true if the x coordinate is zero
handles the action event
updates the menubar
updates the menu with the new menu
update the of the current unit
updates the menu bar size
update the menu bar
updates the menu coordinates of the current state of the menu
updates the right menu style
attach a view to this view
creates the gui
sets the labels
returns the euclidian view
affiche la
detaches the view from the view
sets the protocol and protocol
invoked when an action occurs
writes the graphic control to the current output
writes the image desc
writes the to the output stream
writes the to the
writes the image to the image
writes a short value
writes a string
returns the of the
the network
this method gets called when a property change event is fired
returns the mode of the current mode
sets the mode of the current selection
line of line
handle the exception
returns true if the event is able to launch the image
peek the next event with the specified event queue
waits until the event is fired
a geo element with the given point
edits a cell at the specified position
handles mouse moved events
handle the select item event
returns a geo element with midpoint
lookup the label for a given label
invoked when an item has been selected
load the image from the given location
invoked when an item has been selected
returns the help tool for the given mode
returns the of the given geo element
median of list
a geo point with midpoint from geo point
handle the select changed event

handle the select item event
the kernel
invoked when an item has been selected or deselected by the user
initializes the translated commands
shows the construction protocol
show the drawing frame
generates a name of the label
shows a dialog with the given location
shows the options dialog
shows dialog for properties
shows geo dialog with the given geo element
advances the current step to the next step
handle the selected geo element
shows dialog for the given x y location
invoked when an action occurs
a convenience method to be used by the decorator
orthogonal line points to the line with midpoint n
orthogonal vector orthogonal to the frustum
updates the layout of the panel
conic the points of conic
a file to be loaded
updates the current step
returns the current step number
the given url
returns the last step number
removes a geo element from the table
sets the label of the node
sets the label of the given node
update the tree
insert a new geo element in the database
handle the select changed event
point to points
saves the macros in the given file
inits gui components
point x y coordinate from the point
handle the select changed event
func func function
sets the size of the font size
func
goes to the previous step
product list
sets the size of the font
applies this action
sets the font style
adds a filetype dot extension to filter against
returns the current extension
handle the selected event
sets the value of ignore document perspective
updates the font
applies the current settings to the panel
closes the dialog
sets the labels menu
shows the tab of the euclidian tab
updates the gui
clears the tree
returns the path to the geo element
returns the tree path for the given geo element
removes a geo element from the list
rename the file with the given name
sets the language
updates the selected geos of the tree
sets the labels to the current language
sets the selected geos
sets the selected mode
sets whether the navigation panel should be shown
updates the list of
sets the title of the panel
updates the toolbar
increases the capacity of the hashtable
puts a value in the hash code
removes the key value pair from this map
removes the key value pair from the table
clears the table
row name of label
clears the map
clones the entry
returns the key
returns the value of the current value
sets the value of the value
compares this entry with another entry
returns the hash code of this object
sets the show title bar visible
returns the next element in the iteration
removes the last object from the iterator
puts the value of the table in the hashtable
handle the select changed event
creates a new dock panel
returns a segment containing points in points
sets the font style
returns a string representation of the macros
returns the xml representation of the file
returns the xml representation of the file
writes the geo to the file
translate a command to a local name
add a jar to the jar file
returns a string that will be downloaded from the download
returns the local jar directory where the application is running
returns true if the classpath is on a jar file
loads the text file in the file
invoked when an action occurs
returns the class path manipulator
evaluate the given string
handle the select item event
simplifies the
updates the tab panel
invoked when an action occurs
handle the given code block pane code
this method is invoked when a new perspective is activated
tangent function with midpoint func
tangent function for function
adds a label to the end of the text
text label function
translate the vector to the translated label
transpose choice list
sets the label of the label
orthogonal vector of unit
orthogonal vector v unit
variance list of list
vector of vector3 d
sets the
unbinds the
returns the symbol vector of the symbol
returns the elements
returns the identity symbol
returns the element with the given name
adds a new to the list of
returns the algebraic object of the symbol table
returns the equations of the equations
add a new element to the set of elements
add a focal element to the end of the symbol table
adds a new equation to this
adds a new equation to the end of the
adds a equation to this algebraic object
adds a equation to this equation
make a
returns the generators that are equal to the given
returns the that is currently being computed
returns the for the given unit
returns the for the given
a term vector
convert a term to a term
adds a term to the grammar
removes a term from the
deletes this object from the database
deletes a specific
returns a info object for the given
generate a new vector
generate a new vector
returns a new vector with the given sex
generate the generator for the given element
returns the current state of the
removes the given from the list of all the
returns the union of the union of the union of the union
returns the difference between the current and the given
returns the intersection of the intersection of the given
returns the terms of the current document
applies the rule to the given path
returns true if the given term is a effective term
this method computes the of the
returns the instructions for this instruction
returns a vector of all in the
resume the current process
returns the with the given symbol

returns the sex of the given term
resets the current state of the
returns the equivalence of the given
returns true if the operator is a union of the
returns true if the receiver is identical to another
compares this object to the specified transfer
adds a component to the container
returns a clone of this object
clones the object
a product
generates the of the
returns the term for the given term
expands all types in the
returns true if the symbol is in the same direction
returns true if the arrow is in the same direction
returns true if the vector contains a product
exp vector multiplication
returns the minimum size of the image
returns the preferred size of the window
compares this symbol with another
initializes the
sets the arrow type
sets the value attribute of the object
returns the value of the symbol
returns the value of the symbol
returns the map with the given key
unbinds the bind bind
returns true if this symbol is a
a term
returns true if the sex is
maps a term to a given term
returns the term for the given term
sets the
returns the
returns the term for a term
sets the
returns the term for the given term
returns true if this is a
returns the number of symbols in this grammar
returns the symbol type
sets the number of
returns the sex of the sex
sets the
returns the algebra for the symbol
clone the symbol
returns the opposite ground rule for this domain
unbinds the
returns the values in the vector
returns the element for the given
returns true if the has a focal of the
returns the identity element
adds a new to the grammar
returns the for the given isotope
returns the for the given symbol
returns the for the given sex
returns true if the given equation is a equation
returns the add equation
adds a equation to the
adds a new equation to the end of the vector
adds a new equation to the end of the vector
adds a equation to the end of the vector
adds a equation to the
creates a new
removes a from the symbol table
at startup create and show the main frame of the application
animates the current frame and recomputes the current
flips the flipped and advance to the next one
renders the component
renders the given object
renders the image on the specified graphics context
move the given point in the current position
update the maximum size of the
returns the minimum x value of this code code
returns the minimum y value
render the sprites
draw the
animates the sprites of the sprites
adds a background layer to the list of layers
adds a new code scrolling code to the view
adds a new tile layer to the tile
adds a sprite to the sprite
renders the image
renders the image
flips the flipped version of this component
change the screen size
move the crane
sets the animation to the specified value
renders the image
sets the animation delay
initializes the dialog
sets the fullscreen mode
returns the java class for the given namespace
executes the command
this method is called by the server side
returns the next worker thread pool
creates a new worker thread
returns the next worker
returns the force
returns the building of the
checks if the given id is a center of the given id
returns the of the
returns the
sets the email
resets the data text vector to the new text
resets the configuration to defaults to the default settings
this method is called when the user selects the
returns the author of the author
returns the title of the window
sets the author of the document
sets the title of the title
gets the new price
sets the item
sets the isbn
returns the expiry date
sets the date the expiry time is enabled
sets the new price of the player
sets the publisher
gets the edition
sets the image
returns the sell price
sets the edition
sets the sell price
sets the owner of this user
sets the module
sets the version of the version
sets the hashed password
sets the email
sets the firstname of the person
sets the lastname of the user
returns the value at the specified row and column
this method is called when the user changes the model
sets the user condition
sets the class name of the class to be used for this
sets the correct panel to display the correct panel
sets the correct panel to the correct panel
execute the user
executes the
this method adds the condition search condition to the current state
this method is called by the service
this method is called by the service
this method is called when the window is closed
sets the key
sets the key path to the current key
makes the panel
resets the configuration to defaults to the default configuration
refreshes the generator and clears the model
returns the service interface
returns the resource for the specified resource key
this method is called when the observed object is changed
this method is called when the user selects the observable object
makes the panel
this method is called when the user selects the
exit the application
returns the settings of this object
returns the choice with the given name
adds a choice to the list
replaces the current fields of the given field with the given value
run the command
removes the file from the archive
starts the execution of the task
stops the running process
returns true if the given control is in the control
returns a string representation of the object
returns a string representation of this object
adds the given option
returns a string representation of the object
returns the option object for the specified option
returns an entry from the file
returns the network interface for the network interface
run the protocol
counts the number of children of the given element
installs a new
returns the child element of the given element
load all packages from the package name
checks if the package name exists in the classpath
checks if the package name exists in the list
this method is called from the
inserts the given element into the list
returns the number of elements in this collection
at startup create and show the main frame of the application
creates the definitions of the parser
process the request
sets the visibility of the window
shows the dialog for the specified title
reports the axis service to the webservice
sets the selected node
process a transformation
initialize the service context
destroy the component
get the image type for a given message
handle the click on the button
this method initializes j progress bar
this method initializes download dir text field
this method initializes
this method initializes exit button
this method initializes download button
this method initializes this
this method initializes j content pane
this method initializes j
this method initializes cancel button
this method initializes current language text field
store the specification in the document
gets the results as a string
creates a new index in the file
invalidate timeouts and invalidate timeouts
removes the given element from the list of elements that are
creates a sort field entry
creates a sort field entry
compares the specified object with this field
compare the current object to the same value
returns the number of hits in the database
sets the hit count
returns the facet accessor for the specified name
returns the number of hits
returns the number of facets that this domain is using
sets the number of hits
sets the facet specification
returns the total docs
returns the facet specification of the given element
sets the total docs
adds a new facet to the list of facets
adds all facets contained in the given facets
sets the hits
sets the query
returns the document id
adds a selection to the selection
returns the selection for the specified
adds a sort field to the list of sort
sets the sort field
gets the value of the order by property
sets the order by clause
returns the maximum number of
returns true if the property is strict
sets the maximum number of times the should be
sets the strict property
returns true if the selection is expanded
sets the expand selection
returns the current depth of the tree
sets the selection depth
sets the values of the values
returns the selection operation
sets the selection operation
makes a bit set
load the data cache
returns true if the user can support not support
tests the number of
returns the entity by id
returns the current principal
returns the entity by id
insert a new entry into the database
returns the project with the given id
returns a setting with the specified path
returns the entity by its id
returns the entity by its id
insert a new entity
updates the given entity
deletes a activity from the database
returns true if the current thread is finished
deletes the given activity from the database
returns the activity id from the database
update the data in the database
insert a new external dao object
deletes the given object from the database
adds a field to the list
returns the of the
returns the date in the format
returns the id of the
returns the id of the company
returns the quality document category id
returns the user document id
returns the upload path
returns the path to the report
returns the number of child objectives
returns the minimum child count of the objectives
returns the maximum number of children that this task can promote
returns the time in millis taken from the time in millis
returns the value of the specified property
returns whether the should be used as external css
returns the root folder of the file
returns the host name of the mail server
returns the port of the mail server
returns the username of the user who was authenticated
returns the password of the user
returns the auth auth
returns the root path of the root directory
returns the path to the file specified by the given id
returns true if the given point is active
get the call method for the given method
get a property from the resource bundle
initializes the properties
returns the for the given
populate the cell with the given content
returns the line of the line
edit the current user
creates a new credit customer object
returns the detail of the current user
save the current page
delete the title
returns the for the navigation
returns the navigation page
returns the navigation history
resets the search
returns the search result
returns true if the credit title is selected
returns the detail of the current user
creates a new financial
returns the detail object for the current entity
save the current transaction
delete the
returns true if the financial ratio is selected
get the stack trace
fills the stack trace of the exception
sets the current log mode
sorts the list by date
calculates the bill bill for the given code code
calculates the for the given account
returns the public id of the current entity
creates a new bill
edit the current user
creates a new account
edit the user account
saves the current project
returns the detail object for the current user
deletes the current bill
save the current account
delete the current account
returns the detail object for the current user
returns true if the account entry is selected
returns true if the bill is selected
initializes the service
returns the version of the application
p called when the letter is clicked
returns true if the entity is available
returns true if the user can manage the user
returns true if the user has been available
returns true if the entity is available
returns true if the permission is available
returns true if the current user is available
creates a new instance of the
returns the detail object for the current user
save the current session
delete the current date
returns true if the position is selected
creates a new collaborator
returns the detail of the current request
saves the current state of the database
deletes the current entity
returns true if the collaborator is selected
creates a new interaction type
returns the detail of the current user
saves the current state of the interaction
delete the current interaction
removes the break down
returns true if the interaction type is selected
creates a new contact tag
edits the selected contact
delete the tags
creates a new position
sets the position of the edit position
removes the tags from the table
creates a new department
edits the name of the department that is currently selected
delete department tags
creates a new organization
edits organizations
removes organization tags
returns true if the entity is available
returns true if the current user can handle the access control
returns true if the acl is a
creates a new tag
returns the current context
save the current page
delete the tag from the database
returns true if the tag is selected
creates a new instance of the user
returns the detail of the current user
saves the current state of the file
creates a new offer with the specified role
removes the current interaction
edits the user roles
removes roles from the database
creates a new offer for the offer
returns true if the interaction is selected
this method will be executed when the user edits the offer
removes the costs from the database
returns true if the user can create a new entity
returns true if the acl is available
returns true if the user can offer requests
creates a new offer
p this method is called by the service
saves the interactions in the interactions model
deletes the current entity
returns true if the offer selection is selected
returns the detail of the current user
returns true if the user can create a new entity
returns true if the user can edit the permissions
returns true if the user is a user security privilege
returns true if the user has a
search contacts for the contact
creates a new contact
returns the detail of the current user
save the contact
delete the selected entity
creates a new organization business object
returns the detail object for the current entity
save the department
returns true if the contact is selected
delete the
returns true if the organization is selected
creates a new category
edits the category
p called when the letter is clicked
delete categories
returns the old value of the change in the old text
creates the versions version of the document
this method will be called from the webpage to set the document
returns the new value of the change in the table
delete the versions
returns true if the entity is available
returns true if the user can edit the document
returns true if the document is available
returns true if the user can create a new entity
creates a new document
returns true if the permission is available
returns the detail page of the current user
saves the current state of the document
returns true if the user can be deleted
deletes the document
creates a new
returns true if the document is selected
returns a detail object
save the current page
delete the
returns true if the selected
creates a new
returns the detail object for the current user
p called when the letter is clicked
save the current session
delete the current session
returns true if the request is currently selected
p called when the letter is clicked
returns the old value of the change in the old entity
returns the new value of the change in the table
creates a new holiday
returns the detail object for the current user
save the current entity
delete the current news item
returns true if the holiday is selected
creates a new interaction with the current user
edits the interactions
removes the interactions from the current session
creates a new instance of the
returns the detail of the current user
save the current page
delete the
returns true if the setting is selected
creates a new project
returns the detail object for the current user
save the current project
delete the project
returns true if the project is selected
creates a new idea
returns the current context
saves the current idea entity
delete the idea
wp set user documents
returns true if the idea selected
resets the password for the user
creates a new department
returns the detail page of the current user
save the department
returns true if the user can access this object
delete the department
returns true if the department is selected
returns true if the user can create a new permission
returns true if the user can manage the user
returns true if the user can be deleted
creates a new user
returns the detail object for the current user
saves the current user id to the current user
delete the user
returns true if the user is selected
returns true if the entity is available
creates a new instance of the
returns the detail of the current user
sets the selected date
save the current entity
deletes the current entity
returns true if the occupation level is selected
when selected project changed
returns the selected organization
returns true if the entity is available
creates a objective function
returns true if the user can talk to the current user
p this method is used to create the object
saves the current objective state
returns true if the user has been available
delete the
returns true if the application is available
returns true if the objective state is selected
saves the current session to the database
deletes the current booking
this method is used to display the current list of selected items
returns true if the activity is selected
returns true if the activity is selected
sets the value of the week end cell class
p return the value of the code week end cell code property
sets the working day
p return the value of the code working day code property
sets the duration of the activity to be used in the activity
p called when the letter is clicked
returns the object that is associated with the given object
performs the update operation
invoked when a mouse button has been released on a component

returns the name of the select module
returns the describe
returns the connection context
initialize the
returns the entity name for the given name
asserts that the transaction is not already in the database
the current transaction
returns the namespace name of this component
rolls back the transaction
returns the components name
returns a string representation of the given
returns the of the given type
prepares the entity for the current request
forget the current context
returns the connection context
returns the current connection context
creates a provider support for this provider
returns the elements of the collection
creates a map of elements
returns the map of elements in the map
returns the declaration of this object
returns the set of services that are deployed to the given service
this just records the information
this adds separators for editor additions to the tool bar
the framework calls this to see if the file is correct
this method is called when finish button is pressed in
returns true if the current page is complete
this method is called when finish button is pressed in
this populates the pop up menu before it appears
handles activation of the editor or its associated views
handles what to do with changed resources
this returns the property descriptors for the adapted class
this adds a property descriptor for the name feature
this adds a property descriptor for the is abstract feature
this specifies how to implement
this returns
this returns the label text for the adapted class
this handles model notifications by calling
returns the resource locator for this item providers resources
this returns
this returns the label text for the adapted class
this returns the label text for
this adds a property descriptor for the name feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the name feature
this adds a property descriptor for the namespace feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the kind property feature
this adds a property descriptor for the text property feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the separator feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the open feature
this adds a property descriptor for the close feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the is error feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the open feature
this adds a property descriptor for the close feature
this adds a property descriptor for the separator feature
this specifies how to implement
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this adds to the collection of
this returns the label text for
this specifies how to implement
creates a new adapter for an object of class
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this adds to the collection of
creates a new adapter for an object of class
this returns the property descriptors for the adapted class
this adds a property descriptor for the initial priority feature
creates a new adapter for an object of class
this returns the label text for the adapted class
this handles model notifications by calling
this specifies how to implement
creates a new adapter for an object of class
this handles model notifications by calling
this adds to the collection of
this returns
this returns the label text for the adapted class
creates a new adapter for an object of class
this returns the property descriptors for the adapted class
this adds a property descriptor for the name feature
this adds a property descriptor for the language feature
this returns
creates a new adapter for an object of class
this returns the label text for the adapted class
this handles model notifications by calling
this specifies how to implement
creates a new adapter for an object of class
this returns the property descriptors for the adapted class
this returns
this adds a property descriptor for the keyword feature
this returns the label text for the adapted class
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this handles model notifications by calling
this adds to the collection of
creates a new adapter for an object of class
this returns the property descriptors for the adapted class
this adds a property descriptor for the name feature
this specifies how to implement
this adds a property descriptor for the context feature
this returns
this returns the label text for the adapted class
this adds a property descriptor for the language feature
this handles model notifications by calling
this returns
creates a new adapter for an object of class
this returns the label text for the adapted class
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the multiplicity feature
this returns
this returns the property descriptors for the adapted class
creates a new adapter for an object of class
this adds a property descriptor for the priority feature
this returns the label text for the adapted class
this specifies how to implement
this handles model notifications by calling
this returns
this returns the label text for the adapted class
this handles model notifications by calling
creates a new adapter for an object of class
this adds to the collection of
this returns the property descriptors for the adapted class
this adds a property descriptor for the name feature
this adds a property descriptor for the kind property feature
creates a new adapter for an object of class
this adds a property descriptor for the text property feature
this adds a property descriptor for the default context feature
this specifies how to implement
this adds a property descriptor for the include feature
this returns
this specifies how to implement
this returns the label text for the adapted class
creates a new adapter for an object of class
this handles model notifications by calling
this adds to the collection of
this returns
this returns the label text for the adapted class
this returns the property descriptors for the adapted class
creates a new adapter for an object of class
this adds a property descriptor for the is expression statement feature
this handles model notifications by calling
this adds a property descriptor for the kind property feature
this specifies how to implement
this adds to the collection of
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this adds to the collection of
this returns
this returns the label text for the adapted class
this returns the property descriptors for the adapted class
this adds a property descriptor for the context feature
creates a new adapter for an object of class
this adds a property descriptor for the language feature
this specifies how to implement
this specifies how to implement
this returns
this returns
creates a new adapter for an object of class
this returns the label text for the adapted class
this returns the label text for the adapted class
this handles model notifications by calling
this handles model notifications by calling
this adds to the collection of
creates a new adapter for an object of class
this returns the property descriptors for the adapted class
this specifies how to implement
this returns
this adds a property descriptor for the text property feature
this returns the label text for the adapted class
this adds a property descriptor for the ignore case feature
this handles model notifications by calling
this returns
this adds to the collection of
this returns the label text for the adapted class
this handles model notifications by calling
this returns
this returns the label text for the adapted class
this returns
this returns the label text for the adapted class
this returns the property descriptors for the adapted class
this adds a property descriptor for the text property feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
creates a new adapter for an object of class
this specifies how to implement
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this adds to the collection of
creates a new adapter for an object of class
this returns the property descriptors for the adapted class
this adds a property descriptor for the prefix feature
this adds a property descriptor for the uri feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
creates a new adapter for an object of class
this adds a property descriptor for the kind property feature
this specifies how to implement
this returns
creates a new adapter for an object of class
this returns the label text for the adapted class
this handles model notifications by calling
this adds to the collection of
this returns the property descriptors for the adapted class
creates a new adapter for an object of class
this adds a property descriptor for the name feature
this adds a property descriptor for the feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this specifies how to implement
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this adds to the collection of
creates a new adapter for an object of class
this returns the property descriptors for the adapted class
this adds a property descriptor for the name feature
this adds a property descriptor for the is list feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
creates a new adapter for an object of class
this adds a property descriptor for the keyword feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
creates a new adapter for an object of class
this returns the property descriptors for the adapted class
this adds a property descriptor for the import name feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
creates a new adapter for an object of class
this specifies how to implement
this returns
this returns the label text for the adapted class
this handles model notifications by calling
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
looks up the language for the given language
this method is used to process the given object
this method is called when a syntax error occured
this method is called when the definition is encountered
returns the current context name
returns the current context
sets the active editor
returns a collection of actions that are the actions that are created
returns a collection of actions that are created by the given
handles the activation of the contributor
handles the event with the changed resources
this adds a property descriptor for the name feature
this adds a property descriptor for the is abstract feature
returns a collection of all the children of the given object
notify the model that the model has changed
this adds a property descriptor for the name feature
this method is responsible for updating notifications for the notification of the
this adds a property descriptor for the name feature
this adds a property descriptor for the namespace feature
notify the model listener
this adds a property descriptor for the kind property feature
this adds a property descriptor for the text property feature
notify the model listener
this returns the label text for
this adds a property descriptor for the separator feature
notify the listener that the model has changed
this adds a property descriptor for the open feature
this adds a property descriptor for the close feature
this implementation is responsible for notification of a notification
this returns the property descriptors for the adapted class
this adds a property descriptor for the open feature
this adds a property descriptor for the close feature
this adds a property descriptor for the separator feature
this adds a property descriptor for the bracket content feature
returns the children of the given object
this implementation is responsible for notification of a notification
this returns the property descriptors for the adapted class
this adds a property descriptor for the property feature
returns a collection of all the children of the given object
notify the model changed
this returns the property descriptors for the adapted class
this adds a property descriptor for the context name feature
returns a collection of all the children of the given object
this returns
this returns the label text for the adapted class
to notify the model that the model has changed
this adds to the collection of
this adds a property descriptor for the initial priority feature
notify the model listener
returns a collection of all the children of the given object
this function handles notifications for notification
this adds a property descriptor for the context feature
this adds a property descriptor for the language feature
this returns
this returns the label text for the adapted class
notify the model listener that the model has changed
notify the listeners that the notification has changed
this adds a property descriptor for the name feature
this adds a property descriptor for the language feature
implement this method with tree model
this adds a property descriptor for the keyword feature
notify the listener that the model has changed
returns a collection of all the children of the given object
implement this method with tree model
this adds to the collection of
this returns the label text for
this adds a property descriptor for the name feature
this adds a property descriptor for the context feature
this adds a property descriptor for the language feature
implement this method with tree model
returns all children of a given object
notify the model that the model has changed
this method is called when the page is selected
this adds a property descriptor for the multiplicity feature
notify the listener that the model has changed
this adds a property descriptor for the priority feature
returns a collection of all the children of the given object
implement this method with tree model
returns the page for the specified key
this returns the property descriptors for the adapted class
this adds a property descriptor for the name feature
this adds a property descriptor for the default context feature
this adds a property descriptor for the merge feature
returns a collection of all the children of the given object
notify the model that the model has changed
this returns the property descriptors for the adapted class
this adds a property descriptor for the kind property feature
this adds a property descriptor for the text property feature
this adds a property descriptor for the property feature
returns a collection of all the children of the given object
this implementation is responsible for notification of the tree model that has
this adds a property descriptor for the is expression statement feature
this adds a property descriptor for the kind property feature
returns a collection of all the children of the given object
notify the model that the model has changed
returns a collection of all the children of the given object
notify the model listener
returns a collection of all the children of the given object
this implementation is responsible for notification of the tree model
this adds to the collection of
this adds a property descriptor for the text property feature
this adds a property descriptor for the ignore case feature
this implementation is responsible for notification of the tree node
initializes the editor
this adds a property descriptor for the text property feature
notify the model that the model has changed
returns the children of the given object
notify the model listener
this adds a property descriptor for the prefix feature
this adds a property descriptor for the definition feature
notify the model that there has at least one notification
this adds a property descriptor for the kind property feature
returns a collection of all the children of the given object
notify the model that there is a new model
this adds a property descriptor for the name feature
this adds a property descriptor for the feature
notify the model listener
this adds a property descriptor for the name feature
this adds a property descriptor for the is list feature
this implementation is responsible for notification of a notification
this adds a property descriptor for the keyword feature
notify the model listener that the model has changed
this adds a property descriptor for the import name feature
implement this method with tree model
returns a collection of all the children of the given object
this implementation is responsible for notification of a notification
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
process the request
test of method of class
test of obtener method of class
test of obtener por nombre method of class
test of modificar method of class
test of method of class
test of buscar cliente method of class capa negocios
test of buscar cliente method of class capa negocios
test of cliente method of class capa negocios
test of cliente method of class capa negocios
test of tipo method of class
test of modificar tipo c method of class
test of de tipos method of class edu
test of obtener tipo method of class usyd
test of method of class
test of obtener por nombre method of class
test of obtener tipo por nombre method of class de
test of obtener method of class
test of tipo method of class
test of modificar method of class
test of method of class
test of obtener nombre method of class
test of no method of class species core
test of no ref method of class
test of method of class
test of obtener cantidad method of class
test of cantidad method of class
returns the id of the
returns the alpha value of this
returns the red component of the
returns the green component of the color
returns the blue component of this
sets the id
sets the alpha value for the alpha channel
sets the red value for the rgb color
sets the green component of the green component
sets the blue component of the
returns the pixel at the specified location
resets the current state of the
returns the
returns the url of the last element
returns the url of the url
returns the score of the score
returns the name of the
returns the image descriptor for the image
resets the service
the action has been activated
the action has been activated
performs the action
this method is called when the user selects a new workbench
saves the ontology in the project
checks if the ontology is local
this method initializes this
this method initializes j button
this method initializes j text area
this method initializes j table
this method initializes this
this method initializes j tool bar
this method initializes j panel
closes the preview
this method initializes j tree
returns a vector of elements in the vector
returns a vector containing all the elements in the list
this method is used to select the list of
insert the methods description here
insert the methods description here
execute the sync statement
returns the sql type for a given database column
returns a list of column names
sets the dao for communication with the data layer
sets the dao for communication with the data layer
sets the dao for communication with the data layer
p respond to acegi acegi security context
p respond to acegi security authentication
p respond to acegi acegi security context
returns the roles of the person
paint the image
sets the enum value for this enum
removes the element at the specified position in this list
returns the order of the enum
returns the utterance at the specified index
returns the last coded
returns the start bytes of the message
returns the end time of the event
returns the end position of the current page
returns true if the current token is parsed
returns true if the is a coded value
gets the misc code
sets the end time
sets the end of the number of bytes
sets the misc code attribute code
sets the misc code
returns a string representation of this object
creates a new player button
this method initializes button play
this method initializes button replay
this method initializes button
this method initializes button and replay
returns the button that opens the button
this method initializes button
returns the slider to display
sets the slider to be displayed in the slider
writes the element to the buffer
sets up the proxy for the remoting server
update buddy list
checks if the given code message code is before the specified instant
adds a message to the list of charges
adds a listener to the list of registered listeners
removes a facebook listener from the list of registered listeners
this method is called when user facebook user opts
sends a typing event to all registered listeners
invoke a error event
invokes the listener method
returns the value of the cell editor
returns the width of the image
returns the height of the image
returns a darker version of this color
returns the average of the samples in the current batch
compares this object with another color
returns true if the relative mouse mode is pressed
returns a string representation of this object
maps the key to the given key code
returns a vector of all the actions for the given game
adds a game object to the table
removes a object from the game
returns the transparency of the image
checks if collides with collision
draw the game
marks all objects in the list of objects
mark the given rectangle as visible
adds a new object to the list
this method is called when the game collides with the given
adds a player to the game
removes an object from the game
updates the object
draw the game
returns the first wall intersection of the wall
load a map from a path
creates a new
returns the objects in the map
check if the object is an object of the given object
adds a vertex to the graph
adds a new object to the game
builds the tree
builds the tree
returns the vector of
adds a vertex to the graph
chooses a to a given code code
draw the tree
creates a new vector of polygons
creates the
builds the neighbor list
adds a neighbor to the list of neighbors
removes a neighbor from the list
visits the given node
draw the tree
find the first in the vector
adds a health amount to the player
sets the
returns a random brain
notify the simulation that a creature has been killed
draws the current polygon
builds the surface
starts the frame
called when the end of the frame is finished
notifies the sprite that the sprite is stopped
returns the color of the specified pixel in the current color
returns the color of the specified point
returns the color of the given point
returns the color of the specified color
creates a new instance of loader
sets the lights
load a polygon from a path
returns the vector3 vector
this method is used to draw a surface
adds a polygon to the polygon
adds a polygon group to the group
returns a clone of this polygon group
returns the group with the specified name
resets all the polygon objects
returns the next polygon
sets the of the polygon
update the object
insert a vertex at the specified location
creates a path to a node
sets the path finder
returns an enumeration of the nodes in the path
sets the translational velocity
backup the path and the path to the
sets the angle
sets the of the camera
this method is called when the server is started
this method is called when the game is paused
sets the bounds of the view
returns a copy of the vector of objects
returns the title of the dialog
deletes the object from the cache
initialize the component
returns all the objects that lie in the given object
returns the cache object
enables disables the component
insert a new object
collects all objects of the given object
adds a text message to the text area
sets the title
refresh the object
sets the jsp path
returns a collection of all the objects that are not handled by
retrieves all objects from the cache
sets the local drive prefix
retrieves all objects that have been added
collects all objects that are not in the given entity
sets the recursive
sets the url prefix
collects all objects that are not found in the given entity
returns a vector with all the matching objects matching the given object
retrieves objects matching the given object
collects all the objects that are matching the given
adds a tool to the tool bar
adds a new listener to the toolbar
this method is called when a tool is pressed
retrieve a single object matching a given object
centers the window on the screen
paints the
returns the activated flag
find the object for the given class name
returns the status text
update the object
gets the panel attribute of the object
reports a bound property change
retrieve all objects that are equal to the given object
paints the background
returns the panel name
paint the status of the status text
this method is called by the
retrieve all objects from the given object
returns true if this component is activated
sets the status text
returns the result of the object
retrieve objects matching the given object
show the status bar
sets the activated state
writes the message to the log file
translates a
sets the panel containing the panel
sets the panel name
retrieves the object by example
applies the given component to the current choice
applies the given component to the component
applies the given code apply code to the code code
returns the value at the specified key
updates the object
returns the value at the specified code key code
apply the frame to the given frame
returns the value at the specified value
applies the given label to the panel
this method is called when the user selects the server
logon to the user
adds an error throwable to the stack
applies the given list of background colours to the list
sets the component
handle the event
applies the given panel to the panel
handles a handle exception
adds a throwable to the code throwable code
sets the context
creates a new transaction not active exception
applies the given component to the current text
handle the event
returns the begin of this object
adds a handler to the list of handlers
returns true if the level is a level level
this method is called when a transaction is finalized
returns the application object
returns the context that is currently being used by this context
sets the trace level of the given level
returns the default handler for this handler
logs the object
sets the prefix
returns the name of the field
rolls back the transaction
logs a message with the given level
prints the string to the console
handle the exception
logs a message with the given level
returns the stack of the stack
handle an exception
logs a message with the given object
returns a string representation of the object
sets the default handler for the default handler
sets the off flag to false
returns the broker for the given name
returns the package name of the package
sets the application object
this method is called when the user selects the
returns the suffix for the given class
sets the date
sets the trace value for this report
sets the name of the field
handles button pressed
flush the buffer
writes a portion of the array
writes a portion of a portion of an array of characters
sets the stack of the current object
writes a portion of a string
returns a vector of all the in the current language
writes the given string to the log
writes the specified byte to this output stream
returns an enumeration of the elements in this collection
sets the root of the tree
handles the mouse pressed event
gets the value of the spacer property
compares two nodes
prints the given node
adds a node to the list
insert the methods description here
adds the given object to the cache
returns the node at the specified position in the list
returns the node with the given value
this method is called by the framework to set the text
returns a container of the class of the given class
adds a new object to the list of keys
returns the domain of the domain
returns the length of the node
returns an iterator for the given class
adds a new object to the cache
sets the domain object
returns an enumeration of the keys in this map
returns the sequence id
returns the objects vector of objects that are not in the cache
print a boolean and then terminate the line
returns true if the children of this node has children
returns true if the given class is in the cache
determines if the given class name is sorted
returns true if this is empty
writes the specified byte array to the stream
adds a panel to the panel
returns a vector of matching binding matching the given query
removes a node from the list
writes the specified value to the underlying stream
removes the given object from the cache
sets the sequence id
writes the given trace value to the log
insert the methods description here
retrieves the object for the given name
sorts the table
returns the object that corresponds to the given class
this method is called when the panels panels panels
sorts the given array of objects
sets the initial capacity
invoked when a tool is clicked
returns the graphic
returns the registry
returns the selected field
applies the given file path to the given file
collects all objects in the collection
returns the value mapped to the key
collects all objects in the collection
returns the value of the property with the specified key
returns the blog properties
returns the block
collects all objects in the collection of example charges
returns the exception that caused this exception
returns the path to the
collects all objects that are not found in the given query
sets the context
sets the key to use for this key
sets the properties
sets the value of code registered code
returns the fully qualified name of the class that is mapped to
computes the package name of the package
returns the string representation of this object
returns the class name of the class represented by this class
deletes the current object
returns the package name of the class that this class implements
returns the value of the attached values property
invoked when the mouse is dragged
returns the class name of the class that this class represents
returns true if the class is a class
convert the string representation of a wrapper
returns the enclosed query expression
returns true if the given class is a valid
returns the fully qualified name of the package for this class
returns the method object associated with this object
returns the suffix for the given class
paints the border
returns the cache id
creates a new species
returns true if the method is a one
sets the graphic
returns the package name suffix for the package
returns true if the key is contained in the map
writes the contents of the stream to the output stream
print the current state of the
returns true if the method is
sets whether the selected field is selected
returns the code code of the code code
returns the value to which this map maps the specified key
returns the class of the species
stores the given output stream to the given output stream
returns true if the method is valid
returns the string representation of this object
this method is called by the framework to initialize the application
returns the base property
returns true if the argument is zero
removes the key and its corresponding value from this map
returns the sub property
sets the base property
convert the value to a value
sets the association
setter for property display name
setter for property name
sets the sub property
insert the methods description here
returns true if the current user is valid
returns a filter expression and expression and returns it
setter for property type
returns a string representation of this object
setter for property value accessor
sets the expression that is used to identify the expression
returns the properties of the given class
sets the display name
returns a map that contains the registry
refresh the current session
returns the value of the code conditional code property
sets the registry
returns a duplicate of the expression
returns the string representation of the value
returns a formatted string of the time
returns a string representation of the character
returns a string representation of the value
retrieves all objects in the database
insert the methods description here
returns the expression where the where clause is pointing to
returns a string representation of the given double value
initializes the registry
returns the value of the given array of the given arguments
sets the value accessor for this property
registers a class with the given name
returns a string representation of the value
insert the methods description here
retrieves all objects from the database
returns the boolean value of operator operator
returns a string representation of the field
compares its two arguments for order
checks whether the given object is a valid conditional
apply the given sort to the list of elements
compares its two arguments for order
this method compares this object with the specified value for this
this method is used to get the value of the given object
returns the key for this key
this method compares this object with the specified value for this
compares its two arguments for order
gets the value of the filter expression property
returns the string representation of the given value
convert the value of the given type to a value
returns true if the comparison object is equal to the given object
compares all objects of the two expressions
returns the key
returns the string representation of the given character
checks if the given object satisfies the comparison
compares its two arguments for order
p this method is used to get the value of a pair
returns the end expression for the next expression
returns the string representation of the double value
returns a new sort order for the given field
returns true if the object is equal to the given object
returns a string representation of the value
finds the converter that matches the given class
returns the string representation of the specified integer
resets the
insert the methods description here
returns the string representation of the value
adds a selection to the list
returns the next element in the iteration
insert the methods description here
compares its two arguments for order
returns the next expression
sets the default converter
returns the string representation of the given type
returns a comparator for the given key
creates a sort expression
retrieves the object by example
returns a string representation of the given value
returns the operator of the operator
returns the order expression for the given field name
returns the sort expression
returns a string representation of the date
gets the value of the next expression property
find the comparators for the given interface type
returns the value of the comparison
creates a new instance of the expression
returns a string representation of the given string
sets the ascending
returns a string representation of the operator
find the mapping in the registry
returns true if the expression is in the current state
creates and returns a filter with the given name and value
returns a comparator for the given type
insert a filter expression
returns the registry registry
returns the operator of the filter
returns a filter that recognizes the expression
returns the order by filter
returns an instance of comparable comparator
saves the current state of the resource
returns a new filter or expression
returns the value of the filter
creates a filter with the given name and value
returns the where clause for the given query
save the collection of blog objects to the database
creates a new filter with the given name and value
returns the default array with default values
removes all expressions that are contained in the expression
creates a new filter with the given name and value
this method is used to save the objects
removes the next filter
returns a collection of the default collection comparators
returns the character that is currently being used for characters
sets the filter expression
insert the methods description here
returns a string representation of the object
sets the departments
sets the selected department
returns a list of the elements that are currently in the given
sets the number value for this property
sets the registry
returns a string representation of the object
this method will add the given code list code to the code
returns the comparator for the given class
creates a factory for this car
retrieves the object by example
start the servlet
returns the current value of the card
closes paren paren and discards parenthesis
checks if the given family is a same family
sets the new value of the code property code
test the same as the first test method
sets the model
returns a string representation of the object
removes the given family from the family
returns the name of the last item in the list
writes the header to the output stream
displays the initial population
writes the header to the output stream
writes the trailer
sets the comparator for comparable comparator
initialize the service
gets the
gets the employees business
generates the document for the given writer
generates a new
generates the of the given writer
returns the mediator
sets the mediator
gets the
sets the comparator registry for this object
generates the code snippet for html banner html snippet
generate the body body html snippet for html file
sets the default collection
returns the open expression
gets the primary expression
sets the default sort comparator
returns true if the expression is open
insert the methods description here
returns a filter expression that is not not null
end the file
start the file
start the
applies the given path to the current file
applies a file path to the given file
returns the value at the specified key
applies the given path to the file
applies a file path to the given file
sets the context
returns the value at the specified key
this method is called when the user selects a panel
wait for the to be
initialize the map
wait for the current thread to be executed
sets the current component
returns the factory used to create a factory
returns the factory used to create a factory
returns the applet information
maps a dbobject to a node
returns the applet information
sets the listing search value for this search result
delete the selected
returns the value of the department listing selected property
returns the value of the employee listing selected property
create a new listing
creates a new
select the department
creates a filter with the given name and value
this method is called when the department is selected
select employee select
deletes the selected department
creates a new department
select listing listing
saves the selected department
selects a department object
creates a new
sets the department listing selected department
sets the selected department value for this department
sets the employee listing selected accounts
sets the employees business object
setter for property
sets the value of code open expression stack code
sets the selected employee
gets the list of
returns the name of the field to be used for the
returns the selected object
sets the selected listing
invokes the method on the given object
sets the list of
sets the new method name
sets the selected object
sets the primary expression
sets the mediator
returns a string representation of this object
clears the current list of the current object
this method will be called by the system to create a new
returns the extension
gets the first name
gets the last name
gets the location
returns the middle name
returns the results of the query
creates a new filter
returns the next department id
returns true if the current match is a match
returns the next employee id
checks if the given source and target matches the given source
initializes the mediator
close the current session
searches for the
sets the extension
sets the first name of the first field
sets the last name property
sets the location of the field
sets the middle name of the field
sets the results of the model
this method is called by the framework to update the object
sets the mediator
sets the value of navigator
sets the mediator
refresh the current state of the
setter for property mediator
closes the frame
load the projects
load the protocol
this method is called by the connection to set the database
close the connection
returns true if the datasource is configured to use ms
returns the source for the given index
returns the content pane of the content pane
get the title of the record
adds a source to the
resize the canvas
adds a title to the list of titles
get the connection factory
sets the value of the ms dao property
adds a project to the project
returns true if the mbean supports ms
get the project associated with an index
returns the source
adds a new file to the list of files
sets the source
sets the project
sets the database type
returns the project
returns the database type
sets the files
sets the
sets the mass
sets the mass mass
sets the score
sets the type of the
sets the value of var
returns the query
gets the value of the var mods property
returns the type of the type
returns the variable modification
sets the ratio group query numbers
returns the composition of the composition
gets the value of the call mass property
returns the mass mass of the peak
returns the charges of the charges
returns the reference of the parent of the parent hit
returns true if the is
adds a peptide to the
gets the value of the parent hit property
add a group to the
returns the value of label free var var var var var var
returns the number of hit
returns the ratio
returns the of the
sets the ratio group absolute absolute value
returns the number of groups in the
returns the number of
returns the ratio group
gets the value of the peak start property
returns the end peak end peak
sets the correlation value for this
returns the start region start
sets the fraction of the fraction
returns the quality of the quality
returns the end region end
returns the mean scan number
sets the ratio group partners
returns the absolute intensity of the
adds a non null state to the group
sets the stored in db
returns the fraction of the
sets the valid value for this
sets the comment
returns the comment
returns the correlation value
returns the parent ratio group
returns the comment
returns the parent ratio group
returns a string representation of this object
returns the parent collection
returns the reference factor
returns the factor
returns the identification of the specified index
returns the score score
returns the peptide type
returns the number of
returns the number of
returns the number of types in the list
returns the of the
adds a new identification type to the list

add a ratio to the
returns the ratio of the given type
get the channel name for the given channel id
gets the value of the peptide sequence property
returns the identification of the specified type
adds a new reference to the protein
returns true if the selected item is selected
sets the selected value
adds a group to the group
returns the group at the specified index
sets the component types
sets the ratio of the
puts the given object into the database
returns the metadata data
returns the accession number of the protein protein accession
sets the array of peptide types
gets the value of the ratio group collection type property
sets the type of the
sets the source
sets the accession protein accession
sets the index attribute of the tag
adds a ratio to the ratio group
sets the value of the used in calculation flag
returns the number of groups in the
sets whether the should be collapsed
returns the number of peptide groups
returns the full sequence sequence
clear the reference set
returns true if the is used in the
returns the post sequence
returns the sequence of the sequence
returns true if the node is collapsed
returns the ratio of the protein
returns the id of the
returns the number of used
returns the number of valid for a given type
returns the start position of the current position
sets the start position
returns the end position of the
sets the end position
adds a log to the list of the
returns the log
sets the value of pre sequence
returns true if only the number of protein drives
returns the biggest coverage score
sets the post sequence
returns true if the datastore to the default fee
sets the value of use only valid ratio
gets the value of the ratio type property
returns the ratio between the and the
gets the value of the property
returns true if the current user is valid
returns the comment
sets the value ratio for protein 1
adds a new identification to the
sets the file name
getter for property file name
returns protein accession
returns true if the tag is validated
returns the type of the
sets the type of the field
gets spectrum file name
sets the value of spectrum file name
gets the value of the ratio group collection property
check if the database is currently being used
returns the value of the attribute
returns the value of the specified attribute
returns the file
returns the title of the xml document
reads the file from the
adds a ratio to the validated
returns the number of components in the title bar
returns the index element
returns a group collection of
sets the
returns a group collection of
reads the file
adds a new protein to the list of selected protein
returns the ratio between the and the maximum value
returns the path to the file path
returns the string representation of the file
removes all selected
adds a validated protein to the protein
returns the ratio of the
removes a validated protein dto from the protein list
sets the
removes a protein from the protein list
adds a new protein to the protein
returns true if the source is
returns the usage for sequence of the given sequence
returns true if the
returns whether the specified sequence is collapsed
returns true if the is
returns the string representation of the protein
gets the value of the database type property
sets the value of database type
sets the ratio of the valid valid reference set
returns the right border border
sets the right border border
returns the left border border
returns the reference set
sets the reference set
returns the
sets the
sets the reference set type
gets the reference set enum value for this
returns the number of in the
sets the number of in the reference set
sets the data type
gets the value of the max score type property
returns the number of in the list
sets the maximum score type
calculate the one
returns the frame
calculate the second
returns the number of unique groups in the
returns the number of unique in the
this method is called when the user selects a fight group
returns the protein list
returns the protein bar
writes the log to the log
prepare the cache for the database
creates the user

delete the
run the sync run on the given string
writes the given string to the server
returns a resource with the specified name
creates the field editors
returns the counter value
sets the counter to the given counter
creates the
creates the toolbar
sets the code
sets the listener to be notified of changes to the tree
returns the selected element
collapses all the nodes in the tree
the action has been activated
sets the enabled background
returns true if the background thread is enabled
sets the ignore event
returns the active editor
sets the search result
adds a search event listener to this event
returns the code code property
returns the result of the search result
sets the type of the
returns the primary type
adds a listener to the list of listeners
returns the query string
notify the event listener that the search has been processed
returns the query string for the given type
called by the server when the user presses the end of the
returns the source of the current model
returns the value of the property as a string
returns the simple name of the signature
returns the value of the specified property as a integer value
returns the type of the
returns the duration of the time in milliseconds
returns the value of the property
sets the search type
returns the creation date of the creation date
this method is used to convert a string to a string
update the result of the query result
returns the compilation unit
returns the source of the given source file
returns the number of successful tests
find a matching body
find the given uri
returns the result item for the specified url
returns the source url for the given url
add a new source url for the specified url
returns the id of the search
returns the number of fetched sources
returns the type of the given url
creates a copy of the properties object
returns the number of items in the list
assigns a team to a room
returns the allocation for the given position
sets the result of the player
returns the hash of the room hash
checks if the team is valid
adds an observer to the list of observers
draws a rounded round a given round
adds a team to the team
returns the score of the given round
returns the total score of all the
returns the total number of points in the
returns the of the given team name
returns the total number of points in the
sets the speaker points
compares this team with the specified object for the current score
counts the number of in the given room
this method is called when the model changes
this method changes the state of the spinner
show the absent window
print the current tab
returns the random number between 0 and 1
sets the current team
evaluates the given array of independent and returns the result
returns a random string from the given range
validates the form
shows a child window
add a new entry to the log
returns the panel with the given index
sets the tip text for the property
changes the current model to the given new model
shows a dialog with a given message
launches the
sorts the teams
returns the current status of the current round
saves a tab
closes the window
invoked when the components size changes
this is the entry point method
returns the month of the month
returns the model that is used to represent this
returns the specification of this specification
this method is used to solve the solution
returns the generic bound entity instance
returns the name of the specification
returns the instance of the
returns true if this object is
returns the definition kind of this entity
returns the package definition
returns the type of the
returns true if the parent is
checks if the given entity is already defined in the database
returns the method specification
returns the location of the specification
this method is used to define type of variable
returns true if the is a
returns true if this is abstract
checks if the given entity name is already defined in the database
returns true if this is a final specification
does the given entity exist
returns the solver
returns the solver
sets the horizontal alignment of the component
sets the vertical alignment of the image
returns the polymorphic type
sets the polymorphic type of the polygon
returns true if the path is closed
sets the close path
returns the curve
returns true if the image cache is in the cache
sets the curve
preload all images in the given array of images
draws a shape
sets the size of the base size
returns the shape of the given item
returns the base size of the base
returns the stroke for the specified element
draws a polygon in the head of the arrow
returns the rectangle that fits the specified rectangle
returns a shape that is scaled to the ellipse
returns a shape that is the same height as the path
move the given rectangle down to the given location
returns a shape that is the triangle of the given rectangle
returns a shape that is the right height of the rectangle
returns the path to the specified location
returns the width of the specified item
returns the shape of the specified location
sets the default renderer
returns the stroke for the specified element
sets the corners of the corners corner of the corners
returns the default renderer
sets the default renderer for this renderer
returns the renderer used to draw the edge
adds a predicate to the chain
adds a predicate to the predicate
returns the renderer for the specified item
returns the label for the field
returns the score of the given item
compares the score of the given visual item
sets the type of edge
sets the text field to the given string
returns the arrow type
sets the type of arrow
sets the size of the arrow head
returns the height of the arrow in the current direction
returns the text label of the specified item
returns the width of the arrow head
returns the image name
sets the image url
returns the size of the given row
adds a row to the group
removes a row from the model
removes all aggregate rows from the model
sets the maximum image dimensions for the image
removes all rows from the model
returns the row at the specified index
returns an iterator over the elements of the specified row
returns the aggregates of the given tuple
returns the location of the image
returns the hash code value for the specified tuple
checks whether the given row is valid for the given row
fire table event
sets the width of the line
returns the image for the given item
returns the default width of the line
returns group group for specified group
adds a new parameter to the group
initializes the table with the given table
initializes the table with the given table
sets the visualization
returns the index of the given key
returns the image factory
initializes the visualization
returns the number of columns in the model
returns the horizontal alignment of the text
returns the data source for the specified group
returns the type of the column
sets the horizontal alignment of the text
returns the data source for the given data source
returns the column type
returns the vertical text alignment
returns the number of rows in the model
sets the vertical text alignment
returns the item at the specified row
returns the minimum row number of the row
returns the visual item for the given group
returns the horizontal image alignment
returns the maximum row number of rows
returns the group set for the specified group
returns true if the given row is validated
sets the horizontal image alignment
returns true if the cell at row and column is editable
returns true if the group is in the group
sets the value of the specified row and sets the result
returns the modification count
returns the vertical image alignment
returns true if the given row is visible
adds a group focus to the group
sets the tuple manager to be used for the tuples
sets the vertical image alignment
sets the visible value
adds a group focus to the group
returns the schema
returns true if the specified row is visible
returns the image position
sets the start visible row and display the value
returns the size of the group
invalidates the schema
sets the image position
returns true if the specified row is visible
returns the row at the specified column and column
returns the visual group with the specified group
sets the ending row for the specified row and column
returns true if the specified cell is interactive
returns the focus group for the specified group
sets the value of the specified cell
adds a new row to the table
removes all items from the model
returns true if the cell at the specified row is expanded
adds a new row to the table
invalidates the current state of all items
sets the expanded state of the specified row and row
update the row count
returns an iterator over the items in this list
sets the fixed value for the specified row and column
returns an iterator over the items in the group
returns true if the specified row is highlighted
returns the padding image
returns an iterator of all the predicate
sets the highlighted value
sets the padding image
returns true if the specified cell is clipped
clears the row
returns an iterator of all of the given filter objects
adds the row to the root row
returns the root node of the tree
sets the hover value for the specified cell
adds a new child to the list
returns an iterator of all the group items
adds a child node to the parent node
returns the x coordinate of the specified row
adds a child edge to the end of the list
returns true if the row is valid
adds a child edge to the end of this node
removes a child edge
sets the x and y coordinates
removes the specified edge from the list of children
checks if the given column name is already defined
returns the y coordinate of the specified row
returns the root row of the tree
sets the y coordinate of the specified cell
returns the root node of the tree
returns the column name
returns true if the selection is multiple selection
returns the child row at the specified index
returns the child node at the specified index
returns the start x value for the specified row
notifies all listeners that the specified event has occurred
returns the query
returns the column number for the specified field
returns the index of the child at the specified index
sets the query
returns the search set
creates the component that will be used to display the panel
creates a new search panel
creates a new
returns the index of the child element
sets the start x row and y coordinate
sets the visibility of the given item
sets the value of the given range and the given range
returns the column number for the specified column
returns the first child node of the given node
sets the value of the lo range
sets the value of the range of the given range
returns the y value of the specified row
sets the range of the range of the specified range
sets the value of the range of the range of the specified
sets the interactive group
returns the last child of the given node
sets the minimum value of this object
returns the column at the specified column
sets the y coordinate of the specified cell
sets the maximum value of the range
returns the previous sibling of the given node
sets the value of the low value
returns the previous sibling node of the given node
sets the high value
puts a action into the action
returns the x coordinate of the ending row
returns the next sibling of the given node
returns the column with the given name
sets the minimum value of the range
guaranteed to be overridden to provide
returns the next sibling of the given node
returns the depth of the node
sets the ending x coordinate of the specified cell
returns the model
returns the action with the given name
creates a component
returns the number of children of code node code
adds a column to the table
creates a new jlist
creates a new jcombo box
creates a new checkbox group
creates a radio group
returns the edge of the given node
returns the y coordinate of the upper y coordinate
returns the comparison expression
returns the parent edge of the given node
returns the model property
adds a column to the table
runs the action
returns the number model
returns the parent of the given node
sets the y coordinate of the specified row and y
returns the model object model
creates the component that will be used to display the slider
creates a new horizontal range slider
returns the parent node of the given node
creates the vertical range slider slider
creates a new range slider
creates a new slider
returns the iterator to the specified node
adds a column to the expression
returns the bounds of the specified row
runs the action
returns the object at the specified index
returns an iterator of all edges that are children of the specified
returns the index of the specified object in the list
returns an iterator over the children of this node
sets the bounds and height of the table
adds a column to the table
runs the action
checks if the given node is valid
returns the stroke color for the specified row
returns the spanning tree
adds a constant column
runs the given run before the given time
sets the stroke color
returns the spanning tree for a given node
returns the name of the column
adds a child listener to this component
removes the listener from the list of listeners
returns the start color of the specified cell
returns the value to be used for the tuple
returns the value of the specified tuple
returns the always after activity
always returns code true code value
returns the value of the specified tuple in the current tuple
returns the value of the specified tuple
always throws an unsupported operation exception
returns the comparator used to represent the test
removes the specified column from the table
sets the start stroke color
cancels the action
returns the stroke color for the specified row
removes a column from the list
returns the middle expression
sets the stroke color
removes a column from the list
sets the renderer factory to be used to render the object
removes the listener from the table
returns the fill color for the specified row
sets the table of the edges
sets the columns to the current value
returns the value to be stored in this object
sets the fill color
initializes the link table
returns the renderer factory used to render the component
returns the fill color for the specified row
returns an iterator of the columns
creates a link table
returns the renderer for the specified item
sets the fill color of the specified cell
updates the given table
returns an iterator of names of the names of the column names
returns the number of parameters
returns the fill color for the specified row
returns the bounds of the specified group
update the degrees of the given element
returns metadata metadata for the given field
throws an illegal state exception
sets the fill color
adds a link to the given field
returns the bounds of the specified item in the group
returns an index for the specified field
returns the color of the specified row
removes a link from the list of
returns the number of display in the list
returns the index of the given field
sets the color of the specified cell
returns the display at the specified index
updates the node data
returns the index for the given field type
returns the start text color of the specified row
draws an oval in the model
returns the predicate of this predicate
returns the field key field
adds a predicate to this expression
removes a predicate from the list
removes the given field from the list
returns the number of elements in this collection
sets the start text color for the specified cell
returns the predicate at the given index
sets the value of the condition
sets the value of the given predicate
returns the sub predicate of given predicate
returns a string representation of the operator
returns the left hand side of the expression
returns the right expression
sets the left hand side expression
sets the right expression
returns the operation
returns the tuple at the specified row
returns the end color of the specified row
returns the predicate that is used to test the predicate
returns the then expression
returns the else expression
sets the predicate to be used for the predicate
sets the then expression
sets the else expression
adds a new tuple to the table
sets the end text of the specified cell
adds a new tuple to the set of data
returns the size of the specified row
removes a tuple from the model
sets the size of the specified row and the size of the
tests if the tuple contains tuples
returns the start position of the specified row
adds a new row to the table
returns the number of rows in the model
sets the size of the specified row and sends a
returns a new node with the current node
returns the end size of the row
returns true if the column supports column definitions
adds a new edge to the table
sets the end size of the specified cell
returns true if the given field is allowed to be able to
adds a new edge to the graph
returns the shape of the given row
returns true if the given field can be set to the given
sets the shape of the specified shape
removes the specified node from the graph
returns the stroke for the specified row
returns the value of the specified field
removes the specified node from the list of nodes
sets the stroke used to draw the outline of the specified cell
sets the value of a cell
removes the specified edge
returns the font for the specified row
removes the given edge from the graph
sets the font
clears the edges
returns the font for the specified row
sets the value of the specified cell
checks if the given node is valid
sets the start font
returns the default column value for the specified field
returns the value of the tuple
returns the font for the specified row
revert the given field into the default row
returns the table
sets the end font
returns the number of nodes in the table
returns the value of the specified row as a double
selects a filter
sets the of the given row
returns the nth node n
removes a filter from the model
returns the node from the key
returns the iterator of the table
returns an iterator over the elements in this table
returns an iterator of the tuples of the query
returns an iterator over the tuples of the tuples
returns an iterator of the tuples of the tuples
filter rows and all the rows in the table
returns the projection of the column
sets the projection projection
returns the rows
returns the row filter
sets the filter to be used for the filter
checks if the given edge is valid
returns the iterator at the specified filter
returns the vertex tuple
returns the number of columns in the model
returns the rows at the specified index
returns the parent table
returns the table that was used to edit the table
returns the parent row of the specified row
returns the row at the specified index
returns the number of edges in the graph
returns an iterator for the range of values
returns the edge at the given position
adds a row to the table
removes the specified row from the table
returns the edge of the edge
returns an iterator for the range of values
returns the edge that is associated with the given edge
returns an iterator for the range of values
returns the source node of the given edge
invalidates the schema
returns an iterator for the range of values
returns the node that is connected to the given edge
initializes the table
returns the type of the tuple
ensures that the tuple array contains tuples
returns an iterator for the range of values
returns the tuple at the specified row
returns the target node of the given edge
creates a new tuple
invalidates the contents of the given row
invalidates the current state of the model
returns an iterator over the elements in the specified iterator
returns the target node of the given edge
add a set of set value to the set
checks if the given map name exists in the set
returns the adjacent adjacent edge of the given edge
tests if the specified tuple contains a tuple
returns a tuple set by its name
returns an iterator over the set of mappings in the set
removes a tuple set from the set
removes all the entries from the cache
clears the map
returns the iterator of the nodes
removes a tuple from the table
returns the number of edges in the graph
notifies the model that a tuple has been changed
notifies all listeners that a tuple has been changed
notifies all listeners that the tuple has been changed
returns true if the column supports column definitions
adds a column to the list of columns
adds a column to this type
adds a row to the table
adds a column to this expression
returns the parent row of the specified row
returns the iterator of edges adjacent to the given node
returns the row at the specified row
adds a new child to the specified row
removes the child at the specified index
adds a name to the list of names
removes a named name
removes the object from the database
returns the table
returns the minimum row number
returns the maximum row number
returns the number of rows in the model
clears the current
adds a new row to the table
release a row
returns the row at the specified column and column
returns the row number of the column at the specified column
returns an iterator for the columns of the column
adds a field to the list
returns an iterator positioned at the specified column number and column
returns the number of fields in the list
returns a new iterator for the specified column and column
returns a new iterator over the rows
returns the field at the specified index
returns a new iterator over the specified rows
returns true if the given column is ascending
returns an iterator of the nodes
initialize the tuple
handles the column change event
returns the next element in the iteration
removes the current row from the table
modify the modification
adds a listener to the table
returns an iterator over the neighbors of a node
returns the boolean value of the given node
returns an iterator of the edges of a node
returns the depth of the specified tuple
returns an iterator over all neighbors of a node
removes a listener from the table
returns a shallow copy of this schema
initializes the lookup map
returns an iterator over the edges in this graph
sets the lock to be used to lock the model
notifies all registered listeners that a table model has been
returns true if the lock is locked
returns an iterator over the nodes of the specified node
adds a new column to the table
adds a new code date code to the code code
returns the number of columns in the model
returns an iterator over all the edges of the given node
dispose the resources
returns the column name
returns the column index for the specified field
returns true if the case is case sensitive
adds a leaf to the trie
clears the graph
returns the type of the column
removes a tuple
returns the column type
returns the default value of the specified column
find a trie for the given trie
returns the default value for the field
this method is used to iterate over the tuples
returns a new tuple
sets the default value for the given column
removes the specified tuple from the collection
sets the default value for the field
sets the default value for the field
returns an iterator for the given filter
sets the default value for the field
sets the default value for the field
sets the default value for the field
returns an iterator over the edges in this graph
sets the default value for the field
returns true if the is supported
clears the model
sets the default value for the specified field
search for the query
search the search results to the given string
sets the default value for the specified field
this method is used to convert a field into a string
returns the spanning tree of the spanning tree
sets the default value for the specified field
clears the trie
sets the default value for the specified field
sets the default value for the specified default value
returns the spanning tree for a given node
sets the default value for the specified field
returns the delimiter used to identify the current value
sets the delimiter
compares the specified object with this schema for equality
returns true if the header is printed to the output stream
sets whether the header should be printed to the output
checks if the given schema is assignable from the current column
sets whether the header has been defined
clears the spanning tree
returns the hash code of this object
returns a string representation of this object
returns a new instance of the code table code
the given schema
adds a listener to the graph
sets whether unknown types should be ignored
adds a new handler to the table
returns true if the type qualifier is unknown
removes the specified column from the list of active handlers
creates a new instance of the given type
load data from a query
load data from a query
returns the next node in the node
the given schema
load data from a data table
removes a listener from the graph model
load data from a query
execute a query and returns the result set for the given query
returns true if the given row is cached for the given row
invalidates the cache
reverts to the given row
disposes the table
calculate the values of the current value
sets the internal state of the cache
returns the default value of the property
returns the minimum row number
returns the maximum row number of the field
returns the median row of the table
returns the number of unique unique unique unique
returns the mean value
returns the deviation of the data in the
returns the sum of the data in the matrix
returns the ordinal map of the ordinal
returns true if the resource is read only
returns the value at the specified row
sets the read only flag
sets the value of the specified row
returns true if the cell is editable
returns true if the given class can be set to the type
returns the type of the column
adds a column listener to this model
removes a listener from the list of listeners
returns the default value
sets the default value for the column
sets the default value to the default value
returns true if the type is a type
returns true if the given class can be set to the type
parses a boolean value
parse the text
returns whether the class can be converted to a
parse the text
this method is called by the framework to set the value of
returns the type of the given column
returns the parser for the specified column
returns whether the class can be set to the
parse the text
parse the text
resets the
returns the integer value of the specified row
parse the text
this method is called by the
returns the expression
returns the color of the specified value
returns the value of the element at the specified position
sets the color palette
returns the parser
sets the value of the specified integer
adds a predicate to the end of the list
removes the given predicate from this predicate
clears the current head of the queue
returns the parser for the given type
returns whether the user can be allowed to be allowed to be
returns a clone of this object
returns the spring context for the given
returns a parser that starts a data row
sets the
returns the parser data parser for the specified data row
returns whether the user can set the current
returns the speed limit
sets the limit of the speed limit
returns the value of the specified row as a long
returns the
sets the value of the specified row
sets the
clears the internal list of all the spring
always throws an exception
returns whether this pixel can be converted to a float
inserts a new item into the list
always throws an exception
adds a force to the
grow the size of the given
chooses the high water mark capacity
returns whether this object can be set to a float
adds a new item to the list
chooses the low level of the given interval
removes the specified item from this list
calculates the capacity of the given value
returns the float value of the specified row
returns an iterator over the items in this list
calculates the capacity of the given value
adds a new spring to the current simulation
this method is used to get the force of the
increases the capacity of this tt array list tt instance if necessary
adds a new spring to the
sets the value of the specified row
returns true if the collection contains no elements
adds a spring to the
returns an iterator over the
returns the next prime capacity of the given prime capacity
runs the given timestep
returns whether this object can be converted to a double
returns the number of distinct keys
returns whether the can be set to the current
trims the current size to the size of the current
returns the value at the specified row
sets the double value of the specified column
returns whether this object can be converted to a
returns whether this object can be set to be set
returns the value of the specified row as a boolean
sets the boolean value of the specified boolean
returns true if this object can be used to be able to
returns true if the parser can be set to the parser
returns the string value of the specified row
clears the current state of the table
clones the object
returns true if the key is mapped to the key
sets the value of the specified string
returns true if the specified value is contained in the multimap
add a comparator to the list of elements
removes the given code comparator code from the list
increases the capacity of this tt capacity tt instance if necessary
returns whether the user can be converted to a date
returns the value associated with the specified key
returns whether the date can be set to the date
returns the key value at the specified index
returns the date at the specified row
returns the keys of the specified keys
sets the date
resets the status of the
removes the specified key from this map
invalidates the current state of the object
sets the clipping for this clip
sets the clipping rectangle
trims the capacity of this code code to the
sets the clipping area to the given clipping
copy the values of the given list of values to the current
sets the image to be displayed in the image
returns the scaled image of the image
invoked when the target of the listener has changed its state
returns the scale of the slider
clears the current
adds a visual item to the queue
sets the bezier curve and sets the result
adds a code picking code to the code picking code
sorts the list of render objects
sorts the picking queue in the queue
returns true if the given rectangle intersects the given rectangle
sorts the given array of items in the given array
performs the union of the clip with the specified
returns the identity matrix
returns the clip
sets the current path to the specified rectangle
post a post render
intersect the clip with the specified
returns true if the persistent persist persistent storage
intersects the current clip with the given intersection
sets the value of the persistent
sets the content of the content
intersects the interior of the given rectangle with the specified
expands the current clip with the smallest y value
expands the current clip with the given value
increases the size of the buffer with the specified amount
returns the minimum x value of the slider
returns the minimum y value in the map
returns the value
returns the renderer for the cell
sets the value of the slider
initializes the row map
returns the maximum x value of the image
returns the row at the specified index
returns the maximum y value in the map
sets the slider value
returns the width of the image
sets the value of the field
adds a change listener to the list of listeners
returns the height of the image
removes a change listener from the list of listeners
returns true if this is empty
fires a change event to all listeners
returns true if the value is invalid
returns the tree
creates a new listener
sets up the gui components
destroy the application
stops the activity
returns the text of the current user
sets the text
sets the vertical alignment of the component
request focus for the current keyboard
sets the horizontal alignment of the component
returns true if the quality should be used to be used for
returns the low value of the current value
sets whether the quality should be used to be included in the
sets the low value of the range
sets the lock object
sets the axis type
returns the type of axis
returns the high value
returns the margin
returns the authentication password
sets the number of results to be shown in the result
sets the spacing between the and the specified spacing
sets the high value
prints a string
returns the spacing between the sections
sets the model
print a string and then terminate the line
sets the range of the range
sets the border visibility
returns the model
print a new line
sets the selection model
begins the process
returns the selection model
begins a new header
sets the labels
sets the cancel button
writes a comment
sets the background color of the component
sets the foreground color
sets the font for the current font
this method updates the search
sets the group of the component
sets the query
print a tag
adds a code extension code object to the list of extensions
returns the data object
returns the query text
sets the minimum extent
returns the extension
sets the cancel color
sets the empty empty list
returns the thumb color
start the specified tag
ends the current tag
sets the thumb color
writes the content of the content of the tag
sets the content of the content to the given content
finishes the output
returns the model
finish the output
sets the size of the space
sets the text of the label
sets the model to be used for the model
sets the margin for the left side of the border
sets the layout bounds
returns the layout anchor
sets the anchor anchor
adds a change listener to the list of listeners
sets the x and y coordinates of the given x coordinate
sets the y coordinate of the given location
sets the columns
sets the normalized value for this math ml
returns true if this is a normalized version
removes a change listener from the list of listeners
returns the padding percentage
sets the padding percentage
returns the threshold for the
sets the threshold for the threshold
returns the range model of the model
fires a change event to all registered listeners
returns the orientation of the current frame
sets the orientation of the outline
sets the polygon
this method is called by the custom component to paint the
returns the current format
sets the number format
returns the spacing between the spacing in the
sets the data field
invalidates the current state of the
returns the field data
sets the spacing between the
sets the model
returns the scale of the current image
sets the filter to use for this filter
sets the scale
returns the filter
returns the value of the specified image
returns true if the is ascending
sets the scale
sets the ascending
returns the axis of this axis
sets the model to be used for the model
sets the axis for this axis
returns the frame rate
returns the type of this data type
sets the data type for this type
returns the data type for the specified data type
sets whether the quality should be drawn
sets the given item
this method is called by the framework to set the model
returns the radius of the circle
sets the radius of the circle
sets the orientation of the bar
sets the spacing between the
returns the next component in the given code component code
returns the spacing between the
sets the breadth space
returns the visualization
returns the spacing between the space in the graph
adjust the value of the
sets the number of
returns the length of the
sets the offset of the root node of the tree
returns the linear step for the specified time
returns the offset of the root node
sets the visualization
returns the predicate
returns the number of steps between the specified number of elements
sets the predicate to be used for the predicate
removes all the items from the table
returns the number of visible items in the list
get the table
sets the frame width
returns the frame width
returns the item sorter
recursively lay out the tree
returns the maximum time step for the current timestep
sets the maximum time step to the specified value
returns the force simulator
returns the maximum number of iterations
sets the maximum number of iterations
sets the force simulator
sets the root node of the tree
returns the root of the tree
returns the number of iterations
returns the radius of the radius
sets the radius increment radius
sets the number of iterations
creates a tool tip for this tool
returns the auto scaling flag
sets the group of the group
sets whether the should automatically be automatically resized
returns the minimum radius of the
sets the minimum radius
sets the angle of the bounding box
sets the tooltip for the custom tooltip
resets the visual items to its initial state
calculates the width of the given node
sets the seed of the random seed
returns the number of columns
sets the number of columns
returns the number of rows in the table
sets the number of rows to be displayed
returns the custom tool tip
returns the mass value for the given visual mass
sets the orientation of the bar
returns the
sets the field
returns the
sets the y field of the
returns the length of the spring
returns the field name
sets the fixed field
returns the coefficient for the given element
runs the
sets the location of the node
returns the value of the switch value
sets the value of the switch value
gets the value of the data field property
sets the data field
sets the default font
sets the data type for this type
sets the default stroke used to draw the stroke
returns the default font
returns the image buffer that is used to draw the image
returns the default stroke
adds a new font to the list
adds a stroke to the given ground
adds a new expression to the list
adds a regular expression to the list
adds a predicate to this action
returns the number of bins
adds a predicate to this action
adds a code label code to the code expression code
adds a regular expression to the list
sets the number of bins to be used for the bins
sets the default color for this component
returns the font for the item
returns the stroke for the specified element
sets the ordinal map
sets the default shape
returns the default size
returns the default size
sets the default shape
sets the default size
adds a predicate to this
adds a ground object to the given ground location
adds a new expression to the list
adds a new border to the list
adds a predicate to this class
adds a new expression to the list
adds a predicate to this action
adds a new action to the list
returns the size of the given visual item
sets the field
returns the default color
returns the shape of the given shape
sets the default color
adds a predicate to the current hypothesis
adds a color to the given color
returns true if the is
returns the object that is currently being used in the chain
adds a color to the list
adds a predicate to this predicate
removes all the elements from this chain
adds a color to the list
sets the flag
removes a predicate from the chain
draw the buffer to screen
returns the color for the specified item
returns the minimum size of the
this method is called by the framework to initialize the component
sets the minimum size of the range
called by the framework to perform the cleanup
returns the maximum size of the range
sets the maximum size of the range
sets the default size
sets the y coordinate of the
sets the size of the
returns true if the size is
sets the y coordinate of the y axis
sets the visualization
returns the number of actions in the list
adds an action to the list of actions
returns the predicate that is used to evaluate the filter
adds an action to the list of actions
sets the filter predicate
returns the element at the specified index
removes the specified action from this action
removes the specified element from this action
this method is called by the subclass to perform a quality
sets the fields color
sets the predicate
returns the distance to the distance
returns the distance to the current
sets the distance to the specified distance
sets the distance to the specified distance
returns the sources
runs the thread
sets the dublin core module sources
insert the methods description here
visits the given node
cancels the activity
adds a listener to the list of listeners
schedule the given time in the schedule
returns the value of the key associated with the key
removes a listener from the list of listeners
returns the at the specified key
returns the activity
runs the given code code and returns the
returns the activity run for the given key
cancel the given key
puts a key value pair into the map
zooms the current image to the given zoom point
returns the maximum scale
sets the maximum scale
returns the minimum scale
sets the minimum scale
returns true if the zoom item is currently over
sets the value of zoom item item
renders the visual item
move the component to the specified mouse event
runs the action
sets the filter
returns the filter
sets the margin
check if the given item is filtered
sets the highlight highlight
clears the region
clears the
returns true if the current thread is running
adds a new listener to the list of listeners
removes a listener for the paint
notify the listeners that the paint has been painted
notify the post paint paint
adds a listener to the list of listeners
removes a listener for the item bounds events
checks if the bounds of the given item is moved
adds a listener to the control
removes a control listener from the list of controls
edits the text of the given item
stops editing the editing
returns the date at the specified row and column
runs the
handles a file
saves the key to the file
executes the command
called when the user selects the
removes the current object from the list
registers an observer for the given observer
handle the notification when a new note is selected
returns the item data scope
this method is called by the framework to handle the
this method will be called by the server to notify the data
show the given panel in the panel
this is the entry point method
initialize the model
initializes the controller
called by the command factory when the
initializes the model
adds a sub command to this class
executes the given code notification code
initializes the view
registers a new command
adds a new observer to the list
notify all registered observers that the user has changed
returns the notification
removes a command from the list of the controller
registers a new mediator
registers a proxy for the given proxy
removes a mediator from the
removes a proxy from the list of proxy resources
retrieves a specific mediator
retrieves the proxy for the given proxy
sends a notification to the given type
notify the observers
this method is called when the model is initialized
register a proxy for the proxy
removes a proxy from the proxy
retrieves the proxy for the specified proxy
called by the framework to initialize the view
notify all observers that the given has changed
initializes the controller
registers a new mediator
executes the given command
registers a new command
registers an observer for the given observer
removes a mediator from the list of observers
removes a command from the list of command listeners
get a mediator for the given name
this method is used to connect to the given output
disconnect from the server
registers a pipe
returns a message filter that is a message in the
handle the pipe pipe message
handle a message received from the pipe
returns the category dao
sets the category dao
returns the string representation of the
sets the limits of the range
returns the minimum value of the range
returns the maximum number of in the
limits the range of the minimum value and min max
sets the flag
returns true if the is
sets the
sets the view
at startup create and show the main frame of the application
this method is called by the
terminates the application
returns a new instance for the given object
lookup a bean by its name
registers a bean with the given bean
unregister a bean
declare a bean
a bean
evaluates the given object and returns the result
sets the magnification of the atlas
adds a new object to the list of objects
draw the sprite
returns the bounds of this object
returns a copy of this variables object
returns the view of the given shape
returns the identity of the object
sets the rotation of the camera
subtract a term from the term
returns the unified term of the given term
returns the code clause code object representing a
applies the rule to the given rule
creates a goal for the given term
sets whether the should be used as a
updates the menu
creates a predicate term
parse the
this method is used to finalize the
starts the recording of audio
stops the record
pastes the given text from the current selection
deletes the selected element
record the recording button action performed
adds a point to the graph
closes the given code code
adds a new points to the graph
adds a new points to the list of points
this method is called when the audio button is pressed
zoom to the slider slider
mouse click
mouse pressed method
mouse released method
mouse drag event
mouse entered event
sets the zoom level
run the test
this method is called by the framework to run the
returns the name of the full name of the
converts a td td to a table
begins a new entry in the specified table
called when the entry is reached
prints the result of the result
test the creation of a new
handle an error
called when the uncaught exception is thrown
handle the exception
handles an error
throws a code security exception code if the calling
creates a label for the current
prepare the socket to be sent to the server
returns the host name of the host
returns the port of the socket
creates the delegate for the code delegate data code object
disposes the delegate delegate
called when the thread started
called when the thread is finished
handle the connection event
process a thread error
creates a new instance of the data structure
factory method for instances of the factory
disposes the instance
returns true if this is a final valued
returns true if the current thread is running
returns true if the current thread is terminated
writes the given text to the current text
converts the given text to a text
clears the current list of head
resets the current state of the head of the queue
called by the framework to start the thread
aborts the current process
adds the current
p this method is invoked to indicate that the action is releasing
clears the current count
adds a code code to this code tuple code
removes the specified element from this collection
sorts the data in the specified range
swaps the indices at the specified indices
reverses the elements of the specified range
deletes the range of the specified range of the specified range
sets the element at the specified index
removes the element at the specified position in this list
removes the given index from the list
this method converts the given text to a text
dispose all the
this method is used to allocate a new instance of the
frees up resources associated with this object
returns the buffer limit
sets the buffer limit
pop the current element from the stack
discard the given object
returns true if there are more elements in the list
returns the next element in the list
returns true if there is a previous element in the list
returns the previous element in the list
returns the index of the next element in the list
returns the previous index
sets the element to the given value
adds a new object to the list
removes the last element from the list
sorts the given list by the given comparator
compare two arrays
clears the collection
sorts the given collection
returns the parent of this node
returns the value of the code property code
appends the given code string code to the given code
returns the default page format
appends a new code line code to the end of this
prints out the current state of the job
creates a desktop pane for the given desktop
start a new thread
this method is called when the animation is waiting
this method is called when the user modifies the preferences
creates the menu
sets the icon for this icon
creates the main menu
returns the window
returns the frame that is associated with this frame
closes the current user
this method is called when the user modifies the preferences
returns the icon
sets the icon
returns the icon for this icon
sets the icon
returns the frame
returns the window that is currently being used for the window
returns the frame that is currently being used for the frame
notifies the change listener if the value changes
handles the value of the change event in the spinner
this method is called when the user modifies the preferences
handles the input change event
this method is called when the user modifies the preferences
notifies the change listener if the value changes
handles the input event
factory method for the model
handles the value of the change event in the list
insert a new instance in the database
called when an element is deleted
this method is called when the user modifies the preferences
called by the when the element is hit
this method is called when the user modifies the preferences
this method is called when the selection is selected
returns true if the viewport should scroll the height of the viewport
returns true if the viewport is in the viewport
factory method to create a component pane
handles the selection changed event
handle the list selection event
returns true if the object is not draggable
load the file from the given file
load from a file
load a reader from the reader
adds a tab to the tab
adds a new row to the table
adds the current row to the table
returns true if the popup menu is triggered
this method is called when the popup menu is shown
commits the current row
process mouse event
invoked when the mouse has been clicked on a component
called when the user advances the current user
mouse pressed method
invoked when a mouse button has been released on a component
invoked when the mouse enters a component
removes the selected row from the table
invoked when the mouse exits a component
notifies the input listener that the input value has changed
adds a number of to the current
returns true if the given number is a valid number
returns the current control value
sort the
load the current format
this method is called when the user modifies the preferences
creates a new code formatter factory code
returns the control value
sets the value of the control
this method is called when the user modifies the preferences
starts the thread
add a button to the control
sets the simulation
adds a button to the panel
returns true if the list of instances allowed to be allowed
sets whether the allowed instances are allowed to be allowed
performs the for the given frame
invoked when an action occurs
returns the object to save the given object
called when the error is detected
sets the seed for the seed
returns the seed of the current seed
sets the seed of this seed
invert the of this
returns the
clears the current state of the map
called before the object is before the given name
returns the id for the given name
returns the for the given
this method is called by the framework to perform the gc functionality
selects the given select statement
this method is used to lock the lock
throws a unsupported operation exception
called after the initialization is executed after the initialization
this method is called when the start of the start of a
handle an error
pause the specified delay
run the test
returns the current logger
returns the error handler
executes a job
starts the processing of the current thread
aborts the current phase
clears the current position
initializes the buffer with the given byte array
initializes the buffer with the given byte array
returns the number of bits in the
clears the buffer
skips the specified number of bits
returns the number of available bits in the current
writes a boolean value to the output stream
writes the specified byte to this output stream
writes the specified short value to the stream
reads the next byte from the input stream
reads the contents of the given array of bytes
writes the specified character to the output
writes the specified code int code to the current output
reads a boolean from the stream
write a long value to the output stream
reads a byte from the buffer
reads an unsigned byte from the input stream
writes a float value to the output stream
reads a short from the bit stream
writes a double to the underlying output stream
reads an unsigned 16 bit integer
writes a string to the output stream
reads a char from the stream
writes the string to the output stream
reads a 32 bit integer
reads a long value from the stream
writes the string to the current character
reads a float from the current input stream
reads a double from the current stream
reads a string from the current stream
creates a new code text producer code object
returns the encoding used for the encoding
executes the step
returns the padding
returns the index of the run
creates a new code code object
adds a listener to the list of listeners
removes the given listener from the list of listeners
returns the maximum line length
propagates the event to the given event
this method is called when the user selects a one
this method is called when the debuggee is dropped
this method is called when the event is fired
resets the current state of the
instantiate the object
instantiate the given object
instantiate the specified
called by the when the
the given object
resets the internal state of the activator
flush the current state of the cache
appends the specified string to the end of this
returns the encoding used for the encoding
appends the given character to the destination
writes the object to the destination object
writes code len code bytes from the code byte array code
writes code len code bytes from the specified byte array
flush the current state of the current state
writes a boolean value to the destination
writes a single byte
writes the specified short
writes the given char
writes an integer
writes a long value to the output stream
creates a new
writes a float
writes a string
writes the string to the destination
writes a portion of an array of characters
writes a character array to the output stream
writes a portion of a string
writes a string to the destination
ensures that the new line is not null
returns true if the line is new
writes the time to the given time
this method is called by the
writes the time to the time
returns the width of the current font
returns the title of the user
write the content of the given content to the output stream
sets the width of the current image
turns off the output
returns the locale
this method is called when the user modifies the destination
increment the current indent
creates the children of this node
returns true if the destination is a formatting
called before the group is created
decreases the current indent
called after the group is closed
returns the threshold for the
sets the threshold for the threshold
begin a new array of type
ends the given array
writes the current item separator
write a single instance of the given class
returns the encoding used for the encoding
start the element
end element
this method is called when the text is found in the text
clears the current state of the
start the document
ends the current document
this method is called when the user selects the
start a new entity
ends the entity
this method is called when the user selects the
this method is called when the user selects the
this method is called by the parser to receive a comment
this method is called when a model element is changed
this method is called when the entity is
returns true if the given feature is a parent
write the attributes to the given output
writes the to the xml file
called when the user presses the end of the
returns the tag of the tag
assigns the given code code to the code code object
sets the feature
returns the value of the specified property
returns the tag that is used to render the tag
start the element
sets the property value
end the element
this method is called by the code text code to
sets the parent of this component
adds a new element to the list
returns the parent
returns the instance of the
sets the entity resolver
logs the event
this method is called when the user selects the
returns the entity resolver
sets the handler
returns the dtd handler
sets the content handler
returns the content handler
sets the error handler
returns the error handler
sets the lexical handler
returns the lexical handler
sets the handler that will be invoked by the handler to receive
returns the declaration associated with this declaration
parse the given input
parse the given string
returns the public id of the locator
returns the system id of the system
returns the current line number
returns the column number
returns the next character in the specified buffer
sets the function name
sets the value of the argument argument
checks if syntax is used
returns the error message for the error
adds the arguments to the function
adds a list of arguments to the list of arguments
define the arguments function to define the arguments
define the argument of the function
returns the constant name
returns the index of the argument argument
sets the constant name
returns the license
returns the argument with the specified name
returns the argument at the specified index
adds a new base type to the list of the elements in
returns the number of parameters
sets the number of parameters
returns the number of arguments
removes arguments from the function list
removes arguments from the function
removes all arguments from the function
returns true if verbose mode is enabled
adds a constant to the constants
adds a new constants to the list of constants
returns true if the expression is a recursive
define the constant value of the constant
returns the number of times the task was computing
returns the index of the constant constant constant constant
sets the argument name
returns the status of the syntax status
sets the expression string
returns the constant pool name
returns the constant pool constant at the given index
returns the argument type
returns the number of constants
removes constants from the constants
checks if the syntax expression is legal
this method is called when the user selects the init expression
removes constants from the constants
returns the error message
returns the value of the argument as a double
removes all constants from the list
adds the arguments to the command
adds functions to the list of functions
adds a list of arguments to the list of arguments
define the arguments of the function
sets the expression string
define the argument of the argument
returns the index of the function in the function
returns the index of the argument argument
returns the function that is used to evaluate the function
returns the argument with the specified name
returns the argument at the specified index
returns the function at the specified index
returns the number of arguments
returns the number of functions in the function
returns the expression string
removes the given arguments
removes functions from the list of functions
removes arguments of the argument
removes functions with the given functions
removes all arguments from the argument list
removes all functions from the function
adds a constant to the constants
adds a new constants to the list of constants
define the constant value of the constant
clears the expression string
returns true if the user wants to be suppressed
returns the index of the constant constant constant constant constant
returns the constant value of the constant constant
returns the constant constant at the specified index
returns the number of constants
returns true if the expression is a recursive
removes constants from the argument
returns the number of computing the second
removes the specified constants from this constant pool
removes all constants from this list
adds functions to the list of functions
returns the index of the function in the function
returns the function with the specified name
returns the function at the specified index
returns the number of functions in the list
removes functions from the list of functions
removes functions with the given functions
removes all functions from the set of functions
returns a clone of this argument
returns the verbose mode
returns the recursive mode
returns the time in seconds
adds the arguments to the list of arguments
adds a list of arguments to the list of arguments
define the arguments of the argument
sets the argument value
define the argument of the argument
returns the index of the argument argument
returns the argument with the specified name
returns the argument at the specified index
returns the number of arguments
sets the value of the argument argument argument
returns the value of the argument argument
removes the arguments of the argument
removes all arguments from the argument list
removes all arguments from the list
adds the constants
adds the given constants to this list
define the constant value of the constant pool
returns the index of the constant pool entry
returns the constant pool name
returns the constant pool constant at the given index
returns the number of constants
removes the constants from the constants
removes the constants from this constant pool
removes all constants from this list
adds all functions to the list of functions
returns the index of the function in the given function name
returns the function with the specified name
returns the function at the specified index
returns the number of functions in the list
removes functions from the list of functions
removes functions that are registered for the given function
removes all the functions from the list
sets the token at the given position
decrease the position of the given position in the list
removes the given position from the list of
remove the given position from the list of
remove the given positive integer from the list of
calculate decrease decrease position
removes the given value from the list
clears the parameter value
this method is called by the user to change the current position
moves the given argument to the end of the list
removes the given token from the current position
removes the given token from the current position
the given number of tokens to the current position
the current token
decrease the position of the
the given value to the current token
decrease the position of the
the given value to the current position
the given value to the
the given position in the list
decrease the position of the
the current token at the given position
decrease the position of the
performs a on the given token
the current token
the given position in the current position
decrease the position of the
decrease the position of the
decrease the position of the
decrease the position of the
decrease the position of the
decrease the position of the
the given value to the current position
the current token
the current token
this method is called when the is closed
the given array of tokens to the value
update the missing token
the given position in the vector
removes the given from the list of
checks if syntax is allowed
checks the uniqueness of the given parameter
check if the parameter is invalid
checks if the parameter is unknown
adds the arguments to the list of arguments
adds the comma separated list of functions to the function
adds words to the constants constant list
adds a token to the token
copy the tokens into the next token
this method is called to parse the stream
returns the help help page
stops the
returns the number of bytes written to the file
load the file from the file
runs the
returns a string representation of the object
returns true if the tagged geo element is tagged
returns the number of bytes loaded in the file
gets the
returns the url of the
returns the
returns the url of the url where the file is located
returns the url of the
returns the input stream for this input stream
returns the preview input stream for this input stream
returns the sample in the database
returns the preview of the preview
returns the extension id for the given extension
create a new audio sample with the specified id
returns an input stream for the audio input stream
returns an input stream for the given id
sets the cache directory
returns the id of the given id
returns the id of the given id
returns true if the given id is in the xml schema
checks if the given query is cached for the given query
returns true if the file is cached
returns the search result for the given query
returns the xml file that is used to parse the given file
this method is called when the player has changed
the file content to a file
returns the search hash string
creates the cache directories
logout the user
checks if the given page is valid
the given url
the url to the specified url
closes the reader
returns true if the filter is a filter
load an image from the given name
returns the external representation of the object
compares the specified object with this instance for equality
returns a clone of this movement
returns the target
returns the hash code of this code bit mask code
sets the target device
returns true if the given phase is in the current phase
returns the bit mask of the current bit
returns a string representation of the current phase
returns true if the dimension is equal to the dimension
returns the hash code of the object
returns the elements at the given position
validate the sections of the sections
returns a string representation of this object
sets the name of the
returns true if this is a real real
returns true if this virtual virtual is virtual
returns true if this is a
sets the id
returns true if this is a
rotates the view as a clockwise
returns the external representation of the external file
returns the clockwise direction of the clockwise
rotates the view clockwise
returns a clone of this move
returns the clockwise direction
sets the name of the
returns the direction of the
returns true if this is a north east side of the triangle
sets the author of the document
returns true if this is a east side
returns true if the south is
returns true if the west is a
sets the series of the series
sets the skill
sets the skill
returns true if the y axis is vertical
move the direction of the direction
returns true if the horizontal area is horizontal
clears the rotation of the sprite
translate the given x y coordinate by dx
compares this object to the specified object
rotates the sprite
returns true if the object is equal to this one
sets the minimum number of players in the game
returns the string representation of the current
returns the hash code for this object
load the robot
returns a string representation of the object
returns the number of cards in the pile
this method is used to draw the card
discards the card from the discard stack
gets the value of the robot id property
shuffles the organisms pile
sets the maximum number of players in the game
fires a persistence event
fire an persistence event for a persistence attribute
sets the grid width
sets the absolute value of this object
sets the height of the grid
sets the destination of the destination
returns the value of series
returns the destination of the destination
decrement the distance
set the value of player id
decrement the distance of the current distance
clones the object
returns true if the device is flat
translate the given coordinates into the given coordinates
is the given active
sets the direction of this ray
returns the current movement
returns the string representation of the object
returns the effect flag
sets the effect
registers the given handler to the logger
returns true if this is a type
returns true if the is high
returns true if this is a type
returns true if this is a type
returns a string representation of the object
sets the value of name
sets the value of image filename
sets the value of the identity
sets the score of the player
sets the value of flags
sets the status of the player
set the endpoint address for the specified port name
returns the
sets the
sets the value for this
sets the weekday value for this
sets the time pattern value for this
returns the id of the
sets the id
sets the job code description value for this job
returns the enable state of the
sets the enable state of the
returns the job code
sets the job code
sets the value for this
returns true if the should be matched
sets whether the should be automatically automatically
gets the smart card attribute of the object
sets the smart card
returns true if the field is a fingerprint
sets the fingerprint
sets the model number value for this model number
sets the other name value for this other
sets the trigger value for this event
sets the admin level value for this admin order
sets the firmware version value for this
sets the value for this
returns true if password is used to use password
sets the terminal name value for this
sets the department description value for this seller
sets the jpeg photo
returns the number of registered users
sets the password
sets the registered users
sets the access right value for this access rule
returns the maximum number of users in the list
sets the access method value for this
sets the maximum number of users
sets the from value for this
sets the registration time value for this public time
sets the last update value for this
sets the value of the to property
returns the
sets the last check value for this
gets the value of the last check status property
sets the employee name value for this employee
sets the value of last check status
sets the users
sets the value for this
gets the maximum user
sets the value for this
sets the maximum user
returns the id of the
sets the id
sets the current status value for this job
returns the quick access flag
sets the quick access value for this
sets the time spec value for this
returns the
returns the id of the
sets the
sets the id
sets the value for this
sets the name value for this
sets the terminal type value for this merchant item attributes
sets the description value for this merchant item attributes
sets the enable value for this
sets the value for this
sets the value for this
sets the fingerprint security level value for this vaccination type
sets the status value for this
sets the value for this
sets the value for this
returns the
sets the
sets the id
sets the
pop the current object from the stack
returns the list of elements in the queue
finds the closest in the given point
returns a new with the given point
creates the scroll pane
exports the given reference to the given writer
writes a line to the output stream
save the screenshot of the file chooser dialog
prompts user to approve the file
creates a file name with clipped files
returns a file filter that accepts the file filter
returns the insets of the border
called when the user selects the menu item
sets the type of bracket
returns the pass of the random string
returns a random word in the given word
returns a random number from the random number generator
writes the markers
returns the list of users
returns the shared list of users
prepare the output for the output
resets the current output
this method is called when the survey is started
end the current page
begins a section
end section of the
closes the current music
invoked when a mouse button has been pressed on a component
invoked when a mouse button has been released on a component
invoked when the mouse has been clicked on a component
adds a new listener to the list of listeners
returns true if the user can execute the current page
show popup menu
displays the next question in the list
this method is called when the user selects the menu item
sets the current response
compares this object with the specified object for order
sets the order of this object
shuts down the application
compares this object with the specified object for order
runs the
handles the action event
prepares the panel for the layout
returns a new progress bar
cleans up the file with the given folder
reads the file
read the file from the file
reads the from a file
returns the audio header
sets the
sets the
gets the value of the property
sets the
sets the
sets the
gets the value of the property
delete a file
returns the genre of the song
commits the current
returns the tag
format the text to display as a text
sets the tag for this tag
returns the name of the display
gets the value of the property
returns the length of the media
sets the
gets the value of the property
sets the
sets the location of the file
returns the length of the string in minutes
sets the of the audio
returns the tag info for this plugin
returns the amount of time in milliseconds that the peak is
returns true if the given file is accepted by this filter
load extended information from file format
returns a new instance of tag info impl class
load the file from the given file
load the audio file format
sets the bands of the table
update the sliders
returns the
sets the
called when the user presses the cancel button
invoked when the user presses the cancel button
adds a listener to the basic player
inits audio ressources from a given audio stream
inits audio ressources from input stream
stops playback of the audio playback
resumes playback of the playback
notify the event listener
sets the pan
sets the gain value for the specified gain
sets the stylesheet
sets the parent
returns the style for the style sheet
returns the path to the base path
gets the
returns the current frame
invalidates the component
returns the tool bar
returns true if the input type is ready for this player
sets the work element of the project
returns the work
registers a new workbench
removes a work context
close all work
undoes the last undo operation
redo the last command
creates the file
updates the tool type
invoked when a mouse button has been released on a component
invoked when a mouse button is pressed on a component and then
updates the current tool
this method is invoked to indicate the tool to be invoked
pop a tool and returns it as a pop tool
select the current selection
select the current selection
returns the root
returns the workspace space
update the context of the current context
this method is called when the workspace is connected
this method is called when the component changes
returns the component that was the mouse moved
returns the selection layer
mouse mouse mouse moved
reloads the list of all the
this method is invoked when the new component is deleted
invoked when a key has been typed
invoked when a key has been pressed
invoked when a key is released
expand the tree node with the given node
sets the step
invoked when the mouse has been clicked on a component
mouse pressed method comment
invoked when a mouse button has been released on a component
returns the
invoked when the mouse enters a component
sets the mode
sets the distance between the camera and the camera
sets the eye distance
executes the action
invoked when the mouse exits a component
gets the value of the type property
runs the action
wait for the scape to be ready for threads
called by the application to initialize the pass
clean the pass
runs the
invoked when a mouse button is pressed on a component and then
invoked when the mouse button has been moved on a component
sets the flag
creates a new window
creates the window window for the given window
mouse wheel mouse wheel listener
recreates the window with the specified width and height
sets the renderer to use
closes the current context
invoked when a component gains the keyboard focus
called by the framework to indicate the state of the
sets the icon for this icon
sets the current canvas
this method is called by the reactor to paint the canvas
invoked when a component loses the keyboard focus
starts the
sets the number of blur passes
waits for the current thread to wait for the wait for the
returns true if the canvas is in context
sets the settings
returns the pass
the given user
logout the user
returns the cmd command
check if the error is invalid
check if the given handle is a handle
release the handle
disconnect from the server
get the interface instance
disconnects from the server
deletes a directory in the guest operating system
deletes a file in the guest operating system
returns true if the guest guest is a guest system
checks if the guest file exists in the guest system
returns the power state of the machine
returns the current snapshot of the given name
returns true if the power supply is off
returns the state of power power power supply power
returns true if the game is suspended
this method is called when the user disconnects from the guest
power off the power supply
power on the power supply
suspend the paused
this method is called by the system
returns the size of the memory memory
returns the number of cpu
returns the real statement
returns the real connection
returns a real real driver
creates a real driver
connect to the database
returns true if the given url is in the database
returns the current major version number
returns the minor version number
returns true if the jdbc driver is
initialize the filter
this method is called by the
this method is called by the reporter
start the tracker
returns the value of the field aggregator name
stops the tracker
returns the elapsed time in milliseconds
applies the filter to the given filter
initialize the filter
destroy the service
creates a new instance of the given tracker name
returns the default aggregator aggregator
creates a new tracker
this method is called by the reporter
sets the given string to the message
start the tracker
creates a new
creates a new instance of the given exercise
returns the elapsed time
this method returns the ports of the server
sets the port type
returns the port type
returns a string representation of the object
this method is used to create the data port
calculate the pressure
sets the port type
calculate the pressure in meters per pressure
calculate the equatorial pressure mm pressure
returns the port type
pressure pressure pressure
returns the pressure
stops the
returns the pressure in meters
returns the pressure in meters
returns the slope of the
returns the offset of the pressure
sets the current units
returns the voltage value
returns the value of the offset voltage
returns the units
returns the voltage output
sets the rate of the
sets the units of the units
returns a string representation of the current pressure
returns the rate of the
calculates the wind wind speed
this method is called when the sensor information is available
frees all ports of the sensor
returns the
this method is called when the is grabbed
returns the current time
this method is called when the sensor data is selected
this method is called when the sensor data is selected
returns the quit flag
sets the
test method for
create an instance of
returns the scenario tree
returns the error strategy that caused the error to the
returns the pending pipeline for this task
returns the current
returns a new code key keywords code
returns a reporter that is used to represent the
dump the contents of the tree to the
open the window
this method is called when the user selects a new user
this method is called when the end of a
this method is called when a new object is created
this method is invoked when a mud item is created
this method is called when a player is created
this method is called when a mud room is created
sends a line of text to the server
move the player to a room
quits the application
called when the user quits the user
run the test
load a file
trims the given lines to the end of the line
called when a invite is invited to a given channel
returns the stats for a given channel
starts the thread
log the given line
called when an error occurs
returns the user who is currently connected to the user
runs the
get a vector of strings from the xml
returns the string value of the property
returns the value of the property as a boolean
returns the value of the property as an integer
adds a file to the list of files
run the timer
test of switch method of class
check the goto and goto and goto the current sentence
calculates the of the
checks if the current state is valid
returns the of the given input
checks if the input is valid
checks the
checks the current state of the
returns the of the input stream
returns the of the input stream
factory method for creating the drivers factory
checks if the input is valid
checks if the input is valid
pushes an item onto the stack
returns the maximum depth of the file
mark the field references
this method is used to execute the algorithm
rename a field reference info
returns the type name and type
compares two objects
compares two records
returns the id of the group class
executes the
this method is used to load the from the
counts all references to references
this method is used to execute the attribute
returns true if the instruction opcode is allowed to be removed
returns a map with the values of the given phase
sets the field put
sets the status of the field
generates the
insert a new in the given field
generates the code for the method
find the class for a class
returns true if the given code code is contained in the
returns true if the given instruction is overlap
returns the number of occurrences of the given element in the group
returns a path containing all the of the current
returns a list of all the that are currently in the
checks if the is valid
calculate the stat of the current estimator
clears the current frequency
this method was created by a smart guide
returns the internal internal state of the
returns the total number of in the given
returns the value associated with the specified key
returns the of the
combine all the and their values
returns the type of the instruction
this method is called when the game is over
returns the highest frequency in the reverse
get the index of the first occurrence of the specified
creates the frequency record
creates a new instruction
parse the instruction bytecode
this method is invoked when the instruction is
returns the type of the given type
returns true if the given attribute is a valid
checks if the given attribute is a legal instruction
check that the given class is correct
the instruction
this method is called when the stack is about to be written
adds a new instruction to the list of instructions executed instructions
the instruction
sets the type of the frame
returns the type of the element at the top of the stack
returns true if the literal is a four literal value
mark the current mark as a mark
returns the number of blocks in this block
sets the super classes
sets the of the
execute the
execute the method
execute the
creates a new map of
compares two objects
sets the addresses to the
get the method or null if the address is a
returns true if the value of the small code attribute code is
returns the address of the
sets the address of the
this method will be called from the fsm to execute the given
add a method call info object to the list of
returns the whole graph
sets the node
returns a new id for the given instruction
save a slot in heap
checks if the class is a legal class
check if a class has a subtype value
sets the state of the
called by the thread to notify the thread that the execution of
sets the thread started multiple times
adds the given function state to the given function
sets the id of the
returns the type of the function
adds a procedure to the given procedure
returns the pointer to the pointer
saves the frame to a frame
adds a child node to the stack
returns a string representation of the object
adds a new to the
validate the access flags
adds a new path to the list of files to be done
called after the write method is called after the current thread is
returns the key of the descriptor
returns true if the package is a package
returns true if the interface is a interface
creates the pools
returns true if the public key is public
adds a log entry to the log file
returns true if the protected flag is set
returns the pool for the given id
adds a log entry to the log file
returns true if the method is public private
adds a log entry to the log file
returns true if this class is static
writes the logs to the log file
returns true if the object is abstract
returns true if the field is a final
returns the path to the source file of the file
returns true if the native flag is set
returns true if this is a native abstract native
returns the class of the given class
returns the code attribute code that is associated with this
returns the code exception code attribute of the code attribute code
returns the index of the element in the pool
returns the index of the element in the pool
clears the pool
adds all the elements in the pool to the pool
sorts the table in the pool
sorts the given array of objects
validate the pool
removes the specified element at the specified index
returns all the pool objects from the pool
update the length of the instruction
returns the current size of the pool
returns the current size of the current
returns true if the instruction is a branch instruction
returns the number of operands
sets the opcode code
returns the value of the current value as a long
returns the maximum size of the
replaces the given code code by the specified
a
executes the processing
prints the given byte array
returns the name of the given method
returns the class name of the class id
print the packet
executes the processing of the current thread
returns a string representation of this object
returns a string representation of this object
returns true if the input stream is ready to be ready
mark the current position in the stream
returns the protocol used by this
returns the instance of this
returns the tree
removes the head of the queue
adds an object to the queue
check if the given packet is a duplicate of the packet
update the parent of the
returns true if this route has a route
returns the parent of this node
returns the of this
sets the parent of the new parent
sets the address of the kanji
checks if the object is a valid
the of the
prints the current
prints the current state of the
prepares the additional information for the
adds a new info to the list
returns true if the info contains a info
make a radio packet containing a local
the
prints the
returns the initial information
resets all the values to the new values
this method is called when the user selects the current shot
prints the current sequence
returns the route for this route
prints the current state of the
prints the
returns the route for this route
this method is used to determine the number of the given target
insert route to the route
searches for the route for the given route
this method is called by the reactor to send a packet to
prints the current loop
adds a new data to the queue
sets the distance to the specified distance
sets the forwarding flag
returns the target node of this node
this method is used to send a new packet to the data
sets the uptime
returns the uptime time
returns the payload size in bytes
prints the
sets the time to be used for the time
route a route request to the given route
returns the length of the radio group
sets the broken
sets the address of the node
prints the current
increment the sequence number
prints the packet
this method is called by the thread
sets the off zero size
sets the on attribute of the object
the leds blink
create an instance of
returns the of the
returns an instance of the mote driver
returns the serial driver
returns the radio driver
returns the link to the link estimator
starts the thread
stops the server
sends a packet to the server
returns a packet containing the packet
make a packet containing the payload of the packet
returns the maximum length of payload in the packet
a packet
returns true if the is
route a message to the destination
returns the name of the error
sets the granted authorities granted authorities
flushes the report queue
runs the
notify the listeners that the data has changed
adds a header to the list of headers
returns the file name of the given file name
guard for the guard
returns true if the given class is a byte array
generate a new instance of the given type
adds the page to the page
returns the border of the border
returns the slide center of the slide center
gets the value of the border type property
fills the diagram with the specified width
creates the component that is used to create the content
clone the content of this object
clone the content of the content
returns true if the numbering is enabled
inverts the
returns the data structure for this diagram
sets the ordering level
marks the given file as modified
returns the ordering level
returns true if the current entity is saved
returns the image maker
creates the help menu
saves the current diagram
adds a new diagram
returns the current diagram
returns the diagram pane at the specified index
returns the index of the diagram
closes all the
returns the last display location
load the file chooser
called when the user selects the state of the listener
this method is invoked when a mouse button has been clicked on
updates the edited text
creates and returns a menu with the same name
returns the link controller
returns the peer of the peer
returns the peer of the z coordinate
returns the color of the selected item
sets the color of the selected item
returns the node group with the given name
switch to the given mouse move
returns the node group for the given node
returns the name of the node group
adds a group to the group
this method is called when the user selects the
removes the given tab
returns the origin of the image
compute the size of the area
prepares the image for the given area
returns the node
returns the image of the current area
removes the given node from the group
sets the content of the content
exports a file to a jpeg file
updates the position of the group
returns true if the content of the content has content
export a export file
returns true if the edit operation is not editable
removes the specified group from the group
exports the image to a file
this method is called when the user wants to save the application
enables or disables the
rename group name
sets the end of the line
returns the content of the content of the document
sets the end z point
removes the current group
sets the ends of the b arrow b
save the diagram
removes all groups from the group
returns the end point of the line
sets the text of the text
returns the z coordinate of the end point of the z axis
returns the text of the text
returns the options
displays the given dialog
display the current frame
sets the title
updates the presentation
returns the distance between the point and the point
adds the component to the content pane
removes the specified component from the list
returns the distance between this point and the specified point
returns the size of the content
destroy the container
returns true if the conflict is conflict
sets whether the conflict is not chosen
sets the color of the component
creates the action
adds the effect of the effect to the
make iconified ellipse action
returns the abstract action for the given action
removes a node from the list
returns the action factory for this factory
adds a new edge to the graph
adds a new leg to the
removes the specified edge from the graph
remove a leg from the legs
returns the element at the specified index
locate a given item
returns the number of elements in the list
adds an item to the list
removes the specified item from the list
called when the listener has changed
clears the content of the content of the content
returns true if the state of this state has changed
returns the diagram data
returns true if the given item is contained in the list
adds a new consumer consumer
removes a consumer from the list of consumers notified
returns true if the given edge contains the given edge
returns the number of consumers in the pool
returns the index of the node that is used to issue
returns true if the user is allowed to conflict
updates the location of the component
replaces the data with the specified data
returns the level of the current level
fixes all the elements in this collection
sets the level
creates a new point node
creates a new point node
returns the point of the given point in the center of the
gets the state of the state
sets the line of the line
sets the index of the element at the specified index
sets the stroke width
sets the shape type
clears the board
sets the width of the image
sets the height of the image
sets the text
sets the selected attribute of the toggle object
sets the corner point of the corner
sets the client name
returns the corner point of the corner
returns the index of the field
returns the stroke width
returns the shape type
sets the application instance
sets the client id
returns the
returns true if the selector is a
sets the selector
sets the flag
sets the client name
sets the shape
sets the shape info
sets the server
draw the current shape
sets the text to be displayed in the text box
creates a new operation
returns a string representation of the current state
returns the operator for the given operator
this method is used to load the deferred deferred
this method is called to load the order from the database
sets the element class name
classifies an element
this method is called by the parser to load a single instance
this method is called by the parser to load a single instance
stores an element in the database
sets the element type class
loads the specified ini file
sets the element class name
load the
stores an element in the database
removes the preferences from the list
sets the feedback mode
returns the block with the specified name
compares this object with the specified object for order
renames the given name
returns the operation
check if the current bean is a valid
removes the current instance of the
returns true if the current instance is in use
creates a new transit searcher object
returns the specified transit
deletes the transit transit
registers a new user
adds a operation to the current operation
returns the operation for the specified name
updates the types of the given type
returns the operation that matches the given operation
returns the matching operation for the given operation
stores the given element in the given element
loads the specified element from the given element
sets the element class
load the
this method is used to store the object in the database
sets the element class
stores a file in the store
loads the xml element into the xml
stores the preferences to the current configuration
sets the element class
load the xml document
this method is called when the user has to be replaced
this method is called by the framework to set the manager
stores the given bean in the given set of properties
load the specified bean
returns the user name for the given user
returns the user name for the specified element
returns the system name for the given element
stores the configuration in the given file
sets the element class
load the given xml element from the routes
sets the element class
loads the element from the given xml element
this method is called when the head of the head of the
replaces the current route manager with the current state
returns the object associated with the specified name
returns a system by its name
returns the user object for the given user name
creates a new
delete route from local
returns the route with the given name
returns the text that was closed
returns the text that was created by this object
returns the sensor with the specified name
returns the sensor with the given name
returns the sensor with the given name
creates a new sensor
load the xml file
registers a task to be executed
removes a previously registered code code
creates a new sensor
returns the parent with the given name
deletes the given conditional
returns the conditional conditional by the given location
returns a light object from the given name
returns the light object associated with the given name
get a light by its name
returns the light object with the given key
this method is called when the system is active
returns the system name of the system
convert a system name to a
finds the file with the given name
creates a new reporter
returns the reporter that is the current name of the given reporter
returns the reporter that is the current name of the current
returns the reporter that is the user who created the current user
creates a new reporter object from the given user
this method is used to determine if the given
registers the instance manager instance
deletes the given from the database
returns the with the given name
returns the instance by its name
returns the object by name
returns the bean by its name
returns the bean by the given name
creates a new
returns the named bean definition in the database
registers a new bean with the given name
deregister a bean property
this method is called when the user changes the property change
returns the number of time in the current time
creates a new light
returns the named bean definition in the database
returns a named bean definition
creates a new named bean
returns the light object that is associated with the given name
adds a new preference to the model
returns a light with the specified name
returns the number of in the given
returns the light system name for the given system name
returns the light user name for the given user name
returns the current match
creates a new light object
check if the system format is valid
registers a new bean with the given name
checks if the system name is valid
deregister a named bean
normalize system names to system
convert a system name to a
activate all lights
returns the name of the preference with the given name
returns true if the given environment supports the
returns the description of the item
returns the default value for the given class
sets the default class
this method is used to determine if the given
get address
sets the session preference state
returns the value of the property with the specified key
returns true if the given property contains a property
sets the value of a property
returns true if the session is in the session
remove a signal logic
remove a signal logic
shows a message with the given information
registers the instance manager instance
deletes the specified section
returns the section with the given name
initialise all the data members
initialize the blocking system for all the
called by the midlet
adds a new combo box
returns the thread thread
returns the last selected name of the combo box
sets the last selected combo box
convert a string to a string
this method is used to store the object in the database
extends the element to ensure that the element is not part of
sets the look and feel
this method is called when a xml element is traversed
returns the name of the combo box
initializes the serial node
called by the framework to update the layout
get the current ip address
extends the element to be a new element
forwards forward to the given
returns the last selected element in the combo box
forward to the reply
this method is called by the
this method is called by the server to send a to
returns a serial instance of the sensor
configures the
send a message to a serial port
returns the serial controller
this method is called when new state changes
sets the rate
adds a new header to the output stream
configures the
returns the length of the stream
sets the bit for the output bit
creates and returns a new packet
registers the specified sensor to be notified of sensor data
creates a new instance of serial number with the specified number of
constructs a new instance of the given byte array with the specified
creates a new light object
check if the system is valid
checks if the system name is valid
normalize system names to system
convert a system name to a
returns a serial instance of the configuration
cancel button action
invoked when the user tries to close the window
resets the notes
configure the connection to the server
request a throttle for a given address
resets the
read the address from the address
returns the name of the system
cancels the specified request throttle
returns the number of headers
cancels the specified request throttle
configures the
returns the entry at the given index
returns the speed of the throttle
adds the help menu to the menu
configures the command station
configures the managers
scroll up the caret
this method is called by the framework to set the
returns true if the reader is read only
get the length of the record
stores an element in the database
sets the byte array of bytes to the given byte array
returns the buffer that is currently being used
sets the content of the data
sets the of the given device
returns the class description for the given class
called when the tree value changes
this method changes the property change listener
this method is called when the user selects the user
description of the method
returns the number of rows in the table
reads the next byte from the input stream
this method is called by the user when the aggregator is displayed
sets the value of the button action
writes the to the given output stream
reads the current
add a new to the net
returns a security element for the specified index
returns the generator aspect of the given element
returns the size of the given class
returns the current state of the last
returns the choice name for the given class
disposes the internal object
this method is called by the
configure the connection to the server
sets the serial port
notify the throttle that the throttle has been changed
sets the address of the channel
returns the number of slot in the given row
configures the managers
returns the option choice option for the given option
this method is called by the
returns the default option choice option for the given choice
sets the update indicator of the busy
sets the busy update
creates new thread to update the thread
run the
returns the of a
this method is called by the server when a message is received
invoked when the user has changed
called by the process when a command is added
write a block of the block
reads the current row from the current row
disposes the toolkit
notify the message listener
writes all the current row to the current row
waits until the specified time is interrupted
convert a string to a string
sets the value of the command station type
returns the speed of the
returns the speed of the
sends a function to the server
release resources allocated by this object
dispatches the event to the underlying graphics2 d
disposes the toolkit
returns a string representation of the given
this method is called when the timeout is interrupted
initiate the read operation
start the timer
sets the clock to the current time
stops the timer
restarts the timer
dispose of the
creates a new light object
check if the system is valid
called by the reactor when the timeout is started
checks if the system name is valid
sets the throttle to the specified address
returns the speed of the throttle
notify the throttle that the throttle has been changed
returns true if the address of the address is a long address
returns true if the address of the specified address is short
this method is called by the server when a message is sent
returns the size of the specified class
sets the delay between the
returns the of the given
sets the value of a
reads the reply from the
writes the given block to the end of the block
wait for a read write lock
write a single line to the buffer
display the message
add a connection to the net
this method transfers the from the slot
disposes the
this method is called by the net
this method is called by the server to send a message
scan the button for the scan button
handles the message channel reception
scan the scan for a
checks if the field name is valid
sets the mode of this component
returns true if the ui is valid
checks if password field is valid
sets the programme
sets the read read
sets the command station type
this method is called by the server to inform the
returns true if the given mode is in the mode
sets the last value of the last
this method is called when a new state is made
returns the last value of the last query
inserts a new address into the network
returns the numeric address of the osc address
returns the
returns the string of the current user
this method is called by the server when a new message is
connect to the net
disconnects the port from the server
returns true if the is busy
returns true if the port is still connected to the server
add a to the
handles a message
notify the listener that the slot has changed
this method is called by the framework to set the
configure the thread
group
connect to the server
disconnect from the server
sets the
this method is for the
handles the of a message
disposes the dialog
sets the channel group channel
connect to the server
notify the listener that the listener has ended
disconnect from the server
reads the byte from the stream
sets the password
notify listeners that the server is notified
sends a notification to the server
sets the
this method is called when the is received
this method is called when the throttle is loaded
stop the timer
resets the statistics to the current number of
returns the number of received messages
returns the number of bytes received
returns the number of
restarts the timer
sets the board id value
creates a new
creates a new status message
this method is called when the toolbus is
returns the line area
sets the status text
updates the next slot
returns the number of days in the current schedule
appends the given code line code to the end of the
dispose the
sets the value of the lt fc days gt
send a message to the server
reads the current state of the
configure the application
returns the hour of the current hours
this method is called by the reactor to set the read slot
sets the type of the word
configure the
sets the value of the lt hours gt
configures the managers manager
this method is called when the user selects the user
this method is used to write the byte array into the buffer
returns the minutes of the current date
this method is called by the framework to load the buffer
write a single
sets the minutes minutes
this method is used to load a byte array from the buffer
this method is used to load a byte array from the buffer
this method is used to write the byte array into the buffer
returns the of the slot that is currently in the
this method is used to load a byte array from the buffer
load a byte array from the buffer
this method is used to write the byte array into the buffer
this method is called when the next button is pressed
returns the rate of the current
load the array of bytes from the buffer
sets the value of the lt fc gt
this method is used to write the contents of the buffer to
returns the number of in the slot
returns the current state of the head state
returns the total number of elements in the list
load a byte array from the buffer
initializes the system
this method is called when the layout is updated
sets the state of the packet
disposes the resources associated with this session
sends a message to the
returns a string representation of this object
compares the specified object with this message net
get the sensor id
returns the hash code of this header
forwards forward to the client
returns the address of the
forward reply to the client
sets the header of the header
sends a message to a message
add trailer to trailer
sets the byte value at the specified index
returns the length of the given byte stream
configures the
this method is used to decode the from hardware
returns the mode of the selected item
returns the code code that is used to encode the content
this method is used to decode the protocol decode from the
returns the for the given hardware
sets the byte value at the specified index
returns the header value
sends a message to a user
this method is used to decode the hardware address
returns the header value
this method returns the for the given hardware
returns the number of bytes in the data array
returns the byte value of the specified byte
sets the mode
sets the specified index
returns the header value
returns the number of bytes that this input stream is
sets the value of the byte at the specified index
returns the byte value of the specified byte
compares this object with the specified object for equality
sends a message to a message
this method is used to decode the from hardware
updates the current state of the
this method is used to encode the specified hardware
move forward to the layout
check if the given type is a
signals the end of a task
sets the current state of the
this method is used to extract the
this method is called to notify the user that a
this method is called to notify the client that the sensor is
send a function to the server
creates a new
sends a function to the
sets the speed setting
returns a request message that is used to track the request
start throttle that is notified each time the request has been
adds the help menu to the help menu
dispose of the throttle
called when the user enters a connection
returns the speed of the throttle
sets the timeout value
returns an of the
this method is called by the filter when a message is filtered
enable or disable the nn
enables disables the of the
sets the type of the message
get a for a given header
this method is called by
returns true if the user can read the read
get the for a
sets the mode
send a packet to the server
get a check message for the given
release the session
sets the speed of the player
sets the functions
sets the speed steps level to the given speed
get a test for a test
returns true if the service mode is service
notify the listeners that the timeout is interrupted
returns true if the service is in the service mode
returns the version string
checks if the given type is a
configures the table with the given table
this method is called by the framework to handle the
this method is called by the client to perform a reply
test
configure the managers provider
initializes the serial node
save the table
called when the timeout is added to the queue
saves the selected file to the file system
this method is called by the framework to indicate the message to
this method is called by the client to perform a reply
configures the
sets the bit to be used for the output
returns true if the bit is
sends a reply to the server
notify the user that an alert has been created
initialize the light
this method is called when new state is changed
check if the address is a node address
creates a new packet
this method is called when the user changes the current
registers the given sensor to be used for the sensor
adds a new header to the output stream
notify the given as a light
add trailer to trailer
returns the length of the given stream
creates a new instance of serial message object
constructs a new instance of this class with the specified byte array
sets the throttle to the specified throttle
configures the
connect to the port
disconnect from the server
returns the traffic controller instance
this method is used to run the server
this method is called when the user selects a function
returns true if the address is a long address
send the
returns true if the address is short address
configures the managers
returns the value of the attribute
forwards forward to the client
forward to the reply
send a reply to the server
configures the connection to the server
checks if the system name is valid
sets the filter
sends a request to the server
invoked when the user tries to close the window
forwards the message to the given
forward reply to the client
send a reply message to the
returns the traffic controller instance
this method is used to handle the incoming data
read the address from the address
this method is called by the thread to run the message
sends a to the wiimote
sends a sequence of to the
this method is used to run the
forward to the reply
this method is used to get the poll for the poll
returns the length of the specified message
checks if the system name is valid
configures the managers
creates a new
creates a new instance of the given string
creates a new instance of the message
configures the
returns the house from the system
returns a string representation of the current monitor
initializes the intensity data
configures the managers
returns the number of steps in the current step
creates a new
configures the
adds a house to the list of the
adds a new address to the list of addresses
adds a new data to the given data
returns the command to execute at the end of the list
a unit class that is used to represent a house address
configures the managers
returns a new reply for this request
configures the
get for a specific
get dim
returns the number of steps in the current step
configures the managers
configures the
this method is called when the is selected
adds a function to the
adds a new address to the list
command
creates a new light object
check if the given system name is already in the system
checks if the system is already in the system config
normalize the system name
creates a new instance of serial number with the specified byte array
returns the manager
check if the given type is supported by the
configures the managers for the managers provider
start the timer
start the timer
sets the mode
send a function to the server
send a function to the server
decodes a message
forwards forward to the
forward reply to the client
sends a message to the server
signals the end of a pause
returns the traffic controller instance
returns the controller that this controller is managing
configures the managers manager
returns the info of this component
registers the manager
returns true if the given class is a
configures the
send a packet to the server
forwards the message to the given
forward reply to the client
send a reply message to the
returns true if the element contains the end of the element
returns the result code
returns the traffic controller
returns the speed of the
configure the manager
returns the speed of the
check if the given class is supported by the
returns true if this object can be inverted
returns true if the property change property name is changed
configures the control
deregister a
configures the manager
returns the length of the given byte stream
this method is used to stop the button
move the forward to the specified
creates a new instance of serial message
creates a new instance of serial number with the specified number of
configure the connection to the server
connect to the port
disconnect from the server
returns a new instance of
the
returns the controller
configures the managers for the managers provider
returns the controller
method to configure the command station
configures the managers manager
configure the connection to the database
get the
checks if the given command is a command
returns the controller
connect to the server
disconnect from the server
checks if parity is currently set
sets the mode
send a message to the server
connect the serial port
disconnect from the serial port
called when the timeout is started
returns the traffic controller instance
checks if the is
checks if the error is an error
returns the string representation of this data source
get the value of the current element
returns the match for the given string
sets the mode
send a packet to the server
returns the slot at the given slot index
finds the free slot
find the address of the slot that is in the given address
notify the listeners that the program has been interrupted
returns the speed of the throttle
adds the help menu to the menu
returns the number of rows in the table
configure the
returns the number of slots in the slot
returns the version query
returns the major version of the file
check if the version is not supported
returns true if the has a blue
returns true if the current user has the current limit
returns true if the firmware lock has a firmware lock
called when the timeout is paused
start the timer
restarts the timer
sets the speed of the packet
change the address of the address
this method is called from within the constructor to
sets the roster entry
removes all from the
the slot of the slot
returns true if this is a type
opens a file in the database
returns true if the type is
called when the user enters a message
opens the file
returns the block length
close the underlying stream
returns the block length for a given block
checks if the given address is a valid flash address
returns the byte of the byte as a string
this method is called from within the constructor to
this method is used to convert the given address into the
write the end of the line
returns the type of record
returns the number of in the slot
this method is called when the server wants to restart the
returns the address of the address
gets the address of the address
returns the address of the address
writes the specified data to the output stream
writes a byte to the stream
writes a digit as a byte
configure the connection to the
sets the
returns the traffic controller
returns true if the mode is possible
configure the station to be used in the
configures the managers
send a to the server
send a packet to the server
send a packet to the server
send a packet to the server
sets the payload of this message
configures the
resets the to the
registers the specified sensor to be notified of sensor data
returns a packet containing a message with a given byte array
returns the tag name of the element
the hex
forwards the message to the given
forward reply to the client
send a reply message to the
creates a new
compares this object with the specified object for equality
checks if the given type is a
returns the name
wait for timeout to timeout
sets the current state of the
returns the name
move forward to the layout
returns the speed setting
checks if parity is supported
this method is used to send a to the server
this method is used to send a listener to the server
configure the connection to the server
configure the connection to the server
returns the feedback string
returns true if the message is a feedback message
display the timeout in seconds
returns true if the user wants to feedback the broadcast
returns the timeout for the init timeout
called when the next frame is activated
returns the number of in the
returns true if the is a throttle of the
reads the next byte from the file
the timeout of the
reads the given byte from the stream
returns true if the throttle is taken over the current instant
returns the manager
this method is called by the throttle throttle throttle to prevent
returns true if the message is
returns the speed of the throttle
sets the state of the
sends a message to the server
sets the
returns true if the user can read the
configure the connection to the server
this method is called by the throttle throttle throttle to prevent
sets the command station type
set software station software version
set the software station software version
adds a new header to the output stream
returns the length of the given stream
returns true if the current implementation supports operations
send a packet to the server
configure the connection to the server
forwards forward reply message to the
returns the normal mode
returns true if the is idle
returns the name
sets the instance
get the memo connection
sets the memo for the current
sets the of the sender
stores an element in the database
notify the listener that the message has been added
connect to the server
disconnect from the server
notify the sender of a notify message
returns true if the command is possible to be used in the
returns true if the user is allowed to send the ok
returns the name
sets the station
configure the connection to the server
loads the given file
calculates the of the
configure the connection to the server
creates a new light object
sets the host name
sets the port
this method is called by the server to reconnect to the server
returns the singleton instance
this method is called when the connection is established
signals the end of a task
notify the given as a light
checks if the system format name is valid
checks if the system name is valid
normalize the system name
returns a new instance of the
initialize the
sets the starting address of the output
called by when the button is pressed
returns the starting address of the starting address
sets the ending output address
creates a new message object
constructs a new message with the given byte array
initialize the light
sets the state of the node
returns the ending output address
sets the number of retries
notify the user that an alert has been created
check if the system format name is valid
checks if the system name is valid
returns a singleton instance of the singleton instance
sets the
sets the starting address of the sensor
returns the controller
configure the managers
returns the minimum value of the node that is used to indicate
returns the maximum number of nodes in the tree
returns the starting address of the sensor
sets the ending sensor address
returns a new code traffic controller code instance
connect the serial port
disconnect from the serial port
returns the ending sensor address
sets the throttle to the specified throttle
returns true if the given throttle is a throttle of this throttle
initialize the node
returns the
returns true if the bit is
forwards the message to the given
returns true if the sensor is active
forward reply to the client
returns the of the given
send a
send a to the server
send a reply message to the
returns the speed increment
returns a new instance of the traffic controller
initializes the node with the given minimum and maximum value
registers the given node
returns the node from address of the node
returns the for the given address
updates the specified sim sim channel
updates the poll and update the current thread
add a header to the output stream
add trailer to trailer
returns the length of the given stream
runs the test
continue the continue
stops the stop button
stops the output process
configures the serial port
adds a new action to the list of
stop the test
the serial port
notify the user that an alert has been created
invoked when the user tries to close the window
this method is called when new state changes
this method is called when the user selects the button
sets the serial port number
returns the sensor type for the specified sensor
returns the output bit of the given bit set
returns the number of cards in the current hand
returns the number of output cards in the current
sends a function to the server
send the
sets the type of the card
returns the number of bits per card
sets the number of bits per card
checks if the address is a node address
read the address from the address
returns the delay in milliseconds
read the address from the address
sets the delay between the transmission of the transmission
returns the pulse width
sets the width of the pulse width
returns true if the card is a output card
sets the type of the node
returns true if the card is input
returns the index of the card that is currently facing in the
returns the index of the input card
notify the given as a light
returns the number of output bits per card
returns true if the given bit is a search light
checks if the address is a node address
forwards forward to the client
forward to the reply
send a reply to the server
returns a new instance of the instance
returns the number of bits in the per card
registers the specified sensor to be used in the sensor
sets the delay in milliseconds between the transmission
send a
send the to the server
configures the managers
returns the tree model instance
run the
returns a node with the specified name and value
change the current state of the sensor
registers the specified sensor to be notified of sensor sensor
returns the sensor with the specified index
returns the name of the hardware clock
checks if the current user is able to correctly
returns true if the current thread is
sets the rate of the task
returns true if the request is able to request a
reads the next character from the stream
returns the rate of the current
this method is called when the function is called
this method is called when the function is called
stops the hardware clock
this method is called when the function
add an entry to the list of entries
this method is called when the user closes the session
removes a roster entry from the list of
returns a combo box that is selected in the combo box
this method is called when the function
returns a roster entry from the given title
this method is called when the function
notify the that a roster entry has changed
send a packet to the server
returns true if the given can be dropped
enables or disables the lock operation
sets the mode
returns the value of the poll
creates a new light object
configure the connection to the server
add to
remove
returns a new message with the specified number of
kills a
the reply to a reply
sets the reply length
adds a to the
checks if the is valid
configure the connection to the server
read memory
send a packet to the server
forwards the message to the given
forward reply to the client
sets the command options
sets the usb system
gets the value of the program mode property
sets the program mode
configures the command to be used for the
check if the given type is supported by this converter
sends a message to the server
recover the current connection
configure the sensor manager
this method is called by the server to reconnect to the server
sets the of the given event
returns a string representation of the object
returns true if the default is possible
configures the
forwards the message to the given
forward reply to the client
send a reply message to the
returns the traffic controller
gets the value of the traffic controller
configures the managers provider for the managers manager
prepares the document to be created
convert the given into a
convert the given to a
kills the
returns the
returns the id of the
returns true if the point is ok
returns the text to display in the text
returns the path
sets the origin of the
sets the maximum value of coordinates
initialize the components
prepares the document to be created
adds a region to the list of regions
adds a listener to receive notifications from the
removes a listener from the list of listeners notified when the
adds a listener to the listener list
removes a listener from the list of listeners
description of the method
sets the maximum number of receivers
configures the thread pool
sets the receiver
configures the
convert the given to a
convert the given to a
returns the current state of the
this method initializes the components
goes to the next line
this method is called by the client to perform a reply
stores the element in the database
loads the element from the given element
add trailer to the trailer
configures the
returns the length of the given byte stream
this method is called when new state changes
resets the to the initial state
sets the node address of the node
returns the address of the node
sets the address of the node
creates a new instance of serial serial object
constructs a new instance of this class with a given byte array
get a polls from the address
format the data in the format
connect to the port
this method initializes the button action
disconnect from the server
returns the value of the element as an integer
configure the connection to the server
notify listeners that the task has been interrupted
returns the traffic controller
configure the managers provider
returns the info
sets the rate of the
configures the
sends a message to the server
returns the connection name for the given prefix
returns the remote address of the socket
returns the prefix of the given code name code
sets the
run the script
returns the filename of the file in the system
sets the resize container
returns true if the container is resized
returns true if the aspect aspect ratio is set to true
loads the xml element from the xml file
sets the aspect ratio of the aspect ratio
loads the xml element from the given element
adds a revision to the list of revisions
returns the state of the specified state
returns the name of the state of the given state
convert a string to a string
adds a trailer to the output stream
returns the scaled image
convert a string to a hex string
returns the value of the
returns the length of the given stream
generates the window ref
convert a byte array to a string
sorts the array
this method will be called to set the directory to be dropped
sorts the array
sorts the upper case
sorts the array in a string
adds a menu help menu to the menu bar
quote a string
creates a new code code object with the
sets the escape key action
disposes the window
disposes the action
returns the action key action
sets the escape key key
returns whether escape key is used to escape the key
returns the preferred size of the window
invoked when a property changes
this method is called by the framework to initialize the context
returns the port name
returns true if the user is a
disconnect from the server
returns the location of the given value
returns true if the frame size is saved
this method is used to send a to the server
returns the user name
sets the modified flag
returns the selected system name
returns the display name of the selected bean
sets the first item in the list
returns the root element from the file
handles exceptions thrown by the client
disposes the window
reads the byte from the stream
returns true if this component can receive a
writes a color
close the image
disposes the toolkit
sets the color of the text
this method is called by the page to indicate that the page
writes the specified component to the specified image
returns the name of the service
writes the specified image to the screen
returns the name of the service
checks if the path is set to true
returns the type of the service
returns the service info
returns true if the service is published
writes the specified row to the end of the table
publish the service
sets the state of the task
stops the service
adds a transit section to the list of questions
returns the current line number
writes the borders of the current borders
removes all sections from the list of sections
tests whether this section contains a section with the given
increase the line spacing
checks whether the given block contains the given block
returns the number of blocks in the given block
returns the section of a given block
resets the value of the specified cv
returns the value of the given cv
returns the direction and the sequence of sections in the given section
validates the layout of the given layout
send a message to the server
send error status to the server
send a train list to the list of
sends a location list to the server
returns the number of blocks in the block
creates a new status
create a new train location
train the
returns the manager
creates a power manager
train the train weight
train the given train number
sets the title
creates a train
terminate the
send a full status to the server
sets the reporter
returns the full name of the forward context
disposes the output stream
stores an object in the database
loads the
this method is used to store the object in the xml element
sets the current
store an object in the database
stores an element in the database
loads the
stores the element in the element
stores an element in the database
stores an element in the database
stores the element in the element
sets the current state of the
sets the value of this property
returns the value of the given key
rounds a floating point number between 0 and 1
executes the action
returns true if this action is invoked
adds a block to the list of blocks
disposes the toolkit
dispose of resources
returns true if the is allowed to lock
adds a new output to the output
clear the output
creates a new signal logic
returns the output by index
returns true if the given is included in the
returns the output state of the given output
returns the output for k
sets the inverted state of this object
returns the output state of the given output
returns the sensor name
returns the number of in the current
adds a sensor to the sensor
this method is called when the user selects a new
clears the output streamer
returns the value of the code conditional code order code
returns the sensor output for the given index
adds a conditional to the list of the conditional nodes
returns true if the sensor sensor is included in the sensor
returns the output state of the given sensor
returns the sensor for the given sensor
calculates the of the
returns the sensor state of the given sensor
this method is called when the is activated
sets the script output script
returns the script name
returns the name of the sound file
sets the sensor sensor to be used for the sensor
returns the state of the destination
returns the alignment sensor
sets the state of the
clears the sensor route sensor
deactivates the event
returns the name of the sensor in the given index
returns the number of blocks in the block
returns the sensor for the sensor at the specified index
returns the of the given sensor
returns true if the given signal is active
returns the length of the specified
sets the control
returns the control for the control
returns the block with the specified number of the specified sequence number
sets the lock control
returns the lock control for the lock
returns the block number block number of the block
returns the current state of the
removes all blocks from the block
sets the delay between the route and the specified delay
returns the delay of the delay
sets the layout layout details for a given
sets the state of the control
sets the state of the
sets the lock control state
returns the lock control state
returns true if the specified output is flexible editor
lock the lock
sets the route
returns true if the should be automatically
returns the block name of the first block

unlock the lock
adds a new entry to the list of active entries
sets the busy route
sets busy route
disposes the internal frame
sets the held held property
returns the current aspects of the aspects
returns true if the busy route is busy
sets the state of the
returns the current state of the
sets the value of the code m code property
sets the state of the
sets the state of the
returns the current state of the
this method is called when a new state is found
returns true if the state of the state is consistent
sets the current report
sets the state of the
sets the value of the current property
returns the current state of the
start the hardware clock
sets the type of the action
returns the device name
returns the inverted
returns the action data
returns true if the is locked
sets the action data
initialise the plant
returns the action string for the action
sets the lock status
returns the value of report locked
sets the sound to be played
returns the operator
returns the type of the action
returns the feedback mode for operation
returns the string value of the option
starts the transition
initializes the
returns true if the variable is constrained
sets the time in seconds
returns the current state of the
sets the comment
returns true if the variable is constrained
sets the intensity of the intensity
update the intensity intensity
update the intensity of the intensity
update the intensity intensity
returns the current intensity of the current
disposes the toolkit
returns the current intensity of the current intensity
check if the file is still open
this method is used to determine whether the user wants to be
this method is used to close the
dispose of resources
returns the maximum intensity value
checks if the given panel is ready to be shown
gets the value of the expression property
runs the thread
runs the
returns the minimum intensity of the
returns the type of the logic
this method is called when the user changes the current
sets the time in seconds
removes the specified bean from the list of listeners
sets the type of the logic
returns the operator of the given operator
notify the state change to the state
called when new state is changed
sets the current state of the control
deactivates the light
sets the state of the variables
this method is called when the user changes the property change
this method is called when the is refreshed
sets the class for the audio element
loads an audio from the
sets the value of the code action code property
calculates the current position of the current time
resets the current position of the current position
this method is called when the plugin is initialized
parse the format
initialize the
calculate the pitch pitch
sets the gain for the given gain
sets pan
sets the pitch of the audio synth
lays out the frame
populates the frame with the specified frame
returns the memory for the given name
sets the value of the current value
returns the value of the current value
sets the value of the spinner
returns the value of the spinner
resets the frame to the current frame
initialize the
returns the audio format
cleanup the
returns true if the is
sets the current state of the
sets the end loop point
sets the of the
parses the format
calculates the of the calculation
returns the fade gain
toggle the play state
pause the toggle
returns the
creates a new automation component
sets the operation
deletes the column of the table
returns true if the property name is in the property name
sets the column to hold the given column
this method was created by a smart guide
returns the component that is currently selected in the table
creates a new code table code object that is responsible for
adds the given component to the bottom of the bottom of the
creates the model
adds the given action to the control window
returns the control type text for the given type
removes the specified control from the list
creates the model
adds a bean to the current frame
sets the menu bar
returns the help target
creates the model
returns true if the property name is the same as the name
sets the action mappings to the given code map code
this method was created in visual age
creates the model
returns the instance of the
returns true if the button is selected
returns the selected mode
returns the
enables disables the button
updates the current status of the current status
returns the
this method is called when the user changes the property change
this method is called when the user selects a new
returns the signal
sets the signal to the given name
send a roster to the server
send a list of to the current server
returns the
returns the
send a packet to the device
returns the watched
stop the
returns the watched
returns the watched
invoked when an action occurs
returns the watched
returns the watched
sets the speed
returns the watched
send a roster to the server
this method is called when a property change event has been changed
deregister the current session and remove all listeners
returns the current address of the
this method is called when the user selects a message
send a list type
load the stored file
returns the approach
build the list of
enable disable the save button
applies the values to the throttle
this method is called when the is done
returns the next page in the list
notify the device that a device info has changed
load the specified element from the database
returns the icon for the specified name
loads the given catalog tree
sets the rotation of the rotated image
registers the
opens the directory chooser
insert a new
returns the number of pixels in the specified orbit
gets the image directory
adds a leaf to the tree
adds a leaf to the tree
removes leaves leaves the tree
creates a new branch
adds a tree to the tree
scroll up the scroll pane
this method is called when the user selects the file
performs the action
initializes the sensor
handle the request
returns the folder
registers a new automaton
removes a code automaton code from the list
returns the automaton with the specified name
this method is called to make the given code automaton code
this method is called when the user selects the
sets the output to be used by this object
initializes the
handle the request
sets the output to be used by this object
handle the process
handle the event
stores an object in the database
loads the object from the given element
starts the thread
runs the thread
returns the model for the given catalog
adds a choice to the list
adds a new value to the list of setting variables
removes a node from the tree
confirm the user that is the user has confirm
returns true if the given value is changed
changes the tree node
sets the state of the participant
returns true if the given node is a
sets the state of the
selects the value at the given index
sets the tooltip text
wait for a time to wait until the next time
waits until the given time is interrupted
sets the state of the variable
sets the state of the read only state
checks whether this code attribute code is read from the
wait for a sensor to be notified when the sensor is active
sets the state of the current state to write to the output
wait for a sensor to wait for a sensor
checks whether this instance is
returns the offset of the specified value
wait for a sensor to wait for a sensor
read the current state of the process
checks if the given name is already in the list
wait for a sensor to be updated
returns the
initializes the component
returns the selected node
start the event for the
start the event processing
sets the state of the
writes the current state of the to the database
invoked when a property changes
this method is called by
opens the button
returns the for the given cv
opens the known
start the
this method is called by the server to detect the of
sets the value of the current state
sets the state of the current state
sets the busy status of the busy
notify the busy state of a busy change
sets the info only
returns true if the info is only a
sets whether the output is written to the output stream
this method is used to convert the current state of the
returns true if the output is write only
make the panel with the given root element
creates a new pane
this method initializes mode pane
disposes the toolkit
returns the pane that is used to display the panel
add box to the
adds a new item to the list
adds a new item to the list
handles the action event
sets the value of the given integer
sets the state of the model
reads the pane and returns true if the dialog is available
start the
reads the from the given code code
reads the pane from the current position
write the pane changes
sets the tool tip text
write all the to the
this method is called when the user modifies the default values
sets the mode
returns the value for the given name
sets the current status of the panel
shows the dialog if it is a
this method is called by the user to confirm the user interface
sets the default value for the element
adds a new item to the list
sets the number of
update the of the
invoked when the target of the listener has changed its state
enables disables buttons for the specified button
reads the and sets the current state of the
reads all the and from the gui
writes all the to the current group
this method is called by the
returns the representation of the given element
reads the element from the given index
sets the
writes the specified code int code to the current row
stores an object in the hashtable
sets the type
load the given element from the given element
stores an object in the database
stores an object in the database
returns true if the file is dirty
stores an object in the xml format
stores an object in the database
loads the given element from the given element
returns the single route
sets the head of the list of
sets the head head
this method is used to determine if the current
checks if the key is valid
sets the icon
stores an object in the database
stores an element in the database
returns the current state of the head
this method will store the object to the sensor
this method initializes the gui
initializes the panel
called by the framework to initialize the action
sets the level of the
makes the icon panel for the icon
initializes the table
initializes the panel
returns the selected object
called whenever the value of the selection changes
handles the selection of the table
returns the selected table
sets the
returns the icon associated with the specified key
initializes the panel
initializes the action
this method is called when the user selects the page
invoked when the mouse button has been clicked pressed
updates the size of the image
adds the family family
removes the family set
shows the pop up menu
initialize the icon families panel
updates the icon groups for the given key
adds a family to the family
disposes the toolkit
removes a map icon map from the given map
deletes the icon
handles the selection of the table
delete icon from the current icon
creates the panel that contains the given panel
creates the family
initializes the applet
adds the family family
deletes the family set
returns true if the action is done
initializes the action
called by the framework to initialize the button
called when the user selects a new key
sets the
removes the contents of the current page
sets the security element of the element
returns the icon associated with the specified state
stores the object in the xml store
loads a object from the xml element
this method provides the implementation of the element
load the sensor object
stores the object in the database
loads the xml element from the xml element
sets the element class name
load the
this method is used to handle layout block manager
mouse clicked method
stores the object in the xml element
loads the element from the xml element
stores the object in the given element
loads an element from the xml file
display the mouse click on the current component
the mouse click on the current component
the mouse click on the current board
disposes the toolkit
removes the parent object from the container
returns the value at the specified cell
returns the icon for the specified icon
dispose the resources
hides the checkbox
sets up the property change listener
sets up the view
invoked when the user tries to close the window
returns true if the is
sets the center of the circle
returns the next node in the node
window closing event
paints the panel
sets the location of the next location to the next location
sets the current busy state of the task
sets the busy status of the busy
returns true if the current thread is busy
sets the
returns true if the given index is indexed
show the pop up menu
sets the layout block
removes the specified layout block from the database
returns the layout block for the specified name
sets the track of the
sets the remove menu
returns the block with the specified
returns the block with the specified
sets the popup menu for the popup menu
removes the contents of the current object
sets the
sets the
returns the state of the
adds a layout editor
redraws the panels layout
sets the layout
sets the sensor to be used for this sensor
returns the color of the block
sets the icon for the given icon
returns true if the is
sets the name of the memory
returns the sensor name
returns the sensor for this object
sets the sensor name for the sensor sensor
returns the code layout code for the given
returns the block layout by its parent
returns the sensor for the
returns the code layout code that will be used for rendering the
sets the sensor to be used for this sensor
sets the block
returns true if the message is a warning
deactivates the block
sets the icon for the given icon
returns the icon for the specified status
enables disables the advanced routing
returns the head of the head element of the given string
sets the memory
sets the current memory
returns true if the is
sets the menu to be edited
returns the time of the routing routing
sets the memory
sets the current memory
sets the icon for the specified icon
updates the path to the specified file
sets the layout block
checks whether the given icon is an icon
adds a new code block code to the given code code
check if the is
sets the icon for the specified icon
sets up the
shows the pop up menu
sets the current memory
display the state of the application
toggle the state
display the
returns the block of the given block
removes the given block from the list
initializes the view
checks if destination is a valid route destination
invoked when the window is closing
sets the location of the next location
returns the neighbouring direction for a given block
sets the origin of the origin
sets the current location of the current
returns the number of neighbours
returns the first neighbour at the specified index
saves the selection group to the given group
returns the neighbouring direction of the given neighbour
returns the neighbour metric of a given metric
this method is called when the mouse is dragged
returns the icon at the specified index
returns the neighbour of the specified packet
updates the size of the popup
sets the light
sets the
sets the icon for the given icon
returns the icon associated with the specified state
sets the reporter
returns the dialog panel
deletes the given panel from the panel
adds a new editor panel to the panel
updates the panel with the given editor panel
rename the editor panel
returns true if the given name is used in the list of
returns the icon at the specified index
returns the number of routes in the current route
store an object in the database
returns the index of the given
returns the block route block at the given index
invoked when the mouse button has been clicked pressed
returns the first block at the specified index
removes the markers
returns the title string
writes the given file to the file
add an entry to the list of roster entries
returns the number of route hop at the given index
removes a roster entry from the list of buddies
returns a roster entry from the given title
updates the given radio button
returns the entry at the specified index
returns the length of the route at the specified index
returns the roster entry for the specified group
returns the title of the given file
returns true if the cell is editable
returns the value at the specified cell
returns the metric metric of a given metric
make a filename for a valid entry
adds a component to the top of the stack
sets the quit flag
reloads the
returns the route state for a given route
notify the listener that the roster has changed
returns true if the given code route code is a valid route
adds a new roster group to the roster list
adds a roster group to the roster list
this method is called when the user selects the button
delete a roster group
delete the roster group list
returns the number of hops for a given block
rename a group list
returns the metric metric of a given block
returns the length of the given block
sets the label for the function
returns true if the roster group is selected
returns the groups menu
returns the label of the function
returns the menu for the menu item
returns the new window menu action
sets the function and checks for the given function
returns true if the given function matches the given
logs a short warning
sets the editable state
sets the flag indicating whether or not the global global flag is
change the date time in the date format
sets the selected item
returns the non selected item
sets the flag that controls whether or not the global set sets
reads the file
sets the state of the
returns the value at the specified row and column
initializes the components
this method is used to find the in the combo box
sets the state of the
creates a combo box from the given list of
returns a code decoder code from the specified file
returns the number of the paths in the path
starts the
sets the hidden flag
the
returns the code block path code for a specific path
returns the title of the model
reads the file and returns the file
writes the given list of to the file
returns the code block path code for a given path
sets the launch
returns true if the given index is in the list of active
sets the menu to show the panel
sets the menu
sets the menu to show the menu with the specified
returns the value at the specified position
sets the display level for the given popup menu
sets the index
sets the remove menu
adds a new to the
redraws the panel
returns the point that is the point to the given layout
sets the icon to be used for icon
removes all the from the list
initializes the solver
returns the next background color
resets the dirty state of the panel
sets the dirty flag
adds the text to the dialog
sets the transit name
sets the speed factor
initiate the working set
wait until the thread is stopped
resumes the current running process
pause the current thread
called when the section has changed
start the clock with the current time
deletes the train info file
returns the header of the
initializes the
initializes the data
returns the start position of the data
returns the size of the data
returns the data end position
invoked when an action occurs
invoked when an action occurs
adds a property change listener to the listener list
removes a property change listener from the listener list
sets the head and icon to the new
the
this method is invoked when the user presses the file button
plays the sound
plays the sound
stops the playback of the sound
this method creates a light object from the given
sets the number of the
returns a string representation of the road
finds the engine by its number
creates a new icon
sets the type of the property
sets the time source
synchronizes the current state of the listener
called when the user modifies the correct value
display the display
start the stopped state changed event
creates a new engine
creates a new with the given name
sets the clock start time
returns the combobox for the combo box
start the timer action
sets the weight of the
stops the timer
the property change listener method
adds a tree to the editors tree
this method is called when the sensor is changed
invoked when the user tries to close the window
sets the model
sets the built
sets the type of the property
sets the value of the
sets the length of the model
sets the weight of the
register a new listener for minute change events
gets the
tests the destination
returns the name of the location
returns the location id of the location
returns the number of grams in the
returns the size of the group
sets the lead
this method is invoked whenever the property changes
sets the track of the track
returns the track name
returns the track id
writes the files to the file
sets the location of the given track
finds the car in the current road
sets the given location to the specified location
adds a new type to the list
replaces the old type with the given name
returns a combobox for the given type
returns a combo box
returns the combo box for the current combo box
test the
returns the combobox for the selected item
adds a new code name code to the list of
checks if the given type contains a specific type
creates a new car
sets the destination
returns a new car car with the given number of road and
returns a new car car and its type and location
creates a new kernel
removes a kernel from the kernel
get kernel by name
returns the combo box
updates the combo box
load a new one
load the type from the given type
sets the priority of the given type
creates a new element
sets the track that is used to display the track
get the priority of the given type
writes the file to the file
sets the id of the last location
sets the training
this method is called by the user to delete the panel
returns the priority of the
sets the value
returns the number of entries in the table
returns the stocks from the database
returns the stock stock object
returns the stock stock
returns the weight of the
sets the
get the stock stock
sets the route destination for this route
deletes all the objects in the table
sets the order
returns the number of checkboxes in the table
sets the destination of the destination
sets whether the location is unknown
sets the out of service
sets the car destination interchange of the car
removes the code code from the model
returns true if the directory name exists in the directory
checks if the directory exists
resets the directory and all its children
saves the current settings
sets the kernel
sets the visibility of the specified popup menu
sets the name of the property
create a new schedule for the given schedule
registers a new schedule
removes a listener from the list of
returns the combo box
returns the combobox for the selected item
updates the combo box with the specified value
this method will be called by the digester
returns the departure time for the train
returns the time of the
returns the time the route was
build the
creates a file from the given file
creates a file containing the file containing the train
creates a new file with the given name
creates a csv file
sets the requirements for this code property code
stores the contents of the xml element
returns the number of requirements
adds the location property change listener to the location
removes the track and track property change listener
sets the active
adds a new script to the script
returns the name of the train route
adds a script to the end of the script
returns the train name
creates a new train with the given name
register a train with the given set of
deregisters the specified
returns the train name
sets the current location
returns the current location of the current location
updates the combo box with the given list of instances
adds a new track to the pool
removes a track from the pool
returns the current location of the current route
this method is invoked whenever the user changes the property change
returns the next location name
creates a new schedule with the specified name
registers a new schedule with the given schedule
returns the combo box
updates the combo box with the specified value
replaces the current list of the with the specified
replaces the current road with the given road with the given road
returns the location of the next location in the location
load a new load
this method is called when a property changes
add a new item to the schedule
add an item to the schedule
creates a new location with the given name
register the specified schedule
registers a location with the given location
deregister the location of the specified location
deletes the item from the table
the sequence
returns the item at the specified type
sets the length of the
this method is called when a property changes
returns the item at the specified id
add anchor to the anchor
sets the type of the property
sets the road
sets the location of the reference
sets the load
sets the ship
sets the train direction
sets the number of
add a to the end of the
returns the id of the
sets whether or not the switch list is enabled or not
returns true if the switch list is enabled
sets the status
sets the status of the status line
returns true if the current route is in the route
sets the east icon east
adds a location to the list of locations
checks if the location id is in the list of locations
this method is called to make the current resource
adds a type name to the list of the
adds a type name to the list of the
returns true if the given type is a accept type name
adds a new track to the current track
registers a track with the specified track
returns the road option
returns a string representation of the given xml
returns a string representation of the given xml
resets the current state of the
sets the road option
updates the combo box
adds a pool with the given name
sets the value of the reservation code
adds a road name to the road
adds a location to the route
sets the schedule mode
add location to the route
register a new route
deletes the location of the given location
returns true if the pool is already registered
the sequence of
returns the route location
returns the last location of the given name
returns the current schedule mode
removes a road name from the road
get the location of the location with the given id
checks if the given road is a road
returns true if the car is available
creates a new route with the given name
register a route
remove a route from the route
returns a copy of the route with the given name
gets the load option
returns the train direction
sets the number of ignored ignored
returns the train direction string
sets the load option
sets the training length
sets the train weight
returns the maximum car moves for the car
sets the number of
sets the can drop property
validates the sensor and display it as a sensor
sets the can pickup value
sets the number of cars in the
sets the number of cars that the car has moved
sets the engines engines engines
adds a load name to the list of load
load a load
adds a address listener to the list of listeners
returns the layout block for the given block
removes a address listener from the list of listeners
returns the index of the roster item that is selected
checks if the load name is already loaded
this method is called to make the current host
select the roster entry
notify listeners that the throttle has been
notify all registered listeners that the has been disposed
sets the roster entry
sets the owner option
adds a owner name to the list of owner
dispatches the
sets the forward direction
release the
removes the owner name from the owner of the owner
returns the xml element that is currently being edited
returns true if the slider is
checks if the owner name is a owner of the given owner
returns the slider slider value
invoked when an action occurs
sets the start year year
sets the value of the built end year property
sets the function listener
adds a listener for function
removes a listener from the list of listeners
find the destination and track
invoked when an action occurs
returns the number of cars in the train
adds a load name to the list of load
load a load
sets the location of the window
sets the drop option
invoked when a key is released
removes all car from the car list
sets the value of the pickup option
invoked when an action occurs
invoked when an action occurs
creates a new throttle window
create a throttle frame
invoked when a key is released
returns true if the given train is in the train
handle the field changed
invoked when a key has been pressed
sets the delay between two events
dispose the
adds a new id to the list of the
returns the engines engines
internal frame activated
gets the second leg number engines
get the engines leg engines
returns the order of the service
sets the
returns the schedule name
invoked when a key is released
returns the engine to be used for the
sets the second engine road
gets the value of the schedule item id property
gets the second leg engine road road
sets the road engine to use for the road
sets the model to be used for the model
returns the entrance in seconds
returns the with the given name
sets whether the load option is enabled
sets the second engine model
sets whether the load of the load option is set
sets the speed slider to show speed
enables or disables the remove off option
sets the leg engine
enables or disables the
this method is called when the user changes the property
adds a icon to the icon
enables or disables the of the load
sets the road road
returns a with the given name and name
returns the with the given name
returns true if the block is enabled
adds a path to the list of
sets the name of the given name
sets the second road road road
sets the direction of the camera
sets the road leg road
returns true if the current state is free
returns the block that is used to determine the block
shows all the buttons in the panel
adds a block order to the list of order
returns a new
returns the order block of the order
returns the last order of the order
returns the value of the order
notify the that the given block has been invalidated
returns the speed of the throttle that will be used to generate
sets the halt speed
removes the background image from the background
returns the current block order
changes the property change listener
this method is called when the user selects a new object
deactivates the active state
returns the root element from the file
returns the index of the block in the given block
returns the index of the block with the given name
sets the interval in seconds
sets the maximum number of concurrent attempts to be used
returns the block order at the specified index
returns the block at the given index
returns a element
writes the xml document to the file
returns the block number of the given block at the given index
check if the file exists
finds the file with the given name
make a backup file
this method is called by the servlet container to indicate to the
reverts the file to the specified file
returns a backup file name for the given file name
ensures that the specified file exists
creates a new document with the given dtd
applies the values to the preferences
creates a new document with the given root element
adds a default element to the
creates a new sensor
returns the operator for the given operator
fire a run status change event
stores an element in the model
load the model
this method will be called by the application to store the object
stores an element in the model
this method will be used to store the button panel
this method is used to store the object in the database
loads the xml element from the given element
returns true if the block is free
this method will be used to store the object in the database
this method will be called by the action to store the object
this method provides an implementation of the element code element code
this method will be called by the application to perform the
loads the xml element from the given element
load the model from the given element
initialize the
returns true if the block is a
sets the second leg of the
runs the
this method is called after the server is done
sets the config file name
handle the quit command
restarts the restart
enables disables buttons for the given button
start the init method
start the init method
returns the component that is shown in the panel
sets the floating toolbar
sets the leg for the
called after the applet has been created
update the
this method is called by the menu bar
the block
sets the editable state
post initialization method for the post init method
adds a script build script to the script
initializes the
returns the url for the program
returns the current locale
adds a script to the script
sets the state of this image
returns the name of the user
checks if the given version is canonical version
compares the versions of the versions versions versions
compares two versions versions
returns canonical version of the file
the main method of the application
test method for
compare compare versions versions
add a new script to the script
sets the help frame help menu frame
sets the animation to be used for the animation
updates the text area
adds a new script to the end of the context
creates a stream to the specified output stream
test the creation of a new block
sets the style of the font
returns the wrap style
sets the font size
gets the value of the name property
sets the font style
this method is called by the menu frame
updates the font of the font
sets the name of the
sets the scheme
returns the scheme of the scheme
returns the
returns the number of
sets the path to the
shows the route
send a message to a serial port
tests if the client is closed
tests that the is sent to the server
this method is called when the user tries to close the window
called by the framework when the server is
send a message to the server
sets the build enabled attribute of the object
returns true if the build is enabled
sends a message to the client
send a to a
send a to the given
send a to the given
build the selected
build the build
sends a test message
sets the config file name
gets the build failed value for this
send a message to a given

returns true if the file is a file
send a message to the client
send a message to the client
send a message to a given
sets the train icon for the train
returns the number of
send a message to a given
send a message to the client
moves the location to the next location in the location
activates the options
test service mode
test that the mode is correctly handled by the
test that distinct mode distinct distinct keys are distinct
returns the lead engine
sets the status of the
resets the current state of the
test of add cars method of class
returns the sensor with the specified name
wait for a given timeout
signals the event to remove the
clears the expired entries
load attributes from xml
returns the signal from the given name
returns the result of the
checks if the component is valid
clears all the errors
sets up the component
sets the icon
sets the tool tip text
fire validation event to all registered listeners
returns the tool tip text
sets the popup menu
returns the popup menu
sets the visibility of the tray icon
sets the layout manager
adds a property change listener to the listener list
adds a property change listener to the listener list
adds an item to the list
removes a property change listener from the listener list
removes the item from the list
sets the rollover mode
sets the selected index
sets the selected item
returns the selected item
returns the item at the specified index
sets the margin between the components
removes all items from the list
enables disables the button
called by the manager when the user has changed
returns the tool tip text for this tool
internal internal internal internal internal internal internal internal use only
sets the maximum row count for the given row
sets the border painted
called when the button is pressed
load the given class from the given editor
the parent of this component
returns true if the border is painted on the border
sets the
processes the change event
paints the specified
paints the immediately
adds a button to the list
repaint the rectangle
returns the selected row count
paints the component
adds a new component to the list of checkboxes
add a radio button to the radio button
executes the execution of the current thread
paints the border
sets the enabled state of the controls
returns true if the user is enabled
returns the tooltip for the given mouse event
disposes the toolkit
returns the ancestor level of the top level ancestor
returns the location tooltip location
adds an action listener
returns the debug id
removes an action listener
checks that the properties of the current map is enabled
processes key events
this method is called by the framework to set the parent
creates the default margin
scrolls the view to visible
returns the properties for the client
add a button to the list
removes a button from the list
returns the selected model
sets the selected button
returns true if the given model is selected
returns the preferred size of the component
this method is called by the awt parent classes
sets the size of the component
get the layout manager
sets the layout
sets the image
sets the layout
this method is called by the container to create the
returns the debug id
sets the parent of this component
disposes the toolkit
sets the valid value for the validation
sets the action
creates the parent container
creates the default margin
factory method for instantiating the accessible context context
adds a component to the container
adds a component to the container
this method will be called to edit the internal frame
add a new component to this
sets the flag indicating whether or not the tabbed panel is used
returns the next location of the frame
inserts a new into the
returns the icon for this icon
hook for subclassers to implement the default tab selection listener
shows the selection
refresh the frame
sets the icon
updates the frame at the specified frame index
removes the specified frame from the frame
adds a new menuitem to the menu
adds a new menuitem
sets the icon for the icon
adds a component to this container
returns the component at the specified index
sets the icon for the icon
removes the component from the list
removes the specified index from the list
sets the selected icon
sets the icon for the icon
returns the popup menu
sets the selected icon
sets the icon for the icon
sets the number of visible rows in the table
returns the debug information
sets the background color of the selection
this method is called by the framework to initialize the tree
sets the foreground color of the component
sets the current value of the code indeterminate code property
creates a new dialog to this component
registers the tree to the tree
creates an internal frame for the given title
this method is called by the framework to set the
sets the data object for the given data object
sets the data in the list
refresh the frame
lays out the scroll pane
returns true if the list is default
sets the interval between the start and end points
this method is called when the frame is closing
sets the grid
notifies all listeners that the tree is expanded or collapsed
sets the renderer used to render the header
change the state of the selected state
returns the tree path for the given node
process mouse event
processes key events
sets the style of the font
this method is called by the framework to create the parent
creates the shell
returns the insets of the border
returns the insets of the border
sets the horizontal alignment of the component
returns the debug id of the object
sets the font
sets the color of the abductor
sets the border
returns the horizontal alignment of the image
checks if the component can handle focus
sets the vertical alignment of the text
sets whether or not the decoration should be drawn
returns the title of the page
adds a component to the layout
removes a component from the layout
returns the vertical alignment of the image
returns the preferred dimensions for this layout given the components
returns the minimum dimensions needed to layout the layout
returns the maximum size of the container
adds the specified component to the layout
checks if the given file exists and is a file entry
returns the horizontal alignment of the specified layout
removes the decorations from the pane
returns the y alignment along the y axis
invalidates the layout manager
adds a component to the tab panel
updates the decoration with the current frame
invalidates the component
returns true if the needs to be rebuilt
adds a new code code to the code code
returns the default renderer for the given class
processes action events occurring on this event
convert the value to a string value
processes the event
scrolls the tree to the specified path
creates the default margin
process an action event
processes the event
sets the margin between the border and the
returns the margin
sets the text
returns the text of the text
sets the selected index
sets the text
called when the next component is available
this method is called when the component is focused
sets the mnemonic key
returns the path for the specified row
sets the tool tip text
returns the page text for the given url
scrolls the reference to the specified reference
sets the model
returns the model
click the click
simulates a click on the button
updates the text of the peer text
returns the text of the document
registers the hyperlink hyper link events
returns true if the selected state is selected
extends the caret to display the given style
sets the selected state of this menu item
applies all the to the
clears the current state of the peer
sets the selected state of the button
sets the filter extensions
returns the current
gives notification from the document that an attribute or set of attributes
returns the mnemonic of the menu
gives notification that something has changed
sets the mnemonic key for this component
sets the group
calculate the width of the matrix
updates the mapped action
updates the tool button
sets the root visible attribute
sets the tool tip text
sets the text
returns true if the root node is visible
returns true if the current state of the is rolled
open the dialog
shows the dialog
sets the auto columns of the model
shows a dialog to select directory select dialog
refreshes the table
sets the model
returns the maximum size of the image
returns the action command for this action
sets the frame menu bar
calculates the of the cols rows
sets the text
sets the icon
sets the horizontal alignment of the component
sets the vertical alignment of the component
sets the background color of the
notify listeners that the property change
creates a new position in the current position
inserts a string into the position where the text is inserted
removes the specified object from this set
returns the string value of the specified attribute
returns the chars of this code part code
sets the foreground color of the component
adds a portion of the given code string code to the given
update the model from the given text model
adjust the size of the image
sets the document
returns the debug id
returns the preferred size of the preferred size
removes the specified document from the document
insert a string into the document
toggle the window state
returns the string representation of this object
renders the
returns the debug information
updates the selection in the table
notifies all listeners that have registered interest for
this method is called by the container to create the parent group
creates the component
returns the location of the divider
sets the size of the divider
copy the model to the model
sets the resize weight
sets the touch touch to true
resets the size of the component to the preferred size
sets the location of the divider
the problem
sets the model dirty flag
updates the list of
creates the default table model
this method is called when the user selects the
sets the dirty flag
registers cursor events
registers the selection listener
paint the component
creates the parent
invoked when editing is canceled
returns the peer that is currently running in the peer
creates the
invoked when editing is stopped
processes the click column
adds a new demo to the current module
sets the event id
returns true if the popup trigger is a trigger
adds a listener to the tree
shows the
sets the button
removes the specified mouse listener from the canvas
creates the splash screen
hides the dialog
sets the key char key
sets the visibility of the component
resets the polygon
returns true if laf is available
translate the given point
adds a point to the polygon
returns the debug id of this object
returns true if the component is visible
invoked when the table model changes
returns a clone of this object
adds a component to the layout
returns the applet
recomputes the bounds of the current element
sets the location of the peer location
flush the image
sets the layout
returns the maximum window bounds
sets the layout
returns true if the panel is visible
creates a new graphics object
returns the content pane of the applet
returns the debug id of the debug
revalidate the cache
this method is called when the user modifies the
adds a component to the layout
creates the table cursor
sets the enabled state of the controls
returns the string value associated with a key
removes the component from the container
removes a component from the cache
returns true if the user is enabled
disposes the toolkit
requests that the current component is focused
creates the container
sets the look and feel
grab the focus on the current component
finds the component at the specified location
factory method for instantiating the accessible context context
print the tree
this method is called by the thread when the repaint is
returns the current type of the cursor
returns the name of the
creates the awt peer for the awt awt
this method is used to set the style of the font
returns true if the background is set
returns true if the foreground is underlined
initializes the dialog
brings this object to the front
this method is called when the user presses the back button
sets the background color
runs the test
runs the test harness
tests the code set code implementation
test the test
sets the background color
returns the graphics context for this component
returns the size of the peer
returns the size of the component
returns the size of the specified image
sets the size of the image
returns the width of the image
returns the height of the image
sets the width of the image
sets the height of the image
returns the bounds of this peer
sets the bounds of this component
returns the location of this component
returns the location of the peer
sets the location of the window
returns the x coordinate of the location
returns the y coordinate of the y coordinate
invalidates the current state of the cache
called when the application is loaded
sets the preferred size of the component
returns true if the size of the set of the
sets the maximum size of the component
returns true if the maximum size is set to the maximum size
returns the maximum size of this component
returns the minimum size of the component
returns the minimum size of the component
sets the minimum size of the component
returns true if the minimum size of the
returns the preferred size of the component
returns the preferred size of the preferred size
calculates the preferred size of the component
returns the horizontal alignment of the image
returns the alignment of the y axis
sets the x coordinate
sets the y coordinate of the y axis
returns true if the specified coordinates are inside the boundary of the
returns true if the point contains the specified point
tests if the specified coordinates are inside the boundary of the
enables or disables the focus traversal keys
creates an image with the specified width and height
sets the font for this component
returns true if the font is a font
sets the tool tip text
transfers focus to the receiver
transfers focus to the current state of the backward
transfers focus to the current component
returns the name of the component
sets the name of the component
sets the cursor
returns true if the component is focusable
sets the focusable attribute of the object
disposes the component
this method is called when the component is destroyed
adds a component listener to this component
removes a component listener from the list of listeners
adds a mouse listener to this component
removes a mouse listener from the list
adds a mouse wheel listener
removes a mouse wheel listener from this canvas
adds a mouse motion listener
removes a mouse motion listener
adds a key listener to the listener list
removes the specified key listener
removes the specified focus listener
adds a input method listener
removes a listener from the input method
adds a listener for the hierarchy hierarchy
removes a hierarchy listener from this component
process an action event
this method dispatches the event handler to the mouse listener
process mouse motion events
compute the target of the frame
processes key events
processes focus events occurring on this component
processes input method event
registers the component
hook method for subclasses to override the default
returns true if the component has focus
returns the lock object associated with this tree
returns the debug information
gets the accessible context associated with this object
creates accessible context object
returns the id of the component
returns the size of the list
returns the type of this
returns the architecture
returns the operating system
returns the signature type
returns the type of this object
closes the current session
returns the data type for the given tag
returns the tag for the specified tag
returns the tag with the specified name
sets the tag for the tag
sets the tag for this tag
returns an xml representation of this object
sets the specified tag
returns the id of the tag with the given name
returns the name of the tag name
checks if the tag is valid
checks if the given code name code is valid for the given
this method is called by the client to inform the application
sets the index of the current
tests the
test the default format
tests that binary format
test that the old ascii format is correct
test the
test that the types of the tokens are correctly loaded
returns the file url for the given file name
test the
returns the file url for the specified file
sets the format of the current entry
puts the next entry in the database
returns the filesize of the file
finishes writing the current entry to the file
closes the underlying input stream
returns the size of the header

closes the entry
reads a single byte from the buffer
sets the size of the file
sets the mode for this
returns an iterator of all keys that have the same namespace
prepares the libraries for the libraries
handle export check
returns the number of deleted directories
returns the number of directories created in the directory
adds the deleted directories count to the directory
adds a new directory count to the list of directories
returns the number of files in the list
returns the number of deleted files
adds the deleted files to the list of deleted files
returns the number of bytes in the database
returns the time elapsed since the last time the thread was started
adds the number of files to the files
adds a number of bytes to the total number of bytes
adds a time elapsed to the current time
returns the average speed in seconds
returns the average size of the file
adds a new stats to the pool
test of get key method of class org
sets the pattern
returns the error attribute content
sets the error attribute content
adds a to the store
checks if the given xml node is valid
load the document
gets the
sets the
adds a attribute to the store
returns the tag of the tag
adds a new attribute validator
returns the content pattern
sets up the fixture for example open a network connection
ensure that the validator correctly works correctly correctly
tests that the correct validator
sets the error attribute value
returns the error attribute name
test that the tag is null
sets the error tag
test that multiple attributes are correctly set
adds a tag to the store
sets the file pattern
returns the error tag name
gets the value of file
sets the pattern
gets the
sets the error tag name
returns the error pattern for the error
checks if the file is valid
sets the directory where the file is used
sets the recursive
returns true if the directory is an error
adds a to the
returns true if the file is
adds a new pattern to the
recursively iterates through the directory and recursively all subdirectories
checks if the file is a file
checks if the file exists in the file system
check if a sub directory is a sub directory
sets the required value for this field
sets up the fixture for example open a network connection
tests the file when the file is
test err file
tests ok
tests the file
tests the err of a file
adds a file to the list of files
tests that the file name is properly appended
adds a pattern to the file store
tests ok
test that verifies that the directory where the directory is correct
tests the of the directory
test that a directory is
returns the arguments
returns the required arguments
returns the data for the specified parameter
returns the argument with the specified name
adds a data container to the container
this method is used to execute the method
sets the data container
check if the current user is allowed to match the query
returns the error group with the specified
returns the checked value
returns true if the match is in the match
returns the parameter name
adds a listener to the list of listeners
returns the name of the argument
adds a listener to the list of parameters
checks if the constraint is equal to the given element
returns the ok and
returns the value of the
returns the throw exception
sets the ok button
check if the current token is a valid
returns the identifier of the
check if the current value is valid
checks if the current user is allowed to perform the
checks if the current date is valid
returns the identifier of the
returns the identifier of the
returns the identifier of the
adds a parameter to the request
adds an error listener to the list
returns an enumeration of the elements in this container
add a new error listener to the list
checks if the current user is allowed to perform the check
gets the new instance of the group
returns an instance of the error
returns true if the iterator contains more elements
returns the identifier of the
returns the next element in the iteration
returns the field name
returns the message
sets the regular expression for the regular
returns an instance of the code code object
returns the regular expression for the regular expression
returns the errors that are not scheduled in the
create an instance of
sets the
returns the
sets the
gets the
sets the file
getter for property
adds a to the
adds a new to the
checks if the file is already loaded
checks if the file name matches the file
check if a directory exists in the directory
adds a file to the
checks if the current record is valid
fills the error group with the given error
returns the error group with the specified
sets the data
sets the body
sets the date
sets the email
sets the subject
execute the ok action
gets the value of the ok do property
sets the error group
sets the ok button
checks if the current user is allowed to check the
returns the identifier of the
sets the regular expression for the regular
sets the
sets up the fixture for example open a network connection
sets the indent
removes the specified container from the container
sets the container component
returns the container component of the container
adds a component to the container
updates the components of the component
adds a component to the panel
adds a component to the panel
notifies the listener that the selection has changed
returns the component that is currently over the given component
replaces the component with the replacement in the given
removes the specified portlet from the panel
returns the position of the panel in the specified panel
convert the grid value to a snap
constrain the drag and drop down component
returns true if the grid is in the grid
initializes the servlet
log the given message
log a message on the logger
returns the code output stream code that is used to write the
this method is used to determine if the session is a valid
performs the action
called when the client is terminated
returns the heartbeat value for the specified number of
returns the initial node
end the trace of the stack
sets the initial node
merges the trace node with the given trace and merges it with
the stack trace for the given instruction
returns true if the given node is a loop node
returns the node that is the given model
adds new nodes to the node
returns the node that is associated with the given instruction
this method is called by the method to invoke the method
returns true if the node is looping
connects the receiver to the target node
returns the end of the node that is currently being used by
this method is called to the dot file
traverses the branch and returns true if all edges are traversed
adds new edges to the node
returns true if all nodes are branch
returns the number of recursive recursive for the given instruction
analyses the node and reconstructs the edge
adds the end of the edge to the end of the end
returns the dot representation of this instruction as a string
returns true if the instruction is
puts the given code code as a code snippet code to
removes the specified loop end node from the end of the tail
returns true if the instruction is a instruction instruction
the edge edge edge edge
creates a new false for edge end edge
creates the edge that is used for the edge
returns the value of the property
returns the value of the option
returns the value of the option
add an option
returns the value of the option
returns the value of the option as double
returns true if the given option has an option
returns the device name
returns the shared shared file name
returns the value of the pay pal field code code
initialize the options
returns the file path
returns true if the folder has any options
runs the
returns the media
returns true if the value of the option has changed
returns true if the option is in the
returns true if the media has any
returns the character that this option is to
returns true if the user has to be searched
sets the option
returns true if the target has a target
returns the target
initialize the options
this method will be called by the database
sets the standalone flag
runs the
returns the name of the usage of the command
show usage help
shows the version of the application
this method is called by the framework to initialize the options
sets up the fixture for example open a network connection
initialize the
initialize the options
tears down the fixture for example close a network connection
initialize the
export the current theme
returns true if the option is a help option
returns true if the user is a verbose option
runs the
this method is called when the exit is done
starts the thread
exits the application
this method is called by the core
sets the template
returns the template
initialize the options
returns the hash hashtable
returns a filename for a song
increments the number of songs
increment the number of songs added
increase the number of songs
runs the
returns true if the file is required
returns the display name
returns the file name of the file
returns true if the file has a file
returns true if the user wants to overwrite the file
initialize the options
sets the song
compare this object to another mime type
deletes this object from the database
sets the file to be used for the songs
sets the
returns true if the given matches the given
returns true if the given has been configured to be consistent
returns true if the given is a legal
returns true if the given matches the given
returns true if the given interval is in the same as the
this method is called by the server to run the
deletes the current playlist
returns the artist at the specified index
returns the first artist of the first artist
returns the last artist
save the specified playlists
this method is used to save the current state of the database
adds a song to the playlist
adds a new song to the list of songs
returns a list of all the objects in the playlist
add a new playlist to the playlist
adds a new playlist to the playlist
returns the playlist
returns the playlists
returns the songs
adds a new artist to the playlist
adds a new artist to the list of artist
adds a new artist to the list of artists
sets the artist
returns the artists artists object
gets the artists object
sets the composer
returns the completed
adds a new artist to the playlist
add a composer to the list of
adds a new to the list of all the
returns the composer
returns a object that represents the current playlist
adds a genre to the list of songs
adds a genre to the list of the
removes a genre from the list of
removes a genre from the database
removes all songs from the playlist
sets the genre of the news
returns a for the
returns a for the
adds a rating to the list of users
adds a rating to the list of
adds a rating to the list of ratings
removes a rating from the list
removes a rating from the list
removes the rating from the current user profile
sets the rating of the given rating
returns the user object at the specified index
sets the rating
returns the first user in the user
returns the last user who made the user
returns the genre at the specified index
returns the first genre of the list
sets the rating
returns the last genre
returns the rating of the given user
returns the rating
returns the owner of this user
sets the owner of the user
sets the owner of this object
sets the label
get the usage of the current song
returns the
returns the number of songs in the playlist
returns true if the artist is
this method is used to create a new
shuffles the
returns the
compare the object to another playlist
normalizes the current state
returns the minimum value of the range
sets the minimum value for the slider
returns the maximum number of characters in this
sets the maximum value of the range
resets the counter to zero
returns true if the given range is in range
returns a string representation of the object
gets the value of the criteria property
sets the criteria for this object
save or update the given record
save the current state of the datastore
merges the with the given entry
compares this object with the specified object for order
deletes the session
delete the current playlist
deletes the song
returns the owner of this user
add a sort order criteria
adds a new criteria shared to the group
returns the shared flag
returns the ignore case
sets the value of the sort order property
sets the owner of this user
sets the owner of the user
sets the value of the code shared code property
sets the ignore case
adds a group to the group
removes the specified group from the group
opens a group with the specified group
open a group
closes the group
compares this object with the specified object for order
returns the list of groups that this group is managing
deletes the object from the database
returns the list of group values for a group
returns the songs
this method creates a new
returns the songs
returns a new code code object that can
returns the playlists
returns the albums albums for the given level
returns the albums albums
encrypts a string
sets the password
login to the server
compares this object with the specified object for order
deletes the session
compares this object with the specified object for order
deletes the service
returns the song at the specified index
returns the first song
returns the last song
returns all artists in the playlist
tests if the album is a same as the same as the
tests if the artist is a valid artist
check if the genre is valid
check if the year is valid
forces the application to be
forces the to be opened
this method is called when the user selects a new artist
this method is called when the user selects a new artist
this method is used to set the genre of the news
forces a new owner to the given owner
force the year to be
force a year to be used in the year
returns a string representation of the given song
returns the of the song
save the current song
returns the save song
deletes the current song
adds a new artist to the list of songs
removes an artist from the list of songs
removes the artist from the artist
removes all songs from the playlist
returns the artists artists object
gets artists artists object
removes all songs from the playlist
adds a new artist to the song list
sets the value of the name property
returns the column
sets the column
returns the unknown column
sets the value of the unknown column
gets the unknown type
sets whether zero zero is unknown
returns true if the is null
sets whether the should be used as a
returns the sort column
sets the value of the sort column
returns the table
returns the unknown table
sorts a column in the table
adds the criteria to the list
adds a query to the criteria
adds a new object to the list of criteria
adds a new
returns a object representing the of the
compares this group with another group
adds a genre to the list of songs
removes a genre from the list of songs
removes all songs from the database
returns a for the
adds a rating to the list of users
adds a rating to the list
removes a rating from the current profile
sets the rating of the given rating
returns the rating of the given user
returns the audio file
returns the filename of the audio file
sets the filename
returns the filesize of the audio file
sets the filesize
returns the media object
sets the media
sets the media to be used for the media
returns the location of the audio file
returns the quality of the audio file
sets the quality of the audio file
sets the quality of the quality
returns the songs
returns the audio file
add a new playlist to the playlist
returns the playlists
sets the playlist
returns the album
sets the album
sets the year
sets the user in the given user
sets the user who made the user
clears the
this method is called when the user selects a new artist
compares this object with the specified object for order
deletes the session
returns the website at the specified index
returns the first website object
returns the last website
adds an artist to the list of all of the
returns the referrer of the
compares this object with the specified object for order
deletes the object from the database
deletes the playlist
returns a list of all the in this list
returns a string representation of the given string
returns a string representation of the object
deletes the song
save the artist
save the current date
returns the name of the
adds a genre to the list of songs
removes a genre from the list of all the
removes all artists from the database
returns a for the
returns a for the uddi
checks if the given string matches the given artist
checks if the given code artist code is in the list of
adds a website to the list of website objects
returns the of this
compares this object with the specified object for order
deletes the session
compares this object with another
deletes the object from the database
compares this label to another object
deletes the object from the database
adds a new composer to the list of songs
adds a comment to the list of
add a new to the list of songs
add a new file to the playlist
adds lyrics to the
adds a new owner to the list
adds a player who made the current user
adds a playlist to the playlist
adds a new song to the list of
adds a new position to the list
adds a new position to the list
adds a new code code to the list of other objects
add a quality to the playlist
adds a rating to the list of ratings
adds a year to the list of years
adds a year to the list of days
adds a year to the list of years
save the media
save the current state of the save entity
sets the location of the location
merges the given media to the given media
compares this object with the specified object for order
deletes the session
save or update the audio file
returns the filename of the file
sets the value of the file
sets the media
sets the mimetype
sets the quality of the quality
clears the
returns the file name of the file
save the audio file or directory
merges the track with the specified track
deletes the song
deletes the current session
returns the playlist at the specified index
returns the first playlist
returns the last playlist
deletes the object from the database
initialize the options
runs the action
returns true if the file is required
returns the album
returns the artist of the song
returns the composer value
returns the comment
returns the genre of the song
returns true if the option is a valid option
returns the label of the option
returns the lyrics value as a string
returns the owner of the option
returns the range
returns true if the has
returns the quality of the quality
returns the query
returns true if the query has any options
returns the rating
returns the sort
returns the title of the frame
returns the location of the option
returns the year of the year
sets the value of the property
returns the drive
sets the server
returns the category of this
returns the
returns the code

returns true if the file is inserted
returns the url of the option
returns the number of songs in the playlist
returns the number of songs added by the player
returns the number of songs in the playlist
returns the songs
called when the start of a start element is encountered
returns the integer value of the specified index
returns the integer value at the specified index
returns the first integer of the first element
returns the first integer value of the first element
returns the last integer
returns the last element of the current
returns a string representation of this object
returns a list of all the in this list
returns the most popular
returns the least
returns the distinct distinct distinct values
returns the number of distinct distinct keys
returns the minimum value of the range
returns the maximum value of the range
adds all the items in the given list to the given list
returns the string at the specified index
returns the first string of the first element
returns the last string
returns a string representation of the given string
returns a string representation of this object
returns the most popular
returns the least
returns a distinct comma seperated list of distinct names
returns the index of the first occurrence of the specified value
returns a list of the
returns a list of the
returns the metric of the given metric
returns the value for the given
normalize this string
compare to string to compare to
initialize the options
initialize the options
converts a file to a wav file
creates a new instance
returns the endpoint of this endpoint
returns true if the endpoint has a endpoint
prepare for a new object
this method is called when the user finishes the input
this method is called on the tree
returns true if the option is a
returns true if the tag is a start tag
returns true if the user has to be stopped
returns true if the user is a
returns true if the option is a force
sets the template
this method will be called by the database
runs the
prints the current output
initialize the options
runs the
show the dialog
run the job
invoked when an action occurs
this method initializes the
this method is invoked when the user clicks the menu
returns the size of the options
invoked when the target of the listener has changed its state
runs the
initializes the options
set the endpoint address for the specified port name
invoked when an action occurs
returns the of the given row
runs the action
runs the action
returns the tool tree description
returns the song at the specified index
returns the first song song
returns the last song in the playlist
removes a song from playlist
removes all songs from playlist
gets the artists object
deletes the playlist
deletes this playlist
returns the music map associated with the specified index
returns the first music map
returns the last music map
add a sort order criteria
returns the list of group values for a group
returns a new code code object that can be used to
returns the albums albums for the given level
returns all artists in the database
returns the years of the song
shuffle the
this method returns the song at the specified size
returns a new code code object that is the current
returns the names of the songs in the playlist
sorts a table by criteria
sets lyrics for the given lyrics
returns the lyrics as string
finds the rating of the given user
sets the rating of the given rating
sets the position of the code code
deletes the session
returns the feature at the specified index
returns the first feature
returns the last feature
adds a new composer to the playlist
adds a comment to the list of songs
adds a new to the playlist
adds a location to the playlist
adds lyrics to the list of lyrics
adds a new owner to the list
adds a player who who who who who who who who who
adds a new playlist to the playlist
adds a new to the list of the
adds a new position to the list
adds a new code code to the list of other objects
add a quality to the playlist
clears the
deletes the song
returns true if the application is a valid option
initialize the
this method is called on the tree
this method is called when the user selects the selected button
this method is called when the project is opened
this method is called on the
returns the owner of the option
returns true if the option is set
returns the playlist
returns true if the playlist has a playlist
returns true if the value of the option is a legal value
get the usage of the application
initialize the options
this method is called by the server to run the
returns the number of rows in the table
returns the column name
returns the most specific superclass for all the cell values in the
returns the value for the cell at code column index code and
returns the general options
returns the column name for the specified column
returns the value for the cell at code column index code and
returns the number of rows in the model
returns the column name
returns the value for the cell at code column index code and
invoked when an action occurs
listens to the table selection
returns the number of rows in the table
returns the column name
adds the given component to the list of options
listens to the table selection
listens to the table selection
highlights the selected tab
highlights the given points in the list
invoked when an action occurs
invoked when a mouse button has been released on a component
sets the playlist
adds a playlist to the playlist
clears the model
invoked when a mouse button has been released on a component
invoked when a mouse button is pressed on a component and then
invoked when an action occurs
updates the table model
returns the most specific superclass for all the cell values in the
returns the column name for the specified column
returns the number of rows in the table
returns true if the cell at row and column index and column
clears the songs
highlights the highlighted highlight
highlights the given points in the list
handles the given action event
handle the key released event
returns the number of children of code parent code
adds a listener for the tree model event posted after the tree
removes a listener from the tree
returns the child of parent at index code index code at index
returns the index of child in parent
adds a new to the tree
returns the search criteria
creates a new search criteria for the given node
returns the search criteria
creates a new search criteria object
creates a new search criteria object
returns the search criteria
returns the search criteria
returns the search criteria
this method is used to add a new search criteria
returns the search criteria
creates a new search criteria object
creates a new search criteria for the given node
returns the search criteria
load a map from the given name
refresh the model
sets the data object for this object
this method is called when the user finishes the songs
prepare for a new data
initialize the options
starts the player
this method is called when the player is destroyed
starts the playback of the sound
this method is called when the user clicks the play
change the parameter value
returns the available value for the current
resets the buffer to the initial state
adds a new bean to the
returns a bean from the current session
returns a bean from the map
adds a list of arguments to args
sets the bean
configures the
initialize the
sets the configuration file
sets the configuration of the configuration
sets the bean property
sets the logger to use for logging
sets the configuration of the resource
sets the show beans property
returns true if the debug is enabled
adds the beans to the configuration
configures the bean with the given configuration
returns the external bean
the agent
set the debug flag
configures the writer
sets the writer
prepares a message with the given level and returns the result
post configure the bean
configures the bean
helper method to lookup a variable
returns true if the request is required
creates a temporary job folder
generates a unique string representing the time of the current job
this method initializes j panel
this method initializes j panel1
this method initializes j scroll pane
this method initializes j panel2
this method initializes input
this method initializes delete
this method initializes j scroll pane1
this method initializes editor
this method initializes log
this method initializes btn timer
this method initializes j panel3
this method initializes host port
this method initializes btn conn
this method initializes chat test
this method initializes j panel4
this method initializes this
this method initializes j content pane
sets the direction of this player
returns true if the game is done
sets the thread name
writes the given data to the output stream
flush out the current output stream
returns the name of the thread that this event is to be
returns the direction of the player
checks if the given data is chunked
fires an action event to the desktop
this method initializes this
this method initializes j content pane
this method initializes j button cancel
this method initializes this
this method initializes j content pane
this method initializes j content pane
closes the window
this method initializes j button ok
closes the window
returns the filename of the text field
saves the configuration to the server
this method initializes j text field client
returns the direction of the radio button
this method initializes j button cancel
this method initializes j text field server port
this method initializes j text field server address address
opens a file chooser dialog to choose the file chooser dialog
this method initializes j text field client address
this method initializes j button ok
this method initializes j button ok
this method initializes this
this method initializes j content pane
this method initializes j panel button
checks if the given plugin is available
creates the menu popup menu
sets the active plugins server
gets the value of the server address property
sets the active plugins client
returns the default file name for the current server
returns the server port
load the configuration properties
returns the client address
store the properties in the properties file
returns the client port
convert the list of strings into a string
loads the configuration data from the configuration
stores the properties in the database
sets the server address
sets the client address
sets the server port
sets the client port
sets the size of the image
initialize the xml document
this method is for the of the gui
adds a new row to the table
clear the table
parse the request
parse the response
returns the current indent level
returns the filename of the file
returns the default file name for the current user
start the prefix mapping
open a new file
sets the file to be used for the file
this method initializes j
this method initializes j
updates the data in the given tree
initialize the tree
expands all the rows in the table
this method will be called by the server to send a message
collapses all the nodes in the table
export the file to a file
returns the timestamp of the last modification
this method will be called from the
sets the timestamp
returns the message with the given id
sets the direction of the arc
returns the size of the image
returns the message
gets the value of the complete property
returns the raw data
sets the raw data to the given string
sets the body of the body
sets the raw header
sets the body of the message
sets the message header
returns the current header
returns the raw header
sets the relay model
returns whether the client is body
returns the body of the message
load all plugins
returns the body raw body
returns the content length pattern
updates the active plugins
checks if the input stream is chunked
updates the active plugins status
sets the active plugins status
sets the active plugins server
clears the active plugins
clears the active plugins
shuts down all plugins
updates the current status of the gui
this method initializes j send send to server
this method initializes j send send to client
this method initializes j text pane client raw raw
this method initializes j tabbed pane client
this method initializes j scroll pane client raw
this method initializes j tabbed pane server
this method initializes j scroll pane server raw
this method initializes j text pane server raw
this method initializes j jmenu bar
this method initializes j menu file
this method initializes j menu item exit
this method initializes j menu view
this method initializes j menu item clear all
this method initializes j menu item clear left
this method initializes j menu item clear right
this method initializes j menu help
this method initializes j menu item
this method initializes j menu item about
this method initializes j menu item
this method initializes j menu item export
this method initializes j split pane horizontal
this method initializes j panel right
this method initializes j tool bar
this method initializes j panel center buttons
reloads the plugin tab
this method initializes j split pane vertical
this method initializes j panel history
this method initializes j scroll pane table history
this method initializes j toggle button relay
this method initializes j toggle button
enables disables the sending of the buttons
disables the sending of the send to the server
enables the export action
disables the export action
this method initializes j status bar
sets the of the server side
registers a new comment with the given
returns the source file for the given include
returns true if the print writer should be used to render the
sets the path to the include path
sets the path to the include path
sets the comment
defines a macro
defines a macro
returns true if the debug level is enabled
returns true if the trace level is enabled
returns true if the level info is enabled for the info level
returns true if the given macro is defined in the macro
returns true if the logger is enabled for the warn level
returns true if the error is enabled
returns true if the fatal level is enabled
returns true if this is a silent level
sets the include locator
sets the file
sets the file name
end a comment
returns the output processor
sets the output source
returns the
sets the
returns the output processor
sets the output processor for the source
start the
returns true if the line numbering is allowed to be used
sets the source locator
sets the line number preserved flag
prints a string
start the
end the buffer
sets the source locator
prints a string
print a string
end the current sequence of the
sets the file
sets the file name
returns the set of outputs
register a new comment
sets the set of outputs
adds a new output processor to the output stream
removes a code output code from the processor
sets the logger
sets the reader
returns the output processor
sets the processor to use for this processor
returns the current line number
returns the source locator
sets the writer
start the
prints a string
print a new line and terminate the line
closes the current output stream
closes the writer
returns the parent environment
returns the macro value
define a define
defines a named definition
sets the macro defintion of the macro
removes a macro from the macro
define a macro
define a macro
sets the
returns true if the macro is defined in the macro
sets the file to the specified file
sets the file to the specified file
this method initializes s shell
this method is called upon plug in activation
this method initializes this
returns the integer value associated with the specified key
returns the value of the specified key
returns the long value associated with the specified key
returns the value associated with the given key
sets the property
returns true if the output stream was successful
sets the project container
sets the project build dao
sets the branch dao
sets the build dao
sets the dao
adds a new project thread to the project
sets the ant ant project
returns the project build
sets the directory where the base directory should be
sets the builder builder
sets the project base
sets the quiet period
sets the branch name
sets the branch summary
sets the project container
returns the directory where the publish directory is deployed
returns the project name
returns the dependent projects
returns the status string
returns the status of this object
sets the project def filename
returns the project with the specified name
returns true if the task has failed
returns the project at the specified index
parses the xml definitions from the file
returns true if the status of the building is required
start a new element
returns true if the has been
returns the list of changed files
build the status of the build status
adds a project build project
build build project
returns the build build object
sets the
returns the build changed for the given build
returns a list of all the projects
returns a list of project for the given build build
sets the task dao
returns a list of all project logs for the given project
returns an action by id
update the list of parameters
returns a list of actions for the given iteration
sets the svn client
sets the svn database url
sets the svn password
remove a task from the database
returns the current repository revision
removes the given from the database
returns the revision for the given branch and project
returns a list of all the for a given branch
returns a list of recent build summaries for a given branch
returns a list of all tasks for the specified action
returns a list of all build summaries for a given branch
creates a new task
builds a summary of the given
removes a task for the given action
returns the build for the given id
returns a new instance of result set
update the list of parameters
returns the number of builds the given branch
returns branch summary branch id
returns a list of all iteration
returns the last revision of a branch
returns branch summary branch branch branch branch branch branch branch branch branch
returns the iteration for the given id
returns the current iteration
get the most recent build for a branch
execute the iteration
returns a list of all branch summaries
removes the specified iteration
creates a new branch summary
get the for a branch of a branch
update branch update update
sets the user sequence
returns the user object identified by the id
returns a list of all users for the given action id
creates a new user
sets the name of the object
sets the surname
sets the email
sets the city
sets the notes
returns a string representation of this object
returns a string representation of the object
returns the members of the collection
returns a collection of events
returns the font used for the font
sets the current screen to the center of the screen
sets the location of the center of the image
end the end of the time interval
prints the
returns the point that corresponds to the given point
adds a new string to the default log
returns the primary
load image panel
sets the font
sets the property value for the given bean valued property
creates a new excel template with the given path
sets the resource
creates a cell mapper for the given row
creates a new instance of the given class
add a new object to the list
add a new test to the list
adds a new code code to the list of
adds a new entity to the list of
adds a new to the list of simulation
returns the test result at the specified index
returns the frame that is currently running in the frame
this method is called when the user wants to change the event
returns the
pauses the simulation
returns the simulation gui
returns the delegate
returns the type of entity
returns true if the user has been activated
returns the time in seconds
returns a string representation of this object
waits for the time to wait for the specified delay
pause the
pauses the simulation
sets the before before before
creates a classpath to be used to create a classpath
sets the
sets the reference to the reference
sets the reference to the reference

sets the
generates the action declarations
performs the trigger analysis for the current project analysis
returns a list of files that contain the given string
returns a list of files that match the given filter
checks if the jar file is a jar file
creates a file from the given file
sets the time to save the current time
the truth of the
returns the object for the given
sets the owl model
creates the default error panel
returns the iri of the
returns the name of the property
returns the panel
returns the currently selected node
sets the
resets the components
resets the components
returns the option panel
returns the framework
sets the framework
initializes the listeners
resets the components
returns the model object
creates a new instance of the object
returns the owl ontology model instance
returns the selected value
returns true if the extension is contained in the given
gets the supported files description
returns true if this object can be used to load files from
generates a reasoner that is loaded from the reasoner
resets the components
returns the model object
this method is used to extract the given resource
shows the dialog
returns the uri for the given entity
returns the launch properties
returns the default random range
sets the launch properties
gets the value of the property
sets the
returns the mapping argument extractor
returns the launcher bundle
sets the launcher bundle
returns the time waiting for the next operation
extracts the name of the ontology
returns the value of sleep time
sets the content of the combo box
reads the version of the given stream
sets the value of the property
reads the owl tokens from the given file
make a file containing a list of points
sets the value of the pn property
starts the
returns true if the file extensions should be used to filter files
build the formula for the given
returns the value of the specified map property
make the linkage tree and creates a linkage tree
removes a from the table
shift the of the
test the operator
sets the
sets the
returns the number of in the
gets the
returns the
returns the
returns the first one in the network
adds a new code code to the list of
make a new list
returns the
this method is called when the is
returns the
compiles the tree
returns the tree
verifies that the actual code
this method is invoked to indicate the tree node
make a path to a sub network

returns true if the extension is contained in the given
this method is called by the
distribute the network to distribute
saves the into a network
initializes the node
cycle code for all the nodes in the graph
returns the internal frame
generate a description of the type of the given type
gets the value of the file extension property
returns the description of the ontology
sets the file extension
returns true if the is
sets the
returns the file extension
sets the file extension
returns the ontology prefix manager for the given ontology
gets the value of the property
sets the
help method to help the help
help about action performed
help about action performed
sets the map name to the type name
help about action performed
classifies the given instance
returns the root node of the tree
evaluates the given classifier
the
sets the map of states
sets the entity cache
sets the map of nodes to be loaded
sets the
removes all the rules from the undo list
returns true if the cache is
sets the cache to be reset
sets the type of the resource
sets the map of argument
sets the expression cache
returns true if the node is ignorable
sets up the button listeners for the button
sets the icon to be shown in the button panel
returns true if the node is immutable
sets the node that indicates whether the node is immutable
build the status bar
returns the single entity network

returns the
returns the internal frame
initializes the window
returns the of the current entity
checks if the class name is already in the list
returns the for the given name
returns the popup menu for the popup
sets the popup menu
returns the selected class
sets the selected class
returns the net list
renew the index
initialize the plugin
adds a new to the list of
returns the plugin manager
sets the plugin manager
returns the next empty character
removes a from the
returns the for the given name
returns the index of the ordinary variable in the given scope
returns the ordinary variable with the given ordinary variable
sets the input instance of the
sets the name of the node
sets the input instance of the node to the
removes a resident node child
returns the ordinary variable with the given name
deletes this object from the ordinary variable
removes the resident node from the
initializes the text
this method is called by the reactor to set the window
creates a new entity definition object
sets the of the given variable
removes all nodes from the given collection of nodes
initializes the
returns the context node of the given name
returns the domain resident node name
returns the extractor
returns the input node with the given name
returns the unique name of the node
returns the probability of the node at the given probability
adds a new argument to the
adds a new instance of argument
adds a new argument to the
sets the status bar text
removes all arguments from the list
gets the value of the property
sets the list of
gets the d
sets the separation of the
sets the cache
sets the module name
the current cpt
removes all parents of the parent
the
destroys the given entity
returns the level of the ordinary level
returns the name of the resident node
execute a command
returns the description of the node
sets the value of the parameter as parameter
sets the context cache
adds the given node input node to the
removes the resident node father from the resident node
removes all variables from the ordinary list
gets the maximum query attempt count
adds a context node to the context
adds a resident node to the list of resident node
sets the maximum query attempt count
adds the input node to the input node
adds ordinary variables to the ordinary variable
returns the maximum query attempt wait time before the query is executed
returns the object entity by name
clears all instances of the given entity
sets the
sets the parent
sets the maximum query attempt wait time
removes the given value from the list of possible value
sets the
removes ordinary variables from ordinary variable
returns the factory
creates a new child node
adds a new to the tree
sets the factory
returns the compiler object associated with this instance
returns the owl reasoner
sets the compiler
gets the value of the property
this method is called when the user selects a table
sets the owl reasoner
moves the current character to the next character
returns the owl class expression
sets the
returns true if the resident resident domain resident node belongs to the
update the tree
returns true if the input node is contained in the input node
returns a node with the given name
sets the description of the icon
sets the description of the icon
sets the node to which this node leads to
sets the
checks if the given entity is valid
reloads the entity list
updates the current entity
clears the
the
returns the file path
returns the index of the current text
sets the file path
resets the cache to the original namespace
returns the of the
returns the state at the specified index
this method is called by the view to create the
returns the size of the
returns the type of this code code
returns the multi entity network
returns the evidence tree
execute the command
sets the status
unselects all buttons in the list
returns true if the expression is empty
save a to a file
loads the class loaders into the class loaders
returns the main content pane
sets the main content pane
returns the plugin manager
sets the plugin manager
returns the swing component
gets the value of the property
this method is called by the
returns the plugin node tool bar
sets the plugin node name
removes a model from the model
returns true if the given file is contained in the given file
returns the plugin node name
adds a node to the current node
gets the plugin node text field
saves the context node to the context
sets the field name text field
load a graph from a file
returns the of the
returns the token of the given token
sets the value of the given token
saves the given relationship into the model
a
merges the given to the current state of the
returns true if the file extensions are supported by this filter
gets the value of the has argument property
test the
returns true if the is
test get domain resident domain node
sets the
sets the has argument name
test method for
load a module from a given module
test
test
test
test
test
test method for
p log the records of the log record
tests the load of a file
start the neural network
test set node as a
this method is called when the user selects a
closes the current
returns the number of nodes in the tree
returns the node at the specified index
returns the node with the given name
returns the index of the specified node
removes an edge from the graph
adds a node to the list
adds a new edge to the graph
calculates the probability of the cumulative distribution function
returns the of the given x
removes the given edge from the list of
returns the probability of the given
returns the probability of the given x
clears the nodes list
clears the edges
returns the edge that is connected to the given edge
creates the queue of the queue
sets the constant at the specified position
sets the constant at index
this method will be called by the director
compile the tree
returns the tree builder
sets the tree builder
sets the mean and acceleration of the given mean and y
update the
sets the mean and ending value of the mean object
returns the at the specified index
add all the components to the given plugin
sets the variance of the mixture distributions
returns true if the evidence has evidence
returns the index in the queue of the given node
sets the variance of the data in the list
adds a finding to the model
adds a new to the list of states
calculates the of the
returns a new network
adds a to the
returns the coordinate of the given coordinate
returns the number of in the list
gets the
sets the mean of the distribution
sets the
update the
sets the variance of the distribution
sets the likelihood of the
sets the constant at index
test add context node
normalize this node
returns the conditional probability extractor
sets the parent of this node
make the list
adds a child to this node
checks if the given is
test method for
removes a child from the list
the constructor instance for a
clears the list
test method for
copy data from data into the clipboard
verifies that the cycles are running
restore the data of the data

test that the input node is removed from the input
initializes the belief
this method is called by the constructor to initialize the
creates a path to the given node
verifies that the fringe is
returns the of the
recursive method to find the connectivity of the
returns the probability function
returns the default template
returns the node that is currently being used in the tree
returns the class of the class
sets the class of the class
sets the create log
creates a new instance of the table
returns the probability of the
creates a new instance of the table
returns the type of information
sets the value of the specified coordinates
sets the type information
propagate algorithm to mobility
sets the value at the specified index
this method is called when a new node has been added
returns the value at the specified index
sets the name of the node
this method sets the mediator
returns the code ancestor virtual nodes code that this code node code
returns the value of the specified coordinate
sets the virtual virtual nodes listener
returns true if the node is
moves the variable with the given position
sets the children
sets the parent of this node
returns true if the node is
returns the likelihood evidence for this object
returns the value of the given arg1
sets the explanation for the explanation
returns the coordinate of the linear coordinate system
compute the value
returns the explanation for the explanation
sets the
returns the linear coordinate of the given coordinate
checks if the given state has a state
compute the factors for the
adds a new state to the current state
removes the last state of the current state
verifies that the given code graph code is the of the
removes the given index at the specified index
sets the state at the specified index
returns the current states of the current state
returns the table
returns the state at the specified index
returns the text description of the edition
make the
returns the text field name
clears the
sets the sum operation
sets the
returns the sum of the operation
updates the recursive variable with the given value
update the of the
returns the normalized value
returns the weight of the node
determines if the given node is more
verifies that the tables are not
verifies that the given graph is not contained in the graph
verifies the of the
verifies the given graph
copy the nodes to the current node
returns true if the log is a log
sets the add node button
returns the add node button
sets the remove node button
update the
returns the remove node button
initialize the
sets the first initialization
sets the last table
returns the last table
returns the option panel
sets the panel to be used for the panel
builds the main panel
builds the main table
builds the table for evidence for the given evidence
sets the number format
returns the tree
lets the user know that the text they entered is the same
shows the table
sets the popup menu
returns the main button
returns the button that will be dropped on the button
returns the popup menu
this method is called when the menu is pressed
adds an action listener
returns true if the given file is accepted by this filter
this method initializes principal
adds a button to the list of buttons
adds a menu item to the menu
adds a button to the menu
removes the specified menu item from the menu
displays the text in the dialog
sets a new action
print the current page
sets the list of nodes that are used to mark the node
expands all nodes in the tree
resets the tree
returns the text area
returns the content of the text area
returns the currently selected window
sets the format of the current
sets the content text area
sets the arc arc
returns the evidence dialog
evaluate the evaluation
handles a drag gesture recognizer
returns the virtual node prefix
called when the drop is ended
sets the virtual node prefix
returns the node transfer object object
returns true if the given algorithm is loaded
returns the plugin node manager
returns the algorithm used to draw the algorithm tree panel
sets the plugin node manager
returns the current entity and arguments
sets the likelihood extractor
returns the plugin directory
returns the likelihood of the likelihood
gets the value of the property
returns the class
sets the class
sets the
returns the point
sets the algorithm extension point
creates the popup menu
returns the of the given node
sets the default classloader
returns the resource bundle for the given name
gets the value of the property
sets the
returns the frame
sets the frame
sets the
notify the listener that the reload has changed
load the plugin
adds a listener to the list of listeners
sets the
gets the value of the property
registers a class with the given class
returns the proto information for the given class
returns the mediator
sets the mediator
gets the value of the property
sets the
initializes the graph level matrix
returns true if the given container contains least one
sets the value of ignored arguments
returns the identification number of the current
returns the button that was added to the button
sets the button that will be used for the button
creates the plugin for the tool bars
returns the pane
sets the cpf pane
reloads the plugins
returns the resident node
creates a new entity and arguments
creates a rule with the rule id
clears the cache
the rule for the knowledge base
assign the action listener to the
invoked when a window is in the process of being closed
reloads the plugins
returns the extension point class parameter
sets the extension point class parameter
resets the current state of the
returns the extension point for the plugin
the next token in the stream
this method creates a new evidence object
sets the plugin module extension point
set up the stream tokenizer to use for the given stream
creates the queue of the fifo queue
this method will be called before the sampling loop
returns the index in the queue of the given node
compute the of the
returns the coordinate of the linear coordinate system
this method creates the initial state of the given network
simulates a specific amount of simulated
starts the neural network
sets the plugin list
sets up the tree
saves the response header body to the given output stream
saves the potential declaration
returns true if the current graph is
returns the button that was selected
sets the plugin split button
creates a new instance of the button
inserts a new node in the tree
removes a node from the tree
load configuration configuration
initializes the scene graph
the splash screen
this method is called when the load configuration is loaded
creates the window
removes a evidence node from the evidence
saves the given file to the given file
returns the tools menu
returns the log content
returns the sampling menu
insert a new node in the reverse order
inserts a new node in the
deletes the selected item
returns the error
returns the plugin menu
compute the of the current node
returns the linear coordinate of the given coordinate
returns evidence coordinates of given land
sets the plugin menu separator
print a log of a log
updates the progress bar
returns the counter for the counter
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
sets the counter for the counter
creates a button with the specified key
test of get method of class org
creates a new instance of
resets the given row and column in the given row
load a file from a graph ml file
returns the average value of the
returns the current score for the given score
compares two objects
sets the is to asset
returns true if this action is structure change
gets the value of the to create net net property
saves the graph to the given output file
returns true if this object is
returns the type of the node
returns true if this action is structure change
updates the graph with the given
returns true if the is
sets the
returns the default tree builder
returns the table model for the sort expression
sets the for the table
returns true if this is a
sets whether this is a

returns the value of the given argument
initialize the assets of this object
resets the to its initial state
sets the network to be used to solve the graph
returns the current network
sets the map of the property map
this method initializes components
returns the probability of the probability of the object
initializes the asset potential
find the j board
sets the original
returns true if the is
returns the initial number of the
sets the initial asset quantity
sets the
this method is called by the
returns true if the current object is
sets the of the given network
calculates the of the given
called by the framework to indicate the to the
undos the smallest possible costs of the
returns the comparator used to draw the grid
sets the comparator used to draw the cell values
sets the value of is to log assets
sets the map of network actions
returns true if the value of the
creates a new class panel
this method is called to make the current frame on the given
sets the transaction counter
sets the parent nodes
returns the transaction counter
resets the components
returns the network builder
resets the tree
sets the probability of the probability of the
returns the of the
returns the icon controller
returns the probability of the current probability of the error
this method is called when the user selects a new class
this method is called when a new is created
sets the user to asset net
returns the asset for the given id
create a new stream tokenizer for the given file
checks if the given node is in the graph
returns the of the
checks if the object is equal to this one
returns a hash code for this object
sets the id
checks if the object is equal to this instance
sets the default
returns the domain of the domain
sets the domain
returns the current log base
sets the current log base
returns the current currency constant
sets the current value of the current currency constant
creates and returns a dialog for the dialog
creates and returns a dialog for creating the dialog
creates and returns a dialog for the current user
creates and returns a dialog for displaying the dialog
returns the current chain
sets the current chain
adds a relation to the relation
removes a relation from the relation
gets the value of the type of entity property
checks if the given name is a primitive
extract the facts from the given path
returns true if the relation contains a relation
extracts the facts from the path
returns the outer class of the relation
scans the given jar file
extract the facts from the directory
resolve the
returns the design
adds a relation to the list of the
creates a new relation
this method is called when a relation is extracted
returns the super class
this method is called when the user wants to modify a fact
this method is called when a fact is changed
returns a string representation of the object
this method is called when a new object is extracted
returns true if this is a constructor
extract the signature of the parameter
translates a parameter
returns the return type of this node
translate the key key
returns the class associated with the class name
returns true if this object is visible
returns the class of the relation
returns the method for the given method
returns the field with the specified name
returns true if this class is static
add a class to the list of classes
gets the result of the
build the list of methods
adds a relation to the given relation
returns true if this is a primitive type
returns the type of this relation
returns true if the class is inner class
returns the type of the reverse relation
returns true if this class is anonymous
returns the package
gets the value of type
checks if the entity is already in the database
returns true if this entity is an entity
returns true if the relation is a relation
returns true if the array is an array
returns the name of the caller
returns the package of this relation
returns the entity identified by its name
returns the class associated with the given class name
returns the method node of the method with the given name
returns true if this class is a class
returns the field with the specified name
returns the package for the package
returns the class for the class with the given name
returns true if this class is an interface
returns the method of the given method signature
returns the field with the specified name
generate the file
reads the next line from the input stream
returns the field with the given name
returns the result of the result of the result of the result
returns the declared method with the specified name
returns the inherited method with the given name
returns the name of the class that this class represents
returns true if the class is a class
checks if the method is a method invocation
returns true if the given method is a member of the given
verify that the field is properly read only
checks if the given field is a singleton property
gets the value of the called property
returns the modifier name
process the class loader
adds a file to the list of files
test that a method is with same method
test field impact
test the method for the method specification
tests the functionality of the class
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
tests the interface with a new interface
tests the field impact
test that the method is called when the method is called
test that the method impact the
tests the of the class
tests the number of static methods
this method is used to convert the given code block code into
returns the level of the
returns the keys in the table
returns the type of the given type
create a new table
factory method for instantiating the table
returns the symbol value for the specified key
returns true if the given symbol has a symbol
returns the order number of the current
returns the type of this
sets the order number
pushes a new id onto the stack
pop the current element from the stack
sets the level of the
pushes a new type onto the stack
returns the top level
pop the current element from the stack
returns the second of the second
returns the top level type of the top of the stack
returns the second value of the second
sets the child
returns the child node of the given type
returns the children of this node
creates a new code map code instance
sets the parent of the tree
returns the cached list of children
clears the cached children
sets the child
returns a string representation of this object
returns the children of the current context
returns true if the node is a
returns the child at the specified index
returns the number of children of this node
returns the index of the given node
returns true if this node is a leaf
evaluate the scope
evaluates the given node and then terminate the statement
evaluates the given node
returns the label for the specified label
evaluates the expression
sets the label for the specified label
evaluates the expression
evaluates the expression
evaluate the expression
evaluates the given term
evaluates the expression
evaluates the expression and returns the result
declarations
evaluate the given node and all the result nodes
this method is used to evaluate the given node
evaluates the given node and then evaluates the result
evaluate the given node and all of the inputs
evaluate the next node in the tree
evaluates the given node and its children
evaluates the given node and the value of the code statement code
check if the symbol table is declared in the table
prints an error message
called when a node is invalid
creates a function function
creates a new procedure for the given identifier
creates a new parameter
pushes the symbol table to the symbol table
checks if the type is
type
checks if the type is a type
compares two types
this method is used to sort the comparison of the type
the type of the scope
sets the value of the nome property
create an instance of
sets the value of the id property
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
gets the value of the return property
sets the value of the return property
returns the
gets the value of the valor total property
sets the value of the valor total property
sets the value of the property
returns the
sets the value of the property
gets the value of the arg0 property
sets the value of the arg0 property
gets the value of the arg1 property
sets the value of the arg1 property
returns a buffered image out of the image
reads a buffered image from the file
call this method to call the method
returns the address mode for the operand
returns the minimum size of the panel
adds an error to the error list
invoked when an item has been selected or deselected by the user
returns the error start
resets all values to their initial values
updates the panel
paints the border
returns the error end
sets the error to display
returns true if the error is an error
removes the members of this instance
adds a cell to the table
sets the value of the cell
moves the cursor at the given location
forward the given number of steps to the next step
goes through the current step
forward the current cell to the current position
initialise all the data members
adds the action listeners
this method is called by the thread to run the application
returns the instruction
returns the size of the data memory
returns the condition
sets the run requested flag
starts the server
returns the string representation of the
returns the origin of the image
returns the memory used for the current line
returns the program line of the specified index
resets the data in the database
sets the original line
returns the location of the specified position in the current position
returns the number of bytes in the specified position
sets the address of the cell
sets the label of the text label
sets the label value
sets the active state
sets the current state of the active image
sets the height of the image
sets the label
returns true if the register is a register
sets the half carry operation
sets the interrupt flag
sets the negative value of this component
sets the zero value
sets the overflow status
sets the carry value
clears the half carry and clears the
clears the interrupt
clears the negative of the background
clears the zero and clear the list
clears the overflow
clears the
clears the changes
clears all flags from the current state
sets the mode
sets the hex value
sets the drawing mode
sets the
returns the current value
sets the bus x
sets the active state of this component
sets the active state of the active component
returns the x coordinate of the bus x coordinate
this method initializes this
this method initializes slider threads per scan
this method initializes this
this method initializes this
this method initializes this
this method initializes this
this method initializes this
this method initializes break panel
this method initializes btn drop
this method initializes this
this method initializes this
this method initializes btn cancel
this method initializes btn add
this method initializes j scroll pane
this method initializes btn cancel
this method initializes this
this method initializes this
this method initializes this
this method initializes this
this method initializes this
this method initializes this
this method initializes menu render
this method initializes this
this method initializes popup menu
this method initializes this
this method initializes this
this method initializes this
this method initializes this
this method initializes btn cancel
this method initializes this
this method initializes this
this method initializes this
this method initializes j scroll pane
this method initializes txt display
this method initializes btn ok
this method initializes btn cancel
this method initializes this
this method initializes txt tag add
this method initializes j scroll pane
this method initializes btn ok
this method initializes btn add
this method initializes btn delete
this method initializes btn cancel
this method initializes this
this method initializes j panel1
this method initializes txt proxy chain password
this method initializes this
sets the value of history reference
this method initializes j scroll pane
this method initializes table model
saves the given session to a given file
this method initializes this
deletes the current history
this method initializes chk use proxy chain
this method initializes this
this method initializes this
initializes the
this method initializes table auth
this method initializes this
this method initializes j scroll pane
this method initializes panel command
this method initializes this
this method initializes btn evaluate
this method initializes btn start
this method initializes txt proxy chain skip
this method initializes txt scope
this method initializes j scroll pane
this method initializes j scroll pane1
this method initializes j text area
this method initializes this
this method initializes this
this method initializes j scroll pane
this method initializes chk reverse proxy
this method initializes menu find menu
this method initializes popup menu find find menu
this method initializes menu report
this method initializes menu item last scan report
this method initializes this
this method initializes this
this method initializes panel command
this method initializes chk
this method initializes chk proxy chain auth
this method initializes chk response
this method initializes btn continue
this method initializes btn continue and gets the
this method initializes btn drop
this method initializes j panel buttons
this method initializes bar progress
this method initializes btn stop
this method initializes this
this method initializes this
this method initializes j scroll pane
this method initializes table test
this method initializes btn skip
this method initializes this
this method initializes j scroll pane1
this method initializes j scroll pane
this method initializes this
this method initializes table test
this method initializes this
this method initializes j scroll pane
this method initializes btn enable all
this method initializes btn disable all
this method initializes this
this method initializes this
this method initializes pane scroll
method that will be notified of command line events from the command
this method initializes btn stop all host
this method initializes this
this method initializes this
this method initializes pane progress
this method initializes default pane
this method initializes log panel
this method initializes this
this method initializes btn apply
this method initializes btn cancel
this method initializes btn reset
this method initializes menu reset session state
this method initializes j scroll pane
this method initializes table filter
this method initializes txt pattern
this method initializes j scroll pane
this method initializes btn enable all
this method initializes txt result
this method initializes btn disable all
this method initializes btn search
this method initializes j panel3
this method initializes j button
this method initializes j panel4
this method initializes log panel
returns true if the header is a header
returns the value of the parameter with the given name
returns the value of the header
this method initializes j radio button
this method initializes j radio button1
this method initializes j panel6
returns true if the image is a jpeg file
replaces the header with the specified value
adds the internal header to the header
notify listeners that a request is notified when the user changes
notify listeners that a response is received
append a boolean value to the current scope
sets the time elapsed
returns the list of objects in the map
returns true if the given is found in the
compares this plugin with the specified object for order
this method initializes this
this method initializes split vertical vertical
this method initializes j scroll pane
this method initializes this
this method initializes j scroll pane
this method initializes scroll header
this method initializes txt output
this method initializes split vertical vertical
this method initializes txt editor
this method initializes panel view
this method initializes this
this method initializes scroll table body
this method initializes this
this method initializes this
this method initializes menu edit
this method initializes menu tools
this method initializes scroll txt editor
this method initializes menu view
this method initializes this
this method initializes this
this method initializes menu tools options
this method initializes btn accept
this method initializes this
this method initializes btn ok
this method initializes this
this method initializes menu file open
this method initializes btn cancel
this method initializes menu file save as
this method initializes menu file exit
this method initializes menu file properties
this method initializes j split pane
this method initializes menu file save
this method initializes menu help
this method initializes menu help about
this method initializes menu analyse
this method initializes panel view
this method initializes j panel1
this method initializes panel param
this method initializes txt headline
this method initializes table body
this method initializes scroll txt body
validates the parameters
saves the current value to the parameter
this method initializes j scroll pane
this method initializes j scroll pane1
start this bundle
stops the bundle
returns the value of the parameter with the given name
get next job to run
stops the bundle
sets the annotation number value for this
sets the annotation string value for this merchant item attributes
sets the annotation type value for this merchant item attributes
set the endpoint address for the specified port name
sets the term id value for this
sets the term name value for this
initializes the servlet
creates a new instance of product
this method is called when the is paused
sets the
this method is called when the user is to be called
returns the weight of the
returns a single instance of the given instance
returns the structure of the file
the action has been activated
this is the entry point method
this method initializes j button
this method initializes j text field
this method initializes j radio button
this method initializes j radio button1
this method initializes j text area
this method initializes j text
this method initializes this
this method initializes this
this method initializes j content pane
returns the color of the given id
returns the duration in milliseconds
controls whether the controls should be shown
this method initializes this
this method initializes j content pane
this method initializes j button
this method initializes j button
returns the time in milliseconds to start the file
this method initializes j button1
this method initializes j button1
this method initializes this
this method initializes j radio button
this method initializes j radio button1
invoked when an internal frame is activated
this method initializes j text field
this method initializes j text field1
this method initializes j text field2
this method initializes j text field3
this method initializes j check box
this method initializes j check box1
sets the start point of the start point
updates the thread
sets the end point of the line
returns the persistence persistence
returns the start point of the edge
returns the end point of the edge
returns the color used to draw the color of the
returns the ordered time of the specified time
writes the given file to the file
adds a new point to the end of the list
marks this object as finished
returns the number of lines in the current
writes the trailer to the file
plays the sound at the specified rate
instructs the controller to jump to the given time
returns the parser parsing parser
sets the time in milliseconds to the given time
called by the server when a new start is started
sets the time offset
adds a file to the table
add a new file to the output file
returns the number of rows in the model
this method is used to format the given stroke
returns the column name
adds a stroke to the end of the list
this method initializes j text field
this method initializes j button
this method initializes j button2
this method initializes j button3
this method initializes j button4
update the timer
this method initializes j button6
this method initializes j button7
selects the index at the specified index
this method initializes j radio button
starts the locking thread
this method initializes j radio button1
this method initializes this
handle an error handler
sets the component
returns the logger
merge the given
initializes the file
initializes the tree
initialize the gui
returns the selected actions
returns the tree
returns a list of all the
this method initializes this
this method is called when the tree is expanded
this method initializes j content pane
handles error messages
initializes the frame
returns a list of all the
this method is called when the selection changes
returns the list of actions
reads the annotations from a file
returns true if the tree is tree
this method initializes j button1
clears the list of actions
returns the value of the field with the specified name
adds a new attribute to the list
this method initializes j scroll pane
this method initializes j table
returns the nanoseconds of the current interval
convert nanos to nanoseconds
returns the nanoseconds of the current group
this method is called by the code controller code to be able
returns the name of the factory that will be used to create
returns the canvas component
sets the media time in the media file
returns the
sets the
returns an enumeration of all the
returns the current position in the file pointer
returns a new instance of the given time interval
returns the tool for the tool
returns a vector of time from the track
returns a vector with the time of the given time
returns the number of buckets
this method is called when the user finishes the
returns the stroke for the given
this method is called when prefetch to prefetch
clears the track
sets the rate of the rate
merges the given track and all the listeners
adds a stroke to the list of elements
the model to the given file
removes all the from the given
removes all the items from the list
returns the device annotation
deletes the specified
sets the file to be saved
deletes the specified
deletes the specified stroke
returns the time in milliseconds
sets the media file to be used for
returns the track hash
reads the next byte of data from the buffer
resizes the given annotation in the canvas
returns the time of the media in milliseconds
returns the time in milliseconds to the specified file
clears the canvas
returns the time in milliseconds
this method initializes j text field
this method initializes j button
returns the media time in milliseconds
returns the nanoseconds of the interval
convert nanoseconds to nanoseconds
returns the name of the player
this method initializes j radio button
removes all the specified user from the list
this method initializes j radio button1
this method initializes this
returns the player
reads the contents of the buffer from the specified buffer
checks if the player is dead
returns the media time in milliseconds
skips over and discards code n code bytes of data from the
returns the name of the factory
returns the url
returns true if this player has started
returns the time in milliseconds
returns the start latency latency
sets the rate of the rate
returns the number of bytes that can be read from the file
shuts down the server
this method is called when the user wants to stop the simulation
this method is called when the user wants to stop the
invoked when the target of the listener has changed its state
synchronize the sync data
waits for prefetch to prefetch
returns the start latency latency
this method is called when prefetch to prefetch
returns the name of the factory
reads the file from the file
mark the current position in the buffer
commit the track
sets the media time in nanoseconds
returns the time in milliseconds
reads the given code from the code code from the
repositions the file system has been closed
called by the server when a start time is started
returns the duration in seconds
writes the specified file to the file
remove all annotations from the model
creates and returns a new jlabel
returns the rate of the processor
remove all annotations from the model
resizes all annotations on the specified line width and height
this method is called when the user moves the mouse button
adds a equip item to the equip item
handle mouse button released events
this method is called when the animation is stopped
updates the equip item
delete the item from the data store
sets the service url
this method is called when the driver is loaded
connect to the server
adds a new event to the list
disconnects from the server
returns a vector of the resource names for the specified resource
the user for the given password
returns the size of the player
creates the frame that is currently selected in the frame
adds a new project to the project
initializes the logger
this method will be called to initiate the
adds an annotation to the given element
adds a resource to the file
clear the annotations
add a log to the file
adds a log bin to the file
returns the action for the specified argument
adds the given annotations to the given list of objects
adds a new drawing to the given file
wait for the current thread to wait until the thread is started
set the endpoint address for the specified port name
load background image
add a new file to the output file
updates the title of the application
this method is called by the gui when the user clicks on
add a new file to the output file
event fired when a event occurs
returns the value at the specified row and column
returns the column name
returns the value at the specified row and column
returns the rate of the
sets the time to the time in milliseconds
this method is used to store the user identity in the database
joins a group
adds a tag to the list of tags
returns the method for the given id
adds a child to this node
adds a program to the table
prints the puzzle
prints the given array of characters to the puzzle
prints the list of words in the given list of words
prints out the help
adds an code action listener code to the menu
adds an action listener to the button
adds an code action listener code to the registered puzzle listeners
adds an action listener to the button
adds an action listener to the button
adds an exit menu listener
paint the
clears the puzzle
adds an action listener to the button
sets the
sets the puzzle
sets whether the is
sets the solution
sets the solution of the solution
adds an action listener to the menu
checks if the word is legal
removes a word from the list
adds an code code listener to the code menu code
adds an code action listener code to the list of listeners
adds an action listener to the button
adds an code action listener code to the
adds a listener to the list of listeners
adds an code action box listener code to the code listener code
adds a listener to the list of listeners
clears the puzzle
displays a message in the
displays the about dialog
returns the size of the puzzle
returns the type of puzzle type
returns the current word
returns the selected text
open a dialog to open the file chooser dialog
save the selected file
displays a message box
paints the puzzle
prints the puzzle
print out the puzzle
prints the list of words
selects the text in the text box
sets the size of the puzzle
sets the type of the puzzle
sets the solution
sets the solution of the puzzle matrix
updates the area of the given words
dispatch an object to the object
send a disconnect command to the server
starts the server
dispatches the event to all listeners
closes the connection
returns true if the connection is connected to the server
closes the connection
draws the shot
this method is called when the player is paused
mark the area as hit
returns the x coordinate of the x coordinate
this method is called when the collision is moved
this method is called when the user selects a level
this method is called by the
add a score to the score
draw the sprite
this method is called when the game is moved
draw the ship
explode the
sets the direction of this input
draw the circle
updates the buffer
displays the frame rate in the frame
updates the background of the background
this method paints the image
paints the sprite
initializes the control
sets the code command code to the code command code
sets the controls menu
sets the frame
creates a stage
configure the script manager
called when the user selects a
writes the given string to the given string
prints the tree
executes the given parse statement
clears the local variable
returns the local
declare a
creates a new scanner with the given scanner
extract the keyword from the
extract the number of the value from the current line
extract the string from the string
internal method to assign the internal state of the object
returns a string representation of the given
a class
this method is used to determine if the function is a
sets the
sets the context
returns true if the method is
sets the property value
closes the directory
returns a dynamic path for the given path
returns a dynamic for the given node
clears the variables
returns the variable with the given name
prints the tree
executes the given script in the given parse tree
sets the value of the property
sets the position value for this item attributes
returns the x coordinate of the upper left corner of the
returns the y coordinate of the y coordinate
returns true if the given token is excluded from the given token
extract keyword or keyword identifier
returns the length of the word in the given line
extracts the number of the
populate the statement with the given statement
extracts the string value from the string
extracts the given operators from the current token
returns a function with the given id
extracts the token type from the token type
registers the given definition
populates the given expression
returns the local
returns the prototype of the given class
sets the classloader for the classloader
writes the log date
start the log
flush the log
tests the run method
sets the arguments to the given argument
this method is called when the plug in is stopped
this method is called by the server to start the user
returns the path to the
logs a message with the given name and status
logs an exception
creates a message from the given file
visits the given type
checks if the given method is a
get the type of the given element
test if the test has a test
returns a string representation of this object
get the name of the element
this method is called by the
tests the
test that the sensor is loaded
this method is called when the server is called
creates an image descriptor for the image url
returns the local plugin version identifier
initializes the preference page
opens the new update wizard
this method initializes the timer
initializes the default preferences
sends the current user to the server
quits the application
extract the file name from the file
creates a java file
returns the file resource editor
returns the active text editor
returns the active file
returns the object file for the given class name
this method is called when the window is closed
invoked when the window is opened
invoked when the part is to the top part
called when the document has changed
called when the document has changed
stops the application
test that the user is successfully logged to the user
adds a new update update update to the list
returns the update update of the update
gets the
returns the current date as a string
returns the current project name
sends a message to the server
gets the
sets the
sets the project set
sets the theme set
sets the category
returns the fee of the fee
sets the fee value for this
sets the
sets the value of alert set
sets the value of the portfolio set property
sets the value of skill set
initializes the mailet
sets the channel id
adds a data key to the data set
get the resouce that is used to resolve the resource bundle
returns the static key
returns the key for the given component
invokes the method on the given object
called when the component changes the current
returns a new target
returns the input stream
sets the input file
returns the
sets the
returns the current condition
sets the current condition
sets the output file
returns the parent condition
sets the parent condition
sets the number of bins
returns the predicate that was added to the predicate
sets the predicate that this predicate is added to the
returns the best impact
sets the value of best impact
returns the value of the threshold
sets the value of the impact threshold
sets the projection
returns the combined impact
sets the combined impact of the cloudlet
gets the value of the combined impact property
sets the combined impact gross value for this
gets the value of the combined impact property
sets the combined impact impact value for this
returns the of the upper left and end point of the
returns a copy of this condition
sets the value of the combined parent semi property
sets the attribute
gets the value of the statistics property
sets the sum of the sum of the
returns the value of the specified from the given array of the
returns the deviation of the current
sets the deviation of the
returns the variance of the data
sets the spacing between cells
sets the variance
sets the minimum value for the slider
sets the maximum value for the slider
returns the impact of this
returns the numeric attributes
sets the impact value for this
sets the numeric attributes
returns the number of impact
sets the value of the optimistic impact
returns the impact
returns the flag indicating whether this
sets the impact
sets the negation of the
returns the value of parent
returns the target interval
sets the value of parent
sets the target
gets the value of the property
sets the
gets the threshold
sets the
gets the value of the gain threshold property
sets the value of the code improvement threshold code property
sets the count
returns true if the should be used to determine if the
sets the value of use
returns the minimum coverage
sets the minimum coverage
returns the path of the element
returns the single line number
returns the merged string for the current
returns true if the result is a result
display a new
start the current thread
test the sensor
test the sensor
sends a message to the server
send a message to the server
returns true if the connection is listening to the current state
returns true if the message is available
adds a message to the queue
sends a message to the server
send a message to a server
receive a message from the message
returns true if the is frozen
returns the number of rows in the model
returns the value at the specified row and column
update the coords of the current board
sets the value at the specified row and column
update the data in the data
sets the key value
sets the id of the
returns the object that matches the given object
this method is called when the action is invoked
get the persistence service
returns the sid
this method is called when the action is invoked
initializes the properties
destroy the
returns the persistence manager
close the transaction
returns true if the connection is closed
sets whether the connection should be closed
parses the given path
this method is used to filter the object
returns the current record
pushes the current record to the current record
push a new object
push a new record
returns a collection of record collection
puts a map of record map into the map
sets the filtered object
sets the processed object
returns true if the given object is filtered
returns true if the given object is processed
executes the given object and returns the result
process the given object
process an object
process an array of type
process collection of
process the map of the given map
executes the given filter
this method is invoked when the user selects the record
this method is invoked when the object is pushed
initialize the module
returns true if the module is
destroy the service
returns the properties file
sets the properties file
init method for this filter
destroy the filter
performs the filter before the given filter is executed
sets the match flags
returns the number of matches
sets the program to be used for this program
returns the program to be used for this program
returns the number of paren in the corpus
returns the of the given paren position
throws an error

checks if the given position is in the
searches for a match with the given string
returns true if the given search matches the given
substitutes all occurrences of all occurrences of the substitution
compares two characters for equality
adds a new row to the table
returns true if the empty table is empty
sets the id of the node
sets the value of the given number
sets the status of the dialog
returns true if the status is created or not
sets the moved attribute
returns the screen data field
returns true if the current state of the is moved
sets ghost flag
sets the ghost status of the ghost
resets the status of the status
returns the column index for the given name
commits all rows and commits the result
applies the given patch to the current page
gets the position of the given row
enables disables the fields of the current fields
sets the window name
launches the given project
returns the launch config type
creates the vertical spacer
runs the directory dialog
called when the default controller is working on the working directory
returns the default working directory
sets the default configuration
creates a label with the given text
creates the text field for the text field
returns the preference store for the current plugin
initializes the preference store
this method performs the default defaults to the default preference
this method is called to make the preference store
this method is called by the class to initialize the class
create a new servlet context object
initialize the service
closes the current worker thread
convert a string to a string
enable dragging of the
returns the minimum value
returns the mid of the
returns the maximum value of the
selects the tab at the specified index
hides the page
shows the dialog
returns true if the is hidden
returns the projection of the projection
adds a marker for the given marker
refresh the current page
returns the number of of the given zoom
adds a control to the control
close the info window
disable continuous zooming on off
returns true if the zoom factor is enabled
gets the value of the date property
returns the number of cells in the cell
updates the current date
adds a shortcut to the menu
returns true if the given element is contained in the list
returns the index of the given element in the list
returns the index in the list of the last occurrence of the
returns the index in the list of elements in the specified index
returns the element at the specified index
returns the first element of the list
returns the last element of this list
sets the selected attribute of the label component object
creates sidebar sidebar
parse the dimension
sets the element at the specified index
removes the element at the specified position in this list
returns the date chooser
inserts the specified object into the list
adds an object to the list
removes the first object of the specified element from the list
returns the note at the specified index
replaces the element at the specified position in this list with the
sets the marked date
inserts the specified element at the specified position in this list
removes the specified note from the list
returns the element at the specified index
notify listeners that the content of the event has changed
fire an item added event
fire an item removed event
returns the selected day
returns the selected date
returns the pitch
sets the pitch of the
returns true if the current user is working
returns the formula of the
returns the root of the tree
returns the
sets the tuning tuning
sets the string representation of the value
returns the string representation of the
sets the root of the
returns the root of the
sets the logo
sets the value of the code dev logo code property
sets the
returns the image
sets the image
sets the image
sets the image
returns the screen width
returns true if the loop is looping
sets the flag indicating whether the loop is looping
returns the height of the screen
returns true if the y axis is looping
sets the loop y
returns the game engine
set the game engine
returns the lives
sets the lives
returns the warning
sets the warning
returns the clean rate
returns the full number of the current
sets the full full full number of the full
sets the clean rate
returns the running time of the current running simulation
returns the game engine
sets the frames frames
returns the current frame index
sets the current frame index
this method is called when the channel is on a midi device
note that the given channel is off
the program to the given channel
the channel
returns the default channel
sets the default channel
returns the pitch of the
sets the pitch of the
returns the note of the note
returns the element at the specified index
returns the string that contains quote identifiers
returns the number of characters in the chain
convert the type of the type to a string
returns the next type
verifies that the connection is established
generate a query for a given filter
sets the query to be used for the query
generates the default query
returns true if the given object is a placement of the same
returns the element that is currently selected in the table
load the header for the given array of strings
returns the position of the specified element in the table
returns the text of two numbers
compare array with the given array of values
returns the number of two values
returns the date of two numbers
returns the number of rows in the table
returns the value of two booleans
checks the given arguments
returns the number of elements in this list
compares this filter to the specified object
returns the end value of the end of the
compares this field to the specified object
returns true if the exclude match list is excluded from the list
returns true if the exclude strings are excluded
get a connection from the database
gets the value of the greater greater property
sets the database string
gets the value of the less than property
convert a boolean value to a boolean value
sets the driver name
sets whether or not the exclusion list should be excluded from
returns the number of columns in the model
prints the string in the form
sets whether the exclude strings are excluded from the
sets the greater than attribute of the object
returns the number of rows in the table
sets the less than or 1 if not found
indicates the designated column in the current row of
sets the string array of strings
returns the number of items in the list
indicates the cursor is in the designated column
sets the range of the range
adds a group to the group
whats the column name for the current row
returns true if the input is a copy of the input
creates a new root node
whats a columns type
sets the combine with the given
this method is called to make the drill down
returns true if the rollup profile is a valid offer
decrease the number of the current group
whats the designated columns column name
process the request
this method is used to display the row header
clears all attributes from the request
returns the action for the specified request
this method is used to get the value of the request property
callback to be fired by the listener interface
begin user doc
interface for handling
interface for handling events
data event listener
puts a property into the map
returns true if the given class is not assignable from the type
closes the connection to the database
callback method to be called when the mode is activated
puts a key value pair into the map
factory method for instantiating the elements of the
creates the memory store
creates a memory store
creates a memory store
creates a test element
removes the test from the store
test that the code get code method is used
test remove null
returns the elapsed time in nanoseconds
test of get unknown method of class org
test that a put element works correctly
test that a remove element works correctly
creates a new non disk store
remove all elements from the set
called by the framework to indicate the to the
tests the benchmark
tests the benchmark put
test that the store method is not set
tests the remote cache peers equality
tests the memory
tests that concurrent cache manager is
the test
writes the data to the output stream
compares the specified object with this primitive for equality
tests the serialization deserialization
tests that a clone of the same time as the
test performance
test of is serializable method of class org
test get unknown property
ensure that the configuration of the explicit replication configuration is replicated
test get quiet unknown property
tests that the put method raises an exception
tests the put method
test that the configuration is correctly configured for
tests that the configuration of the replicated map contains the same
tests that disk put in memcached
test that the replicated with the configuration
tests that the store is removed
tests that the of the heap is slow
test that the configuration is with the same
tests removing all elements from the store
test that the configuration is being emulated
tests removing a single from the store
remove the properties from the cache
ensure that the cache is not running
remove all visualisers of the
tests update of configuration with explicit replication configuration
tests update of configuration
tests update configuration with null properties
tests that the update of the cache is updated
tests the write to file
tests that the cache misses is thrown when the cache began
test that multiple cluster is able to inject the
clears the current list of hit counts
this method is called when the progress bar is shown
returns the total keys generated for the
creates a bit representation of the solution
disconnect from the
this method is called to perform the
sets the open
sets the close
key event
registers the given view
removes a particle from the particle
returns a file object representing the file denoted by this
adds a new instance to the internal list of the
adds the parameters to the given method
adds the parameters to the given parameters
creates the tag for the given content
returns the list of imported packages
creates a new instance of the stack
check if the stack is still available
returns the text of the specified text
this method is used to receive a single character
returns the end of the element
returns the writer
sets the writer
returns the schema
returns the schema description
this method is used to generate the head of the element
sets the value of the element to the title
creates and returns a new instance of the object
returns the link that this element belongs to
returns the style of the element that this element represents
returns the
sets the value of the given attributes
adds the given object to the end of the list
returns the object that is the value of the given attribute
returns the result of the binding of the specified object
this method is called by the
returns the first element of the given element
adds the given annotation to the
sets the value of the given attributes
sets the value of the given attributes
sets the value of the given attributes
sets the value of the given attributes
returns the value of the specified element as an instance of
this method is invoked by the underlying object to create a new
returns the annotation for the specified name
this method is used to reduce the objects
this method is used to convert the given value into the local
assigns the given value to the left and right
returns the code code that will be used to render the
returns a new instance of the given object
sets the value of the given attributes
creates and returns a new instance of the given type and the
returns the value of the specified property
returns the new value of the specified object
returns the span of the element
sets the value of the given attributes
returns the value of the negative of the specified object
creates a new
returns the left shifted function for this object
returns the value of the specified element as an instance of
sets the value of the given attributes
returns the number of occurrences of the given object
returns an expression that is equivalent to the specified object
sets the value of the given attributes
returns the remainder of the given object
sets the value of the specified attributes
returns the value of the specified attribute
returns the number of right shift
returns the value of the specified element as an instance of
creates and returns a new sub element with the given values
returns the of the left side of the given object
assign the value of the specified object to the given
returns the value of the given attribute
this method is used to convert the given values into the given
sets the value of the given properties
creates a new compilation unit with the current name
creates and returns a new
returns the result of applying the given object
maps the given values into the given values
returns the result of the specified object
this method is called by the default implementation of the
returns the label of the specified element
returns the result of the specified object
returns a new instance of the given value
returns the
returns the value of the element
sets the value of the given attributes
returns the option value for the given element
creates a new instance of the given value
invokes the method on the request
returns a new instance of the expression
sets the value of the specified attributes
creates a new caption with the specified values
sets the value of the given attributes
sets the value of the given attributes
returns an instance of the class
sets the value of the given attributes
sets the value of the given attributes
returns the of the
returns the element of this object
returns a new instance of the given name
bind the value to the given value
creates a new
returns the document with the given text
creates a new document
returns the end of the document
returns the current result of the current
resets the buffer
returns the
sets the
this method will be used to set the legal sentence
returns the
returns a new with the specified parameters
returns the result of the expression
returns the result of the expression
returns the
returns a new instance of the multiplication of this matrix
returns the result of the expression
returns the question
returns the for the given
returns the new object type for the given
returns the flag indicating whether or not the module is
sets whether the user should be automatically
adds a new file header to the document
pretty print the current state of the context
adds a directory entry to the directory
removes the directory entry in the directory
this method is used to get the attributes for this node
truncates the file to the specified size
returns true if the node is a directory
puts ini into the file
flushes the output stream
puts a data into the table
returns the lock node for the lock
returns the last data number in the tree
returns the inode id for the given inode
returns the path to the inode
returns the path to the serial port
returns the current allocation table
returns the parent directory of the given path
sets the suit of the card
analyses the rule
analyse the grammar
this method is responsible for the given code code
this method is called when the user selects all the occurrence of
prepares the variable map
prepares the rule for the guard
this method is called to analyse the occurrence of the occurrence
checks all the values in the current state of the
returns the class name of the class that this class
sets the class name
returns a new code code for the given array of
adds a new lookup category
returns the infix
sets the infix
returns the prefix to use for the
unsupported in this implementation
unsupported in this implementation
replaces the element with the given value
replaces the element with the specified value in this collection
returns true if the current iterator is valid
returns the first element in the list
returns true if the given object is contained in the current list
ensures that the given variable is declared in the scope
runs the application
animate this sprite
runs the shell
creates the contents of the window
initializes the display
initializes the color
run the action
renders the model
this method is called when the user selects the logic
cleanup the application
run the
trims the trailing whitespace to the end of the current token
returns the character at the specified position
sets the strategy for the given strategy
draw scene to scene
load the image from the given image
puts a double value in the database

called when a view is clicked on the view
convert the array of floats to a buffer
produces a deep copy of the buffer with the given
setup the
adds a texture to the texture
setup the texture
this method is called by the framework to set the views
schedules the task to be executed
this method creates a xml document document
waits for the stop thread to stop
notify the canvas that the current selection has changed
load the triangles from the model
starts the animation
stops the animation
renders the scene
change the camera angle in degrees
pause the animation
render the
called when the window resizes
called by the
change the distance of the view
this method is called when the surface has changed
this method is called when the surface holder is created
this method is invoked when the surface holder is destroyed
invoked when a touch event is fired
called when a view is clicked on the view
invoked when a key is down on a key down
invoked when a key is up
tests the constructor
tests the constructor
tests the conversion of a property
tests the constructor
tests the set value method
tests the constructor
tests the constructor
tests the correct behavior of the test
test the
tests the constructor
tests the constructor
test the split functionality
tests constructor of the constructor
tests constructor of constructors
test that the encrypt password is rejected
test constructor
test constructor
test method for
test method for
test that the package name is
test that the
test the length of a string
test method for
test the method
test the method
test that the array of strings are correctly ignored
test the test class
test that a list of array elements are correctly parsed
test equals with same as
tests the constructor
test method for
test contains any value
test close tag
test close tag
test method for
tests that the tag is emulated with the same name as the
test
tests the is alpha method
tests that the tagged value of the tagged value is tagged
test escape html escaped html
test
test method for
test that html
test that verifies that the equals method can distinguish all fields
test the
test of is numeric method here
test that the entity is skipped when an entity is skipped
test that the null value is properly set
test for code string code
test for code hash code method
test of set default method of class org
test of method of class nl
test escape html string
test of append string string method
test for append null string
test of append to method of class
test of append object method of class org
test for code append object null code
test of append boolean to method of class org
test the make class name
test of append byte method of class org
test of append short method of class org
test of append int method of class org
test escape backslash
test of append long method of class org
test method for
test method for
test
test method for
test method for
tests the constructor
test constructor
test right right
test the case of a lower case
test the case of a case to uppercase
test
test constructor with a new instance
test strip chars
this method is called when the user selects the
this method is called when the user selects the
test the creation of object
test the creation of object class
test of in in str method of class
test method for
test the
tests open office
test method for
test of get paragraph method of class org
test method for
checks if the given is a
test check for equality of
flushes the current state of the cache
sets up the fixture for example open a network connection
tests the log
test method for
test method for
tests logging exceptions
test that verifies that the factory is used to test the factory
serialize a serializable object and check the serializable object
test that the plain text is plain plain
check if the log is correct
sets up the factory
sets up the log
tests that the serializable
this method is called once in the transaction the
commit the transaction
rolls back the transaction
logs the exception messages
toggles the auto commit mode
log the current message
returns true if the is rolled back
returns true if the message has committed
sets up the fixture for example open a network connection
sets up the logger
test
returns the groups
test method for
returns the user groups
test of split method of class
test of hash code method of class
checks if user is in group
returns the object associated with the given
returns the xml element representing the configuration element
returns a clone of the
returns the attribute with the given name
returns true if the user is in the group
clones this attribute collection
creates a new object with the specified name
returns the tags
returns the data sources
sets the name of the
returns the value of the code get loaded code property
returns the edit mask
returns the message at the specified index
gets the
sets the
returns true if the is selected
sets the
initializes the descriptor
gets the description
returns the descriptor of the descriptor
returns the foreign key
returns the context action context
returns the foreign key alias for this column
returns the help id
this method is invoked to start the service
stops the
builds a new cache with the specified name
returns the label
returns whether the current instance is not null
returns the value to which the specified key is mapped in this
clears the cache
locks the specified key
unlocks the cache
returns the bos internal transporter
returns the lower range of the lower range of the range
clear the cursor
returns the error position
returns the parse error
returns the edit map
returns a formatted string representation of the current value
sets the persist status
returns the options
returns the value of the string
returns the output length
checks if the given value is in the options
returns the full path to the file system
returns the output mask for the output file
load a from the given property
returns true if the password is already in the database
load a from the given property
returns the current token in the grammar
compares this object against the specified object for strict
returns a string representation of this object

check the arguments for the given arguments
check to see if the given arguments are required
checks if the given size is smaller than the size of the
checks if the argument is allowed to be used
returns true if the given property is a date
returns true if the inherited object is inherited
returns the value of the double property
returns the value of the property as a long
returns the value of this property as a double
returns the value of the code get load load group code property
returns the value of the property as a boolean
returns the foreign key label
creates an object based on the given class
returns the value of the primary key
returns the of the given
returns the sort attribute
returns true if the handler is loaded
parse the attribute
returns the label as a string
returns true if the tag has a tag
returns the tag value of the given attribute
sets the tag name
returns the description of this type
returns the label collection
sets the value
returns the label as a string
returns the key

retrieves the group attribute with the given name
returns the cached value for the specified property
sets the expression
parse the label and parse it from the list of label
returns the
returns the property of this property
sets the
clears the list
get the status of the user
this method is used to get the string value of the
get the entry with the given name
dumps the contents of the entry in the table
returns the first value of the given property from the given expression
the
the

sets the
returns the func
returns true if the handler is loaded
resets the
get the argument value
returns the number of arguments
returns the
get the entry entry for the given name
dump the entry in the table
saves the current state of the entry
returns true if the given object is a handler
appends the header to the xml document
opens a new tag
closes the tag
creates an attribute with the name of an attribute

this method is used to set the value of a
returns a string representation of the given
this method is called when a value is found in the
this method is used to set the value of the
sets the to be used for
sets the
this method is used to set the of the
writes the to the given file
creates a new attribute
add a content to the content
returns the text content of the element or null if not found
returns the value of the attribute specified by the attribute
clones the given hash map
returns true if the given object is a handler
returns the separator used to identify this object
append the given object to the current package
append the contents of the given field to the current
appends the field name to the given field
append the given field value to the given field
finds all the fields in the given object
appends the given object to the current page
appends the given value to the specified value
returns true if the given object is a handler
appends the name of the given class to the given name
appends the given value to the specified value
sets the
increments the value of the counter
decrement the counter
adds a new value to the list
sets the value of the number of
resets the value of the counter
returns the file name of the file
returns the line number of the current line
returns the name of the method
a plain text
returns an iterator for the given name
p append to the code to string code a code boolean code
p append to the code to string code a code boolean code
p append to the code to string code a code short code
p append to the code to string code a code double code
p append to the code to string code a code long code
p append to the code to string code a code code
p append to the code to string code a code java
append the given string to the end of the list
append a new value to the list
appends the class name to the target class
append the target hash code to the current state
append the value to the standard output
returns a string representation of the object
clears the iterators
creates an object using the specified object
returns true if the statement is able to drop the statement
returns true if the is
start the tracing of the file
gets the value of the chk property
stops the tracing of the active tracing
returns true if the table is
returns true if the is
send a message to the server
sets the type of the component
tracing the expression
sets the database
returns true if the element is descending
returns true if the sequence is
returns the entities
returns the left hand side of the
returns the right
load a query
returns true if the is
returns the bo
returns the attribute group
returns true if the is
returns the url
sets the
generate the file
returns true if the node is a negate
returns true if the user can select the
returns true if the is
returns true if the is
gets the value of the property
gets the
this method is called by the
returns the components
returns the last change
execute the statements
returns true if the current outer join is a
returns the sql query
clears the current database
adds a component to the
returns the sql select statement
adds a statement to the end of the list
sets the
execute the sql
delete a query
adds a new entity to the list of entities
returns the session id
returns the context
checks if the query is a query
returns the session session
test of select query method of class
builds a literal
returns the name of the
returns the context data
returns the value of the specified column as a code result code
this method is used to create a order by clause
mark the current mark as needing to be used
deletes the row from the table
returns the alias of the
csv method
moves the row to the insert row
inserts the row into the table
moves the cursor a relative position in the current
this method is used to get the group by clause
sets the language
returns the key
returns the key
clones the object
returns the
returns the attribute group
standard access functionality
returns the attributes
parses the config element
get a new object
returns a stldata type object
returns the
get the for the given
returns the for the given
gets the value of the property
returns the tokens
returns the audit attributes
persist a collection of entities
returns the use handler
getter for property on
process a join expression
returns the string of the current token
this method is used to execute the condition
returns the current token as a string
get an attribute by number
returns the string where the expression is appended to the
zibog auto generated method

generate a raw value for a given type
returns true if the event is in the time of the simulation
get the value of the attribute
returns a
returns the label for this collection
get a new
returns the last change
gets the security delete
count the number of
returns the security insert
this method will be case insensitive
returns the data cursor
returns a new file
returns the security select
returns true if the expression is a pure
gets the security update
this method is called by the server to ensure that the
get a handler by name
resolve the labels
returns true if the current transaction is in the current transaction
returns the for the given
returns the data constant group
sets the data constant group
this method is called by the framework to initialize the descriptor
returns the value to which this map maps the specified key
returns the
checks if the key is
puts a key value pair in the jsonobject
returns the key for the given lsid
checks if the object is loaded
cleans the object
returns true if this collection contains no elements
returns an iterator over the elements in this collection
returns true if the table is no longer available
puts all the contained in the specified map into this map
returns the number of elements in this collection
removes the mapping for this key from this map if present
removes the element at the specified position in this list
returns an iterator over the keys in this collection
adds an object to the list
returns the tags
returns a collection view of the values contained in this map
returns the collection of
returns a string representation of this object
returns the hash code of this object
puts a keyed object into the map
puts a new into the list
returns the unique constraint
returns the table cell with the specified table
returns the table cell with the specified table
compares this object with the specified object for order
replaces the table with the new
gets the value of the search order by image property
returns the implicit attributes
returns true if the secondary cursor is active
sets the secondary active
returns the event actions
get the for the given user
returns the directory
returns the query dir
returns the session time out
returns the sum of the number of groups in the group
executes the given query in the database
test the
returns a dump of this object
returns the label for the given user
returns the description of the label
returns the label of the current label
returns the string representation of this object
get a new instance of the given
returns the level of the log
sets the log level
returns a object that represents the
get a collection of group objects
test of get start of week method of class
tests the constructor
tests the constructor
test the
test of clone method of class clone
tests the constructor
returns the
returns the
returns the actual object that was used to convert the object to
sets the number of rows in the table
sets the rows array
get the second group of a string
sets the number of rows to display
returns the component that is associated with this component
returns the title of this group
gets the
gets the value of the property
returns the
returns the
returns true if the is
returns the
gets the
returns true if the key is in the database
get the group as a string
sets the
gets the
begins a transaction
returns the force focus attribute of the object
returns the attribute with the given name
returns the primary key of this attribute
returns the of the
returns true if the given
returns the value of the given attribute
returns true if the connection is closed
returns the list of references
gets the value of the spell check property
returns the descriptor of this
adds an attribute to the attribute
returns the list of actions
delete the attribute
returns the
returns true if the is
gets the value of the property
forward to the given
returns the descriptor for the current
returns the buttons
sets the url
gets the value of the property
returns the
sets the
returns true if the footer is
initializes the page
gets the
returns the
gets the value of the property
gets the value of the property
returns the
gets the value of the property
returns the post load script
gets the value of the property
gets the
gets the
gets the value of the property
returns the
gets the value of the property
gets the value of the property
returns true if the is
gets the value of the property
gets the value of the property
gets the
gets the value of the property
gets the value of the property
gets the
gets the value of the property
returns the
gets the value of the property
returns true if the is
returns true if the is
returns the url of the
returns the
returns the
returns true if the is
returns the string representation of the frame size
gets the value of the property
returns the popups list
returns a list of references
gets the value of the property
returns the security
gets the value of the allow new property
remove a string from the
returns the
returns the
search the hierarchy of the search
gets the value of the property
gets the
returns the
gets the value of the property
returns the tags
gets the value of the property
returns the pk
returns true if the is
returns the title label
returns the
gets the value of the property
gets the value of the property
gets the
returns true if the is
returns true if the is
returns true if the is
gets the value of the property
returns the generated generated generated
returns the web settings
sets the
returns true if the is
returns true if the is
returns the
sets the
sets the
gets the value of the property
sets the
returns the
sets the
sets the
sets the
sets the
sets the
sets the
returns the url of the
gets the value of the property
returns the
returns true if the given name is contained in the
returns the
get the entry as a string
returns the dump
returns the
append a new attribute to the
connect to the remote service
append a new attribute to the
returns true if the service is
returns the header of the header
returns the spell
returns the text of this
populates the text inputs with the current text
populates the words in the sentence
escape a string in the quote
returns true if the is
returns the confirm
sets the confirm
gets the value of the property
returns true if the is
returns the
returns the cells
resets the
clones the object
returns true if the is
returns true if the is
returns true if the director is
sets the
returns true if the is
gets the value of the property
returns the
returns the
returns true if the is
returns true if the is
returns the string representation of the number of
returns the actions that this object is using
get the action for the given name
opens a level
gets the value of the property
close the level
send a message to the user
sets the
sets the
returns the resolved attribute
returns the resolved entity
sets the
sets the operator of the task
returns the send parameter
returns a list of the receiver
prepares a message object from the
this method is called when the user selects a new user
returns the tree node for the given tree
sets the tree
returns the
returns the base url
returns the child nodes
insert the methods description here
returns the parent of this node
insert the methods description here
returns the root of the tree
returns the extension of the file
returns the mime type of the mime type
save the given file to the file system
this method will be called from the webpage to set the file
returns the hierarchy of the parent hierarchy
returns the label for the current hierarchy
sets the persist freq
returns true if the persist frequency time is already in the database
returns true if the current value is paused
returns the path to the
returns the number of unread messages in the current
resolve a object
standard error method
gets the value of the last receive parameter bag property
format the error stack trace
gets the value of the last send parameter bag property
returns the list of include patterns
gets the value of the property
formats the error stack trace
returns a list of all values
gets the last send parameter name
returns a map of all entities in this map
returns true if the is
prints a message to the console
sets the orientation of the
returns the list of the current user
sets the
sets the
returns the of the given zoom factor
gets the value of the property
returns the url for the given url
returns the url for the given url
sets the
returns the number of days for the specified date in the current
returns the name of the control
parse the given sql query
parse the given code code
get the from context
standard method to alter the standard case of the
parse the given
parse the given string
create the menubar for the open
parse the given code code
parse the layout components
parse the given code code
returns the base url for the base url
parse the given file
this method is called when the window is closed
build the total number of documents
parse the given pattern
dump all errors in the page
parse the given string into the configuration
returns the of the given
parse the tags
parse the given code relational code
parse the given url
parse the given code pattern code
zibog auto generated method
this method is called when the header is closed
method to close the list of
closes the row list
closes the current row in the list
get the for a user
ends the popup menu
retrieves the order by clause
retrieves the order by clause
retrieves the query group by clause
this method is called when the start of a popup menu is
retrieves the query group by clause
process the request
gets the query select clause
retrieve select clause for query
gets the query where clause for a query
retrieve a query that is used to query the query
create a url for a url
this method is called when the user selects the header
displays the header of the current page
closes the tree list
returns the amount of time in milliseconds since january 1 1970 00
the matrix
close the row matrix
close the header
close the grid row
updates the current state of the current
displays the current image
this method is used to update the velocity of the velocity
this method randomizes the
update the velocity
this method is called by the reactor
process location of
this method is called by the swarm to set the particle
updates the current state of the buttons
kills the game
sets the target velocity
returns the closest value to the closest vision of the given vision
returns true if the given vision is
this method is called by the system when the user selects the
returns true if the particle is
returns the image that is used to draw the right image
returns a vector of
returns true if the player is still alive
returns a vector containing the of the
returns the width of the image
returns the height of the image
pause the playback
returns a context for the given locations
returns the score of the given id
sets the score for the given value
calculates the bonus for the game
calculate the sum of all the score
test hash code method
tests equality of two and
test method for
test that the equals method is not equal to the same name
creates the contents of the window
load the frame icon
auto generated axis2 error handler
auto generated axis2 error handler
creates the contents of the window
creates the content pane
restores the state of this state
creates and returns a panel for the verification verification
this method is called by the
this method is called to create the
returns the color used to draw the color in the canvas
returns the color of the matched text
initializes the applet
returns true if the checkbox is selected
restore the current state of the current state
returns true if the is shown
this method is called when the user selects a sensor
saves the current state of the
destroy the service
called when the sensor is
this method is called when the user wants to handle the image
this method is called when the user chooses a finger down
this method is called when a finger is up to the user
returns the version of the
returns the fingerprint
saves the image to a file
creates the content pane
load a file from a file
sets the parameters for the given parameters
returns the number of
returns the verification tolerance to be used for the
returns the threshold for the
returns the of the second degrees of the
auto generated setter method
sets the auto validate flag
sets the auto extract flag
close the database
test of insert method of class
clear the database
shows the image
writes the log to the console
enables the image and disables the menu item
enables disables the button
shows the version of the user
creates a new instance of image file filter
returns the spi writer used to write the image to the
returns true if the file is accepted by this filter
returns the description of the filter
auto generated setter method
auto generated setter method
adds a new listener to the list of listeners
adds a feed to the list
returns a list of all the
invokes execute on execute method
called when the progress of the progress is updated
parses the given file
returns the parameters for the given key
returns true if the key is already stored in the database
this method is called when the user selects a random number of
randomly generates random numbers
this method is used to handle the file menu item
show help help
opens a browser in the browser
returns the base url
returns the base uri
get the url of the
returns the background color of the
returns a string representation of the color
returns the value of the specified key
returns the subscription status of the subscription
returns the path to the file in the path
returns the input stream for the input stream
returns the document url
connect to the server
process headers of the header
handles a parameter
handle a date
returns the key for the current page
returns the fixed or fixed or fixed value if it is fixed
remove all the and the
creates a new reduction constraint
fire a fixed reduction reduction event
sets the ready flag to be used for
interface for
this method is called when a new name is added to the
runs in the
returns the named named
returns a list of all instances of the given class
sets whether the specified field is hidden
returns a weak hash map with the named map
returns the status of the status
fires the change event to all data change listeners
fires data change event to all the listeners
returns the work sheets of the current project
checks if the current element is valid
returns the node for the given node
drops the node
returns the tag for the
creates a new
returns the list of options
returns a list of all the mapping
checks whether the is
returns true if the ancestor is ancestor of the given ancestor
returns all in the tree
the
adds an event to the list of events
removes the given event code from the list of event listeners
adds a new class to the list of source classes that are
removes the given source from the list of matched sources
validates the
synchronize the tree with the current state of the tree
adds a new child node to this node
returns the source of the event
test the event queue
fires an event to the queue
unlinks the node and its children
returns the tree with the given type
removes a listener from the queue
tests the events passing in a super class
returns the best language
returns the value of the specified currency
returns the language
returns the value of the current currency
returns the translation for the given language code
returns the children of the given node
sets the actual translation
adds translations to the translations
returns true if the given object is a currency
returns the translations for this file
subscribe to the given list of listeners
returns the currency code
returns the children of the given node
compares this object with the specified object for order
tests that the object is notified when the
resets the
recursively searches for all the children of the given node
returns true if the given transaction value is a
returns the tree base
returns a string representation of this object
resets the
returns true if the node is a mapping node
returns true if the given is
returns the node that is currently being used for this node
divides this money by the specified number of money
returns the base tree code
adds a tree to the tree
adds a new code code to the list of childrens
returns the parent node of the given node
returns the color for the given tree code
returns the title of the tree
returns a list of sons of the given
adds a tree to the tree
returns the children of the given node
returns the value of the string
adds a to the tree
returns a string representation of this object
returns the value of the given currency
returns the compact tree
returns the ancestors of the node
returns the value of the default value definition
returns the title of the window
returns the value of the current value of the
converts the given tab into the given string buffer
returns the description of the file
this method is called to indicate that the given collection of
sets the value of the currency property
returns the current currency
change the currency of the current currency
returns the data type
sets the currency
this method is called by the framework to update the state of
adds all the parents to the given list of parents
sets the flag
returns the maximum value of the range
gets the value of the code attribute code
sets the value attribute of the object
sets the data type
returns the list of worksheets in the list
returns the minimum value of the range
returns true if the is
sets the minimum value of the slider
sets the maximum value for the slider
returns true if the is
notifies all registered listeners that a has changed
returns the compact tree root
adds a new listener to the list of listeners
returns the rate
returns true if the is
sets the position of the parent node to the specified value
sets the rate
this method is called to start the model
fires the data change event to all registered listeners
this method is used to determine if a given class is a
applies the given value to the previous value
returns the mapping
sets the publishing date
returns the position of the node in the tree
returns the code java
interface for handling of of the classes of the class
returns the code code that is associated with the specified
sets the work sheet
fires compact tree structure change event
returns the id of the license
returns the code code instance for the given code code
sets the license license
gets the value of the company name property
returns the
returns the type
returns the children of the current
returns the lower bound of the range
sets the company name
returns the upper bound of the domain
returns the parent of this node
returns the location of the loading file
sets the value of the is upper bounded property
returns true if the node is visible
returns the header of the header
visits the tree
returns the tree
returns true if the indexer is still in the current state
check if the given module is in the environment
sets the value of the property
returns true if the component can change the visible state
returns the value of the property
returns the string representation of the object
returns the or fixed or fixed or fixed or fixed or
sets the visibility of the component
adds a accepted type to the list of
removes the given type from the list of
sets the visibility of the visible forced visible
returns the accepted types
removes the work sheet from the list of active sheets
returns true if the given type is accepted by this filter
returns the type of the x axis
returns a string representation of the object
returns the of the given regular expression
drop the given node
sets the parent of the given parent
this method is called by the framework to set the value of
returns the position of the node
sets the position of the node to the specified position
returns the work sheet at the specified index
returns the index of the work sheet

returns the parent of this
calculates the of the given value
returns the instance of the
returns the parent
returns true if the current is valid
this method is called when the data is loaded
returns true if the given option can remove the given option
checks if the current is ready to be ready
gets the value of the property
sets the apply on apply
returns the apply on apply apply apply apply apply apply apply apply
returns the pair manager of the
returns the type
returns the
returns the type
returns true if the given code option code is in the
returns the minimum value of this code money code
sets the minimum value for this
returns the
returns the code code for the specified key
returns the
creates a line with the given key
sets the pair manager
calculates the of the given value
returns the rate of the
returns the minimum value of the fixed value
description of the method
returns true if the contains a glue
calculates the com
calculates the sum of of the money of the given
visits the tree node
description of the method
gets the value of the is rate property
gets the value of the per amount property
returns true if the current state is currently in the current state
creates a new wrap dispatcher
returns the code sheet sheet code that is associated with
sets the is rate
returns the code sheet sheet code
returns the applied tree item
returns the applied tree item
returns the x value of the thermometer
sets the value of the double property
sets the number of folds for this
returns the of the
returns the number of lines in the specified
returns the transaction value
sets the transaction value
returns the linked list of
adds a link to the
returns the number of lines in the given code number code
returns true if the given is accepting the given
sets the number of lines in the table
returns a copy of this monetary value with the money value
returns the transactions transactions that are to be used
sets the number of contracts
returns a new instance of the given value
check if the current instance is valid
sets the opening attribute
returns true if the given class can be copied to a destination
returns the
checks whether the given object is a copy of the given object
returns the value of the in x coordinate
returns true if the given code tx code is in the current
sets the value of the int property
returns a new instance of the given value
sets the value of the parameter
sets the divider to the specified divider
returns the next key in the database
returns a list of all the accessible
returns the sum of the amount of the current value
returns the number of cases that are currently being processed
displays a dialog with the given alert
returns the sum of the amount of money that this
sets the selected case
returns the selected key
returns the index of the selected item in the list
the

returns the first run of the first run
adds a case to the current page
builds the panel with the
all the parameters in the table
creates the panel for the button panel
the
removes the specified key
returns the case for a given key
returns the number of successors of this code code
checks if the given is valid
modifies a given key

creates a new
returns the explorer node
description of the method
creates the
description of the method
sets the
sets the state of the
enables or disables the proxy fields
creates the
applies the mapping of the given mapping to the current model
returns the of the given
returns the arg0 for the given ancestor
sets the percentage of the
sets the selected
returns the selected
returns the node for the given node
a map of
returns the percentage of the
returns the node for the given
returns the node that is used to store the node
returns the method that is used to create the method
sets the size of the line
returns the node that is the node that is
returns the node with the given parent node
sets the method for the test
returns the cost of the given node
refreshes the map of the map
returns the node
returns the mapping of the tree
returns the ui object that contains the ui
refresh the
refresh the current page
returns the summary of the current object
returns the cost of the given node
returns the tree of the tree
returns the cost of the given node
sets the number of line n
revalidate the tree and revalidate the children
returns the list of all the nodes in the model
refreshes the
returns the cost of the given node
reloads the given
refresh the viewer info
interface to be implemented by classes
checks if the given node is a mapping of the given node
returns the filler node for the given tree item
generates the tree
sets the ui delegate for the given
returns the string representation of the given
this method is called by the thread to acquire a single thread
returns true if this can be
release the calculation of the calculation
returns the of the money
returns the list of options in the list
called when the user selects the button
show hide the panel
import files from the file
drop the
shows the contents of the panel
show the options
gets the value of the amount property
returns true if the options should be shown
this method sets the amount of money to the money
returns the work sheet panel at the specified index
returns the index of the work sheet
show the work sheet panel
returns the number of tabs in the current tab
returns the title of the given index
this method is called when a user clicks on the
called when the user modifies the value of the
returns a string representation of this object
returns the percentage of the current
returns the panel that is used to draw the panel
returns the dispatcher that the user is currently being created
refreshes the panel
returns the title of the given index
the button pressed
returns the amount of money the user has to move to
returns the contents of the panel
returns the panel that is shown in the panel
this method is called by the director
returns the of the
returns the panel that is used to edit the focus
refresh the panel
returns the work place that is responsible for the work sheet
returns the title of the sheet
initializes the panel
returns the status of the dialog
initializes the panel
refreshes the tree
show popup menu
this method initializes
sets the chart chart
initializes the panel
called when a new event is fired
this method initializes j
returns the parent panel sheet panel
notify the data changed listener that the data has changed
this method is called when the user presses the update
initializes the component
initializes the gui
this method initializes
returns the method chooser for the selected method
notify the data changed listener that the data has changed
returns the panel panel for the option
returns true if the high is high
returns the foreground color of the component
returns the format of the given string
returns true if the is editable
returns the editor component
this method is called when the user selects the action
stop editing the cell editing
returns a string representation of this object
sets the amount of money to the money
returns the editor component
returns the value of the
returns the foreground color
returns the border panel
this method initializes currency label
returns a string representation of the current value
this method initializes
saves the table
returns the table column name for the given column
returns the table column name for the given column
deletes the selected slice
saves the current settings to the database
the class
returns the
sets the editable attribute of the object
notify the data changed listener that the data has changed
returns the slice of the current slice
returns a new instance of rate by
start the group
returns the panel with the specified index
description of the method
returns the minimum value for the given
this method initializes j table
returns the editor component
stops the
returns the foreground color of the
returns a string representation of this object
returns the type of the effective
returns true if the is editable
transactions
returns the applicable rate of the
returns true if the object is contained in the current page
returns the type of the rate
returns true if the given object is contained in the current
returns the applicable rate of the
returns the cell at the specified position in the table
display a table cell display table
visitor method for the visitor pattern
returns true if the cell at row and column is editable
visits the given ast node
merges the given with the given

returns the editor component
returns the
stop editing the cell editing
adds the children of the given to this node
returns the string representation of the money
this method is invoked to be used as an asynchronous
invoked when an has changed
returns true if the given object is contained in the current
visits the given ast node
returns a string representation of the
get the tags for the
returns true if the given object is contained in the current page
returns the z coordinate of the z axis
visit the tree node
returns true if the given object is contained in the current page
visit the tree node
returns the contents of the given object as a value
visits the given ast node
adds a new tree to the tree
builds the action
changes the content of the view to the given content
returns the first of the
builds the panel
expands all the nodes in the tree
returns the option edit state
returns the tree path
returns true if the depth of the view is enabled
refresh the
the tree
switches to the current directory
returns the column name
returns the minimum width of the specified column
switches to the current directory
returns the money of the given cell
returns the work sheet panel at the specified index
returns true if the file is currently loaded
adds a file view to the given file
returns the root tree
returns the selected file
returns true if the given is compact node or not
enable disable the slider
returns the selected file view
this method initializes this
open the dialog
expands the given object
shows the save dialog
returns the of the tree
returns the title of the frame
shows the dialog
returns the column name
returns the minimum width of the specified column
returns the nodes that are contained in the given object
returns the money of the given cell
deletes the selected option
returns the selected option
sets the value of the
returns the money of the current user
creates and returns a new instance of the default divider
creates the button action performed
returns the parent node of this node
returns the number field of the
creates a new option
adds a new
this method initializes x label
adds the given option to the list of options
refreshes the buttons on the panel
returns the work sheet
returns the tags
returns the field value
this method initializes sum label
sets the expanded state of the tree
returns the field editors
returns the status of the dialog
notifies all listeners that the tree node has changed
sets the status of the status bar
returns the equal label
returns the title text field
adds an action listener to the list of listeners
adds an action listener to the listener
returns the tooltip for the given
returns the
this method is called when the user presses the
returns the field value
returns the money of the current user
returns the for the given
this method initializes number field
sets the discount or value for this
sets the icon text
returns the
returns the number field
returns true if the discount is or not
returns a string representation of the object
refreshes the structure of the structure
returns true if the is or not
creates the gui components
returns true if the root node is visible
returns the current state of the option edit option
refresh the content of the panel
returns true if the depth of the view is enabled
change the content of the view
sets the number of pages to be displayed in the tree
returns the maximum preview percentage of the maximum allowed
updates the title of the frame
shows the tree
sets the work sheet
expands the tree
edit the selected
transfers the current edit status to the current page
refresh the tree
returns the icon that is used to display the icon
returns the icon that is currently being used to represent the
returns the leaf icon
initializes the blank panel
returns true if the is highlighted
returns true if the lock is locked
creates the panel for the control panel
returns the chart title
returns the data
generate a label for the pie chart
sets the current node
sets the title
adds an action listener to the listener
fires an action event to all registered listeners
sets the preview percentage
this method is called to indicate that a given step is in
initializes the dialog
cleans all the resources
sets the editable mode
sets whether or not the component is editable
refreshes the text area
stop editing the editing text
this method is called when the user selects a
refreshes the text fields
stop editing the editing text
returns the selected currency
sets the dimension of the given dimension
sets the selected currency
returns the index of the currency in the given currency code
refresh the current page
saves the current state of the cash
returns true if the is on parent
changes the state of the demo
change icon to the icon
returns the
returns the of the
returns the number of children of this node
returns the object associated with the given key
returns the explorer view for the given node
sets the value of the lt gt
removes the key value pair from the key
returns the index of the current entry in the list
returns the child at the specified index
adds a child at the specified index
returns the parent of this node
compares the specified object with this object
returns the selected
adds a component to this container
adds a component to the table
sets the value of the
adds a tab to the list
this method is used to sort the given position in the list
adds a tab to the list of tabs
adds a tab to the tab panel
returns the explorer tree
returns the component that is currently selected in the current panel
returns the selected index
returns true if the drag cursor is being dragged
removes the current from the current page
returns true if the open is open
sets the center on open
returns the number of tabs in the tab
accept dropped node dropped
sets the parameter key
inserts a tab
returns true if the exit is on exit
returns true if this is a
sets the initial bounds of the component
removes the component from the container
removes the tab at the specified index
returns the display of the display
lock the lock
returns the display of the specified graphics
sets the step
removes all the items from the panel
sets the info
check the
sets the icon at the specified index
sets the icon
refresh the current state of the model
sets the text of the text
this method is called when the user selects the icon
initializes the component
sets the selected component
returns true if the orf is checked
sets the selected index
this method initializes this
returns true if the ancestor is checked
sets the title at the specified index
invoked when a hypertext link is updated
sets the url to the given url
returns the icon that is used to represent the icon
initializes the pane
returns the input stream for the given url
returns the icon for this icon
closes all windows
returns leaf icon
returns true if the current thread is done
returns all registered registered registered
sets the height of the
sets the digit after the
run the action
returns true if the given node is equal to dst
invoked when the mouse has been clicked on a component
sets the text of the text
go to home page
sets the text to be displayed in the text
returns the text of the second text
maximizes the frame
returns the value of the
sets the title of the frame
this method is invoked when the frame is minimized
returns the integer value of the code code as a code
verify that the is positions
sets the column name
adds a panel to the panel
sets the visibility of the popup
sets the distribution used to monitor the given
adds a panel to the panel
adds a listener to the panel
sets the selected panel
called when the user selects the selected panel
removes the panel from the panel
removes the panel from the panel
removes all the views from the current view
refresh the component
adds an action listener to the event handler
returns the value of the given code string code
returns the previous object in the list
returns the next element in the iteration
acquire the semaphore
called when the file save is selected
returns the number of available
returns the number of permits that have been added
releases the current transaction
returns a copy of this map of objects
returns the selected panel
acquires the semaphore
gets the
sets the selection visible
sets the selection on the add mode
paints the border for the specified component
returns the border of the border
puts a key value pair into the map
removes the specified index at the specified index
returns the insets of the border
removes the key value pair from the map
checks if the given object is a
returns the maximum value of the key in the map
returns the index of the first occurrence of the given pair
returns the ordered map of doubles
sets the lang
returns the object at the specified key
sets the text to be displayed in the text pane
returns the ordered map of doubles
sets the tool tip text for the given component
returns the lower bound of the given key
delete the file
cancel the deletion
returns the ordered map of doubles
saves the default values
this method will be called when the file is started
returns the first value of the specified key
stops the server
returns the objects left side of the board
save the map
returns the value to which the specified key is mapped in this
registers an object
returns the objects right side of the list
returns the key at the specified index
registers an object with the given key and the given key
returns the value at the specified index
returns the value of the given currency
registers an object
returns the ordered map of the ordered map
returns the value of the given string
registers an object
this method is called when the game is saved
returns a string representation of the object
sets the value of the given currency
returns the index of the specified map
registers a new object
convert the current value to a conversion
returns a deep copy of the receiver uses
returns the available language
adds a listener to the list of listeners
sets the background color for the background color
notify the change of the cash change event
this method is called when the simulation is saved
returns a list of the
returns a list of the
returns true if the file is encrypted
the of the selected
adds a listener for tree selection events
returns the selected
displays a dialog box with the given user
sets the
sets the
sets the selected
sets the major component
a new that is a
returns a copy of this dlg object
returns the major component of this component
sets the internal frame to the given internal frame
the frame
sets the of the
returns the panel that will be used to display the tree
this method initializes source tree
returns the grade of the
sets the and the
returns the in the
gets the
the with the given name
dump the to a string
returns the panel that controls the panel to display
displays the specified phase complete
returns the secondary split
test method for
test method for
cleanup the progress bar
notify the template that the template has been added
puts a item in the tree
adds a jasper field to the current date
adds a new field to the list of
returns the datasource that this adapter is managing
returns the number of fields in the list
returns the jasper report
initialize the working directory
returns the fields of the current map
returns the base name of the given element
adds a jasper field to the table
returns a map of fields
adds a field to the report
freezes the table
adds a new row to the table
adds a new value to the list of applications
adds a new
render the report
returns the control server
sets the
returns the file name for the given template
check if the given template is available
adds a listener to the list of listeners
this method creates a tree from the given
sets the parameter of the given parameter
removes the listener from the list of listeners
adds a title to the current page
notifies the listeners that the report is before
adds the content to the page
indents the string in the given level
notify listeners that the report has been closed
this method initializes destination tree
returns the data source
consumes the given node and its children
calculates the distribution of the given configuration
returns the current level of the current level
visit all the children of the given node
returns the number of sections
returns the stop button
returns the number of sections in the current section
returns the event manager
computes the toc for the given language
returns the number of sections in the specified section
returns the number of sections in the section
returns the indent string for the given string
increment the counter
notify the report that the template has been added
returns the number of reports
adds the content of the given node to the current section
adds a new title to the list
returns the button that will be used for creating a new button
returns the number of the section of the given node
returns the number of the section that is contained in the given
link to the cursor
a class file containing the interface declarations
invoked when a hypertext link is updated
displays the
this method initializes progress bar
show the tree
launches the console
this method initializes chooser
draw the summary
load the file
sets the selected
returns the view for the given file extension
sets the selected
loads the new
adds a file view to the database
load the simulation
loads the new simulation
checks if the given source is near the target
returns the selected file view
start process process
load the gold
inserts a new head of the head of the head
load gold gold
insert a new profile
counts the number of occurrences of the specified value
returns the current
sets the column name
commit the given output stream
removes all the files from the cache
returns a string representation of the object
returns the name of the file
returns the column name
insert a new directory into the directory
inserts a file into the
insert a directory into the directory
removes a file from the list
removes a file from the list of directories
removes all the files from the given path
launches the update updater
writes the current state of this object to the given output stream
returns the checked value
sets the selected state
sets the checked value for this property
sets the selected state
check if the given node is checked
returns the icon for this icon
save the file save action
returns true if this node is an object
sets whether or not the tree is visible
returns the index of the child index in the specified child
adds a child to this node
returns true if the node is a leaf
returns the depth of the
checks if the given node is a ancestor of this node
returns the icon for this icon
returns the icon for this icon
returns the leaf icon
sets the background color for the background
returns true if this is highlighted
rebuilds the height of the quarter
sets the text background color
adds a listener for the tree model event posted after the tree
sets the foreground color
removes a listener previously added with
notifies all listeners that have registered interest for
notify listeners that the tree node has been inserted
returns the label for the icon
notifies all listeners that have registered interest for
notifies all listeners that the tree structure has changed
returns the child of parent at index index in the parents child
returns the number of children of parent
returns the index of child in parent
selects the given node
returns true if the given node is a leaf
returns the children of this node
returns the child at the specified index
returns the index of the child
adds a child at the specified index
sets the parent
removes the given node from the list
this method is used to order the given position
move the move to the given destination
sets the user object
select nodes in the tree
returns true if the drag cursor is not activated
returns true if the dropped node is dropped
returns true if the is
returns the state of the check mark
check the status of the
compares this with another one
selects the nodes in the tree
creates a new button
sets the data of the tree
the tree to check the
returns the path to the node
updates the current
creates the window
returns the selected objects
returns the selected multiple
show the dialog
returns the selected node
creates and returns a new frame that will be used to display
returns the selected node
expand the tree to the
this method is called when the selection changes in the tree
collapse the tree
test that the drop target is dropped
the tree to check the tree
sets the check visibility
returns true if the class is checked
returns the closest point in the given point
fire the changed event
repaints the display
returns the bounds of the given node
changes the root of the tree
checks if the given code code is contained in the
returns the children of the given station
expand the
collapse a node
collapse the given itinerary
expands all the nodes in the tree
expands the given path from the given path
returns a string that represents the image for the given
enables the tool tips
sets the background color for the background color
returns the configuration property
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
generate a random string
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
validate the
auto generated setter method
auto generated add method for the array for convenience
validate the changed attributes
auto generated setter method
auto generated add method for the array for convenience
auto generated setter method
auto generated setter method
validate the array for means
auto generated setter method
auto generated add method for the array for convenience
validate the array types
auto generated setter method
auto generated setter method
auto generated add method for the array for convenience
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
validate the array for variables
auto generated setter method
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
validate the array for privacy types
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
validate the array for headings
auto generated setter method
auto generated getter method
auto generated add method for the array for convenience
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
validate the array for media info
auto generated setter method
auto generated add method for the array for convenience
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
validate the array for call participants
auto generated setter method
auto generated add method for the array for convenience
validate the array for caller identities
auto generated setter method
auto generated add method for the array for convenience
validate the array for called identities
auto generated setter method
auto generated eto method bioseq rankings ivt colecciones
validate the array for caller identities names
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
validate the array for call participant information
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
validate the array for result
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated setter method
validate the array for attributes
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
auto generated getter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
validate the array for result
auto generated setter method
auto generated add method for the array for convenience
validate the array for
auto generated setter method
auto generated add method for the array for convenience
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated getter method
auto generated setter method
auto generated setter method
reverses the complement of the given string
extracts the given value from the given string
translates a translated translated letter into a translated
translate the translated text to the given translated
checks if the given character is valid for the given character
checks if the given input is valid
saves the current state of the file to the server
p place a memento
sets the action
this method is called upon plug in activation
handles changes to the view
this method is called when the plug in is stopped
shows the dialog
returns the current view
called when the selection changes
updates the view
starts the user
get the image descriptor for the specified image id
show the current page
ask for password to connect to server
this method is used to extract the extensions from the
add a new server to the server
invoked when a connection is established
invoked when a disconnect is disconnected
connect to the server
removes a server connection from the server
ensures that the dialog has changed
disconnect from the server
adding the page to the wizard
this method is called when finish button is pressed in
invoked when the parent of the tree has changed
invoked when the node changes
invoked when the node has changed
invoked when the parent node has changed
returns true if the file list is empty
adds a listener to the list of listeners
removes a listener from the list
returns true if the label is empty
returns the label of the connection
returns the target folder
removes a listener from the
returns the target
invoked when a component gains the keyboard focus
refresh the node
returns the target
closes the connection
returns the path name of the parent directory
returns the number of children of this node
returns the image that is currently loaded in the registry
returns the file extension of the file
returns the file type description
returns the root of the tree
puts a key value pair into the cache
tests that the object is correctly classified
select the composition of a select query
prepares the product for the given product
prepares the item to be used in the
check security check
returns the object associated with the given id
returns the id of the map with the specified id
returns true if the given object is a object
resets the factory to the default factory
returns true if the dialog is equal to this
returns the hash code of the current object
returns a clone of this object
sets the attribute fields
returns a vector of the emails in the database
sets the
sets the emails of this email
returns a vector of the phones
sets the phones
sets the attributes
returns a vector of time descriptions
sets the time descriptions
returns a vector of all the
returns a vector of the zone ratings
returns a vector of all the parameters of the request
sets the amount of the zone periods in the zone
returns a vector of the of the
sets the
adds a new to the list
returns a vector of attributes for this object
sets the attributes
returns the id of the object
returns the version of the version
returns a vector of media descriptions
sets the value id
sets the version of the version
sets the version of the version
returns the string representation of the field
sets the repeat times
p return the field name
returns the body of the body part
encode the body of the request
sets the call id
returns the name of the parameter to be used for the
sets the value of the tag as a tag
returns the value of the tag parameter as a string
sets the value of the tag
returns the body of this request
returns the body of the request
returns all the methods of the list
returns the string representation of the current
encode the body part as a string
sets the cause of the exception
encode the body part as a string
returns the body of the body part
encodes the body part of the body part
sets the product of the product
clones the object
adds all of the elements in the specified collection to this collection
inserts all of the elements in the specified collection into this list
returns all the methods of the list
encodes the given buffer into the buffer
sets the uri of the alert
sets the parameter value
sets the parameter value
sets the parameter value
returns the parameter of the request
sets the
returns the url
sets the
returns the uri of the address
returns the url
sets the
returns the parameter of the
sets the
sets the security mechanism
sets the encryption algorithm
sets the algorithm used to generate the algorithm
sets the
sets the protocol
sets the token to be used for the token
sets the mode
gets the value of the property
sets the parameter
sets the parameter
sets the port of the client
sets the port number
sets the value of the parameter
gets the security mechanism
returns the encryption algorithm
returns the body of this code soapmessage code
sets the address for the
add a to the address
remove a address from the list
sets the event id address
add a to the address of the event
remove a address from the
deletes the value of the given property
sets the language tag
returns the uri that is used to store the uri
sets the uri
creates an instance of a extension header with the given address
returns the auth params
returns the hop hop
sets the value of the parameter
returns the for the given address
returns a linked list of strings that are contained in the
returns the content of the header
returns the
returns the hash code of the current object
clears the uri of the uri
returns the header with the specified name
clears the list
sets the post dial
sets the value of a parameter
returns the content type header
returns the error info
returns a linked list of strings that are formatted as a string
returns the list of contact headers
adds a new net object to the list of other objects
returns the value of the request header as a list of headers
parse the
parse the request
parse the
removes the headers from the list
returns the authorization header
sets the default value for the parameter
parse the
returns the route headers
parse the
sets the uri parameter
returns the name of the current element
sets the host name
sets the user parameter
sets the method
p get phone context p
returns the record route headers
parse the header
returns the names of the names of the header
returns a string representation of this object
sets the value of the named property
compares this object with another
returns the value of the named attribute
returns the content of the message
returns the name value associated with the given name
remove a value from the database
returns the number of elements in this collection
returns true if this is empty
returns an iterator over the elements in this collection
returns the names of the
returns a clone of this object
adds a list of objects to the list
returns the content of the message
sets the value of a named header
returns a vector containing all the lines in the table
get the next token in the input stream
returns the next token in the stream
sets the parameter value
compute the content length of the content type
sets the transport parameter
returns the current string as a string
returns the string representation of the specified
returns a list of all headers that have been set in the
returns the next number of the token
returns the string representation of the header name
check if the given process is in the process
process a message in the process
returns a set of the merge that is in the session
send a message to the peer layer
checks if the given header name is contained in the header
get a list of for the given context
returns true if the packet is
returns true if the packet is
returns the
returns the
sets the
adds a location resolver to the location resolver
returns the for the given packet
create a new
adds a key to the
adds a key to the
removes a key from the
returns the relation info for the given key
removes a key from the
adds a relation to the relation
removes a relation info from the relation
removes a relation info from the relation
returns the info associated with the given key
remove a from the list
returns the relation info for a relation
returns the relation info for a relation
the sip context
the message
this method is called when the modlet is
transmit a to the transmit time
the
the
the
the
the
the sip context
sets the state of the transaction
the
sets the state of the transaction
this method is called when the transaction is done
the
this method is called when the transaction is done
the
the
returns a list of all headers in the
sets the state of the transaction
this method is called when the transaction is done
the sip context
the sip context
this method is called when the user selects the
transmit the to transmit
the
compares this object with another one
sets the state of the transaction
sets the state of the
this method is called when the transaction is done
returns the managed by the given user
returns the for the given context
removes the current transaction from the database
returns the of the
returns a context for the given context type
returns the of the
returns the transaction controller for the given transaction
stops the process
this method is called by the thread to terminate the process
returns the number of protocol protocol instances
returns the host and port of the host
sets the location resolver
returns true if the protocol is
returns the hash code for this object
returns a string representation of this object
returns the peer peer
sets the outbound proxy server
sends a envelope message to the router
returns the of the
returns the send to
sets the of this route
sets the send to route
returns the xmpp message
submit new thread to the given context
this method is called when the method is called by the
returns the record route list
returns true if the route is a route or not
returns the command method
sets the command method
returns true if the is
returns the command class
sets the
returns the command name
sets the done command name
gets the result code
sets the result code
returns the protocol for the transport
binds a peer to the local peer
adds a new router to the repository
returns the local address to which this local connection
returns the local port
returns the flag
returns the
this method is called when the user selects the creation of a
the input
sends a command to the
registers a gadget to the
returns a string representation of the host
sets the mode to be used for this
this method is called whenever the is closed
this method is called whenever the is closed
gets the local address to which the local host is connected
the group with the given key
removes a group from the group
get the value of the azimuth
returns the distance between the start and the given destination
returns the anchor point for the given point
associates the specified value with the specified key in this map
puts the specified value in the current map
remove the route from the list of
sets the interval in milliseconds between the
sets the interval between and
returns a new byte array containing the
this method is used to create a new context
ping the given ping
process a message
removes a route from the route
returns the table
puts a new entry into the map
returns the head of the head of the queue
returns the number of different entries in the table
removes the of the given node
schedule a job to be run
schedules a task to be run in the schedule
cancels the task
removes the mapping from the specified protocol
deletes the mapping from the specified mapping
sets the source of the source
sets the access controller
accept the socket and accepts the current state
returns the tag of the tag
returns the id of the
discards the current uddi address
returns the hash code of this object
runs the
shift the given number of the left hand side of this object
shift the right hand side of the given integer
sets the bit at the specified index
shift the to the specified number of
removes a bit from the receiver
shift the right hand side of the given shift
sets the bit at the specified bit set
removes a bit from the buffer
returns a string representation of the given integer
returns a string representation of the given integer
binds local peer
sets the tile at the specified tile
returns the tile at the specified location
randomly the tile
draw the applet
lookup a service in the database
starts the worker
returns the current position of the current
initializes the cache
the file to be a file
extracts the filename from the url
extracts the filename from the url
returns an iterator of the jar files that are deployed in the
checks the given command line parameters
returns the main message of the given code code
returns the message for the email address
logs a warning message
sort
this method is called to perform the algorithm
returns a parser that matches the given id
adds a header to the header
adds a subject to the list of subject
this method is called to indicate that the parser has been selected
adds a new attachment to the list
sort the parser
converts a string into a boolean value
execute the command
convert a double to a double
convert the given float value to a float
add attachment header
convert a string to a integer value
gets the value of the last added email property
find a one vertex in the graph
find a one vertex with the given id
add a new reply to the list of sites
find a one vertex in the given object
adds a subject to the subject
adds a static part of the given class
adds a new to the
adds a new edge to the graph
adds a new edge to the graph and returns the result
adds a new to the graph
adds a new to the
reads the parameter categories
returns the section of the current
sets the emails for the given category
returns the class name of the
adds a new vertex to the list of all the vertices
sum the sum of the of a given
normalizes the given vertex
this method is called when a file is
this method is called to set the state of the model
this method is called to start the rendering of the vertices
this method is used to transform the given
sets the leaf nodes as a leaf
returns the value of the given word as a float score
returns the number of incident edges of the given type
this method is called when a message is received
add a new email to the list
prints the statistic
finds the next name in the string
removes all the words from the string
checks if the given word is a email address
reads the file from the given file
runs the given code soapmessage code with the given
removes the given from the list of
removes html tags from the html document
counts the number of lines in the specified table
returns the file type for a given file type
saves headers to the file
updates the index of the graph
the contents of the ngram
returns a string representation of the object
returns a string representation of the object
returns a string representation of the object
returns the position of the first character in the list
returns the position of the end of the
returns a string representation of the object
returns the value at the specified index
set the value of the element at the given index
returns true if the object is empty
adds a listener to the list of listeners
shows the dialog
puts a string into the
removes a regex from the current string
invoked when a change in the text widget is clicked
focuses the widget
called when the focus is lost
loads the notes in the given notes list
returns the index of the note id
get first day number of month
gets the last day in month
test the
gets the today date
returns the time of the last file
sets the selected first month
gets the email part id
sets the email part id
sets the email messages pattern
called when the log is about
this is the entry point method
resets the date format
sets the date format
returns the date format
sets the date format time zone
returns the date format for the date format
sets the time of the time in seconds to cache the time
returns the time of the time in milliseconds to format
resets the date format
draw a string in the buffer
reads the non blocking state of the process
writes the blocking pipeline
reads the blocking time
executes the command
process a process in the process
write the blocking state to the console
execute prog in a separate process
sets the ending line number
waits until the process is finished
execute a command
process a command
waits until the readers readers are done
process a new process
run the command
waits until the writer is finished
returns true if the server is still alive
terminate the process
runs the command
run the command
wait for the process to be processed
reset the parameters
wait for the process to be read
writes the current line
sets the dtd
this method will be called by the process process to send an
this method is called when the end of the element has been
start a new element
sets the q
returns the feature class
returns the alternate names of the alternate theme
returns the hash code for this peer
returns a string representation of this object
returns the peer for the peer
returns the current sender
register a new object
unregister an object from the session
dispatches the given code message code to the code code
this method is called by the garbage collector when the
returns the data source
returns the number of
returns true if the field is used to use the field name
refreshes the data in the database
sets the data source
sets the database field for the field
setter for property db
returns the size of the content
sets whether or not the field name is used to use the
returns true if the entry is empty
writes the data to the data
returns true if the columns use all columns
sets the add empty entry
sets the value of db field
insert the methods description here
sets the selected item
sets whether columns should be used for columns
sets whether or not the field name is used to use the
writes the data to the database
executes a sql query
executes the given query
returns the database connection
set the database connection
set the value of the db password
set the database username
finds the column index for the given column
refreshes the data in the database
returns the number of columns in the table
returns the column name
writes the current data to the database
deletes the selected rows from the table
gets the value of the row is valid property
returns the most specific superclass for the specified column
moves the cursor down one row
returns the number of columns in the model
adds the given component to the
sets the column value
returns the column name
sets the designated column in either the current column or the
executes the query
sets the row that is valid for the row
returns the number of rows in the model
returns the database
returns true if the cell at the specified location is the same
moves the cursor down one row in the list
executes a query and returns the result of the query
returns true if the table is read only
refreshes the bound model
refreshes the data in the database
removes the given component from the list
sets the column names value for this
the query
sets the db
sets the data vector
sets the default query
sets the table read only flag
writes the objects bound to the current state of the table
returns the value of the config property
handles a invalid invalid
sets the games list
returns true if the echo is
returns the selected game
stores the memory of the given address
stores the given memory address in memory
handles a
redraw the current state of the view
redraws the window
executes the selected item
tests the correct functionality of the
writes the given address to the server
copy the current screen to the current screen
redraws the current screen
activates the given
adds a new widget to the list of widgets
moves the widget to the top of the stack
removes the specified widget from the list of widgets
move the top of the stack
handles the of the
destroy the widget
sets the screen
tests the driver
sets the x size
draw a text
returns the extension filter
draw a box
sets the y size of the image
draws a border on the screen
draw the cursor at the specified coordinates
sets the extension filter
inserts the specified byte into the buffer
insert a new byte in the buffer
returns the file type name
returns the xp for the given integer
returns the input input of the input stream
sets the file type name
draw a text
draw a box
draws a border on the specified coordinates
draw the cursor at the specified location
sets the file selection mode
returns the key of the
writes the specified output to the output buffer
writes the specified byte array to the output stream
repeat the given character
copy the current screen to the current screen
returns true if the is already running
this method is called when the user selects a new instance
this method is called when the user starts a new instance
draw a box
checks whether the current thread is a
executes the script
execute the command
execute the script
draw the cursor at the specified location
execute the script
returns the variable with the given name
this method is called when the script is created
run the script
sets the value of the variable
initialize the input stream
sets the
returns true if the connection is alive
initialize the line
sets the for
translates a value to a translated
verifies that the file is a valid file
translates a physical physical physical address into a physical number
translates a logical logical coordinate to a logical coordinate system
open a disk image
sets the number of in the specified sector
verify that the given directory is valid
executes the script
write the raw data to the file
tests if the given byte matches the signature
this is the entry point method
adds a marker to the file
convert the package name to a path
returns the current tag of the current slice
returns the attribute
returns the current end offset of the current slice
this method is called when the xml document is loaded
generate the source generator
translates a element
returns the element that this element represents
returns the element node of the given element
returns true if this node contains invalid nodes
returns the base data type
returns the data type description
returns an iterator over the data type in this iterator
generates the model
returns the type name of the data type
writes the document to the file
returns true if the type of data type is defined
returns true if the data type contains data type data
sets the type declaration
returns the current time
returns the description of the file
returns the filled value of a specified number of characters
returns an iterator over the example iterator
returns the main description
returns the name of the attribute
returns the description of the element
returns the name of the referenced element referenced by this attribute
returns true if this object has a description of the description
returns true if the examples are
returns true if this attribute is a reference
returns an iterator over the elements in this list
returns true if the field is required
returns an iterator over the elements in this group
returns true if the attribute is unique
returns the start element message
returns the name of the reference
returns the name of the element
returns the author of this event
returns the path level of the path
returns the current time
returns the main description of the main menu
returns the name of the referenced element referenced by this element
returns the root element name
returns true if the author is author
returns true if the main class is defined
returns an iterator over the elements of the target
returns true if the element has attributes
returns true if the node has children
returns true if this object is description
returns the model file name
returns the root class
returns true if this package has a package
writes the specified file to the file
returns true if the element is root element
writes the document to a file
creates an instance of reference element
creates a key in the given field
configure the compiler
generates the document
generate documentation for generating the documentation
generates the file
generates the
displays the result set
shuts down the database
called whenever the part of the part has been raised
shows a popup dialog
shuts down the database
sets the phase of the game
returns a string representation of this object
this method is called when the image is produced
initializes the plugins
returns a string representation of this object
stores the current value in the database
returns the user authorization session
sets the proxy configuration for the proxy server
sets the proxy authentication configuration
returns true if the request is a
removes the user from the session
invalidates the cookie cookie
store the request to the specified url
store the request to the specified code code
retrieves the request object for the given url
retrieves the value of the request object from the request
removes the session from the session
returns the last visited time in the request
returns the cookie with the specified name
returns the value of the cookie
encode a password to a user
import data from a string
returns the system id
returns the id of the request
returns the id of the request
returns the system id of the request in the category
returns the id of the user in the category
stores the in the database
clean the delegated to the
display a company in the company
adds a sequence to the sequence
sets the sequence at the specified index
removes gaps from the list
deletes the columns of the specified range of columns
this method is called by the menu item to notify the menu
returns the description of the user
returns true if the given file is accepted by this filter
log a message to the console
updates the progress of the progress bar
dispatches the event to the registered listeners
returns the book title
returns a string representation of the object
checks if the console is console
checks if the command line is
checks if the command line is
checks if the command is currently in the command line
returns true if the option is enabled
checks if the email is available
returns the id of the command
returns the last name
returns the barcode value
get the pin value
returns the server name
returns the email address of the user
returns the interval in seconds
returns the time interval in seconds
auto generated test method
sets the velocity engine
request a password to be sent to the server
initialize the service
authenticates the user
reset the password to the user
sets the basic authentication authentication context
create a new token
returns the item with the given id
adds a title to the title label
sets the control that is used to control the control
returns the selected item
returns the index of the selected item
sets the amount that the receivers value will be
sets the selection
sets the receivers selection to the given item
sets the selection at the given zero relative index in the receiver
sets the background color of the selection
sets the background image
sets the simple property of the area
returns the current project
returns the file that this resource is stored in
returns a string representation of the object
returns the loader test suite
this method is used to remove the pipe from the pipe
returns the interval in milliseconds between
returns the response header for the specified key
sends a string to the server
disposes of the operating system
cancels a running operation
sets a property with the given name and value
returns the system property
adds a result to the result set
returns an iterator over the packages in the package
returns the number of elements in the list
returns the number of in the given check
write the contents of the given result to the output stream
returns the index of the given package
adds a result to the result set
returns an iterator over the classes in this class
returns the result of the package specified by name
returns the result of the given class
returns the number of elements in the array list
check if the given code string code is valid for the given
returns the number of in the given check
returns the index of the given result
sorts the classes in the class
adds a result to the test result
returns an iterator of the test objects in this test
returns the number of tests
returns the number of in the given check
print a string
returns true if the user has successfully successfully
returns an iterator over the elements of the iterator
returns the number of times the task has been parsed
returns the check point
returns the number of in the given check
print the end of the tag
returns the actual actual actual
returns the expected expected value
print the tag with the given tag and the given index
returns the log
append the given print writer to the output stream
print the given print writer to the current print writer
returns the project with the given path
returns the getter for the name of the property
returns the setter of the setter
persists the object
returns true if the is
sets the
returns a connection with the given prefix
returns the child for the given prefix
sets the value of the attribute map
returns the map with the given name
initializes the component
returns true if the mouse is over the mouse over the mouse
returns the course of the course
adds an element to the list
removes the specified element from this list
adds a relationship to the relationship
adds a relationship between two courses
adds a relationship between two relationship
checks if a chapter is valid
adds a son to the
save the current state of the file
this method is called when the model changes
exports the current project
creates a new course
creates a new course with the given id
creates a chapter
creates a new topic
creates a new topic
creates a new quiz
sets the id
returns the element id of the given element
sets the correct correct value
writes the document to the file format
writes the given file to the writer
writes the given file to the writer
returns the xml representation of the xml document
returns the xml representation of the document
returns the black color
returns white white
enables disables the button
returns the message holder object
initializes the applet
start the applet
called by the framework to indicate the tree
sets the in reply to the given id
sets the date
sets the level
sets the subject of the subject
sets the message
sets the author of the user
sets the author email
sets the url to the
sets the url to the url to the given string
returns the replies of this message
returns the number of reply to be sent to the client
returns the date of the file
returns the level of the
returns the number of lines in the document
returns the number of bytes that this connection is
returns the subject of the subject
returns the message
returns the formatted message
returns the author of the author
returns the author email
returns the
returns the url of the link
adds a reply to the list of replies
creates a view from an element
returns an enumeration of all the users
returns the user object with the given login
returns the url to the given element
returns the user file name
returns true if the user is in the list of users
returns true if the login table contains the given string
enables disables the button
run the thread
sets the message to be displayed in the
returns true if the user is enabled
sets the login
sets the email
returns the login
sets the level
sets the message
returns the cookie string
returns the minimum size of the component
returns the preferred size of the component
returns the maximum size of this component
sets the enabled state of the button
sets the tree model
returns true if the user is enabled
returns the author of the given author
sets the user
print a message in the
load the tree
returns the message associated with the given reference
returns the message node of the given node
returns a new message reference
sets the has been read
returns the message reference
returns true if the message is a leaf
returns true if the user is a leaf
returns a message object from the given id
returns the number of pages in the forum
returns the current max index
returns true if this is a explored state
destroy the service
returns the date format
returns the headers of the current request
returns the image text
returns the post text
returns the cancel button text
returns the author text
this method is called by the thread
returns the email text of the author
returns the
returns the id of the
returns a message object from the message
returns the
returns the subject text
returns the
returns the text of the message
returns the
returns the
returns the text that signifies that the text is expanded
returns the loading text of this file
returns the view factory
creates a buffered image and returns it as a
returns a buffered output of the given output
tears down the test fixture
returns true if the given data is valid
checks if the given code byte code is a valid
constructs a new instance of the given ip address and port
asserts that two arrays are equal
initializes the public key
creates a public key
returns the key file
returns the secure message
asserts that two bytes are equal
returns the secure callback callback
assert that the two arrays are equal
test the reception of a random number of trials
asserts that the two arrays are equal
assert that the two arrays are equal
tests secure method
tests that the secure method is not used
tests secure secure secure method
tests that the correct signature of the user is wrong
sets the value of the attribute
sets the value of the current value
sets the value of the current value
fires a setting event
notifies all listeners that the specified value has been changed
sets the value of the given string
adds a group settings to the group
reloads the settings from the database
saves the settings to the database
reverts all settings to the default value
sets whether the save is
returns the default properties
executes the given runnable
sets the executor for this executor
fires the settings event
notifies all listeners that the given event has been
normalize the value of the given string
sets the value of the string
reloads the model
sets the value of the attribute
saves the current state of the
load the value from the given string
reverts to the default preference
sets the value of the given value
sets the value of the current value
sets the value of the current value
returns the setting of the setting
returns the settings manager
returns the group settings group
sets the value of the color
compares the specified password to the password
this method is called when the algorithm is
this method is called when the user selects the next
returns true if the given host is connected to a host
transfers the data from the data transfer to the data transfer
allocate a new chunk of the current chunk
releases the chunk of chunk
shuts down the
increase the current position of the
handles the write of the
asserts that actual is a valid comparison
returns the channel port of the channel
returns the address of the connection
asserts that actual is not equal to expected
returns true if the is
start the server
get a channel object for the specified port
this method is called when the outgoing messages are written
returns the
returns the channel read channel
returns the channel write channel
sets the timeout for the socket
returns the timeout for the
returns the local address to which this connection is connected
returns the number of spots
clears the low block blocks
returns the lowest block block
returns the readable data block
sets the id of the connection to the database
returns the number of nodes in the current position
returns the socket address of the connection
returns the receive window
returns true if the server is ready to connect to the remote
returns true if the read is ready to be read
returns true if the chunk is ready to be ready
notify the event to be signaled by the event queue
returns the chunk limit
sends a message to the server
assertes that actual is not equal to expected
assert that the actual expected value is not equal
handles the fin sequence
asserts that the two arrays are not equal
assert that the expected expected length is not equal to expected
asserts that the expected expected length of the expected expected
reads an integer from the input stream
assert that the expected expected expected value is not equal to expected
writes an integer value
returns the value of the specified attribute
sets the value attribute of the object
returns the net range
returns the server name of the server who is currently being
connect to the given socket and port
returns the number of allowed sockets
assertes that actual is not equal
bind a socket
this method is used to run the
assert that the two arrays are not equal
returns the maximum number of active allowed connections
release the socket
returns the port of the port
returns the connection
the socket
creates a new
creates a new request for the specified name and the specified
remove a torrent
removes a hash from the given url
returns the data object associated with the given key
sets the data for the given key
returns the default value for the given key
returns true if the given parameter contains a given parameter
sets a parameter raw raw raw
registers a new transient parameter
removes a parameter from the list
returns the string value associated with a key
close the connection to the given
close a connection
checks if the game has completed
returns the user data associated with the given key
sets the user data
removes the specified piece from the list of pieces
clears the internal buffers
this method is called when the garbage collector
returns the average number of samples in the current period
compares this weak object with another one
compares this object with another one
sets the factor
resets the
updates the buffer of the given data buffer
saves the current state of the
restore the state
saves the current state of the
resets the buffer to the next state
updates the contents of the buffer with the specified input
update the data in the data array
update the data in the data array
updates the digest with the given data
resets the hash
saves the state of the hash state
restore the hash state
returns the time in milliseconds that the
sets the factor
initialize the configuration
redirects the current page to the output stream
this method is used to log the file to the log file
this method is used to log the file to the log file
returns the user data associated with the given key
sets the user data
this method is called when the user selects the
this method is called by the server to notify the given
this method is called when the is destroyed
gets the delegate
returns the user data associated with the given key
sets the user data
checks if the
returns the underlying cipher
tests whether a given file is accepted by this filter
add a new network to the network
adds a connection to the network
removes a peer connection from the pool
add a new entity to the list of entities
remove a from the list of interacting resources
returns the number of bytes available in the current
sets the stream encoder used for this encoder
sets the bytes used to indicate the number of bytes used
sets the rate of the rate
sets the rate of the
checks that the of the is
returns the number of bytes available for this
returns the current percentage of the completion of the message
destroy the queue
sets the decoder that is used to encode the message
returns the current percentage of the current message
resumes the queue
registers a listener for queue with the specified queue
mark time as time
adds a connection to the network
removes a network connection from the pool
registers a listener for queue
stops the server
returns true if the server is running
cancels the request and sends it to the given request
stops the server
returns true if the server is running
sets the transport mode for this transport
destroy the queue
adds a peer connection to the pool
removes a peer connection from the queue
close the connection
remove a connection from the pool
this method is called when a connection is disconnected
registers a connection to the server
listener for incoming connections
pause the given channel
resumes the selection
cancels the given channel
selects the given code long code in the receiver
creates a connection
cancels the routing connection
add a new entity to the controller
removes a previously added entity
adds a new code entity code to the controller
removes a previously added entity
gets the value of the last network service property
stops the network connection
polls the network connection for the given device
the network connection to the given peer
returns a list of all the
listener for routing events
saves the homes to the
returns the result of the given type
restore global limits
sets the download download download limit
queue a listener for incoming messages
interface for listener
check if the is allowed to be
check if the is allowed to be
write the messages to the current thread
destroy the
debug log level
log a debug message
returns the context
sets the context
complete the completion of the completion
adds a peer peer to the list of peers
this method is called when a peer is connected
returns the peer that is the peer to be used for this
returns the next time connect to the peer
updates the helper to the specified code code
initialize the
registers a message type
removes a message type from the list of currently registered
returns a message object from the given id
returns the maximum allowed number of peers per
this method is called when the game has been acknowledged
destroy the pending thread
adds a piece of the specified piece to the current thread
resets the timer
resets the limit of the
write the log status message to the server
sets the upload limit
calculates the of the
calculates the y axis tick marks
returns the millis of the idle ping timeout in milliseconds
returns the message string of the current
returns true if the download is a download mode
returns true if the search is configuration
returns the long term
returns the current history
convert the value to a per mb value
convert a law to a mesh
resets the counter to zero
check if ping is a ping ping
returns the number of bytes allowed in the
guess the download guess
sets the current
returns the time millis that the connection was idle
returns true if the user can download the
this method is called to indicate whether the is low
this method is called to indicate that the bandwidth of the
returns true if the file is uploading the file system
calculate the size of the step
returns true if the configuration is
returns true if the download confidence is a midi confidence interval
this method is called when the user pings the last calculation
if the current time the current thread is not
returns true if the given code number code is a first priority
refreshes the mappings
refresh the mappings in the current session
is the first priority of the current priority
sets the torrent
calculate the seeds of the specified download query
returns the distance to the specified ip
returns a string representation of the object
returns the block size
returns the message digest
writes the specified byte to this output stream
sets the rate of the video
returns the buffer
returns the size of the buffer
grows the buffer with the specified size
writes the specified byte buffer to the buffer
reads a byte from this buffer
returns a new byte buffer that contains the specified length
tests the is private address with string addresses
write the channel to the given channel
adds a new state to the current state
adds a new states to the current state
adds the given states to the current state
close the file
this method is called when the is destroyed
processes the next process
adds a new state to the current state
adds a new states to the current state
adds the given states to the current state
called when the user is done
this method is called to indicate that the current state is write
shuts down the cache
sets the read channel
returns the channel that is used to read the channel
sets the channel read channel
request interest for the next request
sets the object
this method is called to indicate that the bandwidth channel is available
returns true if the reader is open
request bandwidth request
releases the current throttle
returns the write channel
sets the channel
this method is called when the throttle is done
writes the specified byte buffer to the buffer
returns the write channel
handle the write request
sets the sink channel
writes the specified byte buffer to the buffer
flush the current flush
transmit the channel to the throttle channel
request bandwidth request
sets the shutdown observer
closes the connection
releases the current throttle
deactivates the
processes the timeouts
compares this object with the specified object for order
reads the next byte of data from the input stream
if the task is done then this method is called
shuts down the server
this method is called to go to the next page
returns the last failure cause
this method is called by the client server to do the
returns true if the given throwable is ignorable
this method is called when the server wants to be notified of
this method is called when the outgoing socket is closed
reads the next byte of data from the input stream
reads bytes from the buffer
initializes the socket
waits until the timeout is complete
close the socket
accept the socket and wait for the socket
writes the specified byte to this stream
writes a portion of a byte array
accepts a channel as a channel
close the connection
called when the is closed
reads the specified buffer from the buffer
creates a new client socket
called when the throttle is notified when the
returns the request to be used to determine the current
this is not a noop method
releases the specified amount of amount
sets the number of bytes per second
accepts the socket server socket
sends the bandwidth request to the
accept a socket
starts listening for the connection
writes the given to the stream
shuts down the server
returns the buffer cache
returns the number of pending timeouts
returns the read timeout in milliseconds
shuts down the system
shuts down the server and the socket and the socket manager
registers a channel with the given channel
registers a accept channel
test that forced byte arrays are forced
registers a channel with the given ttl
registers a new channel read write to the given channel
returns the selector for the given channel
test writing only only the
tests the get same method of the cache buffer cache
tests the get no release method
registers a selector
test that the heap buffer is correctly
tests the heap
removes a selector from the list
gets the scheduled executor service
accept the accept process
processes the read
processes the write process
runs the pending tasks
notifies all registered listeners that a
called when the user selects the cancel button
run the
run the test
runs the
run test for the test
run a test
inserts the element into the list
returns the largest element in the tree
returns the minimum value of the element
returns true if the specified object is contained in the list
removes the specified element from this set if it is present
adds the specified element to this set if it is not already
puts all of the mappings from the specified map into this map
returns true if the given index is set at the end of
returns the maximum number of elements in the list
adds the specified element to this set if it is not already
set the value of the element at the given index
removes the from the list
returns a string representation of the object
removes the newest from the list
removes the specified element from this list
returns the zero based index of the last
returns the next element in the iteration
this method is called when the user selects the
returns the current selection for the
adds all of the elements in the specified collection to the end
returns the index within the object
initializes the internal state
returns the element at the specified index
adds the given code element code to the end of this queue
removes the specified element from this set if it is present
checks whether the given object is contained in this list
returns true if the size is full
returns the first element in the collection
returns the last element in the queue
adds a new entry to the list
checks if the specified data contains the specified data
removes a entry from the map
returns an iterator over the elements of the given data
removes all the entries from the list
returns true if the element contains the specified element
returns the key
returns the first element of the list
returns the second element of the
returns the offset of the node
copies all of the mappings from the specified map to this map
sets the offset of the node
this method is used to set the tree node
mark the node as verified
puts the specified value to the specified key in this map
returns the height of the node
removes the mapping for this key from this map if present
compares two string values
copies all of the mappings from the specified map to this map
compare two file names
clears the cache
clears the trie
returns true if the specified key is contained in the hashtable
associates the specified value with the specified key in this map
removes the mapping for this key from this map if it is
returns the value to which the specified key is mapped in this
removes a key from the trie
adds all of the elements in the specified collection to this collection
returns the element at the specified position in this list
returns the last element in the list
returns the first element in the list
removes the specified element from this set if it is present
returns the length of the current unit
advance the trie
returns a string representation of this object
adds a set of intervals to the set
this method generates the for the given node
deletes the specified set of intervals
returns the value of the element
returns the first element in the list
returns the last element of the list
sets the value
removes the specified label from the list
returns true if the map is full
returns the next element in the list
decode the tree
returns a copy of this interval with intervals
adds a feature to the attribute
removes the specified range from the list
compares the specified object with this interval interval interval set
fix the list and add it to the list
clears the current tree
returns a string representation of this object
clears the list of all the
increment the size of the current element
decrements the size of the current element
increment the mod count
test fixed size method
test the refresh of the
tests the create from collection
returns the value to which this map maps the specified key
test the
test create and add collection of objects
test random order
returns true if the entry contains key value pairs
returns true if the map contains the specified object
removes the mapping for this key from this map if it is
removes the given entry from the cache
removes the given entry from the trie
returns the public key pair
returns a string representation of this object
the current transaction
removes the from the table
returns true if the given node is a local node
determines whether a node is a local node
returns true if the node is
returns the length of the key
returns true if the local address is a local address
checks if the key is set
returns the message dispatcher
returns the specified key with the specified key
purge the database
returns the message factory used to create the message
returns the message helper used to handle messages
returns true if the key is empty
returns the security token helper
returns the node
returns the socket address of the socket
gets the request message
returns the address of the specified address
creates a security token for the given code this code
creates a new token data object
writes the contents of the given output stream to the specified output
returns true if the given bit is set
sets the address of the local node
sets the bit
removes the given from this code code
flip the bit set of the
sets the bit at the specified index
sets the external address of the external server
returns the number of bits in the current state
returns the specified node with the given index
returns a xor value with all the
sets the key value
returns the of this
checks if the given is a
compares this object against the specified object
returns the hex string representation of the object
returns the string representation of the bin
returns true if the node is a internal node
returns the
returns true if this node is external node
returns true if the is disabled
initializes the bucket
sets the vendor
sets the node id
returns a map containing all the entries in the iterator
sets the id
returns the port number of the server
sets the
returns the number of failures
returns the time in milliseconds that the task was last executed
returns the time in microseconds
adds a listener for route table listener
auto generated getter method
gets the bootstrap manager
returns the timeout for the
returns true if the server is recently used
returns true if the aggregator has failed
removes a route table listener from the list of listeners
returns true if the current thread is still alive
checks if the game is dead
update the existing existing contact and updates the existing contact and if
touch the bucket
sets the state of the state
throws an exception if the given operation is not allowed
this method was created in visual age
adds a remote remote remote remote remote remote remote remote remote remote
ping the connection
updates the size of the list of contacts
returns the network stats
returns the global lookup stats
returns the database statistics object
start the task
stops the future task
returns the bucket used to hold the
returns the vendor id of the current transaction
this method allows the deserialization of the instance to
returns the major version number
returns the minor version number
returns the value of the version
interface for
resolves the current instance
interface for route
returns the route table
returns the left bucket
returns the right bucket
returns the existing contact
returns the contact
returns true if the key is in the dictionary
returns the primary key
returns the secondary key
returns the type of the value
checks if the entity is a primary key
returns a security token
refresh all the buckets
the
returns the string representation of the message
returns the string representation of the message
returns the address of the
removes the given type from this
starts the task
checks if the given route is expired
stops the future task
this method is called by the code storable code
increments the number of
increments the number of values per second
adds a new value factory to the list of factories
returns the creator of the
removes the given value from the list
returns the sender of this contact
returns the value factory that is used to convert the given value
decrements the value of the given entity
decrements the value of the given address
returns the value of the
returns true if the connection is direct
reads the value of the attribute type
a simple class to be empty
removes a storable model from the model
handles the change of the given change in the model
cleans up the database manager
cancel the given collection of cancel buttons
initializes the scheduled executor
initializes the watchdog
kills the watchdog
checks if the given code node code is same as the same
called when the task is done
returns true if the receiver is full
sets the value of the value
gets the value of the valid response property
notify listeners that the given value was scheduled
fires an cancellation exception event to all listeners
fires an interrupted exception event to all listeners
adds a listener to receive messages
creates a new input stream
returns true if the request is a request
creates a new message with the current
returns the next
returns the size of the list
creates a new instance for the given contact
reads the value from the given factory
returns the message id
removes a listener from the list of listeners
reads the next contact from the database
reads the ip address from the socket
reads the port number from the socket
returns the socket address of the socket
reads the socket address from the socket
returns the message
sets the data
starts the execution of the task
reads a security token from the current token
reads a code byte code from the code byte code
returns the receipt of the message
reads the statistic type from the data source
returns the receipt of the message
reads the status code of the current value
handles the error when an error occurs
reads a string from the
returns true if the request was cancelled
reads the value type from the input stream
returns the tag
reads the vendor and returns the vendor
returns the address of the socket
reads the version of this object from the input stream
stops the task
returns the message id
writes the given to the output stream
returns the request message
writes the message id to the message
writes the given value to the stream
returns the size of the sent message
writes the entity
this method is called when the user has received a time
writes the collection of to the database
returns the time in milliseconds since the last time the request was
closes the current thread
writes the collection of to the
returns the elapsed time in milliseconds since the last time the
writes the signature of the signature to the given signature
returns true if the timeout is still in the timeout
writes the given code contact code to the given code
writes a collection of contacts
checks if the response message is
writes the local address to the local address
writes the port on the port
returns true if the user is accepting
compare the response to a response
writes the socket address to the server
write security token to the security token
check if the response is valid
writes the statistics to the given
returns the response handler
writes the operand code opcode
writes statistic data to the given statistic type
writes the status code to the given code status code
handles the tick on the current tick
writes the string to the output stream
returns true if the dialog is cancelled
writes the codes to the given output stream
writes the size of the collection
sets the allocate new value for the allocate number buffer
writes the given type of the
gets the value of the allocate new byte property
write the vendor
writes the version information
returns true if the channel is open
gets the value of the result type property
gets the value of the estimated size property
returns the datagram channel
returns the lookup key
returns the local socket address of the socket
returns the hop hop
returns true if the entity is successfully successfully processed
returns the route table failure count
writes the content of the packet to the output stream
returns the lock object for this lock
sets the timeout value for the timeout
serializes a socket
returns the elapsed time
returns the time of the last response
resets the errors
returns the errors
sets the maximum number of errors to be used for the validation
reads the message from the input stream
returns the maximum number of errors in the
returns the wait timeout
reads the message from the socket
sends a message to the server
processes the response
returns true if the current thread is done
verify the verifier for the given verifier
sets the return value
sets the exception to be thrown
reads the next value from the input
processes the request processor
this method is called when the user selects the interest
returns the socket channel
registers a new
this method is called when the next end of the process is
returns true if the message is accepted by this message
returns the security token
returns the next element in the iteration
adds a code to code code
returns true if the given host is allowed to accept a specific
sets the exception to be thrown
returns the ioexception that caused this exception
clears the queue
this method is called after the next request is finished
returns the lookup id
sets the size of the result set
returns the size of the result set
sets the
returns the
adds a new contact to the list of contacts
sets the
sets whether the select alive nodes should be selected
checks if the given is
returns true if the select statement is able to determine whether or
sets the delete
returns the value of the code int code as a short
returns true if the is deleted
removes the receipt from the queue
returns true if the given node is a
checks if the current session has been closed
increments the current counter
decrement the current state of the counter
resets the current state of the active
returns the number of active searches
returns true if the current iteration has the previous
checks if the given node is
mark a node as
checks whether the given node is
returns true if the query has been
adds a new node to the
adds the given request to the response
adds the given code node code to the given code node code
returns the current hop
test method for
returns the offset of the specified size
returns the ending offset of the specified range
adds a new interceptor to the list of headers
removes the specified interceptor from the list
clears the list of interceptors
prepares the socket and wait for the request
accept a socket and wait for a connection to the server
initializes the reactor
adds a listener to the session
adds a new interceptor interceptor to the list of interceptor
adds a response interceptor to the interceptor
returns the reactor that is used to handle the
removes a previously registered acceptor listener
removes a request interceptor
removes the specified interceptor interceptor
starts the execution of the reactor
sets the throttle
returns the content of the input stream
repeat operation
returns true if the input stream is a streaming
writes the content of this code code to the specified output
sets the index filename
shuts down the
adds the specified buffer to the buffer
shuts down the pool
starts the thread
test that the proxy is broken
test
test
test
returns true if the shot is
schedules the specified task for repeated execution of a specific delay
test
converts a string into a string
resets the time in milliseconds to the beginning of the time
resets the log and resets the status of the log
evaluates the operands of the operand
encode the given byte array into the base64 encoded byte array
encode the given integer as a string
clears the current pupil
compares this version with another
encode the given list into the list of output streams
creates the
this method will encode the contents of the map into the given
run the given state
logs an exception
decrements the number of worker threads
adds a listener to the list of listeners
removes the listener from the list of listeners notified each time a
this method is used to broadcast the event to all listeners
adds a listener to the list of events
returns a property change listener for the given property
adds a listener to the list of listeners
removes the listener from the collection of listeners who will
returns the size of the list
analyze the given event
interrupts the threads
test that the file name is too long
clears the task run task list
test the test case
processes the worker exit worker thread
creates a new table table
begin user doc
returns true if the current thread is terminating
removes the executors execution from the executors
returns the size of the pool
is called when the execution of the task has been paused
is called when the execution of the executor is rejected
is called when the execution of the executor is rejected
is called by the task thread pool to resume a thread
send a string to the server
invoked when an action occurs
initializes the menu
returns true if the clipboard is available
sets the enabled state of this association
returns true if this is a valid association
sets whether the user can accept the specified value
returns true if the value of the property is allowed
returns true if this is a valid association
sets the adjustment disabled
checks if the given string is a valid
log the error
causes the given message to be displayed
initialize the options
defines the abstract method in tt abstract pane item tt
returns true if the current item is dirty
this method is called by the user to set the options to
this method is used to change the options of the user
sets the options to the options dialog
this method is called by the browser options dialog to enable the
this method defines whether the user wants to perform the options
sets the options to the user
defines the abstract method in tt abstract pane item tt
initializes the options
converts the template to a language
returns true if the application is dirty
this method is called by the browser
checks if the given template is valid
applies the given set of options to the current directory
initialize the options
applies the options to the current option
updates the model with the data from the model
initialize the options
applies the options to the model
sets the options to the options
applies the options to the current options
initializes the options
applies the options to the current option
applies the options to the selected option
defines the abstract method in tt abstract pane item tt
handle the throttle of the
applies the to the current page
initialize the options
initializes the options
this method is called by the plugin to determine whether the
applies the currently selected options to the current settings
defines the abstract method in tt abstract pane item tt
saves the given set of directories to the file system
this method is called by the framework to initialize the options
sets the directory to be used for the
applies the options to the current option
sets the filter options to the default value
applies the filter to the filter
defines the abstract method in tt abstract pane item tt
handles the of the
initialize the options
defines the abstract method in tt abstract pane item tt
applies the current download throttle to the current page
initialize the options
initialize the options
defines the abstract method in tt abstract pane item tt
tree selection listener
initialize the options
quits the user interface
handles the file open file
returns the name of the key
returns true if the firewall should be shown in the
handle the window opening
applies the settings to the given settings
enables actions for the given actions
moves the current window to the next one
sets the current window to the previous window
called when the user presses the cancel button
apply settings to the language
updates the language of the current document
show the window
creates the window
applies the settings to the specified settings
sets the download slots
returns the next page in the wizard
returns the previous page
schedules the task to be scheduled for the scheduler
performs the next page
binds the server socket to a server
called when the user selects the page
performs the previous page
cancel the connection
sets the message to be used for the
cancel the dialog
disconnect from the server
sets the status of the statusbar
validate the input
update the queue
updates the status of the status message
updates the current buttons state
displays the tip text window
sets the text of the icon
sets the channel mode
start the simulation
returns the tip for the current button
sets the status text
refresh the image
runs the
creates a new instance of the object with the minimum value
compare this object with another
creates a new bandwidth holder object
compares this object with another
returns the number of connecting connections
compare this object with another
create an instance of
compare this object with another
compares this to another
compares hosts with hosts
returns true if the view is valid
registers the application with the current state of the application
returns true if the icon is clipped by the given file
returns the native view native view
initializes the connection
compares this object with the specified object for order
this method is used to create a new
assign host name to host
returns the icon for the specified file
update the splash screen
returns the column at the specified index
preload the to the current file
removes the selected rows from the list
creates the popup menu
returns true if the view is available
this method is called when the browse button is pressed
updates the status of the host
refresh the tree
returns the number of connecting connections
sets the image to be displayed in the image
sets the value of the progress bar
returns the current value of the progress string
sets the paint string
stops the source data source
seek a position in the current position
this method is called when the mouse is moved
closes the audio stream
mouse pressed method comment
mouse entered event
invoked when the mouse exits a component
returns the value of the property with the given key
returns true if the control has gain control
sets the gain value
adds a new audio player listener
removes a audio player listener from the list of listeners
returns the player state
loads the audio source from the given source
pauses the paused state
this method is called when the player is playing
stops the animation
seek a location to a specific location
creates a menu item
sets the volume of the game
load the current song from the current song
causes the current audio to be paused
removes the selected items from the menu
notifies the given properties that it has been opened
notify the player that the event has been signaled
returns true if the component supports the import flavors
returns true if the component can import the given code component code
returns the actions for the given code
returns the image representation of the transferable
this method is called by the
this method is called by
invoked when the drag operation is shown
notify the progress bar that the progress has finished
refresh the current state of the window
notifies all registered listeners that the specified properties has been opened
notify listeners about progress change
drag source drop drag source
notify listeners that the audio has been updated
refresh the status bar
invoked when a window is made visible
invoked when a window is no longer in the active window
returns the icon for the specified file
returns the icon for the extension
returns true if the file is available in the file menu
refresh the current simulation
sets the button icon
returns the icon for the button
returns the rollover icon for the specified button
validate the file
draw the dock
sets the elements of this list
this method is called when a user selects a new frame
sets the progress bar
this method is called when a new frame is activated
removes a chat from the chatroom
receive a message from the chat message
this method is called when a user is connected to the chat
this method is called when a chat message is received
clears the chat frame
add a response to the chat
sets the elements of the given elements
sets the progress bar to the given value
displays an error message
sends a message to the server
updates the table model
removes the specified key from the set of elements
sets the enabled status of the progress bar
sets the
initialize the task
enables disables the check box
returns the color for the specified color
returns the column for the given row
sets the volume
sets the tooltip
load a song
returns the tooltip for the disabled button
selects the logger for the current level
load a song
this method will be called by the reactor to remove all the
ensures that the given row is visible
sets up the gui
loads a song from the given audio file
sets the selected key
append text to the current browser
sets the checked value of the given element
update the splash screen
clears the text
pauses the player
sets up the main panel
sets the items enabled and disabled
stops the sound
sets the default renderers for the table
sets the checked items
skip a given number of audio data
sets the default editors
invokes the given runnable
returns true if the user is enabled
sets the number of rows visible
handles the selection of the current button
appends the given text to the console
returns the display name for the given filename
sets the selected index
returns the next song
updates the theme with the current theme
sets the text provider
returns the previous song
returns the playlist to play
updates the height of the selected row
adds a file to the playlist
check if the player is finished
adds a playlist to the playlist
disable controls on the controls
adds the given playlist to the list of files
enables the controls
adds a file to the playlist
adds a new file to the playlist
adds a playlist to the play list
notify the delegate that the delegate has changed
removes a file from the playlist
invoked when the value of the target has changed
returns true if continuous is continuous
returns true if the button is visible
create an instance of
adds a new item to the list
add a playlist to the playlist
removes the specified sound object from the playlist
gets the shuffle set value for this j2
sets the dirty flag
plays the current song
load the current playlist
load the playlist file
returns the selected object
returns the selected element
returns the checked state of the button
listener for check for check
interface for handling of of of of the interfaces that are registered
returns the default parent location
save the playlist
hides the window
hide the window immediately
clear the playlist
returns true if the selected checkbox is selected
ensures that the widget is visible
adds an action listener to the button
create the
the glue
creates a transferable for the given
installs resources on the current resource
sets the text
creates the panel for the
removes a notification from the list of registered listeners
sets the timeout for the timeout
the splash screen
handle move move
sets the icon
sets the model model used to edit the model
sets the parent location
sets the parent size
shows the window
create an instance of
refresh the list of records
creates the sharing label label
creates the language button
shows the next selected notification
initialize the file
returns true if the selected item is visible
cleans up the
start the automatic hiding of the timer
the
stops the automatic hide timer
returns the file that this file is used to create a file
returns the transfer file transfer object
show update panel
this method will be called from the thread
updates the firewall label
fail on failed
sets the status of the image
attempt to check the fail message
update the language
this method is called when the user selects the preferences object
updates the firewall text
this method is called when the user selects a new
the
sets the file name of the save file
returns the number of uploads
set up drag and drop
setup the gui for the page
updates the host count
returns true if the tray icon is available
returns true if the library is loaded
update the splash screen
returns the number of downloads
replaces the given resource with the specified replacement value
returns the theme that is used to load the current theme
checks if the is available
returns the current downloads current
returns true if the is available
returns the current active download
returns the bandwidth of the current download
adds a file to the downloader
sets the dictionary
creates a new dictionary
add a dictionary to the dictionary
add a string to the dictionary
compares this object with the specified object for order
returns the icon for the given type and its icon
sets the matching values for the query
this method reacts to a change in the selector
this method is called when the contents of the list has changed
returns true if the current state is sorted
add a new line to the table
returns true if the given line is a valid
searches for the given result set
adds a new code code to the list
handles action keys
updates the share and update the contents of the given
sets up the model
handles the selection of the action
clears the
selects the matching value of the given property
sets the default renderers for the table
creates the default search panel
returns the title of the title
creates the panel for the search button
initialize the search
creates a new
removes the specified row from the table
adds the specified result to the end of the list
returns true if the xml element is an
update the status of the file
returns a string representation of this object
returns the new line of data in the table
adds an code action listener code to the button
updates the current
add a line of number to the table
returns the row at the specified row
returns the row at the given row
updates the license information
gets the value of the named media type property
returns the urn for the given index
compare the criteria with the given spam table
compares two table rows
normalize the extent locations
returns the next match
invoked when a window is made visible
returns the filename of the file
this method paints the component
returns the size of the result
creates the popup menu
creates the panel for the image panel
creates the panel for the text panel
handles the selection of the selected button
creates a transferable for the given
compares this object to another
creates the panel that is used to draw the center of the
open a torrent
creates a new search result for the given file type
returns the default value for the specified
returns the maximum length of the text in the text area
updates the theme
returns the rating of the spam spam
compares the specified object with this object name
compares this object with the specified object for order
returns the current icon for the image
refresh the overlay
sets up the tabbed pane and display it
resets the tabbed pane
initializes the properties
adds properties to the map
removes the properties from the given line
switches the current panel to the specified panel
adds a custom extension to the list of extensions
reverts the current settings to the current settings
refresh the side panel
sets the enabled disabled state of the given media
returns the container
this method is called when the user selects the
this method is called by the popup menu when the mouse is
sets up the gui
shows the dialog
creates a new instance of the data line
returns true if the cell is editable
this method is called when the user selects the given label
creates a transferable for the given
returns true if the file is visible
updates the language of the panel
sets the file filter to be used for this filter
adds the east panel
sets up the constants
sets the roots to be used for the root
returns true if the given file is a root directory
sets the list of excluded folders
sets the initial selection
sets the roots expanded expanded
sets the root of the tree
returns true if the given is
returns true if the given code node code is a shared directory
removes the given file from the tree
returns the file
set up drag and drop
creates the icon label
returns a tree path for the given directory
returns the tree
shows the incomplete folder message
enables or disables the annotate process
returns the icon for the specified file
returns the icon for the extension
returns true if the given directory is shared or not
returns true if the icon is in the specified file
clears the library
returns the current directory
refresh the
refresh the current directory
returns true if the given directory is shared in the
returns the text for the given file
sets the ui and feel
sets the selected mode
checks the resize handler
creates a new code string code with the given string
create an instance of
refresh the current page
returns the name of the file that is currently being uploaded
update the splash screen
refresh the current state of the
returns the current uploads
returns the number of active uploads
returns the current bandwidth
add a new upload to the file
initializes the
handles the selection of the specified row
sets the images image
updates the theme
sets the speed and speed of the torrent
sets the progress bar
handle the user choosing the selected action
returns the language of the
enables or disables the action
adds a key value pair to the trie
clears the filter
sets the model
ensures that the parent node is visible
this method is called when the core is initialized
sets the file filter to be used for this filter
returns the file filter
sets whether or not the tree should be sorted
gets the value of the sort listed files property
returns the last
handle link click action
sets the selected directory
adds a mouse listener to this component
handle the given file
removes a file from the playlist
called when the file manager is loaded
handle the file event
stores the current schema fields
returns the title for the query
returns the list of in the given list
sets the currently selected tab
updates the tab icon
shows the downloads of the current thread
returns true if the given address is a core address
sets the
this method is called when the user selects a new user
this method is called when a new message is received
this method is called when the user selects a chat
called when a chat message is sent to the user
dispose the window
saves the current settings to the file
handle the address of the address
connect to the server
returns true if the tab has changed
the of the given directory
returns the schema
navigate back to the previous card
disconnect from the server
adds more options to the input
returns a text field for the given text field
returns a combo box
sets the tab visibility
called by the applet
launches the specified audio item
plays the audio clip
sets the renderers default renderers
show update notification
returns a new
adds a new row to the table
compares the specified code file code object to the specified
returns the row at the specified row or code null code if
initializes the object
returns a border for the specified color
returns the ordinal for the tab component
returns the index of the tab in the tab
adds a new object to the list
add a new table cell to the table
returns the tab for the specified index
invoked when the user has changed its state
adds a new
removes the specified object from the list
browse the browser to the specified host
refreshes the table model
show popup menu
updates the table row
moves the row at the specified location
creates a new instance of data
returns a new instance of the given data line
hides the
processes the mouse event
returns the preferred scrollable viewport size
adds a new code code to the end of the list
adds a new row to the table
returns the value of the specified object
returns the value of the specified object
update the model
removes the specified row from the table
start a chat
update the splash screen
removes the specified element from the list
returns the value for the specified column
removes the specified object from the list of objects
returns the column for the given index
sets the chat room
compares the two given objects
this method will be called if the local bugs server is working
sets the cursor
removes the selected cell from the table
adds a user comments to the user
writes the bugs to disk
returns true if the given client is still valid
checks if the version is still
sends the given request to the servlet
returns the color for the specified row
sets the audio playback
returns the odd row color
updates the height of the row
returns true if the ip address is valid
refresh the
returns the current banner
returns the column for the given index
checks if nick is invited to nick
create an instance of
setup the constants
returns the current file name
update the splash screen
adds a new announcement to the list of announcement
sets the os
sets the expiration time of the entry
purge the image cache
handles the minimize messages
checks if the given message is eligible for the version of the
load plugins plugins
this method is called when the is shown
check if the jar file is loaded
sets the update message
checks if the specified message is visible in the list
sets the type of the type
removes all the available plugins
connect to the server
start download download task
start a new element
receive notification of the end of a document
receive notification of ignorable whitespace
checks if the given string is empty
receive an object for locating the origin of sax document events
this method is called when the user presses the enter button
receive notification of a skipped entity
reads the plugins plugins
start the prefix mapping
receive notification of the beginning of a document
writes the plugins plugins
reads the available plugins
writes the available plugins
verifies that the plugin is deployed in the directory
this method is called when a plugin is opened
stops the plugin
starts the simulation
this method is called by the server to run the ping request
returns the unicast endpoint of this query
shuts down the server
handles a connection to the server
removes all from the internal list of
get a security token for a firewall
convert the byte array into a byte array
puts the given into the http request
returns true if the request is
puts proxies into the cache
check if the request is
sets the address of the packet
sets the feature in the specified data object
checks if the port is not already in the given port
the
remove a from the list of
query the pong for the ping pong
returns true if the given set is empty
adds a new code code to this
removes a given code code from the location
returns a string representation of the current value
returns true if the is enabled
send a message to the
dispatches a multicast message to the specified address
this method is called when the is received
accepts a connection to the server
returns the found handler
returns a shallow copy of this object
returns a clone of this object
waits for a given channel
returns the urn of the urn
checks whether the urn is
this method is called to handle the router
adds a new document to the
removes a license from the list of
returns the of the
returns the for the given
returns the description of the license
returns the body of the url
removes the old entry from the list of all the
persist the cache
verifies the given license and verify the given number of
returns the body of the url
returns the url for the specified url
handle a new request
processes a response received from the given type
adds a request to the list of requests
resets the last connect time to the previous connection
removes a reply handler from the given request type
removes the next message from the queue
creates a new instance of license and returns it
clones the object
adds a new message to the list of sent messages
returns the body of the request
write the remaining bytes to the buffer
adds a new message to the list
removes the next message from the queue
calculates the priority of the given message
sends the request to the server
returns the number of bytes sent to the server
process the vendor message
returns the number of bytes that the current bandwidth sent
returns the number of bytes received from the throttle
returns the number of bytes received in the
returns the current compression of the uploading file
get the read saved from the stream
sets the headers
returns the tls for the current throttle
get the bandwidth used to read the
returns the number of ultrapeer ultrapeer connections
post the to the
sets the socket to use for the server
returns true if the query is enabled
returns the connect type
returns the of the current
get the action from service
clear the mappings from the database
returns true if the given port is a
compares the specified object with this object
returns the hash code for this object
stops the server
returns a copy of this code urn code object
returns the hash code of this object
adds a new code urn code to this code code
adds all the elements in the specified collection to this
returns true if the request is
handles a secure message
reply the reply reply reply message to the reply result
returns true if the connection is a leaf
reports the number of milliseconds to the data in the given time
starts the fetcher
stops the fetcher
returns true if the fetcher is running
process ping reply
returns true if the connection is cancelled
process a message received by the client
returns the session associated with this session
handle the connection lifecycle event
start the messaging server
cleans up the
returns the value of the code byte code as a byte
finds the alt for the given exclusion domain
returns whether the given content urn is a top level alt
stops the forwarder
sets the host address
sends a request to the server
sends a change capabilities to the current device
creates a ping reply from the server
creates a new alt loc from the specified data
this method is used to create the bootstrap
returns true if the lock is still waiting for a node
bootstrap the bootstrap
send the finish event to the server
returns the response that the response is received
returns the response that the response is written to
stops the layouter of the node fetcher
the handshake
initializes the outgoing connection
prune the
process the connect line
process the headers
the
initializes the incoming connection
reads the header from the given header
returns the size of the header
returns true if the user is allowed to drop the target
creates the outgoing data
creates a new outgoing data object
returns true if the given guid is still in the database
add a new to the list of
returns the address of the address
send a udp request to the server
returns the rating of this
sets the rating of the given rating
returns the type of the token
returns a string representation of the object
returns the urn for the given file
returns the next token in the given file
returns the vendor of the given file
returns the address of the given file
returns the field name for the given field
returns the rating of this
sets the rating of this object
returns the type of the token
returns a string representation of the object
mark the given token as a
saves the current token to the current file
returns the rating of this
returns the importance of the importance
this method is called when the user wants to load a rating
returns the type of the token
returns a string representation of this object
increment the age of the current age
returns the importance of the current importance
returns the rating of the current user
sets the rating of this object
returns the type of the token
returns a string representation of this object
sets the rating of the rating
returns the type of the token
returns a string representation of the object
called when a query request is started
handles the user choosing a user marked object from the list of
clears the filter data
initializes the model
the update to download the download
handle update update
handle the new data
checks if the version is below the version of the version
parse the xml document
description of the method
notify the about info about the given info
returns the next record
writes the contents of the record to the specified output stream
write a write channel to the buffer
returns the output length of the output stream
writes the contents of the tree to the given output stream
returns the port of the listen port
checks if two lists are matching
accept a connection
creates a new messenger with the specified port
this method is called when the handshake handshake handshake handshake
interface for
creates a new instance of the ping
a specific interface implementation does nothing
stops the connection
returns the
returns the capability of the capability
returns the capability of the passive capability
sets the fields from the given code
returns the urn that is used to encode the urn
returns true if the is
calculate the of the ping
returns the version of the given pong
returns the urn of the payload
writes the packet to the stream
writes the content of the code byte buffer code to the specified
compares this object with the specified object for order
interface for handling of of the parser parser interface
sets the
sets the value of the header
writes the to the given name
returns the locale of the
returns true if the supports cached
returns the query key
writes the content of the given input stream to the output stream
creates a new instance of the multicast request
sets the payload of the payload
sets the reply host to the specified value
this method is called when a query is received
returns true if the browser is a browse host
sends a query to the server
returns true if the is
creates a new
adds a new locale to the
add a new address to the packet
the
returns the vendor of the
returns true if the push is a push operation
returns true if the current thread is busy
returns the header of the specified key
puts a value into the list of values
returns true if the server upload is successful successfully
returns true if the is still
returns the rich query string
puts a key value pair into the map
updates the signature with
puts a value in the current value in the current request
returns true if the is
performs a query request to the server
returns true if the user can see if it is available
returns the string value of the specified key
returns true if the of the band replies should be
returns true if the of band replies are
returns true if the user is a security
returns true if the host is configured to display the host
returns true if this is empty
creates a request object from the query
returns true if the query is reply to multicast
creates a request object from the request
sets whether the multicast is allowed to use
creates a request object from the request
returns true if the current thread is currently running
returns true if the given
returns the host data
gets the security token required
returns true if the data is secure
checks if the range of the given range is
returns the range of sub items that match the given range
returns true if the range is
handles a update request
compare this guid to another object
handles the response of the response
returns the handler for the given id
returns a string representation of the object
handle update response
test the cache of host
tests the number of failures
tests the
returns the handler for the given guid
writes the given code writer code to the output
tests if the given host is a local host
connect to the server
returns true if the host is a local localhost
adds all the given classes to this map
returns true if the given time is still available to become a
remove a handler from the list
removes a query from the query
the
returns true if the average of the are
returns true if the current time is
returns true if the is
adds a query request to the query
remove a query
returns true if the current value is allowed to be used
accepts a connection to the pool
provides serialization support
returns the type of the urn
finds the in the database
returns true if this is a
returns true if the is capable of receiving
add a new to the list of
returns the file manager
returns the root share
returns true if the file type is a
returns true if the file type is a
returns true if the file type is removed
returns true if the file type is renaming
returns true if the file type is a change event
returns true if the file type is failed
returns true if the type of the file is added to the
returns true if the folder is currently selected
returns true if the file manager is loaded
returns true if the file manager is loaded
the list of hosts in the list
returns true if the file is a file event
returns true if the folder is a folder event
returns true if the file manager is currently loaded
saves the current state of the application
clears the current settings
reloads the configuration
cleans up the file with the given set of files
add a mapping to the
adds the given
run the thread
populate the document with the data from the document
updates the audio data
adds a new collection of endpoints to the list of endpoints
parse the xml document
adds all the nodes to the query
checks if the host name is connected
this method is used to determine if the port is
handle the added added event
checks if the given host is a connectable host
get the endpoint of the endpoint
returns the endpoint of the given endpoint
sets the content of the content of the content of the content
extract the genre from the genre
parses the file
reads the header from the specified header
reads the audio file from the specified tag
parse the file
returns the video schema
populate the with the content of the
expire the
start the next processing thread
this method will be called to start the previous process


parses the given input
the of the
the atom in the atom
reads the video from the given input stream
get the next atom from the input stream
sets the video data
commit the current state of the meta data
populate the document with the given document
returns the meta file named by name
parse the specified file
parse the given file
returns the audio editor for the specified file name
parse a file from the file
write a request to the request
writes a block of request
returns the next lease in the current session
the hosts
check if the current time is ready to be
close the file
the transport pool an observer for the transport access
load the revision of the file
load the revision information
returns true if the server is connected
the bandwidth
returns true if the is still still still running
creates a file
creates a new file
add a new host to the stack
returns the exact exact matching the given
returns the for the given address
returns the exact value of the given host as a
start the
accept a connection
the connection to the other handshake
this method will write the given file to the remote context
returns a leaf connection to the specified peer
the handshake for a given connection
this method will set the remote file url to the remote server
removes the from the
consumes the body of the given request
returns the number of connections ultrapeer ultrapeer
returns the number of connections connected to the pool
this method is used to parse the alternate locations of the file
adds a collection of to the internal list of hosts
ping the remote host
adds a new
returns true if the cache is allowed to write the cache
adds a job to the queue
adds a new job to the queue
clears the caches caches
checks if the file is valid
returns the size of the cache
returns the size of the cache
this method is called before the remote file is addition
checks if the given contains a
update the query status
returns the connection to the connection
add a connection to the list of connections
this method is called when a connection is established
sets the
parse the header of the server
called when a is finished
set the ip address of the server
load a file
creates a file desc
stops the server
cleans up the connection pool
returns true if the should be leaf
initialize the file
the to the specified value
updates the host cache with the given value
cleans up the connection with the given connection
returns true if the should be used to display the
check if the given host is allowed to be allowed
returns true if the connection is idle
removes all files from the
sets the preferred connection to the preferred connection
starts the connection
calculate the bias probability of the specified file
checks if the given file is a file
compares the specified object with this file for equality
checks whether the given document is a
returns the hash code for this object
connect to the server
stops the connection
restore the memento
this method is called when a new search is moved
checks if the is
starts the execution of the task
returns true if the connection has stable
creates the alternate locations of the current page
returns true if the application is stopped
loop through all the loop
consumes the body of the body body
the
kills all threads that are running
dispatches the event to all registered listeners
returns the string representation of this object
returns the namespace specific namespace
returns true if the query can send a
returns the urn type
returns true if the urn is
the download status of the download
returns true if the urn is
returns true if the urn is
compares the specified object with this object
handles the connect request
shuts down the connection
schedules the task to be notified of time
handles the handshake
this method is used to stop the
connects to the connection
handles the ok and logon
determines if the given address is a valid transport address
sends a message to the server
assign the current state to the
this method will be called from the
returns the ping request
verify the file is a file
remove the from the list of all the
process a message received by the given process
this method is called when the is unregistered
validates the download
returns the proxies for the
adds a header to the http header
adds messages to the response list
returns true if the parser is validating
adds a listener for connection events
returns the file desc for the given request
returns the upload begin
returns the upload end
sets the uploader to use for the
returns the
polls the current time
not supported
checks if the user is valid
dispatches the event to all registered listeners
returns true if the upload is allowed to upload
returns true if the status is accepted
returns the session object
this method is used to navigate to the specified slot
request a slot to the specified slot
this method is called by the server to set the state of
sets the file desc for this territory
initializes the hash tree
adds a new amount of bytes to the current throttle
returns true if this is a inactive
kills the
removes a connection lifecycle listener
returns true if the reply is reply
remove the specified user from the queue
resumes the queue
sets the upload type
returns the number of messages in the given
sets the browse host enabled
sets the chat enabled
sets the port of the server
sets the total amount of uploaded uploads before the last uploaded file
returns the session
sets the size of the file
gets the ignore total amount
sets whether the number of documents uploaded files are flushed
returns the location of the file that was saved
returns true if the connection is
returns the address of the session
returns the local address of the socket
returns the local address to which this socket is connected
sends a request to the server
returns the port number of the socket
returns the number of connections in the connection pool
handle the number of
installs this synchronizer and installs it
runs the thread
writes the given code code to the output stream
adds a file hash to the file hash map
returns the creation time of the creation time
returns the local address of the host
returns true if this object is
sends a message to the server
initializes the server
this method will be called from the
initializes the host
send a message to the channel
creates a new random
returns the time of the creation time
starts the processing of the cache
this method is called when the server is stopped
returns the size of the cache
sets the authority part of this code code
returns true if the urn is verified
request that the request
returns the response data for the given urn
schedule the request to be sent to the server
removes the given from the list of
cleans up the file with the given name
adds a new responder to the end of the list
starts the processing thread
save the cache of file
returns the default settings for this content provider
opens the file
add a new downloader to the downloader
start the worker thread
finishes the worker thread
returns the current state of the process
starts the download process
starts the process
this method is called when the user begins a loop
returns the source of the
adds a new cancel button to the list of
removes all the files from the jad file
handles the connection to the server
returns the current time in milliseconds since the beginning of the simulation
calculate the uptime in seconds
this method is called when the user shuts down the application
this method will be called by the server to create a download
returns true if the current thread is cancelled
checks if the given string is
returns the schema
check if the is still running
returns the callback for the given download
shuts down the
initializes the given file
checks whether the given file is in the
returns the action for this action
returns true if the license is available
called when the server wants to update the connection
returns the value of the field
returns the schema
this method is called when the connection is established
construct a string representation of the attribute
shuts down the connection
compares the specified object with this document for equality
returns the hash code for this object
cleanup the cleanup thread
scans the fields of the current fields
returns the canonical key for the given map key
returns the image path
returns the directory where the user is currently in
the
load the file manager
load the revision number from the model
add the query to the
send a notification to the server
returns the schema associated with the given uri
remove keywords from the trie
add reply to the
refresh the hosts
checks whether the given document is a
adds a new code disallowed code to the list of all the
adds a new to the list of attributes
add disallowed slots to the list
checks whether the given document is allowed to be included in the
returns true if the specified message is allowed to be inlined
returns true if the specified host is allowed to be used
returns the doc for the given urn
returns the minimum distance between the current
counts the number of bits in the given x coordinate
remove the given file desc from the list
check if the given phrase is a valid word
sets the guid
write the channel to the given channel
reads the specified header from the input stream
checks if the header is
checks if the header is
returns true if the host is hosts
returns the minimum distance between the current host and the given
reads the header
sets the host and port of the ip address
performs a request to the specified request
reads the header from the given header
gets the headers in the header
checks if the given string is a valid
uploads the content of the page
writes the header to the output stream
returns true if the is
check if the current state of the is active
returns the display name of the current user
returns the topic of the current user
starts the server
returns the port number of the port
returns the connection to the server
stops the torrent
sets the state of the
returns the current time in milliseconds
returns true if the job is done
reads the current element from the current state
returns the type of this code code
returns the result of the operation
returns true if the buffer has been read
returns the type of the
sets the file that is used to update the files
update the list of files that are exported
this method is called when the broadcaster is closed
shuts down the server
sets the channel
counts the number of bytes in the given output
this method is used to send a message to the queue
verifies that the given number of bytes are properly
returns the message digest
initializes the given data
called when the cpm is executed
sets the number of failures to the next response
this method is used to handle the request event
wait until the tracker is detected
announce the tracker
handles the given piece of the
handle the response tracker
returns the shared meta data file for the given metadata file
starts the connecting state
reads the next request from the stream
sets the
shuts down the server
sets the channel
this method is called when a link is closed
this method initializes this
verifies the given file
stops the periodic thread
starts the execution of the timer
adds a new
returns true if the class type is assignable from the type
closes the socket
returns true if the type is assignable from type code
returns true if the type is assignable from the type
add a connection to the database
gets the value of the property
sets the number of bytes written to the specified buffer
this method is called when the user selects a new
the
this method is called when the user selects all
sets the
clears the round
sends a message to the server
compares the specified object with this one
sends a message to the server
this method is called when the is ready to be changed
tests the media type equality method
sets the settings
returns the number of
returns the number of
this method is called when the user selects the
handles the cancel button
starts receiving a receiving of the receiving of a specific
connects to the database
creates a leaf connection
creates a new connection to the database
creates a new connection
this method is called when the user has downloaded bytes
returns true if the is
test the network manager changes
test the
tests that the urn parser is invalid
sets up the fixture for example open a network connection
tests that a host catcher is being used in the host catcher
test the service priorities
tests the functionality of alternate location
test the compare to method
tests that the alternate location location should be used to make sure
tests that the add wrong location method is used to ensure that
test the get method
tests the of the
tests the of a
creates the injector and creates a injector
returns the
returns the
sets the settings
returns the number of peers in the
returns true if this request is able to ping
receives a message from the stream
reads a message from the buffer
tests that the service has all hosts
tests the is stable
tests the is high degree of a connection between the connection
tests the
tests the of the
creates a new connection
sets up the fixture for example open a network connection
tears down the fixture for example close a network connection
fills the with the current
frees the slots
sets up the fixture for example open a network connection
tests the of incoming connections
tests that the urn behaves correctly
tests that the version number of the response is not valid
tests the functionality of the factory
tests the correct functionality of the
tests that signatures are invalid
tests that the correct type of the
tests that the latest response is being
tests the creation of a response
creates a new named test file
tests that the host is connected
test the request that the query is sent
test that the query manager is sent to the server
test all the query to be executed
test that the query manager causes a request to be serviced
test that we can fork the remote server
tests if the host catcher is connected
tests the good
tests that the host catcher is rejected
tests the urn method that reads the urn
test the constructor of the
tests the constructor of the constructor
test the query
test
test
tests that a pong is found in the ping pong
tests string value key constructor
tests that the large binary server ping pong is not
tests that the query is
runs the checks if the query is
tests the
tests queue status empty
writes the query to the given url
this method is used to ping the given ping task
creates the connections and port
test msg
this method is called by the code code when a guid
this method tests the message forwarder interface method
test msg
test that the harness tests
test empty none of the
creates a new named test file
test key conversion
test that the value of the
tests that the value of the
tests that the value of a type is null
test
fills the shared directory with the files in the project directory
this method is called by the core
tests persistence of cache
checks if the cache directory exists
add a new metadata to the registry
returns the saved directory
returns the shared directory
returns the directory where the file is used to store
setup the test case
tests the pure
tears down the fixture for example a test that is executed before
creates a new connection
creates a new connection to the server
test creating a new route table
returns the number of connections in the database
returns the number of connections in the database
test the urn of the urn
test the urn of the urn
test the get method
test that verifies that the xsi urn is invalid
test
tests that a new hosts are allowed
tests the constructor of invalid ports
tests the constructor of valid ports
a unit test for junit
tests the urn of the urn and
test the get method
test
tests the ultrapeer pong reply
test the
tests the of the
tests that the update method is changed
test the
test that the seconds began secs
tests the number of seconds the time
test that the clocks lose
tests that the tag is generated
test the
tests the return optimization
tests that the service is successfully created
resume the download
sets the
test
tests the get file file size method
tests the get file method of the file manager
tests that the purge hash of the file has been successfully
test the urn of the remote file
tests that the urn store is invalid
tests that the urn file discovery provider is updated
test that a bogus value is rejected
sets the port
create a new resume and add it to the downloader
test simple
sets the value of the database
tests the
test the content of content content
sets the flag
tests that the connection factory throws a
this method is used to parse the alternate locations of the alternate
tests that the response of the push header is a proxy
tests the of the server side
tests the of the udp server socket
returns the sha1 hash of the sha1
test that the stored code is stored
test that the handle response handle is called
tests that the
test that the timeout is not supported
test that the response is not able to handle a request
test the
test the adult filter policies
tests the filter filter against the filter
test the connection to the server
tests the fetching of the schemas
ensure that the ping request is executed
ping the connection to the specified port
ensure that the connection pool is reused
tests the of the http server
tests the functionality of the extract header method
returns true if the jar is native
returns true if the eager object is eager
add an argument to the list
returns the maximum heap size
returns the initial heap size
returns a long long to long long
sets the context context
returns true if the context is a app context
create a new application instance
checks if the given class name matches the given class name
determines if the cache entry has been updated
parses a node
updates the specified url and the given url
returns true if the current connection is available
checks the location of the resource
invokes the method on the specified class
invokes the given object
returns a method with the given method and returns the method
load the file
process the resource
stores the current configuration file
adds a url to the classpath
compares the to the given string
runs the
this method is called when the document is shown
show document
p notification that a status message is a string
returns true if the given string matches the given string
returns the permissions for the given code source code
load the class extension
adds a new event to the list of events
resets the data of the data object
p log an error with error message
p this method is invoked when the logging event
closes the connection to the server
returns true if the appender is attached to the given appender
sets the size of the buffer
returns the size of the buffer
removes the unused from the tree
sets the date format manager
sets the transaction name
returns the server name
returns the authentication method
sets the authentication method
returns the authentication scheme
sets the authentication scheme
adds a transaction to the database
returns the address of the socket address
removes the given database
returns the item id
returns the number of databases
sets the name of the transaction
returns the config
returns the name of the item
sets the code code for the code code
returns true if the playlist is currently playing
adds a response to the response
removes the next element from the queue
writes the current response to the output stream
commit the transaction
rolls back the transaction
returns the item id
sets the transaction name
returns the persistent id
returns the id of the container
returns the master playlist
returns the number of songs in the playlist
adds a playlist to the playlist
adds a new song to the playlist
sets the name of the transaction
removes a playlist from the playlist
removes a song from the playlist
sets the transaction
adds a chunk to the list
returns the number of playlists
returns the album
returns true if the specified playlist is a playlist
select a playlist
returns the content code string code of the code content code
returns the song for the specified request
sets the artist
select a playlist
returns the artist of the song
returns true if the song is played
returns the songs in the playlist
returns the number of songs in the playlist
sets the number of minutes for the
returns true if the playlist contains a song
returns the per minute
removes a song from the playlist
returns the song for the playlist
returns a playlist object from the playlist
sets the bitrate of the given
returns the bitrate of the bitrate
sets the comment
returns the comment
sets the compilation unit
cancel the given channel
returns the current selection for the current selection
accept a single channel
returns true if the compilation unit is defined
this method is called when the user selects all the
sets the composer of the
this method is called when the user selects the update
processes the timeout of the connection
returns the composer
starts the thread
sets the data type of the transaction
returns the kind of data
sets the data url
returns the session id of the session
writes the current state of the audio file
closes the session
returns the server
sets the type of connection to the type
returns the url of the data url
sets the protocol version
returns true if the audio stream is a audio stream
returns true if the connection is
returns true if the type is
sets the date added
returns the protocol version
returns the session id for this session
clears the library queue
returns the date added by the date time
add a new library
returns the first entry in the queue
returns the last in the queue
sets the date in the transaction
returns the session id
returns the date time in milliseconds
validates the session id
sets the description of the revenue source
adds the headers to the headers
returns the description of the
adds headers to the headers
adds the header to the header
sets the current transaction
returns the header associated with the specified key
returns the server
returns true if the property is disabled
returns the connection
returns true if the request is a unknown type
returns true if the server is a server info
sets the number of
returns true if the login request is a login request
returns the number of
returns true if the request is meant to be updated
sets the disc number
returns the disc number
returns true if the database is a database database
returns true if the database is a database address
sets the for the given revenue
returns true if the playlist is a playlist
returns true if the request is a song request
returns the value of the preset property
sets the format of the given code
returns the revision number
returns the format of the current format
returns the database id
sets the genre of the
returns the genre of the song
returns true if the database id is set to be a database
returns true if the container id is set
returns true if the item id is set
push a pair of type pair
removes the top element of the stack
returns true if the given object is contained in the list
returns the request type
returns true if the request is a server side request
sets the sample rate for this transaction
returns true if the type of the update is updated
returns the sample rate of the sample
sets the size of the database
returns the size of the list
sets the start time of the task
returns the time in milliseconds
sets the stop time of the transaction
convert a json object to json string
convert a string to a json string
returns the stop time
convert the given json string to json json json json
encode the given json string into the json format
sets the time
serializes the json json json json object to json json
returns the time in milliseconds
converts a json string to json json json json json json
serializes the json json json representation of this object
sets the number of tracks in the playlist
returns the number of tracks in the track
sets the version of the version
add a static field to the list of modifiers
sets the track number for the track
expose an empty field
returns the track number
serialize the serializer
disables the serialization of the inner class
sets the code long code
sets the user rating for this user
returns the rating of the user
sets the exclusion exclusion strategy
sets the pretty printing of the text
disables the
sets the year
sets the date format
sets the date format style
returns the year of the year
sets the date format style
registers a adapter type adapter
sets the groups
returns the grouping of the grouping
the transaction for the given id
returns the imdb id of the
the
returns the
adds a property to the set of json
the of the
adds a property to the list
adds a property to the list
adds a property to the list
adds a property to the list
creates a json element
returns the genre id
returns a member element from the member
returns the value of the specified member
returns the value of the specified member
returns the value object with the given name
a playlist id
returns the id of the playlist
the transaction id
returns the id of the
returns true if the json array is a json array
the transaction
returns true if the json object is a json object
returns true if the json element is a
returns true if the json object is null
returns the object as json object
returns the json array
returns the primitive value as a json string
returns the song id
returns the json json object associated with this object
always throws an exception
returns the value of the code number code as a code number
returns the string representation of this code code
returns the value of the code double code as double
sets the type of the
returns the value of the code float code as a float
returns the value of the code long code as a long
returns the value of the code int code as an int
returns the value as a byte
returns the codec type
returns the value of the code char code as a char
returns the value of the as a big decimal
returns the hash code value for this object
returns the value as a big integer
compares the specified object with this type for equality
always throws an exception
returns a string representation of this object
sets the for the
returns the subtype of the
sets the of the game
returns the volume
returns true if the value is a boolean
returns true if this is a number
returns true if the string is a string
returns the declared type of the declared type
adds a new element to the list
adds all the elements in a given array to the array
returns the element at the specified index
parse json json json string
returns true if there is a next element in the iteration
sets the video
returns true if this video has video video video
creates a new object of type pair type pair
sets the attachment
test the recycling for all the tests
test that the large large large large large large large large large
tests that the same semantics of null argument
tests that the same method returns the value of the
tests utils string utils
test that the char is
tests that the map serialization deserialization
test that serialization serialization with null values
test that verifies that the arrays are null
test that the object fields are null
test that the code code field is set
test class with object field
tests that the string value in the field is correct
tests that the field value is properly empty
sets the domain
returns the handler for the specified name
tests if the given cookie matches the specified cookie
returns true if the given date is expired
sets the suffixes for the suffixes
sets the exceptions thrown by this exception
tests if the given cookie matches the given cookie
returns the value of the specified parameter
removes a parameter from the list of supported
returns a copy of the request
tests if the specified uri is contained in the list
adds a uri to the list of uris
removes a uri from the list
returns the proxy selector
sets the proxy selector
returns the parameters for the request
returns the host address of the host
adds a new connection to the pool
detaches the current instance from the pool
removes all the connections from the database
aborts the current thread
sets the thread thread
close the idle connections
shuts down the pool
closes the connection to the given connection
release the connection to the underlying database
returns true if the number of entries are not null
returns the pool entry
returns the capacity of the current sequence
returns the entry that is currently the pool of the pool
this method is used to handle the worker thread
shuts down the server
frees the pool
this method is called when an entry is created
this method is called by the fsm thread to handle the timeout
deletes a entry from the pool
removes the entry from the map
schedules the given thread to be waiting for the given thread
checks if the thread has a thread
creates a new connection pool with the given parameters
returns the next thread waiting thread
removes a thread from the thread pool
returns a new instance of the given route
returns the number of connections in the pool
returns the number of connections in the pool
returns the state of the
sets the state
deletes the entry from the pool
deletes the least recently used entry
close the connection
shuts down the connection
aborts the connection
returns the value of the specified parameter
returns true if the proxy is a proxy
returns the next step in the route step
returns the first step in the route
returns true if the stream is allowed to read
clears the authentication context
returns the domain of the domain
sets the auth scheme
close the stream
gets the
returns the match for the given scope
closes the underlying stream
check if the stream is still alive
aborts the connection
creates a new basic processor
returns a new instance of the default params
returns the server host
returns the default route
returns the number of connections accepted by this connection
returns the content length
writes the current state of this code code to the given
tests the parsing cookie
registers a new handler
unregister a handler for the given pattern
starts the server
stops the server
returns the port of the server
tests the domain case
tests the cookie
returns the host name of the server socket
tests the cookie attribute no expire time
tests cookie with comma comma separated value
tests parsing of cookies
returns the address of the socket server socket
tests parsing of cookies
tests parsing of cookies
tests the second domain level
test cookie name cookie with blanks with blanks
tests cookie name
tests cookie with comma comma separated cookies
tests the parse version of the cookie
open the connection to the connection
consumes the response
create scheme registry for this registry
tests parsing cookie
test that verifies that the connection is established
tests parsing cookie
creates a default params
tests that cookies are included in the request
tests that cookies are not handled by the cookie
tests that the cookie name is not included in the cookie
tests the of the request
tests that a cookie is included in the cookie headers
tests cookie name starting with the cookie
tests that cookies are included in the request
tests the authentication scheme
tests that the cookie validation is valid
tests the second domain level
tests the
tests that a local domain match a domain
test cookie secure cookie
tests the cookie set cookie method
tests generic cookie formatting
writes the current state of this object to the given output stream
returns the total length of the body part
tests the cookie value
sets up the fixture for example open a network connection
sets up the test
tear down the test
tear down the test
check that the date is correct
checks if the time is shown in the calendar
sets up the test
tests the format of cookies
tear down the test
check the date
sets up the fixture for example open a network connection
tear down the test
returns true if the is
sets the
this method is called when the is finished
maps a method name to a name
maps a field name to a string
returns the type of this type
finds the owner of a given owner
this method will goto the goto label
returns the label range of the specified label
returns the next new name
quits the application
returns true if the text panel has been modified
this method is called when the document is added
sets the text panel
opens the document
saves the specified file as a file
this method is called to save the document
sets the file to be used for this file
sets the format of the text
print the current page
returns the format of the current format
closes the document
save the current file
returns the text of the current text
returns the title of the
initializes the renderer
returns the metric for the given style
applies the given style to the appropriate map
returns the font for the given attribute
returns the first character in the list
returns the current character
returns the next character in the iteration
returns the previous character in the current character
sets the character index to the given index
returns the index of the begin of the character
returns the end index of the character
returns the index of the character in the list
returns the start of the start of the start of the start
returns the start of a run
returns the maximum number of in the run
returns the maximum number of concurrent
returns the attributes of this style
returns the value of the attribute specified by the attribute
returns the value of the attribute specified by the attribute
compares this object with another
returns true if the given text is equal to this text
returns the hash code of this code code
returns whether the given text area is less than the offsets
sets the state of the given text
returns a string representation of this object
test the
this method is called to save the document as a file
ask the user to save the current file
this method changes the state of the given option
this method is used to set the action
this method listens to the text panel
returns the background color
sets the background color of the
returns the text panel
returns the ruler ruler
returns the vertical margin
returns the first line of the current line
test mod type
returns the offset of the line containing the offset
returns the hash code for this object
returns the type of the
handles the resize
creates a new character iterator
insert a range of text into the table
returns the line offset of the given offset
inserts a new text into the table
returns the style for the given position in the table
returns the start character style for the beginning of the specified position
returns the start of the given position
returns the length of the specified character
returns the number of characters in the given position
returns the style for the given position in the current position
returns the time stamp of the file
sets the iterator to the given position
returns true if the tab is already defined in the tab
adds a tab to the tab
removes a tab at the specified position
returns the minimum size of the range
move the tab at the specified position
compress the current buffer
removes styles from the end of the current style
sets the current command to the next command
modifies the range styles for the given style
modifies the range styles for the given style
resets the range of damaged values
returns the number of damaged elements in the queue
returns the number of damaged folds
returns a clone of this object
returns the scrollable flag
sets the scrollable flag
returns true if the scroll bars are visible
sets the scroll bars visible
returns the value of the selectable property
sets the selectable value
returns the editable property
sets whether the given text is editable or not
returns the
sets the
returns the default values for the default values
adds default values to the default values
compares this object against the specified object
returns a hash code for this object
prepares the dialog for the text edit
adds a listener to the panel
removes a listener from the list of listeners
sets the text to be displayed in the text box
append a new text to the end of the list
adds a listener to the panel
insert a new text into the given text
replaces the current text with the given range
removes a listener from the list of listeners
returns the length of the text in the text
returns the text of the current text
returns the start position of the selection
sets the text of the text area
returns the selection end
sets the selection start
sets the selection end
append a new text to the end of the text
sets the position of the caret
selects the specified range of start selection
selects all the items in the current select
insert a new text into the given position
returns the width of the format
returns true if the paragraph at the given offset is left right
returns true if the command is possible to undo
returns the length of the text in the text area
returns true if the command can be redone
draw the selection
returns true if the clipboard is not empty
returns the text of the current text
returns the default values for the default values
returns the character style for the specified key
returns the start position of the selection
returns the paragraph style for the given key
cuts the clipboard
returns the end position of the selection
copies the current state of the code code
pastes the clipboard into the clipboard
sets the selection start
clears the list
sets the selection end
undoes the last change
redoes the last undone action
sets the caret position
returns the size of the command log
sets the size of the command log
selects the specified range of text
clears the log
modifies the character style on selection
selects all text in the text box
modify the style to modify the style
returns the width of the text format
returns the key for the key
sets the key for the key
returns true if the paragraph at the given offset is left right
returns true if the current document has been modified
sets the modified flag
returns true if the operation can be undone
returns true if the operation can be redone
returns true if the clipboard contains text
returns the default values for the default values
returns true if the clipboard contents are still in the clipboard
cuts the text from the text component
copy the text
this method is used to draw the text of the canvas
scrolls the selection to the scroll pane
pastes the text from the clipboard
scroll the selection to the end of the text area
clears the text component
undo the event
validate the line number
redo the event
returns the size of the command log
sets the size of the control log
clears the current text area
modifies the style of the given style
calculates the bounds of the bounds of the area
modify the style for the paragraph style
returns the key for the
sets the caret position to the caret
sets the key for this node
returns true if the edit state is modified
sets the state of the event
returns the number of styles in the table
returns true if the table is empty
returns true if the map contains the specified key
returns true if the specified value is contained in the table
returns the value to which the specified key is mapped in this
returns true if the element contains the specified object
returns true if this collection contains all of the elements of the
guaranteed to throw an exception
returns an enumeration of the elements in this list
removes the mapping for this object from this map if it is
returns an iterator over the elements in this collection
not supported
puts all of the specified java
removes the specified element from this set if it is present
not supported throws an unsupported operation exception
unsupported in this implementation
removes all the elements of the specified collection
returns the set of keys contained in this map
retains only the elements in this collection that are contained in the
returns the set of key attribute set
adds an element to the set of elements
returns a collection view of the values contained in this map
sets the union of the attribute set with the given attributes
returns the intersection of the given set of elements
returns the set of entries that are not null
subtracts the given value from the set of attributes
adds a new attribute to the table
adds a new attribute map to the table
adds a new attribute map to the table
returns true if the type of event type is shown
removes the specified attribute from the table
sets the text panel to the given panel
removes all attributes from the set of attributes associated with this
returns the back color
removes the attributes from the hashtable
returns a new code attribute map code that contains all the
sets the color of the back back color
puts all of the keys into the current map
returns the value to be used for the given locale
returns the value to be used for the specified locale
returns the value to be used for the given locale
returns the value of the property enum property
returns the value to be used for the given locale
registers a factory object for the specified locale
registers a factory object with the registry
creates a new instance of the object
returns the kind of this entry
gets the value of the property
returns the name of the group in the group
gets the value of the property
returns the current descriptor of the current descriptor
returns the value map for the specified property
returns the locale of the current locale
check if the version is
returns the current locale
returns true if the current path is a valid
sets up the map map
returns true if the given id is found in the
returns the index of the specified code string code
create a new
convert the value to a map
returns the display name of the specified locale
convert the array offset into the array of array
checks if the given id is already in the list
returns the index to index for the specified index
returns the set of
sets the group name index
creates a new
returns the id of the
returns the
returns the current descriptor
returns the set of
create a new
returns true if the component is not already loaded
returns true if the given id is found in the
validates the locale
creates a new
removes the given map from the current page
returns the value for the given key
returns the additional additional attributes
returns the value for the given field
returns the key for the given key
moves the file pointer to the beginning of the file
reads the next line from the input stream
resets the
reset the stream
default implementation of default implementation
returns the set of
returns a set of all the that are expanded in the
returns a string representation of this object
returns the display name for the specified id
acquires the read lock
releases the lock
acquires the write lock if it is not already open
releases the write lock
returns the display name for the specified
returns the first character in the current position
returns the current character
returns the next character in the iteration
returns the previous character in the current character
sets the index of the current character
returns the index of the beginning of the current element
returns the index of the end of the element
returns the index of the element
returns a clone of this object
returns the display names of the current locale
adds a listener to receive events from this event
removes a listener from the list of listeners
returns the names of the names of the locales
notifies the thread that the thread has changed
schedules the given queue to be notified of the queue of
this method is used to run the thread
returns the names of the names of the locales
returns a new map of names of display names
returns the hash code of this code code
compares this object to the specified object
compares this currency to the specified object
gets the iso code
register an object
returns the default number of fraction digits
returns the rounding increment value
registers a factory object with the registry
returns iso iso iso iso iso code
this method is called to re initialize the object
sets the time
returns true if the factory is the default
sets the date
sets the default size of the internal state
creates a new key
sets the julian day
clears the caches
clears the cache service
returns the date of the
returns true if the event listener is notified when an event is
returns the julian day
notify listeners that a listener has been notified
returns the julian day
returns the stats for this object
returns the time in seconds
returns a string representation of this object
returns true if the is
start a year for a year
returns the of the solar
start a new month
returns the length of the month in the given month
returns the time in milliseconds between the time the time
returns the length of the year
sets the time in milliseconds to the specified time
returns the length of the month in the given month
returns the length of the year
returns true if the given code code is a soft
returns the of the
tests this object for equality with an arbitrary object
returns the sun time for the specified time
returns true if the given date is equivalent to this one
check if the limit limit is greater than limit
returns the first time at the beginning of the specified date
returns the first time of the first interval in the first interval
returns true if the given date is on the date
returns a hash code for this object
returns true if the start of a given date is within the
returns the display name of the user defined in the display
get the limit for the field
returns the year of the current date
get the age of the moon
returns the length of the given month
returns an enumeration of the keys in the map
compares the specified object with this object
returns the hash code of this object
returns a new instance of the appropriate format for the specified pattern
handle the limit field
compares this object to another
get the moon phase
adds a new field to the current time
returns the raw offset of the current image
tests this time zone for equality with an arbitrary object
returns a string representation of this object
compacts the list
creates a new moon near the specified number of days
returns a hash code for this object
returns the number of months between two
returns true if the specified time is before the specified time
returns the number of in the given day
compacts the list
checks if the given has a major version
compares this object against the specified object for strict
compute the of the day
returns true if this object is after the given object
sets the start rule of the specified month
returns the minimum value for the specified field
returns the julian day
returns true if the given year is leap
returns true if the other date is equivalent to this other
returns a hash code for this object
returns the minimum value of the field
returns a string representation of the latitude
returns the string representation of the angle
returns the string of the
returns the string representation of the angle
calculates the delta of the line delta
returns the display name of the class of the specified locale
creates a new frame
sets the format of the pattern
this method sets the time to the calendars
sets the text to be shown in the pattern
this method is called when the user has changed
returns a date format for the given time
sets the date field changed event
returns a string representation of the specified date format
returns the insets of the font
sets the style of the border
sets the border used to draw the border
sets the border for the specified gap
sets the color of the panel
sets the font for the text
returns the font
sets the text
sets the alignment of the border
sets the value of the field to the specified field
resets the counter to zero
returns the next available value in the iteration
tests that the composed characters are not having a composed of the
returns the canonical class of the given class
returns the composition of the composition of the
this method is called to find the decomposition of the given
returns a short string representation of the object
test the conformance of the conformance
returns the day as a string

test limits
convert a year month day to a string
returns a string representation of the day
applies the given date to the current date
applies the given time to the time zone
compares the fields of the given fields
compares this object with another one
test
tests the limits
test that the
convert year to string
convert a date to a string
test
test that calendar objects are properly time
test month
tests the default values for the default field
returns the operations per iteration
returns the time in milliseconds that the iteration has been performed
this method is called by the framework to indicate that the
returns the available tests
returns a test method
returns the maximum value for a field
returns the day of the week type of the specified day
sets the hour
this method sets the date time to the
date 00 00 00 00 00 00 00 00 00
the
returns true if the date is
the date time
sets the date time zone
sets the data
this method sets the date time to
update the time in the database
this method is called to indicate the last time that a
returns the field value for the given field
test the rule
validates the fields
validate the field values
returns the target for the given test parameters
returns the target for the given target
returns the inclusion of the function
test to string
returns the length of the month in the given month
checks if the module is valid
validates the given method
returns the description of the test
returns the method description for the given method
open the module
opens a test data
returns the module information
returns the test info
returns true if the current settings is empty
returns true if the next case is a next package
calculates the length of the year
test ordinal ordinal for a
tests the
this method is called when the user selects the day
test
test time zone
returns the field name for the given field
test the locale
this method parses the given number of numbers
test that the locales are available
test the
test the
test the
tests the of the
test the
test the currency of the currency
tests the of the
tests the of the
tests the
test the
tests the of the
tests the
tests the
test the
tests parsing of a double
tests the run method
test
test the
tests the exponent method
test that the day of the year of year is not used
test method for
tests the
tests the two
test
tests the date format
test space parsing
tests exact exact exact exact exact exact exact exact exact matching
test white spaces
test the conversion of a complex type
the
returns the names of the names of the
returns the names of the sorted map objects
returns the names of the sorted names of the
called when the service is changed
returns the hello message
register a new listener
test
sets the
test the
this method is called by the server to start the
test the simple
test test cases
returns the data map
creates a new test data object
creates a new test data object
creates a new
returns the list of test data names
sets the maximum value of the
returns the next settings object
returns the next data map
writes the
tests the pattern against the pattern
test
test
test
test the script of the
tests the
test of clone method of class org
test of index of class
sets the
test of script names method of class
process a successful completion
convert the given input object into a string
tests keyboard shortcut
test
returns the data of the data
returns the input stream
sets the input
returns true if the given data is equal to the other
appends the specified string to the current buffer
returns true if the given string is a valid
returns the value of the given radix as radix as radix
returns the next token in the input stream
accept the specified state
accept a state of a specific number of bytes
test
checks if the value is a duplicate value
test the
test the
test filtering
adds the given elements to this array
removes the specified range of indices
returns the capacity of this data array
sets the capacity of this object
reduce the capacity of this
returns the element at the specified index
returns true if the specified value is contained in the list
returns an enumeration of the data contained in this object
validates a comparator
test pattern
test unicode
test the iterator of
test
test inter
sets the text
test the filter
test method for
returns the resource bundle for the current locale
remove a from the registry
returns an enumeration of the
returns an enumeration of all available available available
returns an enumeration of all the targets of the specified
returns all the available available variants of the given source
test the
returns a string representation of the given pattern
checks if the value is in the value of the given value
adds a unicode
appends the given code int code to the code integer code
test the
returns the big integer
checks if the given number of digits to be played
test that the inverse of the inverse of the
test
test
test the property that sets the property set for the
returns a copy of this object
sets the range of the contents of this set
returns a copy of the specified pattern and apply the given pattern
sets the pattern for the given pattern
tests the default values
returns a string representation of the pattern
test the title of a
test the locale of the locale
returns the number of elements in this collection
tests parsing of error
returns true if the buffer is empty
test that the output is correctly used to generate a
tests the variable range
test invalid post context
adds a unicode pair to this union
returns the index of the first occurence of the specified character
returns the character at the specified index
test escape backslash
this method is called by the
returns the shape of the given text
removes the specified range of values from this set
tests the anchor of a
removes the specified range of the specified range
returns the iterator to the character iterator
returns the current current character code point code
returns the previous code point code point in this automaton
sets the value of the limit to limit
sets the index of the current entry
move the given point on the stack
returns true if the next element is a valid element
tests if the range is contained in the range
lookup the category for the given category
returns true if this range contains all of the elements in this
build the character list
returns true if there is a next character in the enumeration
returns the next character in the iteration
returns the decomposition of the decomposition
checks if the given string contains all the characters in this
tests if the specified range of
returns true if the given character is empty
checks if the given string contains the none
translates a pattern to a given pattern
returns the localized pattern for this pattern
apply pattern pattern pattern
creates a new builder
test that the method is not allowed
sets the first character to the specified
returns the symbols
test that a is a whitespace
resets the current state of the current iteration
returns the next available string
returns the number of distinct keys
sets the number of compact characters
returns the at the specified index
returns the source set of the set
returns the unicode set of the target set
computes the maximum length of the context
compares the specified object with this list for equality
returns the hash code of this object
returns the hash code of the object
returns a string representation of this object
returns the plus sign
sets the value of the plus sign
returns the padding used to represent the
sets the padding used to represent the given char
returns the hash code for this object
adds a replacement replacement to this
returns the for the given
reverses the direction of the given shift type
sets the value of the currency property
adjust the limit of the delta
returns the text in the text
sets the text of this text element
lookup the category for a given category
returns true if the given position is in the group
build the break iterator
sets the value of the property
this method is called by the system
sets the close close attribute of the object
returns true if the given value is in the current pattern
adds a new match set to the set of characters
resets the match to the first match
adds a replacement replacement to this collator
the of the
sets the decimal format symbols used to represent the
sets the value of the specified radix as radix 9
sets the fraction of the rule to be used in rule
compares this object against the specified object
returns true if the fraction is constrained
this method is used to format the given
returns a string representation of this token
formats a number into the given string
returns true if the type is a null or not
returns true if the current value is expected to infinity
sets the positive prefix
returns the index of the given string in the current position
returns the current transform of the given number
compares this code code to the given object
composes the rule value
calculates the upper bound of the given upper bound
returns the current value of the divisor
sets the radix of this expression to the specified value
insert the methods description here
compares this object against the specified object
formats the given line number into the given format
returns the number of in the given code number
eliminates states from the
returns the current transform of the given transform
returns the rule value for the given value
returns the upper bound of the given upper bound
compares this object against the specified object
throws an error at the specified position
returns the result of the given number of the current
sets the multiplier for the
returns the value of the rule in the specified value
sets the rounding increment value
returns the number of in the given code number
sets the amount in a new value
returns the current transform of the given number
creates a new rule in the rule
returns the rounding mode
returns the upper bound of the upper bound
sets the rounding mode
returns the number of in the given result
returns the format width
returns the current transform of the given number
sets the width of the code text code
returns the pad character
transforms a number into a local
clones the object
sets the pad character
transforms a double to a double
returns the pad position
compares this object against the specified object
sets the pad position
returns the current transform of the given number
returns the use notation
transforms a double to a given code double code
sets the notation
returns the upper bound of the interval
returns the minimum exponent value for the number of digits
returns true if the given object is equal to this one
sets the minimum number of digits to be constrained
returns the index of the end of the text
returns true if exponent is used to sign the interpolated border
returns the next element in the iteration
parse the text from the given text
sets whether or not the sign needs to sign sign off
returns the last element in the list
returns true if the given character matches the pattern
returns true if the given character is a
returns true if the type is substitution
returns true if the field is set
sets the uppercase value for this
checks whether the given parser is valid for the given input
returns the secondary grouping size
returns true if the specified boundary is positioned at the end of
checks if the given input is valid for this parser
parse the rules into the given string
sets the zone strings
sets the secondary grouping size
sets the local pattern to use for this
parse the given rules into the given code code
returns a hash code for this object
sets the option
sets the range of the range
returns a string representation of this rule
returns the value of an option
checks the range of variables in the given range
the maximum of the backup file
returns the fill text in the text area
formats a double
normalizes the given rules
returns the maximum context length
format a number
adds a rule to the end of the list
returns the length of the text in the text
returns the length of the context
returns the segment of the segment that is
returns the text of the current text
returns a copy of this object
sets the segment object that is used to hold the segment
returns a string representation of this object
sets the text of this object
appends the given string to the given buffer
adds a replacement replacement to this union
returns the substring of the string
returns the offset of the specified character
replaces the text with the specified text
copy the contents of the specified range
sets the text of the text
sets the position of the current context
returns a matcher for the specified number of characters
sets whether parsing lenient format should be lenient
compares this object with another one
looks up the lookup function in the given string
returns the string representation of the rule
returns the source set of the source set
returns true if parsing should be lenient parsing
returns a hash code for this object
returns the unicode set of the current target
returns a string representation of the context
sets the default rule set
sets the text of this text box
returns true if the component is visible
initializes the default rule set
sets the maximum number of context allowed
sets the filter
returns the string representation of the rules
returns the source set
returns the unicode unicode character set
sets the interceptor list
clear the request
invokes the given code method code to all the
registers a new request handler
unregisters a pattern from the registry
returns a copy of this basic processor
sets the handlers
registers a new pattern with the specified pattern
removes a pattern from the list
sets the handlers map
returns true if the specified pattern matches the given pattern
returns the default locale for the specified locale
returns the version of the specified minor version
creates a new token iterator for the given iterator
creates a new entity
creates an entity serializer
factory method to instantiate the factory used to create the factory
reads the next chunk of bytes from the stream
read the next chunk from the stream
read the chunk size
parses the trailer headers
binds the socket to a specific request
writes a line of data to the buffer
creates a new instance of the host host with the specified host
factory method to instantiate the factory used to create
returns the url of the current url
returns a string representation of this host
returns a copy of the current http request
returns the value of the specified parameter
removes a parameter from the list
sets the parameter with the specified name and value
sets the parameters
returns true if the parameter is a parameter set
checks if the given parameter is a local parameter set
clears the list
returns a copy of the current response
copy the parameters into the specified parameters
returns a string representation of this object
returns the next index from the input stream
returns true if the header is a header filter
creates a new name value pair pair
creates a new code protocol version code for the given major version
creates a new token with the given start and end
returns first header with specified name
returns true if the header contains the specified header
returns an iterator for the headers
finds the next token in the current token
returns an iterator for the headers
returns the end position of the specified
skips the given character
sets the maximum number of digits allowed in the fraction
returns the length of the subarray of the specified element
returns true if the character is a valid character
initializes the buffer with the given char array
returns true if the character is a whitespace character
returns the length of the header element
returns true if the token is a character
returns true if the character is a valid character
calculates the length of the parameters
returns the version of the protocol
returns the request line
returns the length of the string in bytes of the given pair
returns true if the character is a separator character
returns true if the character is not a char
returns the reason for the given reason code
sets the minimum number of digits allowed in the range
returns the content type of this header
returns the content encoding
returns the chunked flag
sets the content type
repeat action false
sets the content length
sets the content type
sets the content of the content
sets the content encoding
sets the content encoding
returns true if the streaming is
sets the chunked flag
returns true if the buffer is chunked
sets the currency
sets the maximum number of fraction digits allowed for the
sets the minimum fraction of digits that the user can change
returns the content of the input stream
creates the maps
returns the version of the specified minor version
returns the reason for the given status
adds a mapping for a given string
make the map containing the serialized
returns the duration of the current task
creates a new instance of buffer buffer
creates a new connection
creates a new connection
creates a new connection
creates a new connection
prepares the for this connection
checks if the connection is closed
adds a channel entry to the list
adds an exception to the list of exceptions
sets the exception handler
returns the session request
processes the key event
returns the attachment of the session
returns the channel that is associated with this channel
this method is called when the session is closed
sets the exception handler
adds a channel entry to the channel
handle the runtime exception thrown during the runtime
prepares the socket and prepare it to be sent
waits until the timeout is aborted
closes the session manager
close the channel
close the channel
called when the server is destroyed
shuts down the server
waits until the thread is shutdown
registers a new regular expression for the given pattern
sets the handlers
called when the response is complete
returns the mode of the current user
sets the output mode for this output
sets the input mode
expands the cache
ensure the capacity is necessary to ensure that the
returns the capacity of the buffer
returns true if the buffer has data
returns the length of the buffer
returns the number of input bytes that can be read from the
returns the cause of this exception
opens a window
opens the file browser window
launches a compose window
resolve the file system
opens a file
launch the url
add an action listener to the
removes an action listener
returns true if the web engine is available
returns true if the browser browser is a default browser browser
sets the path to the browser
returns the
this method is called when the user wants to paint the
this method is called by the when the user clicks on
removes the current component from the list
initialize the environment
disposes the toolkit
returns true if the engine is available
returns true if the browser browser is a default browser browser
returns true if the window is disposed
tests the given unix unix unix unix unix unix format
sets the bounds of the receiver
initializes the engines engines engine
returns the engines
returns the
remove a browser engine
returns the url of the event
returns true if the engines engines
sets the event dispatching thread
returns the active engine
sets the url of the url
creates a url with the specified url
returns the mime type of the attachment
returns the description of the file extension
returns the path to the given file
returns a list of file extensions for the given mime type
invokes the method
returns the mime type of the file extension
returns the icon for the specified mime type
returns the icon for the file extension
returns the system keys for the given path
returns the action list for the given mime type
returns a list of action list objects
returns true if the file extension is already loaded
forward to the event dispatching thread
returns the system name for the given file
returns the path to the user to use for the given file
this method is called by the event thread
returns the path to the user in the path to the user
stops the event
returns the path to the user in the xml file
prints the script
sets the content of the event
creates a new file
returns the content of the event
this method is used to execute the script
returns true if the back button is enabled
returns true if the forward navigation is enabled
check if the url is a valid url
returns true if the mime type of the file is
returns true if the url is open
wait for the web browser
returns true if the given file is editable
this method is called by the browser
returns true if the file is printable
this method is called to perform the execution of a file
parse subject and return the subject
parse the body of a string
open the given message
open the file
construct a
returns the mime type of the given mime type
returns the description of the file extension
returns the url for the given url
returns a list of file extensions for the given mime type
returns the mime type of the file extension
returns the icon for the specified mime type
returns the icon for the file extension
returns a list of action list objects for the given mime type
returns the action list for the given file extension
returns true if the given mime type is mime type
returns true if the file exists in the registry
returns the current mime type of the mime type
returns the current file extension
returns the mime type of the backup mime type
returns the
returns the file ext file ext
opens the
open the given message
open the message
open the file
returns true if the file is a link file
returns true if the given file is editable
this method is called by the browser
returns true if the file is printable
this method is called to handle the file
returns the volume of the audio device
sets the volume of the audio device
updates the volume of the slider
sets the menu to the specified menu
returns the current volume
sets the volume of the
adds a property change listener to the listener list
notify all registered listeners of a property change
sets the menu
returns true if the dock menu is emulated in the dock menu
returns the free space in the file
returns the total number of space
returns the file iterator for the file
returns a file iterator for the filter
returns a file iterator for the filter
this method is used by the to perform a
returns the number of bytes that can be downloaded from the file
called when a new song has been changed
sets the provider
returns the provider
initialize the theme
returns the icon for the specified icon
returns the theme
sets the theme to use
returns an iterator over the groups in the group
this method is called by the application
returns the group with the specified name
returns the theme name
returns the entries in the map
sets the theme for the theme
returns the entry specified by the specified name
returns an iterator of all the names of the given entry
returns an iterator over the entry of the entry
returns the value of the specified entry as a boolean
returns the integer value of the specified entry as a string
returns the value of the specified entry as a code float code
sets the visibility of the component
returns true if the component is visible
sets the size of the image
returns the size of the image
sets the layout manager to be used by this view
returns the layout manager
sets the location of the location
returns the location of the location
sets the hide flag
returns true if the should be hidden
adds a listener to the window
removes a window listener
returns the binder
builds the custom area with aligned and vertical label
build the custom area with top bottom
builds the area with separator
tests that the
tests that the correct parser is rejected
assert that the given row is equal to the given row
asserts that the given row is
tests that the
tests that the correct language spec encodings are rejected
checks the grid
assert that the given column is equal to the given spec
assert that the given cell is equal to the given one
asserts that the given encoding is
parse the size and set the value of the token and initializes
returns a string representation of this object
calculates the resize of the input token
this method is called when the user changes the property change
sets the average character width
returns the insets of the border
creates and returns a new
returns the font that the dialog is being used to display the
returns the font for the font
invalidates the cached caches
sets the border for the border
adds a new constant to the table
returns the constraints for the specified component
returns a string representation of this object
test method for
test that the padding of the marker in the string is
test that the pad is truncated
test definition
test the size
test md5 hash
test md5 hash
check that the expected are
sum the given array of points
asserts that the two doubles are equal
test method for
test method for
test method for
test method for
test of is equal method of class
test of is equal method of class
test of is method of class
test of is method of class
test method for
test method for
test of is ray method of class
test method for
test method for
test method for
test the
test
test the conversion of a
test the get encoder
test the get encoder
test method for
returns the next object in the list
returns a new iterator that is the next
calculate hash value of the hash object
returns true if the is
returns a copy of this object with the same object as a
returns an instance of the class type
creates a new instance of the given hash code
returns the of the
sets the position of the pointer to the specified position
returns the message for the given operator
returns the message for the given operator
returns a deep copy of the current object
removes the specified start and stop the end of the queue
sets the new base capacity of the base class
returns a string representation of this object
returns a reduced object that is the number of elements in the
reduce the reduce reduce reduce reduce reduce reduce reduce reduce reduce reduce
returns a value that is equivalent to the last object
inserts the specified element at the specified position in this list
adds a new value to the list
returns a clone of this object
discards the values from the given input
returns the value of the element at the specified index
returns the array of the base type
replaces the element at the specified position in this list with the
sets the array of the object
returns true if the given type is a layout type
this method is called when the is
inserts the specified element at the specified position in this list
adds the specified element to this set if it is not already
lookup the name of a key
returns the element at the specified position in this list
replaces the element at the specified position in this list with the
returns the module that matches the given name
returns the sub name of the given name
returns the integer value at the specified position in the current position
returns the value of the specified entry at the specified position
returns a reduced object that is the number of the reduced classes
returns a new instance of the current object
cleanup the thread
returns a new py object that is the same as the name
returns the length of the current object
returns a string representation of the object
append the given value to the end of the list
the
returns a clone of this object
removes the specified from the list
deletes the range of the specified range of the specified range
this method is used to write the value of the internal array
internal method to extend the internal iterator
sets the value of the code obj code
reads from an input stream
sets the
returns a new code py code object
returns the type
start the
gets the
inserts the object into the container at the specified index
returns a pointer to the last element
returns a new instance of the given repeat
returns a new instance of the current
returns the of the current
returns a reduced object that is the number of elements in the
returns the value for the key
update the dictionary
equivalent to the standard python method
returns a key value from the stack
returns the list of dictionaries
returns the index of the element in the list
pops the current object from the stack
sorts the list
returns a reduced object that is the current number of
returns the class that this class is associated with
p returns a new instance of the name of the attribute
p returns a new
creates a new class
p equivalent to the standard python method
creates a class from the given dict
sets the sql statement to be used in the sql statement
sets the sql statement to be used in the sql statement
equivalent to the standard python method
sets the value of a named attribute
equivalent to the standard python method
executes the given query and executes the result
equivalent to the standard python method
equivalent to the standard python method
equivalent to the standard python method
equivalent to the standard python method
equivalent to the standard python method
equivalent to the standard python method
equivalent to the standard python method
equivalent to the standard python method
equivalent to the standard python method
adds a processor to the list of processors
removes a processor from the processor
process stream info
the processor
process the frame
returns the size of the buffer
resizes the buffer
puts the current buffer into the buffer
equivalent to the standard python method
empties the queue
returns the number of available
append a byte to the end of the buffer
returns the data at the specified index

writes the header information
writes the data space
resets the bit counter
sets the
returns the
returns true if the bit mask is aligned
returns the number of bits left in the
returns the number of bytes that this input is
sets the bits in the given bit
returns the of the
reads the next bit from the input stream
returns the of the current
returns true if this is a aligned boundary
reads a bit from the input stream
returns true if the consumed encoder is aligned
reads a bit from the input stream
returns the number of bits left in the
reads a bit from the input stream
returns the number of bytes that have been received
equivalent to the standard python method
writes the given to the given
returns the value of the given bits as a bit
the given value to the given value
returns the next integer value from the given
returns the value of the specified bit as a code long code
reads a raw little endian byte from the stream
the
reads the unary from the input stream
truncates the bytes to the byte array
flush the buffer
returns the total number of bytes read from the stream
reads a random file from the input stream
close the file
skips over and discards code bytes code from the code
returns the total number of bits in the
reads the specified data from the specified buffer
reads the given byte array from the specified buffer
seek a file to the given position
returns the total number of
initializes the decoder
process stream info
set the data buffer
check if the current thread is still still open
fills the current
equivalent to the standard python method
returns the audio file format for the specified file
returns the audio file format for the specified url
returns the audio file format for the specified file
calculates the length of the
returns true if the given stream is a
returns the audio input stream for the specified audio file
returns a string representation of this object
returns an audio input stream for the specified input stream
returns a string representation of this object
returns true if the last entry is the last
writes the given code byte code to the output stream
returns the frame rate of the frame
returns the sample number of the sample
returns the offset of the stream
sets the stream offset
writes the given byte to the stream
calculates the length of the
returns the seek point of the given position
returns the number of points in the polygon
process the stream info
writes the data to the specified data
process the frame
process an error message
decode a file
process a stream info
analyses the file
the
process the frame
process an error message
decode a
processes the given stream info
test the given file
process an error message
returns the crc
sets the crc
returns a string representation of this object
ensures that the given partition is available
returns a string representation of the channel
returns the number of bits in the
returns the stream info
returns the bit readed stream
removes a frame listener from the list of listeners
sets the processor to use for the processor
sets the processor to use for the processor
reads the stream info
decodes the frame
decode the frames
reads the next frame from the input stream
reads the stream
returns the number of samples
returns the current component
shows a failure
clears the model
returns the menu
starts the process
starts the process
paints the label
uninstalls the default value from the ui
installs the border of the component border style
creates the button area
creates the editor for the editor
creates a layout manager object
creates the button for the current state
installs the default font
returns the popup menu for the specified popup menu
returns true if the content of the border has no content border
returns true if the look feel is not null
check the current state of the given tab
property changed
sets the content border property
installs defaults from the given code abstract code
installs listeners on the property change listener
installs listeners on the panel
ensures that the given file is registered in the configuration
installs the border of the border
creates and returns a new code component code
creates the next button
replaces the old component with the new editor
sets the editor
creates and returns a new instance of the default divider
paints the given component
uninstalls the default
uninstalls the given code default code from the
returns true if the given component is in the frame
updates the panel with the given graphics
uninstalls the defaults from the ui
creates a view from an element
paints the given component
creates the button that will be used to draw the previous button
creates a new button
creates the editor for the editor
configures the editor for the editor
returns true if the content of the component has content border
recomputes the given code code
invoked when the tab placement changes
creates a new editor
creates a layout manager object
returns the insets of the editor
returns the width of the editable button
installs the default component and installs them
paint the icon
paint the text in the text area
returns true if the button is painted
installs the border of the border
initializes the class defaults to the default
installs the default font in the default font
returns true if the button is painted
returns the font size of the menu
returns the font size of the font
returns the size of the font in the font size
returns the size of the control font
returns the insets of the border
ensures that the is installed
paints the background of the menu
paint the border
returns true if the user is enabled
returns a string representation of this object
explain the panel
explain the panel for the condition
explain the panel for the
explain the panel that is responsible for the
returns true if the given component is decorated as a decorated child
returns true if the component is a kind of split pane
installs a border around the given border
returns true if the perimeter of the given code code is
returns true if the panel contains a panel
explain the panel for a given component
returns true if the cell is a net
returns true if the component belongs to a net
explain the panel that is used to generate the
returns the net beans scroll pane
explain the
returns the net beans special border panel
returns the border status of the cell
analyses the condition
returns true if the border is empty
returns true if the given decoration is a decoration
returns true if the given border is a decoration
returns true if the given decoration is a decoration
returns true if the component is empty
returns true if the border is painted with the bevel border
returns true if the component is decorated under the given component
returns true if the component is parent
returns true if the component is a internal frame
returns true if the component is a kind of split pane
returns true if the component contains the decorated split pane
returns true if the given component is a double
returns the border decoration
returns the border of the border
returns the border of the right border of the border
returns the border border border border border
returns the border of the border
returns the border raised border border
find the analyse method
removes the properties from the given properties
build the status of the
this method is called when the user selects the language
copies the contents of the file to a directory
deletes all files and directories
checks if the given object is valid
compares this sortable with the specified object for order
adds the specified object to the end of this list
compares this object with the specified object for order
adds the specified element to this collection
adds a new test to the set of tests
adds the items to the set
sets up the fixture for example open a network connection
adds all of the elements in the specified collection to this queue
adds all of the elements in the specified collection to this
tears down the fixture for example close a network connection
adds one item to the collection
test the capacity
adds all of the elements in the specified array to this queue
creates a new collection of
tests change value of a stacked wheel
build the heap
tests change on the
clears the array
test of add method of class org
returns true if the specified object is contained in the list
test of get capacity method of class org
returns true if the given object is contained in the list
test of add all method of class org
test of get get method of class org
ensures that the specified capacity is smaller than the array
test the heap
test of clear method of class com
returns true if this collection contains all of the elements of the
remove a heap heap heap from the heap
test sorting the heap
test contains the same method
ensures that the specified capacity is smaller than capacity
returns the index in this list of the first occurrence of the
test that a collection contains a non null collection
returns the index in this list of the first occurrence of the
test method for
removes the element at the specified position in this list optional
removes the element at the specified element from this list optional
returns true if the iterator has another element
test of remove method of class com
returns the next element in the iteration
test that removing all items from the collection and returns it
removes all the elements of the given collection
removes the element at the end of the list
removes all elements from this collection
removes the element at the given index
removes the element at the given index
test size of collections
retains only the elements in this list that are contained in the
removes the top element from the stack
test the get method
replaces the element at the specified position in this list with the
retains only the elements in this list that are contained in the
replaces the element at the specified position in this list with the
sorts the list of the
sets the expires time in milliseconds
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the feature
this adds a property descriptor for the feature
this adds a property descriptor for the feature
creates a new adapter for an object of class
this adds a property descriptor for the id feature
this adds a property descriptor for the goto id feature
creates a new adapter for an object of class
this adds a property descriptor for the feature
this adds a property descriptor for the is final feature
this adds a property descriptor for the feature
creates a new adapter for an object of class
this adds a property descriptor for the goto id feature
this adds a property descriptor for the answering item feature
creates a new adapter for an object of class
this adds a property descriptor for the item feature
this adds a property descriptor for the is feature
creates a new adapter for an object of class
this adds a property descriptor for the event feature
creates a new adapter for an object of class
creates a new adapter for an object of class
this adds a property descriptor for the condition feature
creates a new adapter for an object of class
this adds a property descriptor for the action feature
creates a new adapter for an object of class
this adds a property descriptor for the is enemy dead feature
creates a new adapter for an object of class
this adds a property descriptor for the is feature
this adds a property descriptor for the feature
creates a new adapter for an object of class
this adds a property descriptor for the is feature
creates a new adapter for an object of class
this adds a property descriptor for the feature
this adds a property descriptor for the feature
creates a new adapter for an object of class
this adds a property descriptor for the feature
creates a new adapter for an object of class
this adds a property descriptor for the feature
creates a new adapter for an object of class
this adds a property descriptor for the feature
this adds a property descriptor for the item used feature
this adds a property descriptor for the feature
this adds a property descriptor for the room feature
this adds a property descriptor for the npc feature
this adds a property descriptor for the
this adds a property descriptor for the feature
this adds a property descriptor for the id feature
this adds a property descriptor for the is final feature
this adds a property descriptor for the is feature
this adds a property descriptor for the feature
this adds a property descriptor for the damage fire feature
this adds a property descriptor for the damage feature
this adds a property descriptor for the damage ice feature
this adds a property descriptor for the damage feature
this adds a property descriptor for the act name feature
this adds a property descriptor for the goto act feature
this adds a property descriptor for the description feature
this adds a property descriptor for the name feature
this adds a property descriptor for the name feature
this adds a property descriptor for the description feature
this adds a property descriptor for the id feature
this adds a property descriptor for the post description feature
this adds a property descriptor for the feature
this adds a property descriptor for the fire feature
this adds a property descriptor for the post items description feature
this adds a property descriptor for the ice feature
this adds a property descriptor for the skill feature
this adds a property descriptor for the add skill feature
this adds a property descriptor for the feature
this adds a property descriptor for the description feature
this adds a property descriptor for the normal feature
this adds a property descriptor for the feature
this adds a property descriptor for the hidden description feature
this adds a property descriptor for the feature
this adds a property descriptor for the type feature
this adds a property descriptor for the north feature
this adds a property descriptor for the south feature
this adds a property descriptor for the id feature
this adds a property descriptor for the east feature
this adds a property descriptor for the damage feature
this adds a property descriptor for the name feature
this adds a property descriptor for the is feature
this adds a property descriptor for the feature
this adds a property descriptor for the damage feature
this adds a property descriptor for the damage fire property
this adds a property descriptor for the damage feature
this adds a property descriptor for the feature
this adds a property descriptor for the init feature
this adds a property descriptor for the description feature
this adds a property descriptor for the damage ice feature
this adds a property descriptor for the complete text feature
this adds a property descriptor for the classes feature
this adds a property descriptor for the west feature
this adds a property descriptor for the init mana feature
this adds a property descriptor for the quest condition feature
this adds a property descriptor for the is locked feature
this adds a property descriptor for the mana feature
this adds a property descriptor for the feature
this adds a property descriptor for the strength feature
this adds a property descriptor for the unlock keys feature
this adds a property descriptor for the feature
this adds a property descriptor for the quest item feature
this adds a property descriptor for the feature
this adds a property descriptor for the is hidden feature
this adds a property descriptor for the is complete feature
this adds a property descriptor for the feature
this adds a property descriptor for the is feature
this adds a property descriptor for the xp earned feature
this adds a property descriptor for the room feature
this adds a property descriptor for the feature
this adds a property descriptor for the is hidden event feature
this adds a property descriptor for the npc feature
this adds a property descriptor for the armor feature
this adds a property descriptor for the armor type feature
this adds a property descriptor for the level feature
this adds a property descriptor for the feature
this adds a property descriptor for the ice feature
this adds a property descriptor for the fire feature
this adds a property descriptor for the feature
this adds a property descriptor for the experience feature
this adds a property descriptor for the skill feature
this adds a property descriptor for the goto id in task feature
this adds a property descriptor for the classes feature
this adds a property descriptor for the goto id fail feature
this adds a property descriptor for the npc
this adds a property descriptor for the gold feature
this adds a property descriptor for the text feature
this adds a property descriptor for the fail text feature
this adds a property descriptor for the init player actions property value
this adds a property descriptor for the feature
this adds a property descriptor for the fire feature
this adds a property descriptor for the feature
this just records the information
create a new model
this adds a property descriptor for the ice feature
this adds a property descriptor for the is male feature
this adds a property descriptor for the race feature
this adds a property descriptor for the creature class feature
this adds a property descriptor for the armor feature
returns the label for the specified type name
handles activation of the editor or its associated views
returns a diagnostic describing the errors and warnings listed in the resource
this accesses a cached version of the property sheet
adds a parameter to the list of parameters
sets the template
connect to database
saves the to the file
shuts the down server
sets the status label
returns the user password password
shuts the database connection
logs a message on the log
this method is called when the user is logged in
this method is called when the user is logged in
returns a new instance of the class instance
create an instance of
creates a new instance of the product
this method is called by the service subsystem
adds a child to this
removes a child from this
this method is called by the
this method is invoked by the
this method is invoked to indicate the request to the
this method is invoked when the user wants to be invoked
test the
test the
update the fields
fires an input changed event
adds a listener to the filter
removes a listener from the list of listeners
returns true if the renderer is valid
sets the value of the property
sets the operator of the operator
sets the field to be used for the field
this method is called when the editor is changed
returns the selected dialect
returns the units of the work unit
returns a string representation of the alias
returns the index file for the given file
get the reader for a given index
open a reader for a given reader
puts the property value into the properties map
returns the default value for the default conversion pattern
do not use this method
returns the analyzer for the version
returns the
sets the tool
load the
sets the mode of the
returns the number of in the
invoked when the control changes
sets the display mode for the display mode
returns the component
updates the node
sets the error reporter
this method is called when the menu item is deselected
called when an entity is added
removes the node from the scene
called when an entity is removed
this method is called when the menu is selected
invoked when the master time is changed
invoked when the selection in the selection changes
this method is called when the user changes the view
sets whether the sensor sensor is enabled
resets the model to the given state
sets the selected value
called when the entity size changes
this method is called when the entity is destroyed
this method is called when a entity is
sets the location of the application
initializes the
called when a entity is moved
the entity to the specified entity
entity listener for a entity is rotated
called when an entity is removed
returns the node that is currently being used for this node
removes the node from the list
this method is called when the selection of the selection changes
sets the name of the controlled field names
wrapper for the wrapper interface
removes a wrapper from the wrapper
this method is called when a entity is moved
called when the current entity is moved
is called when a entity is over the entity
sets the of this component
removes the given from the scene
called when the user selects the
initializes the wrapper
removes the tool
changes the selection to the given list of selected elements
copies the scene to the scene graph
this method is called when a is
sets the scene
sets the value of a field
sets the field
gets the field attribute of the object
gets the field attribute of the object
creates a new touch sensor
sets the local flag
sets the current tool
initializes the wrapper
returns true if transient values is set to true
the
called when a wrapper is clicked
this method is called when the scene is
returns true if the current undoable state is undoable state
serialize a to a given code code
removes a entity wrapper
this method is called by the
executes the entity
undo the current entity
redoes the last undone action
creates the default entity
this method rotates the
creates a multi multi entity with an entity
returns the number of
initializes the
clones the entity
returns the size of the specified array of floats
compares the specified object with this entity
undo the last operation
returns the hash code for this entity
sets the entity id
sets the tool
get the position of the current position
sets the position of the given element
sets the mode of the
rotates the rotation of the rotation
sets the rotation of the given rotation
invoked when an action occurs
shuts down the
sets the tool
sets the properties of the given document
sets the properties of the given properties object
returns the main scene
returns the query model for the given entity id
sets the size of the image
returns the properties of a given property
returns the property value for the given property name
sets the size of the image
returns the properties of the given document
adds an association to the list of entities
adds a parent to the association
sets the size of the image to the specified size
updates the given list of objects
removes the parent association with the given id
adds a segment to the end of the list
splits the segment into the given segment
removes the given segment from the list
updates the image buffer
adds a segment vertex to the end of the list
move the vertex at the given position
sets the entity renderer for this entity
removes the segment vertex from the segment
gets the value of the segmented entity property
sets the
notify the that a vertex is removed
sets the mode to be used for the
returns the id of the
this method is called when the entity size changes
sets the
returns the id of the
sets the highlighted
sets the display mode for the display mode
sets the display mode for the display
returns the
sets the
returns the id of the
the entity to the specified entity
returns the vertex at the end of this vertexs
the entity
sets the
returns the id of the
this method is called when the user has changed the view
returns the current segment
this method is called when the master is changed
returns true if the vertex is selected
resets the model to the given state
sets the physical size of the physical image
returns true if the user is selected
returns the segment sequence
sets the location of the map
called when the browser is changed
get the size of the given array of floats
sets whether the elevation should be used
sets the fixed mode
invoked when the user changes the control
returns true if the elevation should be used for the elevation
returns true if the component is fixed
returns the entity id for the entity
returns the multiplicity constraint
this method is called when the user selects the request to be
this method is called when the user selects a
sets the update children
initializes the pick pick targets
adds a child to this entity
removes the specified entity from the list of children
returns the child at the specified index
this method is called when the entity is destroyed
returns true if the children of this node has children
this method is called when a entity is selected
remove entity from the entity
this method creates the scene for the scene
returns the catalog filename for the given file name
executes the current entity
redo the last action
this method changes the of the matrix
get the position of the given position
executes the entity
executes the move
undo the current entity
serialize a to a given code code
move the association between the entities in the given position
performs the actual
this method is called by the
adds a global listener to the list of listeners
updates the position of the entity
update the
called when the current entity is moved
is called when a entity is over the entity
this method is called when the user selects the translation
move the associated entities position
rotates the
event indicating that the specified entity is removed
called by the entity when a entity is moved
the entity to the specified entity
the entity with the rotation
resets the state of the map
called when a wrapper is clicked
invoked when a key is released
is called when a entity is over the entity
invoked when the mouse enters a component
invoked when the mouse exits a component
invoked when the listener has changed its state
checks the entity for the
sets the heading
returns the value of the attribute specified by the name of the
returns the value of the attribute specified by the attribute name
remove the current node from the model
shuts down the browser
sets the error reporter
returns an image from the given url
calculate the scale of the image
remove the node from the scene
adjust the rotation of the
resets the navigation state to the previous state
notification of a change in the scene
shuts down the browser
sets the progress bar
sets the placement mode for the current mode
sets the selection mode
move the entity
this method is called when the entity is
sets the zoom level
this method registers the entities in the model
removes the association between the association and the parent
sets the image directory
highlights the given tools
update entity scale and zoom in the map
this method returns the tree codes
sets the number of remaining bytes in the queue
sets the buffer
sets the seperator
returns the seperator
sets the
returns the
sets the
returns the
sets the success status of the
flush the buffer
reads the next byte of data from the input stream
writes the given bit
writes the specified byte array to the underlying stream
writes the tree helper
writes the tree
reads a tree node from the input stream
encodes the byte array into a byte array
decode the
executes the job
start the server
stops the
run the thread
start monitoring the monitoring service
stop monitoring monitoring
stops the daemon daemon
this method is called when the user modifies a list of
returns the cluster
gets the
gets the
gets the
getter for property slope
returns a string representation of this object
returns true if the test run is up to the target
this method is called when a new user is
this method is called when the user selects the
this method is used to determine the of the
this method is called by
this method is called when the user selects the
this method is called when the user selects the
called by the framework to indicate the state of the
this method is called when the user selects the
called by the framework to indicate the state of the
this method is called when the user selects the
this method is called when the user selects the
returns true if the project contains a project specific project
returns the pref id
this method is called when the user selects the
returns the property
initializes the plugin
resets the
configures the nature
disposes the toolkit
this method is called when the filter is initialized
removes the nature from the project
performs the default defaults
resets the file
returns true if the given element is a java
this method is called when the filter is done
this method is called by the framework to initialize selfs class
reset the state of this object
apply the apply apply button
resets the contents of the folder
returns true if the given element is accepted by this filter
returns true if the given element is accepted by this filter
removes a command from the list
the action has been activated
this method is called when the user selects the selection
removes the given java
returns the string representation of the project
dispose of all resources
updates the text of the text
this method is used to handle the request
returns the selected file
initializes the components
this method is called when the user selects the file menu item
invoked when the components size changes
populate the tree with the given tree
initializes the servlet
sets the current style of the current element
sets the current element
sets the current element of the current element
updates the page with the given page id
returns the sql context for the current user
returns the context for the given database name
returns the number of rules in the given word
adds the given object to the current context
returns the line source
remove all the from the list
sets the line source
sets the
sets the action for the action
returns the id of the given string
sets the data types
add to the
returns the index of the given field
returns the value of the given string
prints the actions
sets the value of the values property
sets the
removes the given expression from the expression
returns the number of in the given sequence
removes the from the regex
returns the list of the actions that are not supported by this
returns the data abstract data for a variable
returns the variable of the given variable
get the generic type of the given type
returns the context
returns the current context
returns the maximum number of context invocations
adds a context to the context
adds a context at the specified index
returns the meta rules of this module
returns the data type for the given type
returns the
prints the list of actions
returns the number of rules that are not permitted
creates the table
returns the
deletes a meta tree
gets the value of the generic property
returns the abstract data type
returns the default class path
returns the default images path
returns the path to the default web pages
returns the default images default image url
returns the list of types
returns the path to the default web pages
returns the default path for the default rules
returns the generic type of the list
sets the objects
adds a vector of objects to the list of objects
returns the
returns the object object associated with the given object name
returns a new key object for the given type
returns a new key object of the current user
returns a new object that can be used to create new
returns the list
removes the object from the list
add an object to the object
removes an object from the object
sets the current object
sets the current object to the first object
sets the last element in the list
returns the
increases the current index and increments the index to be the next
increases the current index and increments the previous object
checks if the given object is a valid object
checks if the given object name is already in the list
returns the type of the list of items
returns the default format date format
returns the type of the list
returns the date format for the specified date
returns the date from the format
returns the date as a string
returns the date in milliseconds
format date time
returns the list of word words
returns the number of words in the word
execute query query result
creates a new class
deletes a statement from the database
creates a link to the given statement
checks if the given link is a link
deletes a link from the database
creates a class for the given sql statement
deletes a class
returns the number of in the given word
returns the index type of the given word
deletes a class object from the database
returns the index of the word at the specified index
creates the class object for the given sql statement
deletes a shapefile object
select a single select results object from the given select statement
the context of the context
returns the connection
sets the
sets the
sets the synonyms of the given word
sets the
returns the value of the specified attribute
returns the maximum value of the given value
returns the maximum value of the given array of double values
returns the value of the policy as a double
returns the value of the specified observation
returns the state of the given cell
start the agent
end the of the agent
cleans up the agent
p this method is used to create a new instance of the
save the value function
load the value function
returns a new instance of the specified step
sets the random number of the next
returns the observation state of the given state
returns the current state of the state
returns the number of variables in the current state
returns the url for the url for the url
returns the reward
reads the object from the input stream
reads the object from the input stream
this method is called whenever the observed object is changed
prints the current state of the game
generates a random number of the generator
returns the state of the y coordinate at the specified coordinates
this method is called when the observed object is changed
returns the reward
returns true if the goal is in goal region
returns a new instance of the specified step
returns the maximum value of the given variable in the world
returns the minimum value for the given dimension
returns the number of variables in this database
returns the url for the image
returns a new instance of the specified step
returns the maximum value of the variable in the given dimension
this method is called when the observed object is changed
returns the minimum value for the given dimension
updates the controller
returns the url for the url in the
sets the event repository
sets the building repository
sets the view count
gets the value of the image dto property
sets the image dto dto
gets the value of the main file url property
sets the main file url
returns the thumbnail url url
sets the thumbnail file url
sets the longitude
gets the value of the location dto property
sets the location dto
returns the event dto
sets the event dto
returns the context
returns the bean factory
sets the latitude
sets the building of the building
returns the main file
sets the main file
returns the thumbnail file
sets the thumbnail file
sets the event event
returns the type of this building
sets the type of this building
sets the location of this location
sets the events
this method initializes this
this method initializes id
this method initializes nome
this method initializes ok
this method initializes texto
this method initializes j scroll pane
this method initializes
this method initializes buscar
this method initializes btn
this method initializes btn
this method initializes btn
this method initializes btn conn
this method initializes this
this method initializes nome
this method initializes cpf
this method initializes
this method initializes btn
this method initializes remover
this method initializes
this method initializes data
this method initializes
this method initializes end
this method initializes end num
this method initializes end cep
this method initializes btn
this method initializes this
this method initializes
this method initializes por data
this method initializes inicio ex
this method initializes btn
this method initializes e
this method initializes por
this method initializes
this method initializes
this method initializes tipos
this method initializes
this method initializes inicio i
this method initializes
this method initializes this
this method initializes btn
this method initializes id
this method initializes nome
this method initializes ok
this method initializes this
this method initializes id
this method initializes nome
this method initializes end
this method initializes end numero
this method initializes end cep
this method initializes j tabbed pane
this method initializes this
this method initializes tipo
this method initializes n
this method initializes tipo
this method initializes
this method initializes j jmenu bar
this method initializes j menu
this method initializes
this method initializes j menu1
this method initializes
this method initializes
this method initializes
this method initializes this
this method initializes j content pane
this method initializes j scroll pane
this method initializes lista
this method initializes this
this method initializes
this method initializes
this method initializes data
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes this
this method initializes login
this method initializes senha
this method initializes texto
this method initializes j scroll pane
this method initializes
this method initializes this
this method initializes j content pane
this method initializes j scroll pane
this method initializes texto
this method initializes this
this method initializes fechar
this method initializes buscar
this method initializes
this method initializes btn sair
this method initializes this
this method initializes this
this method initializes id
this method initializes
this method initializes matricula
this method initializes j scroll pane
this method initializes j text field
this method initializes
this method initializes ok
this method initializes this
this method initializes j content pane
this method initializes lista
this method initializes j scroll pane
this method initializes
this method initializes j button1
this method initializes j text field
this method initializes
this method initializes j content pane
this method initializes
this method initializes nome
this method initializes
this method initializes this
this method initializes j content pane
compares this object with another
sets the pool maximum number of connections
sets the pool maximum idle connections
sets the pool maximum checkout time
sets the pool time to wait for the pool
sets the pool ping query
sets the pool ping enabled flag
sets the pool ping pool
returns the url for the given resource
returns the url for the given resource
returns a resource as an input stream
returns a code input stream code for the specified resource and classloader
execute a sql update delete statement
deletes the specified query
execute a sql statement
returns true if the given property contains the setter
checks if the given property is a getter
returns the sql statement that is used to execute the sql sql
returns the statement id
processes all statements in the cache
extract the namespace from the given namespace
test the
test the
returns the property type for the given object
returns the property type for the given object
returns the type of the getter for a getter getter
returns the type of the setter setter getter for setter methods
adds a new handler to the list of registered listeners
parse the document
returns the setter for the given property
returns the getter getter for property name
parse the given node
process a node
returns the type of the property
returns the type of the getter property
returns a list of the page with the given id
creates a new paragraph
before the rtf document writer
after the rtf writer after closing the current rtf writer
write the rtf prefix to the current rtf writer
write the rtf suffix to the current file
write rtf content to the rtf writer
write the rtf suffix to the rtf writer
write the rtf suffix to the rtf writer
creates a new table cell
write rtf suffix code
returns the builder for the given attribute
start the html document
returns the rtf color for the given code code
returns the builder for the given attribute
returns the rtf color for the given code code
start the processing of the document
returns the builder
start the paragraph
returns the value of the attribute org
the code code method is used to create the
returns the value of the products options values id property
gets the products options id
sets the products options values
sets the products options id
returns the language id
sets the language id
gets the value of the id property
gets the products options name
sets the products options value for this admin tax
sets the id
sets the products options name
returns the value of the products options values to the item
returns the products identification
sets the products options values to the specified value
sets the products id
gets the value of the new products property
sets the price
returns the date added by this item
sets the date added
returns the expires date
returns the products identification attributes
sets the expires date
sets the products attributes id
returns the date the date was changed
sets the date the date was changed
returns the options id
sets the options id
returns the options values id
sets the options values id
gets the value of the options options price property
sets the value of options values price
sets the price prefix value for this merchant item attributes
returns the products name
returns the products options
sets the products name
sets the products options
returns the products description
sets the products options value for this admin tax settings
sets the products description
returns the products url
sets the products url
returns the current tech time
invoked when an expanded tree is expanded
reloads the model from the model
reloads the model
gets the id
sets the id
gets the languages id value for this admin document
sets the languages id
sets the value for this
sets the id
sets the name value for this
sets the image value for this image
mouse pressed method
setter for property info
invokes the code update table model code method of the
gets the value of the categories id property
sets the categories id
overridden to clear the tree
sets the categories name value for this theme
sets the bounds of the tree
reloads the model
sets the category id
sets the categories image value for this theme
returns the parent id of the parent
this method is called when the user selects the
returns the categories desc
sets the categories desc
sets the products value for this
gets the countries id
gets the zone country id
sets the countries id
sets the zone country id
sets the countries name value for this
sets the zone code value for this fwtproperty
sets the zone name value for this
sets the countries iso value for this
sets the countries iso value for this
gets the address format id
sets the address format id
invoked when a mouse button has been pressed on a component
sets the code value for this
this method is used to supply a query object
sets the image value for this image
sets the directory value for this generated type
this method is used to supply a query object
returns the property text value for the given property
invoked when the user enters a drop target
called when the drag exit is dropped
invoked when the drag operation is ongoing while the drag operation
called by the framework when the reload
invoked when the user has changed
called when a gesture is detected
called when the drop is ended
invoked when the drag enters
called when the drag operation is ongoing
called when the drag operation is over the drag source
this method is invoked when the user changes the action
returns the background color for the image
gets the orders status id
sets the orders status id
sets the orders status name value for this order status
returns the orders products id
sets the orders products id
returns the orders id
sets the orders id
sets the products model value for this
sets the products name value for this product
returns the products price
sets the products price value for this offer listing
returns the value of the pay pal field code final price code
sets the final price
gets the products tax value for this tax reply
sets the products tax value for this tax reply
gets the products quantity
sets the products quantity
sets the orders products value for this order
sets the products options name value for this product
gets the orders status history
returns the customers info id
sets the orders status history
sets the customers info id
sets the customers info date of this customer
gets the customers info number
sets the date added
sets the customers info number
returns the customer notified the customer discovery
sets the customers info date account value for this customer info
sets the customer notified customer value for this admin customer
sets the customers info date account value for this account info
returns the global global notifications value for this admin search response
sets the global global notifications notifications property
gets the orders status
sets the orders status
sets the value of the date added property
sets the last modified value for this
sets the expires date
returns the total number of orders
sets the orders total id
sets the date status change value for this
sets the ip address value for this address
sets the clazz value for this
sets the time entry value for this asset
sets the time last click value for this item attributes
sets the last page url value for this
returns the customers id
sets the customers id
sets the customers name value for this customers
gets the categories
sets the categories
sets the products value for this
sets the customers company value for this company
gets the orders products id
sets the orders products id
sets the customers street address value for this customer
sets the products options value for this admin order
sets the customers value for this
sets the products options value for this admin tax settings
sets the date added value for this
gets the value of the price prefix property
sets the customers city value for this customer
sets the last modified date of this object
sets the value of price prefix
sets the customers postcode value for this customers
sets the customers state value for this customer
sets the customers gender value for this
sets the customers first name value for this customers
sets the customers country value for this customer
sets the customers last name value for this customers
sets the customers
sets the customers telephone telephone value for this customer
sets the customers email address value for this email
sets the products id
returns the customers customers id
sets the customers customers id
sets the products quantity
gets the customers address format id
sets the customers fax value for this customers
returns the products model
sets the customers address format id
sets the products model
sets the customers password value for this email
returns the products image
sets the customers newsletter value for this admin customer
sets the delivery name value for this merchant item attributes
returns the customers info
sets the products image
sets the customers info
sets the delivery company value for this offer listing
setter for property address book
gets the address book id
sets the address book id
sets the delivery street address value for this admin address
sets the products price value
gets the value of the products date time property
sets the delivery value for this merchant item attributes
sets the street address value for this address
sets the value for this
sets the post code value for this
sets the date added property
sets the delivery city value for this delivery status type
returns the last modification date
gets the country id
sets the country id
sets the timestamp of the last modification time
sets the delivery postcode value for this message
returns the date of the
sets the delivery state value for this delivery status type
gets the value of the countries property
sets the value of date available
sets the countries
returns the zones zones
returns the products weight of the products
sets the delivery country value for this ccauth reply
sets the zones
sets the products weight
returns the delivery address format id
returns the products status
sets the delivery address format id
sets the products status
sets the products name
gets the products tax class id
sets the billing name value for this admin customer
sets the products tax class id
sets the billing company value for this admin order
sets the billing street address value for this admin address
this method is used to supply a query object
sets the billing value for this admin customer
returns the products ordered ordered by
sets the products ordered value for this product
sets the billing city value for this admin customer
sets the products description value for this seller description
this method is used to supply a query object
sets the billing postcode value for this admin customer
set the value related to the column
sets the billing state value for this admin customer
returns the categories desc
sets the billing country value for this admin customer
gets the billing address format id
returns the products level of the products
sets the billing address format id
sets the products level
returns the products of the products defined in the database
sets the payment method value for this merchant item attributes
sets the products level col
sets the cc type value for this merchant item attributes
sets the cc owner value for this
returns the current billing
sets the cc number value for this offer listing
returns the source of the event
sets the data for this object
sets the cc expires value for this offer listing
sets the last modified date of this object
returns the editor
gets the value of the prod property
returns the
gets the value of the prod property
sets the date
gets the value of the prod property
gets the value of the prod property
returns the order status
gets the value of the prod spec property
sets the order status
gets the value of the prod spec property
returns the editor
returns the customers
returns the customers
returns the customers
setter for property date finished
returns the image
returns the image
returns the current data
sets the data for this object
sets the currency value for this item attributes
returns the value of the currency value
sets the value of currency value
sets the order products column value for this order
sets the orders status history column value for this history
sets the orders total col value for this order
sets the address view
returns the component that is currently selected in the table
returns the renderer for the given table
sets the delegate
delegate to delegate to
creates a new default id box
constructs a new model
creates a new tree model
creates a new default model
creates a new control with the given control
constructs a default control
show the panel
returns the value of the cell editor
creates an instance editor for the text field
when the cell is changed
returns the value of the editor
returns the value of the cell editor
returns the component responsible for editing the table cell editors table
returns the value of the cell editor
when the cell is clicked
returns the value of the cell editor
returns the text field to be used by the text field
sets the text field to be used for the text field
returns true if the properties table is editable
sets the editable property
initializes the ui
creates the panel that contains the panel
switches to the card card card
registers a new component
creates the panel to add the panel to the panel
returns the value for the cell at code column index code and
sets the definition value for this competency
sets the sid value for this
returns the number of children of code node code
returns the child of the specified node
returns true if the given node is a leaf
returns the column name
returns the type of the column
returns the value for the given column and column
returns true if the given cell is editable
registers an event with the specified id
handle the event indicating that the data changed event has occurred
sets the default child value for this
creates a new instance of browse view
this method is called whenever the value of the selection changes
returns the column name
runs the action
disposes the toolkit
returns the text of the element
returns the balance of the account
returns the minimum amount of the payment
returns the amount of for the payment
returns true if the is
returns the charges of the charges
called by the framework to configure the properties
called by spring framework after the business method is called by the
load program from program
returns the label of the parameter
adds a command to the list of commands
sets the dump of the map
returns the index of the label in the list
returns the current command
returns the command
sets the command
returns a command instance for the given command type and type
this method initializes this
sets the scan line spacing
initialize the
clips the current clip to the current clip
sets the size of the list
returns the maximum number of
returns the minimum number of
returns the mean gray value
filters the image
returns the filter
writes the current image as a png
adds a to the sequence
the sequence of
start processing the processing of the current document
reverts the image to the previous image
discards the current image
saves the current image to the current file
eat the
saves the current image as a image file
registers an input stream
registers the given output stream to be used for the output
registers the specified image display
registers the given code code
displays the toolbox panel
exits the application
the fly
the
the
this method is called when the user presses the end of the
loads the file
compares this object with the specified object for order
returns the file extension for the given file
returns the file extension for the given file
reads the lines from the file
reads the lines from a file
reads the given file from the file
concatenates the given files in the list of files
this method reads the number of lines in the specified buffer
checks if the value is not empty
concatenate the given string and replaces the result of the
concatenates the given string and returns the result
concat the
sets the certificate
returns the default interceptor configuration
stops the connection
returns true if the component is available
returns the header name
returns the header value
skip the current token
discards the current token
insert a new value in the stream
changes the value of the property
pump the given number of bytes in the buffer
writes the header to the given stream
sets the right component of the panel
sets the right component of the right hand side of the panel
removes all the selected items from the list
resets the history
handles the connect request
builds the button
creates the text field
build the frame file containing the contents of the frame
returns the connect url
build the connect properties
returns a string representation of the object
adds a header to the header
builds a header response
returns a string representation of this object
constructs a new connect settings bean
opens a connection to the database
this method is called when the server is destroyed
returns the jtext field
invoked when a key has been pressed
returns the previous session history object
test example
shuts down all modules
this method is called after deserialization is loaded
returns the session
closes the current session
returns the user object
this method initializes empty area
this method initializes this
this method initializes j content pane
this method initializes login button
this method initializes button panel
shows a button with the specified name
cleans up the user logs
this method is used to handle the response of the server
this method initializes exit button
validates the model
sets the message
sets the user name
sets the password
sets the password to be used for the password
sends the login event to all listeners
this method initializes password field
adds a login listener to the login listeners
initializes the factory
returns the error message for the given cron expression
returns the section
returns the voice of this voice
sets the similarity settings for this instance
returns the override section settings
sets the override section settings
increments the mod count
returns true if the voice should be used to enable settings
sets whether the default browser settings should be set
returns the section settings
returns the settings section
returns true if the piece is a wide scale
returns the denominator of this rational
returns the voice settings
sets whether the override scales scales
sets the denominator
returns the scale
returns the value of the rest flag
returns the numerator of this rational
sets the scale
sets the rest of the request to be used for the rest
sets the numerator
returns the denominator power of this
normalize the element
returns the voice for voice preview
returns the string representation of the current value
clears the cached cached for the section
returns a string representation of this
returns true if the duration of this object can be used to
returns the section key signature
returns the midi time signature event
removes the voice section
sets the possible similarity settings for all voice sections
returns the similarity number of iterations
returns the fraction of the fraction of this fraction
sets the similarity between the and the given number of iterations
returns true if the of the pitch is possible to change
returns the default settings for this
returns the offset of the scale step
sets the scale offset of the current scale
gets the volume adjustment
returns the apply
sets the
returns the voice sections
returns the apply
returns the string
sets the
returns the of the octave
sets the of voice to all voice sections
returns the tempo of the music
clears the page of the voice
returns the settings for this application
gets the instrument name
returns the name of the midi
sets the tempo of the
sets the instrument name
returns a string representation of the
returns the scale of this object
this method is unsupported in the subclass
returns the midi volume
returns the dynamic level of the dynamic level
returns true if the should be generated for the
sets the layered
returns true if the should be generated by the
sets the generate layered
creates a new rest
gets the value of the instrument property
sets the instrument
sets the time signature of this object
returns the letter number of the letter
returns the duration of the duration
normalize the whole array of all the elements in the array
update the scale of the scale
returns the number of in the
returns the part of this part
returns the source voice for this event
returns a copy of the list of all the
returns the key signature for this signature
returns true if the part of the part of the part of
creates a new section and add it to the ini file
returns the last section part of the section
returns the last section signature key
returns the notation element
creates the default settings
returns the string representation of the
returns the notation string
returns the element seperator
returns the octave of the current
returns true if the duration of the clipped component supports
sets the element seperator
helper method to convert the notation to a string
returns a notation string representation of the notation
creates the default ini file
returns the duration of the duration of the current
scale the current scale
returns a notation string representation of the notation
sets the of the receiver
returns the string
returns the duration of the duration in milliseconds between
returns the string
creates the graphical sections
returns the piece
returns true if the duration of this dialect supports duration scaling
remove all the
returns the piece composer
creates the sections
removes the notes
sets the piece composer
returns the index of the end index for the given group
gets the piece title
returns the smallest possible duration of the note
sets the title of the piece
returns the part sections
returns the first key signature for the given element
returns the output
clear the sections
returns true if the duration of the duration is supported
create a new rest note
returns the part section
returns the segment adjustment adjustment
returns the
returns the duration of the duration
returns the letter name of the letter
gets the value of the time left in time bar property
returns the xml representation of the
returns the multiplier
returns the output
returns the key signature for this class
returns the string
returns the volume
gets the value of the time signature property
returns true if the first note in the is
returns the scale of this object
returns a string representation of the
returns the dynamic notation
sets the time signature for this code code
sets the dynamic notation
gets the value of the time signature fraction property
update the notes of the notes
returns true if the rest of the request is
sets the scale for the scale
gets the value of the include tic property
returns the notes element
returns the of the
returns the value of include tempo
returns the string
returns the string of this code code
returns the parts
returns true if the duration of the duration is supported
returns the octave transposition
returns a string representation of the
returns the string representation of the
returns the duration of the largest duration in terms of the duration
modifies the current duration
returns the string representation of the
returns the octave change
returns the transpose of the transpose of the differential equations
returns the transpose letter numbers
saves the content of the file to a file
sets the duration of the duration
gets the value of the scale factor property
apply a to the current
returns the settings for this instance
returns true if the duration of this object can be used to
saves the specified mp3 file
sets the volume of the
returns the midi midi midi
returns the current horizontal letter offset
returns the mode of the current note
returns the default key
checks if the given key is valid
returns the normalized adjustment for the given
gets the
returns the number of or
gets the value of the key name property
returns the sheet music creator
sets the source of the voice
returns a midi signature for a tick
returns the audio file creator
returns the piece
returns true if the player is a rest
returns the piece that is used for the piece
returns the pitch
returns the normalized notes number
sets the pitch of the pitch
returns the note number
returns the duration of the
returns the pitch number of octave pitch
sets the duration of the task
returns the letter of the specified character
sets the start time
returns the major key or
returns the number of interval in the given interval
returns the channel of the channel
returns the number of steps in the current voice
sets the channel
returns the note that was used to identify the event
returns the natural note for the given number of notes
returns the note of the note event
gets the
returns the duration of the first note in the end of the
gets the value of the note string property
throws unsupported operation exception
clears the note note note
saves the given file to the file
writer interface for writers
interface for handling of the work directory
creates a temporary file
saves the file
save a file to a file
parse the note string with the given name
returns a clone of this object
returns a string representation of this rational number
save the pdf file
save the content of the file
save the png file
returns the value of this rational as a double
returns the fraction of the fraction of this fraction
saves the png image file
returns the inverse of this fraction
save image gif image
returns the sum of the fraction of the fraction of the fraction
returns the sum of the number of occurrences of the specified number
save image to file
returns the difference between the fraction and the specified fraction
saves the given file in the file system
returns the difference between this number and the specified
returns the number of times the fraction is the second fraction
saves the specified file name to the file
calculates the number of times the fraction with the second fraction of
returns the fraction of the second value of the given fraction
returns the by the given number of the given
compares this object with another
compares this object with the specified long
compares this object with another one
returns true if the power supply is
returns the last name of the last file
returns the last pdf file name
returns the last png file name
returns the uri of the given uri
writes the current file to the file
returns the meta object for the reference
returns the meta object for the reference
returns the meta object for the attribute
creates an instance of the resource
returns the meta object for class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the meta object for the reference
gets the registrations resource
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the meta object for the reference
returns the meta object for the reference
returns the id of the attribute
returns the name of the attribute
returns the factory instance
returns the meta object for the attribute
stop the extension
returns the locator service
writes the error message to the given element
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
updates the title of the window
disconnect from the workspace
returns the meta object for the reference
creates the window menu
returns the meta object for the reference
this method is called when the scene is activated
sets the view
returns the dim dim of the given point
sets the scaling factor for the scale factor
returns the meta object for the attribute
clears the text in the text area
draw the current scene
disposes the resources
this method is called by the framework to initialize the canvas
adjusts the current state of the
returns the meta object for the attribute
returns true if the canvas has been disposed
sets the tolerance to the given value
sets the current
sets the focus
sets the offsets of the camera
activate the current frame
sets the rotation of the sprite
render the current scene
returns the meta object for class
clears the plots
adds a new importer to the list
sets the filter to be used for the plot
returns the image data for the specified resource
checks if the specified name exists in the list
returns the meta object for the reference
sets the background color to the current color
returns the axis name for the specified index
resizes the canvas
sets the labels
sets the units of the units
adds a new ruler to the list
expands the controls
returns the custom composite for the custom tab
resizes the scene
sets the plot data
sets the title
resizes the current scene
returns the meta object for the attribute
this method is called when the canvas is resized
draw the scene
returns the x coordinate of the x coordinate
returns the meta object for the attribute
returns true if the given name is already in the list
returns the y coordinate of the y axis value
sets the units
sets the perspective to perspective
sets the scaler
sets the scale factor for the image
returns the multiplication of this complex number
returns the multiplication of this complex number
returns the meta object for class
returns the name of the
sets the value of the code double code property
returns the number of complex complex numbers
update the scale menus
returns the subtraction of this complex number with another one
returns the mode of the current mode
resets the minimum length of the range
returns the of this object
returns the minimum spacing between the minimum and minimum value
sets the scale of the axis
returns the scale of the given rectangle
sets the mapping of the
returns the meta object for the attribute
returns the scale of the given value
returns the of the given x y value
returns the of the given y value
draw the specified mask
returns the meta object for class
returns the meta object for the reference
adds a new data to the
returns the meta object for the reference
add a new blank mask to the current text
returns the meta object for the attribute
returns the meta object for the attribute
reverts the current state of the mask
returns the meta object for class
load a mask from the file chooser
sets the mask of the current
returns the meta object for the reference
sets the masks
returns the meta object for the reference
sets the mask
returns the meta object for the reference
returns the factory that will be used to instantiate the factory
commits the current state of the
returns the meta object for the attribute
sets up the stroke for the given
adds a listener to the listener list
returns the meta object for the attribute
sets the shape
p log a message with code level code
this method is used to acquire the code object code from the
p log an error with error log level
p log an error with debug level
sets the shape
p log a message with info log level
p log an error with info log level
p log a message with warn log level
p log an error with warn log level
p log a message with error log level
returns the meta object for the attribute
p log an error with error log level
p log a message with fatal log level
p log an error with fatal log level
returns the meta object for class
returns the meta object for the attribute
sets the mode
returns the meta object for the attribute
sets the
returns the meta object for class
this returns the property descriptors for the adapted class
this adds a property descriptor for the user feature
this returns the property descriptors for the adapted class
this adds a property descriptor for the field feature
this adds a property descriptor for the role feature
this adds a property descriptor for the direction feature
this returns
this adds a property descriptor for the affiliation feature
this returns the label text for the adapted class
this handles model notifications by calling
this returns the property descriptors for the adapted class
restore the mask
this adds a property descriptor for the address feature
this adds a property descriptor for the definition feature
return the resource locator for this item providers resources
this adds a property descriptor for the feature
this adds a property descriptor for the telephone number feature
this adds a property descriptor for the version feature
this returns
returns the meta object for the reference
this returns the label text for the adapted class
this adds a property descriptor for the fax number feature
this returns the property descriptors for the adapted class
this handles model notifications by calling
this adds a property descriptor for the email feature
this adds a property descriptor for the start time feature
this adds a property descriptor for the facility user id feature
this returns the property descriptors for the adapted class
this adds a property descriptor for the variable errors feature
this adds a property descriptor for the end time feature
this adds a property descriptor for the errors feature
this returns
this specifies how to implement
this returns the label text for the adapted class
this adds a property descriptor for the duration feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this handles model notifications by calling
this adds a property descriptor for the experiment identifier feature
this adds to the collection of
this returns
this returns the label text for the adapted class
returns the meta object for the reference
this adds a property descriptor for the run number feature
this returns the property descriptors for the adapted class
this returns the property descriptors for the adapted class
this returns the property descriptors for the adapted class
this adds a property descriptor for the name feature
this adds a property descriptor for the short name feature
this adds a property descriptor for the data feature
this adds a property descriptor for the run cycle feature
this returns
this adds a property descriptor for the axes feature
this returns the label text for the adapted class
this adds a property descriptor for the feature
this adds a property descriptor for the long name feature
this handles model notifications by calling
this adds a property descriptor for the signal feature
this adds a property descriptor for the program name feature
this returns
this adds a property descriptor for the feature
this returns the label text for the adapted class
this handles model notifications by calling
this adds a property descriptor for the command line feature
this adds a property descriptor for the feature
this returns the property descriptors for the adapted class
this adds a property descriptor for the notes feature
returns the meta object for the reference
this adds a property descriptor for the variable feature
this adds a property descriptor for the feature
this adds a property descriptor for the distribution feature
this adds a property descriptor for the first good feature
this adds a property descriptor for the thumbnail feature
this adds a property descriptor for the feature
this adds a property descriptor for the last good feature
this adds a property descriptor for the long name feature
this adds a property descriptor for the feature
this returns
this adds a property descriptor for the feature
this returns the label text for the adapted class
this handles model notifications by calling
this adds a property descriptor for the name feature
this adds a property descriptor for the feature
returns the meta object for the reference
this specifies how to implement
this adds a property descriptor for the feature
disposes the axis and removes the
this returns the property descriptors for the adapted class
this adds a property descriptor for the feature
this adds a property descriptor for the name feature
this adds a property descriptor for the chemical formula feature
this returns
this adds a property descriptor for the feature
this adds a property descriptor for the temperature feature
this adds a property descriptor for the feature
this specifies how to implement
this returns the label text for the adapted class
this adds a property descriptor for the feature
returns the meta object for class
this returns
this adds a property descriptor for the feature
this returns the label text for the adapted class
this handles model notifications by calling
this adds to the collection of
this adds a property descriptor for the feature
this returns the property descriptors for the adapted class
this adds a property descriptor for the feature
this adds a property descriptor for the distance feature
this adds a property descriptor for the type feature
this adds a property descriptor for the probe feature
this returns the property descriptors for the adapted class
this adds a property descriptor for the creator feature
this adds a property descriptor for the name feature
this adds a property descriptor for the file name feature
this returns
this adds a property descriptor for the feature
this adds a property descriptor for the file time feature
this returns the label text for the adapted class
this adds a property descriptor for the file update time feature
this handles model notifications by calling
returns the meta object for the reference
this adds a property descriptor for the version feature
this adds a property descriptor for the version feature
this adds a property descriptor for the ne version feature
this specifies how to implement
this returns
this specifies how to implement
this returns the label text for the adapted class
this returns
this returns the property descriptors for the adapted class
this adds a property descriptor for the field feature
this returns the label text for the adapted class
this adds a property descriptor for the direction feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this returns
this adds to the collection of
this returns the property descriptors for the adapted class
this adds a property descriptor for the data feature
this adds a property descriptor for the dimension feature
this returns the label text for the adapted class
this adds a property descriptor for the type feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
returns the meta object for the attribute
this adds to the collection of
returns the type
returns the execution state
returns the object type object
returns the execution state object
returns the protocol factory used by this factory
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
creates an instance of the resource
creates a new
returns the meta object for class
returns the package of the package
returns the meta object for the reference
this just records the information
create a new model
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the meta object for the reference
creates a new adapter for an object of class
the framework calls this to see if the file is correct
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
validates the item type constraint of em type em
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the label for the specified type name
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the meta object for the reference
validates the item type constraint of em em
this adds separators for editor additions to the tool bar
returns the meta object for the reference
this method initializes sash form
this populates the pop up menu before it appears
this method initializes vis composite
returns the meta object for class
returns the meta object for class
returns the meta object for the reference
handles activation of the editor or its associated views
returns the meta object for the reference
returns the meta object for class
returns the meta object for the reference
returns the meta object for the reference
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the package of the package
returns the meta object for class
creates a new adapter for an object of class
creates a new adapter for an object of class
validates the item type constraint of em type em
creates a new adapter for an object of class
get the factory
creates a new adapter for an object of class
returns the meta object for the attribute
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new resource
this specifies how to implement
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this adds to the collection of
returns the meta object for the attribute
returns the resource locator for this item providers resources
this returns the property descriptors for the adapted class
this adds a property descriptor for the out of range feature
this adds a property descriptor for the title feature
this specifies how to implement
this returns
this returns the label text for the adapted class
this handles model notifications by calling
returns the meta object for the reference
returns the meta object for the attribute
this returns the label text for
this adds a property descriptor for the name feature
this adds a property descriptor for the value feature
this returns
this returns the label text for the adapted class
this handles model notifications by calling
this returns the property descriptors for the adapted class
this adds a property descriptor for the axis feature
returns the meta object for class
this adds a property descriptor for the max feature
this adds a property descriptor for the min feature
this adds a property descriptor for the number of bins feature
this specifies how to implement
this specifies how to implement
this returns
this returns
this returns the label text for the adapted class
this returns the label text for the adapted class
this handles model notifications by calling
this handles model notifications by calling
this adds to the collection of
this adds to the collection of
this returns the property descriptors for the adapted class
this adds a property descriptor for the feature
this returns the property descriptors for the adapted class
this adds a property descriptor for the order feature
this adds a property descriptor for the overflow feature
this returns
this adds a property descriptor for the number feature
this returns the label text for the adapted class
this returns
returns the meta object for the reference
this handles model notifications by calling
this returns the label text for the adapted class
this handles model notifications by calling
this adds a property descriptor for the title feature
this returns the property descriptors for the adapted class
this specifies how to implement
this adds a property descriptor for the dimension feature
this adds a property descriptor for the type feature
this adds a property descriptor for the value feature
this returns
returns the meta object for the attribute
this returns the label text for the adapted class
this returns the label text for the adapted class
this handles model notifications by calling
this handles model notifications by calling
returns a diagnostic describing the errors and warnings listed in the resource
returns the meta object for the reference
returns the meta object for the reference
returns the meta object for the attribute
returns the meta object for the reference
returns the meta object for the reference
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the reference
returns the meta object for the reference
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the reference
returns the meta object for the attribute
returns the meta object for the reference
returns the meta object for the reference
returns the meta object for the attribute
returns the meta object for the reference
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
removes the last component from the current diagram
returns the meta object for class
undo the nth undo
returns the meta object for the attribute
returns the meta object for the reference
returns nth value of the element
returns the
this accesses a cached version of the property sheet
removes the specified object from the
gets the value of the out of range property
returns the meta object for the attribute
returns the array
sets the mask mode for this component
returns the histogram factory
returns the meta object for the attribute
sets the minimum value for the range
returns the meta object for the attribute
sets the maximum value of the range
sets the minimum value for the slider
returns the meta object for the attribute
sets the maximum value for the maximum value
returns the meta object for the attribute
notify all registered listeners of the
returns the meta object for the attribute
adds a listener for the mask update listener
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the reference
returns the meta object for the reference
returns the meta object for the reference
returns the meta object for the reference
returns the meta object for the reference
returns the meta object for the reference
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the reference
returns the meta object for the reference
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for class
returns the meta object for class
returns the meta object for the reference
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the reference
returns the meta object for the reference
returns the meta object for the reference
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for class
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
returns the meta object for the attribute
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
gets the value of the property
returns the nexus factory
returns the order by relevance
sets the search environment
sets the radius location of the radius
returns the restrictions for the current locale
returns the restriction for the given restriction
clears the point
clears the current bounding box
sets the media source media source
returns the selected fields
sets the selected fields
returns the representation of the time representation
returns the representation of the
sets the query page
sets the date
returns the url of the feed
notify the listener state changed
notify the that the error has occured
notify the listener that the audio is resized
sets the attribute of the object
sets the url attribute of the url object
sets the flag
sets the play mode
sets the loop
show full menu
sets the quality of the audio
sets the scale to be used by this object
sets the alignment of the component
sets the
sets the
sets the background color of the background
sets the background color of the
sets the border
set the background color of the
sets the background color of the background
set the flash
sets the
this method initializes jb
this method initializes j scroll pane
this method initializes j editor
this method initializes this
this method initializes this
this method initializes this
this method initializes b aceptar
this method initializes titulo
this method initializes titulo
this method initializes tabla
this method initializes boton add
this method initializes boton
this method initializes boton
this method initializes this
this method initializes j
this method initializes tabla cliente
this method initializes c buscar
this method initializes campo id
this method initializes j content pane
this method initializes campo
this method initializes titulo
this method initializes b aceptar
this method initializes boton cliente
this method initializes boton
this method initializes b
this method initializes titulo
this method initializes boton
this method initializes titulo
this method initializes combo pago
this method initializes titulo
this method initializes boton
this method initializes boton
this method initializes boton
this method initializes this
this method initializes titulo
this method initializes tabla
this method initializes titulo
this method initializes tabla
this method initializes b anterior
this method initializes boton
this method initializes b
this method initializes jtf servidor
this method initializes boton
this method initializes this
this method initializes boton
this method initializes this
this method initializes titulo
this method initializes tabla
this method initializes c base
this method initializes fecha
this method initializes c descripcion
this method initializes boton add
this method initializes combo tipo cliente
this method initializes titulo
this method initializes c
this method initializes boton
this method initializes tabla
this method initializes c stock
this method initializes titulo
this method initializes boton add
this method initializes c referencia
this method initializes combo tipo
this method initializes boton
this method initializes c nivel
this method initializes b
this method initializes c
this method initializes b add articulo
this method initializes c nombre
this method initializes b aceptar
this method initializes c dni
this method initializes b cancelar
this method initializes c
this method initializes jtf
this method initializes c cuenta
this method initializes jb
this method initializes c fecha
this method initializes titulo
this method initializes jtf login
this method initializes password
this method initializes jb
this method initializes j scroll pane
this method initializes j
this method initializes jtf mi mi
this method initializes this
this method initializes j scroll pane1
this method initializes tabla
this method initializes j scroll pane
this method initializes this
this method initializes tabla
this method initializes j content pane
this method initializes j
this method initializes jtf nombre
this method initializes b
this method initializes jb
this method initializes b
this method initializes j scroll pane
this method initializes jtf
this method initializes this
this method initializes j content pane
this method initializes this
this method initializes
this method initializes j scroll pane
this method initializes this
this method initializes
this method initializes j
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes j tabbed pane
this method initializes
this method initializes
this method initializes jtf servidor
this method initializes
this method initializes
this method initializes jtf
this method initializes
this method initializes
this method initializes
this method initializes jb
this method initializes
this method initializes
this method initializes
this method initializes j scroll pane1
this method initializes titulo
this method initializes jtf nombre
this method initializes jb nuevo
this method initializes this
this method initializes b
this method initializes this
this method initializes jt
this method initializes this
this method initializes j tabbed pane
this method initializes jp
this method initializes
this method initializes this
this method initializes j content pane
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes j
this method initializes
this method initializes
this method initializes
this method initializes jb
this method initializes this
returns the centroid of the current document
returns the radius of the document
returns the distance between the given and the centroid
calculate the distance between the and the
returns the similarity between the centroid and the centroid of the given
writes the file to the output stream
returns the search text
recover from persistence
stores the data in the database
close the object
close the
returns the size of the lock
clear the lock
returns the size of the list
initialize the server
close the
clear the lock
returns the time in seconds
refresh the display for the played
closes the socket
returns the ip address of the ip address
sets the vertex data
returns the position of the
returns the vertex data
sets the radius of the circle
returns true if buffer is attached to the buffer
returns true if the map is generate a map
returns the normal of the plane
sets the center of the circle
combines two points with the same coordinates
insert a render pass into the given render
this method is called to make the perspective perspective in the perspective
sets the plane equation to the specified plane
removes a render pass
returns the number of render pass
returns the render pass at the specified index
updates the tree
sets the plane
returns the vertex shader
returns the fragment shader
sets the transpose of the
sets the plane to the plane
returns the bounding sphere of the bounding sphere
returns the transpose of the matrix
sets the model matrix
begin uml doc
returns true if the frustum plane conic is in the current frustum
returns true if the given coordinate is
returns the shader program
returns the matrix of the matrix
sets the uniform value for this component
checks if the given point is on the
returns true if the point is inside the plane
removes a uniform from the list of registered
returns the uniform uniform with the specified name
returns the number of levels of the specified cube
returns the line intersection of two planes
returns the intersection of the given ray
returns the projection matrix
returns the pixels for a specific cube
returns the intersection of the given ray
sets the camera matrix for this camera
this method is called when the image changes
returns the projected projected projected projected
returns the camera matrix
returns the internal format of the internal format
tests the equality of this plane
returns the value at the specified index
returns the transformed transformed matrix from another plane
sets the texture environment
trims the array size to the size of the array
called when the state of the has changed
returns a string representation of this object
returns a string representation of this object
returns the texture env texture
clears the array
trims the capacity of this array to the size of the array
sets the enabled state of this component
returns true if the given object is the default
returns a string representation of this object
transfers the specified target to the target
returns the draw buffers
returns true if the maps
adds a new code gl20 resource code to this group
sets the shader
update the world bounds of this sphere
removes a code gl20 resource code from the list of
sets the minimum filter
removes a shape from the canvas
invoked when the target of the model has changed
invoked when the state of the state changes
sets the magnification filter
this method is called when the texture is changed
draws the list of objects in the current playlist
this method is called when a texture is changed
transfers the specified shape to the queue
sets the maximum
returns true if the is enabled
flushes the current buffer
render the scene
returns the maximum
returns the client state
sets the wrap text
destroy the native resources
sets the face
handle the of the
returns the wrap wrap
adds a code gl20 resource code to the front of the
called when the has changed
render the model
returns the face
deletes this object from the current position
sets the wrap wrap
removes a shape from the list of layers
returns the wrap wrap
sets the front face of the front face
sets the wrap wrap
returns the wrap wrap
returns front face face
invoked when the state of the state changes
sets the transform to be used for this transform
gets the value of the type property
adds a child to the tree
sets the render type
removes the child from the tree
sets the lower range of the range
sets the lower left corner of the axis
returns the matrix of the current matrix
sets the upper corner of the range and upper corner of the
adds a shape to the tree
sets the upper left corner of the upper left corner of the
returns the number of shapes in the current shape
returns the shape of the given shape
returns the root node of the tree
sets the blending src func
sets the render target
returns the render target
helper method to find all shapes in the tree
gets the value of the blend src func property
sets the clear mask
update the scene graph
notify the listener that the state of the
returns the clear mask
sets the clear color
returns the color used to paint the color
sets the blend mode for this
sets the value of the cleared depth property
returns the depth of the
sets the clear stencil
gets the value of the blend dst func property
returns the clear stencil
sets the light state
returns the light state
sets the depth test enabled property
returns true if the depth test is enabled
sets the depth func
returns the depth func
sets whether the depth of the output is enabled
returns true if the depth of the writer is enabled
sets the tex texture mode
returns the tex texture mode for the texture
sets the tex texture coordinates
returns true if the texture is enabled
notify the state of the state of the owner
sets the material to be used for this material
sets the ambient color of the
sets the diffuse color of this code code
returns the diffuse color of this material
sets the specular color
sets the color of the
returns the emission color
sets the shininess
updates the display
generates the display list
handle the variable element
returns a copy of the drawing surface
loads the drawing from a given file
creates a new instance of
returns the applet information
creates a new parameter bag
returns the next piece of the work
run the game
returns the next piece of the piece
creates a new data object from the specified
saves the element to xml
returns a string representation of the object
adds a task listener to this task
sets the map of peak map
exports the file to the specified file
returns the index of the specified intensity in the
exports the data in the file
refresh the ui
load the structure from the given structure
sets the url to the given url
returns the histogram for a series
returns the highest intensity of the given mz data
returns the drawing supplier of this object
handles the action event
notifies the table model that the model has changed
when the sorter is changed
returns the selected peak
returns the row at the specified position in the matrix
creates and returns a new
finds the map with the given type
sets the maximum intensity of the range
creates and returns a panel for the graphics mode
sets the default selection
returns the color of the color
returns the data point at the given scan number
returns a string representation of this object
adds a peak between the peak and the specified value
returns the last mz peak
returns true if the map should be used for use in the
returns the name of the
returns the use
sets the current scale to the current value
returns true if the given point is in the current
returns the current peak status
returns the of the
returns the data point at the specified scan number
returns the start region
returns the stop region
returns the site
returns the query number
returns the ion score
gets the value of the type property
sets the raw data file
returns the mass expected expected in the mass
gets the value of the property
returns the missed
gets the value of the ion series property
returns the section of the specified peptide
returns the number of
sets the scan
gets the value of the precursor mass property
returns the precursor charge of the precursor ion
returns the value of the code fragmentation code property
sets the significance threshold
sets the fragmentation
returns the significance threshold
sets the modification of the
sets the ion series
sets the name of the file
returns the protein
gets the number of peptide queries
sets the protein
sets the number of peptide queries
returns the identification method
adds a raw data file to the list of raw data
sets the value of the identification method property
returns the parameters hash map
returns the name of the
sets the parameter value
adds a new modification to the list of modification
sets the default mass of the given mass
returns the protein with the given name
adds a new serie to the list of series
adds a protein name to the protein
returns the peptide scan for a given query
adds a to the query
get the tolerance tolerance of the
returns the mass error
returns the total number of
returns the raw data file
adds a peptide to the list of peptide
gets the value of the isotope pattern score property
sets the isotope pattern score
gets the isotope pattern
sets the value of the code isotope pattern code property
returns the search
run a search command
adds a new row to the list of fragment
removes the series and sends a
returns the peak list of the spok spectrum object
this method is called when the user selects a cone
returns the aligned row
returns the k value of the
returns the error for the given
adds a new peak to the list
returns the data point at the specified scan number
calculates the of the given x and y
sets the mz value for this
returns the metadata for the given field
returns the text of the element
returns the text of the element
initialize the peak list
saves the version information to the file
sets the status text
returns the url for the given url
returns true if the url is a url
returns the id of the url that is associated with the given
returns the number of data files in the data
returns the number of rows in the list
returns the number of peaks in the list
returns a specific row at row row
gets the value of the peak status property
get the best pattern for the first matching peaks
returns the peak that is currently in the peak list
returns the data point at the given scan number
returns the data that this file is being created
adds a new parameter to the table
removes the parameter from the list of parameter values
returns the parameter with the given name
returns a file object representing the file
returns the file that is used to save the file extension
returns the exit code
invoked when an action occurs
registers the given component
invoked when the mouse exits a component
invoked when a mouse button has been pressed
invoked when the mouse button has been moved on a component
adds a component to the panel
returns true if the given peak is a legal row
checks if the given range is smaller than the minimum value
copies the input stream to the input stream
returns true if the range contains the specified range
checks if the given value is within the range
returns true if the range is within the range of the range
extend the range of the value
extends the extension to ensure that the given value is
updates the minimum size of the panel
returns the size of the range
returns a string representation of this object
returns the average of the current value
returns a string representation of the object
this method is called when the user selects the
compares this range with the specified object for order
closes the dialog
called when the user modifies the parameters
sets the value of the selected property
sets the choices
adds a button to the panel
returns the task that this task is running
initialize the module
adds a task listener to this task
notifies listeners that the task has been fired
finds the clock task for the given task
get sql string for a sql query
get the sql for the sql query
p this method is called at the end of processing the tag
generates the html tag
write a context to the page
generates the html tag
initializes the filter
get general code list
returns a list of all the
clears the
accepts a visitor
searches the branch matcher with the given code node code
sets the select str
this method creates a parent of a given parent object
returns a session factory for the session factory
returns the string representation of this object
sets the system id
gets the system id
returns the system identifier for the system
returns the content id of the content id
returns the content location of the content of the content
returns the content type of the content of the content
sets the system id of the file system
registers a specific mapping for the type specific mapping
registers a specific mapping for the type specific mapping
registers a specific schema type specific mapping
returns the options
sets the options
clears the options
this method is used to get the options
this method is unsupported by
clears the options
generate a new
writes the contents of the entry
returns the print writer for the given file
writes the header of the file header
writes the body of the operation
writes the footer of the file footer
returns the extends text field
returns the text of the current element
writes the fields of the current member to the current
returns an iterator over the services deployed in this service
writes the method to string
returns the value of the given key
writes the service name to the server
writes the ports to the server
write the body of the file body
generate the
returns the text of the current element
registers a file with the given name
this method is called by the service manager to set up the
writes the header comments
write the package name to the output stream
returns the field as a string
sets the factory class
adds a new to the registry
sets the header part of the given header
returns a xml element representing the type of the given type
returns the namespace for the given type
writes the import definition
writes the content of the element to the namespace
binds the binding to the binding
sets the type of the given type
sets the fault body type map
writes a type qname
returns a string representation of the object
initialites this action
refresh global options
returns true if the given type is nullable
returns the remote port
returns the property value for the given property name
insert the document fragment
sets the session to the session
returns an iterator over the ports of this service
returns the client engine
sets the value of a scoped scoped property
returns the scoped scoped scoped object property with the specified name
removes the specified scoped scoped scoped scoped scoped scoped scoped scoped scoped
gets the value of the type name property
resets the stream
reads the next byte of data from the input stream
returns the content of this message
reads the contents of the given array of bytes
sets the root part of this
returns the content length of the request
ensures that the input stream is valid
sets the delegate
returns the delegate
checks if the given type is registered as a java
get the content type of the attachment
returns the number of attachments in the
removes all attachments from the
returns the qname of the given class
returns the qname for the given class
returns the class of the given type
writes the schema element to the schema
make a new value object
returns the general purpose for the given mechanism type
returns the constructor that is used to instantiate the given class
returns the serializer for the given type
returns a serializer for the given class
returns an iterator for the supported mechanism types
returns the method for the serializer
initializes the
returns a general deserializer for the given mechanism type
returns a general deserializer for the given mechanism type
returns the deserializer for the given type
returns a method for the given class
completes the current state of the model
registers the default mapping for the given mapping
returns the type mapping for the specified style
returns the code method code of the deserializer
get the default version of the soap service
initializes the factory
initializes the factory
load an image from the given input stream
returns the content length of the request
returns the size of the content
adds a fault code to the fault code
writes the current content of the current element to the given writer
writes the content of this object to the given output stream
returns the content description of the header
sets the current form
save changes to the current document
returns an iterator over the attachments
returns an iterator over the attachments of the message
creates a attachment part
populate the services definition
end the document
returns the default type mapping
this method is called when the user modifies the context
write a details of the details
returns the actors list
returns a map of the property descriptor for the property
returns the port type qname
sets the port type name
returns the server engine configuration
checks the configuration file
get the service with the specified qname
adds a new detail entry to the database
creates a new code soapmessage code object
returns the content type of this content type
returns the encoding style used for this object
parses the time and parses the time
parse the date
convert the value to a long value
removes a child message from the list of children
compares this duration to another object
returns the value as an object
sets the value of the code node code as a code string
pushes the top level stack onto the stack
removes the top level stack and discards the stack
returns true if the property is a boolean
returns the value of the element
detaches the node from the parent
returns the output values
reads the next byte of data from the input stream
peeks at the next element
adds the string to the text node
this method is called when the server is started
initialize the servlet
destroy the server
stops the server
this method initializes this
this method initializes j toggle button
suspends the thread
suspends the thread
suspends the thread
returns the
handle the lookup request
returns the opposite of the opposite side of this
returns true if the given has the opposite direction
returns the opposite direction of a given place
returns the direction of the sprite
returns true if the given place contains the given place
returns an iterator over the rooms in this room
returns an iterator for the graph
paints the game
returns the position of the current position
sets the gate to the given value
this method will be called by the reactor to notify the thing
decrement the current coordinate by the specified number of x axis
increase the current
adds a new position to the list
this method is called by the
returns the value for the specified axis
sets the value of the specified axis
sets the gate to the given gate
decrement the current coordinate of the specified
increment the current value of the
adds a new to the list
this method is called when a new one is
returns the value of the specified axis
sets the value of the specified axis
decrement the current
increases the current
adds a new to the list
this method is called when a new one is
returns the value of the specified axis
sets the value of the specified axis
this method initializes this
this method initializes this
this method initializes j combo box
this method initializes j button
this method initializes j button1
this method initializes j button
this method initializes j text field
this method initializes j text field1
returns a new
returns a new with the given number of
causes the task to be called
this method is called by the
kills the living
returns the dead flag
sets the position of the relative position
returns the relative position of the relative position
returns true if the position of the relative position has a relative
sets the size of the system
returns true if the given shape is contained in the list
adds a place to the place
returns true if the given fits fits fits in the given
returns true if the drawable is
returns the center of the quad
returns the bag
returns a random place between the given random number
sets the drawable
returns the place that at the given position
returns the places of the given position
returns an iterator of the current graph
returns the object that is currently being used to remove the current
add a url to the list of urls
sets the value of the given object
returns a string domain
returns the name of the route
define the group of the
checks if the given node is connected to the given node
returns the center of the center of this piece
returns the mask that is currently in the buffer
returns the upper left corner position of the upper left corner of
puts a key event into the queue
returns the key event associated with the specified key
returns true if the key is pressed
this method is called by the
this method is called by the processor to remove a collision
returns true if the given position is occupied
returns true if the given position is in the list
draw the hull
draw the shape
selects the next shape
performs the actual thing
the current request
the thing is to be called
returns the thing that this thing is associated with
returns true if the current thread is ended
this method is called by the
this method is called by the task to perform the tasks
adds a task to the list of tasks
this method is called when the task is connected to the server
adds a new task to the list of tasks
this method is called when the task is connected to the server
sets the thing to the given thing
returns the thing that this thing is associated with
the terrain at the given position
fills the terrain map with the given terrain map
the

create a new
a
the


returns the
broadcast a to all the
returns the for the given player
creates a new radius render
creates a new instance of the image
returns the function
sets the cursor id
sets the function
creates a new icon module
returns the parameter
sets the parameter
writes the given command to the server
shows an error dialog
called when the server is done
returns the value of the bad command property
sets the bad command
sets the bad command
returns the encrypted key
sets the encrypted key
adds a listener to the list of listeners
returns the name of the function
sets the function name
returns the session type
notifies listeners that the completion of this completion
returns the compression value
sets the compression compression
sets the session type
returns the icons value
returns the timeout value
notify listeners that the module has been cancelled
sets the timeout value
returns the type of the desktop
sets the icons
adds a icon to the current state
returns the progress of the progress monitor
sets the error string
returns the current value of the id
closes the progress dialog
sets the id of this object
returns true if the sync is
sets the
returns the translator index
returns the version of the file
adds a translator to the
sets the translator index
sets the sync sync flag
sets the version
gets the manufacturer id
returns the state of this node
returns the desktop apps
sets the manufacturer id
returns the type of the machine
returns the number of
sets the patch
sets the machine type
sets the desktop apps
sets the state of the state
sets the ids of the
returns the signature of the current user
sets the filename
sets the signature of the signature
sets the filename of the file
check if the state of the given state is valid
sets the encrypted key
sets the packages
adds a new to the list of
gets the sync info
sets the sync info
gets the value of the name property
sets the name
sets the stores value for this
returns the of this
decode the
returns the frame that is currently running in the frame
sets the filters
sets the drive
adds a file filter to the filter
returns true if the value is resolved
adds a filter to the list of filters
sets the path to the file
sets the store
write a character to the output stream
returns the text label
returns the character that this character represents
writes a string to the output stream
sets the character
this method initializes text input
returns the paste button
sets the string
this method initializes cancel button
handle the error
send a file to the server
handle an error
sets the folder to be used for this folder
adds a keyboard listener to the listener list
populate the filters
returns the path to the file
sets the file filter
sets the file path
removes keyboard input listener from the listener list
populate the list of files
handle an error
notifies all listeners that a
returns the frame for the given file
notifies all listeners that the text has changed
sets the value of the code code property
returns the icon for the given file
returns the number of the
sets the path to the given file
called by the reactor when the command is done
closes the window
load the package from the file
sets the of the
sets the inheritance of the class
returns the inheritance class for the given class
returns the current session
returns the command that is currently selected
sets the session
sets the protocol
returns the error code
sets the error code
returns the error
decodes the input stream and returns the result as a string
sets the error
adds a listener to the list of listeners
sets the
creates a new instance of the
sets the
clears the list of
returns the info object
gets the
adds a new id to the list of
sets the
sets the info information
sets the
removes a listener from the list of listeners
adds a new id to the
creates a new
sets the
clears the list of
notifies all listeners that the file has been approved
creates a new instance of the registry
stores the list of objects in the store
adds a new store to the store
returns the size of the package
returns the default store
sets the file
sets the package size
notify listeners that the file has been cancelled
creates a new
returns the frame that is currently running in the frame
returns the package id of the package
reads the input stream and returns the result
sets the package id
returns the internal storage store
deserializes the given data from the input stream
writes the command data to the output stream
gets the id
returns the command data
returns the payload of the response payload header
sets the id
returns the type of the
this method is used to deserialize the given code input code into
returns the footer of the command input stream
returns the device kind
sets the device kind
returns the device number
returns the value of the
sets the device number
returns the signature of the signature
sets the value
sets the signature of the
returns the disk type
returns the device id
returns the index of the
sets the index
initializes the errors
sets the device id
sets the list of entries
populate the errors in the map
sets the disk type
returns the modify date
adds a new entry to the list
returns the frame that is used to display the frame
sets the modify date
decodes the frame
returns the major version of the
returns the volume
returns true if the parser is a copy of the public key
returns the minor version of the classfile
sets the volume
sets the version
gets the value of the volume ref property
returns the object associated with the given object
creates a new object
returns the current language
removes a object from the cache
sets the volume ref
finds the object that matches the given object
dispose the object
returns the stage
returns true if the safe is safe
sets the class that this class is to be
sets the class name of the class to be used in the
sets the stage
returns the class that this object is being created
sets the safe to remove
returns the bottom coordinate of the bottom element
sets the bottom bottom of the bottom
returns the real value of this object
sets the bottom bottom value for the bottom of the panel
returns the home directory
returns the left hand side of the left hand side
sets the left side of the
returns the number of used
sets the left value for the current left side
returns the right value of the right side of the
sets the used size of the
sets the right side of the
sets the right
returns the top coordinate of the top left corner of the
sets the top coordinate of the top item
flattens the object
flattens the given object into the given object
sets the top of the stack
returns the info
sets the info
returns true if this is empty
sets the patch version
sets the value of the object
removes all of the elements from this map
returns the object that is associated with this object
sets the value of the given string
puts a new value into the
returns the version of the object system version
sets the value of the specified value
puts a slot in the database
returns the slot with the given name
sets the object system version
get a slot from the slot
returns the internal signature signature
returns the at the specified position in the list
returns true if the store is default
removes a slot from the list
sets the internal signature signature
returns true if the value is rich
returns the number of slots in the queue
sets the value of the given slot
sets the default store
returns the vertical resolution
returns the value of the char
returns true if this type is a character
returns the length of the value
sets the vertical resolution
returns the password
returns true if this type is integer
sets the length of the list
returns true if this type is a magic pointer
returns the value at the specified position
sets the item at index
returns the horizontal resolution of the screen
returns true if this is a nil type
sets the password
adds a new item to the list
returns the true value
sets the horizontal resolution resolution
inserts the item at the specified position in the list
returns the reference number of the reference
removes the value at the specified position in this list
returns the current screen depth
sets the screen depth
returns the row number of the row
sets the row number of the row
gets the value of the name property
sets the bounds of the view
sets the
sets the name
returns the bounds of this object
returns the target protocol
sets the bounds of this object
sets the arguments
returns the number of
sets the number of bits to be used for the
sets the signatures
returns the mask
sets the target protocol
sets the mask for this
sets the left side of the board
sets the value of the input stream
returns the size of the
sets the id of the id
generate a number of flags for a given class
returns the cipher
sets the right side of the table
initializes the
initializes the
returns the secret factory
calculate the size of the given object
returns a cipher of the given data
this method initializes main menu
load the file from the file
saves the current configuration to the file
this method initializes menu file
skips ahead until the next number of the number of
this method initializes this
sets the property
sets the position of the pointer to the specified position
returns the file path to the file
sets the current position to the end of the current iteration
this method initializes menu
writes the specified byte to this output stream
returns the reason code
sets the reason code
writes the specified byte array to the output stream
close the serial port
returns the user code
writes the specified byte array to the stream
this method initializes j content pane
this method initializes menu help
sets the user code
returns an output stream for the output stream
returns the serial port
this method initializes menu exit
this method initializes buttons
returns the input stream for this input stream
returns the mode
sends a packet to the queue
sets the mode
returns the output stream
returns the maximum number of outstanding requests
creates a reader for the given port
this method initializes button ok
this method is called when the job is running
sets the maximum number of outstanding requests
creates a new writer
called by the framework to indicate the to the
returns the maximum number of bytes to be used for the maximum
sets the max info length
called by the framework to indicate the to the
this method initializes menu backup
returns the value of data phase option
this method is called by the client to send a packet to
sets the value of data phase opt
this method initializes menu restore
this method initializes button cancel
sets the output file
creates a listener for the port port port and port
sets the protocol
this method initializes menu installs
sets the output stream to the given output stream
sets the output stream to which this output is used
this method initializes menu keyboard
this method is invoked when a ring indicator is being used
this method initializes menu about
this method is called when the server is ready
write the contents of the given input stream to the output stream
clears the current port
called when the server is cancelled
this method initializes panel status
close the connection
creates a link packet for the given type
this method initializes tabbed pane
sets the sequence of the sequence
creates a link packet for the given packet
gets the credit
sends a packet to the queue
sets the credit
decodes a packet from the
this method initializes this
resets the sequence
sets the data of this object
factory method to instantiate a code code object
this method initializes j content pane
factory method to instantiate a code code object
this method initializes button apply
factory method to instantiate a code code object
factory method to instantiate a code code object
returns true if the acknowledgement is allowed
returns the packet sequence
start the
send a pong to the client
this method initializes button help
notify timeout listeners that the timeout is closed
this method is called when a state is changed
this method initializes tab password
sets the state of the state
this method initializes tab dock
returns the
this method initializes list port
this method initializes list speed
this method initializes check listen
this method initializes button browse
returns the packet layer
called by the framework to indicate the to the
returns the port of the server
deserializes the payload from the payload
called when the is done
sets the
dispose the pipe
adds a listener to the list of listeners
removes a listener from the list of listeners
disconnect from the server
notify listeners that a is received
called by the framework to indicate the to the
notify listeners that a new has been processed
start up the
notify all listeners that a command is receiving
shuts down the
notify listeners that a command has been
throws a runtime exception if the service is not supported
notify listeners that the is notified
throws a runtime exception if the serial port is not supported
closes the connection to the server
starts listening for the current state of the circuit
throws a runtime exception if the service is not supported
sets the tool tip
adds a listener to the list of listeners
returns the serial port number
creates a new with the given name and type
removes a listener from the list of listeners
returns the timeout of the socket
notifies all listeners that the given packet has been received
accepts the
returns a port for the specified port
fires a packet sent event to all listeners
binds a port to the port
fires a event
this method is called when the is
returns a new instance with the specified port
closes the current thread
get an input stream from the pipe
creates a new with the given name and
restarts the timer
returns the payload of the packet
returns the output stream
polls the ports to be polled
reads the next byte from the input stream
reads the next byte from the input stream
write the given byte array to the pipe
receive a request from the server
tests the desktop
send a packet to the server
write the given command to the socket
writes the specified byte array to the payload
asserts that two arrays are equal
assert that two arrays are equal
asserts that two chars are equal
wait for the connection to be idle
returns true if the pipe is connected
sends a packet to the server
adds a filter to the list of filters
returns the state of the
removes the given filter from the list of filters
sets the state
returns the timeout value
returns the filter for the given packet
sets the state of the pipe
returns the progress of the progress monitor
notify the coordinator that the server has disconnected
notify the connection to the server
returns the layer
sets the state of the given layer to the given state
returns the docking state of this docking state
returns the layer
check if the connection is allowed to send a request
adds a listener to the queue
removes a listener from the list of listeners
adds a listener to the command listener
removes a listener from the command listener
ping the ping
ping the given ping
stops the ping task
restarts the ping task
processes the command
check if the current state is connected to the state
notify the timeout of the timeout
delete the intent with the specified id
open the database
returns the point from the point to the point
filter locals in the puzzle manager
creates the chosen backup
attaches the given model to the history
creates a puzzle in the database
sets the date of the date
returns the session associated with this session
sets the date that the task was completed
returns the current user info
adds a new puzzle to the list of children
attaches a new puzzle model to the puzzle
sets the date published
sets the tutorial history key
creates a new room
deletes a puzzle model
returns a string value from the given string
returns the view associated with this view
sets the control to be used for direct control
switches to the current rooms state
enable the callbacks
switch to edit room
switches to the current play state
disable the callbacks
creates the states
updates the room value
enables editing of the callbacks
adds a new room to the room
disable the text editing and drop support
removes a room from the room
sets the user info object
adds a link group to the group
checks if room is valid
adds a link to the group
adds a link to the group
finds the index of the room at the given index
returns the link group for the specified index
this method is called by the user to set the user info
checks if the room area is valid
loads the puzzle with the given key
this method is called when user edits the user
creates the user info
loads the history of the given key
check if the user has enabled the current user
adds a profile to the list of callbacks
returns the room at the specified location
removes a session from the list of callbacks
enables the
disable the callbacks
appends the parameters to the end of the list
this method is responsible for updating the objects of the current session
registers a new puzzle with the given information
creates a new puzzle with the given parameters
applies the given user to the current session
builds a hyperlink from the given token
adds the moves to the moves
appends the parameter value to the specified parameter
append parameters to the current custom parameters
invokes the cancel action
returns the puzzle at the specified index
adds a link to the list of links
sets the status of the registration
delete a puzzle
refresh the current state of the
adds a new tab to the tab
selects the tab at the specified index
checks if all rooms of the rooms are filled in the rooms
sets the tab visibility
selects the row at the specified row
sets the style of the row and column
deletes the puzzle
updates the display
sets the allow half
adds a new search
initializes the validation error
removes a callback from the list
this method searches the search for the given search
executes the cancel action
enable the search criteria
disable the callbacks
enables the click
disable the callbacks
leaves the current state of the current state
leaves the current state of the current state machine
sets the factory
enter a state
sets the list of puzzle infos
sets the title of the main panel
sets the title of the panel
check if the ok button is ok
enables or disables the login button
called when the page has been updated
enables the
adds a new puzzle to the puzzle
disable the callbacks
sets the parameters for the given command
removes a new puzzle callback
enables or disables the registration of the registration
sets the parameters for the given key
this method will generate the actual puzzle to the puzzle
sets the value of params
this method will be called by the server to cancel the cancel
enables the
sets the tab visibility
sets the standard view
disable the current component
sets the view left
sets the bare bare view
switches to the welcome page
returns the name of the current token
switches to the puzzle list
returns the size of the top left corner of the
returns the of the puzzle
sets the parameters for the puzzle
move the current state to the next puzzle
sets the tutorial
returns the genre and size of the genre
returns the current token for the current token
switches to the puzzle
returns the history info object at the specified index
returns the puzzle info
checks if the model is valid
returns the username for the given user
returns the new puzzle as a new puzzle
sets whether the should be refreshed
changes the puzzle to edit the puzzle
switches to the current state of the tutorial
sets the puzzle key
returns the tutorial token for the current puzzle
sets the key of the puzzle
reloads the puzzle
sets the current state of the given technology
returns true if the datastore has a datastore
rename a puzzle
returns the nth puzzle in the given type
delete a puzzle
register a new puzzle with the given name
returns the factory for the given genre
this method is called when the puzzle is activated
this method is called when the puzzle is activated
adds a move to the end of the list
sends the current puzzle to the puzzle
visitor method for visitor pattern
accepts the completion of the multi multi nature
sets the previous message
make a new puzzle in the puzzle
gets the puzzle info
returns the history info
returns the current time in milliseconds since january 1 1970 00 00
sets the size of the grid
switches to the puzzle info
sets the model in datastore to the model
switches to the given location
adds a move to the end of the list
returns the move at the specified index
returns the number of moves in the current move
checks if the move message is a move message
switches to the current settings
returns the current settings
switch to the admin state
returns the current token of the admin
creates a new puzzle model
creates a new puzzle model
creates a new rating panel
disable all the widgets in the widget
sets the time of the given time
updates the rating panel with the given label
returns the time in milliseconds
returns the label for the given percent
disconnects from the server
this method is used to connect to the given
disconnects from the given
returns the other island that is associated with this island
returns true if the given island is connected to this connection
returns the loc at the given index
sets the message text
update the zoom and pan current state of the button
creates a new bridge
adds a toolbar to the navigator
deletes the given model from the model
updates the history of the given object
removes a toolbar from the history
adds a new island to the list of
adds a new node to the history
clears the history of the history
removes the given from the list of
recreates all the nodes in the graph
sets the visibility of the history toolbar
returns the bridge for the given direction
add a bridge to the list of
connects to the bridge
disconnect from the bridge
disconnect from the bridge
disconnect from bridge
check if the direction is valid
removes the bridge from the list of
convert the given time to a time in the given time
creates a puzzle model
deletes the puzzle model
add a new island
returns the position of the node
shows the history menu
removes a from the list of island
returns the value of the given node
shows the editable history
sets the site info
returns the height of the header
hide the history
load the site info
removes the bridge from the list of
removes all the breakpoints from the game
this method is invoked to modify the site info
removes bridge bridge from the bridge
sets the view
adds the node container to the container
enable the
disable the callbacks
removes all from the given
sets the new move
sets the current
update the size of the puzzle panel
draw a line in the map
sets the number of to display
returns the index of the move in the history
sets the visibility of the puzzle
clear the usage map
update the zoom and pan zoom
returns the value of the given land
displays a message in the given message
updates the current state of the given object
sets the text of the given text in the given text
creates a site info object
clears the text of the current puzzle
returns the duration in seconds
checks if the site is enabled
adds a callback to the list of callbacks
removes a callback from the list of callbacks
returns the duration of the given
returns the of the
this method is called when the user modifies the value
invokes the method on the code site code
returns the duration of the given
executes the reset method
invokes the cancel action
change the time bounds of the rocket
change the time and position of the rocket component
convert the given value to a time
removes the current
sets the time to the given position
clears the change listener
returns true if the change listener has changed
checks whether the puzzle manager is allowed
checks if a puzzle is possible to play
sets the internal enabled state of the internal state
check if the user is enabled
checks if the user can edit a new user
returns true if the puzzle belongs to the puzzle
copies the given code code to this vector
sets the lock lock
returns the size of the image
set the global lock and lock on mutex
this method is called by the
add a new lock callback to the list of callbacks
initializes the validation error
add a time lock callback to the current thread
grab the lock from the current thread
checks if the given x coordinate is valid
returns true if the y coordinate is valid
release lock on the stream
checks if the user can edit the user
this method initializes this
this method is called by the application to indicate that the
unlocks the internal resources
initializes the filter
returns true if the lock is locked
show message in the panel
change the location of the
hides the dialog
sets the value of the current marker
returns true if the rectangle is in the same area
returns true if the cell contains the given location
clears the states of the current state
this method is used to set the grid size
adds a move to the current state of the list
checks if this state contains a valid state
returns the view associated with this view
sets the style of the widget
sets the size of the pixel size
passing the focus request to the viewers control
all
sets the vertex rectangle for the given vertex
selects all text in the select box
sets the maximum length of the text in the text area
removes lines from the given list of lines
sets the vertex that is used to draw the vertex
sets the horizontal edge
adds a drawable to the drawable
removes a drawable from the
removes a drawable from the
updates the size of the widget
sets the
removes a drawable from the
sets the position offset
removes a drawable from the
sets the text of the label
sets the size of the
creates the widget that contains the given style
sets the image url
removes the drawable from the map
removes the drawable from the drawable
sets the
iterates over all drawables and drawables drawables
sets the widget to be used by this widget
resize the drawable
returns the x coordinate of the pixel at the given x coordinate
returns the y coordinate of the specified pixel in the given y
clears the drawables and removes all the drawables
resizes the component
cycle on the state of the given state
creates the toolbar for the edit settings toolbar
update the highlight
add a rectangle to the list of callbacks
delete the rectangle callback
release the cell
returns true if the given state can be drawn in the specified
returns the parity
check states of the states of the states
checks the state of the state
creates the default play toolbar
returns the state of the given location
creates the default view toolbar toolbar
enables or disables the
enables or disables the edit button
enables or disables the play button
enable or disable resizing of the window
enables or disables the check for the
resizes the dialog
creates a new message edit message
start editing the puzzle
starts editing the view
start playback of the game
start the view
starts the view tutorial
removes a new callback from the list
saves the current state of the game history
saves the tutorial in the tutorial
this method will be called when the exit is done
this method is called when the check is done
undoes the last change in the history
handles mouse events
handle the move event
leaves the given event
creates a new dialog with the current state of the
creates the dialog for the
returns the size of the cell
returns the cell loc for the given location
adds a component callback to this component
adds a new
adds a new callback to the list of active edges
adds a new component to the list of
removes a component callback
removes the specified callback edge callback from the list of
removes the specified callback from the list of listeners
removes a component callback
adds a mouse down handler
add a mouse up handler
adds a mouse move handler
add a mouse listener handler
sets the size of the vertex
sets the size of the edge
returns the statistic data for the given class
returns the notes
returns the nth note of the given note
this method is called when the user changes the
returns the number of notes in the list
returns the time in milliseconds
registers a new instance of the given type with the given type
tests the register constructor
test method for
tests that a note can be added to the
tests change firing firing a note change event
tests removal of note
test the add firing method
test changing chord of chord
test method for
adds an entity to this set
removes the entity from the collection
unlink the given entity
returns the list of all parents of the given entity
returns a list of all children of the given entity
adds a new to the list
change the entity
removes a entity from the list
registers a new
compare two notes
removes the specified entity from the list
adds a new entity to the list
change the entity
registers the given data object as a listener for the
returns the time in milliseconds since january 1 1970 00 00 00
the midi notes
the midi notes
returns the start of the file
returns the duration of the current time
adds a to the
compare this object with the given
sets the
returns true if the is verified
returns the
compare the given double value with the given
gets the
creates a new instance of stone midi midi
resets the buffer
returns the device with the given midi device
execute the command
closes the current session
returns a string representation of the device
returns the maximum number of receivers
returns the position of the current
returns the maximum number of
returns the transmitter
returns true if the device is open
closes the device
returns the receiver
sends a midi message to the server
sets the receiver
returns an enumeration of all requests that are authorized to be
returns an enumeration of all requests that are authorized to the server
performs a request to the specified request
switches to the advanced panel
initializes the matrix
connect to database
calculate the normal mean and variance
creates and initializes the input
returns a clone of the receiver
returns the result of a given position
reads a portion of code long code
fills the buffer with the current capacity
returns the number of samples in the sample
writes the document to the output stream
returns a value for the specified
writes the document to the output stream
gets the value of the dl query property
tests this object for equality with an arbitrary object
returns the hash code of the url
compares the specified object with this object
finds the field value in the field
find a object for a given class
tests this object for equality with an arbitrary object
returns the hash code for this object
finds the document with the given id
finds the object for the given id
finds the harvest harvest id
deletes the document
finds the document with the given identifier
stops the harvest
save the
finish the harvest
finish the error
finds the object for the given id
end the harvest end
find a field in the database
creates a new instance of
finds the web page for the specified id
find a named entity by name
save the web page
find a named entity by name
tests this object for equality with an arbitrary object
initializes the classifier
adds a new instance of the given class
this method is called by the framework to run the document
stops the application
checks if the object is null
stops the harvest
returns the harvest harvest
stops the harvest
stops the processing of the task
deletes all jobs from the database
returns the controller for harvest controller
returns the job name for the job
classifies a given string
this method is called when the task is finished
checks if the given string is a only digit
closes the dialog
this method is called when the user selects the
this method is called when the user selects the
this method is called when the visitor is changed
returns the current state of the
returns the size of the current image
encodes a buffer into a buffer
prints the given code print code to the current output stream
prints the given code print stream code to the given code print
returns a string representation of this object
prints the given code code to the current output stream
prints the given code print code to the current output stream
print the contents of the given code code
prints the given code code to the current output stream
prints the given stream to the given print stream
print the contents of the given stream
prints the given stream to the output stream
print the contents of the given stream
print the current value of the given stream
prints the given code print code to the current output stream
prints the given stream to the given print stream
prints the given stream to the given print stream
prints the given code code to the given stream
prints the given code code to the current output stream
prints the given stream and prints the resulting
prints the given stream and its contents to the given stream
print the current state of the given stream
print the contents of the given code code
prints the given stream to the given print stream
prints the given code print stream code to the given code print
prints the given stream to the output stream
prints the given stream to the given print stream
print the contents of the given stream
prints the given stream to the given print stream
prints the given stream to the given print stream
print the current line
tests that the invalid spec specification is invalid
tests that the invalid thing that is not valid
p append to the code to string code a code char code
returns true if the given field is accepted by this filter
compares its two arguments for order
resolves once the object is deserialized to the
compares this object with another
p append to the code to string code a code object code
p append to the code to string code a code object code
p append to the code to string code an code object code
appends the string buffer to the specified object
p append to the code hash code code of the code hash
verifies that the specified object is returned by the resource
verifies that the list of all the statements in the collection is
returns true if the namespace supports the namespace
returns true if the parser is writable
returns the name of the context that is used to render the
returns the name of the second context
returns the name of the first element
returns the first object of the current input stream
returns the name of the second part of the object
returns a new object that is a new instance of the
sets the end of the array
sets the base doc
returns the expected attributes
returns true if the schema supports the schema
returns true if the attribute provider supports modification
replaces the attribute name with the new name
replaces the value of the attribute with the new value
this method is used to add attribute name to the attribute
adds the attribute value
removes the attribute name
verifies that the given object is bound to the given object
verifies that the list of
verifies that the list of keys are valid
test get name in namespace
tests that the binding context is bound
test of attributes method of class org
returns the creation date of the file
test the environment
test that duplicate names are consistent
test the jdbc configuration
returns the name of the context that is used to render the
returns the name of the second context
returns the name of the first element
returns the first object
returns the name of the second part of the object
returns the second object of the object
verifies that the expected list is correct
returns the step by name
returns true if the current state of the transition is done
returns true if the last step is last in the current state
returns true if the event has the specified amount of listeners
returns the current step name
adds a listener to the list of listeners
removes a listener from the list of listeners
removes all listeners from the list
returns the listeners
clears the wizard errors
invalidates the connection
returns the model
sets the id
sets the length of the
processes the extensions
processes the extensions
returns the scopes
returns the id of the
sets the locale
returns the security enabled
sets the auth blocks
verifies the authentication
verify the signature of the
returns the length of the buffer
writes the specified data object to the stream
sets the attributes
sets the scopes
sets the authentication information
returns the list of attribute names
sets the value of the code attribute code attribute
this method is used to sign the sign of the list
verifies if the user can be accessed
this method will be called by the
verifies if the service is a valid url
returns true if the service is
signs the given string
returns true if the naming conventions is able to be
verifies if the current user is allowed to execute the
returns the concrete type name
gets the value of the type name property
returns true if the service is a valid service
returns the abstract type name
sets the opaque bytes
returns the opaque string
sets the opaque string
returns true if the given service object is a valid object
returns the protocol
returns true if the equals method equals to the same name
checks if the given string is equal to this
sets the host
compare the specified object with this
tests the equality of this code byte code
returns the path to the
writes the header to the given output stream
returns the length of the string
returns the url of the url in the url
sets the url of the url
returns the interval in which the replication measures
ensure that all attributes are added to the ldap context
ensure that all the attributes are equal to the ldap
ensure that all the attributes in the ldap
ensure that all the in the ldap name is in the
ensure that all attributes are equal to the ldap name
test delete with a
test of delete attr with attr
tests that an attr binding is functioning correctly
test method for test utils not yet implemented
gets the up name
test method for
sets the replication interval
p add with elements to the ldap attribute
ensure that all the attributes are equal to the ldap
ensure that all the attributes in the ldap
test that the
ensure that all attributes are equal to the ldap name
test of delete attr with attr
test delete with not existing
test delete with a name
tests that an attr binding is functioning correctly
test case for
creates a new instance of the class meta model
gets the registrations pom
creates an instance of the resource
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
start the osgi bundle
stops the osgi bundle
handle the service change event
returns the test entry attributes
executes the mojo
add a manifest file to the manifest
add a manifest entry to the manifest
adds the bundle version to the manifest
reconnects a session to the server
prepare the future to prepare to be used to prepare the
test that duplicate settings are handled by the user
this method is called by the framework to build the session properties
sets the context
sets the protocol provider
returns true if the is
returns the name
sets the callback handler
returns the callback handler
returns true if the named object is contained in this container
populates the environment with the default settings
returns the for the given ldap service
creates a new instance of the object
get the dummy member
returns true if the given dn is a member of the given
this method is used to close the cache
adds an entity to the list of entities
checks if a given entity has already been created
deletes the object from the database
adds a rollback action to the current action
puts a mapping entry into the cache
enables disables the
initializes the solver
refreshes the object
removes the mapping for this object from the given type
save the object
sets the connection type
prints the tree
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes j content pane
this method initializes j scroll pane produtos
this method initializes j text field inicio
this method initializes j table produtos
this method initializes j text field
this method initializes j scroll pane
this method initializes j table
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes j content pane
this method initializes j text field total
this method initializes j button
this method initializes j content pane
this method initializes j text field inicio
this method initializes j text field
this method initializes j button total
this method initializes this
this method initializes j panel id
this method initializes j text field id
this method initializes j text field min
this method initializes j text field max
this method initializes this
this method initializes this
this method initializes j content pane
gets the value of the activo property
sets the value of activo
this method initializes j panel
gets the top produto
sets the top produto
this method initializes j button cancelar
this method initializes j text field nome
this method initializes this
this method initializes j text field nome
this method initializes j text field
this method initializes j text field nome
this method initializes j text field min
this method initializes j text field
this method initializes j button cancelar
this method initializes j combo box categoria produto
this method initializes j content pane
this method initializes j scroll pane
this method initializes this
this method initializes j button
this method initializes j
this method initializes this
this method initializes j text field valor
this method initializes this
this method initializes j text field valor em
this method initializes j text field valor em
this method initializes j text field nome
this method initializes this
this method initializes j panel
this method initializes j text field valor
this method initializes j text field nome
this method initializes j button1
this method initializes j button2
this method initializes j text field
this method initializes j
this method initializes j button3
this method initializes j
this method initializes j panel1
this method initializes j
this method initializes j button4
this method initializes j password field
this method initializes j panel buttons
this method initializes j button5
this method initializes j panel buttons
this method initializes j button ok
this method initializes j button6
this method initializes j button7
this method initializes j button8
this method initializes j button cancelar
this method initializes j
this method initializes j button
this method initializes j button limpar
this method initializes j
this method initializes j button
this method initializes j panel list questionnaire
this method is used to create the connection
this method initializes this
shows the dialog
this method initializes j content pane
this method initializes j check box activo
this method initializes j check box
this method is used to set the database connection
this method initializes j button todos
this method initializes j jmenu bar
this method initializes j menu produtos
this method initializes this
this method initializes j button
this method initializes j menu item produto
this method initializes j content pane
this method initializes j menu item produto
this method initializes j panel
this method initializes j button
this method initializes produtos
this method initializes j menu conf
this method initializes j button top
this method initializes j menu item
this method initializes j menu item
this method initializes this
initializes the panel
this method initializes j menu
this method initializes j menu
this method initializes j menu item virtual virtual keyboard
this method initializes j menu item
this method initializes j menu
this method initializes j menu max
this method initializes j panel
this method initializes j menu item
this method initializes j panel buttons
this method initializes j button ok
this method initializes this
this method initializes j button cancelar
this method initializes j scroll pane
this method initializes j list
this method initializes j panel
this method initializes j text field total
this method initializes j menu
this method initializes j menu item
this method initializes j text field
this method initializes j text field
this method initializes j panel
this method initializes j button limpar
this method initializes j button1
this method initializes j button2
this method initializes j button3
this method initializes j button4
this method initializes j button5
this method initializes j button6
this method initializes j button7
this method initializes j button8
this method initializes j
this method initializes j button
this method initializes j
this method initializes j
this method initializes j button todos
this method initializes j button
this method initializes j button
this method initializes j panel produtos
this method initializes j button
this method initializes j button enter
returns the from
creates a new code code
sets the value of the from property
returns the to to this object
evaluates the given expression in the
sets the value of the to property
sets the value of a expression
creates a new
returns a string representation of the byte array
returns the value of the specified data as a
returns the string representation of the specified
returns the value of the given string
returns a string representation of the byte array
returns true if the given bit is a boolean
returns the value of the specified data as an integer
returns a with the specified id
returns true if the given data is a
checks if the given data is a
returns the of the given string
returns the value of the specified data as a double
returns the value of the specified data as a long
reads a byte from the buffer
receive a packet from the server
send a message to the server
connect to the server
listen for incoming connections
returns a receive message from this socket
receive a packet from the packet
send a message to the socket
returns a packet that is the socket that is connected to the
connect to the server
listen for incoming connections
listen to listen for incoming connections
sends a to the server
closes a connection to the server
find a element with the given tag name
sets the tag
sets the value attribute of the object
add a new element to the element
adds a new attribute to the list
sets the output output for the action
sets the process output
parses the request
returns the writer used to write the content to the writer
returns the output stream that is used to write the data to
forward to the forward action
initializes the servlet
tear down the test
tests that the correct value is correct
tests that the root tag is correctly used for the root tag
tests the field
tests that the correct excludes method
tests the method
tests the variable in method
tests the variable in the
this method is called by digester
parse the content of the specified input stream
gets the value of the property
parse the digester
sets the value of the property
this method is called by the digester when the digester is destroyed
adds a new field to the list
returns true if the parser is validating
returns the number of fields in the field
adds a method to the list of methods
returns the named field at the specified index
adds a new line to the end of the list
clears the field
returns the number of elements in the list
returns an unmodifiable code list code of code objects code
adds a new code timing code to the list of
adds a variable to the list of variables
returns the code th configuration at the specified index
returns the current snapshot of the snapshot
returns the number of in the pool
returns the number of variables in the stack
inherit properties from the given configuration
sets the snapshot of the snapshot
clears the method
returns the number of lines in the current line
returns a list of the
returns the value at the specified index
clears the variables
returns the code timing config code at the specified index
begins the
returns the line at the specified index
clears the timing
clears the line
returns the excludes
inits the vm vm
find a connector with the given name
returns the code stack code that is currently running
filters the given field name and the filter
returns true if the given class is excluded
executes the event loop
called when a class unload event
event listener for the event watch
this method is called when a thread is finished
start the event thread
a vm death
send a start event to the server
returns true if the user is a billing
returns true if the is
returns true if the is
returns true if the scheduler is currently running
sets the billing value for this
sets the
sets the
sets the scheduler
returns true if the is
sets the
returns a keyword with a keyword
sets the workload class
sets the connection pool name
sets the http class
returns the
checks if the given keyword is numeric
returns the
gets the batch sum flag
sets the batch sum flag
append a collection of output to the output
gets the
getter for property
sets the value of the property
gets the
gets the
sets the map dates to date
sets the value of the property
gets the
sets the value of the property
gets the
returns the
gets the
gets the
sets the value of the property
gets the
sets the value of the property
sets the value of the property
sets the debug flag
returns the driver
displays the message in the dialog
sets the value of the task id property
displays the given message as a message
displays an error message
displays a message in the display
returns the jdbc driver class
sets the value of the question if unsaved property
sets the model
sets the url of the
returns the url of the
sets the value of the project id property
gets the id
connect to the database
sets the value of the id property
puts a key value pair into the map
execute a sql query
closes the result set
puts an object in the cache
returns the execution of the given execution
sets the value of the id property
puts a value into the list
description of the method
sets the manifest file
returns the object associated with the specified key
sets the size of the blob to the specified result set
test of main method of class org
sets the value of the est property
returns the object by the given value
sets the debug flag
convert a double value to a double value
returns the value of the specified value
gets the value of the type property
returns the
returns the weight of the message
compares this object with the specified object for order
adds a bar bar to the list of
adds a bars to the list of
sets the list of input items
adds the list of input values to the list of
sets the value of the physical complete pack property
adds a new input to the list
calculate the of the current task
starts a transaction
adds the given code code to the list of output
build the list of items
gets the revenue flag
this method saves the transaction
undo the transaction
sets the value of the rev flag property
returns the precision of this object
returns the lock plan flag
sets the precision
returns the maximum allowed weight of a node
returns the maximum number of allowed
sets the value of the lock plan flag property
sets the password
returns the auto flag
sets the value of the auto compute act flag property
returns the complete type of the complete
sets the value of the complete pack type property
returns the duration of the type of the
sets the value of the duration type property
returns the review type
gets the value of the property
sets the value of the review type property
sets the
gets the status code
gets the value of the property
sets the value of the status code property
sets the
returns the task code
sets the value of the task code property
returns the object associated with this object
sets the object
sets the value of the total float time property
sets the value of the free float property
sets the value of the number hours property
gets the value of act work qty
sets the value of the act work qty qty property
gets the number of work items
returns the level of the separator
sets the value of the remaining work qty property
returns the file that was used to store the file
sets the value of the target work qty property
sets the value of the target property
sets the value of the target equip qty property
gets the value of the act equip qty property
sets the value of the act equip qty qty property
sets the value of the remaining equip qty property
sets the value of the date property
sets the value of the act start date property
sets the value of the late start date property
sets the value of the late end date property
sets the value of the expect end date property
gets the early early date
sets the value of the early end date property
sets the value of the restart date property
sets the value of the date property
returns the target start date
sets the value of the target start date property
returns the target end date
sets the specified raster mask
sets the value of the target end date property
sets the window mask for the specified raster window
sets the window mask for the specified component
sets the value of the review end date property
sets the window mask for the specified window
sets the value of the rem late start date property
sets the popups to be used for the force
sets the value of the rem late end date property
getter for property type
sets the value of the type property
checks if the given code code is a code code
returns the priority type
sets the value of the priority type property
returns the
sets the value of the guid property
sets the value of the date2 property
gets the type2
sets the value of the type2 property
gets the value of the act property per work work quantity
sets the value of the act work qty attribute
sets the value of the act equip amount quantity property
returns the driving path flag
sets the window bounds for the given window
sets the window alpha
returns the alpha compatible configuration for the current
sets the extractor
start the progress bar
send a broadcast message to the server
stops the server
exits the application
creates the global global menu
creates the contents of the dialog
sets the server information
creates the game container
adds a server to the list of information
checks if the server has a given info
starts the search
clears the list of server objects
gets the ip address
returns the service port
adds a page to the page
encode a password into a password
validates the given email
tests if the given password is valid
records the user interface for the user interface
stops recording recording
records the of a user
stops the recording of the given object
test the
test of int method of class
test of success method of class
test of method of class
authenticates the user
returns the source of the event
returns the destination coordinate of the destination
sets the board display
exit the application
this method is called from the board to notify the gui
returns the men set
finds the first move from the given position
removes the specified from the list
adds a new board to the board
returns the at the specified location
checks if the given move is legal
returns true if this is white
returns a list of all controlled squares of a faction
adds a new board listener
removes a chess board listener
returns the image for the specified image
this method is called when the
this method is called when the game is
checks if the given is checked in the list of king
convert the coordinates to a coordinate
adds a listener to the
removes a men set listener
informs the listeners that the given
checks if the given code code is in the given
returns a list of all controlled squares
returns true if the specified square is a square of the specified
finds the first king in the board
removes the tags from the tag
compares this object with another one
calculates the break position of the given break
returns the preferred span for this view along an
loads the fonts
load the configuration from the configuration
invoked by the listener interface
this method is called by the
load fonts from the configuration
this method initializes this
this method initializes j content pane
this method initializes j button
loads the fonts
initializes the config
initializes the language
display the search not found in the database
construct the index tab
search for the search
loads the applications configuration from the application
returns the key for the given key
sets the text
sets the font
gets the image chunk
returns the png chunk
the
the file
returns the chunk
the
returns the length of the
read a signed byte from the input stream
writes a value to the stream
returns the
returns the text area
reads the next byte from the input stream
sets the text area
returns the text area
writes the value of the
reads the next byte from the input stream
copy the file to a destination
reads the from the stream
the
reads the chunk of uncompressed data
returns the parent file
insert a blank bytes into the buffer
sets the parent file
returns the start byte
sets the start byte
returns the parent chunk
sets the length of the chunk
returns the number of loops
returns true if the is
auto generated getter method
gets the flag
gets the value of the sort flag property
returns the method
returns the size of the local table
append a new file to the end of the file
returns true if the color is stretched to be transparent
returns the transparent color of the transparent image
returns true if the is
append a byte to the file
returns true if the is
returns the resolution of the color
gets the file header
returns the size
returns the aspect ratio of the image
returns the global color table
removes the specified chunk from the
returns the image gamma image
returns the parent chunk
returns the width of the pixel in pixels
removes a file chunk from the
returns the rendering intent
returns the unit specifier
returns the height of the pixel in pixels
returns the compression type
returns the color type
returns the filter method
returns chunk data
returns the method
the file
returns the chunk type
returns the checksum of the checksum
creates a new text chunk
returns the offset of the data in the current data
a chunk
returns the parent chunk
gets the file header
gets the header
returns the color palette
creates a new time chunk
returns the data of the bitmap
the file with the given length
returns the parent chunk
returns the translated keyword value
returns the color planes in the color
returns the number of bits per pixel
returns the compression of the compression
returns the size of the image
returns the x resolution of the
returns the y resolution of the image
returns the number of colors
returns the number of important colors
the
swftag types interface
removes the specified chunk from the file
returns the y coordinate of the vertical coordinate unit
returns an initiliazed instance of canvas component
returns the counter used to draw the counter
returns an initiliazed instance of back command3 component
returns an initiliazed instance of exit command component
returns an initiliazed instance of text box component
returns an initiliazed instance of back command component
returns an initiliazed instance of image2 component
returns an initiliazed instance of form component
returns an initiliazed instance of text field component
returns an initiliazed instance of item command component
returns an initiliazed instance of component
returns an initiliazed instance of image component
returns an initiliazed instance of alert component
returns an initiliazed instance of component
checks if the given amount is the same as the
check if the given location is a valid location
checks if the given point is in the set of coordinates
checks if the given position is in the list
returns true if the character at the specified location is in the
optimizes the
returns true if the given character contains the given character
checks if the given character contains the specified word
returns the first word in the list
returns the first word after the first word of the
returns the first character in the position of the character
returns the last character in the position
returns the last word in the position
returns the start character
returns the end position of the line
returns the start position of the character
returns the end position of the document
returns the first element of the given class
executes an insert of a given query
creates a query
returns the user name of the user logged in user
returns the password of the user password
returns the transport id
returns the transport name
release a connection
get a connection from the pool
returns the string representation of the api
build the project
remove the from the project
adds a path to the class path
removes the entry from the classpath
this method is called by the ant task when a resource is
this method is called when the plug in is stopped
saves the state of the filter actions
notifies this viewer that the given viewers input has been changed
returns true if the given text matches the text
executes the action
opens the given editor
this method is invoked when the selection changes
updates the selected projects
initialize the content of the content
configures the shell
returns the package name
returns the test suite class name
returns the pattern class
returns the directory where the will be installed
sets the scale to the scale
returns the string representation of this object
returns a copy of this money
clears down the
returns true if the strip is stripped
returns the bounds of the view
this method is called when the user selects a
removes the specified range from this list
returns the nested view
returns an enumeration of all the attributes
returns the content of the resource
returns the preferred size of the text
sets the translation hash
returns the translation hash
adds a listener to the table
returns true if the row height is fixed
creates a new instance of toolkit
creates a new code plugin loader code instance
returns the path to the plugin path
sets the path to the plugin path
sets the plugin path
returns the plugins plugins
reads the contents of the file
returns the document
sets the document value for this
returns the root of the document
returns the number of children of code parent code
returns true if the node is a leaf
returns the index of child in parent
adds a listener for the tree model event posted after the tree
removes a listener previously added with
returns the value of the cell editor
returns true if the given cell is editable
returns true if the cell is selected
tells the editor to stop editing and stop any editing
cancels editing the cell editing editing
adds a listener to the cell editor
removes a cell editor listener from the listener list
notifies all listeners that the editor has been stopped
notifies all listeners that the editor has changed
invoked when an action occurs
fires an action performed event
validate the xml document
returns the error for the last error
remove the popup menu
returns the dtd type
sets the document type definition
returns true if this node is a leaf
sets the bias
returns the module name
returns the module name
returns the module name
returns the module name
returns the module name
returns the module name
returns the default max results for the first rule
returns the module name
returns the module name
this is the entry point method
returns the module name
returns the module name
returns the module name
returns the module name
this method initializes this
this method initializes j tabbed pane
this method initializes j panel customers
this method initializes j panel products
this method initializes j panel orders
this method initializes j button1
this method initializes j button2
this method initializes j button3
this method initializes j button4
this method initializes j tool bar
this method initializes j panel
this method initializes j button5
this method initializes j tool
this method initializes j tool
this method initializes this
this method initializes j toggle button
close the
this method initializes this
returns the color for the specified row
this method initializes j panel text
this method initializes j panel days left text
this method initializes j button ok
this method initializes j button continue
this method initializes j panel buttons
this method initializes j button search
this method initializes j button activate
this method initializes j text field customer id
this method initializes j panel buttons
p close the customer search popup
this method initializes j text field supplier id
p this method is called by the popup menu
this method initializes j button search
this method initializes j text field id
this method initializes j text field product id
close the product search popup
this method initializes j button search
this method initializes j combo box search invoice
this method initializes j combo box search receipt
this method initializes j combo box search type
this method initializes this
this method initializes this
this method initializes j check box change amount
this method initializes j panel product table
this method initializes j check box auto purchase purchase
this method initializes j text area
returns the selected row
sets the selected item
this method initializes j panel customer tbl customer customer
this method initializes j text area
this method initializes j panel date
this method initializes j panel
this method initializes j panel
this method initializes j scroll pane remarks
this method initializes j text area remarks
clears the table
gets the data from the current customer
this method initializes j text field height
this method initializes j text field angle
this method initializes j text field special
this method initializes j text field special centre thickness
this method initializes j text field special
this method initializes j text field distance
this method initializes j text field
this method initializes j text field frame width
this method initializes j text field frame
this method initializes j text field
this method initializes j text field read distance
this method initializes j text field insurance
this method initializes j text field insurance insurance number
this method initializes j scroll pane orders
this method initializes j text field
this method initializes j check box
gets the data from the current page
this method initializes j check box
this method is called by the framework to update the data
get the current data
sets the data of the data panel
this method initializes j scroll pane
gets the data from the current data
returns the default
returns the default
this method initializes j panel report table
this method initializes j search toolbar
this method initializes j search toolbar
this method initializes j search toolbar
this method initializes j search toolbar
this method initializes j search toolbar
this method initializes j search toolbar
this method initializes j search toolbar
this method initializes j scroll pane3
this method initializes j panel purchase detail
returns the edit toolbar
this method initializes j panel purchase table
this method initializes j scroll pane3
this method initializes j
initialize the frame
this method initializes j panel price calculate table
this method initializes j panel buttons
this method initializes j button
this method initializes search toolbar
sets the data of the customer
this method initializes j
returns the search toolbar
sets the data of the customer
sets the data of the customer
sets the data of the customer
this method initializes j
this method initializes j search toolbar
this method initializes j text field customer id
returns the of the knob
sets the data of the customer
this method initializes this
this method initializes
this method initializes j panel direct table
returns the focus style for this component
this method initializes j panel direct details
returns the focus style for this component
this method initializes j panel product details
this method initializes j panel product orders
this method initializes j check box change amount
this method initializes j check box auto purchase purchase
this method initializes j text area
this method initializes j panel supplier details
this method initializes j text area
this method initializes j panel supplier table
returns the gui component of this frame
initialize the frame
this method initializes j text field last name
this method initializes j text field street name
this method initializes j text field city
returns the gui component of this frame
this method initializes j panel pre authorized payment
this method initializes j panel supplier details
returns the default
this method initializes j text field first name
this method initializes j text field middle name
this method initializes j text field initials
this method initializes j combo box
this method initializes j scroll pane
returns the edit panel toolbar
this method initializes j scroll pane list
this method initializes j panel buttons
this method initializes j scroll pane list
this method initializes j scroll pane
this method initializes j scroll pane
this method initializes j button receipt
this method initializes j button no receipt
this method initializes j button cancel
this method initializes j panel
this method initializes j panel buttons
this method initializes j panel buttons
this method initializes j scroll pane list
this method initializes j scroll pane alarm
this method initializes j panel buttons
this method initializes j label notes
this method initializes j label performer
this method initializes j panel buttons
this method initializes j panel form
this method initializes j scroll pane
this method initializes j panel list
this method initializes j scroll pane list
this method initializes
this method initializes j tabbed pane
this method initializes j scroll pane users
this method initializes j list users
this method initializes j scroll pane management access
this method initializes j scroll pane management
this method initializes j list management access
this method initializes j list management available
this method initializes j panel management buttons
this method initializes j button add management
this method initializes j button remove management
this method initializes j password panel
this method initializes j button change password
this method initializes j check box password
returns the focus style for this component
this method initializes j check box insert rights
this method initializes j check box update rights
this method initializes j check box delete rights
this method initializes j check box read rights
this method initializes j check box print rights
this method initializes j check box config rights
returns the focus style for this component
this method initializes j panel text
this method initializes j scroll pane list
this method initializes j scroll pane template
this method initializes j scroll pane
returns the gui component
returns the focus style for this component
this method initializes j panel form
this method initializes j panel buttons
this method initializes j scroll pane progress
this method initializes j text area progress
returns the focus style for this component
this method initializes j list files
this method initializes j scroll pane files
this method initializes j panel form
returns the focus style for this component
this method initializes j scroll pane error text
this method initializes j panel buttons
returns the focus style for this component
this method initializes j scroll pane progress
this method initializes j text area progress
returns the focus style for this component
this method initializes j text area status
this method initializes j tabbed pane
this method initializes j panel
this method initializes
this method initializes j panel sent
this method initializes
this method initializes j panel buttons
this method initializes j scroll pane template
this method initializes j button
this method initializes j panel buttons
this method initializes j combo box type
this method initializes j check box purchase price
this method initializes j check box sell price
this method initializes j check box all supertypes
this method initializes j text field percentage
this method initializes j text field rounding
this method initializes j
this method initializes
this method initializes j
this method initializes j panel form
this method initializes j panel product search
this method initializes j scroll pane list
this method initializes j scroll pane filter
this method initializes j panel buttons
this method initializes j scroll pane
this method initializes j panel customer search
this method initializes j panel buttons
this method initializes j button ok
this method initializes j list user config
this method initializes j panel buttons
this method initializes j button cancel
this method initializes j button no receipt
this method initializes j button cancel
this method initializes j check box active
creates a glass glass for this component
returns the dataset to string
sets the default preference settings
sets the sort direction
returns true if the given object is comparable
returns the text of the given column
adds a table listener to the table
sorts the dataset
executes the given code code
returns the size of the
returns the content provider
returns true if the data set is set to the data set
sets the content of the element
returns the label provider
initializes the content provider
sets the content provider
compares this to another
returns true if this is empty
returns true if the chart is a line chart
returns true if the chart is a valid chart
this method initializes message container
updates the information for the given provider
refresh the current value of the field
removes the message loading from the message
shows the message
creates a new instance of the description panel
initializes the gui
creates the panel for the stats composite
adjust the label width and label
initializes the panel
adds the actions to the action
adds actions to the chart
removes the message from the message
sets the default values for all the default values
calculates the percent of the given amount
cancels all the
returns the parent composite of this composite
returns true if the title provider is a valid provider title
clean up the object
helper method to write a percentage of the total amount
update the provider parameters
sets the result composite
enables disables the enabled state of this component
checks if all fields are valid
creates the layout
enables disables the actions for the given code code
checks if the regular expression validation is present
initialize the access control
sets the items
this method initializes the composite
sets the data provider
creates the query button
creates the cancel button
creates smart smart smart smart smart frog
this method is called when the charts not created
clears charts not than the current
sets the size
sets the cancel button
redraws the charts charts charts charts charts
sets the enabled state of the action
adds a property change listener to the listener list
updates the overview
returns the size
returns the dataset that this chart is associated with
creates the charts charts charts
returns true if the warning is enabled
returns true if the dataset is empty
refresh the current page
applies the given status to the status line
cancels the current creator
returns true if the quick fix in the quick fix
starts the
saves the data to model
checks if the dataset is valid
returns the error status
sets the loading message
sets the chart type
sets up the empty text area
cleans the chart
this method is called when the user selects the user
adds the buttons to the dataset
handle the modify modify event
creates a table with the given parent
creates the columns of the table
returns the provider
sets the provider
returns true if the provider has a provider
returns the selected index
initialize the categories
returns the category name from the category id
fix the current calendar
sets the dirty view
returns the view associated with the given id
cleans the chart
the action has been activated
saves the given file to the file system
compares this object with the specified object for order
update the list of listeners
compares this service to another
returns the image for the given element
adds a new service to the list
returns the column text for the given column
adds a counter to the list
returns the service
returns the income
returns the cost of the
returns the number of services in the service
returns the of the given index
invokes the method on the java bean
returns the exception content
invokes the method on the java bean
destroy the request
destroy the context
creates the text control for this control
returns an initiliazed instance of exit command component
returns an initiliazed instance of welcome component
returns an initiliazed instance of back command component
returns an initiliazed instance of list notes component
returns an initiliazed instance of lista component
returns an initiliazed instance of component
returns an initiliazed instance of show list command component
returns an initiliazed instance of show about command component
returns an initiliazed instance of add command component
returns an initiliazed instance of back command2 component
returns an initiliazed instance of update note component
returns an initiliazed instance of back command3 component
returns an initiliazed instance of back command4 component
returns an initiliazed instance of note name component
returns an initiliazed instance of add update component
returns an initiliazed instance of txt note name component
returns an initiliazed instance of ok command2 component
returns an initiliazed instance of editar command component
returns an initiliazed instance of delete command component
returns an initiliazed instance of about command component
returns true if the selection is in the initial state
sets the selection state of the selection
fills the given array of data from the table
select a specific device in the database
insert a new object into the database
deletes a record from the database
fill the result of the test
inserts a test result
deletes the record from the database
insert a new object into the database
deletes the record from the database
inserts an object into the database
insert a new object in the database
deletes the record from the database
deletes the record from the database
get the id
inserts a repair object into the database
insert a new object in the database
deletes a record from the database
insert a new object in the database
deletes the record from the database
deletes a record from the database
returns the of the current vm
fills the combobox with the selected items
this method is used to create a new device
load the results from the database
sets the device record
returns the device record
sets the build id
sets the value of the id property
gets the value of the id property
sets the test case id
sets the device info for the device
adds an action listener
removes an action listener
fires an action event to all registered listeners
returns the column name
returns the number of rows in the table
returns the most specific superclass for the specified type
returns the value at the specified row and column
marks star star star star system
mark this ship as a ship
this method is called by the
sets the controller
sets the controller
returns a colony by its index
returns the index of a row in the city table
returns the name of the column at code column index code
returns the number of rows in the model
calculates the position of the given point
returns the most specific superclass for all the cell values in the
calculates the coordinate of the point at the given coordinate
sets the object to be edited
returns the object that is associated with this object
returns the value for the cell at code column index code and
returns the preferred size of the component
paints the component
sets the colony to which the colony is shown
updates the display of the construction
updates the construction list
invoked when an argument in the list changes
invoked when the mouse has been clicked on a component
sets the player
returns the value of the cell editor
sets ship ship fleet
adjust the vertical size of the slider
returns the y coordinate of the y position of the specified cell
sets the type
centers the text on the given text area
prints the given attribute
this method is called when the cell is left
sets the title font
sets the star system
returns the preferred size of the component
sets the colony to the given
paints the orbit
draw the planet
sets the specified colony
sets the star system
returns the
invoked when the mouse has been clicked on a component
returns the position of the
returns an enumeration of the selected
returns the orbit of the given
unselects all selected
returns the radius of the planet
returns the size of the image
invoked when the mouse exits a component
returns the insets of the border
invoked when the mouse has been moved moved
invoked when a mouse button has been pressed on a component
registers a new controller
handles button clicks
returns the controller
sets the ships
returns a collection of the objects that are in the collection
checks the scrollable parameters for the scrollable
starts the turn of the game
sets the technology tree
invoked when the mouse has been clicked on a component
returns true if the enumeration contains more elements
returns the next element of the iteration
tests if the object is a
returns true if the enumeration contains more elements
returns the next element of the iteration
this method is used to determine the next object
wait for the current server to be ready for the current thread
starts the turn process
processes the turn commands
returns the hot seat panel
retrieve the object
terminates the turn of the current turn
shows the panel with the specified name
this method is called when the filter is selected
returns the master controller
called by the server to inform the server that the server is
this method is called by the thread to run the thread
initializes the clients clients
starts the turn of the server
returns true if the player is over the current state of the
this method is called to evaluate the turn
returns the technology tree
returns the starship design
returns true if the current has a extended
returns a string representation of this object
returns true if the ship is a ship
build the colony
returns the size of the object
returns the of the
returns the of the
returns the gravity gravity
returns true if this unit has a colony
returns true if the object is accessible
returns the current colony
turns the current to a
returns the coordinate of the coordinate system
returns the square of the square of the given square
returns the destination of the destination
returns true if the is moving than the destination
returns the value of the x y z coordinate
returns the owner of this player
checks if the player is a owner
sets the destination of the current session
kills the current controller
returns the code research code of the specified branch
returns the fleet id of the abductor
checks if the accessibility
sets the position of the current position
updates the star with the given value
destroy the controller
returns true if the access access object is already in the access
initializes the
check the access to the given access
calculate visibility of the current
returns the square of the current game square
sets access to the access control
sets the to the
updates the specified access control
returns the
this method is called when a new user has been made
adds a ship to the fleet
checks if the has a
updates all the in the database
returns the type of the
returns the size of the list
returns true if the current has extended
returns true if star is reachable
returns true if the object is accessible
move the given
returns the distance of the specified star star system
move the controller to a specific location
updates the given code code
returns the
returns the ruler
gets the
updates the given code code
updates the specified mask
dump the processor to the given code processor code
returns the fleet of a ship
initializes the internal state
returns the current commander
returns the for a star star
returns the current ships
returns an enumeration of the
returns true if the player has visited the current state of the
returns the star systems in the star
returns an enumeration of the black strokes
returns the star system with the specified coordinate
returns an enumeration of all the
returns the for the given class
returns true if the player is occupied by a player
returns a string representation of the object
returns an enumeration of all ships in the orbit
update the star systems in the given star
returns true if the orbit orbit has the specified orbit
updates the ships of the fleet
this method is called by ship orbit
update the ships
update the access to the given access
returns true if the universe is reachable
returns true if the object is accessible
returns the distance between the current player
returns true if the given star is at least one star
returns true if the is
returns a new star system with the given star
returns true if the colony is a valid colony
add a to the
sets the costs of the given costs
removes a from the database
sets the
returns true if the object is accessible
updates the of the given weapons
returns the costs of the
returns the running costs
creates a new turn view
returns true if the current has a extended direction
dump the given code commands code to the given code
update the ships in orbit shots
updates the specified mask
displays star system
returns the maximum population
returns true if the type is
returns the name of the object
returns the type of the type
sets the value of the attribute specified by the attribute of the
returns the color of the current component
sets the attribute
this method is called when the owner of the owner
returns an enumeration of the
sets the attribute for the
returns ship in orbit ship
checks if the technology is a technology
adds a technology to the list of technologies
sets the value of the attribute to be used to represent the
returns the ship in orbit ship orbit
returns the ship
adds a ship to the design
returns the value of the specified attribute
checks if a star has any visited system
returns the title of the
returns true if the given player is covered by this user
checks if the given attribute is already in the list
returns true if the ship group is covered by this group
returns the maximal population for the given type
returns an enumeration of the
returns the coordinate of the coordinate
returns true if the given attribute is the default value
compares this object against the specified object for equality
returns the distance between the coordinate at the specified coordinate
returns the square of the square of the square of the given
returns a string representation of this object
returns true if the field is accessible
returns the name of the object
update the
returns the star system
returns the value of the attribute specified by the attribute name
checks if the user has a settlement
returns the code settlement code that this code code is
updates the specified mask
returns the factor for the ruler
returns true if the ship is in the game
returns the of the
update the
returns the food food
returns the attribute of the object
compares this object with another object for equality
returns the total number of food
returns true if the object is accessible
returns true if the attribute accessible by this object
returns the for the planet
returns the of the food
returns the bonus food bonus
returns the production of the production
returns the total production of the production
returns the diffusion size factor
returns the production consumption
returns the bonus bonus of this production
returns the research technology
returns the production consumption
returns the production factor
returns the bonus research
returns an enumeration of the
returns the
returns the construction construction
returns the amount of money that the player has to be bought
returns the construction time
returns the money factor
returns true if the
returns true if the is affected by the
returns true if the is affected by the
returns an enumeration of all the defense names
returns the of the given type
sets the construction algorithms
returns the of the
update the
returns true if this attribute is the default
sets the default value for this configuration
updates the specified mask
returns the default value
adds a new value to the list
returns the value of the specified attribute
returns the attribute of the object
returns the value of the specified
sets the default standard error value for this
returns true if the given attribute is the default
returns the default number of default values
registers a listener for the given listener
removes a listener from the list of listeners
removes all listeners
returns a set view of the keys contained in this map
initialize the
removes a property from the cache
sets the value of a property
clears the properties
check if the file is loaded
subscribe to the given
returns the value of the property with the given key
fire all the event
gets the value of a property as a int
gets the value of a property
compare the given file name to the same file
returns the double value associated with the given key
returns the filename of the file
returns the plain text
returns the encrypted version of the
sets the value of the unwrap keywords
sets the primitive type flag
store the object in the given object
returns the value of the type
sets the raw raw data
runs the
sets the nick for the user
reads the from the
writes the given string to the output stream
adds a new user to the list
returns the display of the message
returns the sender of this message
this method is called before the server is created
returns a collection of all users
returns a collection of all the receivers
send text to the given text
adds a new user to the receiver
close the
returns the next message
disconnect from the server
returns true if this object is public
returns the number of messages in the queue
returns the age in seconds
sends a message to the server
send a string to the server
returns the applet information
prints the given text
print a string and then terminate the line
sends a text to the server
returns the selected text
sets the text to save
this method is called upon plug in activation
this method is called when the plug in is stopped
adds a regular expression to the expression
returns the test text with the given name
removes the specified regular expression from the list of regular expressions
returns true if the is
sets the value of the property
sets the value of the
sets the value of the
returns the
writes the properties of a file to the given hash map
sets the properties of the given file
sets the properties of the given file
saves the selected flag as a list of selected
returns true if the given flag is saved
returns the string representation of the given string
returns a string representation of the given
returns true if the matches matches
returns true if the next match matches matches
returns true if the previous match matches the previous match
returns the number of matches
sets the next match
sets the previous match to the previous match
returns the current match
resets the
returns the html output for this document
returns the text of the text
returns the number of groups in the group
sets the group to the next group
decrements the group counter
returns the current group
adds a group to the group
returns the editor input
sets the flag indicating that the property change
this method is called upon plug in activation
returns the text of the title
this method is called when the plug in is stopped
returns the selected text
returns the query
sets the link with the given value
returns true if the editor is currently
sets the value of the property
sets the value of the
sets the regular expression to be used to the
initializes the completion proposals
returns the index of the search preference
sets the last search scope
returns the book with the given name
returns a list of all the
returns a hash map containing all the of the
expands the tree
returns the index of the child at the specified index
sets the category
sets the path
sets the
sets the
sets the contents of the contents
sets the title of the title
returns the contents of the list of contents
returns the category
returns the
gets the
removes a category from the list
adds a listener to the list of listeners
returns the category with the given name
removes a listener from the list of listeners
saves the multi page editors document
returns the path to the category
sets the book
returns the entry of the entry
returns a string representation of the given
returns the book that this user is managing
returns the entry with the given title
removes a entry from the list
adds a entry to the list of urls
rebuild the books and books and books and books
removes a entry from the list
returns the person key
returns the text of the current text
resets the
returns the html output for this document
adds a group to the group
returns the proposal for the given
sets the keys of the keys in the map
sets the
copy the values into the current instance of the current instance
returns an image from the map
returns an image descriptor for the given key
returns the path to the file
returns the name of the book
sets the selected text
handle the user choosing texts
handles the button pressed
handles the copy button pressed
handles the user choosing load text
save the button text
handle keep button pressed
sets the regular expression for regular expression
sets the test text
returns the regular expression for regular expression
returns the current time in the combo box
test exists valid
test exists with invalid key
create a new registry
tests creating duplicate registry
test delete valid
returns true if there are more elements in the iterator
returns the next element in the iteration
test delete invalid
test has fail
test has
test the
sets the type of the
returns the next element in the iteration
test that the registry works properly
returns the value of the current value
tests that the expand key is ignored
sets the data for this data source
creates a new registry key
returns the name of the path
returns the root key
returns a string representation of this object
returns the time in milliseconds since epoch
checks if the registry name has a registry
make a path to a path
returns an iterator over the keys in this collection
returns a string representation of this object
returns an iterator over the values contained in this code list code
sets the expansion flag
returns the cell at the specified cell
returns the value of the next move property
tests the equality of this code code
returns the opposite direction of this room
returns the serial number
returns the next move in the game
adds a new game to the list of game
returns the fitness value for the score
sets the list of
returns a list of all the
sets the
returns the of the given list of
prepare the edge attribute
reads a file from the input stream
returns the string representation of the specified list of strings
this method is called when the game is made
this method is called when the user selects the
returns true if the specified coordinate is a coordinate
finishes the game
adds a new game object to the game
returns the coordinate of the specified object
returns the norm of the vector
returns true if the given object is a coordinate
returns the description of the
removes a coordinate from the coordinate system
returns the current angle
sets the coordinate of the given coordinate
creates a new game object
returns true if the given coordinate is on the coordinate system
sets the avatar to be used for the
returns true if the map is on map
this method is called when the user selects a new one
move the game
removes a user avatar from the model
moves the camera in the given direction
adds a new event to the list of events
adds a new event to the game
returns the act number of the given component
returns true if the event has been signaled by the user
returns the act number of the specified target
returns the number of events in the current event
returns the next event
returns true if the two pairs of the two pairs are adjacent
updates the visibility of the given object
updates the visibility of the given object
returns the number of terrain map objects in this map
place the given place in the game
creates a new description
creates a new
this method is called by the toolbus when an entity is destroyed
sets the speed of the current animation
sets the charges of this charges
constructor for the number of
creates a new stat table
sets the
returns the stat for the given
returns the connection to the database
checks if user id exists in database
update the status of the user
returns the file info for a given file
the given group
select the file
returns the complete node name of the given node
this method is called by the
returns the filename of the family name
get a connection from the database
parse the
add a new to the list of
this method is called from the
creates a model structure
creates a model for a given
returns the hierarchy of the hierarchy
prints the
adds a model to the model
adds the given relations to the model
writes the model to the file
adds a dataset to the dataset
sets the root of the tree
adds a child to this node
adds a new child to the tree
adds the model to the model
this method is called by the thread pool
build the string representation of the
checks if the given table is in the table
process a paragraph
add the paragraphs of the paragraphs
output the file to the output file
this method is used to handle the
this method is called when the table is inserted into the
fixes the
checks if the given table is a figure
adds a dataset to the dataset
appends the to the end of the list
resets the
adds a metadata object to the metadata
replaces the element with the
returns the chunks of the current sequencer
returns the string representation of the given string
finds the chunk of the specified index
normalizes a string

populate the list of available
returns the of the given string
returns true if the given text is a name
returns true if the given text is a
returns true if the given text is a name
annotates the string value of the given source
output the output file
update the glossary
adjust the of the
compares two group objects
open the device
verify that the file is already in the file system
parses the sentences
returns the next token in the list of tokens
sets the
this method is called by the application
returns the distance between the given and the specified distance
parses the sentence
returns the string representation of the
returns the string representation of the given string
save the tag to the current database
remove the given terms from the database
returns the number of groups in the group
disconnect from the server
process window event
process window event
called when a host is added
this method is called when the statistics object is closed
handle the change event
this method is called when the data changes
search results for the given search result
stops the search
returns the number of rows in the table
resets the search combo box
called when the user has changed its state
called when a connection is closed
returns a collection of files that are ignored in the given
adds a host to the host host
removes the host and host from the host
returns the number of hosts in the pool
returns the host with the specified index
returns the document for the specified http request
adds a share share to the database
sends a message to the server
compares this ip to another
logs the current session
removes a membership from the database
returns a collection of groups that are not in the database
method to get properties
sets the properties of the user
tests if the given ip address is in the database
updates the user
checks if the given address is in the database
add a new entry to the database
returns the xml representation of the object
returns the xml representation of the object
returns the number of connections in the database
returns the time in milliseconds that the connection has been made
returns the redirection url for the given user
checks if the user is in the role group
returns the login name
saves the current url to the current url
returns a resource collection by its name
checks whether the given object is a match
returns the value of the property with the given key
this method is used to retrieve the users list
sets the duration
returns the total time in milliseconds since the last time the
stops the timer
runs the thread
writes an array of bytes to the output stream
creates a new version
returns the flag indicating that the server supports the
the
run the server
at startup create and show the main frame of the application
this method initializes this
this method initializes j panel
this method initializes this
this method initializes btn ok
this method initializes j button
this method initializes panel
this method initializes tf descricao
this method initializes this
this method initializes tf codigo
this method initializes this
this method initializes this
this method initializes panel
this method initializes menu item
this method initializes areas menu item
this method initializes menu item
this method initializes this
this method initializes menu
this method initializes tf cpf
this method initializes menu item
this method initializes tf nome
this method initializes tf telefone
this method initializes menu item
this method initializes this
this method initializes tf telefone
this method initializes tf cpf
this method initializes tf telefone
this method initializes tf nome
this method initializes tf data
this method initializes tf telefone
this method initializes tf telefone
this method initializes tf email
this method initializes j frame
this method initializes tf telefone
inicializa el jtext field
this method initializes tf data
this method initializes tf endereco
this method initializes pl
this method initializes tf email
this method initializes file menu
this method initializes tf
this method initializes bt ok
this method initializes tf telefone
this method initializes exit menu item
this method initializes bt endereco
this method initializes j
this method initializes this
this method initializes tf nome
this method initializes about dialog
this method initializes pl
this method initializes about version label
this method initializes this
this method initializes bt ok
this method initializes tf nome
this method initializes tf
this method initializes tf email
this method initializes tf
this method initializes tf
this method initializes bt cancelar
this method initializes tf endereco
this method initializes tf
this method initializes btn
this method initializes btn
this method initializes tf fax
this method initializes btn cancelar
this method initializes btn
this method initializes j button2
this method initializes btn
this method initializes this
this method initializes this
this method initializes btn
this method initializes cb
this method initializes btn limpar
this method initializes btn ok
this method initializes j content pane
this method initializes lista
this method initializes btn cancelar
this method initializes pnl
this method initializes j button1
this method initializes this
this method initializes tf codigo
this method initializes btn ok
this method initializes tf instituicao
this method initializes btn endereco
this method initializes tf carga
this method initializes tf
this method initializes j button2
this method initializes tf nome
this method initializes tf numero
this method initializes tf
this method initializes tf endereco
this method initializes j
this method initializes tf cidade
this method initializes tf
this method initializes tf
this method initializes j
this method initializes tf estado
this method initializes tf pais
the
this method initializes this
this method initializes this
this method initializes this
this method initializes this
this method initializes j content pane
this method initializes pnl
this method initializes btn ok
this method initializes btn cancelar
this method initializes tf codigo
this method initializes btn
this method initializes tf
this method initializes tf descricao
this method initializes this
this method initializes tf
this method initializes tf tipo
this method initializes this
this method initializes tf
this method initializes j content pane
this method initializes btn
this method initializes tf
this method initializes btn
this method initializes btn
this method initializes btn areas
this method initializes tf
this method initializes tf
this method initializes tf area
this method initializes deactivate button
this method initializes timer text field
this method initializes hour combo box
this method initializes minute combo box
reads the file from the file
process the text of the text
removes the given instance from the pool
closes the instance
returns the reloading class loader
initialize the filter
returns the debug directory
performs the filter
saves the properties to the properties
load properties from the properties
load properties from the properties file
returns the file name of the file name
puts a session key in the session
adds the given directory loader to the directory
puts a key value pair into the map
returns the value to which the specified key is mapped in this
skip the template
this method is called when the template is navigated to be used
delegates to the wrapped code code method
delegates to the underlying code logger code object
delegates to the wrapped code code method
p log a message at level code level code at level
p log a message at level level specified at level format and
initialize the
this method is called when the user selects the action
finalize the action
sets the frame body
parse the frame
aborts the specified target
aborts the specified error code
aborts the current
adds a new validator to the list
run the validation process
run validation
open the given join
close the given join
configures the given class
add a join to the list of the
append the given code string code to the end of the list
visits the given type
join a join
returns the property mapping
generate the closure for the given parameters
sets the scalar value
returns true if the iterator has another path
sets the group by
this method is called when the end of the end of the
returns the statement configuration for the given key
returns the next element in the iteration
check the specified object for the null value
parses the index
release a connection
parse the string from the given string
this method is called when the is selected
returns true if the query is allowed to be used
returns a specific configuration for a given class
append a value
p append to the code to string code a code to code
p append to the code to string code a code long code
p append to the code to string code a code boolean code
p append to the code to string code a code boolean code
p append to the code to string code a code byte code
generate a unique key for the given key
p append to the code to string code a code char code
p append to the code to string code a code short code
test method for
returns the index of the callback
post process the process
commit the current transaction
test method for
p append to the code to string code a code long code
sets the callback index for the current thread
p append to the code to string code a code long code
returns the result set type
returns the result set concurrency
returns the fetch direction
returns the size of the fetch
test the
returns the options for the given class
checks if the given code statement code is a code converter code
assert that the given property is a property
assert that the given index is index
processes the result of the
sets the published date
configure the configuration
test the result of a mapper method
test the result of a mapper
adds a track to the list of tracks
returns the number of that are currently visible
returns the string builder to be used to render the record
returns the source of the item
returns the target item
adds a listener to the list of listeners
removes a listener from the list of listeners
toggles the state of the toggle listener
toggle the off state of the toggle
this method is called by the framework to initialize the repository
checks if the repository is correct
initializes the proxy host
check if the repository is loaded
test the retrieve repo repository
this method is called upon plug in activation
sets the code code of the code code
returns true if the classpath is a conflicting
initializes the default values
shows the specified selection
returns the search pattern
returns the dialog settings object used to edit the idialog settings
reads the configuration from the current settings object
writes the configuration to the dialog
this method is called when finish button is pressed in
creates the drop down text
returns the detail of the
sets the detail button
creates the dialog area
returns the style of the text style
creates the buttons for the button bar
creates the cancel button
runs the runnable on the specified runnable
updates the combo box with the specified value
this method is called by the plugin to check if the given
attaches a dialog to the dialog
attaches the dialog to the dialog
returns the button that is set to the specified button
returns true if the current selection is selected
sets the selection state of the button
sets the button label
change the control to be used when the button is pressed
returns the button that controls the user changes the button to be
enables or disables the button
selects the item at the specified index
selects the item with the given name
sets the message text
updates the state of the label
returns the image associated with the specified key
returns an image descriptor for the given key
returns true if the button is pressed
returns true if the button is pressed
sets the minimum size of the panel
returns the tree viewer
handles key pressed events
handles the key pressed event
enables disables button of buttons
returns the element at the specified index
removes all elements from the list
removes an element from the list
returns the size of the list
refresh the tree
refresh the element
updates the tree
returns the column index for the given name
returns the column with the given name
returns the column at the specified index
adds a column to the table
removes a column from the table
returns true if the column name is contained in the column
transform the document to a given string
adds a column to the table
removes a column from the list
returns the value for the cell at the specified position
adds a row to the table
select a model object
sets the name of the node
adds a row to the table
sets the value at the specified index
update the object with the given binding and update its list
removes a predicate from the list
adds a constraint to the list of constraint names
returns the name of the column at code column index code
select the given select statement
returns the most specific superclass for all the cell values in the
draw the overlay
adds a new row to the table
removes a row from the table
returns the child node with the given name
finds the node with the given path
removes the rows from the table
updates the row at the specified index
compares this instance to another one
compares two nested elements
checks if the given angle is within the boundary of the sphere
updates the row of the given row
sets the path to the node
removes a column from the table
sets the color of the border
adds a listener to the list of listeners
sets the flag indicating whether the user wants to be notified when
sets the default focus overlay renderer
returns the default focus node renderer
sets the label renderer for the label
returns the radius of the given angle in the
adds a new renderer to the overlay
adds the specified node focus overlay renderer to the overlay
sets the bounds of the nested pie area
sets the bounds of the nested pie area
returns the effective bounds of the
returns true if the given coordinates are within the bounds
returns true if the given angle is in the plane
sets the status of the given control
this is the entry point method
sets the content of the file
returns the image
configures the graphical viewer
checks if reconnecting the connection source to the source of the source
checks if reconnecting the connection to the target is allowed
initializes the graphical viewer
returns the value of the property for the given property id or
returns a list of all shapes
returns a list of all nodes
disconnects from the source
reconnects a list of connections
reconnect to the connection
sets the value of a property with the value
removes the given connections from the list of connections
provides serialization support
returns the principal associated with the given username and password
the workflow
returns true if the user is authorized to be authorized
executes the given
this method is called by the
the
execute the
performs the processing of the given data
this method is called by the framework to perform the
execute the
this method is called by the interface
creates the bug info
the job
run the job
this method is used to get the for a user
run the job
executes the given action
initializes the object
creates a system filter for the system
returns the parameter value
execute the
adds a path to the path
initialize the object
check if a user is in the given user
removes the ratings from the workflow
executes a workflow
returns the content type
creates a new code string code
returns the value to which the specified key is mapped
returns the string representation of the content type
returns a string representation of the content type
creates a new user
returns a list of all roles for the workflow
checks if the given test case is included in the list
returns true if any of the given list contains any of the
adds a member to the group
removes a member from the group
returns true if the user fulfills the workflow
checks whether the given list contains the given
load a user from a user
load a user from the database
initialize the
returns the path to the template path
adds the macro macro macro to the current process
receive notification of character data
returns the permanent status of the given user
reads all the workflows from the list of workflows
returns the permanent version of the given user
load a workflow from the list of
checks if the workflow is in workflow
returns true if the workflow has a configuration
sets the state of the state
process the event
evaluates the condition
resets the state of the
handle the event
removes the workflow from the context
returns the value of the workflow
returns a set of dataset with the given name
end the document
returns the of the
returns all templates templates
sets the value attribute of the object
returns a workflow template with the given name and version
removes all the from the given workflow
creates a dataset with a new dataset
adds a new value to the given and
adds a dataset to the
adds a to the
checks if the path contains a given path
returns the workflow template with the given name
returns all paths in the database
returns a string representation of the image
returns a string representation of this object
checks if the given data type is valid
returns the xml representation of the object
checks if the given data type is valid
sets the edit info
returns a field with the given prefix
check the data type for the given data type
check the validity of the given type
sets the value of the given date
checks if the given data type is a valid
sets the value of the specified field
checks if the given data type is valid
checks if the given data type is valid
checks if the given data type is valid
check the data type for the given data type
checks if the given data type is valid
adds a to the
check the validity of the given type
sets the value of the given date
sets the value of the given attribute
check that the script is executed
returns all paths in the dataset
returns a string representation of this object
returns the xml representation of the object
check version of the workflow
creates a new
check the workflow and write the result
returns a list of all workflows
returns the language of the given user
returns a list of all templates for the workflow
this method is called when the action is invoked
resets the condition
creates a workflow
checks the for all the
creates a workflow
this method is called when the user selects the
this method is called when the user selects the result
returns the history entries for a given
deactivates the graph
this method is called to handle the end of a transaction
creates a task for the task
creates a new
creates a new graph
adds an edge to the graph
returns the events list for the given result
executes the script action
returns the trigger date as string
check the script for the given template
returns a string representation of this object
returns the set of all sub ids
returns the xml representation of the object
adds a dataset template to the model
returns the content of the content of the content
returns the list of active nodes
checks if the workflow is valid
check if the workflow has been
get a list of all the templates for a given attachment
deactivates the stone
check the workflow workflow workflow template configuration
returns the active tasks
returns a list of all the config items
returns the node with the given name
returns the for the given id
returns the value of the given path
returns all templates templates for a given type
returns a string representation of this object
returns a list of all the
returns the template with the given path
maps the texture to texture
disposes of the operating system resources associated with
sets the image data
fills the image with the specified index
fit the rectangle to the
fill image with the specified index
reloads the image from the given image entry
write the stage to the current stage
find the selected image entry
cleans up the movie directory
creates a new category
creates a new
creates a new category
creates a new instance of the value
render the custom request
dispatch a render request to the given render state
sets the form text
returns the form text
returns the id of the database for the current
sets the category name
returns true if the given parent is a child of the parent
updates the question score
returns the roots of the current command
gets the value of the es property
sets the
sets the
gets the
sets the
returns the
sets the
sets the
sets the value of the origen property
gets the value of the destino property
gets the
sets the
returns the
sets the
returns the
returns the
setter of the property tt tt
sets the context
returns the context bean context
adds a new message to the list
adds a new message to the list
adds a property to the list
adds a new property
adds a property to the list
adds a new action to the list
adds a new message to the list
adds a new message to the list
get the bean context for this bean
sets the local
returns the content type of the content type
returns the size of the file
returns an input stream for the input stream
returns true if the file is uploaded
sets the query cache enabled
returns the name of the specified query
add a value to the set property
returns the comma separated list of comma separated lists of comma separated
creates a new criteria object for the given criteria
creates a new criteria object for the given criteria
get the session object for the given request
sets the session object
returns the value of the attribute specified by the key
returns the value of the specified attribute
returns the writer used to write the content to the writer
returns the output stream that is used to write the data to
closes the zip file
tests if a given directory is a sub directory
test the conversion of a document
parses a date into a date
compares two doubles
resets the buffer to the initial state
trims the array to the current value
reads a line of bytes from the specified stream
flush the buffer
writes the specified byte to this output stream
writes a portion of a string
returns the document for the given path
returns the document for the given file
returns the document for the given input stream
returns the xml document for the specified reader
returns the element type of the element
returns the string representation of the given text
returns the string representation of the given text
returns true if the specified value is contained in the hashtable
returns true if the key is contained in the hashtable
returns the value to which the specified key is mapped in this
rehashes the contents of the hashtable into a bigger table
removes the mapping for this key from this map if present
returns a shallow copy of this hashtable
sets the path info
returns the path to the servlet request
returns the path to the servlet
this method creates a new window
returns the description of the filter
returns the name of the
initializes the workbench and selection
creates a new graph factory
creates a new graph factory
returns a description of the filter
returns the name of the
this method is called by the framework to perform the
generates a report of the report
returns true if the location is in the workspace
creates the control for the control
create the control for the specified composite
creates the control layout control
creates the working set control for the given control
creates the control for the control
returns the project name
sets the name of the project
returns the location of the file where the project is located
sets the working set of working sets
returns the graph with the given id
sets the enabled state of the
sets the flag indicating that the is not null
paint the background color
returns true if the marquee is forced
returns the view that is connected to the given point
returns the cell graph cell
returns a vector containing all the of the given node
saves the to the given file
called when a property change event has been changed
called when a property change event has been changed
sets the properties of this object
returns the properties
returns a property
puts the property into the database
called when a property change event has been changed
creates a sub panel for the given entity
creates a new entity
returns a string representation of the given text
returns the names of the model instances
returns the list of that are not available for a given
get the value of a field
returns the collection of the code code object
returns true if the given field is a collection type
get the type of the field
messaged when the user edits the edits
returns true if the given cell is a group of
inserts a new entity into the database
brings up the given object to front
undo the last call
redo the last undone action
this method is called whenever the value of the selection changes
invoked when an action occurs
compares the two template objects for equality
compares the current template to the given object
called when a property change event has been changed
returns the description of the filter
returns the name of the
returns the preload of the specified agent
adds a new
adds a new interaction type to the current thread
returns the state of the
returns the
removes all the locks from the list
adds a pending acl message to the acl
adds a new to the nationality
removes the cid
returns the frame that is used to draw the window
returns the of the
returns the initiator of the initiator
returns the content of the next message
clears the content of the content of the content of the message
returns true if the given state is in the state
returns the state machine for the given state
returns the conversation object for the given user id
sets the
launches the agents protocols
checks if the protocol is known
gets the
adds a new protocol to the list of known protocols
adds a new initiator to the list of roles
returns true if the given task has breakpoint
checks if the given task is
returns a entity entity
add a new owner to the list of owners
get the for the given
returns a new
sets the owner of this code code
returns the owner of this object
returns the yellow pages
creates the demo panel
invoked when a mouse button is pressed on a component and then
invoked when a mouse button has been released on a component
invoked when the mouse button has been moved on a component
returns the state of the
returns the graphics context for this graphics context
returns the management object
returns the current state of the manger
returns the application instance
returns true if the agent is initialised
this method is called when the agent is initialised
this method will be called when the is down
insert a new entity into the database
insert into the diagram
returns the name of the
returns the description of the filter
returns a vector containing the of the
the of the
the
the
returns a list of all roles that are connected to a given
returns the applications deployed in the given entity
initializes the browser
returns the description of the filter
run the process
this method simulates a to the nearest
sets the
this method is called when the user selects the five technique
returns the name of the
generate a new
returns the graph with the given id
invoked when the mouse button has been moved on a component
saves the content of the given file to the given file
sets the version of the
puts the property into the database
creates a sub panel for the given entity
creates a new entity
returns the names of the model instances
brings up the given object to front
this method is called to back to the back
invoked by the framework when the selection changes
invoked when a key has been pressed
updates the buttons history
invoked when an action occurs
removes all locks from the database
adds a new interaction to the list of interaction
removes the specified machine from the list of active machines
this method is called when the has been closed
this method is called when the agent is initialised
this method is called when the is down
the of a task
the
the
returns a list of all the tasks of the given agent
returns the column number
returns the string representation of the given string
compares the specified object with this address object for equality
returns a string containing the of the given string
returns the hash code for this object
returns the row of the row
returns the right value of the specified string
builds a tt literal tt expression from the specified
returns a string representation of the current value
returns the right hand side of the given number
returns the right character
builds a code expr code from the input
returns the right value of the given string
returns the right value of the specified string
returns the right value of the given string
returns the right value of the specified string
returns the right value of the specified string
returns the right item at the specified column
returns a string representation of the given string
tests if a given method is a test method
checks if the given method is valid
checks if the given method is valid
sets the value of the specified value
sets the value of this object
checks if the method is a test method
sets up the fixture for example open a network connection
sets the fields of the given class
sets the image
sets the image
sets the image
load image reader
ensures that the memory is available
sets the date of the date
sets the date to the specified date
returns the time the user has to be created
sets the time of the
returns the time to which this event was fired
sets the time to which the user is to be displayed
returns the next line of the current line
reads the value of the given string and replaces the current token
gets the string from the given string
reads the from the given string
the of a
get the value of a given line
get the value of a string property
returns the height of the city
returns the x coordinate of the x axis
returns the z translation
returns the translation translation
sets the scale
gets the value of a given string
reads the from the given string
returns the meta image
sets the image url
sets the meta scale
returns the path to the file that is used to identify the
returns the latitude of the image
returns the longitude of the longitude
returns the height of the viewport
returns the x coordinate of the left side of this node
returns the y coordinate of the second point
returns the z coordinate of the z axis
sets the
returns true if the is
sets the
returns true if the is
returns true if the details of the complete is complete
sets the gen headers
returns true if the header is
sets the initial row count
get the value of the specified line
returns the value of the attribute of the object
sets the initial column
returns the x value of the
load a image file
returns the x coordinate of the current row
returns the next line of the current line
closes the tile and returns the
writes the height value of the height to the given height
sets the root tile tile
creates a new tile file
get the value of the specified line
returns the value of the
returns the value of the given
sets the source of the tile
closes the current tile
get a row from the data stream
creates a new tile in the tile
writes the height value of the image to the specified height
skip over the given data in the current row
closes the tile
returns the coordinate of the coordinate at the specified coordinates
sets the detailed images
sets the geo objects
sets the value of detailed
writes the height value of the image to the specified height
returns the value of the attribute of the object
returns true if the is
sets the value of the output pin property
closes the current tile
returns the focus level
sets the focus level
creates a new tile in the tile
writes the height value of the image to the specified height
sets the slice bounds
writes the height value of the image to the specified height
sets the degrees of the pixel in meters
sets the value of the output in meters property
returns the degrees of the given projection
returns the degrees of the degrees of meters
sets the y coordinate of the grid coordinates
sets the tile for a tile
writes the height value of the image to the specified height
sets the geo spatial flag
gets the value of the property
get the value of the specified line
returns the value of the attribute of the object
sets the name of the name
sets the value of the datum property
sets the value of the property
sets the projection
puts the given array of values into the set
sets the value of the prime property
sets the value of the angular unit property
sets the value of the axes property
sets the authority
sets the value of the datum name property
sets the value of the datum property
sets the value of the property
sets the value of the datum authority property
returns the datum
gets the value of the property
gets the value of the prime property
gets the value of the angular unit property
gets the value of the axes property
gets the value of the datum property
gets the value of the property
gets the value of the datum authority property
move the current row to the specified row
move the current row to the specified row
closes the current tile
closes the current connection
closes the current input
writes the height value of the image to the specified height
writes the height value of the image to the specified height
sets the end of a tile
creates a new tile file
writes the height value of the image to the specified location
writes the height value of the image to the specified height
closes the tile and returns the
creates the main scene of the given world
creates a new tile
writes the height value of the image to the specified location
get the value of the specified line
returns the value of the given
reads the next byte from the input stream
reads a float from the input stream
reads the double value from the specified input stream
creates a new tile file
reads the next byte from the input stream
reads a short value from the input stream
gets the value of the byte order property
sets the byte order
returns the
sets the
returns true if the value is a real real value
sets the real real value
sets the top left corner of the
sets the vertical coordinate of the first left side of the
returns the longitude of the first left side of the
returns the top left corner of the top left corner of the
returns the bottom right corner of the grid
returns the latitude of the bottom right side of the
returns the bottom right wheel of the y axis
returns the bottom right latitude of the current position
closes the current tile
returns the shortest number of the given
returns the shortest number of the shortest
creates a new tile in the tile
writes the height value of the image to the specified height
returns the of the y coordinate of the first point in
returns the top left corner of the current position
returns the y coordinate of the bottom right corner of the
returns the y coordinate of the upper right corner of the
converts the image to a new pixel
sets the solid value for this
returns the solid flag
sets the value of the colour per vertex property
returns true if the vertex is a vertex
creates a new instance of
creates a new instance of
creates a new instance of exception
creates a new exception object
updates the current state of the
this method is called by the server to login
sends a message to all connected clients
sets the presence of the presence of the presence of the presence
sets the auto commit flag
passes call to method on physical connection
sets the catalog name
passes call to method on physical connection
passes call to method on physical connection
passes call to method on physical connection
sets the transaction isolation level for the transaction
passes call to method on physical connection
sets the type map
passes call to method on physical connection
commits the current transaction
returns the sql code string code value
rolls back the current transaction
whats the version of this jdbc driver
executes the given query in the database
write the top of the top of the stack
decode a string
encodes a string into a string
write the header of the
sets the
returns the default resolver for this
adds a new processor to the map
adds a new processor to the processor
adds a processor to the given processor
returns true if this is a stack owner
sets the fixed width
returns the fixed width of the
sets the tab count
returns the number of tabs in the tab
sets the alignment
returns the alignment of the text
sets the leading
sets the leading and
returns the style of the values of the style
sets the first line indent
sets the keep together value
returns the normal
returns the repeated repeated repeat
sets the last in row
returns true if the last row is in the last row of
sets the cell in the table
returns the width of the table in the specified table
sets the border width
sets the border color
sets the background color
returns the background color
returns the parent node of this node
returns the outline
returns the start cell width for the given cell
returns the message associated with the given key
sets the parent tag
sets the css css property
adds a child to this node
compares this object to the specified tag
returns a child tag with the given name
returns a child of the given name
returns true if this object has parent
returns true if the given name has a child namespace
returns true if the given namespace has a child
returns the name of the tag
adds a directory to the root directory
adds a url to the list of urls
returns the font size for the specified tag
sets the css class
applies the given image to the given image
returns true if the given property is a inherit
returns true if the given tag is a inherit
applies the given element to the end of the list
adds a css file to the
adds a css file to the list of files
sets the leading tag of this code snippet
returns the leading leading of the given sequence of leading and ending
returns the of the word
copies a chunk of chunk styles to the target
sets the persistent state of this
append a character to the buffer
sets the previous element to the previous state
strips out the spaces between the string and the string
processes the given character
returns the sibling of the given tag
checks the metric style
adds a new code writable code to this code code
adds all elements from the list to the queue
creates a new tag with the given name and namespace
checks the style sheets metric
sets the next pipeline
this method is called when the is finished
returns the context key
returns the current tag
returns the worker context
adds a content to the end of the list
adds a new element to the list
returns true if the given value is a relative value
sets the resolver used to resolve the resolver
adds an element to the list
adds all the elements in the given list to the list
returns true if the value is a numeric value
returns the topmost element pushed onto stack
sets the document
sets the writer
returns the first element in the queue
returns the link provider
sets the page size
returns the left and right margin of the page
sets the root tag of the
extracts the url from the url
sets the image provider
sets the link provider
sets the css context for the given css context
remove the unwanted tags from the
sets the page size
sets the root of the pipeline
sets the image provider
sets the context provider
sets the current tag
sets the current attribute
returns true if the current attribute is currently being edited
puts the current value in the current attribute
returns the current string representation of the current
returns the current tag name
returns the current entity
returns the comment
add a new listener to the list of listeners
sets the namespace of the namespace
flush the current name space
removes a listener from the list
returns the current name space
resets the buffer to the beginning of the buffer
sets the last character in the current character set
parse the given input stream
sets the state of the state
returns the previous state of this state
parse the input stream
returns the unknown
returns the tag type
parses the given input stream into a code input stream code
returns the tag that is used to write the attributes
returns the tag that this object represents
parse the given reader
returns the value of the attribute referred to as a
returns a single
returns the current value of the attribute rw terms
parse the given reader
returns the current processing instruction
returns the current state of the
returns the special character that this method is used to parse
this method is used to reconstruct the closing tag
sets the state
returns the current state of the document
returns the attribute of this
returns the current state of the controller
this method is called when the user selects a
flushes the buffer
returns the current memory
returns the
start the element
this method is called when the text is being parsed
end tag element
sets the text
returns the current tag
returns the current state of the tag
sets the current state of the tag
append a string to this postfix
adds a string field to the label
returns the next boolean value
get the next choice
returns the center of the circle
calculates the ring
returns the next string in the text field
returns the next text in the text area
returns true if the number of invalid numbers are invalid
returns true if the user has canceled the message
returns the value of the checkbox
returns the next scroll bar
returns the value of the given field
returns the value of the specified
sets the scroll bar value
adds a button to the panel
sets the hits
deletes the specified
returns the name of the current
deletes a file from the database
adds a button to the panel
returns true if the button is selected
returns true if the next button is pressed
closes the connection
returns the date from the database
sets the number of idle rounds
sets the x coordinate of the center of this component
sets the
finds the element at the specified index
union the given point
sets the
returns the number of in the repository
returns the zone manager
adds all nodes to the zones zones
returns the zone manager
assigns the given set of edges to the graph
sets the name of the
sets the algorithm layout algorithm
returns the items set
returns true if the given set of nodes are changed
returns the force of the
removes all items from the list
this method is invoked by the
this method is called when the is selected
returns true if this attribute is flexible
sets whether this component should be flexible
sets whether or not the container should be included in the list
adds a listener to the
returns the x coordinate of the center of this shape
removes a listener from the list
returns the x coordinate of the upper left corner of the
creates the actions for the given action
updates the hover for the current hover
notify listeners that the node has been changed
sets the to the
returns the zone aggregate item for the specified zone name
sets the layout algorithm
returns the zone aggregate table
sets the label edge label
sets the show labels
returns the color for the action
sets the value of more readable labels
sets the debug information
sets the label of the corner edge
redraws the sprite with the specified value
returns the zone number of the specified zone
adds a listener to the
removes a listener from the list
sets the show node selection color
removes the zone from the zone
removes a zone from the zone
reset the query
initializes the property
sets the
initializes the property
sets the title
initializes the property
returns the page revision properties for the given name
returns the page revision properties for the given name
sets the zone visible
returns a list of all users
returns a directory with the given name
returns a directory with the given name
returns the that matches the given name
returns the page revision properties for the given name
returns the properties for the given name
returns a list of all categories
returns the that matches the given name
sets the visibility of the zone
returns the extractor for the current user
tests the constructor of single page
returns the description of the file
clears the internal list of all the spring
this method is called when the is
returns true if the given filter is a filter
creates the actions for the given action
this method is called when the user selects a new network
sets the layout algorithm
sets the labels visibility
sets the show labels
sets the value of more readable labels
sets the of the given columns
adds the listener to the list of listeners
sets the label of the corner edge
removes the given listener from the list of listeners
returns the last exception
returns true if the current instance is complete
returns the value of the given string as double
sets the type of the type
returns the result of evaluating the current
initializes the id gen
evaluates the string value of a boolean
disposes the current object
returns the serial id
sets the show node selection
returns the value of the given string as an integer
sets the
gets the
assigns a variable to the given variable
returns the entity name
sets the creation date
sets the value type
adds the activated metric to the given metric
returns the file configuration file
adds a metric to the collection
adds all the metrics for the given code metric code to the
adds a single valued metric to the list of all the
this method is called when the robot is loaded
removes the specified metric from the list of the metric
removes all the specified metrics from this collection
returns true if the given object is applicable as a applicable class
sets the built in attribute of the object
returns true if the file is built in the
opens the metric preference dialog
saves the given item into the storage
opens the question dialog
returns true if the job is busy
returns the value for the specified type
removes the given metric metric
ensures that the buffer size is valid
saves the value of the specified entity as a new value
deletes the graph from the graph
sets the url
deletes the given set of graphs
returns the current space space
sets the current space space
test of get type method of class proxyma context type
returns the current graph
sets the current filter
returns the current filter
test of get type method of class expected type
test the
this method is called when the user selects the backup
returns the enum attribute name
returns the name of the operation
cleans up the
returns the name of the group
returns the value of the code operation group group group code property
returns the default value for the default
sets the
sets the list of grouped grouped groups
clear all the
returns the next element in the list
checks if the file exists
saves the default settings to the default settings
transforms the similarity of the similarity matrix
generates a
creates the table metrics
returns true if the database connection has changed
initializes the checkbox state and all the listeners
initializes the default values
initializes the values of the current metric
restores the checkbox states
this method initializes j panel
this method initializes this
this method initializes j jmenu bar
this method initializes arquivo
this method initializes sair
this method initializes j menu2
this method initializes j
this method initializes span
this method initializes j span
this method initializes j panel
this method initializes business business
this method initializes
this method initializes j panel1
this method initializes project
this method initializes credit
this method initializes
this method initializes j text field
this method initializes j text field1
this method initializes j text field2
this method initializes j text field3
this method initializes j text field4
this method initializes j text field5
this method initializes j check box
this method initializes j scroll pane
this method initializes j table
this method initializes j scroll pane1
this method initializes j table1
this method initializes j text
this method initializes j text
builds the
sets the parent of this node
set the verbose status of the
send a line to the server
shuts down the database
gets the links attribute of the object
description of the method
returns the database connection
sets the group
returns the branch name
returns the url of the server
sets the constraints for the specified x and y components
sets the changes state
returns true if the current document has changed
sets the contrast attribute of the object
this method is called when the board is resized
creates an captcha image with the given image
this method is used to encode the base64 encoded byte
this method is called when a method is fired
checks if the given method is a
returns the total size of the download
returns the current download size
returns the number of packages
returns the download count
returns the current download
returns the running downloads of the current download
returns the number of downloads
returns the current file number of the file
checks if the captcha password is valid
returns the left
returns the tmp disabled
sets the maximum speed limit
returns the maximum number of downloads
returns the maximum number of downloaded
sets the status of the job
removes all cookies from the list
returns the timeout for the connection timeout
sets the timeout value for the timeout
returns the timeout value for the timeout
sets the
returns the form by name
upload the file to the file
returns the proxy
returns the session information
update the source and update the
copy the directory to the destination directory
check if the request is allowed to be able to request content
move the file to the directory
returns the redirection url
checks whether the given file contains the given file
open a form connection to the specified form
open a connection to the specified url
open a connection to a given request
open a post
creates a post request to the specified url
creates a request to be used for post request
open a post
posts a url to the page
returns the java script that is associated with this object
posts a page to a page
posts a post request to a post request
load a connection from the database
download a download
returns a password authentication object
get a file for the given download
minimizes the current
registers the application with the given app
send a packet to the server
send a message to the receiver
send a message to a node
send a message to the
returns the connection string
returns the prefix for the given os
returns the package of this package
returns the class of the enclosing class
throws an exception
this method is called when the thread wants to shut down
returns a code input stream code for the specified resource
removes a previously added code shutdown code
throws an exception indicating the status of the
returns a process subprocess with the specified command
executes the process process
returns the resource for the specified resource name
returns the process of the subprocess
process the process of the given process
returns the protection domain of the domain
returns the memory allocated for this node
returns the total memory

returns an enumeration of all the resources associated with the given name
returns the resource for the specified resource name
returns the package of the given package
check if the is correct
change the of the
prints a toast
check if the is correct
change the of all the
checks if the is correct
checks if all the are not already
change the of all the
change the of the
open the
check if the is enabled
start the thread
called when the user is first created
sends a profile name to the server
plays the
open the notes for the current opts
open the opts
stop the
open the opts
open the chord with the next opts
updates stats information
open the misc object
sets the options
called when the progress bar is changed
creates a dialog for the given id
called when the start tracking state is received
returns the user options
called when the tracking touches the given
returns the stats
this method is called when the pool is ready to be restored
plays the interval in the notes
check if the given guess is a valid user
returns the name of the interval
returns the allowed number of characters
scale the current scale
returns a new scale
checks if the given string is a valid
returns the scale of the image
returns the allowed number of the
returns a new note for the note
this method is called when the is played
plays the specific sound
plays the note
updates the options
this method creates a spinner for the given spinner
check if the given guess is a valid user
open the
called when the activity is finished
sets the mode of the
removes all the selected from the list
change the mode of the popup
plays the current media interval
this method is called when the user wants to pause
called when the activity is finished
plays the sound
called when the activity is finished
change the state of the replay
change the visibility of the chord
called when the activity is finished
display the current scale
plays the current
submits the user to the user
ask the chord to be selected
submits a question
change the mode of the
this method is used to display the note
returns the selected scale
prints a toast
scale the current
returns the name of the specified image
checks whether the user has the given user
plays the click
get the pitch value
open the
open the stats
opens the chord sheet
open the scales scales
open the notes pitch
open the interval
checks if the user quits the application
when the user selects a new address
called when the user selects a new response
call the remote function
this method is called by invite
accepts a specific user
adds a parameter to the list of parameter
cancel the current thread
implement the invite invite interface
stops the
stops the
get the transaction id for this transaction
adds a new string to the default log
returns the hashtable of listeners
adds a sip provider listener to sip manager
removes a sip provider listener from the session
this method is called when user name user name
sets the logging flag to the given boolean
this method is called by the garbage collector
this method is called when the user is
this method is called when the user selects the
this method is called when the user selects the next connection
this method is called when the protocol is started
send a pong to the server
this method is called when the server side server is received
updates the rooms list
connect to the server
send recipients to the server
send clear to the server
sends a user info to the server
send disconnection to server
finds the user with the given id
this method is called when the request is done
returns the delta seconds
this method is called by the sip factory to initialize the service
change the status of the current state
returns true if the state of the given state is a status
returns the status of the call
this method is called when the cpm is stopped
close the media application
callback function called when the call is confirmed
re invites the user to the given hostname
print a string to the default log
skips over and discards code n code bytes of data from the
this method is called when the user closes the session
this method is called to terminate the sip service
returns true if the given parameter contains a parameter
returns the request line
this method is called to stop the service
returns a string representation of the protocol
returns the port of the server
sets the
returns a clone of the object
compares this url with another
returns the host name of the url
returns the port of the server
returns the maximum number of connections allowed for this connection
sets the maximum number of concurrent connections
returns the hashtable of listeners
removes a sip provider listener from the list of registered provider
this method is called when the is stopped
callback function called when arriving a new invite
callback function called when arriving a
callback method to handle the call redirection
callback function for
callback function called when arriving a bye request
callback function called when a call timeout is not supported
callback method called when a call transfer is received
call when a call transfer is accepted
callback function called when a call transfer is refused
callback function called when a call transfer is successfully completed
callback function called when a call transfer is failed
returns the match question for the given question
this method initializes this
this method initializes j content pane
this method initializes j panel bottom
this method initializes j button ok
this method initializes j panel center
this method initializes j label status
this method initializes main panel
this method initializes main window menu
this method initializes progress bar
this method initializes this
this method initializes j content pane
this method initializes j text field community
this method initializes j text field
this method initializes main split pane
this method initializes j text field show max thread
this method initializes up
this method initializes down
this method initializes j text field
this method initializes file menu
this method initializes help
this method initializes j panel bottom
this method initializes j menu
this method initializes j button ok
this method initializes
this method initializes j button cancel
this method initializes j panel log and table
this method initializes j tabbed pane bottom
this method initializes j scroll pane table
this method initializes j text field timeout
this method initializes table model
this method initializes j scroll pane log
this method initializes j text area log
this method initializes j
this method initializes
this method initializes j text field second community
this method initializes j text field third community
this method initializes j menu item
runs the given
this method initializes j button stop
this method initializes j menu item about
count the number of descendants of descendant nodes
sets the visibility of the given node
returns the number of visible descendant
this method is called by the layout
count the number of descendants of descendant nodes
sets the location of the node
this method initializes j button
this method initializes j button plus
calculates the height of the tree
copies the attributes from the given object to the current
clears the tree
this method initializes j button minus
returns the layout of the given entry
inserts a new item into the list
checks if the item is expanded
returns the of the given item
this method is called after the game is initialized
this method is used to get the force of the
this method initializes j combo box ip list
initialize the simulator
this method initializes this
this method is called when the is
returns the of the
returns the
sets the value for this
sets the value of the property
returns the
this method initializes j content pane
returns the current value of the
sets the y coordinate
sets the
returns the of the
sets the
returns the move
returns the of the
sets the size of the
returns true if the size of the size is
sets the value for this
corrects the anchor coordinates of the given anchor
focuses the given item
dispatches a mouse event listener to the mouse listener
returns the maximum scale
sets the maximum scale
sets the fix to be used when the mouse is over the
returns the minimum scale
sets the minimum scale
returns true if the highlight edge is selected
sets highlight highlighting state
returns a string representation of the object
initializes the registry
clears the registry
returns the item registry
removes the object from the database
returns the item class
returns the entity
returns the value of the specified attribute
sets the value of an attribute
removes the specified item from the registry
returns the attributes
sets the attributes
clears the current entity attributes
returns the attribute with the specified name
sets the value of a named attribute
removes the specified attribute
updates the value of the specified attribute
sets the current time to the new time
returns the dirty flag
sets the dirty flag
returns true if the is visible
returns true if the component is visible
sets the visibility of the panel
returns true if the current component is focus
returns the renderer used to render the object
returns true if the point is in the specified location
returns the bounds of this object
sets the height of the corners corners of the corners
returns the name of the attribute that this component is associated with
sets the name of the attribute that will be displayed in the
sets the max text width
returns the text of the label
sets the size of the image
sets the maximum image dimensions for the image
returns the image attribute name
sets the name of the image attribute
returns the image url for the specified item
returns the image factory
sets the image factory
returns the horizontal alignment of the text
returns the vertical alignment of the image
sets the horizontal alignment of the component
sets the vertical alignment of the text
returns the horizontal padding of the image
sets the horizontal padding
returns the vertical padding of the image
sets the vertical padding
returns the image spacing
sets the maximum image dimensions
sets the size of the image cache
sets the image spacing
adds an image to the image cache
waits for the image to be repainted
returns the url pointing to the location of the url
preload all images of the given image
returns the text in the text area
returns the weight of the label
sets the name of the weight
returns the weight type
sets the weight type
sets the radius of the circle
returns the radius of the circle
returns the shape of the given item
returns the stroke for the given item
returns an affine transformation that is drawn with the
returns the code affine transform code object that is
returns the width of the line
sets the font
sets the height of the corners and clipped area
returns the edge type
sets the type of edge
returns the horizontal
returns the vertical vertical coordinate of the image
returns the horizontal
returns the aggregate renderer used to render the object
returns the vertical vertical coordinate of the image
returns the renderer used to render the object
returns the renderer used to render the tree
sets the horizontal alignment
sets the vertical alignment of the image
initializes the registry
clears the location and the location of the
returns a list of all the entities contained in this map
sets the horizontal alignment
returns the entity at the specified index
removes all elements from this collection
returns the number of rows that are being used
sets the vertical alignment of the image
sets the number of rows to be inserted
returns the orientation of the
sets the orientation of the graph
sets the width of the image
returns the color for the specified value
sets the end orientation of the document
sets the color map used to draw the color map
sets the start orientation
returns the maximum value of the
sets the maximum value for the
returns the minimum value of the slider
sets the minimum value for a specific value
adds an edge to the graph
adds a new edge to the list of edges
returns the edge at the specified index
returns the edge that this edge belongs to
returns the number of edges in the graph
show tool tip
hide tool tip
returns an iterator of the edges of the graph
sets the tooltip
returns the tool tip component for this component
returns the index of the edge at the specified index
returns true if the tool tips enabled
sets the tool tips enabled
returns the index of the given node in the graph
returns the tooltip text
reads the file
sets the tool tip text
sets the file name
returns the focus set for the given key
returns the neighbor at the specified index
puts a key into the set
returns the default focus set
sets the focus set to the given value
returns an iterator over the focus in this set
sets the debug flag
returns true if the given key is focus
returns true if the entity is focus
returns an iterator of all the edges of this node
adds a new edge to the list
returns the debug flag
returns the edge that is connected to the specified node
returns true if the given edge is an incident edge
returns the index of the edge at the specified index
returns the index of the node in the adjacency list
checks if the node is a neighbor
returns true if the given edge is an incident edge
returns true if the node is neighbor
removes all the graph nodes from the graph
removes all neighbors of the graph
adds a node to the list
removes an edge from the list
removes all neighbors of this node
removes the edge at the specified index
adds a new edge to the graph
removes the given node from the graph
adds an edge to the graph
removes the given node from the subdivision
adds a listener to the graph
removes the edge from the graph
removes a listener from the graph
removes the edge from the list
sets the size of the component
removes the edge at the specified index
sets the preferred size of this component
removes the given node from the graph
this method is called when the user wants to change the bounds
removes the given edge from the list of edges
sets the font
sets whether high quality comparisons should be used for the high quality
returns true if high quality comparisons should be used for quality
returns the registry
sets the item registry
returns the current transform
returns the inverse transform of this transform
returns the coordinate of the given absolute coordinate
returns the scale factor of the current transform
returns the display x coordinate
returns the display y coordinate of the current image
pan the current
pan the current position to the given absolute position
pan the point to the given point
pan the point to the absolute position
zooms the given point on the current image
zooms in the given point
returns the type of the node
sets the type of the node
returns true if the graph is directed
returns true if the node is a descendant of the node
returns true if the given node is incident
returns the first node in the tree
returns the second node of the second node
sets the first node of the node
sets the second node of the node
returns the adjacent adjacent node
is the directed directed
returns the number of nodes in the tree
returns the number of edges in the graph
returns an iterator over the nodes in this tree
returns an iterator of the edges of this node
returns the root of the tree
returns the depth of the tree node
this method is unsupported in the implementation of
returns the value of the attribute with the specified name
returns the attributes
sets the attribute
sets the attributes
clears the attributes
returns a string representation of this object
returns an iterator over the entities of the entities
checks if the entity is an entity entity
returns the number of aggregate entities
adds an entity aggregate entity to this entity
removes an aggregate entity
returns the offscreen buffer
returns the element at the specified index
adds an action to the list
adds an action to the list of actions
sets the ith action
removes the specified element from this action
returns the number of actions in the list
returns the value of the switch value
sets the value of the switch value
returns the buffered image
returns the font for the given visual item
this method is called by the
returns true if the garbage collect collect collect
returns an iterator over the registry items
set the gc for garbage collection
adds a new class to the list of classes
removes a class from the list of classes
run the given action
draw the image to screen
returns an iterator over the registry items
runs the action
repaints the component
runs the execution of the activity
returns the value of the given rgb value
returns the x coordinate of the x coordinate
runs the specified time in the scheduler
schedule the given activity
schedule a task
run after the specified activity
prepares the graphics2 d object to render the given graphics context
schedule the execution of the schedule
this method is called before the activity is created
schedules the given activity after the activity
cancels the activity
notify the schedule that the activity has completed
adds a listener to the activity
removes the given activity from the list of activities
sets the rendering hints
removes a listener from the activity listener
returns the cumulative distribution function
clears the map
returns the elapsed time between the and the specified time
returns the number of elements in the map
returns the value of the key
runs the given
returns the time in milliseconds to stop the execution
runs the action
initializes the registry
returns the code activity code at the specified key
returns the current run of the given key
returns true if this edge is directed
returns the next time in milliseconds since january 1 1970 00 00
returns true if this node is a tree edge
runs the given instance of the given instance
returns the node that is currently connected to the given node
cancel the given key
sets the first node of the given node
returns the duration of the current recurring duration
associates the specified key with the specified key in this map
sets the second node of the node
removes the key value pair from the map
sets the parent activity
adds a new class to the list of items
sets the duration of the
returns the item with the given class name
returns the parent map
adds a visual item to the list of items
adds a listener to the focus listener
returns the start time of the event
removes the specified focus listener
adds a focus listener to the current component
returns the delimiter string
add a collection of to the list
sets the start time
removes the specified entity from this model
sets the delimiter
hook method for painting the painting of the scene
removes a collection of elements from the list
returns the query
returns the time in milliseconds between the time
sets the current entity
search for the given query
sets the time of the step in milliseconds
clears the current state of the component
returns true if the user is enabled
post a paint operation
clears the current state of the view
sets the enabled state of the
adds the given entity to this container
adds a collection of to this collection
removes the specified entity from this container
paints the offscreen buffer
removes the given collection of
sets the entity
sets collection of elements to a collection
this method is called by the
clears the region
draws an item in the scene
adds a listener to the control
removes a listener from the control
finds the item in the registry
returns the text editor
sets the text editor text
edits the text of the given item
edits the text of the given text
stops editing the editing
sets the renderer that this renderer is used to render the
sets the renderer that this renderer is to be used for rendering
returns the current buffer
gets the id
sets the id
gets the title
gets the value for usr id
sets the title of the
getter for property header
sets the user id
sets the header
gets the body
returns the user name
sets the body
sets the user name
gets the id
gets the id
sets the id
returns the user password
sets the id
gets the date date
sets the date the value was created
sets the usr password
returns the user date
gets the id
sets the usr date
sets the id
gets the name
gets the value of usr first name
sets the name
sets the name of the user first name
gets the id
gets the value for the group id property
returns the user last name
sets the group id
sets the id
returns the name of the group
gets the name
sets the user last name
sets the name
returns the description
sets the description
gets the img id
gets the date
sets the img id
sets the date
returns the image phase of the abductor
sets the image phase of the abductor
returns the image source
sets the img source
creates a probe with the given parameters
creates a linear probe
returns the capacity of the storage
insert the given element into the list
insert a string into the tree
insert the element into the table
creates a new puzzle
returns the number of
this method is called when the user hits the current state
creates a new instance of code cut in clipboard code
creates a new instance of
checks if the given code state code is valid
creates a new puzzle with the specified array
returns a new instance of the object
creates a new move move
returns the number of
returns true if the given code node code is valid
sets the score of the score
returns the score of the score
creates a new puzzle
returns the number of
compares this object to another
invoked when a window is opened
returns true if the server is ready to be ready
compares this card to another card
sets the node
returns the rank of the card
returns the image associated with the given key
store the cache image
returns the card image of the card
returns the reverse image
returns the height of the image
returns the overlap of the current
returns the width of the image
sets the card image
returns true if the ace is a ace
sets the reverse card of the image
sets the name of the
sets the overlap
returns true if the player is a face card
returns true if the card has more elements
returns the next card in the card
returns true if the given suit is in the opposite suit
this method is invoked by the code code method to
returns code true code if the given node is valid
undo the given undo
returns true if the given card is opposite
this method is invoked by the code delete code method
returns code true code if the given node is valid
p returns true if the card is same as the same suit
undo the last undo
this method is invoked by the code visit code method
undo undo
tests if the given suit is equal to the same suit
returns the next number of
returns true if there is a next
returns the next free cell node
p returns true if the given rank is rank
creates a new column move
this method is invoked by the algorithm
undo the given undo
returns true if the given suit is the same as the suit
returns the number of moves in the current position
returns a string representation of the card
compares the specified object with this card
constructor for the code short code field
removes the card from the list
returns a string representation of this object
this method is invoked by the code delete code method
returns true if the card is valid
undo the given undo
creates a new instance of the
creates a new instance of the given
creates a goal
removes the specified card from the list of
creates a goal
the visitor for the visit method
creates a new instance of the dfs
creates a new code code instance
sets the depth limit
returns the number of
returns true if the given code code is in the same
creates a new instance of
sets the current look ahead
sets the maximum size of the
creates a new instance of the object
sets the dead dead states of dead states
sets the
returns true if the is available
removes the specified card from the list of cards
insert the card at the specified index
returns the inode object
returns the key of the key
compares the specified object with this node and its other
this method is invoked by the code code method to
undo the given node
returns the hash code value for this object
this method is invoked by the code delete code method
undo the last undo
this method is invoked by the algorithm
undo undo
this method is invoked by the code delete code method
undo the last undo
returns the object stored in the object
returns the stored object
returns the label of the node
creates a new instance of with the given imm
adds a new to the list
removes the last three points of the last three three points
returns true if the polygon has three points
constructor for the scan instruction scan
returns true if the first point of the are last right
returns the of the given hull
returns the of the given hull
constructs a sort distribution with the given array
compares this node with another one
sets the ratio of the
sets the method
sets the number of threads in the thread pool
sets the
sets the left right side of the
sets the current position of the pivot table
creates a new code quick sort code instance
sets the value of pivot method
sets the number of threads in the current thread
this method is called by the
returns the volume of the current volume
select the index of the pivot table
select the index of the pivot table
move the index to the smallest index
creates a new puzzle evaluator
creates a new puzzle
returns the number of
creates a new puzzle with the given array of
returns the allocation object
creates a new code store code instance
creates a new time block with the specified time and time
adds a new time to the database
returns a string representation of the day
compares this object to another
called when the model is updated
sets the listener
initializes the state
undo the last move
creates a new code neighbor code
updates the last player
returns the depth of the
calculate the number of
returns true if the board is valid
registers the given to the list of managers
returns a string representation of the object
returns a string representation of this object
compares the specified object with this move
this method is used to update the game state
registers the given to the output stream
this method is used to create a new state
undo the last state of the given card
updates the choice selection
creates a new slide with the given name
this method is used to create a board cell
returns a string representation of the object
this method is called by the code code object
returns a copy of this code slide code
returns a string representation of the object
called when the turn is done
select a new element
undo the last turn
returns true if the board is valid
p this method is called by the game
returns the maximum number of moves moves
removes the given board from the board
returns the cell that is currently cleared in the board
compares the specified object with this object
returns a string representation of this object
returns a string representation of this object
returns a copy of this with the same name
move the given player to the given player
returns a string representation of this object
creates a new instance of the applet controller
this method initializes current choice
draw the board
populates the games list with the game
returns the logic that is currently being used by the game
paints the game
returns the selected game type
returns the selected item
this method initializes generate button
returns the selected item
sets the move
move a move
move a move
outputs the string to the output
returns an initiliazed instance of component
creates a new game controller
this method initializes num field
returns an initiliazed instance of component
invoked when an action occurs
returns the opponent player
draw the spot
returns the cell at the specified location
returns the player who is
computes the of the given intersection
sets the player to the given player
sets the entity
returns the entity of the entity
sets the player to the given player
returns the algorithm name as a string
returns the player
sets the completion state for the given state
this method initializes text field3
this method initializes this
reports the of the given
returns the x y position of the specified cell
this method initializes text field4
move the given cell to the given move
draw the board
this method initializes text field5
this method initializes output
adds a new generator to the list of the current
returns true if the number of moves moves are legal
returns the tree
sets the default value for the parameter with the given name
returns the nearest
mouse moved
returns the target
creates a new code selectable multi point code instance
returns the current turn of the player
sets the nearest
creates a new code point multi point code
this method initializes scale checkbox
creates a new code selectable multi point code instance
deselects all selected items in the list
sets the current rectangle to be displayed in the current state
initializes the model
returns the current target
sets the number of
returns the distance between this point and the specified
creates a new instance of selectable point
returns a list of style list
sets the player to the specified player
refreshes the objects
this method initializes output
returns the opponent of the given opponent
executes the given node as a node
visits a node
this method initializes
initializes the model
draw the element on the line
this method is called when the model is updated
sets the model
draw the element with the given radius
ensures that the image is available
sets the drawer for this view
draw the given point
redraws the current image
compares two
draw the state of the given graphics state
this method is called by the
returns the number of nodes in the tree
creates a new state object
returns the new
creates a new instance of state
updates the canvas
returns the number of
returns the number of nodes in the tree
returns the number of in the given state
returns the of the given node
repaints the model
constructs a new pair with the specified char array
returns a string representation of this object
returns the current pairing of the current
returns the of the pair
returns the new pair in the list
returns the
returns the first in the table
returns a new pair of the
compares the specified object with this object
this method initializes interactive
adds a new code code to the list of evaluation
computes the best possible best matching the given
compares this to another
returns the score of the given player
returns the that is currently in the current state
returns the number of states of the states
this method initializes balanced
this method initializes
creates a new instance of the given value
creates a new instance of the given string type
creates a new move evaluation
creates a new move
creates a new move
returns a string representation of the score
creates a new instance of min max
sets the value of the current value
creates a new instance of evaluation
returns the label of the node
returns the font name of the font
returns the font size
constructs a new instance of this class with the specified
returns the string representation of this object
sets the value v
returns the label of the node
returns a copy of this code parallel code
creates a new score node
returns the label of the current node
constructor for primary key
returns the label of the node
returns the font name of the font
move a player
creates a new instance of alpha beta evaluation
returns the initial value
creates a new pair with the given values
returns the opposite of this
called when the model is updated
returns the initial value of the field
move a player to a given opponent
returns the opposite of this rule
move a player to a given opponent
select the index of the given table
moves the index to the given index
assign the given value to the internal value
select the index of the given table
sets the minimum size of the component
moves the index to the smallest index
creates a new object with the specified x y and y
sets the current position of the pivot table
creates a new object
creates a new
creates a new with the given string
creates a new object
creates a new object with the given coordinates
compares the current pointer to the given object
compares two
reduce the number of rows in the array
creates a new segment node with the given node
sets the top y coordinate
sets the bottom value of the bottom edge
sets the left hand side of the line
sets the right hand side of the
creates a discrete interval object from the specified interval
returns true if the given point is inside the rectangle
compares the specified object with this object
returns the hash code value for this object
returns a string representation of this object
returns a string representation of this object
tests this object for equality with an arbitrary object
compares the current contents of this object against the specified object
checks the interval between two interval
compares the specified object with this object
checks if the agentwise
update the interval
returns true if the interval interval interval is equal to this interval
inserts a new interval into the interval
dispose the given interval
removes the specified interval from this interval
returns a string representation of this object
creates a new segment tree
returns the slope of the
updates the given interval
creates a new instance of slide move
creates a segment tree
returns the sign of the sign
this method is invoked by the
undo the given undo
creates a new puzzle with the given array of
returns a string representation of this object
creates a new instance of slide move
this method is invoked by the code visit code method
returns the y intercept
returns a new
undo undo
returns a string representation of this object
helper method to validate the given array of integers
constructor for the code float puzzle code
returns a string representation of this object
returns true if the given node is a valid
returns the string that represents the number of pairs of the given
returns the number of nodes in the tree
returns a new object
tests this object for equality with an arbitrary object
creates a new instance of car with
adds a new to the list
helper method to validate the given array of integers
removes the last three last three points
returns the string representation of this node
returns true if the is valid
returns the number of elements in this list
this method returns the string representation of the node
returns true if the given node is a valid
returns the mark of the specified amount of seconds
returns the maximum number of moves moves
returns the rules for this rule
this method is called when the user wants to restore the state
returns a copy of this object
move move to given position
returns true if the point is on the right side of the
compares the specified object with this object
returns a string representation of this object
returns true if the board is valid
this method is used to create a board state
returns the cell of the board
tests the equality of this code player code
creates a new cell with the specified size
creates a new tic state
returns the board that the board was played
returns true if the cell is adjacent to the specified
returns a string representation of this object
returns a string representation of the object
returns the logic object
swap two board coordinates
returns a string representation of the current board
returns the mark
returns the mark mark
creates a new instance of player
reset the tic
returns the number of columns in the table
returns true if the given player is equal to the current state
returns a string representation of this object
returns the current state of the given code code
creates a new instance of the
sets the opponent
returns the number of rows in the model
turn on the game state
visits a node in the tree
sets the logic to the given logic logic
returns the key for the given key
returns the score of the score
creates a new line segment pair with the specified segment pair
compares the specified object with this segment for equality
creates a new tic board
returns the label of the board in the
returns a string representation of this object
sets the score of the score
compares this node with another one
compares two
creates a new board with the given board
compares two objects
creates a new line with the current state
creates a new event point object
compares two objects
inserts the given list of segments into the list
returns true if the board is empty
adds a new segment line segment to the list of
deletes the range of the given range
sets the sweep point
returns true if the event is empty
returns the hash code of this object
inserts a new event to the list of endpoints
inserts the given list of segments into the list
adds a lower line segment to the end of the range
returns the minimum value of the event
returns true if the given point is contained in the event
returns the event that is fired when the event is fired
adds a segment to the end of the list
adds a new code line segment code to the list of segments
returns the label of the
returns a string representation of the object
concatenates the given list of strings and returns the result
inserts a new entry into the list
returns the minimum value of the event
compares this object with the specified object for order
returns true if the specified point is contained in the event
returns true if the game is won
returns the nearest x y coordinate
constructs a new instance of the code uniform generator code
creates a new grid generator
creates a new random generator
creates a new instance of the number generator
creates a new instance of hub generator
creates a new generator
creates a new instance of the given radius and radius
propagate the to the given node
creates a new circle generator
creates a new instance of uniform generator
creates a new circle with the given size
returns the time in milliseconds
returns the character at the specified position
creates a new vertex info object
constructs a new vertex info object
adds a b b to the map
creates a new instance of the given network
returns true if the given cell is a
returns the type of the edge
outputs the graph
this method is called by the system
populates the graph with the given code edge code
creates a new
the graph
add a new to the end of the list
creates a new instance of the network layer with the given index
add a to the
compute the of the graph
returns the element at the specified index
sets the element at the specified index
outputs the current result
assigns a new network to the given network
creates a new instance of pair pair pair object
compares the specified object with this object
returns a string representation of this object
creates a new edge info object
clears the specified cell
creates a new edge info object
returns true if the given element contains the given element
returns a string representation of the object
creates a new instance of the given network layer
construct a new with the given parameters
returns the hash code of the object
creates a new flow network
sets the cell value at the specified position
creates a new instance of
this method computes the integral of the given source and returns the
creates a new object
creates a new instance of cos
creates a new object with the given string
compares the specified object with this instance for equality
creates a new
returns a string representation of the object
returns true if all the are cleared
creates a new object with the specified values
returns the coordinate at the specified coordinate
creates a new instance of code value code instance
returns the distance between the two points
returns the value of the element
returns the number of
returns a hash code for this object
sets the previous node
moves the node to the next element
creates a new code list iterator code instance
returns true if the given player is a same as board
returns the next element in the iteration
creates a new list iterator
returns the left hand side of the
creates a new node with the given element
removes the current element from the list
removes the object from the database
this method is used to determine if the given target matches the
this method is used to determine if the given model element matches
searches for a key in the table
sets the left value of the given field
returns true if the given iterator can be reused
appends the given element to the tail of this node
constructor for the standard table
constructor for the table reporter
returns the element at the specified position in this list
creates a new simple hash with the given size
creates a new instance of list
calculates the usage of the table
returns the hash value of the given string
returns the right value of the specified element
removes the head of this deque
returns the minimum number of collisions in the table
concatenates the given code code to the end of the list
returns the maximum number of collisions in the pool
searches for the specified object in the list
sets the value of the right hand
load the
removes the given element from the list of all the elements
returns the label of the node
adds a new k key
returns true if there are more elements in this iterator
returns the hash code for this object
creates a new instance of double list
compares the current to the given object
visits the binary node
tests whether the given points lie in the
this method validates the contents of the list
tests if the given code p code intersects the
returns the label of the node
sets the median of the subtree
returns true if the given code code is contained in this
sets the number of nodes left to the left of the tree
sets the root node of the tree
returns the element at the specified position in this list
returns true if the given value is a valid value
returns true if this intersects with the given
compares this object with the specified object for order
append the given element to the end of the list
returns a string representation of the object
concatenates the given code float code
sets the root node of the tree
insert a new object into the stack
removes the first occurrence of the specified element in this list
sets the storage type
removes the last element pushed onto stack
creates a new instance of
returns the number of elements in this stack
removes the given inode
removes the specified element from this list if it is
creates a new state object
insert a new node into the tree
insert a new table into the table
this method is not supported by this implementation
returns the current
returns the string representation of the node
sets whether or not the given should be allowed to be
removes the head of this queue
returns the number of in the table
removes the given inode
insert a new inode into the list
returns the number of occurrences of this node
removes the given inode
removes the current object
removes and returns the last element of the list
inserts a new inode into the queue
returns the number of children
removes the queue
removes the given inode
returns the number of elements in this collection
inserts a new inode into the table
removes the given inode from this collection
returns true if this is empty
returns the number of closed elements
removes the code element code from the code code
returns the debugger for this
creates a new instance of the first search element
creates a new instance of code transition code
creates a new instance of the dfs instance
creates a solution
sets whether or not the legend should be used to draw the
creates a solution
creates a solution
constructs a solution
returns true if the request was successful
returns the number of moves in the current one
find the first matching key
returns the string representation of the node
constructor for the comparator
returns a string representation of this node
compares two objects
constructs a new instance of this class given a point
solves the
sets the root of the tree
creates a new node
returns the below below this node
returns true if the region is
returns the nearest ancestor of this
returns the above
returns true if this node is a leaf
accepts a visitor
traverses the tree and traverses the tree traverses the children of the
traverse the tree
returns the region
returns the below below this node
returns a string representation of this object
returns the next dimension in the tree
sets the below
updates the rectangles coordinates
returns the next dimension in the list
sets the value of the code above code property
returns the region that this is associated with
removes all the root objects from this tree
removes the mapping for this key from this map if present
traverses the tree and traverses the tree traverses the children of the
returns the above
traverse the cursor
sets the below
resets the counter to zero
returns the number of times the user has to be made
returns true if the iterator has another element
sets the value of the code above code property
returns the number of elements in the specified array
returns the root of the tree
returns true if the given point is below the given
clears the current state of the tree
fixes the vertical bounds of the text area
construct a construct node from the given value
returns the next element in the iteration
sets the root node of the tree
returns the average number of the specified
returns the maximum value of the specified
calculates the of the given target
returns the minimum value of the specified
returns the of the given n
searches for a in the tree
removes the object from the database
returns the row at the specified index
searches for the given in the list of available
returns the table name
build the string representation of the given string builder
returns the histogram as a string
returns a string representation of this object
validate the root
returns true if this is empty
sorts the heap
sorts the matrix
adds the count to the list of all the
returns a string representation of the time
compares the specified object for the current time
returns the minimum value in the tree
draw the image in the tree
draw the
returns a string representation of this object
creates a new legend with the given string
draw the image in the tree
returns the label of the legend
constructs a new binary binary object with the given
returns the smallest element in the
decreases the key by the given id
creates a new simple string with the specified char array
creates a new simple string with the specified string
returns a string representation of this object
sets the ordering of the ordering
sets the rank of the rank
returns the type of the node
returns the type of the edge
creates a new element
creates a new element with the given name and symbol
creates a new board with the given number of
checks if the given row is valid for the given row
returns code true code if the board is a random board
returns the key value pair of the key
returns true if the is stable
returns a string representation of this object
compares the specified object with this element and returns true if they
mark the start of a new
mark a goal as a goal
accepts a visitor
visits the given edge
visits the given edge
tests that the zero length spaces are zero
returns a string representation of the node
test
mark a as a
returns the number of
returns the string representation of the object
returns a string representation of the object
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
creates a new instance of the move move
returns true if the given code code is valid
creates a new puzzle
creates a new puzzle with the specified x
pack a pack
returns a deep copy of the object
sets the score of the score
compares this multi operation to another one
test
returns the value to which this map maps the specified key
returns true if the map contains the specified key
adds a new child to the tree
inserts a child at the specified index
inserts a child at the specified index
removes a child from the tree
removes a child
returns true if the specified interval is contained in the list
returns the intersection of this code code
returns a new range of the range of this range
checks whether the given integer contains the specified value
returns the intersection of this code range code
returns a new range of range of this range
returns the build
returns the code code instance for this code code
returns the build
gets the value of the senha property
this method initializes this
open the database
insert a new bill to the
this method is used to delete the specified element
return a cursor positioned at the position that the database will be
return a cursor over the list of all the in the
returns a cursor over the list of all active notes in the
return a cursor over the list of all inactive hours
returns the currency
sets the value of the currency property
returns the fixed rate of the
sets the fixed rate rate
returns the amount of for the given payment
initialise all the data members
initialise the
returns the calendar that was posted to the event
returns the amount of payment payment payment
returns a clone of this object
returns the start calendar
returns the adjusted calendar
returns the end date of the
sets the value of payment calendar
returns the calendar that was used to create the calendar
sets the periods
sets the calendar
returns the number of in the list
returns true if the two dates are valid
gets the value of the adjustment type property
zibog auto generated method
returns true if the is empty
sets the adjustment type
gets the
sets the payment business day
gets the value of the business day property
returns true if the given object is contained in the list
sets the
returns the amount of the amount
sets the business day convention
gets the value of the business day property
sets the amount of the amount
adds a period to the end of the list
returns the currency
returns the holiday calendar
sets the business day convention
sets the currency
removes the specified element from this set if it is present
sets the holiday calendar calendar
returns the payment holiday calendar
returns the amount of time the amount in seconds between days
sets the time interval that this event is to be used to
adds a set of elements to this collection
sets the amount of time to be used for the time in
returns the holiday calendar
returns the rate
sets the holiday calendar calendar
sets the rate
removes all objects from the collection
returns the calculator calculator
removes all objects from this collection that are contained in the
sets the calculator
clears the
returns the value of the specified element
replaces the element at the specified index
returns the adjusted fraction of the
adds a new element to the list
removes the element at the specified position in this list
returns the index of the specified object in the list
returns the index in this list of the last occurrence of the
returns true if the aggregator has been replaced
calculate the fraction of the specified period
calculate the fraction of the specified period
calculate the fraction between two hours minutes
calculate the fraction of the given period
calculate the fraction of the specified period
calculate the fraction of the given periods for the given time
gets the value of the id empresa property
sets the id empresa
gets the value of the id property
sets the id
sets the endereco
returns the
sets the
test of get entity manager method of class org
test method for
test of update method of class
test of get method of class
test of delete method of class
sorts the array
finds the next row in the table
finds the first row in the table
update warehouse warehouse
creates warehouse product
updates the general for the given object
adds a new message to the list of messages
adds a message to the list of messages
adds a message to the list of messages
sets the arguments
adds a message to the message
returns the parent category
sets the parent category
returns the formatted string
returns the total quantity of the
returns the total amount of the confirmed quantity
returns the total number of items in the cart
returns the minimum quantity of the product
returns the maximum quantity of the current
returns the default quantity in the product
called when the value of the size changed
adds an action listener to the listener
returns the current
returns the report
returns the report header
returns true if the special condition is present
returns the data scroll pane
returns the buttons panel
sets custom display property
called by the framework to perform a view on the view
returns the tree
sets the tree
returns the message for the given table
sets the visibility of the button
sets the visibility of the buttons
sets the visibility of the buttons
returns the name of the message that is currently selected
updates the object with the given row
sets the classifier
sets whether the tooltip should be enabled
sets the readonly flag
sets the button to the button
returns the form session
sets the form session
at startup create and show the main frame of the application
this method is called by the framework to perform the
update the product of the parent category
gets the category list panel
returns the properties for the entity right
checks if the given code special code is allowed to be allowed
verifies that the given validation is submitted into the submitted
tests that the business validation result code
validate the business service that is not null
returns the value of the given string as a string
returns the horizontal alignment of the field
sets the horizontal alignment of the text
sets the formatter factory
sets the formatter
sets the document
returns the document
returns the number of columns in the table
sets the number of columns in the table
returns true if the field is editable
sets the editable property
sets the text
returns the text field
returns the maximum length of the characters in the text area
returns true if the literal is a literal
returns a clone of this object
adds a new update to the table
add or update a row
removes the specified row from the model
returns true if all the nested code processes code
returns the error title for the given throwable
returns the error message for the given throwable
returns the error message for the given throwable
returns the error category of the given throwable
returns the level of the log4j logger
sends a job to the server
invoked when the target of the listener has changed its state
returns the coefficient for the given element
get the annotation list
this method is used to get the request
returns the description of the given directory
returns the date as a string
returns the width of the image
returns the list of tags
this method is called by the
sets the goods
returns the user
sets the user
this method initializes this
returns the owned by
sets the owned by
sets the bpm speed
sets the duration of the duration in seconds
sets the duration of the rhythm time value for the slider
change the tempo of the
stops the playback
restart the
this method is called by the to rewind the sequence
mute the audio
sets the
starts the playback of the sound
starts the simulation
restarts the current state of the
restarts the specified measure
returns the number of measures
returns the current measure value
sets the number of measures of the current measure
sets the volume of the volume
returns the current volume
sets the volume of the volume
sets the volume of the volume
returns the duration of the duration
returns the duration of the audio
returns the position of the node
returns the position of the current image
returns the offset of the image
returns the exact offset of the current entry
processes all the data from the given data array
sets the offset of the current image
processes the given array of floats
sets the offset of the current
change the speed of the current measures
removes the current from the list
consumes the next character and advance the next character
checks the state of the
consumes the next character and consumes the next character
sets the value of
writes the given input stream to the output stream
executes the ant task
push the current state onto the stack
pops the current state of the stack
returns the current state of the parser
returns an initiliazed instance of form component
returns an initiliazed instance of source language component
returns an initiliazed instance of target language component
returns an initiliazed instance of spacer component
returns an initiliazed instance of source text component
returns an initiliazed instance of target text component
returns an initiliazed instance of item command component
returns an initiliazed instance of switch language component
removes an action listener from the button
returns the color of the color
sets the value of the toggle pattern
sets the flag indicating whether or not to display items
creates a menu with the specified parent
adds a menu item to the menu
creates a menu item listener
sets the color listener
returns true if the current is a double
returns the rgb value of the rgb color
sets the rgb color
returns the rgb value of the rgb color
sets the rgb color
disposes the tab
sets the current map
creates the control panel
returns true if the current user is a double
returns the initial animation time
dispose of resources
returns the time of the animation
returns the animation flag
sets the animation to be animated
paints the image at the specified location
move a coordinate in the list
moves the grid coordinates in the given position
invoked when a mouse button is pressed on a component
returns the capacity of the buffer
removes the code char code at the specified position in this list
removes the code char code at the specified position in this list
append a boolean value
checks if the url is valid
sets the value at the given index
reverses the current
returns the string representation of the specified array
sets the value of the parameter
sets the character at the specified index
adds an attachment to the list of attachments
sets the length of the buffer
appends the given character to the end of this buffer
returns true if the version is
returns true if the version is
trims the buffer to the size of the buffer
returns a string representation of this object
returns the code code used to render the content
returns the value of the given string
append the given chars to this font
returns the new char sequence
returns a new code char sequence code object that is
returns the buffer as char sequence
deletes the specified character in the buffer
append the given chars to the end of the buffer
inserts a character into the buffer
builds a url to the url
append a value to the buffer
checks if the given string contains only numbers
append a float value
append a value to the buffer
append a value to the buffer
append an object to the list
append a value
returns the selected
returns the url of the search url
sets the value of the textbox length property
gets the value of the text field property
append a string to the end of the buffer
returns the class
returns the search parameter
returns the value of the on change property
appends the given character sequence to this text
appends the specified character sequence to the end of this list
returns the character at the specified index
deletes the specified element
removes all of the elements from this collection
deletes the element at the specified position in this list
encodes the
decode the
returns the index within the string of the specified character
returns the index of the first occurrence of the specified string
returns the index within the string of the specified string
inserts the value at the specified position in this list
inserts the specified element at the specified position in this list
inserts the char array into the buffer at the specified index
inserts the char array into the buffer at the specified position
inserts the value at the specified position in this list
inserts the value at the specified position in this list
inserts the value at the specified position in this list
inserts the value at the specified position in this list
inserts the value at the specified position in this list
inserts the object into the list
inserts the string at the specified index
returns the length of the buffer
replaces a string with the replacement
replaces the replacement with the given replacement
replaces all occurrences of the string with the replacement
replaces the replacement characters with the specified replacement
replaces all occurrences of the replacement char with the specified
resets the string to its initial state
splits the given string into the specified
splits the string into the string
returns the substring of the string
returns the substring of the sequence of the given substring
returns a sub sequence of the given sequence of characters
returns the string representation of this sequence
decode the character
unread a cr
this method is called by the command handler to execute the command
this method is called to indicate that the resource has been processed
process a file
returns the instance
this method is called by the thread
sets the path
returns the content of the content of this object
adds a timeout observer to this object
validate the value of the property
removes a timeout observer from the list
stops the redirector
sets the path
sets the system
restore system properties
sets the input file
returns the macro macro
returns the initial macro
sets the input string
sets the force
clones the commandline
executes the command
invokes the given method on the given object
creates a new instance of the weaving exe
executes the given exec command
creates the watchdog
process a file
execute the command
returns the converter that is used to convert the
sets the id of the factory to be used to generate the
creates a new code file code object for a code reg code
creates a new descriptor for the given class descriptor
sets the
sets the work manager for the project
set the process manager configuration
sets the retry manager
adds a to the
clears the current arguments
add mapper to the mapper
add a new file to the mapper
execute the command
sets the
sets the classname of the class
sets the jar file
sets the jvm
sets the
sets the
sets the
sets the output file
checks if the destination directory is valid
this method is called to indicate that the resource has been processed
returns the name of the
ensures that the given file is the same as the directory
returns the expression
creates a new instance of indent writer
reloads the configuration
returns a string representation of this object
returns a url for the given url
returns true if the url is absolute
adds a assertion status class to the list of
adds a assertion status to the list of
returns the default assertion status
returns true if the url is
returns the default handler for the project
returns the parameters for this parameter
sets the default assertion status
sets the default flag
resolve the path to a file
sets the value of add all
transforms a path to a string
sets the handler class loader
reports the report
creates a new role with the given name
check the loader
returns the default handler for the current project
returns a new instance of the project handler
returns a clone of this object
returns true if the deployment descriptor is valid
returns the handler set for this code handler code
handles error messages
check if the current instance is isolated
handles error messages
sets the
check if the parent is a parent of the parent
sets whether the libraries libraries are enabled
returns the adapter for the adapter
sets the isolated attribute of the object
executes the strong tt tt strong strong strong strong tt strong
returns the loader for the loader
returns true if the report is
sets the root package loader
returns the name of the reference
sets the
sets the format of the current format
sets the hierarchy of the hierarchy
sets the first attribute of the object
sets the flag
sets the flag that controls whether or not the attribute is
handles error messages
sets the adapter
sets the system package root
adds a ant parameter to the
handles error messages
returns the log level
returns true if the is a duplicate
returns true if the application requires a
handles error messages
returns the default parent class loader
handles error messages
sets the loader attribute of the ami class loader object
adds a loader loader
sets the location of the file
begin parsing of the given string
sets the class loader for the given classloader
adds a binding to the list of parameters
sets the attribute of the object
returns the default parent
this method is used to create a package architecture
begin parsing of the given string
add a loader loader
sets the path to the blog
sets the loader attribute of the object
begin the xml document
returns the parent class loader for the given class loader
add a loader loader
called by the subclass to implement the
creates a new
this method is used to provide the beginning of the
sets the loader loader
creates a new classpath
reports the given report as a string
begins a new
creates a new
begins a comment
begin a new entry in the table
executes the task
adds a new to the list of existing existing
called after the beginning of the beginning of the text
begin a new entry in the database
begins a new process
begin a new package
returns the classpath to use
begins a report
begins a new process
begin the beginning of the table
this method is called before the beginning of the
returns true if the report is
sets the file to be used for this file
called when the user selects a unassigned role
returns the handler
sets the format
begin the beginning of the table
creates a new report for the given runtime
end the end of this element
sets the hierarchy of this component
sets the
called when the end of a child is ended
adds a to the path
returns the parent loader
this method will be called from the webpage to build the
creates a new role object
ends the current process
called when the end of the end of the end of the
returns the new handler set for this handler
returns the super class loader
returns the handler set for this code code
returns the current instance of the code code
creates a new role object
called at the end of the end of the number of errors
creates a new
checks if the given package is valid
handle the classpath entry
sets the status of the status
sets the name of the class
called when the end of the packages ends
sets the name of the package
returns a new instance of the handler set
creates a new unassigned roles
report the end of the report
returns the handler
end the end of the list
sets the classpath to use for this class
returns the end of the attribute
empty method for the user interface
sets the classpath to use for this classpath
returns the parent loader
returns the end child of the given string
adds a new path to the path
returns the end of the string
returns the super class loader
sets the loader
reports an attribute of the current attribute
handle the classpath entry
ends the given uri
this method is called when the end of a
sets the parameters
reports the specified role
sets the classpath to use for this classpath
adds a path to the tree
sets the parent loader for this loader
returns true if the action is supported by this factory
reports the class of the class
end the given string
ends the given uri
adds a new entry to the report
sets the loader used to locate the loader
end the given array of errors
end the given string
adds a reference to the given reference
reports the url of the entry in the report
sets the parameters
sets the reset flag
reports an error in the report
sets the parent loader
end the given array of errors
sets the parent loader
this method is called when a parent is
returns the end of the given string
sets the super class loader to be used for the loader
reports the parent of the parent
returns the end of the given string
sets the flag indicating whether or not the should be saved
this method is called by the
p this method is called when the end of the report is
sets the super class loader
this method is called when the user selects a role
p end the given string
sets the super class
add a predicate unless it is present in the set
end the given string
this method is called when the role is unassigned
end the string of the given string
this method is called when the user selects a unassigned role
sets the path to the
formats a string using the default name
this method is called when the user selects a unassigned role
returns a string representation of the given type
appends the given other to the list of elements
formats a string using the default value
returns a string representation of the given type
begins a new number of occurrences of the given
returns the class name of the class that matches the given class
returns a shallow copy of this object
sets the current state of the tree
begins a new
returns the class name of the class that matches the given class
begins a new number of entries
returns the entry for the given entry type
begins a new number of errors
returns the that is used to generate the
begins a new package
returns the entry for the given entry type
begins a report
formats a url entry in the format
begins a new
called when the user selects a unassigned role
end the end of the
returns the entry url
end the child of the tree
formats the given string to the given output array
ends the current token
end the end of the list
formats the given string to the output
end the given number of errors
creates a path to the project
end the packages
end the report
end the given number of roles
end the end of the
creates a new
reports an error to the current scope
report a report of a role
reports the given class as a
creates a new
reports a entry
returns the package name for the given package
returns the package name for the given package
reports the url of the entry in the report
reports an error
returns a string representation of the given role
report a
report a
returns a string representation of the role
report the package to the package
reports the report of the given role
reports the role of a role
sets the location of the resource
returns the default parent class
returns the default parent
sets the path to the given path
returns the parent class loader
makes this instance in effect a reference to another
sets the path to the
returns true if the action is supported by this action
returns a path to the current path to the path
translates a file to a file
returns the type of the label
returns true if the type is singleton
begin uml doc
called by the subclass to perform a new
creates a new
creates a new
this method is called before the beginning of the
begins a new process
begins a comment
called after the beginning of the beginning of the text
begin uml doc
begins a report
this method is called before the beginning of the
called when a is finished
called when the user selects a unassigned role
ends the end of the
called when the end of a child is ended
called when the end of a comment has been reached
reports the given code code as a code report code
returns the parent class loader
called when the end of the end of the end of the
sets the default flag
called at the end of the end of the number of errors
sets the add all attribute
reports the of a
adds a new assertion status class
adds a assertion status to the package
sets the handler
reports the of a
called when the end of the packages ends
gets the value of the default assertion status property
returns the default handler
returns the parameters
report a report of the given role
report the end of the report
returns true if the user can be used to be
sets the default assertion status
sets the value of the
reports the given role to the current role
returns the classloader for the specified classloader
check if the current loader is not allowed
end the association end of the roles
returns the adapter for this adapter
returns the name of the resource
returns the adapter for the specified context
returns the loader for the loader
empty the end of the list of unassigned roles
handles error messages
sets the adapter
returns true if the action is supported by this action
returns true if the current is possible
sets the loader class loader
sets the classloader for this class loader
sets the value of
sets the loader to be used for this loader
this method is used to extract the end of the given string
ends the current context
this method is called when a new attribute is selected
reports the given code code
adds a new entry to the list of entries
report the end of a parent
reports the of a parent
reports the given role
adds a new role to the current group
returns a string representation of the given collection of
returns a string representation of the given collection of
returns a string representation of the given role
returns a string representation of the given domain
normalizes the given string
test the
reloads the cache
returns the engine
returns the current context
gets the value of the denied context property
returns the ancestor element of the given element
returns a string representation of the document
returns the string representation of the header
returns the value of the given action
binds key to the given key
process the request request request
tests the correct functionality of the
test method for
test of get average method of class
test of get max method of class
test method for
test of get min method
test of get name method of class
process start tag
registers a new
unregisters a registered class
returns the
sets the
sets the
render the end of this tag
p process when the end tag is pressed
process the end tag
returns the value of the out property
process the end tag
sets the out flag
sets the out value
returns the
render the end of this tag
sets the
sets the
this method is called when the user clicks the end of the
returns the
sets the
save the configuration
returns the configuration item for the specified key
sets the
returns the keys of the keys
save the configuration
reloads the configuration
adds a connection to the database
the connection is
reloads the current configuration
returns a change form of the
returns a change form of the
returns the value of the quotation field
returns the name of the
returns the string
returns a string representation of this object
returns the string representation of the current value
returns the value of the code get code property
returns the value of the code text code property
returns the value of the current value
sets the value of the parameter
sets the value of the current value
sets the value of the text
returns the form of the
load a class by name
returns a change form of the
returns the value of the lt gt tag
returns the value of the attribute
sets the value
returns the form of the
returns the
returns a string representation of the object
returns the value of the current value
returns a string representation of this object
sets the value of the thermometer
returns the string representation of the receiver
returns all the targets in the map
returns the target id of the target
adds a new structure to this structure
reloads the current model
returns the target of the
sets the target
returns true if the given structure has a target
sets the target id
returns the structure of this
returns the id of the definition
returns the number of
returns the number of seconds the has been changed
sets the number of
returns the integer index of the
returns the boolean value of the
sets the boolean value of the given property as a boolean
returns the boolean value of the
sets the boolean value of the code code property
decode the request to be used to create a request
update the duration in seconds
plays the current playback
starts the player
sets the focus to the specified index
update the
returns the midlet that is used to create the midlet
determines if the given direction is a legal direction
updates the list of focus
move the current song to the specified index
returns the selected file
move the current song to the specified index
returns the next track file
returns the previous track
adds a new object to the list
adds a new element to the list
move the selected item in the history
adds a vector of elements to the end of the list
fires an event
sets the path to the given path
clears all the elements in the table
returns the element at the specified index
returns a new row at the specified index
replaces the element at the specified position in this list with
replaces the element at the specified position in this list with the
inserts the specified element at the specified position in this list
adds a new element at the specified index
removes the leading and trailing
invoked when the target of the listener has changed its state
returns the title of the file
returns the url of the file
sets the actions to the given state
sets the state of the screen to full screen state
returns the icon for the given path
initializes the
returns the node that is currently being used for this node
this method is called when the user selects the
returns the list
renders the hour
returns true if the given hour is
returns a model that matches the given path
returns a new animation with the specified path
returns the list
returns the list of
returns the title of the window
sets the hour in server
returns the model
sets the minimum number of server min server
returns the config file
sets the key manager
sets the walking animator
sets the avatar node
sets the terrain node
returns the avatar node
returns the focal height
sets the node that the avatar is stored in
sets the height of the avatar of the avatar
returns the
sets the height of the avatar of the avatar
returns the current animation
sets the walk animation
returns the standing animation
sets the standing animation
builds the input key
update the angle of the angle in the
returns the file name of the walk to be used for the
sets the file name walk to the value of the file name
returns the value of file name standing
update the angle to the left side of the current
sets the value of file name standing
returns the speed of the crane speed
builds the
sets the walk speed
update the angle to the right
returns the speed in the current animation
sets the speed of the animation
returns the start point of the point
move forward one step
sets the start point
this method is called when the game quits
returns true if the player is turning left
sets the turn left
returns true if the turn is turning right
sets the turn right
returns true if the current move is possible
sets the move front
returns the angular velocity of this request
sets the angular velocity
sets the number of the current value
gets the date formated in the date format
sets the selected avatar
sets the value of pass word
returns the
sets the root node of the tree
sets the intensity value
sets the target of the node
deletes the avatar of the given avatar
sets the selected option
calculates the start row number
returns the selected option
returns the avatar with the given id
calculates the end row number
returns the color of the background
sets the background color of the
returns the animation type for the given type
render the html footer
returns the hour of the
returns the online online online online online
returns the hidden fields html
returns the number of visits the
returns the unique minor time for the
checks if the given jar file exists in the project
returns the data source
checks if the configuration file exists
upload the file to the given file
sets the data source
returns the size of the resource folder
returns the total number of files in the folder
returns the start row number
get the time for a resource pool
sets the start row number
returns the end
returns the destination path for the action
sets the end
creates a jar file
returns the maximum number of rows per page
save the configuration
gets the value of the url banner property
sets the maximum number of rows per page
returns the config
returns the text of the registry
sets the registry text
returns true if login is enabled
sets the value of activate login
sets the page number
returns true if the message is shown in the
sets the show msg
gets the value of the msg property
sets the msg
returns the activation text
sets the column numbers
sets the activation text
sets the language messages
sets the url of the url to the url
returns the registry type
sets the registry type
sets the order by
returns the secure key
sets the secure key
sets the order asc value for this order
gets the value of the win title property
sets the title of the
returns the application config
checks whether the user exists in the database
insert a user into the database
deletes a user
this method is called by user to login to the user
activate a user
sets the user id of the user
updates the user
returns the user object associated with the given username
update the of the
returns true if the should be
checks if the request parameters is available
returns the url binding
sets the title of the window
returns the application context name
gets the value of the id property
returns the animation type
sets the id
sets the animation type
returns the scale factor
sets the scale factor
this method will be called to request the server
returns the job
sets the job
sets the value of institute
returns the registry date
sets the animations of the animation
sets the date the server was used to create the
returns the file path
sets the file file
returns the value of the attribute
sets the value of the administrator property
returns the fix height
sets the fix height
returns the
sets the online status of the server
sets the
returns the session id id
returns the focal width
sets the reg session id
sets the avatar width
returns the session id of the session id
sets the session id
returns the maximum height of the image in meters
sets the time step height
returns the id of the avatar
returns the of the
sets the
returns the of the
sets the
returns the of the
sets the
the
deletes the object entity
deletes all entities from the collection
save the database object
update an existing entity
returns the listener for the
returns the action for the given text
returns the action for menu item action
sets the coordinates of the current map
returns the action for the given text
this method is called when the radio button is received
sets the coordinates of the mouse click
returns the action for the given text
returns the action for the given text
returns the action for the given text
returns the action for the given text
returns the preferred location of the
sets the master table headers
sets the selected date
returns the value of the month
returns the component that is associated with the specified menu
sets the views menu
returns a list of menu components
creates a new jbutton
returns the add new view menu item
returns the menu
this method is used to generate a for the given
updates the data structure
returns the data reader
show the chart frame
reads the next line from the input stream
checks if the string is empty
creates and returns a new chart
run the thread
returns the string representation of the given value
creates a new chart
returns the
returns the magnitude of the
returns the magnitude of the magnitude of this vector
returns the magnitude of the magnitude of the
returns the calculated calculated value
sets the value of magnitude
sets the magnitude type
sets the calculated weight of this code code
sets the magnitude of the
show chart frame
returns the site location of the site
gets the value of the site longitude property
returns the distance
returns the content length of the content
returns the intensity of the character
returns the
gets the value of the property
sets the description of the description
sets the content length
gets the value of the property
sets the mime type
gets the value of the property
returns the population
sets the name of the source file
gets the value of the property
sets the info
gets the value of the property
sets the source type
puts a new message in the database
returns the user object associated with the given field
sets the distance
returns an iterator over all the fields of the current
sets the intensity of the
sets the
sets the lat lon of the lat lon
sets the population
sets the lat lon for lon
sets the
sets the x y location of the point
sets the
sets the latitude
sets the site for the latitude of the site
returns the latitude
sets the longitude of the site
sets the longitude of this object
sets the name
returns the meta data for this object
returns the longitude of this
sets the
returns the path to the resource path
sets the x coordinate of the x coordinate
returns the meta data for the given data
sets the
load the metadata
sets the y coordinate of the y axis
deletes the from the database
sets the radius of the circle
creates a duplicate object from a result set
insert a magnitude of the current
this method is used to set the url for the given url
insert a new into the database
initializes the data source
returns a list of all the
returns a list of all the constraints for the given role
returns the maximum number of rows in the database
returns the result of the query
get the result of the query
update the url with the given url
returns the catalogs
this method is used to load the shapes in the given path
returns the set of all catalogs of the catalog
load catalogs
load the background
returns a map of frequencies for a given function
returns the priority of the catalog
returns the catalog associated with the catalog
returns true if the given population is within the bounds
returns the catalog name for the catalog
returns a list of all results of a
returns the catalog source catalog
returns the number of catalogs in the catalog
returns the catalog data for the catalog
returns a list of all results in the database
frees up the connection to the given database connection
load the from the given
sets the properties
returns true if the mouse is clicked on a button
returns the id of the
returns true if the given is
the map
sets the coordinates of the mouse click
sets up the field level help button
returns the coordinates of the mouse in the
reads the applet parameters
compares the specified object with this principal and returns true if they
returns the url for the given url
returns a string representation of this object
this method is called when a mouse click is clicked
this method is called to register a user
load properties from the properties file
returns a printer for the given print writer
creates the help set
returns the notification
throws an assertion exception if the given condition is true
upload the given file to the
uploads the document to the document
returns the default interval

returns a list of all the sources
stops the execution of the task
this method is called when the user selects the response
returns the center of the
returns the principal associated with the given username and password
returns the last update of the given source
returns the name of the given code map code
returns the countries for the countries
returns the interval for the given interval
returns the link to the given text
returns a map of sources as a map of sources
returns true if the principal is a principal
returns the content of the content of the content
called when a session has been created
called when a session is destroyed
called when a session has been made
called when a session is destroyed
returns the xml representation of the
this method is called when the source catalog is selected
send a single request to the server
send a response to the server
returns a string representation of this object
classifies a given test point
classifies a test point
train the given points
classifies a test
classifies a test
moves the cursor to the next position in the table
returns the primary key column name
returns true if the exception is thrown by the exception
sets the exception thrown exception
creates a new instance of db access
returns the content of the object
adds the given object to the data object
sets the content of the content object
returns the type of the element
returns the content of this element
adds the given object to the list of objects
sets the content of the object
sets the new lines
returns the type of the element
adds the given object to the list of objects
sets the content of the object
returns the content of the dictionary
returns the type of the element
adds the given object to the dictionary
sets the content of the dictionary
returns the content of the object
sets whether white spaces are white white
adds the given object to the list of objects
returns the type of the element
returns the type of the element
builds a dom document from a file
creates an object from the document
writes the contents of the given document to the given output stream
reads from the input stream
parse the content of the given reader
builds a document from a url
builds a dom document from the given input
returns a list of all the public uris of the given class
writes the document to the output writer
returns a string representing a document
returns a string representing the element specified in the given element
returns a string representing a document
returns a string representing a element
returns a string representing the element
returns a string representing a element
returns a string representing a element
returns the string representation of this object
creates and returns a writer that will be used for writing to
returns the string that is prepended with the given element
returns a string representing a indented element
returns a string representing the given element
returns a string representing the given element
returns the current line separator
returns a string representing a indented element
returns the tab level of the given tab
returns a string representing the given element
returns the space in the space
adds the given element to the list
sets the list of content
returns a string representing a indented element
returns a string representing the element
returns a string representing a document
returns the debug information
returns the string representation of the element at the specified
returns a string representing a indented element
returns a string representing the given element
returns a string representing the given element
returns a string representing a indented element
returns a string representing the given element
returns the current tab level
returns a string representing a given element
creates the action map
creates the input map
creates the action map
this method is called whenever the game is activated
deactivates the game
removes all the from the
creates the action map
adds a new explosion to the explosion
installs actions for the given game controller
saves the current settings to the game
adds a to the
removes the specified controller from this controller
the game
returns the name of the
performs the actual
returns the description of the
unpack the game
returns the game url for the game
returns the web site
returns the author of the user
returns the email of the author e
returns the number of versions of the planets version
returns the version of the version
handles the action event
creates the map of
the
the planet
creates the action map
check if the user has a planets planets
removes the specified property from the
creates the map input map
removes the specified planet property from the current
creates the action map
creates the input map
creates the action map
removes the current object from the database
returns the name of the
returns the description of the
move up the five
creates the action map
move the down the stack
returns the version of the version
delete the selected
returns the documentation
inserts the given type into the table
adds the user marker to the list of
removes the user marker data from the given user
handles the action event
activates the game
deactivates the game
installs actions for the given game
creates the markers for the given user
returns the id of the
removes the specified game action
sets the property value
returns the name of the
returns the description of the
activate a new marker
show the dialog
returns the version of the version
returns the documentation
cancels the current line marker
handles the action event
makes the line marker
this method is used to create a new message data object
removes a ship property from the
returns the selected marker type
mark the message as a mark
creates the action map
creates the action map
deactivates the
invoked when an action occurs
turns ship ship ship ship ship ship ship ship ship ship fleet
returns the for the given ship type
invoked when an item has been selected or deselected by the user
called whenever the value of the selection changes
creates the map of
creates the action map
returns the game
creates the action map
checks the
removes the given turn
sets the current state of the planet
sets all views
sets the markers
returns the number of in the specified index
notify the player that a player has resumed
fire gun to notify the player
fire
this method is called by the player server to update the game
this method is called by the player
returns true if the ball is
move the tank
this method is called when the shoot is
removes a game from the game
returns the ball to be used in the ball
called when the moved moved moved
starts the game
sets the sticky
sets the rel
removes a ball from the
removes a bullet from the bullet
adds a bonus to the list of bonus
start game game
this method initializes this
this method initializes j content pane
this method initializes cmd close
returns the code
called when a module is shutdown
called when the module starts
called when the registration is changed
returns a string representation of this object
returns the signature of the signature
returns the signature of this object
returns the type of the module
compares this signature to another signature
shuts down the server
consumes a type of type and returns the type
returns true if the module is equal to the given object
returns true if the service is equal to the other service
compares this signature against the specified object for
get the value of the data type
packs the given array into the array
returns true if the module is the same module
returns true if the given type matches the given signature
this method is called by the native code to construct a new
returns true if the given type matches the other signature
unpack a
returns the hash code of this module
unpack a long value from the array
unpack double double
get the boolean value
process the request
extracts the stack trace from the given stack trace
invoked when the broker is being executed
get the byte value
called when the module is being destroyed
adds a byte to the end of the list
returns the string representation of the data type
adds a boolean value to the end of the list
adds a new element to the end of the list
returns the double value
packs the given type into the end of the pack type
this method will be called by the digester
packs the given type into the end of the pack type
returns the complex version of the complex type
packs the contents of the array of characters into the end of
this method is called when a call is received
adds a string to the end of the list
returns the complex type
this method is called when a reply reply is received
adds a new complex type to this collection
adds a double to the end of the list
returns the double value of the data block
stops the pending pending process
sets the command line
sets the level of the stack trace
dispatch an event handler to the given event handler
returns the command line
add a new byte to the end of the buffer
removes the handler from the list of handlers
add a new byte to the end of the buffer
returns the next type
dumps the current data to the current output stream
distribute the given event
returns true if the given event is a
returns the package name of the module
returns the class name of the module
adds a handler to the list of handlers
adds a handler to the event handler
adds a collection of elements to the list
add a collection of elements to the vector
assembles the for the given block
check if the rmi registry is valid
release the release
add a remote object to the registry
returns a handler for the given handler
sets the comma separated list of comma separated values
sets the comma separated names of the filter
sets the value of the event types to include
sets the filter types to exclude from the given filter
loads the properties from the properties object
writes the content of the content of the file
strips the comments from the file
strips the comments from the file
executes the task
sets the classpath to use for the classpath
sets the classpath to use for this classpath
writes the contents of the given input stream to the file
sets the classpath reference
returns the class name of the given file
sets the input file
sets the output file
sets the classpath to use for the classpath
sets the input file
sets the output file to be used for output
adds a class to the list of classes
runs the test
paints the map
sets the of the curve
get the data for a given byte
gets the value of the property
sends a data packet to the server
sends a byte array to the server
sets the
returns the version of the version
returns the vendor id of the vendor
returns the product id
paints the pose
returns the string value of the specified byte
sets the address of the address
connects to the
paint the particles
paint the target
closes the
build the panels
paint the features of the graph
upload a file to the file
run the given file
adds the panel to the panel
connect to the file specified by the given file name and the
returns the line that is the line of the given pose
paint the path
check if the file is a file
creates the map panel
returns the x coordinate of the point at the given x coordinate
get the file info object for the specified file name
returns the y coordinate of the y coordinate
calculates the distance between the two
sets the range of the
sets the range of the
close the stream
close the game
sets the debug flag
sets the travel speed
sets the speed of the crane to be used for shooting
writes the given data to the underlying stream
returns the remote particles
finds the closest point in the given location
adds a waypoint to the route
generates the particles
connect to the server

send a map to the server
go to the given waypoint
the given distance
rotates the current
creates the panel
this method is called when a new arc is in the
rotates the given angle in degrees
this method is called when the is started
get the estimated pose for the current state
returns the maximum number of bytes that can be processed
initializes the gui
get remote readings
returns the is connected
gets the
sets the target
sets the label for the given plugin
stops the navigation bar
returns the
move the next move to the next move
localize the event
this method is called by the server to update the data
sends a random move curve to the server
sends a request to the server
follows the heading in the current path
starts the navigation bar
initializes the component
adds a new chart points to the chart
find the path to the waypoint
adds a new comment to the list of
sets the visibility of the comments
called when the user selects the
sets the series of the chart
clears the current path
returns true if the poll is disabled
send a exit event to the server
calculate the current route
send a sound to the server
get the remote battery
shuts the down thread
this method paints the component
adds the to the panel
creates the status panel
create the panel for the command panel
creates and returns a new
run the test
creates the panel that holds the panel
creates the panel that is drawn in the panel
sets the width of the domain
creates the menu
run the program
p log a message with the specified level
shows a dialog with the given message
sets the size of the map
this method is called by the gui to draw the component
invoked when a mouse button is pressed on a component
invoked when the mouse button has been moved on a component
invoked when the mouse has been clicked on a component
this method is called when the mouse exits a component
the specified detector
invoked when a mouse button has been pressed on a component
this method is called by the mouse listener when the mouse menu
hook for the popup menu items
this method is called when the user selects a connection
displays the dialog
sets the size of the map panel
choose the color
analyzes the given detector
this method is called by the
update the particles
returns the current pose
sets the motor speed
analyzes the specified detector
calculate the weight of the given range
sets the map
returns the number of readings in the data store
this method marshalls out the object in the given stream
load data from data source
sets the debug flag
applies the given move to the current move
sets the navigation
sets the algorithm used to create the algorithm
sets the spacing between the grid points
returns the maximum weight of the
sets the
returns the number of neighbors
sets the map
adds a neighbor to the neighbor
removes the neighbor neighbor neighbor neighbor
sets the h score
calculates the of the node
gets the value of the property
calculates the h
sets the score of the player
returns the score of the score
returns the score of the score
sets the particles
returns the predecessor node
sets the node that is currently being edited
adds a new detector to the list of
this method is used to serialize the object
sets the maximum distance between the
returns the maximum distance between this
enables or disables the detection of the
loads the given data object from the given data object
this method reports the closest location in the
returns the move type
returns the travel speed
returns the rotate speed
clears the path
returns the location of the location
sets the acceleration acceleration in the acceleration
follows the path
returns the left hand side of the
returns the right hand side of the axis
returns the y coordinate of the y axis
returns the pose coordinate of this pose object
checks validity of the given pose
returns the number of left
rotate the current angle to a given angle
returns the number of right
sets the direction of the crane
returns the of the turn
returns the speed of the crane
returns the minimum radius of the
calculates the y coordinate of the steering surface
sets the travel speed
get the offset
updates the data
calculates the interval of the simulation
read the next byte from the stream
read the next byte from the input stream
move the given x y coordinate to the given power
returns true if the map has a map
returns the map of the map
sets the number of readings
returns the current robot pose pose
sets the value of head motor
sets the current pose pose
dump the object to the stream
sets the target
load the given data from the file
returns the target
flips the bounding map
stops the
get the angle of the
returns the travel distance of the plane
returns the motor power
returns true if the command is moving
moves the robot at the specified speed
moves the specified position to the specified position
stops the current thread
returns the range of the current range
returns the number of
resets the count of
returns the of the current
the arc arc
returns the firmware version of the firmware
returns the of the current
sets the value of the degrees of the heading
returns the degrees of the robot
sets the value of the degrees
the arc arc
creates a new
reads the next object from the input stream
read the ambient image
reads the from the
adds a new code motor code to the listener list
constructor for the port
creates a new object with the specified port
resets the
starts the
removes and returns the listener for the motor

returns true if the status of the status is a valid
the arc
stops the
returns the
returns the voltage value of the
returns the of the
returns the vertical position of the current
returns the
returns the velocity of the
returns the in the current
returns the number of heading
returns the y coordinate of the
returns the in the current
returns the heading of the
returns code true code if the given cell is in the current
returns the angle between the given points and the angle
returns the distance to destination
returns true if the given is in the current position
returns the value of the specified sensor
returns the angle to the destination
returns the average of the given id
returns a string representation of the sensor
returns the value
returns the y value of the
returns the value
returns true if the given is in the current buffer
returns the value of the port
the arc
returns the obstacle
sets the long range
returns true if the range is long range
returns the angle of the current
creates a new
returns the angle of the
returns the of the current
returns the power of the current power
resets the effect angle
causes the accelerometer to be
forward the motor to the direction
reset the
returns the pressure
moves the motor to the direction
executes the command
sends a command to the command
stops the process
this method is called when the user chooses the command
wake up the command
sends a command to the server
convert the given array of units to a float array
returns the steering steering value
returns the average of the average data
returns the number of of the given axis
convert the given values to a float array
returns the pitch of the spectrum
returns the roll of last roll
returns the last rate of the
this method is called to the of the
returns the
returns the angle of the last
stops the server
returns the number of times the given axis is
fetch all the acceleration of the given device
rotate the current angle
sets the value of the
returns the current angle in degrees
returns the rate of the frame in the current throttle
the
this method will be used to transform the plane
returns the acceleration unit
rotates the given angle by a given angle
send a to the
reset the delay
returns the mean of the
this method is called when calibration is started
convert the given float array to a float array
set the value of the
rotate the current axis angle
the
convert the value to a units value
send a to the
returns the current tilt unit
returns the sensor reading from sensor data
returns the minimum limit of the specified color
returns the calibration data for the given index
calculates the offset of the
load the current
returns the value of the current value
save the file to disk
returns the current temperature in the
sets the value of the speed unit property
sets the tilt unit
returns firmware version of firmware
returns the version of the menu item
returns the speed of the game
returns true if the data is available
sets the value of the dynamic offset property
sets the speed of the motor
sends a request to the server
sends a request to the server
start program
this method adds a new to the end of the simulation
this method is called by the
open a file
adds a new code motor code to the code code
stops the
called when a is stopped
lock the current state of the
get the number of in the
resets the count of all
disconnect from the server
sets the acceleration
this method is called when the server is started
writes a byte to the stream
uploads the file to the specified file
reads the contents of the file
sets the threshold for the threshold
returns the register
returns the offset of the current image
process the data channel
returns the turn rate
the listener implementation for the
sets the port
returns the port
returns the preferred power consumption
returns true if the cost is allowed to be
returns the vertical accuracy of the vertical axis
returns the horizontal accuracy of the current location
returns the preferred response time
returns true if the speed provider is required
returns true if the altitude is required
gets the address info required
sets the horizontal accuracy
sets the vertical accuracy
sets the preferred response time
get the offset
sets the preferred power consumption
starts the
update the data
turns the radius of the given angle into the
turns on the given angle in the direction of the
prints a message to the console
p log a message with the specified message
sets the default program
sets the delay in milliseconds
sets the volume
adds a feature to the feature detector
calculates the travel of the taskforce in the
sets the random number of the
set the volume key
sets the start move start flag
calculates the of the
set the auto run flag
sets whether or not the move should stop sending
returns the volume of the current volume
returns the key for the current user
start a new
returns true if the server is running
stops the
sets the travel speed
returns a
add a waypoint to the list of
this method is used to send a waypoint to the given waypoint
sends a complete path to the
returns a
this method is called when the robot enters a new route
this method is called by the
returns the data for the given byte array
sends a data packet to the server
returns the sleep time
returns the default program
sets the sleep time
clears the event
this method is called when the system threads thread
suspends the execution of the program
resumes the program
this method is called when the system thread is started
sets the option for the event
returns the input stream for this input stream
sets the debug mode
returns the output stream
returns an input stream for the given input stream
returns an output stream for the specified output stream
start the server
this method will be invoked by server socket to make the socket
reads a byte array from the specified byte array
this method is used to send a client socket to the client
writes the specified byte array to the specified byte array
send a string to the server
close the
runs the thread
returns the firmware version of the firmware
a command
set the
returns the current index

returns a
returns the index
returns the ip of the host
close the stream
pings the
mark the current position in the input stream
returns the for the given
a command
this method is called when the application is configured to mark
this method is used to handle the command
reads the next byte of data from the stream
reads bytes into the stream
creates a ad hoc ad
read bytes from the stream
remove the from the database
reconnects the command to the server
reset the stream
closes all connections
returns the status of the
close the given channel
returns true if the motor is moving
sets the reverse speed
close the connection
returns the port of the server
returns a string that is the number of bytes that this connection
flush the stream
sets the data for the given
stop the server
write the contents of the given array of bytes
sets the angle of the
sets the width of the
disconnect from the server
writes the contents of the buffer to the specified buffer
rotates the angle in degrees to the specified angle
returns a string representation of the
sets the speed of the game
returns the speed of the game
writes a single character
returns the speed of the
returns the maximum speed in meters per second
sets the threshold for the threshold
sets the acceleration
sets the
set the mask of the specified address
returns the resolution of the current image
returns the point on the screen
sets the resolution of the
set gateway address
returns true if the button is pressed
reads the next button from the current input stream
returns a string representation of the
returns true if any button is down
disable the echo led
returns true if the button is down
returns a string representation of the
returns the status of the
sets the zero flag for the command
returns a string that is in the
set the name for the
reads bytes from the buffer
returns the in the view
returns the time of the current time
get satellite object at given index
returns the tracked by this event
returns the quality of the quality
returns the compass degrees
returns the current course
reads the next available date from the database
this method is called when a sentence is chosen
returns the time stamp of the
reads the next byte from the input stream
clear the buffer
close the connection
returns the next string in the current sentence
checks if the given string is a valid
this method is called when a sentence is chosen
sets the datatype of the datatype
close the connection
print a message with the given string
start log
sets the integral of the
this method is used to set the caching log
reads the next byte of data from the socket
reads bytes into the data stream
registers a new column
removes the current session from the database
sets the delay in seconds
sets the data type of the data type
returns the delay in seconds
close the connection
the command
this method is used to flush the current
write the content of the given byte array
writes a single character
returns the next element in the iteration
returns true if the next element has more elements
closes the current connection
accept the socket and waits for a new
returns the local name of the element
close the connection
returns the text of the event
returns the number of attributes in the event
returns the local name of the element at the specified index
returns the value of the attribute referred to by the given local
returns the value of the specified attribute
returns the type of the attribute at the specified index
returns the event type
returns the length of the text
returns the next element in the iteration
returns true if the text has a text
returns the location of the cell
pushes an element onto the stack
returns true if this is a white space
returns true if the element is started
returns true if the end of the file is currently being used
returns true if the event is a valid event
returns the start text start
flush the buffer
flush the buffer
closes the underlying input stream
print a string
closes the file
start the node
updates the velocity of the velocity
this method is called when the user selects the header
the file to be used in the
connect to the server
binds the current session to the server
connect to the database
start the node
checks if the given path is a
send a new socket server socket to the server
handles a new connection
this method is used to send a packet to the server
this method is called by the server to send the next command
returns the linear velocity of the linear velocity
closes the connection
this method is called by the applet
deletes a row from the table
returns the value at the specified row and column
sets the value at the specified row and column
returns true if the cell at row and column is editable
this method will be called from the
returns the file at the specified index
returns the number of files in the list
returns the row at the specified file name
returns the data for the given register
sends a command to the server
send a data to the given data
returns the string representation of the specified
write a byte to the server
test line lines
test the test
test the data
creates the panel and the panel
returns the firmware version of the firmware
creates the tabbed pane
run a test
returns the failed test case
returns the exception thrown by the exception
the
called when a test is executed
resets the current value of the counter to the specified value
sets the axis for this axis
start a test
calculates the scale of the
returns the sample of the sample
this method is called when the server is running
resumes the execution of the task
sets the refresh rate
fetch the source process
returns the string representation of this object
returns true if the data is available
returns the statistic
sets the sample rate of the
gets the value of the sample rate property
sets the sample size
sets the statistic
sets the range
runs the test
returns a string representation of the object
runs the test
test the ability to be used to test the number of distinct
runs the test
runs the test
runs the test
runs the test
returns a string representation of the time in milliseconds
runs the test
runs the test
runs the test
runs the test
runs the test
tests the long conversion
creates the panel
writes the specified byte array to the underlying stream
get the file name for a file
update the sensors
called when the selection changes
convert the given byte array to a string
deletes all files in the table
upload the file to the file
upload a file to the current file
download the selected file
executes the command
sets the sensor sensor to the sensor
plays the sound file
this method is called when the user selects the flash
this method is called to log a message
this method is called when a new connection is established
sets the status of the message
appends the given string to the console
sets the tracing phone value for this report
sets the tracing mobile value for this service info
sets the more mobile value for this mobile
sets the private mobile value for this public value
sets the value for this
test of get subject method of class
test of get body method of class
test of get to recipient method of class
test of get cc recipient method of class
gets the
sets the
test of get bcc recipient method of class
test of create message method of class
slot of scanned robot
called by the bullet when a hit is hit
returns the reference
sets the reference
returns the set of messages that are used for this class
sets the set of messages that this message can
gets the
returns the mailing list
sets the mailing list
runs the thread
gets the
returns the set of messages that are allowed to be used for
sets the set of messages that are allowed to be used to
returns the set of children of this node
sets the set of children of this node
sets the current binding configuration
adds an effect to the effect
removes the effect at the specified index
this method is used to get the active status of the
sets the output
sets the playlist
returns the current queue
returns the tags
sets the tag of the tag
sets the tags
sets the songs
this method is called when the server is refreshed
returns the library
initializes the
returns the current page
this method is called when the user hits the search
adds a component to the container
sets the current page
sets the active component
returns the active component
sets the folders only
adds a search term to the list of terms
handle the event handler
start the thread
sets the daemon state of this task
sets the runnable to the business logic
destroy the application
returns the runnable that is used to execute the runnables
returns the polling interval
returns true if the current thread is done
sets the done flag
terminate the thread
this method is called when the transaction is started
returns the web transaction
adds an attribute to the list
returns the code
returns the code
returns the
returns the name of the native
initializes the auto increment
checks the language for the user
returns the by id
sorts the given email address in order to sort the given direction
returns the user value
sorts the given direction by name
returns the user gender
sets the user
returns the default language for the given language
this method is called to the user to the user
returns the user requesting user name
returns the user requesting the user
sets the request ordering for the request
sends response status to the response
returns the location of the country
adds the user to the response
inserts a new instance of insert into tbl db
returns the by id
sets the location of the location
the review
returns the
returns the pagination for the given request
returns the ordering from the request
returns the value of the data type
adds a group group to the group
returns the status of the current value
response to the response status
returns true if the user permission to update the user permission group
sets the status of the status
returns the data type
sets the data type
sets the date the date is posted to the specified date
returns the data id
sets the response status of the response
sets the data id
sets the rating
returns the data author
removes all the languages from the
sets the data author id
returns the user requesting the user
sets the response status of the response
returns the language language
sets the default language to default language
returns the pagination for the given request
returns the user requesting the user
returns the ordering ordering for the request
returns the language
sets the response status of the response
sets the language
sets the response status of the response
returns the node with the given id
returns the node with the given name
adds a new child node to the node
returns the
sets the
update the nodes list
returns the
sets the
returns the language
sets the author id
returns the node id
sets the depth of the
returns the tree node
returns the user requesting the user
creates a new node
adds a map node to the node
sets the response status of the response
returns the tree
gets the
returns the travel node of the node
returns the breadcrumb tree node
returns the node for the given name
returns the user requesting the user
sets the response status of the response
returns the by id
returns the with the given id
insert the user into database
deletes expired sessions
called when the user selects the response
check if the session is expired
returns the user object associated with the given user id
this method is called by the response to the response
returns the user object associated with this session
returns the user session
sets the session id
sets the user id
sets the date creation date
sets the date the last request was received
sets the of the article to the given request
returns the page with the specified number
returns the article
check if the user is valid
returns the
returns the value of the article
this method updates the user with the given user
returns the article id
returns the classification node id
sets the article id
sets the author id
returns the page number
sets the page number
sets the page number
returns the id of the article
adds a new to the tree
returns the classification node id
adds a new article to the
adds a new page to the page
returns the page number
returns the number of pages
returns the id of the article
sets the number of pages
adds a new page to the page
returns the page number
sets the status of the status
returns the user requesting the user
response to the response status
returns the translation translation
sets the translation translation
sets the title
sets the summary attribute of the object
add a article into the article
returns the pagination for the given request
returns the ordering of the request
response to the response status
update the type increase by the given type
update the type of the given type
returns the number of properties in the specified type
checks if the given is valid
returns true if the given type is
repaints the model
adds a new template item to the list
returns true if this object is alias
attaches the given array of classes to this class
returns the construction stage of the current construction
build the prototype
this method is called by the framework to perform the prototype
find the constructor that matches the given constructor
find the setter
find the field with the given name and field
returns the class name of the class that corresponds to the given
checks if the given prototype is in the dependency of the dependency
creates the dependency
returns the data root of the data type
parse the data type from the given data type
returns the next character in the current character
sets the data
sets the type of the field
sets the charset to use for the
sets the name of the null name of the
returns the character at the end of the current token
creates a same object as the same
gets the value of the property
returns the base class code
returns the value of the parameter with the specified name
returns the page plugins
returns the source of the file
returns the type of the type
returns the type of the
sets the id
sets the value of code base
sets the source of the file
sets the type of the type
returns the info object
sets the info object
sets the information
returns the model element
this method initializes file name
this method initializes columns
this method initializes rows
this method initializes matching rows
this method initializes page numbers
this method initializes top positions
this method initializes top left
this method initializes top center
this method initializes top right
this method initializes bottom positions
this method initializes growth button group
this method initializes bottom left
this method initializes bottom center
this method initializes bottom right
this method initializes buttons
this method initializes start
this method initializes close
this method initializes this
this method initializes output
this method initializes output scroll pane
returns the first empty row of the container
inserts a row at the specified position
returns true if the component at the specified coordinates are
sets the constraints for the specified component
returns the constraints for the given n
place a place in the table
returns the element that is currently being used to represent the
creates a grid bag constraints
returns true if the given list of elements in the list is
adds a listener to the change listener
parses the given input string to the given code name code
removes a listener for changes to the change listener
notify listeners that the name of this event has changed
sets the user name
sets the of the given element
sets the value of the child section property
sets the skill group
click the click on the given point
returns the element with the given name
returns the title text color
make a transferable object for the
returns the layout properties
drops the failed drop
adds a listener to the list of listeners
rebuilds the tree and removes all children
sets the group name
removes all the from the list of
performs the actual skill
makes the current group with the same value as the
returns the color of the title of the titled border
handle mouse click events
performs the control click on the control
simulates a click on the button
adds a listener to the change listener
removes the specified listener
returns the name of the given point in the given coordinates
removes the dialog and updates the dialog
returns the index of the skill
saves the list of
adds a listener to the list thats notified each time a change
deletes selected
sets the last directory
sets the last directory
make a new
adds a listener to the window
the given number of pages
recall the given number of the
stores the preferences in the dialog
initializes the menu
returns the value of the specified stat
returns the total number of in the list
initializes the stats
initializes the skills
initializes the stats
sets the stat
initializes the skills
sets the stat
sets the value of the parameter
creates the bias
adds a new child skill to the list of skills
adds a skill to the skill
adds a new skills to the list of skills
sets the xml attribute of this object
adds a new skill to the
checks if a given skill is in the list
returns the index of the skill
removes a skill from the list of skills
returns the weighted child of the given name
returns the skill
adds a group to the given group
sets the current stat to the current stat
creates a new
validate the value of the given value
removes a skill from the group
adjust the value of the spinner
initialise the statistics
resets all the properties to their initial values
returns the stat associated with the specified key
returns the xml element of the current xml element
sets the value of the xml attribute
returns the total number of points in the list
returns the display name
this method stores the skills
adds a listener to the list of listeners
removes a listener for the stat change listener
returns the general name of the
notify all listeners that the stat has changed
returns true if the group name is contained in the group
creates a toolbar button
adds a property change listener to the listener list
the of the
removes the property change listener from the listener list
returns the dice of the current
returns the current value of the stat
clears all stats
returns true if the group name is in group
called when the statistics changes
returns the group containing the skill group
initialize the skill
this method is used to make the current number of points
adds a skill change listener
removes a skill change listener from the list of listeners
notify the listener that a skill has changed
returns the weighted child section of the given skill
sets the editable state
returns the number of skill points in the given skill
finds a parent skill with the given name
returns the group of the group with the given name
returns the xml element of the current xml element
returns the dice of the current
returns the number of skill points in the given skill
returns the child of the given child
returns a string representation of the type of the given type
returns true if the given string contains a child
adds a new skill to the list
returns the xml key to be used to identify the xml document
remove a listener
returns the total cost of the
sets the child points of the given code node code
replaces the trait with the new one
returns true if the given trait contains the specified trait
returns the number of points in the given child
invoked when an event is occured in the caret
returns the xml representation of the object
increases the number of points for a given child
returns the number of points in the list
returns the number of
returns the skill attribute of the equipment object
increases the number of points in the given array
sets the type of the attribute
returns true if the given code star code is a legal
returns the total number of points in the polygon
checks if the given group is a child of the group
the of the
returns the element type of this attribute
returns the minimum value of the
sets the document to the given document
sorts the skills
sets the points to the smallest point in points
raise the points
starts the task run
this method is called by the constructors to add a to
sorts the groups in the group
choose the root directory
returns the default directory
returns the local file local name
adds a new child points to the given name
extract the resource from the resource
creates the layout
apply the focus to the traits
returns a document document from the resource bundle
sets the person attribute of the object
writes the document to the file
refreshes the text area
enables disables buttons
returns the for the given number of goods
sets the dice action
this method is called by the framework to change the state of
returns true if the asset is not allready defined
clears the given action
clear the character
the
returns the stat control for the given key
returns the named stat
returns true if the given is
returns true if the given number of elements in the specified group
creates the toolbar button
refresh the child panels
repaints the panels panels
this method gets called when a bound property is changed
resize the panel
adds a trait to the asset
returns the title of the panel
performs the minus operation
checks the actions
adds a new to the list of
this method is called when the user selects a new skill
sets the new action state enabled
this method is called when the user selects the mouse click
updates the gender of the panel
sets the skill data
sets whether the should be raised by the
removes a trait from the
sets the number of available to the given point
this method is called when the user selects the current level
returns the summary of the current equipment
returns the number of equipment in the equipment
returns the equipment weight
removes the specified trait from the
refreshes the details of the details
enables the button
build the
creates the
creates the
removes selected elements from the list
adds the selected elements to the list
creates the
creates the
add a new item to the list
removes the selected index from the list
notify the component that the mouse was clicked
returns true if the component is a
notifies all registered listeners about the event
sets the label icons
checks the actions
returns the value of the given point
sets the unselected icon
adds a change listener to the list of listeners
removes a change listener from the list
sets the value of the spinner
performs the actual
performs the actual conversion
redraws the buttons
returns the name of the specified component
sets the number of points available to the specified value
sets the background color
returns the string representation of the current value
sets the renderer for the selected cell
adds a listener to the list of listeners
calculates the current number of points in the current hull
sets the tooltip for the given point
show tooltip
returns the index of the selected item
test of get method of class
returns the current selection
writes the ascii file to the output stream
make test test model test
test the stats for the stats
create a empty person
clears the action
tests the weighting for the weighting method
tests the weighting method
test of get value method of class
test set value method
saves the model to the file
test for
this method is called by the base class to perform the
tests the accessors of the accessors
test of totals char
test the creation of a valid value
test the creation of a
test of get valid method of class
test get set
tests that the dice is selected
test the
test method for
test method for
tests that the listener is notified when the
tests the creation of a new test cycle
tests changes to listener
ensure all the exploration and the exploration
test the
test the skill
test the skill
creates the menu panel
test method add new child
a unit test for junit
test the skill
test the
a unit test for junit
test of get damage method of class
test method for
a unit test for junit
test the weight
test the performance of the statistics
test method for
tests the covers and set covers
test mod
test method for
tests the size of the
test method for
test method for
registers an action
test method for
tests that the rate is complete
test method for
test method for
test method for
test of get equipment list method of class saga
test that a skill is
test of get list method of class
test method for
test method for
test of get trait method of class pl
test of get assets method of class
test the
test of get method of class
test clearing the list of the
test that verifies that the illegal state of the
returns the name of the data model
tests that the illegal state of a state machine has been thrown
tests that the removal of the object is removed
test that verifies that the illegal state is thrown as the state
tests that the add collection works properly
test
test that verifies that the illegal state is thrown as a state
p append to the code to string code a code to code
returns true if the given object matches the expected
tests that the remove method works correctly
tests that all the elements of the collection is
test has group group
tests that the add at time at the moment is added
tests that the object at the beginning of the event is removed
show the random generator
test of get as text method of class text
check if two arrays are same
test get child skill group
test that the contents of the collection works properly
initialize the generator
finds the panel with the given name
finds the panel with the given name
finds the component in the specified component
test clear a
find the component in the specified container
test the stat of the
find the text field in the given field
find the text field in the parent
assert that the is
finds the button with the specified name
assert that the current health is still activ
finds the button in the container
test that the current iteration has been
check if two arrays are same
find the radio button for the given radio button
find the combo box
find the tab pane with the given name
test the
tests that the profile combo box is correct
find the scroll pane with the given name
finds the list of the component in the container
finds the list of available
test of life method of class net
finds the scroll pane that contains the scroll pane
test the
test that the button is pushed
test method for
method to do
method assert child panel
test the performance of a person
test that the trait is joined by the trait
scrolls the panel to the given value
test method for
test the property change listener method
tests the functionality of the code info code property
test the current money
test
test weapons
test weapons
test that the method is called when the user selects a
get max stat
test equipment totals
unit test for
returns the maximum skill
test multiplication totals
returns true if the given trait is in the trait
returns the starting skill points
adds a property change listener to the listener list
removes the property change listener from the listener list
adds a skill change listener
removes a skill change listener from the
checks the current state of the
this method is called when the user selects the traits
returns the for a given skill
gets the value of the property
checks if the equipment has a equipment
changes the name of the
sets the status of the status bar
removes all the elements from the list of the given list of
checks whether a list of strings are allowed
parse the structure
decode the special characters
sets the text to be displayed in the text box
creates the history file
load the file history
exclude a file from the given pattern
returns a list of filenames that match the given file
runs the
emit a beep
help method for the project
executes the script
execute a command
returns the static field of the given field
returns static value of a class
copy the contents of a directory to a directory
this method is called by the junit method to implement the
returns a list of files
returns a jar file for the given jar file
add a directory to the directory
p this method is called to invoke the method
invoke the junit test runner
creates a directory with the given directory
deletes the file
this method is called when the database is opened
this method is called when the database is opened
update the database
open the notes database
returns the x1
returns the y coordinate of the trajectory
returns the x2 coordinate
open the database
returns the y2 coordinate of the end of this rectangle
closes the database
sets the bounding box
fetch the version number from the database
sets the box
returns the of the given
sets the box at the given location
create a new entry in the database
sets the
sets the box
returns the distance between the two points in the
sets the database table
returns the distance between the two points in the
sets the database table
create a new entry in the database
fetch the version number from the database
creates a new entry in the database
insert a csv record into the database
deletes a table
creates a new entry in the
creates a new object
stores the given alert in the system
removes the alert entry
make alarm context
show notification of a new
close the entry
close the entry
close the entry
close the entry
deletes the entry with the given id
returns a cursor over the list of all notes in the database
return a cursor positioned at the that matches the given row
return a cursor positioned at the given row and return a
returns the current time in milliseconds in milliseconds to place
returns the last task entry in the database
return a cursor positioned at the favorite in the database
returns the last clock entry in the database
returns a cursor that is the current time interval in the current
returns a cursor that the specified time spans are in the
returns a cursor that the user can display the day
returns a cursor that the report was an entry
returns a cursor for the day of the week
creates a task for the given task
returns a cursor over the list of all tasks in the database
returns a cursor over the list of all tasks in the database
return a cursor positioned at the favorite that matches the given row
get the next
returns the id of the given task in the database
renames a task
deactivates a task
this method is called when the user presses the start of a
activates a task
activates the task
refreshes the files
sets the username
sets the password
returns the web user
sets the upload complete value
check if the user is currently web
returns the children of the specified id
returns the cms folder for the specified id
start the service
this method is called when the plug in is stopped
compares the specified object with this object
validates the user
disposes the toolkit
start the application
this method is called when the plug in is stopped
returns the window that is currently being used by the user
select a plugin
start the bundle
returns the plugin with the given name
this method is called when the plug in is stopped
adds a plugin to the plugin
removes a plugin from the list
this method is called by the plugin to determine the area of
start the osgi bundle activator
this method is called when the plug in is stopped
returns the panel for the given page
returns the window that is currently being edited
sets the default values of the preferences
this method is called upon plug in activation
sets the default values of the preferences
this method is called upon plug in activation
this method is called upon plug in activation
returns a string representation of the given key
p format a key value pair in the given language
p format the given key value pair in the format
format a string
returns the string representation of the specified key
this method is called upon plug in activation
this method is called when the plug in is stopped
update the account
returns the label for the specified index
returns the value of the specified index
returns the number of shopping cart objects
returns the total quantity of the cart item
returns the shopping cart object
returns the item at the specified index
clears the shopping cart
adds a new item to the cart
removes the element at the specified position in this list
removes the shopping cart shopping cart from the shopping cart
updates the of the cart
returns the background color for the current
resolves the given object to the given
returns the entity manager
adds a module to the module
returns the injector
gets the value of the temporal type property
returns the session
adds a tag to the end of the list
returns true if the tag is an allowable tag
reads the next character from the stream
returns true if the tag is required
returns the next token in the queue
checks if the given attribute is allowed to be used
removes the specified tag from the list of inner tags
returns true if the feature is a
sets the end tag required for this tag
build the string for the attribute matcher
returns the value of a property
load entity from database
removes the specified element from the list
sets the feature
sets the value of a property
reads the next character from the input stream
gets the value of the acl id property
creates a new instance of the current role
execute the action
sets the action method
this method is called by the service
sets the acl id
adds a new value to the set of bits
this method is called by the framework to set the forum
updates the current model
save the user to the user
sets the site description
removes the specified value from the set
sets the user attribute of the ticket object
sets the site name
sets the status
sets the entries
returns the text of the given text
sets the avatar
test the deletion of a code acl code
sets the roles
sets the enabled code enabled code
creates a new topic
creates a post to a given id
creates a new setting
creates a role with the given name and its id
creates a forum
sets the creator ip address
sets the new topic
sets the enabled
sets the create post flag
sets the create post flag
sets the html code
sets the creator username
sets the create topic
sets the first post
sets the value of create topic requires approval
sets the value of the signature enabled property
sets the permissions
sets the post count
sets whether or not the user wants to delete a post
sets the value of last post
sets the flag indicating whether or not the topic is deleted
sets the last posted
sets the topic count
sets the last post username
sets the time of the viewed panel
sets the post edit flag
sets the lock topic
returns the distance to the earth position
returns the number of fuel
returns the position of the satellite
returns the number of tokens in the instruction counter
returns the score of the score
sets the configuration
sets the status of the status
sets the delta delta
sets the velocity of the radial impulse
gets the value of the mission failed property
returns the vm
returns the frame
returns the orbit radius of the orbit
returns the gravity of the given weight
returns the root cause of the exception
returns the error message associated with this exception
returns the exception that caused this exception
returns the character offset
returns the transport name
returns the server transaction
returns the client transaction
returns true if the server is a server transaction
compares this transaction state to another object
returns the hash code for this transaction
returns the dialog
returns the timeout for the timeout
creates a header factory
sets the path name
resets the factory to the default factory
returns the transaction server
returns the request
returns the current state of the dialog
this method allows deserialization of the deserialization
returns a string representation of the state
returns the current client transaction
returns the response
returns the object that is currently waiting for the specified timeout
returns the value of the timeout property
this method allows deserialization of the deserialization of an instance
returns a string representation of this object
sets the encoding supported by this encoder
sets the time to be used for the month
sets the attribute heavys i attribute i attribute code
returns the version of this version
sets the version of this field
returns the origin
sets the origin of this object
returns the session name
sets the session name
returns the info
sets the info
returns the uri of the resource
sets the media field
sets the information field for the information
sets the uri of the
sets the connection field
sets the stop time
returns the start date of the request
adds a new code code to the current list of
returns the current time
sets the stop
sets the start date
returns true if the time value is valid
sets the key field to the given key
returns true if the time is zero
sets the zero time to zero
returns a string representation of the object
sets the attribute fields
returns the media media
sets the
sets the type of the address
sets the address of the connection
encodes the string
returns the address of the connection
gets the address type
returns the connection
returns the network type
sets the address of the address
sets the address type
sets the network type
sets the media
sets the connection
returns the info information
sets the info
returns the value of the name
returns the bandwidth of the given string
sets the value of the specified attribute
encodes the string
returns the connection
returns a list iterator of the
adds a new to the list
returns a string representation of this object
sets the bandwidth of the current session
sets the connection
dump debug output
compares the specified object with this instance for equality
returns true if the given template matches the given template
removes the specified bandwidth from the list of the
returns the string representation of the
sets the zone periods to the values of the zone
returns the key for this key
returns the bandwidth of the given name
sets the
sets the bandwidth
encode the current string to the output stream
returns the type of this object
sets the bandwidth of the current
sets the key
sets the type of the
returns the current value of the current value
sets the value of the current value
sets the user name
sets the host name
removes the specified bandwidth from the current collection of
returns the user name
sets the version of the proto protocol
get the value of the attribute with the given name
returns the version number of the version
sets the version number
returns the version of the field
returns the key field
returns the username
returns the id of the event
returns the version of the version
gets the value of the property
removes the specified attribute from the list
sets the key
gets the value of the property
returns the host
sets the id of the
sets the version of the version
returns the attributes of the given type
sets the
sets the value of an attribute
sets the address of the message
sets the username
returns the session id
sets the session id
returns the version of the session
sets the session version
get the value of the named attribute
get the address of the address
sets the address of the host
sets the value of an attribute
sets the address type
sets the network type
returns the string representation of the field
removes the specified attribute
sets the media
sets the
sets the proto
sets the formats of the current format
returns the media type
sets the media type
returns the media port
returns the time of the current time
sets the media port
sets the offset of the current object
sets the sign of the signature
returns the number of in the server
returns the string representation of the current value
sets the number of port number for this connection
returns the type of the field
returns the protocol
sets the protocol
sets the type of this object
returns a vector of media formats
sets the media formats
encodes the string representation of the encoded string
returns the method
sets the method
returns true if the key is stored in the database
encodes the
returns the key value
sets the key
returns the string representation of the field
returns the value of the sdp
sets the session name
sets the value of the specified attribute
returns the value of the session
sets the attribute
sets the value of the session
encodes the string representation of the attribute
returns the string representation of the field
sets the value of ttl
returns the name of the attribute
sets the email address
returns the string representation of the field
sets the name of the attribute
encode the address
returns true if the value is a value
returns the value of the email address
sets the value of the code email code property
returns the value of the attribute
sets the value attribute of the object
returns the repeat interval
returns the string representation of the url
sets the repeat interval
returns the duration of the current task
sets the email
returns the string representation of the
sets the duration of the active time
sets the offsets array
returns the time in seconds
sets the time field
returns a vector of times
adds a repeat field to the list of
returns the string representation of the current indentation
p return the field name
returns the lexer uri
p return the field containing the time of this field
returns the sign of the token
stop the
returns the id of the
closes all the connections
returns the host name of the host
returns the port number of the port
returns true if the logging level is enabled
returns the raw address of the address
returns the host port
returns true if the logging file is used to be used
returns the peer port of this host
get the value of the request header
sets the name of the log file
returns the port of the host
returns the message processor
logs a message
log a message on the log
checks if the user is currently selected
print a string and then terminate the line
sets the level of the trace level
returns the current level of the trace
sends a udp request to the server
sets the aux aux aux
a to a given
sets the remote party
start the thread
stops the server
returns the transport name
returns the sip stack
returns the maximum number of messages in the queue
returns true if the queue is currently in use
sets the request interface
returns true if the user is a reliable
close the server
returns the response channel
returns the transport name
returns the peer address of the peer
returns true if the request is mapped to the database
sends a message to the server
this method is called when the user selects a delete statement
prints the debug information
returns the key of the peer
gets the value of the via host property
returns true if the ack is
returns the value of the code get port code property
returns the last ack
returns the first transaction
returns the last response
returns an iterator of the route set
re initialize the server
sets the original request
disables the logging of the logging
sets the dialog id
print the dialog to the table
returns true if the server is a server
returns the current state of the transaction
returns true if the given method is created
returns true if the is
returns the state of the transaction
add a extension method to the list of extension objects
puts a dialog into the dialog
returns the dialog id
begin uml doc
creates a new dialog with the given
starts the timer for the transaction timer
returns an iterator of the dialogs dialogs
sets the remote tag for the remote agent
removes a dialog from the dialog
returns the last transaction
returns the invite transaction
sets the local sequence number
sets the remote sequence number
remove a pending transaction
increments the local sequence number
returns true if the is pending
remove a merge table from the table
disable alerts
returns the original sequence number of the local sequence
sets the to be sent
returns true if the user wants to be
adds a transaction to the current transaction
sets the
removes a transaction hash from the transaction manager
sets the invite transaction
returns the transport name
puts a transaction pending transaction
returns the layer layer
sets the call id
returns true if logging is enabled
returns the log writer
returns the server log
returns the key of the peer
returns the maximum number of messages in the message
returns true if the request is secure
sets the size of the thread pool
sets the maximum number of connections allowed for this connection
sets the value of response interface
returns the request channel
returns the next hop from the request
sets the stack name
creates a server header for the server side
returns true if the current setpoint is
returns the host address of the server
sets the router
returns the router that is used to connect to the given request
resend the resend header
sets the value of the code port code property
returns true if the server is still alive
returns the method
sets the value of the code host code property
returns the number of port
removes a message processor from the processor
returns the value of the code from host code property
stops the timer task
get the outgoing pipe
sets the message factory
begin uml doc
returns true if the given event is
starts the timer
returns the address resolver
sets the address resolver
returns the sip provider
sets the next hop
returns the original request
returns the next hop
returns the request
returns the transport name
get the current header
returns the message channel
returns the sent by
start the server
sets the current state of the transaction
returns the maximum number of messages in the list
returns the current state of the transaction
start the server
sends a message to the peer
refresh the contact list
returns the transport name
returns the host name of the host
returns the port number of the server
returns the peer name of the peer
returns the peer address of the peer
compares this object with another one
returns the value of the request header
sends a message to the peer
adds an event listener to the list of listeners
removes a listener from the event manager
returns the value of the code from host code property
returns the value of the code get port code property
returns true if the server is a server transaction
returns the timer
sets the assigned value of this property
returns the value of the code request code property
returns the response
stops the processing of the nat
returns the transaction id
returns the hash code for this transaction
returns the header of the contact header
get the value of the code port code
this method is used to set the timer
close the channel
initializes the
returns the application data
returns the host name of the host
returns true if the filter is
sets the channel
returns the sip server
stops the server
this method is called when the transaction is stopped
acquire the semaphore for this exception
release the semaphore
returns the sip listener
removes all the listeners from the list of listeners
sets the sip to pass
returns the body of the body
sets the date
sets the date to the specified date
returns the date of the calendar
returns the body of the body
returns the body id of the message
returns the call
sets the call id
sets the call identifier
sets the indentation level
returns the number of spaces in the current tree
returns all the methods of the list
increments the counter by one
sets the methods attribute of the method list object
decrements the current indentation level by 1
returns the indentation level
returns the local id of this host
tests the equality of this code code
returns the local id
sets the local id
sets the cid id
encodes the content of the
returns the body of the option
sets the tag option
returns the option tag for this tag
returns the body of the body part
returns the disposition type
returns the handling of the
compares the specified object with this route list
sets the handling of the
encode the body part as encoded as base64 encoded
returns the content disposition header
returns the body of this message
returns the encoding used for the content of the file
sets the
sets the organizations
returns the content length of the content
returns the body content
returns the encoding
returns the body content of the body
sets the encoding
tests whether this object is equal to other
returns the cause of the exception
sets the cause of the exception
returns the body of the body
sets the text
returns the text of the parameter
sets the code
sets the agent
creates a new code language code
encode the body part as a string
sets the text
returns the authentication information
encodes the body of the body part as a string
returns true if the delay is ready to be
returns the parameter name
returns the next nonce parameter
returns the number of nonce nonce
returns the parameter name
returns the response
sets the
returns true if all content types are allowed
returns true if the media type is a subtype of the media
sets the response
encode the body part
returns the media range
returns the content type of the media
returns the content type of the media type
returns the parameter as a
returns true if the request is
remove the parameter from the list
sets the content subtype
sets the content type
sets the value of the parameter to be
sets the challenge for the challenge
sets the media range
returns the name of the header
sets the header name
returns the body of the body part
returns the header value
returns true if the header is a header list
encodes the header
creates a new header with the specified name
returns the hash code value for this object
sets the realm
adds a new object to the list
returns the realm name
adds the given object to the list of elements
sets the nonce
adds a new to the list
returns the nonce of the nonce
sets the uri of the uri
sets the algorithm used to generate the algorithm
returns the algorithm name
returns the first
returns the last
returns the parameter
returns the class that this belongs to
returns the opaque parameter
returns a list iterator of the list of elements in this list
sets the domain
returns the list of header names
returns the domain of the domain
returns a list iterator of the current list of elements in this
sets the stale parameter
removes the first element of the list
returns true if this object is stale
removes the last element from the list
sets the
removes the given element from the list
returns the parameter
sets the class of the class
debug method to dump debugging information
creates a new contact header
returns the response value
returns the index of the given object
sets the response
creates a new contact header
returns the username
compares this object with another one
sets the username
returns true if the template matches the given template
returns the number of elements in this collection
returns true if the header is a header list
encode the body part of the body
creates the content language for the given language
returns the maximum number of elements in the
returns the body of this message
decrements the maximum number of elements in the queue
returns the product of the
adds a new product to the list of product token
returns the body of the request
returns a list of product objects
returns the request body
sets the expires cookie
returns code true code if this collection contains all of the elements
returns the element at the specified position in this list
returns the body of the file
returns the body of the body
sets the tag option
returns the index of the specified object
returns the index within the list of the last occurrence of the
concatenate all the elements in this list
concatenate all the elements in the list
returns the first object in the list
returns the class of the
returns the next element in the iteration
returns the next element in the list
returns the debug information for the given string
sets the class of the
returns the sequence number
returns the body of the sequence
creates a new date header
removes all of the elements from this collection of each contained in
sets the call id
returns the call id of the call to the call
encode the body of the request
returns the body of the entity
returns the entity tag
sets the etag
sets the value
returns the body of this message
sets the value of the specified collection
sets the priority of the message
returns the string representation of the header
sets the method
encode the body part
returns the body of the request
returns the host port
returns the display name of the user defined in the application
returns the tag name of the tag
sets the subtype
returns the encoding of the content
sets the address value for this address
sets the tag value
encode the body part as a string
returns the host name of the user who sent the host
returns the wild card flag
returns the hash code for this object
encode the body of the request
gets the value of the contact values property
returns the expires time
returns the comparator for the specified media
returns the body of this body encoded as a string
returns the value of the parameter as a float
sets the contact list
returns the media type
sets the wild card flag
returns the media sub type
sets the address of the address
returns the content type of the media type
returns the charset of the request
sets the content type of the media type
sets the content type
sets the option tag
returns the body of this body
returns the error info
sets the flag indicating whether or not the status of the class
sets the error message
returns the string representation of the
returns the error message for the error
returns the value of the code sip version code property
returns the body of the message
gets the reason phrase
sets the subject of the message
sets the sip version
returns all methods of the list
sets the methods attribute of the method object
returns the major version of the
returns the minor version of the file
encode the body part as a string
returns the language range
returns true if the is
remove the
sets the language range
sets the parameter
returns the accept language
returns a string representation of the given string
sets the language for the language
returns the version of the version
sets the value of version
encode the body part as a string
returns the current uri
returns the value of the parameter with the given name
returns the body of this
removes the comment
removes the duration from the magnet
sets the value of the parameter
sets the parameter value
returns the body of the body part
returns the number of
sets the parameter name and value
gets the value of the c seq number property
returns the number of
sets the value of the parameter with the given name
sets the value of the parameter
returns true if the parameter is a parameter
sets the address of the address
removes the parameters from the current object
returns a clone of this address
compares this header with another one
encode the body as a string
returns the value of the parameter
returns the purpose of the purpose of the
sets the value of the purpose property
sets the info
sets the parameter name
returns the value of the header
sets the parameters
returns the string representation of this code soapmessage code
returns the body of the header
returns the body of this message
returns the parameter as an integer
returns the body of this message
returns the parameter as a number of parameter value
sets the access type
returns the parameter value as a float
returns the parameter as long
sets the
returns true if the parameter is a parameter
returns the name value associated with the parameter name
sets the value of the attribute
returns the body language of the body
returns the language tag
returns the content language
sets the language content
sets the event type
sets the event id
returns the event id
encodes the body part
encode the body part
gets the value of the property
gets the value of the month property
returns the code code object representing the
returns the protocol name
sets the name of the protocol
sets the version protocol version
sets the transport name
sets the etag
sets the cal r
sets the sip version
encodes the content of the content of this object
sets the day
sets the year
returns the major version of the
compares this object with another one
sets the hour
compares this sequence number with another one
sets the minute
returns the body of the body
sets the second value of the second
sets the sequence number of the sequence number
returns the time in seconds that the last time the current time
encode the body of this packet
returns the host port
returns the display name of the current user
returns the tag name of the tag
returns a string representation of the
sets the tag value
returns the domain of the domain
returns the host name of the host
returns the uri of the resource
returns the opaque opaque value of the attribute
encode the body of this packet
returns the algorithm used to generate the algorithm
returns the stale authentication
returns the signature of the signature
returns the version of the last protocol
returns the signed value of the user
returns the sent protocol
returns the response
returns the realm
returns the sent by
returns the value of the named parameter
returns the hop that is connected to this connection
get the value of the code in params code property
removes a parameter from the list
returns true if the port has a port
sets the value of the parameter
creates a new record route route
returns true if the comment has been set
sets the authentication parameters
removes port from the server
sets the expires time
sets the retry threshold
sets the value of the protocol version property
returns the retry after
sets the host
sets the reason code for the
sets the sent protocol
sets the state of the state
returns a reply to the specified address
returns the body of this request
sets the sent by
sets the event type
returns the body part of the body
encode the body part as a string
sets the tag option
returns the host of the host
returns the credentials list
sets the value of the credentials
sets the parameter to be used for the
returns the port number of the server
returns the parameter name
returns the transport name
sets the transport protocol used by this transport
returns the key for the key
sets the sip provider
removes the sip provider from the sip registry
returns the protocol used for this connection
clones the object
returns the port number of the port
sets the protocol
returns the transport name
returns the sip provider
sets the ttl
returns the parameter
sets the host name
creates a route header
returns the received message
sets the received message
returns the content of the header
returns the branch name
sets the branch name
sets the status code
merges the template with the given template
sets the status phrase
returns the reason phrase
returns true if the response is a final response
dump the debug information
compares this object with another one
match the given object against the current match
attaches a header to the
sets the header of the header
returns the first line of the current line
sets the headers
creates a new error info header info object
creates a new
returns the hash code of the current object
returns true if the content has content
dump the debug information
returns a list of all headers
sets the defaults
sets the request line defaults to the default
returns the header associated with the specified header
sets the request uri
returns the content type header
sets the request to be used for the request
returns the method
returns the from header
returns the message that is used to encode the message
returns the error information
returns the list of contact headers
compares this object with another one
returns the header of the contact
match the given object against the current match
get the value of headers headers
sets the value of the specified
get the value of the
returns the sequence header
returns true if the header has a list of
returns true if the list of has a given class
returns the class that is used to store the header
returns the authorization authorization
returns the host port
returns the port number of the address
returns the address of the user who is currently connected
returns the host uri
removes a parameter from the registry
returns the string representation of this object
returns the address type
returns the request line for the specified request
sets the address type
sets the display name
sets the address value for this
returns the hash code of this object
sets the maximum value of the header
compares this address against the specified object for equality
returns true if the display name has display name
removes the display name
returns true if the address is a address
returns the uri of the resource
returns a new line
is the address
sets the address of the address
sets the user
sets the wild card type flags
returns the route headers
sets the scheme for this task
returns the value of the request header
gets the call id
clears the uri of the uri
returns the number of the port
clears the password
returns the authority
sets the call id
returns the first line of the request
clears the list
returns a string representation of the object
sets the call id
sets the
returns the string representation of the object
returns the version of the sip request
returns the record route headers
returns the value of the given property
returns the transaction
returns the header of this packet
returns the method
returns the uri of the
sets the transaction transaction
remove uri from the list
gets the value of the property
returns the user type
returns the password of the user
sets the user password
returns the content length header
gets the telephone
returns the merge id from the
returns the host port
returns the port number of the host
returns the content of the message
returns the host name of the host
checks if the user telephone is a friend
delete the from the current
delete the from the database
removes the transport from the transport
removes the specified header
remove the headers from the list
returns the content of the message
removes the user type from the database
deletes a parameter
removes the port from the registry
returns the post dial
gets the
returns true if the request has post
removes the method from the list
returns true if the given parameter has parameters
returns true if the has
returns true if the is global
removes the post dial
removes the
sets the parameters
sets the user
sets the global state of the
sets the value of post dial
sets the value of a parameter
sets the
sets the phone number
removes the user from the list
sets the content of the message
returns the user name
tests the equality of this code auth code
sets the default value for the parameter
returns the host port
returns the user password
returns the user name
returns the host that this host is associated with
returns the port number of the server
sets the authority
removes port from the host port
sets the password
sets the content of the message
sets the user name
sets the host host
sets the port of the server
sets the host port
sets the user info
sets the host
removes the user info object
returns the sub address of the
returns true if the global level is global
sets the uri of the
sets the global global member
sets the sub address
sets the value of post dial
sets the phone number
returns the phone number
returns a string representation of this object
sets the uri parameter
clone this object
sets the
returns the uri of the uri
returns true if the uri is a
removes the content of the content of the content
sets the host name
this method is called by the net
returns the first object that is currently being used
sets the user parameter
returns the next element in the iteration
returns the next element in the list
sets the method
tests the equality of this object to the other object
returns a string representation of the password
clears the password
returns a list of all headers that have been set in the
sets the sub address of this contact
sets the user
sets the password
sets the user type
sets the telephone
sets the port of the server
returns true if the parameter with the specified name exists
sets the
returns the processing processing processing
sets the uri parameter
returns true if the transport is a transport
checks if the given header name is contained in the header
removes a parameter from the list
sets the host port
returns true if the tag is a
parse the authentication request
returns an iterator of the names of the
returns true if the tag has a tag
returns the parameter
returns the url of the
returns the tag name of the tag
parse the
returns the method parameter
returns the body content of the message
sets the tag for the tag
returns an iterator of the names of the parameters
sets the parse exception listener
returns true if the body is a body of the
returns the transport parameter
returns the user defined user
returns the tag name of the tag
returns true if this is a secure port
parses a address
adds a header to the header
sets the value of a named header
parse the host name and return the host name
sets the host
adds a unparsed unparsed string
sets the
sets the method parameter
sets the parameter value
returns a list of all headers
sets the ttl
returns a list of all headers in the
sets the transport parameter
returns the current header
returns the current line number
compares this object with another one
returns true if the parameter has a lr param
parse the request
parse the request
parse the request
parse the token from the token
parse the request
parse the
parse the subject and returns the next token
process the input
creates a new
parse the
parse the
reads the line from the given input stream
parse the header
returns the name of the current token
format phone number
parse the content disposition header
returns a local number of the
sets the content length for this response
parse the reply to the server
parse the request
parse the phone
parse the
p this method is called when the user selects the time
parse the
p method description p
parse the
parse the name of a
parse the token type
parse the request
parse the organization
returns the string representation of the current token
parses the
sets the separator
sets the quoted value
returns true if the value is quoted value
sets the value of the specified property with the given name
compares this object with another
returns the value of the specified name
returns the name value of the given name
returns true if the name of the given name has a value
deletes the given name
returns an iterator over the names of the names
returns the value of the specified parameter
logs the stack trace
returns the class that this belongs to
returns the next element in the iterator
sets the name of the log file
returns the first element in the list
returns the next element in the list
returns a string containing the message stacktrace
logs a message with level
concatenate the given object with the given list of objects
sets the level of the trace level
returns the of the object
returns the string representation of the object
compares this host to another host
returns true if the port is a port
sets the host
returns the local address of the host
returns a vector containing all the lines in the table
returns the next token in the input stream
encodes the string
compares this host with another host
returns the hostname
returns the ip address of the host
sets the hostname
returns the next id
sets the matcher matcher
sets the host address
sets the address of the address
is the server a host
returns the matcher
returns true if the address is a address
returns the local address of the host
returns the next token in the iteration
checks whether the given address is a address
checks whether the given address is
clones the object
returns a string representation of the current token
sets the value
returns the comment
returns a string containing a comma delimited string of the
returns the string representation of the given string
returns the next token in the stream
returns the mark mark position
sets the position of the input input stream to the specified position
returns the rest of the current string
print a string
returns the string value of the specified character
returns the current value of the code code property
returns the hash code for this object
returns a string representation of the given string
sets the
sets the info
returns the sdp information for this connection
returns the sdp data
returns a vector of media to use in the given sdp
this method is called after the is destroyed
starts playback of the playback
returns the number of payload in the payload
start the record
plays the audio data from the specified audio data
sets the value of info
sets the type of the
sets the type of the
returns the
sets the clock rate
returns a string representation of the object
returns the default route
this method is called by the garbage collector
start playback of the rtp session
this method is called when the packet is sent
returns the supported media
starts the audio
detects the devices that are currently being used
returns true if the player is done
auto generated getter method
returns true if the data is started
creates a video settings for this video
sets the mute state
returns the state lock state
invoked when an action occurs
sets the failed state of the process
returns the control for the given type
sets the input format
sets the output format
returns the input format
this method is called when the controller is changed
returns the output format
sets the gain value
returns the effect name
starts the gui
creates the transmitter
this method is used to send an object to the
call when a new incoming call is accepted
returns the payload type of the given type
returns the payload type of the given type
returns the rate of the specified audio codec
get the sdp name for the given codec
returns the payload number
returns the clock rate
gets the value of the sdp name property
signal the call to signal the call to signal the call to
sets the gui gui
handles the action event
sets the mute state
this method is called by the framework to set the application
stores settings of the current project
formats the given string to a string format
sets the image file
called when a new is rejected
choose a color to choose the current color
returns the track width
returns the track length
this method is called by the
this method is called to load the video settings
formats the given string to a string
sets the image file to the video
signal to the signal to the signal
handles the key pressed event
paints the border
sets the time in milliseconds to be used as the time buffer
this method is called by the
removes the data from the data array
encodes a string into a string
returns the column name
returns the local port of the local port
invoked when an action occurs
sets the value at code column index code and code column code
invoked when a key is pressed
removes the data from the data array
this method is called when the user selects a new address
returns true if the given cell is editable
sets the
change the label of the panel
sets the
returns the capture device handler
sets the
listens for button press
sets the mute flag
focus lost
initializes the controls
handles the action event
returns the program window
save settings to the application
returns the language
change the text of the dialog
sets the program name
returns true if the component is
this method is called when the user clicks the ok button
this method is called when the user selects the settings object
saves the settings to the current settings
handles the action event
sets the language
sets the
returns the result of the current thread
disposes the toolkit
sets the text of the label
the method is invoked when the button is pressed
call this method to handle the call to the call to
refresh the gui
unregisters all registered processors
creates the menu
sets the gui to be established
sets the pending video
clears the text areas
returns the remote video panel
removes the audio video player from the video player
restarts the video
called when the user selects a new address
handle a double click event
shows a password dialog for the user
mute a
called when the application is launched in the application
start the server
notify the server that the port has been changed
sets the listener
start the application instance
stops the application
sets the default settings
stops the server
processes the response
process timeout timeout
process the response
processes the timeout event
sends a request to the server
process timeout timeout
returns the sip address of the remote agent
cancels the current request
returns the call processor
returns the call id of the call to the call
process timeout timeout
sets the tag name
returns the number of
remove a transaction from the database
process timeout timeout
sends a ringing request to the server
called when the user is busy
this method is called when the request is not acceptable
called when the user selects the
returns the number of
process the response
returns the allow header
register a new
unregisters the current state of the current page
returns the last time of the request
returns the last
returns the sip address
returns the register processor
called when the expires
starts the thread
starts the thread
stops the server
returns the real name of the user
start the
stops the
stops the listening for the
decode the password
sets the port
sets the transport protocol used by this transport
decode the password string
returns the ip address of the local host
encode a password into a password
process request request
encodes a string into a string
process the response
process timeout timeout
call the method pushed listener method
returns the processor for the given id
adds a processor to the registry
returns the dialog handler for the given transaction
remove the specified handler
gets the local ip address
returns the transport name
invoked by the listener interface
called when a new is rejected
signal the call to signal the call to signal the call to
signal the call to signal that the signal call was stopped
signal the call to the next transition
this method is called when the user selects an incoming client
sets the primary sip address
returns the primary address of the sip address
process the request
processes the response
this method is invoked when an atomic transfer is activated
signal to the signal that a signal is successfully finished
signal that the signal opcode has changed
call this method to notify the listener that the
returns the configuration string
sets the auth info
returns the authentication info for the specified realm
sets the from address list
returns the address of the domain
called when the dialog is finished
this method is called when a transaction is finished
the
returns a property with the given name
returns the default value of the default value
returns the catalog with the specified name
returns the schema instance with the given name
returns the
returns the with the specified name
returns the table with the given name
returns the data type name of the data type
returns the procedure with the given name
returns primary key constraint
adds a validator to the list of validators
returns the column with the given name and column name
sets the primary key constraint for this entity
returns true if the validator is empty
adds a foreign key constraint to the constraint
returns true if the primary key is set to the primary key
returns the value of the string
adds a foreign key constraint to the constraint
returns the column identified by name
returns the schema by name
returns the table with the specified name
removes the given schema from the schema
returns the view by name
returns the by name
returns the procedure by name
initializes the data source
returns the function with the given name
returns the value of the property as a string
returns the value of a property
returns the callable statement by name
returns the value of an integer property
returns the file property
returns the sequence with the specified name
returns the element with the specified name
prepares the result of the test
returns the first object of the map
retrieves the value of the designated column in the current row
returns the name of the not null property
creates a file resource by its name
open a file to read from the file
open a stream to read from the input stream
opens an input stream for reading the contents of the file
clone the catalog
creates a new database
remove all catalogs of catalog
removes the schemas from the schema
load properties from the resource
creates a new validator factory
adds a listener to the list of listeners
removes a listener from the list of listeners
this method is called when a new process is added to the
removes all the agents from the specified agent
processes the key and dispatches the command
processes a command
returns the last command in the given process
resets the last command to the given string
this method is called by the kernel
moves the caret to the given position
resets the buffer and the given os id
this method is used to append the given command to the current
delete char in command line
removes tags from the list of sequences of the given
returns true if the given type contains a type
load a string from a string
sets the url to the specified url
initializes the dialog
this method is called when the user selects the selected button
returns the next region of the given source
returns the processor last word in the given index
sets the scanner to the scanner
returns true if the selection is
returns true if the given block is a block of code text
resets the previous character
resets the detector to the default
installs the content assist action
initializes the given action
returns true if the selection is valid
returns a string representation of the object
returns a string representation of this object
returns a string representation of this object
returns a string representation of the object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of the object
returns a string representation of the object
returns a string representation of this object
returns a string representation of this object
initialize the
returns the general item composite
returns the code composite code that is used to render the document
returns the composite item that is responsible for the given composite
returns the next composite item
validates the values of this object
initializes the values
creates a new configuration
sets the service
the specified blocked
sets the to be used for the
enables disables the button
creates a new tool
returns the for the given
disable the widget
sets the
disable the widget
returns the resource editor for the given resource
returns the image that is currently in the source image file
send a message to the server
creates a chart
populate the data with the data
returns true if the entry is a entry
creates a transferable for the given
called when the user selects the
returns the service
sets the service
starts the server
returns the address of the server
this method is invoked to indicate the server socket is used
this method is called by the server to run the server
handle a
handle the command
returns the parent of the path
returns the path to the file
returns true if the command can be executed
returns the last modified date of the file
returns the last modified date of the current date
send a message to the user
creates a new tool
sets the service
validate the values of the values in the list
disable the widget
returns the length of the replaced text
returns a string representation of this object
launches the error dialog
handles the request move request
handles the request to create a new
launches the error dialog
creates a thumbnail for a thumbnail
sends a message to the server
sends a message to the server
returns true if the given id contains the given id
returns true if the passive data transfer is enabled
the listener that will be notified of the selection
this method is responsible for creating a new
creates a new notes object
this method is invoked to indicate the user to the
this method is called by the core model to create a
creates a new
load the core core
this method is called when the user selects a control group
dispatches the given event to the given core
process tool message
replaces the path with the text of the given text
disable the widget
sets the blocked status of the widget
creates a tool for the tool
sets the service
this method is called when the user selects a control group
sends a browser to a browser
sends a local message to the server
initializes the ui
sets the service
sets the
displays the current state of the tests
creates a new tool
process a tool message
returns the of the given
sets the blocked widget
returns the editor id for the given file name
returns the restlet that is used to handle the request
sets the connection model
sets the source of the model
returns the source of the source
returns the target node of this node
sets the target model
sets the location of the component
sets the location of the item
fire property change
sets the color of the color
disconnect from the database
adds a child to this model
removes a graphical item from the model
sets the background color
returns the background image path
sets the background image path
sets the constraint to be used for this node
sets the color of the color
sets the text
sets the text color of the text
sets the font data
adds a connection source to the list of connections
removes a connection source from the list of connections
sets the visibility of the property
sets the owner name
adds a connection to the target list
gets the value of the property
removes a connection from the target list
removes the given connections from the list of connections
returns the font data
stops the share of the
returns the abstract model
returns the canvas model
returns the point of the center of the point
sets the image path
gets the value of the serializable request property
returns an image that is the default image
clears the list
returns the graphical model
process the site
returns the selection provider
returns the image icon provider
returns true if the selected tab is a selected
returns the color of the given color
returns the color for the given rgb value
returns true if the selected node is selected
returns the location of the cursor relative to the current cursor position
returns the text of the element
sets the viewer
returns the configuration of the toolbar
returns the editing policy for this user
returns the color of the text
returns the rgb value of the rgb color
returns the request request for the given request
gets the value of the request type property
returns the request color for the request
returns the delete graphical item for the given request
returns the request to be used for the move
returns an error message for the given request
sends a message to the user
send a message to the
creates the bot
sets the widget to the specified widget
shows the role
disable the widget
sets the client modality
returns the modality of the current configuration
sets the service
sets the service
creates a tool for the tool
this method is called when the user presses the start button
creates a tool for the tool
send a message to the server
send a message to the server
sends a request to the server
sends a command to the server
send a message to the user
this method is called when the user selects the
sets the service
this method is used to remove the from the
sets the blocked status of the widget
this method is called when the user selects the
sets the status of the widget
this method is called when a new user is selected
creates the bot
handles error notification when an error occurs
sets the service to be used for this service
deletes the graphical item from the viewer
handles the request to create a new
move the selected item in the model
creates the graphical representation of the model
sets the blocked widget
sets the color of the
sets the current display
this method is called when a new user is selected
returns a random string
returns a random string
stops the
unblock a blocked
initializes the combo box
validates the configuration
disables the widget
this method is called when the user selects a new group
sets the gui to the
returns the project name
check if the limit is allowed to be checked
parse the of the given string
creates a thumbnail for a thumbnail
sends a message to the user
disable the widget
creates a configuration object
validates the values
sets the property
returns the
returns the colors of the configuration
convert the color to a color
convert the color to a color
handles the change content change content change
sets the blocked widget
sets the service
process tool message
launches the given launch message
launches a launch applet
sends a message to the server
sends a message to the chat server
sets the service
sets the default configuration
sends a note to the
disable the widget
creates the bot
returns the check anonymous flag
sets the check anonymous flag
disable the widget
disable the widget
sets the blocked status of the widget
stop the voting
sets the service
returns the number of
creates the bot
this method is used to process a connection
disables the widget
this method is used to process the
unblock a blocked thread
sets the location of the frame to the
sets the midlet to be displayed
add a messenger category to the list of
sets the current
returns true if the blocked thread is blocked
sets the blocked flag
handles a message with a message
handles a message that is received
handles a message editing message
handles a renaming category renaming the category
toggles the of the
handles the deletion of a category
handles a move message from a branch
handles a delete message
this method is called when a new user is selected
handles a tag
returns the actions for the given code
called when the user selects the
returns true if the flavor flavor contains the given flavor
process a message message
handles the edit message
close the streams
cancel the current status of the task
returns the percentage of the
returns the exception that caused this exception
returns true if the current thread is done
returns the id of the
handles the move category
enables disables the setting of the button
handle a chat message
sends a message to the user
returns true if the user can send a multi page
sends a message to the user
sends a message to the server
send a full message to the server
returns the number of bytes received by this server
returns the listener that is notified when the event is fired
returns the adapter for the specified adapter
sends a category request message to the server
sends a category message to the server
send a message to the server
returns the category categories
sends a message to the user
notify the listeners that the transfer has been done
sends a message to the user
notify the listeners that the transfer has been uploaded
disable the widget
initializes the combo box
returns true if the category is possible
returns the colors of the configuration
handles the message of the
handles the grid coordinates in the grid
sets the service to be used for this service
handles error notification when an error occurs
creates the comment
sets the current display
process tool message
disable the widget
creates the bot
returns an xml representation of this object
returns a string representation of this object
returns a string representation of this object
initializes the panel
sets the status of the widget
called when the request is requesting a request
this method is called when the user selects a new group
unblock a blocked thread
sends a message to the server
sends a message to the user
handles a message
sends a message to the chatroom
handle a start vote message
sends a stop vote message
handle a stop vote
handle a group presence message
disable the widget
passing the focus request to the viewers control
sets the service
sets the vote for this message
this method is called when the user selects a new group
removes the given user from the list of the user
initializes the dialog
disable the widget
this method is called when a new group is selected
stops the
starts the voting
disables the
disable the widget
unblock a blocked widget
the advisor to the
this method is called when the user selects the
sets the blocked widget
refresh the page
this method is called when the user selects a group
refresh the files in the database
creates a new tool
disable the widget
sets the panel
blocks until the widget is blocked
returns the text of the current page
this method is called when the user selects the
sets the text
sets the default configuration
initializes the dialog
validate the configuration values
returns an xml representation of this object
returns a string representation of the object
sends a message to the user
sends a category request message to the user
returns an xml representation of this object
returns a string representation of this object
sets the service
returns true if the cas is anonymous
sets the anonymous flag
returns a string representation of this object
sends a message to the user
returns an xml representation of this object
returns a string representation of this object
returns true if the anonymous class is anonymous
sets the check anonymous flag
returns a string representation of this object
sends a message to the
send a message to the
sends a message to the user
disable the widget
sets the service
adds a listener to the list of listeners
notify all listeners that the model has changed
sets the text of the label
creates the bot
disable the widget
opens the streams
reads a reply from the socket
handle a user request
starts the voting
returns the current state of the current state
move the next state to the next state
sends a command to the server
handles the private message
handles the private move category
returns a tree with the given category
handle the private message from the
handles the private event
handle the private event
stops the voting
returns the of the current
returns true if the category is possible
returns the name of the that this node is
sets the
stops the
sets the value of a property
returns the value of the specified property
this method is used to convert a date object to a time
starts the server
returns the element for the given
stops the thread
send a reply to the server
sends a reply to the server
closes the socket
process a command
find the group with the given group
determines if the user can delete a selected node
gets the value of the notes text property
this method is called by the client when the user selects the
returns the index of the added item in the list
returns the value of the percentage of the percentage
returns the object file copy
returns the index of the entry item
returns the index of the index of the removed item
this method is called when a command is received
this method is invoked when a command is executed
this method is used to set the contents of the command
returns the text message
returns an xml representation of this node
returns a string representation of this object
returns an xml representation of this object
returns a string representation of this object
returns a string representation of this object
gets the value of the client user name sender property
returns true if the user can edit the current selection
removes the given connections from the list of connections
sets the new edit part
sets the old part of the edit part
sets the connection edit part
sets the location of the location
returns the connection tag
sets the style of the image
adds a bendpoint to the end of the list
removes the bendpoint at the specified index
sets the grid coordinates of the grid
sets the coordinates of the
replaces the current position of the given point with the given
returns true if arrow is in the arrow
sets the connection tag
sets the arrow arrow property
sets the label text
sets the anonymous flag
disconnect from the database
this method initializes lst categories
returns the model anchor model
returns the hidden point of the given type
update the hidden status of the given points
update the hidden points
sets the type name
returns the contribution tag of the
returns the decoration arrow decoration
returns the list model
sets the comment text
sets the contribution tag
this method initializes lbl messages left
refresh the
this method initializes panel wait for server action
initialize the hidden points
sends a private note to the user
update the hidden points in the given row
sets the points of the left side of the grid
sets the points of the grid
sets the graphical item to be displayed in the panel
creates the graphical item sub menu
creates the filter sub menu
gets the value of the contribution title property
gets the contribution of the contribution
disposes all images associated with this image
creates the sub menu
sets the service
returns the tag that is currently being used for this
adds a category to the given category
returns true if the user is a owner of the selected
disables the drag operation
refreshes the tree
returns the part of the part tree
resets the edit part of the connection to the old
change the current policy
returns true if the given edit part is highlighted
builds the subgraph and place the subgraph
this method is called when the user wants to build the user
called when a repository is changed
returns the configuration of the configuration
returns the bendpoint id
whether or not the previous step is frozen or not
returns true if the is
returns true if the label should show the label on the show
gets the number of messages to be used for messages
returns the grid type
decrement the number of messages
returns the left point of the edge
returns the right point of the right side of the polygon
returns the bottom point of the bottom edge of the
returns the top point of the edge
this method is called when the user selects a random
returns true if this is anonymous
returns a new message object that is used to send a request
returns a request for a request
returns the request for a given request
this method will be called from the
returns the new item uuid
returns the old item uuid
returns the uuid of the connection
returns the subtype of this type
returns the request content item from the request
gets the contribution
creates a request request for the given request
returns the request connector for the given request
returns the delete graphical item for the given request
returns the move to be played
this method is called when the user selects the random user
returns the request connection request for the given request
refreshes the list of files that are loaded by the user
gets the value of the subtype property
returns the tag of this tag
refreshes the map of files in the map
sends a message to the user
disable the widget
sets the blocked status of the user
create the bot
initializes the values
sends a new category to the
returns the string representation of the node
sets the text
returns the id of the
sets the id of the
sets the node to which this node is part of
returns the node that contains this node
returns the parent tree entry
returns true if the node is a private note
returns the parent
returns the parent of the given tree node
returns the parent
returns the for the given tree node
returns the next child index
increase the next index
decrement the next index
resets the next child iterator
returns the next note child
increase the next note child
decrease the next note child
resets the next note child note
returns true if the node is visible
sets the show node number
sets the color of the text
returns the color of the text
sets the style of the text
returns the style of the text
sets the new value of the code new code property
returns a boolean indicating whether the probability of the given
increment the number of children
decrement the number of distinct states
returns the new number of children
sets the number of children
resets the number of children
sets the contribution tag
gets the contribution of the contribution
sets the last leaf
returns true if the last leaf is a leaf
returns the data for the specified flavor
returns whether or not the specified data flavor is supported for
returns true if the note is private
sets the private note
returns the number of children of this note
returns a random category index
increments the count of editing the current one
decrement the count of the current count
gets the value of the new name property
sets the nick for the user
returns a string representation of this object
select the current category
returns a string representation of this object
returns true if the message is cloned
sets the color of the globals
returns the parent uid
returns the index of the tag
sets the parent uid
sets the category
returns the preferred size of the icon
select the next
sets the height of the image
returns the height of the image
sets the maximum length of the length of the length
returns the maximum length of the longest value
returns a random selected node
returns the text area
sets the index of the previous step
sets the color of the text
returns the color of the text
select a new tree node
sets the preferred size of the component
sets the text of the font
returns the uid contribution
returns a string representation of this object
returns the text of the dialog
returns a random string
returns the category to which this category belongs
returns the category of this category
returns the root branch of the branch
returns a string representation of this object
sets the globals message
returns true if the anonymous class is checked
sets the check anonymous flag
returns a string representation of this object
checks if the given category name exists in the category
disable the widget
returns a random string between 0 and 1
gets the message num limit
returns the maximum depth of the tree
returns true if the node is visible
returns the number of category categories
returns true if the tag is selected
returns true if the private notes should be used
sets the name of the
returns the hash code of the object
returns a random string from the given string
sets the uid
returns a string representation of the object
returns true if the tag is post
returns the string representation of this object
returns the direction string
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
sets the tag
sets the description of the
returns the tag of the tag
returns the url for the icon
returns a string representation of this object
returns the description of the tag
gets the value of the message text property
sets the text of the message
this method initializes this
returns the number of levels in the current level
compares this object with another one
this method initializes lbl contribution tag
this method initializes txt message
this method initializes btn send
this method initializes sp txt message
this method initializes panel empty
gets the tag
sets the tag
returns the current chat service
unblock the
creates the view
unblock a blocked thread
this method is called when the user selects the
sets the flag indicating whether or not the should be
starts the process
process tool message
this method is called when the user selects the
called when the user selects a new group
returns the toolbar button
registers a new service with the specified id
returns a service object
returns the message processors
returns the client state manager
process a connection
process the
gets the value of the waiting state response property
returns the container id
returns the to
returns the current sequence number
returns the list of messages
adds a new message to the list
returns the container id of this object
returns the shared object from the shared object
this method is called by the process process when a tool is
disable the service
sets the state of the blocked state
returns the configuration properties
sets the properties properties
returns true if the imports property is
returns the tool name for the import tool
returns the actual step number
sets the actual step number
this method initializes tool bar standard actions
returns true if the server side of the server side is shown
returns the content of this object
returns an xml representation of this object
returns a string representation of this object
returns a string representation of this object
sets the anonymous flag
returns a string representation of this object
gets the value of the property
gets the value of the property
this method initializes btn save
start the service
disable the service
this method is called when a user is selected
remove a user service
a group control
returns the tool tip
returns a list of all keys in the list
returns the info for the given object
returns whether colors are colors on the foreground color
returns true if the user is sortable colors
returns whether the colors of the colors are no longer
checks if the tree node is a valid depth
sets the session
handle the command event
returns true if the teacher is teacher
creates a new instance of the given user
creates a new instance of the given user
creates a new instance of the given user
returns the url of the document
pause the animation
returns the context object associated with this context
returns true if the context is connected
handle the fast forward action
sends a shared object message to the server
sends a shared object message to the server
returns the next event in the queue
sends a shared object message to the server
returns true if the is
this method is called when the user presses the back
adds a handler to the handler
removes a handler from the handler
notifies all registered handlers that the message has been dispatched
handle the next record action
handle the previous record
returns true if the is
adds a value to the set
returns the value of the attribute specified by the attribute
removes the specified attribute from the list
returns the configuration information for this plugin
returns a string representation of this object
sets the flag indicating whether the specified
returns the id of the
this method is called to go to the given value
returns the of tools
sets the of tools
returns the tool name
returns the list of groups
returns true if the dialog is open
sets the open dialog
sets the groups list
sets the short description of this type
sets the tool configuration
gets the to id
sets the id of the service to be used to store the
returns the tool configuration
sets the long description
sets the current category
sets the id of the
sets the task to be used for this task
sets the end session
returns the id of the client
sets the id of the client
returns an xml representation of this object
sets the step number
returns true if each chat chat is allowed to be disabled
returns true if the is late
returns a string representation of this object
returns true if the dialog is closed
sets the late value for this batch report type
sets the dialog to open or not close
creates a new client service
gets the value of the property
sets the
returns true if the service is disabled
sets the service disabled
returns true if the service is service
sets the service
returns the to id
gets the value of the property
sets the id
sets the to id
sets the
returns the fn
returns list of services
sets the list of services that can be used to populate the
returns the members list
sets the members list
returns the user name from the user
sets the user name from the user
returns a string representation of this object
creates a metadata object from the metadata file
returns the user name to use for the user
returns a string representation of this object
sets the user name to use for the user
gets the value of the file property
sets the file
returns an xml representation of this object
returns true if the server is a server
reads a session from the database
returns the last step
sets the last step
returns the list of steps that this task should be scheduled
sets the list of steps to be used for the next steps
sets the title
returns the user name
sets the user
returns a string representation of this object
parse the xml document from the given xml file
gets the value of the is group change property
sets the change group change
returns the previous group
parse the xml document
sets the previous group
returns the properties of the properties file
stores properties from the given properties file
sets the tree background color
returns the align of the horizontal axis
returns the layout string
this method is called to go to the next timestamp
adds a handler to the handler
removes a handler from the handler
creates a transferable for the given
gets the value of the coordinator name property
returns a datagram packet
gets the value of the name property
returns the server info
returns true if the air is on air
returns the authentication mode
parse the
creates a new status
displays an error dialog with the error code
visit the given node
returns the exception stacktrace
returns the absolute location of the system
returns the cross platform specific path
returns a code url code for a single platform specific
returns the directory name of the user defined directory
returns the number of nodes in the subtree rooted at the given
adds a new adapter to the list of adapters
gets the status dialog manager
sets the status
returns the value of the property with the specified key
initializes the status dialog manager
sets the property value
returns the value of the parameter with the given key
closes the dialog
handle the event
handles the status change
handle the given status
handle the given plugin
adds a status to the status
returns the active part id
returns the active shell
gets the value of the command id property
returns the key configuration
returns true if the event has been changed
returns true if the current instance has defined
returns true if the name changed
returns true if the parent id has changed
returns the previous attribute values
returns the attribute map of the attribute values
returns true if the category id changed
returns the category
returns true if the description has changed
returns true if the event has handled changed
returns the previous attribute values by name
returns true if the attribute values are changed
returns true if the control is open
returns true if the key bindings has been changed
returns the command manager
returns the set of
disposes the toolkit
returns the set of defined in the
returns the set of defined in the
returns true if the configuration key is active
sets the display
returns the display of the current page
returns true if the current locale has been changed
returns a map of attribute values from the map
sets the provider area provider
returns true if the active platform has been changed
adds a listener to the default job change listener
returns true if the node is removed
this method is called when done processing
sets the removed attribute
returns true if the active context ids have changed
returns true if the category ids are defined for the category ids
returns true if the given element has children
returns true if the current instance has the defined
creates and returns a new
returns the adapter for the specified element
returns true if the given element is a parent or not
returns the workbench adapter object for the given element
returns true if the given element is a deferred adapter
rebuilds the wizard page
performs the default implementation of
returns the default preference node
adds a code code with the given code code
adds a listener to the update list
removes the specified object from the list
compares two objects
returns the string representation of the object
compares two
returns an image descriptor for the given object
returns the category of the specified category
returns the label for the specified object
returns the parent of the given object
returns the background color for the given element
returns the foreground color of the element
returns the font data for this object
sets the search contexts
returns the node preference for the given page id
returns the page control
sets the label list
sets the lower element of the selected element
returns the lower bound of the element
sets the layout data for the specified button
sets the selection
sets the working sets
verify that the given set of is working
returns the current preference value of the given preference
returns true if the given object is in the list of categories
returns true if the selection is enabled
returns whether the specified code code is applicable to this
creates a dialog for the current selection
returns code true code if the receiver is modal
returns the initial selection
returns the ok button
sets the initial selection
sets the result of the query
handle the empty list
updates the ok state of the ok button
returns the dialog bounds
returns the dialog bounds strategy
sets the sorter used by this sorter
sets the comparator used to sort the elements of this
sets the container mode
creates the actions
returns true if the tree is selected
creates a new tree viewer
checks if the given category exists in the category
removes the preference store listener
this method initializes sp tree
enables or disables the default support for the default
this method initializes sp lst categories
returns true if the supports the
collects all the children of the given element
closes the dialog
handles the pressing the button
adds the given user defined property to the list of supported
returns the osc address pattern of the pattern
returns the list model
returns true if the given text matches the pattern
initializes the viewer
this method is called when the ok button is pressed
returns true if the given pattern matches the camel pattern
this method initializes tool bar category
returns the image for the given element
returns the image for the given element
returns true if the given character is allowed to be used
returns an image descriptor for the given object
returns true if the given character is a valid name
returns true if the given element is visible
returns the list of files
this method is called by the
returns the folders
checks if the given string matches the given string
closes the dialog
returns true if the given element is visible
returns true if the given character is valid for the character
checks if the given element is a leaf
tests if the given pattern pattern matches the pattern
returns true if the given pattern is a valid pattern for this
initializes the filter
removes the pattern from the pattern
creates the button bar
creates the controls for the given composite
creates the buttons for the button bar
returns true if the given label is equal to the given label
creates a tree control
creates the dialog area
creates a new tree viewer
creates the refresh job
sets the selection
returns the number of items in the tree
returns the number of items in the tree
this method is called when the user selects the default select
selects and focuses the given select element
creates the toolbar toolbar
this method initializes lbl discussion
returns the accessible object
this method initializes lbl categories
closes the current document
enables or disables the default support for the default tray icon
returns the selected editor
this method initializes lbl add
handles the click event on the button
restores the widget values for the dialog
save the widget values to the current state
sets the editors editors filter
updates the ok button
returns the error image for the receiver
returns the info image
returns the shell
returns the selected one
returns a collection of all the
returns the image for the given image
shows a message dialog with the given message type
returns the warning image
handles selection changes
sets the service to be used for this service
renames the category
initializes the bounds of the dialog
deletes the category
move category to another
adds a new code code to this group
refresh the dialog
this method is called by the workbench plugin to initialize the workbench
returns the workbench window
refresh the status area
refreshes the status list area status
this method is used to set the id of the drop down
sets the details provider to be used for the details of the
sets the selected status adapter
dispose of stuff
fires an action handler for the event
sets the test
runs the test runner
test the beginning of the current thread
called when the test is finished
sets the status list label provider
sets the provider support for the code provider code
sets the active state
returns true if the user is modal
updates the action bars
returns true if the given status line is a prompt
returns the parent casted casted to parent
creates a new sub cool bar manager
returns true if the page is shown in the page
shows the details area
this method is called by the framework to enable the tool tip
returns the action bar configurer
this method is called by the framework to enable the tool tip
fills the specified frame with the specified color
this method is called by the framework to set the actions
registers the given action with the given action id
returns the window configurer
this method is called when the window opens the window
fills the menu bar
post restore the window
fills the cool bar
fill status line status line
post a new window to the database
post window window
disposes the toolkit
this method is used to close the window shell window
dispose the actions
this method is called when the window is closed
dispose the action
creates the window contents
save the state of the given memento
restore the state of the given memento
save the state of the given memento
restore the state of the given memento
returns the editor part of the editor
disposes the toolkit
releases the state of this state
hides the button
this method is called by the framework to initialize the
returns the workbench configurer
updates the area of the dialog
called before the applet is started
called after the applet has started
this method is called when the application is shutdown
update the title area
this method is called when the application is shut down
handle the exception thrown by the exception handler
called when a new game is paused
returns the default value for the current locale
returns the set of modifiers
returns the natural key
this method is invoked when the window opens a
returns true if the current instance is empty
returns a string representation of the object
returns true if the specified sequence ends with the specified
this method is called when the user clicks on the left
returns the key strokes of the key strokes
opens the intro
displays the search result
this method is called by the server to indicate the user to
this method is used to execute the method
resolve a href
returns true if the key strokes the data
returns true if the key is empty
adds a context to the context
post a new window
adds a context to the control
returns true if the specified key is a sequence of
post window window
returns true if the user is blocked
this method is called when the window is closed
returns the context manager
returns the set of defined in the context
returns the set of context ids
returns true if the context ids has changed
returns true if the user has changed
returns true if the context ids has changed
this method is invoked when the window is closed
returns the default page input
returns the cookie
returns the page id of the main preference page
returns a new status line manager
returns the site
returns the id of the class
returns the minimum size of the image
creates a new sash
saves the state of the given memento
restore the state of the given memento
returns the label for the sort label
returns a comparator for the contribution of the given type
returns the working set of the working set
saves the current state of the file
creates the title bar
returns the editor reference
returns the current workbook
zooms the zoom
called when the user selects the current
sets the workbook editor
shows the given focus
returns the bounds of this control
update the titles
reads the configuration element from the configuration
restores the current editor to the current page
returns the part reference
tests if the given object name is a valid name
sets whether the should be restored to restore the value
adds the given filter to the filter
sets the visibility of the visibility of the test
sets the enablement of the configuration
this method is called when the activation is activated
returns a string representation of this object
sets the container part of this container
returns an image with symbolic symbolic symbolic symbolic name
returns an image descriptor for the given symbolic name
registers the given listener for the selection
sets the visibility of the component
returns the state of the
sets the focus to the component
saves the settings to the given memento
sets the page to be used for the page
returns the memento that is currently being restored to the current state
returns the index of the first category in the category list
sets the
returns the current presentation class name
returns the workbench
returns the stack of the stack
creates a file and create a new directory and add it to
shows the pane menu
sets the status of the error
show the system menu
returns the that is currently being used to find the
this method is called when the sash is done
updates the active view
this method is called when the view is selected
adds a new editor to the given editor
returns the provider
called when the child is added to the parent
called when the child is removed from the model
adds the items to the menu
this method is called when the dock panel is called
creates the parent composite parent
sets the busy busy status
disposes the editor
adds a new group to the group
highlights the highlight
dispose the parent object
returns the active editor
returns the uri of the current workbook
swaps the categories of the swap
returns the editor
returns true if the given code init code is in the same
returns the number of workbook to display
returns true if the editor is active
this method is called by the framework to set the layout information
checks if the given id is valid
finds the of the given
returns the source of the given part
returns the target in the target
removes all editors from the workbook
returns the context for the given part
emits a beep
removes the given editor pane from the editor
removes contributions from the model
returns true if the contributor is contributor
returns the tool item at the given position
sets the active workbook
returns true if the editor is a standalone stack
sets the
returns the location of the next icon in the tree
returns the index of the given item in the list
updates the tab list
returns the default handler for this handler
returns a list of all the plugins descriptors
returns the prefix of the element
returns the handler descriptor for the given status type
disposes the application
adds a handler to the list of handlers
returns a list of all the handler registered objects
this method is called when the drag is drag
adds a new part to the end of the list
returns true if this component is currently not allowed
removes a part from the container
replaces the specified part of the specified part of the specified
check if the can be deleted
returns whether the specified object is equal to this one
restores the presentation state for the given memento
returns a hash code for this object
adds the element to the filter
returns true if the given object matches the given object
checks if the given object matches the filter
returns the descriptor of the given code id code
sets the window to the given value
this method is called when a part is activated
simulates a part of the part of the part
part of the part of the part of the part of the
this method is called when a part is deactivated
this method is called when the user leaves the part
open the program
returns the image data
returns the image data
returns the secondary id of the
returns true if the user is visible
returns true if the child node has only one child of the
centers the center area
returns true if the handles is currently loaded
this method is called when the part of the part of the
release any references to this object
adds a new menu item to the menu
refresh the selection
returns the name of the part
sets the horizontal spacing between the components
returns the content description
sets the horizontal spacing of the component
check if the given category is a node
returns true if this is empty
returns the horizontal spacing between the horizontal and vertical space
returns the content description
returns a list of all
sets the width and height of the given cell
returns a list of all the
sets the margins
returns the margins that is used to draw the image
sets the default column
returns the title of the frame
returns true if the receiver is a vertical
sets the default row
checks if the category is selected
returns the display name
sets the row
adds a trim to the trim
returns the row at the specified row
adds a trim to the trim
initializes the grid
removes a trim
checks whether the given descriptor is contained in the list
adds a listener to the list of listeners
returns a list of the
returns the resize denominator of the given input
called when the user selects a radio button
returns the selected part of the
insert the methods description here
sets the cursor to the cursor
returns the area of the trim control
forces the layout of the current layout
adds a child to this group
removes the from the
sets the center control
closes the trim
adds a new child
flush the cache
returns the center control
returns the code composite code
disposes the toolkit
sets the hint for the given hint
called when dragging the dragging of the dragging
shows popup menu popup menu
sets the hint for the given type
returns the current trim of the area
returns the alignment of the specified alignment
sets the column cell
returns the code data cell code representing the code
returns the trim of the given trim
returns the indent for the given horizontal line
returns the trim area for the given area id
called when the user selects a radio button
sets the preferred locations
update the
returns the preferred area of the given code id code
disable all the with the given trim
returns the number of rows in the specified row
enables disables the trim controls
sets the cache size
returns the docking cache size
returns the id of the
returns true if the control is visible
sets the cache used to synchronize the cache
returns the area id
sets the area id
flushes the cache
sets the visibility of the component
adds a listener for perspective changes
notify the listener that a runnable has been
removes a listener from the list of listeners
handles the close button
called when dragging the dragging of the dragging
show dock popup menu
executes the given async shell
updates the current job progress manager
save the presentation state
returns the hints hints
cleans up the job that is currently running
returns the bounds of this code rectangle code
updates the current progress panel
compares the jobs jobs job info
returns the status of the blocked status
selects the previous state
selects the next item in the tree
update the entry map
returns true if the blocked status is blocked
update the job info
returns the number of items in the receiver
sets the blocked status
sets the number of ticks
creates the dialog area
sleep for a job
returns the content provider for the content provider
clears the cursor
returns the parent composite of the parent composite
sets the focus to the current state
sleep for a group
clears the cursor
refreshes the list of the
updates the visible items in the list
sets the message to be displayed on the given message
returns the parts
returns the current progress monitor
close the connection
returns a job monitor for the job
returns the status adapter for the given status info
sets the main text
returns the of the given description
sets the layouts for the progress indicator
refresh the current group of the given job
cancels the current task if any
returns the selected part of the current part
returns the main title of the task
removes a job info from the list of jobs
adds a new category to the list of categories
initializes the content provider
creates the context menu
removes the specified group from the list of registered listeners
returns the current selection
returns the time in milliseconds
creates the cancel action
checks if job is completed
adds a job info to the list of listeners
check if job is running
returns true if the job is running
returns the image display image
returns the percentage of the completion of the job
returns true if this object is
cancel the current thread
this method is called by the
checks if job has jobs
returns the animation that is used to draw the animation
returns the control
called by the framework to handle the double click
replaces the given child with the new new one
returns true if the given tab is horizontal
returns true if the given tab is vertical
this method is called when the panel is resized
updates the action
sets the width hint of the panel
updates the text of the task
sets the height of the image to be displayed
returns true if the current debug is positioned at the current state
adds a new code
sets the color of the current selection
add a job to the pool
sets the color of the task
returns the finish date of the job
returns true if the given element is
clears all the
returns the value of the progress indicator
sets the background color of the task
checks if the job is tracked
sets the displayed status of the panel
this method is called when the job is destroyed
creates the dialog for the extended area
returns a cursor wait display for the cursor
creates the spacer for the given composite
adds a new code code to the list of categories
creates the details for the given composite
disposes of the operating system resources associated with
returns a collection of all job listeners that are registered
watch the watch ticks
resets the category of the category
checks if the current time is still running
open the dialog
refreshes the category
sets the active state of the window
returns the monitor for the progress monitor
returns the preferred width of the code preferred code
returns the parent pane
updates the gradient of the editor
show focus on the component
returns the text color of the given text
sets the bounds of the presentation
clears the triggers
this method is called when the command is destroyed
returns true if the component allows focus to auto focus
returns the bounds of this rectangle
activates the given page
returns the tree
returns the id of the compound id
returns true if the background is in background
sets the show system jobs
returns the workbench window
moves the control to the specified control
returns the visibility of the control
returns true if the control is visible
creates a new page layout
sets the minimized state
sets the visibility of the popup
this method is called by the job director
this method will be called when the activity manager is notified
sets the bounds of this control
removes all listeners from the registry
sets the container
creates a preference key
saves the enabled state of the preference to the current state
this method is called when the server wants to shutdown the
start the event
notifies all listeners that the selection has been selected
handle the deferred events
returns the part of the given part id
gets the place holder id
clears the given tree node
returns true if the given layout is allowed to be added to
returns the filter for the preference
returns the description of the filter
returns the image descriptor for this image descriptor
test of invariants method of class
returns the name of the configuration
returns the list of keyword references
returns a collection of all the keywords of the
clears the keywords
returns true if the child is in the stack
adds a listener for the given property
returns the image descriptor for the image
disposes the toolkit
returns the status of the error
returns the location of the workspace
clears the list of messages
initializes the bounds of this component
closes the given table
disposes the image
saves the items in the table
updates the editors contents of the given code editor code
sets the locked item text
fills the table with the current page type table
sorts the table
returns the image for the given editor
invoked when a mouse button has been released on a component
this method is called when the ok button is pressed
saves the dialog settings to the settings dialog
returns the dialog settings for this plugin
performs the action
mouse pressed method comment
prompts the user to show the file dialog
creates the control for this component
removes the selected resource type from the table
add the top control to the table
disposes the toolkit
handles mouse click events
updates the enabled state of the current state
returns true if the editor is removable
returns true if the item is removable
restores the values of the values
expands the expanded categories
update the selected resource type
sets the presentation state of the presentation
selects selected
sets the expanded categories
adding the page to the wizard
returns the export for the current project
this method is called when finish button is pressed in
stores the selected category in the wizard
returns true if the given object is a sorter
saves the widget values to the current value
returns the selection
returns the trigger point
returns the selected working set
this method is called when the selection changes
sets the tree viewer
sets the selection
returns the selected node preference
sets the selected node preference
returns the contribution type
adds all sub nodes to the subtrees
this method is called when the user selects the
sets the selection colors
creates the general entry
adds the pages to the history
registers the given node in the registry
creates the page to display
returns the image of the icon
returns the text of the current contributor
adjust the size of the window
copy the value of the object properties into the object
initializes the workbench window
cancel the current state
creates the contents of the composite
handle mouse click
creates the composite with the default layout
creates the contents of the control
returns the selected working set of selected working sets
returns the id of the aggregate that contains the given entity
this method is called when finish button is pressed in
restore the current working set
add the page to the wizard
restore the working set sets the edited set of changed sets
restores the set
sets the selected
returns a list component for the specified cell
populate the decorators
shows the description of the given type
clears the description
returns the index of the given perspective
returns the decorator manager
finds the open
sets the current working set
updates the buttons on the current page
update the perspectives table
returns the element that is adapted to the given element
returns the page class
returns the page icon
returns the page name
creates the table viewer
zooms in on the given value
returns true if the given object is valid for the given object
handles the press info
restore the widget values
initialize the enablement of the given configuration
saves the widget values
handles the plugin info event
this method is called when the user selects a new page
tests if the given object is a custom filter
returns the category page
returns the sub pages
adds a sub page to the page
creates the dialog area
returns the child of the given id
process the element in the scope
creates the status panel
handle an exception
creates the dialog to show the user dialog
returns the wizard element
this method will return a list of the
loads the contributors
creates the status of the given composite
returns a collection of all contributor entries that are applicable to
enables disables the ok button
trim the primary for the primary key
sets the initial selection
refreshes the table
returns the set of set ids
creates the dialog area
updates the status of the current workbench state
returns the category attribute
checks whether the controller is currently working set
sort the table with the given column index
creates the dialog area for the given area
checks if the given bundle is a valid
creates the viewer for the given composite
removes the selected working sets the selected working set
finds a node matching the given id
handle the completion of the user click action
add the page to the wizard
returns the
adds pages to the wizard
returns the entry at the specified index
adds a preference entry to the history
creates the buttons for the button bar
gets the
expands the category list
updates the controls to the current page
gets the value of the name property
modifies the current selection
this method is called when the ok button is pressed
this method is called when the user selects a new selection
sets the initial selection
updates the buttons label
removes the specified element from the list
returns the child collection element that matches the given path
find a category element by id
find a wizard element matching the given search path
returns the label for the specified object
registers the given code code to be handled
dispose the resources
checks if the node is a valid node and all children
compares the current to the given object
adds the pages to the wizard
adds a filter to the list of editors
returns true if the wizard can finish
returns the next page in the registry
called when the finish button is pressed in
returns the list of wizard content
increase the number of messages
returns the parent collection element
sets the expanded categories
returns true if the given page is at least one descendant node
sets the content and label provider
returns the contribution type
called when the selection of the tree is changed
sets the filter to be filtered
creates the dialog area
open the web browser error dialog
sets the page data
returns the number of messages
returns the current selection in the workbench
creates the executable extension
returns the adapter for the specified adapter
returns the image descriptor for the icon
returns an image descriptor for the specified element
returns the label for the specified element
resets the new messages to the new
returns the element that is currently selected
sets the parent of this code category code
creates a button group
increment the number of messages
creates the text menu item
returns the number of messages
restore the current state of the view
sets the selected tab id
sets the number of messages
increases the number of replies to the new
attach control to the control
returns the number of replies in this message
resets the new count of replies to the new
update the contents of the tree
update the
sets the dirty flag
returns true if the current state of the dirty flag is set
returns the list of that are
disposes the cache
fills the specified component with the specified widget
returns the menu
fills the given widget with the specified properties
load the widget from the given
returns a string representation of the category
build the
hooks the internal preference list to the preference store
updates the locations of the group
disposes the toolkit
creates a new identifier for the given id
update the locations of the locations
returns true if the submenu shortcut tab is visible
removes all the items from the model
disposes the toolkit
returns the application name
compares the specified object with this list for equality
delegate to the appropriate delegate to the current editor
dispose the resources associated with this component
returns the text of the about text
returns the image for the about image
returns the product name
returns the ratio of the
returns the product id
returns the part of the part of the part
returns true if the user is editing
clears the caches
finds the part of the
returns the first right child
removes contributions from clipboard
returns the number of flags in the given code
sets the editing flag
clears the current background and repaints the current
find the for the given
flush the children of the current node
returns true if this is a
gets the nickname
sets the bounds of the given bounds
called when the child is added
sets the nick of the user
returns the uri for the given uri
called when a child is removed
description of the method
sets the default view align
returns a list of all managers for the specified factory
called when the element has changed
adds the listener to the pane
sets the
sets the handle zoom event
sets the value at the specified index
sets the visibility of the bar
creates the preferred style for the preference store
returns the layout of the current layout
removes contributions from contributions
gets the value of the override action id property
initializes the page
creates the intro part of the given code sticky code
dispose the window
updates the page
updates the enabled state of the specified action
sets the proxy
returns true if this is a part
this method is called when the user selects the tree
returns the drop target for the given control
removes a child from the container
this method is called from the preference manager to change the preference
unregisters the service
this method is called when the is
handle dynamic additions
handle dynamic
disposes the registry
this method is used to handle the registry
disposes the provider
called when the source of the source has changed
updates the of the action bars
zooms in the current layout
updates the evaluation context with the given value
returns the part of this part
wait for early early wait for early early startup
sets the current state of the dialog
runs the test
called when the user finishes the
returns a collection of all expressions that are not in the given
p contributes to the code part code part of the code part
this method is called when the user selects a new
displays the list of active styles
sets the page
closes the given code code
returns the page
closes the editor
closes the editor pane
disposes the editor
returns the layout part of the area
returns the visible editor
checks if the given interface is a class hierarchy
adds a new editor to the list of active references
restore the presentation state from the given memento
returns the editor
returns the window that is currently being used
creates the default contents of the window
dispose of stuff
returns true if the delegate is ok to create delegate
sets the listener for the help
refresh the selection
creates the control
returns true if the wild card is a wildcard
adds the given set of recent projects to the set of recently
sets the highlight color
returns code true code if the argument is an instance of
sets the highlight highlight
dispose the component
description of the method
returns code true code if the specified
returns true if the given object is enabled for this object
make the view fast fast
adds a submenu to the list of children
returns a collection of all the expressions in the given expression
returns true if the given type contains the submenu
returns true if the view requires a site
saves the state of the given memento
creates the initial action set for the given set of actions
restore the state of the given memento
saves the mru list of the current project
returns the toolbar group id
dispose of stuff
returns the toolbar id
returns the page used to render the page
returns the action set for the action set
restores the mru list of the current working set
processes the accelerator
returns the default perspective to be used to display the background
returns the composite composite
creates a drop target drop target for the given tool
activates the drag tool
returns the pane that is currently being used by the application
returns the presentation
adds a property change listener
save the state of the given file to the code save code
returns the toolbar
returns the ratio between the and the
returns the value of the show in part ids property
returns the view at the given position
removes a property change listener from the listener list
returns the tool item at the specified position
returns the current ratio of the
returns the time in milliseconds to show the time in milliseconds
show the fast view
show the popup menu
updates the bounds of the view
removes the given updater from the list of active executions
disposes the view
hides the area
hides the fast view of the
hide the editor area
updates the state of the editor
hide the fast view
updates the view
selects the current perspective
updates the image
sets the perspective
returns the selection
sets the selection
disposes the toolkit
returns the configuration element
initializes the activation
returns the view associated with the given item
adds the perspective to the perspective
returns true if the given fast view is fast
returns the resource manager
adds the duplicate attribute to the current element
returns a rec layout rec rec for the given
activates the tool
returns true if the class is a valid element
returns the item that is currently being used by the given
returns the icon for the icon
returns a rec layout rec rec rec rec object
returns the quadrant of the component
decorate the given element
returns the decorator for this component
returns true if the layout manager is able to render a layout
returns the decorator for this component
returns the side of the current side
builds the contributors
returns true if the given reference is a standalone view
adds a lightweight decorator
removes a lightweight decorator
returns the index of the lightweight decorator
returns the decorations of the decorator
returns true if the given view is shown in the view
returns the decorated result of the given object
adds a new view to the perspective
returns the location of the next icon in the tree
adds a listener to the list of listeners
makes the view perspective
removes a listener from the scheduler
returns true if the job is pending
adds a part listener
resets the state of the
returns the context menu
returns true if the decoration is ready for a given element
adds a part listener
returns the background color for the given element
returns the resource adapter for the given element
returns the foreground color of the given element
returns true if the label is label
returns the name of the defining element
returns the description of the type
returns true if the cool bar is locked
returns true if this listener has changed
sets the enabled state of the component
returns true if the image descriptor is in the list of images
disposes the decorator
decorate the text of the given text
returns true if the attribute is a
returns the default value for the default value
returns the enablement of the action
initialize the enablement of the configuration
this method is called when the user selects a new
returns the configuration element
returns true if the given element is enabled for this element
sets the values of the decorator
creates the control
sets the visibility of the popup
closes all open resources
returns the bounds of the popup
clears the caches of the current thread
returns the sash control
updates the enablement of the
this method is called when the element is loaded
returns the element name of the given element
this method is used to provide the list of contributors
sets the object manager
this method is called when the user selects a part
closes all pages
sets the decorators
show the given id
returns the image for the image
returns the tips href
returns the welcome page url
returns the welcome perspective
returns the license url
returns the feature label
returns the feature id
returns the name of the provider
returns the version of the feature
creates the elements in the given set of elements
sets the elements of the list
increments the count of the reference
removes a fast view from the fast map
decrements the reference count for the given reference
shuts down the component
removes the fast view and removes all the views from the view
computes the of the given relation
dispose the
updates the non source with the given source
returns the first right child of this panel
returns the resource manager
adds a listener to the model
removes a listener from the model
returns the compression length of the
returns a string representation of this object
returns the decorator definition for the given component
description of the method
disposes the page
returns the id for the part
creates the page composite
notifies this listener that the selection has changed
sets the page
returns the page
returns the part of the part
returns the index of the decorator with the given id
creates a new view
returns the lightweight component manager
creates the contents of the window
removes the given view from the
restore the state of the given memento
save the internal state of the given memento
get the maximum memory value
sets the value of the given code code
sets the value of the new value
returns the current state of the
creates the context menu
sets the mark to the current mark
clears the mark
returns true if the user wants to show the status of the
returns the attribute name for the attribute
creates the status of the heap
the command has been executed so extract extract the needed information
returns true if the given window is visible
returns the for the perspective
returns the list of visible in the document
dispose the handler
this method is called when the user is being performed
the action has been activated
this method is called when the user selects the selection
returns the method to execute
adds the current area to the editor
save the state of the given memento
returns the list of editors in the diagram
checks if the given view id is still open
sets the location of the perspective to the given location
returns true if the given code code is contained in the
adds a new wizard shortcut to the navigation manager
adds a new shortcut perspective to this perspective
sets the perspective to the given code code
open the window
finds the editor for the given input
adds a shortcut shortcut to the view
adds a listener for the page
notifies the listener that the specified action has been signaled
fires a toggle activated event
notifies all listeners that a page has been closed
fires a wizard page
removes a listener from the list of listeners
this method creates a page layout
returns the root container
creates the parent composite
disposes the parent object
returns the parent control
returns the display
this method is called when the window is created
returns the number of editors
creates the view for the given view
returns the active fast view
notify the window that the window has been opened
returns true if the editor is needed for saving
removes the given reference from the list of views
returns true if the given part is part of the
this method is called when the window shell is closing
returns the trim for the given reference
sets the selection state of the given view icon
notify the window that the window has been closed
closes the current workbench window
restore the view stacks
sets the new wizard action ids
activate the perspective
activate the perspective
notifies all listeners that the page has been activated
sets the perspective to the perspective of the perspective
sets the visibility of the stack
normalize the ratio of the
sets the
sets the list of visible part ids
notifies all listeners that a page has been closed
returns the top level stack frame for the given view
sets the show view action ids
enables disables the update of the
notifies all listeners that the given page has been opened
the animation for the given sprite
returns the animation
shows the editor area
this method is called by the developer to add a new part
closes all open editors
saves all the to the given file
this method is called by the view to handle the method of
shows the editor area
returns the string representation of the specified key
returns the rank of the given modifier
copy the selected element
copies the binding element into the input object
removes the selected element from the list
removes the given placeholder from the container
returns the action bars
sets the editor and display the editor
sets the conflicts
makes the active active active
returns the active page
returns the string representation of the given key
verify that the listener is fired when the user presses the ctrl
makes the active editor editor
returns the page composite
returns the menu manager associated with this menu
returns the for the given view id
defer the defer to the defer method to defer the
saves the bindings to the given binding
this method is called when the filter is being used in the
toggle the fast view of the view
returns the layout
sets the old part ref
updates the status line of the current status of the current status
gets the shell activated attribute of the object
returns the status line manager
check if the window is active
close the assist assist shell
returns true if the given code code is a code
returns the matching the given key
closes the given editor
increment the current state of the sequence
returns true if the given component is moveable
returns true if the given sequence is partial match
returns true if the given key is
this method is called by the framework to provide the layout of
closes the given ieditor
restores the part of the given part
sets the state of the given state
adds a listener to the list of changes to the change
removes the specified change listener from the list
close the perspective
adds the input editor to the input editor
adds the given item to the list of items
refreshes the list of items in the history
removes an item from the list
removes the given input from the list of items
restore the parts
restore the state of the given memento
saves the state of the given memento
returns the descriptor of this
closes the dialog
returns true if the entity is restored
returns the name of the input
returns the tool tip text for this property
returns true if the input is a valid
returns the id of the persistable
returns true if this object can save the current value
all in the
sets the editor area on the
this method is called to activate a activation
opens a page with the specified page
creates the composite composite
returns the desired system id
initializes the delegate
returns true if the delegate is ok to create delegate
enables disables the enablement of the enablement of the enablement
sets the for the help system
this method is invoked to indicate the selection
this method is called when the selection changes
this method is called when the user selects a new one
frees up resources associated with this instance
returns the action id for the override id
returns the
dispose the delegate
dispose the resources
disposes the canvas
returns the help listener
returns the help support for the help
adds a data object to the map
adds a new tab to the shell
sets the help menu
collects the view of the part of the given part of the
sets the help control
this method is called by the framework to configure the shell
sets the given control
sets the help menu
sets the menu for the given menu
sets the help to the given context
sets the given menu item
installs the given part on the site
creates a help listener for the given command
open the window
save the filter state to the given idialog settings
this method will be called by the digester to set the default
this method is called when the user selects the default defaults
detaches the given code code from the view
returns true if the key is contained in the given color
disposes this component
this method is called when the is done
returns the category definitions
returns the color definitions
returns the defaults to default
returns the data map
returns the font definitions
reads the category from the given configuration element
attaches a perspective to this perspective
disposes the theme
clears the cache
returns the color value for the given element
returns the default theme font registry
returns the registry theme registry
clears the cache and clears the cache
returns true if the given font key is not found in the
returns the value of the code platform specific platform specific
returns the value of the given font element
checks the value of the element
this method is used to extract the theme from the configuration
reads themes from the registry
sets the theme registry
returns a set view of the keys contained in this set
returns the value to which this map maps the specified key
determines if the given definition is the default
sets the style of the tab
sets the tab position
returns the tool bar manager
creates a button
disposes the cache
this method is called when the selection changes
creates the color control
called when the state of the button changes
called when the close button is pressed
disposes the toolkit
inserts a tab at the given index
moves the selected part to the specified index
returns the number of folders in this folder
returns the location of the menu frame
dispose the perspective
returns the location of the popup menu
returns the location of the menu location in the system
removes selected items from the viewer
this method is called when the user selects the active
sets the target control
returns true if the editor is disposed
returns true if the given point is on the border
sets the visibility of the component
this method is called when the table model changes
computes the preferred size of the given
this method is called when the minimum value is visible
sets the control size
sets the matcher string for the given pattern
initializes the tab
edits the selected action
dispose of the ui
selects the first match in the table
returns a perspective object from the perspective
returns the composite control
moves the tab at the specified index
show the minimum folder in the list
sets the top right of the top of the stack
clears the
sets the top left side of the view
closes the given tab
resize the frame
returns the color for the specified definition
sets the min max
disposes the resources associated with this document
adds a listener to the list of listeners
sets the minimum number of characters in the pane
adds a listener to the selection
removes a listener from the list of listeners
removes a listener from the list of listeners
removes all listeners
returns the value of the color
notifies all listeners that the selection has been selected
disposes the toolkit
sets the part id
saves all pages in the current page
returns the part id
returns the adapter for the specified adapter
connects this manager to the specified manager
disconnects the server
sets the elements of the list
returns the elements of the current
returns the color value for the specified color
returns a string representation of this object
notify the listeners of a change in the panel
shutdown the application
start the server
notify listeners that the tab has been closed
sets the state of the tab
creates the title bar
saves the given memento to the given memento
this method is called by the framework to perform the fast
adds a listener to the listener list
notify listeners of a new event
notifies all listeners that a part of this object has been activated
this method is called when the dock panel is selected
notifies all listeners that a is selected
notifies all listeners that a closed part of this
fires a part deactivated
notifies all listeners that a has been opened
notifies all listeners that a subsection is hidden
notifies all listeners that a part of this event is visible
fires an input part changed event
removes a listener from the list of listeners
returns the drag handle
removes the listener from the control listeners
returns the active editor reference
returns the image that is displayed on the current image
returns the reference to the view reference
sets the fast flag
sets the focus on the active component
clears the list of all the
removes a set of action set
returns true if the given entity registrations is already deployed
returns true if the view is fast
returns true if the menu view has a view menu
returns the product name
returns the application name
returns the text about the about text
update the titles
adds a new perspective item to the list
removes the specified perspective item from the list of perspective
make the perspective item visible
arrange for the toolbar and the buttons
disposes the session
returns the undo context
returns the history of the undo history
adds a listener to the listener list
notify listeners of a new event
fires a activated event to all registered listeners
fires a to the top of the event
notifies all listeners that a part of this event has been closed
fires a deactivated deactivated event
notifies all registered listeners that a part has been opened
removes a listener from the list of listeners
sets the window to the given value
returns the window
returns the active perspective
returns the extension point filter
returns the area of the given area
adds all classes in the given list to the list of classes
sets the minimized state
returns the test presentation
remove the lookup object from the database
returns the insert before insert area for the given id
this is used to track the given track
lookup the cache adapter for the given class
returns the wizard descriptor
hide the area of the given area
returns the plugin contribution
looks up the cache for the given class
sets the minimum number of characters in the tab
lookup the object for the given class
returns a collection of all the contributors
this method is called when the dock panel is resized
dock the given dock to the given
adds a list of contributors to the given class
runs the action
checks whether the given object is a known chapter
initializes the menu
runs the action
returns the editor manager
updates the enabled state of the menu item
sets the visibility of the panel
sets whether the user can enable or disable the enabled
sets the visibility of the view
apply the dialog to the given control
returns the delegate that delegate delegate to the delegate
returns true if the toolbar children are already created
returns the perspective to be used for presentation
remove a contributor
saves the given code code to the code code
initializes the listeners
unregisters the given code
returns the list of contributors
this method is called when the activity is added to the activity
removes all the listeners from the listeners
returns the identifier for the activity
dispose the identifier
disposes the toolkit
returns a list of resources for a given class
invalidates the parent of the parent
returns the editor presentation
this method is called by the subclass to unregister a
activates the component
computes the order of the class
deactivates the given state
disposes the navigation history
returns the editor contributor
returns the type of the editor
returns the extension contributor
returns the reference number of the reference
dispose the resources associated with this component
reports the of the
returns true if the tool bar is visible
returns the editor for the given ieditor input
called by the editor when the part changes
removes the reference count
sets the active state of the menu
sets the editor for the editor
sets the enabled disabled state of the
calculates the text of the given text
sets the extension contributor contributor
sets the visibility of the toolbar
returns the expression that is used to edit the expression
refresh the category
creates the image registry
returns the action set registry for this registry
returns the label of the page
resets the color to the specified color
returns the perspective that is currently active
creates a new shell with the given control
returns the registry for the registry
returns the action for the given action
returns the part of the workbench part
returns the target list of the given target
returns the working set manager
this method initializes working set registry
returns the registry
returns an initiliazed instance of operation support component
returns the preference manager for this registry
sets the value of the registry color
returns the shared images
this method will be called by the shell listener
dispose the shell
returns the theme registry
initializes the default services
disposes the toolkit
returns the view registry
returns the list of visible
returns the currently selected part of the pane
attaches a part to the desktop pane
controls the color of the controls to be used for the controls
load the image from the given location
updates the menu bars
initializes the default preference store
returns true if this object is
enables the controls
returns the decorator manager
brings up the content for this part to the given one
show the perspective in the perspective
sets the configuration element
returns true if the deferred should be updated
sets the control to the control area
returns the default orientation for the default orientation
sets the id of the
sets the name of the registered extension
checks the current user and display the text in the dialog
sorts the given part of the selected object
returns the orientation property
collects the view of the view
returns a string representation of this object
returns the line of the command line
collects the view of the part of the given part of the
creates the progress indicator for the given code shell code
returns the application name
returns the product name
updates the controls for the specified color
returns the product info
returns a new wizard registry
detaches the given code part code from the desktop pane
updates the current font
returns the registry
adds a new part to the model
fires the window opened event
returns the wizard export wizard registry
creates the preference page
returns the workbench window
returns the location of the current data location
restore the selected element
sets the location of the perspective to the given perspective
notifies all registered listeners that the window has been closed
saves the selected tree in the tree
find a part of the part
shows the perspective and sets the current perspective
returns the default width
restore the expanded state of the tree
returns the
updates the perspective
notifies all registered listeners that the window has been activated
finds the element with the given string
returns true if the given placeholder with the given id is defined
returns the perspective
fires the window deactivated
dispose the view
returns true if the given entity is in the given primary class
returns the main layout
sets the font to display in the current font
this method is called by the drag listener to set up the
returns true if the is
fills the specified menu bars
sets initial states of the state
updates the activity states
sets the current frame
restores the default values
toggles the enablement of the tree enablement
show the details of the dialog
returns the advisor for the advisor
returns the hints
returns true if the given perspective part of the perspective change affects
fill the action bars
creates a new advisor
returns the filter that is used to filter the extension
returns an image descriptor for the given id
initializes the bounds of the dialog
closes the given window
returns true if the pattern matches the given match
this method is called by the log to log
this method initializes activity image registry registry
this method initializes category image binding registry
dispose of stuff
zooms in the given
returns the point for the product
returns the activity definition object for the given id
returns the activity support for the activity
forces the to be
returns the initial size of the window
calculates the text of the given text
update the bounds of the view
returns true if the editor area is visible
returns the cool manager of the application
returns the menu manager
returns the tool bar manager
resets the bounds of the map bounds
factory method to create a new contribution
returns the value of the attribute as a string
returns the element id of the element
adds a new menu element to the list of menus
returns true if the perspective is fast
adds a new action descriptor to the list of actions
returns the namespace of the element
returns the updater for the current namespace
returns the namespace of the element
creates a new working set page
returns the icon for this plugin
returns the name of the class that this is associated with
creates a new working set element adapter adapter
returns true if the given code code is a code
creates a new working set updater
returns true if the page is editable
returns true if the entry supports regular expression
adds a new group to the group
returns the description of the attribute
dispose the actions
adds a working set descriptor to the working set
returns the default working set page
returns the working set descriptor for the given page
returns true if the descriptor has a page set with the same
returns the working set page with the given page id
load the registry
returns true if the given code code is a
returns the accelerator for this component
adds a category to the list
sets the visibility of the fast view
adds a new code view code to the code code
adds a sticky view to the
returns the action set for the extension point
adds the action set to the context
find a object for the given id
removes the action set from the context
finds a category by its id
adds an association to the association
finds the category with the given id
find an action set for a given id
returns true if the perspective is a fixed layout
returns the misc category
returns the value of fast view bar visible
reads the element from the given element
saves the state of the given file
reads the working set from the given working set
reads the element from the xml element
registers the given property page to the registry
load the registry from the registry
returns a collection of the top level nodes
restores the state of the perspective
adds a new perspective to the current perspective
reverts the current perspective to the given list of perspectives
creates the wizard collection
delete a list of perspectives
sets the wizard element
deletes the perspective from the perspective
adds a listener to the list of reorder of listeners
deletes the perspective from the perspective
returns true if the editor is needed to save the current state
finish the categories
this method is called when the user finishes the primary key
unregisters the listeners
this method is called when the wizard is finished
load the settings from the database
returns the category string for the given configuration
prune the content of the
reads the element from the xml element
reads the from the
load the predefined properties from the registry
returns true if the wizard is ready to be read
returns the wizard element
sets the contents of the layout data
deletes the custom definition
verifies that the default perspective is not available
find a wizard element by id
reads the category from the given element
returns true if the component is fixed
this method is called by the constructors to initialize the
reads the view from the given element
reads all views from the given view
returns the category of the
adds a editor to the editor
clones the file
returns true if the current perspective is
compares two lists
returns the original id of the original recurring event
disposes the toolkit
returns true if the registry definition is defined
returns true if the element has the default value
returns true if the plugin is predefined
returns the fast view of the view
removes a editor
sets the default editor
sets the list of editors to display in the diagram
sets the deleted diagram list
removes the custom property definition
save the given memento
returns true if the editor is declared in the given editor
sets the default editors
reads the from the given url
adds an element to the list
returns the label of the attribute
activate the perspective
adds the editors editors to the registry
returns the path to the parent
returns the perspective for this perspective
returns the path to the root of the path
returns true if the element has an element
this method is called by the framework to initialize the preference
returns true if the element has elements
extends the layout for the given layout
returns true if the tag is included in the given tag
clears the current element
process the given element
returns the class name of the component
returns the label of the keyword label
adds external editors to the editors map
creates a new code code instance
returns true if the element is a shortcut perspective
this method is called when the user wants to show a
returns true if the preference is visible
sets the visibility of the
shortcut to show the view shortcut
returns the file name of the file
returns the action presentation
returns true if the element is a shortcut
returns the image descriptor for the image
sets the tags of the include only tag
returns the set of menu ids
initializes the default services
deactivates the active editor
verifies that the image is open
returns the contributor contributor
returns the contributor contributor contributor
returns the currently active part
returns the image filename
returns the context for the given input
returns the label of the component
returns the launcher
fires property change event to all registered listeners
returns the namespace uri of the plugin
returns the factory that is associated with this factory
adds the actions to the actions
adds the static actions to the builder
this method is called when the editor is reused
returns the open mode of the editor
sets the open mode
handles the event when the user clicks on the dimmer
returns a string representation of this object
disposes the toolkit
returns the type for the given file
creates the page control
returns the default image descriptor
returns the destination for the destination
creates the cool bar
disposes the dialog
returns the wizard element
sets the primary
sets the wizard elements
register a new
registers the given element in the list
registers the given in the
creates and returns a new instance of tool bar
returns true if the default browser is enabled
returns the mapping for the given file extension
returns the desired configuration element in the given array
sets the desired browser support id
disposes the toolkit
returns the initial hash map
creates the status line manager
sets the active part of the active part
adds a child layout
creates the status line
sets the message
sets the state of the state machine
shows the minimum and displays the page
creates the options group
returns the current state of the current go into the current page
adds the page book to the page
creates the tab part control
returns the folder
called when the page is changed
removes the page book book from the page
updates the fast view of the view
synchronizes the current page and updates the page
this method is called by the page to synchronize the page
initializes the default services
this method is called when the user is selected
sets the tree and updates the tree
this function is shutdowns from associations
returns the index of the given editor
adds a to the trim
initializes the command resolver
returns the mapping for the given mapping
disposes the listener
disposes of the control
returns the site
handle the destination browse button
rebuilds the editor map
dispose the resources
fires a property change event to all registered listeners
returns the configuration element
returns the default image
rebuilds the internal map of editors
gets the default title
sets the site site
saves the state of the given memento
initializes the application colors
sets the title image
sets the title of the panel
sets the menu to a new menu
this method is called by the framework to set the status of
add the actions to the toolbar
contribute to the specified cool bar
returns the action bars
adds a listener to the
initializes the contributor
this method is called by the application
sets the active editor
sets the file editor mappings
notifies this listener that the selection has changed
called when the user selects a post selection event
shows the given status in the database
creates a page with the given part
sorts editors editors editors editors editors editors editors editors editors editors editors
initializes the page
creates navigation buttons
creates the editor for the page
sets the tree
puts a new default mapping in the default map
disposes the contributor
returns true if the page contains the given page
sets the input to the input input
returns the adapter for the specified key
puts a mapping into the map
returns the adapter for the given adapter
returns the current part of the
returns the mapping associated with the specified key
returns the current page
toggle the visibility of the toolbar
returns the page site for the given page
returns the current page index
returns the extension id
returns the default page
returns the current transfer mode
initializes the default services
disposes the toolkit
returns the action bars
returns the book page
adds a cell editor to the control
returns the page rec part of the given part
disposes the action
returns the page rec for the given page
disposes the toolkit
fires a property change event to all registered listeners
removes the given cell editor
sets the action to be used for the copy action
this method is called when the user selects a new page
sets the action to be used for the cut action
invoked when the part is to the top part
sets the delete action
removes the editor from the given mapping
called when a part of the is closed
sets the action to be used for the
creates a new container
sets the site site
called by the application to notify the listener that the
checks if the site is site
sets the action to be used for the paste action
sets the title
sets the redo action
sets the title image
sets the tool tip text
sets the selected action
refreshes global action handlers
show the busy
sets the undo action
sets the part name
updates the actions enable state
sets the content description
shows the bootstrap part of the part
returns the selection provider
adapts the preferred to the
parse the options from the given options
returns the package tracker
runs the action
sets the selection
returns the context
sets the context action context
fills the context menu with the correct context menu
returns true if the given editor is pinned
this method is called when the menu bars state is added
updates the action bars
this method initializes drop down menu manager
runs the action
sets the context
adds actions to the editors working set
sets the pruning history
updates the status of the text
removes the previous mru list of actions
adds the items to the list
sets the working set of working set
adds a list of navigation actions to the list
returns the perspective to the perspective
fire a change event to the given property change
returns the show active flag
saves the state of the given memento
returns the action for the dialog
returns true if the given pin affects the active zoom level
this method is called when the user selects the action
the action event
disposes the selection provider
returns true if the given category is already registered
runs the action
returns the current selection
returns the selected provider
returns the structured selection
this method is invoked when the selection in the selection changes
sets the visibility of the active state
invoked when the selection in the selection changes
invoked when the part is to the top part
creates the menu
clears the cache
returns the structured selection
this method is invoked to the base class
disposes the toolkit
propagates the change to the text field
sets the action handler for the given action
sets the text
adds a new accelerator to the current text
removes a fast view from the perspective
returns true if the user can run the current run
opens a new perspective setting
runs the
dispose of the
runs the action
enables disables the accelerator
sets the page input for the input
runs the action
sets whether the user should be enabled
initialize the
this method is called when a new part is activated
this method is called when a part of this part is closed
this method is invoked to handle the deactivated
adapts the behavior of the action to the propagate method
this method is used to run the
this method is invoked when an event is fired
returns the handler for the action handler
removes a part listener from the list of listeners
removes a part listener from the list of listeners
this method is called when the user clicks the close button
returns true if the given code selection code is in the current
disposes the shell
returns the progress monitor for this task
returns true if the given code selection code is provided for the
returns the given code to code
verify that the given element is already in the list
verify the number of
enables or disables the component
returns the content assist command adapter
sets the background color
returns the foreground color
sets the message rectangle
sets the progress bar
returns the content of the current page
updates the splash screen
returns true if the current user is starting the
returns the activity manager
returns true if the activity has been defined
returns true if the activity has stopped
returns the activity
returns true if the default enabled state of the default enabled
returns true if the activity has changed
returns true if the event pattern bindings has been changed
creates the activity preference for the given activity
returns the identifier
returns true if the activity ids have changed
sets the activity button state
returns true if the category has changed
returns true if the given code activity code is allowed to compute
creates the image registry for the current image
returns the image registry for this image
initializes the default preference store
initializes the default plugin preferences
initialize the image registry
load the preference store
refresh the plugin actions
saves the dialog settings to the file system
saves the preference store
this method is called by framework when the application is started
shuts down the application
update the category check state
stops the plugin manager
clears the content of the model
returns true if the given category is locked
resets the perspective to the default perspective
returns true if the given object is in the list of pages
returns the initial selection
saves all editors to the given
saves the given editor
saves the perspective to the perspective
saves the perspective in the perspective to the given perspective
registers the given action with the given action id
returns the handler that is used to handle error handler
sets the visible area visible
returns true if the given object is applicable to this filter
this method is called when the load of the servlet lifecycle method
refresh the selection
returns the part service
returns the default perspective id
resets the tool bar layout
returns the default page input
sets the working set of the working set
gets the main preference page id
returns the timestamp of the last modification
saves the state of the tree
returns a hash code for this object
returns the selected status
returns the comparator for the given viewer
show a view
returns the selected one
returns the context manager
sets the size of the trim
returns the size of the trim
calculates the trim of the given trim
returns code true code if the receiver is a vertical
hide the view
returns the modifiers of the control
sets the modifiers of the control
toggles the active perspective
sets the spacing between the left and right
sets the margins
sets the size of the specified area
sets the provider
sets the intro
updates the tab list view
returns true if the event is running
returns the presentation id of the
cancels the current task
update the job info
registers the registry registry registry registry
returns the main title of the task
check if job is running
refreshes the tree
removes a job info from the list of listeners
adds a job info to the list of listeners
returns true if the job is currently being edited
selects the previous page in the tree
selects the next item in the tree
sets the focus to the component
refreshes the tree
updates the visible items in the list
returns true if the given element is finished
moves the perspective in the perspective to the given perspective
adds a perspective to the perspective
returns an iterator over the list of opened elements
returns the action with the given id
saves the enabled state of the preference to the current state
removes a perspective from the set of active perspective
returns the image descriptor for the image
swap the existing perspective with the given perspective
returns true if the list is empty
saves the items in the given array of
returns the active perspective
prompts the user to show the file dialog
returns true if the item has items
returns the current active perspective
creates the content table
returns the current selection
returns the number of opened elements in this list
sets the active perspective
finds the open
returns true if the given object is valid for the given object
updates the button availability
adds a new category to the tree
saves the history in the given memento
adds a new category to the given category
tests the invariants
sets the content and label provider
creates the dialog area
creates the theme description text
disposes the resources associated with this component
creates a new identifier for the given id
removes all the items from the model
sets the active part of the model
returns the drop target for the given control
updates the current page
creates the initial action set for the given set of actions
disposes the toolkit
returns true if the view is showing the
returns the pane that is currently selected
updates the bounds of the view
updates the view
updates the image
this method is called when the user is opened
returns an image for the given overlay icon
creates the sash
save the given memento
returns the context for the current context
returns the full path to the full snapshot of the current context
returns the perspective array for the current perspective
returns the list of visible in the document
returns the known elements
closes all editors
sets the visibility of the pins
returns true if the delegate is ok to create delegate
disposes the delegate
configures the shell
sets the style of the tab style
sets the tab position
the busy tree
save the filter settings
disposes the toolkit
sets the background color of the selected tab
updates the state of the active page
adds a new perspective item to the list
returns true if the application is capable of tracking tracking
returns the composite composite
this method is called by the application to dispose the resources
this method is called by the framework to set up the
this method initializes perspective registry
disposes the toolkit
this method initializes site progress service
detaches the given code part code from the desktop pane
returns true if the given string matches the pattern
update the menu bars
adds a new code view code to the code code
finds the object for the given id
reads the element from the given element
returns the top level nodes level
finish the primary key
find a wizard element by id
returns true if the given part is visible
returns true if the editor is declared in the editor
test the additions
opens the web browser error dialog
initializes the command resolver
disposes the editor
disposes the contributor
sets the context
returns the adapter for the specified adapter
stops the server
stops the thread
disable the service
returns the tool configurator configurator
stops the bundle
sets the session
returns the current session
returns the current step number
close the current file
configures the shell
returns the initial size of the frame
returns the table
cancel pressed
this method is called when the ok button is pressed
returns the map of users that are not used in the map
sets the background color
assigns a control to a specific cell
refresh the display
returns the control that is currently connected to the specified cell
removes the control from the given cell
returns the hash code of the object
returns a string representation of the object
sets the editor
disposes the toolkit
disposes the server
the action has been activated
activates the button
returns a new instance of the
passing the focus request to the viewers control
returns the server side server
starts the server
returns the map of users
stops the server
disposes the toolkit
returns the presence manager
returns the default properties
returns the authentication mode
sends a service request to the server
checks the user for the user specified user name
sends a service message to the server
sends a serializable object to the given object
sends a serializable object to a given object
called when the session has ended
called when the session has been started
called when a step is finished
handles the connection event
returns the number of clients connected to the client
returns the user specified by the user id
returns a list of all users in the table
adds a listener to the list of listeners
notify listeners that a client is connected to the client
notify listeners that the client has disconnected
toggle the visibility of the toolbar
returns the connection time
sets the time of the connection to the server
adds a listener to the session
returns the theme parameters
removes a listener from the session
returns the application directory path
returns the path to the executable
returns the path to the executable
returns a url for a directory
pause the animation
handle the next record action
starts the server
stops the thread
creates a new connection to the wizard
open the connection to the open connection
returns true if the wizard is in the appropriate window
this method is called to go to the given value
starts the tool
returns the nickname of the user
sets the
returns the text of the current user
returns the nickname of the user
sets the nickname
returns the password entered in the text field
sets the authentication mode
creates a new connection to the current page
create basic authentication page
creates a new nickname
create standard standard authentication page
creates a new summary page
called by the to set the of the
returns the url to the server to use
sets the tab group visible
returns the argument of the server server
returns the page description
appends a message to the list of the text
this method is called whenever the message is received
sends a message to the server
send a message to a given message
sets the text
returns the gap between the image and the image
create a new user instance
sets the gap between the icon and the icon
sets the text placement for the placement
sets the alignment of the text
returns the property
returns true if the connection is connected to the server
sets the left margin
sets the right margin
creates the advanced options toggle area
sets the top margin
fill the status line with the new status line
sets the bottom margin
send a chat message to the chat room
open the dialog for opening the current server
called when the dialog is done
returns the shared core object
returns the last step number
appends a message to the list of the text
send a message to the list of
sets the background color of the cell
this method is called when the ok button is pressed
configures the shell
cancel pressed
this method is called when the ok button is pressed
returns the user name for the specified row
performs the actual action
the client to a
removes the columns group columns
loads the images of the specified file
sets the radio buttons enabled state
sets the table
updates the button groups
returns the row of the specified table
adds a listener to the list of listeners
starts the server
stops the server and restarts the server
checks the user for the given user name and user name
disposes the toolkit
returns the xml representation of this object
returns the tail of the given handler
handles the connection event
handle the request event that a user is banned
this method is called when the application is loaded
creates the buttons
this method is called by the framework to open the dialog
returns the list of tools
adds a new tool configuration
sets the view
displays the given file as a code rtf file code
activates the continue button
updates the highlighter
sets the active view
sets the focus to the component
returns the theme parameters
returns the theme parameters
sets the user name
clears all the text fields
sets the last name of the student
sets the first name of the student
returns the result of the given type
sets the password to be used for the user
sets the default group
select the student
disables the student description
enables the student description
called when the session has ended
returns the background color of the view
returns the background color of the
close the window shell window
called when the session has been started
this method is called when the window opens window
opens a directory with the current directory
writes the given class name to the file
reads the current from xml file
sets the class name
sets the school type
gets the value of the property
sets the students list
activates the specified blocked button
parse the xml document
returns the default group
sets the default group
returns a string representation of this object
creates a new summary page
called when the animation ended
starts the
prints the chat message
send a message to the server
updates the last changed time of the last modified date
send a message to a specific message
sends a message to the server
send a message to the server
send a message to a specific destination
send a message to the server
creates the content of the form
tests if the given text is valid
creates the nickname for the given code code
register a server with the server
sets the table row
this method is used to display the specified
close the chat window
called when the step has started
creates a new instance of
creates a new empty
creates the menubar
creates and returns a panel containing the panel
removes the index from the list
opens the server
invoked when an item has been selected or deselected by the user
sets the paths of the current path
this method is called when the caret position changes
p encodes a regular expression into a regular expression
creates the html document frame
deletes the given directory from the directory
ensures that the messages are visible
shows the exception
creates a new
creates and returns the tree model
creates a new child node
creates a new
print error message
trims the string to be a file
sets the new score of the given row
display the scores of the table
clears the table
sets the value at the specified row
sets the value at the specified row and sends a
this method initializes this
this method initializes j content pane
this method initializes j button home
this method initializes this
this method initializes this
this method initializes j button cancel random reservation
this method initializes j check box
this method initializes j text field reservation
this method initializes j button home
this method initializes j text area cancel reason
this method initializes this
this method initializes j radio button
this method initializes j radio button1
this method initializes j radio button2
this method initializes j text field name
this method initializes j text field
this method initializes j check box
this method initializes j text field email
this method initializes j button cancel
this method initializes this
this method initializes j button home
this method initializes j text field details
gets the value of the request property
sets the value of the request property
create an instance of
gets the value of the response property
sets the value of the response property
returns the ci d
sets the value of the ci property
gets the q rate of the
gets the value of the credit score property
sets the value of the q rate property
sets the value of the credit score property
returns the length of the history history
sets the value of the history length property
returns the of the prime
sets the value of the prime rate property
create an instance of
create an instance of
create an instance of
returns the loan id
sets the value of the request id property
returns the loan amount
sets the value of the amount property
returns the duration of the loan
sets the value of the duration property
gets the value of the nro cuenta property
sets the value of the nro cuenta property
returns the id of the bank
sets the value of the bank id property
sets the value of the rate property
create an instance of
gets the loan response
sets the value of the response property
returns the loan request
sets the value of the request property
gets the value of the info request property
sets the value of the info request property
gets the value of the alert duration property
sets the value of the duration property
sets the value of the cost property
gets the value of the p rate property
sets the value of the mail property
sets the value of the p rate property
gets the value of the cuenta property
sets the value of the cuenta property
create an instance of
gets the value of the info response property
create an instance of
sets the value of the info response property
create an instance of
adds a message to the list of messages
adds a message to the list of messages
adds a new message to the session
resolves the given view name and returns the appropriate
returns the diagnostic context for the request
creates a file
creates a file with the specified file
returns true if the last remaining file has been remaining
returns the file with the specified name
a file to a file
returns the crs
returns true if the crs is supported
returns the value of the geometry geometry property
returns the shapefile data store
creates a temporary directory
creates a new instance of polygon symbolizer
returns fill color
returns the number of classes in the current thread
sets the number of classes to be used for the current
sets the collection of the
gets the species
sets the value of the child records
returns true if the given survey is eligible for the current
gets the accuracy in meters meters
gets the value of the transaction property
returns the name of the region
returns the boundary of the boundary
returns the date when the event was created
returns the last time the user has to be rebuilt
returns the time as a date
returns the last time as a date
gets the value of the first appearance property
gets the value of the last appearance property
gets the behaviour
gets the value of the property
returns true if the metadata is not duplicate
initializes the content of the portal
this method creates a new content object from the portal
creates a new folder
create a placemark with the specified name and location
create a new placemark with the specified name and location
marshal json to a jaxb object
writes the given output stream to the given output stream
returns a hash code for this object
sets the count of the query
sets the distinct query
sorts the given query into the database
sorts the given query in ascending order
checks if the string is empty
tests if the request is requesting the header
sets the property name for this property
creates a new attribute form instance
returns the parameter value for the specified parameter
creates a new
returns the file name of the file
returns the name of the file
returns the theme url for the theme
returns true if the content of the editor is able to edit
writes json json json json json json json json json json json
update the location of the location with the given location
creates a new location
registers a persistent reference
remove a persistent reference
checks if the entity is registered
returns the message associated with the given key or null if none
returns a localized message
returns true if the user access the authorized access to the user
returns the value of the specified key
gets the value of the add or update attribute property
creates a mock mock servlet request
removes the given from the list of
returns true if the has a
load the items from the properties file
save the properties to the database
returns true if the record exists in the database
check if the file format is valid
returns the for the given item
convert a to a
normalizes the given string
returns true if the item is available
returns true if the item is available
returns true if the item is available
returns the item id for the specified item
returns an iterator over the specifications of the specified item
returns an iterator over the of the specified data
returns true if the item is deleted
creates a new
calculate the minimum frequency of the given node
checks if the given file is in the given sudoku
creates a new instance of the node
checks if the given constructor is possible to intercept
returns true if the given code definition code is a legal
called by the method to handle the method
generate the key for the map key
add a row to the table
creates the invocation context for the given invocation
adds a bean to the list of beans
initialize the phase of the phase
checks if the given artifact is in the pom file
test that the filter matchers filter is correctly parsed
test that the filter with not match filter
the
a
set the endpoint address for the specified port name
publish a topic to the server
returns the message id of the message
subscribe to a topic
returns the route id for a given topic
sends a request to a given port
unsubscribe from the route
publish a topic to the given topic
subscribe to a topic
unsubscribe from route
publish a topic to the server
removes a event handler from the
disconnect from the server
unsubscribe from route
creates a journal object for the current
creates a new delete route command
check if the connection is connected to the server
the
returns true if the bus is a main bus
this method is called when the is
returns true if the bus is a main bus
returns the cast expression
raises an object to cast a method to
resets the block size
returns a set of all the intervals that are currently being used
returns the mapped base
returns true if the given point intersect the intersection
tests if the given point intersect the given coordinates
returns true if the interval intersects the intersection interval
this method is called when the game is paused
starts the timer
this method is called when the user selects the
this method is called by the caller to call the caller
prints the target
this method is called by the server to set the current tick
starts the process
called by the document
start the document
returns the document value
delegates to the wrapped code error code method
delegates to the underlying code warning handler code
receive an object for locating the origin of sax document events
returns the number of children
returns the child composite at the specified index
test of push fail method of class
test of peek method of class gst
test of pop method of class org
test of method of class org
returns the fetched content
returns the element
notify the timeout of a timeout
adds the map panel to the panel
creates and returns a new chart
test that the default constructor is used to set the default
test the default localhost localhost
flush the buffer to the current buffer
clears the phrases list of phrases
sets the number of results to be displayed
handle the message received event
inserts the phrase into the database
sets the rich text widget
checks if the database is enabled
start the main loop
builds the panel for the control panel
adds a listener to the change
returns the html code for this area
the calculation of the calculation of the calculation
returns the name of the current user
stops the calculation of the calculation
the notes from the notes
sets the text to be displayed in the text area
sets the name of the user
sets the options options
capture the specified capture resource
sets the version of the version
notify listeners that the name of the listener has changed
sends a request to the server
sets the location of the location provider
returns the timestamp of the last modification
sends a request to the server
creates a blob builder
sends a request to the server
creates a canvas for the current game
update the server
opens a file and open the file
creates a new desktop
creates a new
creates a new http request
creates a local server
opens a file and open the file list
returns a new worker pool
this method is used to create the
the server
test
test method for
test method for
test of get name method of class edu
tests get required cookie
test method for
test for get manifest url
test of capture file method of class
this method is called when the user selects the
test for is enabled
creates a new managed store with the correct name
this method is called when the user selects the
this method is called when the user selects the
this method is called by the server to create a new
create a new managed store with string
this method is called when the user selects the
tests the get captured file name method
test of get name method of class org
create a resource store
test creating a worker with null
test method for
this method is called when the user selects the
test method for
create a resource store
this method is called when the user selects the
this method is called when the user selects the
tests that the managed resource store factory is used to create a
test that the database is empty
this method is called when the user selects the
test close
test that the database is null
tests the resource store resource store
tests that the managed resource store factory is used to create a
test that the database is empty
test of set enabled method of class saga
checks that the database is with the database
test open store
test for the get field as byte
create a blob builder
tests the functionality of creating a canvas
test for creating database
test of close method of class database
test open store
create a local server server
test for code get field as char
test method for
create a new code pool code with the same class
tests remove resource store string
test for code get build info code method here
test method for
test method for
test for date field
test method for
test for code remove resource store string code
test for code permission permission code
test for code remove store string code method
test for the get field as double double
test for code remove store string code method
test for the get field as float
test for the get field as int
test for the get field as long
test for the get field as short
test for the get field as string
test for the get field count method
test for the get field name
test the next and row
this method is called when the server is destroyed
create a new code worker code with the same name
create a new worker with empty string
clears the search library
clears the search type
sets the type restrictions for this object
sets the search library
sets the type of search
returns the published date
returns the latitude of the latitude
returns the estimated total number of results in the result set
returns the longitude in the
clears the
clears the type of the file
clears the image size
sets the
sets the type of the file
sets the size of the image
sets the type of the image
sets the value of the code code property
returns the duration of the duration
sets the result order
returns the published date as a string
returns the rating of the current user
returns the thumbnail of the thumbnail
returns the value of the code rating code property
returns the number of views in the view
adds a new search result
clears the results
adds a new search directive
adds a new search
sets the draw mode
sets the keep label
sets the keep label
returns the search control
sets the timeout interval
executes the query
sets the address lookup mode
sets the center point
sets the center point
returns the cursor for this cursor
sets the page to the specified page
removes the given search results from the results list
execute the query
removes a keep handler
sets the query addition
sets the size of the result set size
sets the user defined label for this user
test of get results method of class search result
sets the api access key for the given api key
sets the application name for the application
sets a query parameter
sets a request header with the specified name and value
sets the base url for the base url
sets the scope of the given scope
login to the server
initialize the server
expands the page
tests the send message method
test the send message method
tests the send message method
test sending a message object and returns a new
tests the send message string method
fires a selection event
returns the
returns the
creates the panel
creates the map from the map
creates the panel
test of geo geo tools method of class org
tests the pie chart chart
creates the chart
load the api
creates the panel
creates the for the
check that options are supported by the application
this method is called when the user selects the options
tests that the custom combo box is suitable for displaying
creates the visualization data
test the method options
this method sets the of the gui
creates the chart
creates the panel
tests the pie chart chart
checks that the error has been properly parsed
creates the for the
creates the chart
creates the language detection language button
inits the controls
creates the translation panel
populates the list boxes
called when a wrapper is
returns the content type of this content type
test
returns the build event listener
test that the language detection is supported by the
tests the translation of the translation
test of enable method of class
tests the functionality of the
test of translation option method of class
test the method for
this method initializes this
adds a listener to the end of the handler
adds a listener to the end of the list
adds a listener to the end of the handler
adds a listener to the end of the handler
adds a listener to the end of the handler
adds a listener to the end of the handler
adds a listener to the end of the handler
adds a listener to the end of the list
adds a listener to the end of the handler
adds a listener to the end of the map
adds a listener to the end of the handler
adds a listener to the end of the handler
adds a listener to the end of the handler
returns the map event map
removes the specified handler from the list of handlers
triggers the event
trigger the event
trigger the event
trigger the event
trigger the event
invokes the method on the specified timeout value
close the map
triggers the event on the specified lat lon point
triggers the event with the specified bounds
triggers the trigger
returns the point of the current peer
triggers the overlay
returns the selected tab
triggers the
trigger the specified event
returns true if the component is visible
trigger a new event
maximizes the window
trigger the event
opens the window
opens the window
returns the bounds of the default
returns the default center of the current node
returns the default span
returns true if the peer is visible
sets the default viewport to the default viewport
returns the visibility of the ground overlay visibility
returns true if the peer is hidden
show the current layer
returns the layer that is currently in the tile layer
sets the visibility of the tile
adds a click handler to the handler
restore the current state of the window
adds a polyline click handler to the list of polyline
add a new polygon click handler to the current action
selects the tab at the specified index
sets the maximize enabled state
adds a click marker handler to the marker handler
sets the visibility of the window
add a polygon mouse out handler
adds a polyline mouse out handler to the polyline
adds a polyline mouse over handler to this polyline
add a mouse drag handler
adds a polyline to the end of the polyline
close the handler
adds a polygon to the end of the list
adds the maximum content handler to the end of the list
attaches the content to the content widget
deletes the vertex at the specified index
returns the bounds of this code lat bounds code
returns the area of the area
creates the window close button
returns the length of the polyline
returns the bounds of the bounds of this polygon
initializes the window maximized click handler
returns the vertex at the specified index
returns the vertex at the specified index
initializes the handler maximized state
returns the number of vertices in the polygon
returns the number of vertices in the polygon
initializes the controller window restore button
inserts the vertex at the specified position in the graph
initializes the restore restore window restore restore window
returns true if the peer is visible
returns true if the component is visible
removes a polyline handler handler
removes a polygon that is being disposed
removes a polyline click handler handler
removes a polygon click handler
removes a traffic overlay overlay listener
sets the visibility of the fig
returns the widget that was selected
gets the latitude longitude
removes a polyline handler handler
returns the sender of the message
returns the source of the polyline
returns the copyright
returns the layer that this event belongs to
removes a polygon from the end of the line handler
returns the originator of the overlay
returns the current zoom level
returns the old level of the zoom level
returns the current polygon
returns the originator of the event
removes a polygon line from the polygon
returns the widget that was fired by this object
adds a new mouse up handler
returns the value of the code address code property
removes a polyline polyline mouse out handler
removes a polygon polygon handler
removes a polyline mouse handler handler
returns the overlay
returns true if the data has been
returns the type of this map
removes a polygon polygon handler
removes a polyline that is responsible for the end of the polyline
adds a marker to the end of the list
returns the copyright information
returns the earth instance
removes a polygon from the polygon
returns the sender of the overlay
returns true if the traffic in view is in view
returns the location of the
sets the drawing enabled
returns the latitude lat lon lat lon
sets the drawing enabled
sets the drawing enabled
sets the drawing enabled
sets whether the outline is enabled
sets whether the outline is enabled
close the info window
sets the enabled state of the editing mode
sets the enabled state of the
resizes the component
sets the stroke style for this code graphics context code
sets the fill style
returns the latitude longitude
sets the visibility of the area
sets the stroke style for the given style
returns true if the component supports hidden
sets the visibility of the popup
returns the title of the frame
adds a control to the control
returns true if the component supports the
adds a control to the control
returns true if the marker is visible
adds a widget to the container
removes a handler from the handler
removes a marker with a double click handler
removes the specified drag drag end drag handler
sets the alt alt
sets the error message
sets the color of the link
sets the maximum resolution for the resolution
sets the minimum resolution
removes a marker drag handler
sets the short name of the receiver
sets the color of the map
sets the tile size
sets the url argument
removes a marker drag event handler
sets the map type
sets the zoom level
returns the options
adds a copyright to the collection
adds a close window to the window
sets the maximum content for this content view
sets the maximum content of the window
returns the copyright notice for the given
creates new copyright information for the new copyright
sets the maximum title for this window
sets the maximum title for this window
sets the maximum width of the image
clears the current directions
returns the html html
returns the distance from this peer to the current peer
returns the duration of the current peer
sets the
sets the locale
sets the retrieve polyline
sets the steps
sets the travel mode
returns the html summary for the current page
returns the base country code
returns the cache instance
adds a handler to the list of open handlers
get locations for a specific location
removes a handler from the handler
adds a new relationship type to the map
get locations locations for a location
clears the relationships
removes a relationship type from the map
returns the viewport of the viewport
resets the state of the peer
removes the specified handler from the handler
sets the viewport
fires a lat lon
returns the bounds of the image
returns the id of the current entry
returns the minimum level of the zoom level
returns the text of the current item
removes the specified mouse event handler
removes a handler from the handler
adds a map type handler to the map
adds a handler to the error handler
removes a marker from the list of remove handlers
returns the maximum resolution of the image
returns the minimum resolution level for the resolution
adds the given launch event to the list of listeners
creates new logger new layer and starts new copyright
adds a pitch changed listener to the pitch
sets the enabled property
adds a new to the
adds a zoom changed listener to the map
sets the image url
returns the alt alt
check the resize
sets the lat lon latitude
follows the link in the
returns the bounds of the given bounds
returns the latitude longitude
returns the error message
returns the id
returns the
returns the color of the peer
sets the visibility of the popup
hides the
returns true if the peer is hidden
shows the map of map
pan the current frame to the given
removes the peer from the registry
returns the name of the peer
show map content
add a handler to the map
returns the peer object that is used to send to this peer
removes the specified instance of the
initializes the drag end drag handler
removes the pitch changed listener
returns the projection of the projection
removes a changed listener from the
initializes the handler click handler
returns the number of rows in the specified area
removes the zoom changed listener
sets lat lon for the given lat lon coordinate
returns the color of the current image
initializes the handler double click handler
sets the
returns the size of the tile
adds a double click handler to the map
sets the photo
initializes the handler drag handlers
returns the url argument
shows the peer
initializes the error handlers
initializes the handler drag handlers
initializes the instance handlers
creates a new handler for the copyright type
this method is called when the pitch pitch changed
ensure that the loader is loaded
called by the factory before the window is closed
this method initializes yaw changed handlers
adds a drag drag handler to the map
initializes the zoom changed handler
this method is called by the garbage collector
open the marker info window
initializes the handler for the marker
adds a drag handler to the map
this method is called by the handler when the user clicks on
this method is called by the mouse event when the mouse over
initializes the trace mouse up up to the
adds a drag start handler to the map
removes the marker marker handlers
sets the visibility of the markers visibility
test of get area method of class
tests the of the
tests polygon polygon
tests polygon polygon count
test polygon with options
tests polygon partially partially painted
tests that the trigger
tests that the start of a polyline is drawn
tests that a line of is triggered
test that the mouse is dragged
test that the mouse over the canvas is drawn
lat lon
tests the overlay
this method is used to set the overlay options
test overlay
tests traffic overlay overlay listener interface
tests icon constructor
test icon from default
this method is called by the
tests polygon cancel
tests polygon end polygon
tests polygon polygon
tests polygon polygon out polygon
tests polygon polygon dropped
tests the get length method
test that a map is drawn with a map
tests that the
test that the code code is used in the code map
adds a map move handler to the end of the map
test polyline polyline
the
adds a map move handler to the map
adds a map move handler to the map
adds a map type handler to the map
adds a map overlay handler to the map
adds a map to the current map
adds a map type to the map
adds a map type handler to the map
adds the map zoom end to the map
this method is called when the user selects the
tests the
test the
test that the is configured with the
adds a new overlay to the overlay
test
check the resize
this method is called when the user selects the
test the interpreter using a
clears the canvas
close the info window
converts a lat lon coordinate to a lat lon point
converts a latitude longitude to a lat lon
convert latitude to a lat lon point
convert latitude longitude to a lat lon
returns the bounds of the bounds
returns the bounds of the specified bounds
returns the center of the map
returns the current map type
returns the drag object that is currently being dragged
this method is used to get the instance
returns the info window for this window
returns the pane that contains the given type
returns the zoom level of the map
installs keyboard handler
returns true if continuous zoom is enabled
returns true if zoom double click enabled
returns true if the decorator is draggable
returns true if the info window is enabled
returns true if the is enabled
returns true if the scroll wheel is enabled
resizes the window
pan the current state by the given amount
pan to the center of the map
creates a new panel with the given panel
removes the control from the control
removes the specified window info close handler
removes the specified window info handler
registers a map type handler for the map type
registers a map with the specified map
removes the map decorator of the given map
removes a handler click handler
removes a double double click handler
removes the drag drop down handler
removes a drag drag handler
removes a drag drop action handler
removes a map mouse move handler
removes a map mouse out handler
removes a map mouse handler
removes the specified move end handler
removes a map move handler from the map
removes a map move handler
removes a map map map from the map
removes the map overlay handler from the map
removes a map click handler
removes a map type
removes a map type handler
removes the map zoom event handler
removes the given overlay from the overlay
this method is called to indicate that the position of the
saves the current position in the current position
sets the center of the map
sets the center of the map
sets the zoom factor for the zoom level
sets the current map type
sets the zoom double click enabled propety
sets the drag mode
sets the google enabled enable enabled property
sets the enabled status of the
sets whether the mouse wheel is enabled
sets the l f object that renders this component
sets the peer id
sets the zoom level
zooms in on the current map
adds a virtual widget to the container
this method is called when the initial panel close
this method is called when the window close button is pressed
open the dialog to open the open office window
registers the map type handlers for the map helpers map
creates and returns a new map of overlay keys
initializes the map layer map elements
initializes the map with the default handlers
initializes the map with the default handler
initializes the map drag handler
initializes the map drag handlers
initializes the map drag handlers
returns a new map that is used to draw the map
registers the handler for the map mouse out handler
initializes the map map map for the given mouse event handlers
initializes the handler for the move handler
initializes the map move handlers
initializes the map move handlers
removes the map map type event type event type event type event
removes overlay handlers
initializes the map with the right click handler
registers the map type map helpers
initializes the map zoom map
closes the connection and the output stream
kills the current thread
closes the thread
writes the given text to the queue
start monitoring the thread
closes the thread
writes the current state of the stream to the current output stream
start monitoring the monitoring thread
writes the next element to the queue
closes the input stream
check if the system is a system system
returns the architecture architecture
returns the build string
returns a description of the filter
returns the name of the config
returns the os name for this component
returns the version of this version
select the given options
displays a message in the user
cleans up the output
gets the fleet id
sets the fleet id
returns the planet id
sets the value of the planet id property
returns the
sets the
returns the
sets the
returns the
sets the
sets the
returns the
sets the
returns the
sets the
this method is called when the fight up up up the
load the current
sets the pid
returns the
sets the
returns the
sets the
sets the
returns the
sets the
returns the
sets the
gets the value of the cv property
sets the cv
returns the
sets the
returns the food
sets the food
sets the available value for this
returns the
sets the value of credits
initializes the tool
handle the key typed event by invoking the
invoked when a key is pressed
invoked when a key is released
invoked when an action occurs
init method for this filter
returns a string representation of this object
adds a new stream to the zip file
add a new stream to the current directory
returns the is optional property
sets the resource enabled
enables or disables all resources
puts a key value pair into the cache
removes a key from the cache
clear the service
returns the resource key for the given resource type
generates the given input
generate a new
sets the templates cache
find a matching column
gets the value of the property
execute the query
returns the value to which the specified key is mapped in this
puts a key value pair into the map
removes a key from the cache
clears the
returns true if the exception has exceptions
returns the entity with the specified entity
stores a entity in database
delete a key
delete the given entity from the database
count the select count
returns the sql condition of the given condition
this is the entry point method
clears the current provider
returns the templates for the given source
returns the templates associated with the given key
puts a template into the database
clears the current value
returns the templates associated with the given key
puts a template into the cache
validate the xml
validate the xml input against the input stream
validate the input
validate the file
validate the input source
returns true if the input is valid
returns true if the parser is invalid
returns the parse exception
start a new element
receive notification of the end of a document
receive notification of character data
receive notification of a warning
receive notification of a parse error
handles exceptions thrown by the exception
define the function for the function
executes the given update query
creates the tree
sets the datastore to be used for the datastore
prepares a query to prepare for a query
parse a query and return a
returns true if the query has been changed
returns the fetch options
returns the reduce factor for the reduce reduce
returns the uri of the
sets the format factory
sets the reduction factor for reduction of the
sets the rate of the
returns the slope of the
sets the slope of the
returns the degree of rotation
sets the degree of rotation of the rotation
sets the layers of the layer
returns the transform
sets the format map
sets the transform
returns the image record for the given
returns the scaling factor for the scaling factor
sets the scaling factor for the scaling factor
returns the use
sets the scaling size
sets whether to use for the
returns the image record
gets the value of the property
sets the
returns the order of the progression
sets the value of the code progression order code property
returns true if the is
sets the
gets the value of the packet division property
sets the value of the code packet division code property
returns the levels
returns the code block size code
get image record for given id
sets the levels
returns the writer that is used to render the given format
process an input stream
returns a new instance of the given format and the format
sets the block size
returns a reader for the specified format
sets the properties of the properties
returns the mimetype format
sets the mimetype of the file
returns the format properties
returns the quality of the quality of the data in the image
writes the given image to the given output stream
sets the format properties
sets the quality of the data in the pool
writes the image to the specified output stream
sets the properties of the properties file
returns the number of layers
writes the image to the specified output stream
writes the specified buffered image to the specified output
writes the image to the specified output stream
sets the properties of the properties object
sets the properties
sets the layer count
writes the given image to the given output stream
opens a file with the specified image
opens an image
opens a buffered image using the specified input
opens a buffered image using the specified input stream
opens a new image file
opens an image
opens a file with the given input stream
sets the number of channels
writes the image to the specified output stream
opens a file with the given input
opens a image
performs a buffered rendering of the specified image
setup the properties
sets the properties for the
checks if the is
checks if the entity is a valid
sets the properties for this instance
this method is called when the cpm is finished
removes the object from the list
removes the from the
append the tail of the current element to the tail of the
returns the view name for the given request
sets the views
returns the view name for the given request
process a result set
process a result set
appends the sql to the sql statement
populates the database with the given data from the database
returns a connection to the database
appends the sql to the sql statement
get a connection from the pool
get a connection from the database
sets the defaults
rolls back all the transaction
returns a normalized version of the current
commit all connections
returns the login timeout
returns true if the given java name is contained in the java
add a sql statement to the table
clears all warnings reported on this connection
inserts a new binding into the table
returns true if the xml element is an name
sets the login timeout
closes the connection to the server
returns the name of the given java
returns the log writer
returns the prepared statement for the given prefix
returns the name of the given xml element
sets the database to the database
binds a name to a name
closes the connection
parses a boolean value
binds a name to a context
serialize an object to a string
serialize a serializable object
convert the object to xml
sets the key field
registers the factory
registers a factory for the given factory
returns the name of the class that is used to resolve the
add a map of fields to the table
retrieves the catalog name
this method is used to convert a simple element into a string
retrieves the holdability of result code result code
sets the value of the setters property
fills the given collection of objects
sets the table map
looks up a named object in the database
returns the csv data set
looks up a named object in the database
returns snippet from snippet snippet
returns true if the given type is a value
returns true if the given object is referenced by this object
returns a select string
returns the referenced reference id
renames the name
returns true if the object is a serialized object
renames a name
unbinds the named object
this method is used to render the tag with the specified name
unbinds a named object
reset the registry
creates a new
closes the tag
rolls back the given code savepoint code
shift the given number of years to the specified time
this method is called when the xml is renamed
shift the current year to the specified time
shift the shift in the specified period
returns the javascript representation of the given type
returns the duration of the specified duration
sets the holdability of result set to code holdability code
adds a map of to the map
this method adds a new time to the end of the duration
returns the id of the
returns a string that is indented in the specified depth
adds a new time to the end of the duration
sets the id
compares this object with another duration
initializes the
creates a new instance of the current
compares this duration with another duration
adds a to the set of properties
creates a new instance of the given name
sets the format
returns the millis of the time in milliseconds
returns the format of the format
sets the type map
checks if the given type is
returns the seconds value
compares this object with another object for equality
sets the format of the default date format
extracts the interval from the given interval
returns a string representation of this object
compares this object with another date
returns true if the given type has the given type
returns the default jdbc format
sets the default jdbc format
returns true if the user is allowed to close the
returns the code code that is associated with the given type
returns a time zone by id
sets the close allowed value for this
returns the timestamp of the current
adds a new instance of the given accessors to the project
returns the millisecond of the time
returns true if the is
returns the
creates the secret key
returns the date as a date
returns the weekday
sets the value of the object
sets the nulls attribute of the object
append a string to the end of the list
returns the inbound binding for the given binding
insert a string into the table
appends the given code string code to the end of the list
insert a new binding into the database
test the date of the
test that the zone works correctly when the date is taken
tests the zone of the date zone override
returns the string representation of the current value
tests the format override of the default date
tests the zone functionality
returns the state of the
returns the time zone
add a binding to the list of bindings
clears the current state of the
returns true if the is
sets the number of
sets whether or not the target is executing the target
format the date
test of set set method of class net
test the get parameter and method param
test the method code get param string code
generates a string representation of the test
returns true if the parser is ignoring access
creates a copy of the date
test that the string buffer contains a string
test zone
tests that the encryption key is not supported
tests that the language is being used in the
sets the guard exception
tests the date time
test the
returns a string representation of the given date format
test c1
test that the is correctly encoded
test the
test the
convert the given time to a string using the format format
decode the
decode the
convert a time format to a string format
returns the addition of this duration
add a time to the time interval
test the ability of the leap year
adds a date to this time zone
shift the shift time
returns the weekday day
returns the seconds value
test java doc
returns the time in milliseconds since january 1 1970 00 00 00
returns the nanos of the
test date
compares this object against the specified object
returns the config
test date
tests that zero year
test the time of the first time
test date
test date time
init method for this filter
returns the session that the user is currently currently being logged in
creates the select model
returns the icon that was the icon
sets the icon used to identify the icon
returns the user who created this user
sets the user
sets the main form
returns the controller
returns the service
gets the costs service
creates a new button with the specified caption and returns it
returns the user object
initializes the components
returns the login context
sets the login context
creates a new button with the specified caption and returns it
creates a button with the specified caption and add it to the
creates a new button with the specified caption and the action listener
creates a new button with the specified caption and returns it
creates a new button with the specified caption and returns it
creates a new button with the specified caption and the action listener
creates a chart
initializes the components
creates a new instance of the application instance
creates a button with the specified caption and action
adds a new account to the database
finds a person by its email
sets the person
sets the main form
sets the main window content
gets the value of the additions property
sets the additions
gets the name
sets the name
gets the name
sets the name
sets the value of the persons persons
adds a person to the list of persons
adds a new welcome to the list
returns the welcome text for the specified language
find the person with the given person
adds a blog to the list of
gets the value of the address property
sets the value of the address property
sets the house number
returns the house number that is used to represent the house
sets the house number of the house
gets the value of the number property
sets the number
test method for
sets the next state of the jar file
sets the lucene query
returns the query string
returns the entity manager
adds a new annotation to the list of annotations
adds a listener for the discovery
sets the grouping grouping
checks if the given keyword is a keyword
closes the connection
returns the column family
returns the row key
parse the content of the content of the content of the file
parse the given keyword
returns the name of the column family
consumes a single keyword
unset entity manager entity manager
returns the next token in the
sets the column family name
returns the unwrap flag
creates a new instance of the session provider
sets the unwrap flag
merges the given entity and a metadata object
returns the data accessor for the given metadata
returns a string representation of the decorated keys
returns the cache manager
adds a listener to the cache
sets the columns
creates a lazy initialized instance of the exception
adds a column to the table
returns the id of the given metadata id
returns the index directory
checks whether the given class is a
process the
creates a new entity manager session
stores the entity in the database
store the entity in the cache
returns the factory that this factory is managing
gets the value of the transaction type property
sets the transaction type
sets the provider
sets the classes
sets the jar files
sets the name
sets the properties
returns the session
returns true if the exclusion list is excluded
sets whether the exclusion should be excluded from
returns the id property
returns the cache for the given entity
sets the property id
returns the entity manager for this type
destroy the session
sets up the test
gets the value of the property
test the save process
test save posts
test delete authors
returns the read identifier
sets the read identifier method
sets the permalink for this trackback
returns the write identifier method
sets the write identifier method
returns the column with the given key
returns the super column
adds a column to the table
adds a super column to the table
adds a property index to the list of
adds a relation to the map
returns the relation property
returns the index boost in the field
sets the index boost in the
returns true if the field is indexable
sets the is indexable
adds a column to the table
returns the property
returns the type of the foreign key
returns true if this type is unary
returns true if this type is a collection
returns the category name
stores settings in the database
returns the title of the message
reloads the settings from the file
returns the icon for this image
create an instance of
applies the settings to the settings panel
cancels the current user
process node check
updates the panel with the settings of the panel
returns the component that is used to display the component
returns the help context
returns true if the panel is changed
returns true if the panel is valid
adds an error to the list
returns the name of the resource bundle
adds an exception to the list of exceptions
sets the id of the current item
returns the string to represent the audit event
this method is called when the audit has finished
this method is called when the audit is started
this method is called when the user finishes a file
this method is called when the user starts a file
called when a line of input is cleared
this method is called when the output line is selected
adds a channel to the channel
returns true if the channel is in the channel
removes a channel from the channel
returns the name
returns the property
returns the property
returns the property
sends a message to the server
returns the property
sends a message to the server
sets the authorized level
start the command thread
returns the user agent string
gets the value of the auth level property
returns the username for the user who authentification
stops the command thread
gets the simple command name
send a message to a specific target
log a message to the output
checks if channel is in the channel list
this method is called by the server to send a user to
adds a command to the command
adds a new command to the command
add a command line to the command line
returns a user object with the given username
this method is called when a user is allowed to be used
removes the given user from the list of the users
sets the property value
execute the command
called by the thread to stop the session
checks if the word contains a word
load the configuration from the database
executes the command
this method is used to normalize a new
returns the correct name of the table
returns an iterator over all the of the given table
executes the given command
close the given device
closes the current connection
executes the given command
test that the bind key is properly set
load the configuration from the database
find the end position of a token
execute a command
returns true if the current token is finished
executes the command
load the configuration from the file
parse the config
push the current state onto the stack
appends the given string to the current state
discards the current state of the current input buffer
makes the current state of the current state
called by the process when the user presses the
returns true if the iterator has another state
returns the next state of the current state
gets the value of the remove comments property
removes comments from the list
sets the default value for this property
sets the value
returns the value of the property
returns the long description of this object
returns an iterator over the registered commands
returns an iterator over the registered registered registered registered registered registered registered
returns an iterator for the registered registered registered registered registered registered registered
returns true if the given table is not already deployed
returns true if the output is requested
adds a listener to the execution queue
removes the execution listener
updates the column widths
flush the current row and the current row
sets the display
returns true if the file is printed
returns true if the output has an output output
sets the prefix to use for the
print the string to the output stream
sets the suffix
cancels the current thread
cancels the current
exclude the current context
reads the action from the given action
returns the input stream of the file
reads the properties from the given map
push the current buffer to the stack
pop the current command
returns an iterator of the names of the
shuts down the server
returns the number of arguments
sets the current session
creates a new configuration container object
finds the type of the given type
release the player
fetch the feed url
returns the url to the specified url
returns the root quantity of the
sets the root quantity of the
returns the root of the tree
prints a list of root objects
returns all the products that the belongs to
returns the parent node of this node
sets the parent node
returns the node
sets the node
returns the quantity multiplier
sets the value of the quantity multiplier property
returns true if the is
shuts down the server
closes the connection client
connect to the database
connect to the database
returns a connection to the database
returns the object instance for the given object
returns a connection with the given password
returns the object instance for the given object
add a product item to the shopping cart
removes the shipping entry from the cart
adds a new item to the shopping cart
returns the type description
returns the name of the product
clears the shopping cart
returns the current time in nanoseconds
returns the price of the selected drinks change
checks if the payment method is selected
sets the payment method amount for a payment method
clear payment method clear clear
clear the payment method id
adds a payment method type id
this method is called by the service
returns the amount of payment method payment method
returns the total number of selected payment methods
called when the user fails with a
returns the selected payment method
clear the payment method type ids
returns the name of the service
sets the service to be used for the service
sets the service name for the service
make a valid map of valid
returns true if the user is granted permissions
returns a list of all the source code
compares the specified object with this cart item
compares the specified object with this product
returns the total number of items in the list
returns a list of items that are in the cart
returns the default error page
returns a string representation of this object
sets the value of the field
expands the given locale
creates a new instance of the store object
connect to the server
replaces the trajectory with the specified reaction
returns a new command with the specified value
add a new row to the table
compares two objects for equality
register the bus with the server
translate the component by dx dy
returns the radius of the circle in pixels
returns the simple type of the type
applies the behavior of the behavior to the specified behavior
returns the current map properties
get the challenge
initialize the
this method is called by the login to commit the login context
sets the data for the given data
returns the estimated time of the specified time
returns the estimated in the time interval
returns the estimated time in seconds of the given time
returns the estimated estimated time in seconds of the given time
sets the visibility of the visibility of the axis
sets the visibility of the y axis
returns true if the x axis is visible
returns true if y axis is visible
sets the x units
sets the y units of the unit
returns the x units
returns the y units
sets the height of the pixel height
returns the height of the pixel in the current pixel
sets the pixel width of the pixel
returns the width of the pixel in pixels
clones the given field
adds a field to this field
returns the element of the given element
returns a new hyper hyper
returns a field with a given field
returns the mod element of this field
the given field and returns the resulting
adds a field to the
convert a div element to a div element
this method initializes j content pane
this method initializes j scroll pane
this method initializes j button
this method initializes rad
this method initializes rad row
this method initializes rad clear data
this method initializes rad clear row
this method initializes this
this method initializes txt
this method initializes btn
this method initializes btn
this method initializes btn cadastro
this method initializes btn cadastro anterior
this method initializes btn cadastro
this method initializes btn cadastro
this method initializes btn buscar empresa
this method initializes j scroll pane
this method initializes btn
this method initializes this
this method initializes de
this method initializes btn ok
this method initializes this
this method initializes j text field
this method initializes this
this method initializes j content pane
this method initializes main menu bar
this method initializes j text field
this method initializes menu sistema
this method initializes menu cadastro
this method initializes menu
this method initializes pan
this method initializes j text field
this method initializes j text field
this method initializes j text field
this method initializes scp
this method initializes j button
this method initializes j text field
this method initializes j button1
this method initializes
this method initializes j text field
this method initializes item cadastro
this method initializes this
this method initializes j content pane
this method initializes j text field
this method initializes txt
this method initializes btn
this method initializes scp cliente
this method initializes tab
this method initializes j text field
this method initializes btn sair
this method initializes j text field
this method initializes this
this method initializes
this method initializes j text field
this method initializes j check
this method initializes referencia
this method initializes txt mesa
this method initializes this
this method initializes scp
this method initializes btn
this method initializes btn sair
this method initializes btn sair
this method initializes btn cliente
this method initializes btn data
this method initializes txt nome cliente
this method initializes j text field
this method initializes chk
this method initializes chk
this method initializes chk
this method initializes pan data
this method initializes pan tipo
this method initializes btn cancelar
this method initializes btn data
sets the numeric value of the numeric field
sets the unique flag for this object
returns true if the row is blank
returns the description of the node
returns the number of descriptions in the current set
get the xml node
get the of the node
get the metadata for this node
returns the number of in the tree
returns the about node
get the about node
get the number of spec elements in the list
get the spec for the given address
writes the error log to the file system
returns the response date
sets the record
returns the number of in the
returns the item in the database
the job to a pending
fix the pending status
creates a new node with the given node
returns the string
returns the number of descriptions
returns true if the node is
returns the requested file
adds a billing to the billing details
sets the pending status of the approval
this method is called when the user changes the user
builds the
validates the fields
registers a new user
removes a from the
returns a string representation of the
this method is used to create the
process the process style
invoked when an action occurs
sets the title change
ensures that the indexes are not already in the list
registers the given object descriptor for the descriptor
registers the given converter
unregister a converter
checks whether the given class is a primitive
callback to be called when the call is finished
callback to be called when the call is finished
called when the number of elements has been finished
called when the end of the input is finished
prints the given ast
writes the specified byte to this buffer
flush the buffer
compares the specified object with the same object
returns the last value of the last key
prints the given clause
prints out the children of the test trie
prints out the ast for the ast
prints out the post assignment
ends the block
returns the child with the given ast
returns true if the given ast node has children
returns true if the speed is
sets the speed speed
sets the resistance of the resistance
this method is called by the gravity to indicate that the gravity
make the of the
returns the preferred size of the current shape
invoked when a mouse button has been pressed on a component
mouse moved event
returns the view that is currently connected to the given point
creates the ports
deletes the border of the ports
returns the root vertex of the vertex
returns the parent vertex of this vertex
sets the parent vertex of this vertex
sets the children of the children of this node
checks if the given ancestor is a ancestor of this vertex
adds a new vertex to the graph
removes a vertex from the graph
returns a clone of this object
creates the panel that provides the properties to be used
sets the parent window
this method is called when the layout is done
sets the neighbor window
returns the index of the specified x y value in the
invoked when an action occurs
returns true if the file has been saved
returns true if the object has been modified since the last modified
sets the modified flag
invoked when the components size changes
sets the saved file
this method is called when the user enters a double
returns the document
is this a bidi vertices
returns the current document
returns true if the drag operation is able to drop out the
create a new tab
returns the object for the given view
returns the current view
returns true if this group is capable of group capable of
prints the document
returns the current work area
this method is called when the document is active
redo the last document in the document
cut the document
copy the document to the document
this method is called when the document is selected
cancels the document being deleted
select all the active document editors
clones the document with the current document
sets the current work area modified
activates the document group
this method is called when the document is active
toggle the grid state
toggle the snap to the grid
sets the grid type
this method is called when the user drags the document
zooms out the document
this method is called when the document is selected
build the menu bar
builds the toolbar
sets up the docking window properties
paint the background color
paint the port
sets the default layout
returns the view that is currently connected to the given point
mouse wheel mouse wheel listener
listens to cell selection changes
print the current job
prints the given page
updates the panel with the given element
the points of the given points
save an attribute to the given string
saves the complex attribute
checks if the file is a file extension
this method is called when the jgraph is destroyed
sets the current model
sets the current layout cache
sets the current graph
returns the main extension
creates and returns a new instance of the current model
returns the current model
returns the current layout cache
returns the jgraph component of this jgraph
adds a vertex to the current graph
removes the given edge from the graph
returns the extension of the file
returns the cell at the specified location
removes the given element from the list
opens a file chooser
returns the current graph
removes the given graph from the graph
saves the current document
returns a new graph
saves the current graph to the given file
saves the given graph to the given file
opens a new file
exports the image to a file
print the current selection
prints the document
undo the last operation
redoes the last undone action
cuts the selected text
copy the action
pastes the clipboard
deletes the current element
exits the application
adds a new edge to the graph
selects all vertices
updates the menu and the menu bar
clone the clipboard
adds the current group to the current selection
sets the current jgraph
align the current selection to the right of the current
aligns the vertical position of the current cell
brings the current selection to the front
this method is called when the user selects the selected item
brings the current object to the front of the given
this method is called to back to the back of the current
toggle the current grid
zooms out the current graph
returns true if the current context is possible
returns true if the current user can redo
returns true if the current user can copy the current
returns true if the current user can cut and
returns true if the clipboard is a paste operation
returns true if the current user can delete the current selection
returns true if the current user can select all the current
returns true if the current graph is a clone of the current
returns true if the current group is allowed to group
returns true if the cell can be
creates a new menu
show the frame
returns the template store
returns the context type registry
returns the element at the specified position
returns the last element of the current element
returns the end position of the column
returns the name of the first child of the node
sets the end column
returns the parent
returns the start column
sets the parent of this node
sets the start column
finds the first sibling of the given type
returns the last sibling of this node
this method is called when the project is loaded
launches the launch file
returns true if the module is a program module
creates the actions for the given action
returns a string containing a line of tokens
returns the editor
the implementation of the code iaction code method runs the code iaction
returns the editor
returns the input node
sets the input ast
updates the viewer
sets the editor
returns the model
formats the current document
checks if the resource has the given resource
returns true if the given delta is a delta
removes the given listener from the list of listeners
notifies all registered listeners that the given model changed
creates a new project
this method initializes scrolled composite
this method initializes composite
run the test
returns the local value for the local variable
sets the value of the given locals
returns true if this object is unknown
returns true if the attribute is a
returns the sort
pushes the given output to the stack
returns the number of dimensions in the array
returns the type of the element
pop the top most stack pointer
returns the name of the class that this filter represents
returns the internal name of the internal element
pops the top element from the stack
returns the descriptor of the current file
get the descriptor for the given buffer
pop the top and stack
returns the size of the buffer
get the opcode of the instruction
tests the equality of this object against an arbitrary object
returns the hash code for this object
returns the descriptor of the descriptor
returns the string representation of this object
returns the return type of this method
returns the value of the given key
creates a new class
creates a new instance of the given string
visits a inner class
adds a new item to the table
called when a method is called on exit
returns a new local object
pushes a new value onto the stack
sets the local type of the local variable
pushes the given value onto the stack
returns the item at the specified key
pushes a value onto the stack
puts the specified item into the list
pushes a new value onto the stack
the of the
pushes a value onto the stack
pushes a value onto the stack
returns the offset of the current state
returns the read access
returns a string representation of this object
returns the class name of the header
returns the index of the argument that is in the argument
puts a byte into this byte array
puts a short value into the buffer
puts a byte array into the buffer
puts a long value into the buffer
load the given instruction
returns the name of the header
enlarges the data in the current data array
stores the given type in the stack
accepts a visitor
load the
load argument from the argument
load arguments from the given arguments
load the arguments
load the argument array
stores the argument of the argument
returns the type of the local local local variable
load local local index from local local
load local type from the local filesystem
reads the label from the given offset
stores the local local variable in the local database
stores the local type of the local variable
this method is used to load the given type from the stack
returns the item at the specified index
writes the given type to the stack
pop the top of the stack
reads a single byte from the specified byte array
visits the
ensures that the current program is
this method is called by the server to run the
reads an unsigned 16 bit integer
visits the
ensures that the element is being used in the stack
reads a short from the current position
ensures that the is
reads a int value from the input stream
visits the
calls the visit method of the
reads a long value from the specified index
swap the
swap the given type with the same type
reads a string from the given array of bytes
replaces the two operands of the given type
calls the code visit code method
the given
reads the class from the given index
this method is used to determine the type of the given type
reads a constant from the buffer
this method is used to determine the type of the given type
sets the type of the type
returns a new instance of the label
mark the label as being closed
returns a new label
returns the element at the specified index
returns the size of the list
invoked when a hypertext link is updated
sets the type of the
shifts the
the given label
the given label
adds a new node to the given index
goes to the previous instruction
visits the given local variable
this method is called when the user selects a new frame
returns the instruction that this instruction operates on
ends the frame
puts a field in the stack
invoke the method on the specified virtual type
invokes the method
invokes the method on the static method
invokes the method in the interface
invokes the method on the given method
emit an opcode
creates a new instance of the type
this method is used to create a new array type
calls the visit method of the code visit code method here
visits the given bytecodes
throws an assertion exception with the given type
checks if the type is an expected type
invoked when the code new code is executed
called when the is done
end the method
this method is called after the test is executed
this method is called after the test is executed
test of get method of class
test of get method of class
test of method of class
test of method of class
test of get method of class
test of get method of class
test of get method of class
creates a new network for the given learning rate
returns true if this is empty
encodes a double to a float
encodes the given chromosome as a chromosome
decode the given chromosome and returns the resulting value
adds a bit integer to the current list of the
adds a new code value code to the given code code
returns the correct ratio of the current
returns the next pseudorandom uniformly distributed int value
creates the components of the cell editor
returns the class property class
notifies the validation listener that the error has been
called when the user changes the property change
throws an illegal argument exception
binds the focus listener to all the listeners
returns the value of the property
creates the table header
adds an element to the list
removes the element at the specified position in this list
reads the header and sets the header
this method is called when the user is to be called
at startup create and show the main frame of the application
sets the border to the rollover border
installs the fonts and the font
returns the description of the filter
adds the given menu items to the menu
returns clipped text clipped clipped from the text area
returns the string that the authorities is granted authorities to the
returns true if the database id is public public
delete a
retrieve the
returns true if the specified album id exists
returns the photos list
handle the request for a request
grab the request from the request context
handles the request to request the request
sets the thumbnail for the specified thumbnail
authenticate the user
compares this principal to the specified object
returns the name of the role
returns a string representation of this object
adds a subject principal to the subject
compares the specified object with this principal
returns a string representation of this object
returns the css style used for the skin
build the path
update the content of the document
returns a list of all the
checks if the database is private
returns true if the user can post a comment
checks whether the given entry can be able to post
checks whether the given user can post a comment
returns true if the current user is in use
close the database connection
returns the age
returns the last transaction
returns true if the connection is closed
compares this object with the specified object for order
returns an iterator over the items in this list
writes the start of the buffer
formats a date
adds a css property to a tag
writes the end of the current element
writes the document to the document
this method is called when the user selects a parse
parse the given input stream
creates a new post request
returns the title of the given string
returns the body of the string
returns a list of users for the given user
returns the user info for a given user
returns the template for the given url
sets the template
start a new element
this method is called by the parser
execute a sql statement
returns the number of rows in the table
closes the connection
starts the admin thread
stops the
this method is called when the game is made
main processing method for the object
stops the
main loop of the thread
paints the border
invoked when a mouse button has been pressed on a component
initialize the service
paint the image
interpolate the background
convert a pixel to a rgb color
returns the value of the parameter with the given key
initialize the application
paint the sprite
starts the applet
this method is called to make a new game
starts the game
stops the thread
runs the thread
starts the
this method is called when the audio is stopped
initializes the
starts the execution of the next element
stops the audio
handles a mouse pressed event
clears the map
adds a new customer to the list
saves the customer in the database
adds a new customer to the database
update the customer in the database
validates a customer
creates the default
initializes the object
accumulate the values of the data
this method is called when the user has approved
sets the resolver used to resolve the current context
returns the page with the specified summary
print a string
returns a comment object for the given id
adds a handler to the current map
cleanup the cache
update the map
adds a vertex to the vertex
translate the origin of the current coordinate system to the given coordinates
pan the origin to the given point
sets the position of the
pan the current state of the
centers the view on the specified location
centers the given location on the current location
centers the pan on the given location
zooms the current image
zooms the current image to the current zoom level
zooms out the zoom level
zooms the current zoom factor
zooms the scale to the scale
zooms in on the zoom factor
zooms out the zoom scale
switches the to the
update the current state of the
returns the left rotation of the current camera
returns the current camera
displays the debug message
sets the z direction
sets the shadow intensity
passing the focus request to the viewers control
this method is called by the browser
open the dialog
shows the information message dialog
shows the exception
shows a dialog with the given title
this method initializes jt usuario
this method initializes
this method initializes jp aceptar
this method initializes this
this method initializes this
this method initializes jt buscar
this method initializes jb
this method initializes jb cancelar
handle the person person
throws an error
parse an xml document
this method initializes this
this method initializes j name text field
this method initializes j progress bar
this method initializes j text field
this method initializes j update interval text field
this method initializes j auto load check box
this method initializes j status panel
this method initializes j favorite check box
this method initializes j save button
this method initializes j cancel button
this method initializes j split pane
this method initializes j new source button
this method initializes j open source button
this method initializes j fetch button
this method initializes j settings button
this method initializes j statistics
this method initializes j about button
this method initializes j exit button
this method initializes j left panel
this method initializes j left header panel
this method initializes j right panel
this method initializes j panel header panel
this method initializes j frame
this method initializes j content pane
this method initializes about dialog
creates the menu bar
creates the file menu
creates the help menu
connect to the database
dispose the dialog
gets the value of the team short name property
gets the team id
gets the team logo
gets the team club
returns the team points
gets the team first place value for this place
returns the team second place
returns the team place place
returns the number of
gets the team record
gets the value of the property
finds the job with the given id
sets the overwrite policy
called before the view is shown
returns the action item at the specified index
dismiss the window
sets the animation style
sets the listener to be notified when the button is pressed
enable or disable the switch
returns the number of content
returns the position of the specified item in the list
handle the given intent
writes the to the output stream
generates the execution of the given snippet
generates the execution of the given model
sets the value of the model property
returns the current element
sets the current element
generates the internal state for the execution of the task
this method is called to perform the execution of the model
loads the digester configuration
sets the value of the base directory property
resolves the model for the given object
validate the configuration
sets the value of the overwrite property
sets the value of the template name property
execute the mojo
returns the model for the model
returns the attribute with the specified name
adds a new attribute
adds a new tag to the end of the list
returns the operation for the specified name
creates a new instance of uriresolver resolver
adds a new operation to the operation
returns a new model transform
returns the type of the event
returns the execution context for the given execution id
returns the value of the key
sets the value
returns the default value
sets the default value for this object
returns the parameter with the specified name
adds a parameter definition to this definition
returns the parameter types of the request
returns the parameter names
load a model from a model location
sets the project id
this method is used to get the namespace of the given package
returns the package that contains the given package name
transforms the given input object to the model
adds a package to the package
returns the class with the specified name
this method is called by the model to transform the model to
adds a class to the list of classes
returns the interface with the specified name
sets the project name
adds a interface to the list of interfaces
returns an enumeration of all the names of the element
returns an enumeration of the name of the element
returns the project namespace
returns the package associated with the specified name
sets the project namespace
adds a package to the list of packages
gets the project version
sets the project version
finds a class by its name
finds the class with the given name and package name
adds a execution to the execution context
find a interface by its name
find the interface with the given name and package name
returns the identity of the object
returns an enumeration of all the names of the specified name
find the enumeration of the package names in the package
sets the value of the id property
returns the literal value for the given name
adds a literal to the end of the literal
sets the base directory
checks if the given type is a primitive
checks if the given model is a enumeration
checks if the class name is a class
adds a new artifact to the list of artifacts
adds a property to the system
returns the working set of the working set
sets the value of the working set property
sets the overwrite value
sets the key value
sets the value of the string
builds the menubar
builds the help menu
set the value of
set the value of message
gets the value of the property
set the value of fecha inicial
set the value of num
set the value of codigo
gets the num
gets the value of the fecha inicial property
gets the value of the codigo property
set the value of fecha final
set the value of
set the value of nombre
gets the value of the fecha final property
gets the value of the titulo property
set the value of cliente
set the value of cod material
set the value of dni
gets the value of the cliente property
set the value of autor
gets the value of the dni property
set the value of
gets the cod material
gets the value of the autor property
returns the number of
set the value of lista
checks if word is
gets the
sets the value of
returns the
sets the value of
gets the value of the property
sets the
adds a user to the database
returns true if the given code id code is a code admin
returns a logger for the given class
returns the voucher manager
sets the voucher manager
this is the entry point method
this method initializes btn
this method initializes btn
this method initializes this
this method initializes btn
this method initializes alt
this method initializes btn
this method initializes
this method initializes btn
this method initializes btn
this method initializes
this method initializes btn
this method initializes btn
this method initializes name
this method initializes name
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes btn
this method initializes btn
this method initializes btn
this method initializes
this method initializes btn
this method initializes regions box
this method initializes btn
this method initializes btn
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes name
this method initializes btn
this method initializes name
this method initializes
this method initializes btn
this method initializes
this method initializes
this method initializes
this method initializes btn
this method initializes
this method initializes
this method initializes name
this method initializes
this method initializes
this method initializes
this method initializes email
this method initializes btn
this method initializes btn
this method initializes this
this method initializes
this method initializes
this method initializes
this method initializes btn
this method initializes info btn
this method initializes btn
this method initializes btn
this method initializes btn
this method initializes
this method initializes email
this method initializes j button
this method initializes patient btn
this method initializes btn
this method initializes patient btn
this method initializes
this method initializes
this method initializes btn
this method initializes btn
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes
this method initializes btn
this method initializes btn
this method initializes
this method initializes btn
this method initializes name
this method initializes this
this method initializes
this method initializes
this method initializes patient btn
this method initializes patient btn
this method initializes btn
this method initializes
this method initializes btn
this method initializes btn
this method initializes
this method initializes btn
this method initializes btn
this method initializes btn
this method initializes btn
this method initializes btn
this method initializes
this method initializes this
returns the parents individual in the abox
returns a string representation of the object
copy the individual from the genome
sets the chromosome at the specified index
initializes the population
returns a string representation of the object
initializes the population
the
the of a
checks if the directory exists
returns the code optimizer code of the function
returns the given index in the genome at the index index
evaluates the given chromosome as a chromosome
returns the individual at the specified index
this function will be used as a fitness for fitness
this function will be called by the
this is used to determine the fitness of the given evaluator
counts the fitness of the given evaluator
returns the x coordinate of the quadratic function
the fitness function is a fitness function
returns the x coordinate of the given x coordinate
this is a function that simply calls
compute the of the
returns the x value of the given x and y coordinates
sets the output file
evaluates the given chromosome as a chromosome
sets the label of the given label
evaluates the fitness of an individual
evaluates the population and returns the result of
closes the current instance
returns the round of the given value
check if the user is authorized to user account
checks if the command is out of the
method to get the reservation
reserves the specified reservation
returns the expression from the file
adds the given services to the list of services
reserves the specified reservation
start the server
waits until the connection is signaled
this method is called when a new message is received
signal that the signal is a
connect to the socket
this method is called when the thread is terminated
sends a string to the server
this method is called when a signal is lost
listen for the listen process
returns the message that is currently being used in the message
this method is called when the user selects the
prints the message
log the given string
generates the data for the given data
this method is used to connect to the server
returns true if the connection is in the
synchronize the node with the specified node
listen for the server
the given node
the command
flush the database table
a file
creates a prepared statement
returns the question of the given question
this method checks if the table is
this method is called when the user changes the version
sets restrict restrict restrict to the restrict statement
returns the doclet
returns the context
sets the help text
sets the name of the
returns the additional attributes
returns the working copy manager
sets the working copy manager
returns the offset of the relative cursor offset
returns the length of the replaced
returns the system variable
this method is called by the server to run the connection
initializes the connection pool
this method is used to handle the server side
stops the connection
removes a template from the list
returns the element at the specified
finds the entry in the database
sets the connector
execute the specified request
reads a template from the specified transaction
returns the class definition for the given class
creates a exception
validates the classname
returns the class definition from the specified class name
returns the number of classes that are ignored
add a byte code to the given code byte code
resets the to the default
sets the value of the object
validates the package name
returns the value of the attribute
checks if the given template is within the given template
evaluates an ocl expression
tests if the given value is a primitive type
add interfaces super class
adds a property to the given property
sets the methods
deserializes the object
adds a property to the list of properties
deserializes the object from the given object
add a collection of definition definitions
tests include class
adds a new field to the template
test method for
tests the add allowed method and reset the
adds a class definition
adds a public property to this action
checks if the class name matches the given name
test the monitor
test the monitor
checks if the given interface name is contained in the classpath
returns a property
returns a property template with the specified name
sets the flag that indicates whether the specified code
removes the specified element from this set if it is present
returns a string representation of the given category
creates a new label with the given label
creates a new label with the given label
creates a new label with the given label
creates a new
returns a new label with the new label
sets the tokenizer factory
returns the entity attribute value
returns the string representation of the object
this method will be called when the user selects a file in
writes the contents of the given array of to the output
writes the contents of the given array of
writes the contents of the csv file to the output stream
writes the contents of the given array of
this method is called by the parser to set the xml tags
returns the lowest level of the given entity
returns the of the element
returns the smallest value that is set to the given one
returns the of the element
returns the tag for the given word
sets the tokenizer factory
sets the tokenizer used to tokenize the tokenizer
returns the apply word apply

prints the current
saves the to a file
reads the file from the file
returns the value at the specified index
test interpolation
test the distribution of functions
solves the distribution
adds an element to the list
writes the object to the stream
returns the index of the specified object
adds a key value pair to the collection
adds all the elements in this map to the specified map
returns the next file in the iteration
returns true if the file is accepted by the filter
returns true if the file matches the given file
reads a tree from the tree
creates a copy of the tree
initialize the names of nodes in the tree
resets the iterator to the beginning of the node
find out if the iterator is the first iteration
pretty print the current object
pretty prints the current
prints the current
compiles a regular expression
creates a new tree reader for the given reader
checks if the key is mapped to the specified key
creates a new tree reader for the given tree
returns the tree
returns the list
print the strings
checks if the given string is a
post a fix operation to be used for the given tree
load the given reader
load the tree from a reader
returns the ith tree
collapses all dependencies of the given list of dependencies
collapses the given list of dependencies
the method is called when the dependencies is complete
returns true if the given list of
returns a new for the given tree
returns the root graph node
adds a node to the index
returns the node with the specified index
returns the tree of the tree
returns a new for the given tree
returns the factory that this tree reader is managing
post a category to the basic category
returns the encoding of the encoding
loads the path from the given path
load the path from the given path
recursively searches for the path to the given file
loads the path from the given file path
load the path from a file
returns a string containing the comma separated list of
returns the transformer that is associated with this tree
returns true if the character is a label annotation
creates a new instance of the grammatical structure factory
writes the contents of the test to a writer
creates a new grammatical structure
returns the summary of the summary
returns a string representation of the object
removes the label and the label from the
returns true if the given tree is accepted by this filter
returns true if the given tree is a descendant of this node
append the string representation of the given builder to the given builder
sets the label
returns the index of the label in the list
sets the index of the label to the given index
returns the index of the first occurrence of the specified
index the nodes index
sets the parent of this node
returns the graph that is currently being used for the graph
sets the graph for the given graph type
prints the tree
adds a new arc to the graph
returns the arc arc node that is the arc that this
print tree in tree
print a tree
returns the head of the head node of this node
sets the head word node
returns the head node of the tree node
sets the head tag node
returns a string representation of the given level
returns a string representation of the node
sets the stem of the word
print the
sets the print writer used to this
returns true if the given code tree code is applicable
creates a new tree reader
checks if the given is auxiliary
returns the parent of this grammatical relation
parse the text into a string
returns true if the iterator has another
returns the next element in the tree
closes the current connection
adds a feature to the key attribute of the object
transform the given transform to a tree
save the data to the file
cleans up the inner scorer
saves the configuration to the specified configuration
refresh the content of the
sets the syntax of the block
adds a progress listener to this task
removes a progress listener from the list of listeners
sets the editor options
sets the font family
sets the style
creates and returns a new toolbar
sets the font size
refresh the current page
finds the first character in the text area
returns the new line of the specified start end
removes the given from the buffer
sets the breakpoint
sets the style of the line
clears the style
highlights a highlight
highlights a highlight between the given points
clears the highlighted style
sets the integer value
sets the bold
sets the italic attribute
sets the colour of the color
adds a child widget to this component
creates the components
sets the parent widget
writes a message to the log
update the model
adds a child to this component
returns the value of this function
adds a child to this object
adds a child to this component
adds a child to this widget
sets the parent of this widget
returns the setup object
invoked when an action occurs
this method is invoked when an action occurs
invoked when an action occurs
invoked when an action occurs
invoked when an action occurs
this method is called when the user selects the menu
this method is called when the menu is performed
invoked when an action occurs
this method is called when the user selects the menu item
adds a composite to the tree
initialites this action
returns the properties
writes the object type to the file
sets the parent widget
returns the current state of the
populates the attributes with the given properties
sets the state of the properties
initialites this action
this method is called when the user selects the
returns the selected node
evaluate the
performs the operation for the operation
this method is called when the user selects the
this method is called by the digester
this method is called when the operation is executed
initialize the
evaluate the
evaluate the expression
initialize the component
returns the children of this node
evaluate the
returns the keys of the children of this node
evaluate the
adds a child to this element
adds a child to the container
this method is invoked when the operation is executed
returns the component at the specified index
sets the index of the file to be used in the
returns the child component at the specified key
initializes the node
sets the index of the current token
returns the first child component of this component
initialize the
evaluate the
initializes the
evaluate the function
initialize the component
initialize the
evaluate the
evaluate the current
initialize the
sets the name of the orb
sets the
this method is called when the operation is executed
evaluate the
initializes the vector
this method is used to execute the function
returns the value of the expression
sets the mutation rate
initialize the component
registers the
sets the index of the
registers an event listener
sets the crossover rate
initialize the
sets the index state
sets the parent component of this component
sets the dimension
sets the index state
initialize the
sets the value of the orb name
sets the code code
this method is used to evaluate the function
evaluate the function in the
this method is called by the
updates the state of the state
initialize the component
returns the setup component
sets the name of the
returns the error value
updates the state of the given state
sets the name of the init init
initialize the
calculates the error for the error
this method is called when the user submits the
sets the index
initializes the
sets the initial component
adds a child item to the list of children
sets the path to the file
updates the state of the given state
returns the children of this node
evaluate the
sets the dimension of the
initializes the
sets the parent component of this component
returns the children of the children of this node
this method is used to handle the operation
returns the last child of this node
this method is used to retrieve the value of the parameter
initializes the
this method is called by the thread pool
this method is called when the operation is executed
registers a new element
stops the thread
this method is called by the server to register the server
starts the thread
registers a new object
fires the parameter changed event
returns the current state of the
launch a launch file
write a message to the output stream
returns the independent variable array
returns the of the current
notifies all registered listeners that the state changed
invoked when an action occurs
initializes the file with the given path
this method is called by the thread to run the
initializes the
initializes the hashtable
parse the xml content
this method is called when a new element is encountered
end the document
sets the attributes for the given component
this method is used to generate the results of the current
check the parent of the given object
this method is called when a new element is encountered
returns the content of the
end an element
this method is used to handle the object of the object
this method is used to extract the parent of the given parent
this method is used to determine the current component
returns the name of the given name
parse the xml file
returns the component at the specified index
adds a child to the list of children
checks the parent of the parent
sets the parent component of this component
sets the component to be used to render the component
returns true if the current thread is active
sets the active flag
sets the vector of the target
sets the attributes for the given component
this method is called when a new element is encountered
this method is used to check the parent of the parent
returns the output value
sets the inputs of the input function
sets the weights of the weights
processes the command event
sets the current direction
returns the current direction
returns the height of the image
returns the phone number of the phone
sets the station for the station
returns true if the ticket is a selling
returns true if the ticket is a full ticket
returns the number of active tickets
processes the specified action
show account detail
handle command events
processes the specified action
this method initializes account list
gets the add account
returns the account detail
displays the list of accounts in the account
show account detail
handle the commands
returns the selected record
handle the commands
returns the add card form
handle the commands
returns the current y coordinate of the current position
sets the current direction
returns true if the sprite is not armed
check if a layer is a valid screen
this method is called when the user selects a command
show the selected info
test service view
test service view
test service view
returns the second speed in seconds
sets the second speed of the second wave
sets the height of the image
sets the width
returns the audio stream
start the server
sets the audio stream
gets the value of the bitrate property
sets the bitrate
make the directory structure
sets the duration
gets the value of the property
sets the
sets the filename of the file
sets up the work queue
returns the video stream
sets the video stream to use
sets up the mon mon
returns the directory monitor
sets the monitor
shows the alert menu
resets the menu icon
creates a copy of the directory in temp dir
sets the log level
returns the level of the log level
initializes the tool
validate the database
performs a validation on the database
connect to the database
sets the print stream for this output stream
this method is called once for the console
returns the test environment
sets the test environment test environment
sets the driver
sets the command line
sets the url to the url
returns the admin user
sets the admin user
starts the console
returns the print stream for this class
get the next command
prints the help
print the help of the given print stream
handle the command
print the help of the given print stream
sets the command to the given string
creates a new
print the help of the given print stream
called when the quit command is quit
called when the user selects a
prints the given help
sends a character to the server
print the help command
handle the command history
print help options
sets the first input location
this method is called when the jvm
resets the first input location to the first location
returns the console
this method is called by the compiler to specify the classpath
returns the first location of the input location
print the current count of the current
sets the current document to the end of the document
adds a file to the list of files
returns true if the file should be kept in the cache
adds a new data set to the data set
execute the command
adds a new test to the set of data sets
pastes the document into the current document
returns an iterator over the datasets in this datasets collection
applies the template to the template
sets the keep temp files flag
returns the database
sets the database
execute the
append a string to the end of the document
this method is called by the thread pool to terminate the
process a transition from the given transition
waits until the request is ready to be started
gets the total bytes read
returns the total bytes written by this
sets the incoming output stream
sets the outgoing output stream
returns true if the field is a suppress binary
sets whether or not the output is binary
removes a listener from the list of listeners
returns true if the constraints for this component is disabled
sets the local port
returns true if the sync sequences are
resets the state of the machine
sets the remote host
sets whether or not the constraints for the given
returns the remote port
sets whether the sync sequences should be used
sets whether to truncate the use of
sets the remote port
create a new directory with the given directory
returns the file path to the file
returns the absolute path of the file
this method is invoked when the directory is complete
start the transition
called when the status of the status changes
returns a list of the listeners for the given machine
stops the service
notify all listeners that the state has changed
destroy the service
stops the server
fires the machine reset event
notify all listeners that the status of the status has changed
returns the delay between the
notify all listeners that the specified byte buffer has been
sets the delay between the
send a byte to the server
adds a recognizer to the
notify all listeners that the tunnel started
removes a from the
send a new connection to the server
this method is called when a stream is closed
adds a row to the current thread
initializes the property change listener
returns the most specific superclass for all the cell values in the
returns true if the is auto tail
adds the rows to the table
sets the auto tail flag
saves the contents of the table
this method is called to notify the panel that the next batch
returns the name of the action
sets the icon
paint the component
returns the icon associated with the icon
add a new row to the table
toggle the property value
increments the current position
returns the service
notify all registered service listeners that the service has changed
sets the service
show the tree
adds a listener to the listener
checks if the directory contains
builds the view
returns the total number of milliseconds since january 1 1970
sets the
returns the canonical path to the file
populate the
populates the graph panel
checks whether the given depth is allowed to be reached
returns a string representation of this object
returns the port on which the port listens for the port
sets the port on which the listen thread listens for ip port
returns the text area
returns the remote host
sets the remote host
returns the remote port
sets the remote port
gets the outgoing text area
creates the toolbar
creates the text area
creates the text area
returns the text area
description of the method
returns true if the file is a view
returns the component that is displayed in the table
initialize the
find the viewers that is currently in the document
this method is called by the framework to load the
opens a dialog with the given message
close the view
returns the icon for the specified icon
this method is used to print the current
test the directory monitor
tests millis rollover
test the seconds past
test the minutes past
test hours rollover
tests copying constructor
tests the classname classpath
test
sets up the test
tears down the test
test pattern input string
test set property value
test set value method
test the init method
p test for b print usage
sets up the fixture for example open a network connection
tears down the fixture for example close a network connection
tests the show tree cascading directories
test of show tree simple tree method of class file definition
tests the show tree extension
tests the show tree with a single
tests the show tree root
tests that the tree root
tree tree
test of show tree root with tree
returns true if the current thread is stopped
sets the maximum space allocated for this assembly
stops the processor
returns the m m settings btn property
returns true if the lock is in delay
sets the percentage
returns true if the is
sets the monitoring monitoring status
stops the server
returns the send
sets the send
sets the sensitivity of the
returns the alarm monitoring delay
set the alarm monitoring delay
sets the email adress
returns true if the playing is enabled
sets the playing enabled
gets the save video enabled value for this
sets whether the video video is enabled
returns true if the send directional mail enabled
creates a file name by the given time
sets whether the send media should be performed
gets the value of the file property
sets the file
snap to the current snapshot
returns true if the save pic pic is enabled
returns the image that is used to draw the image
returns true if the is
sets the
returns the media folder
invoked when an action occurs in the snap action
sets the media folder
returns the number of pictures in the current
this method is called when the play button is pressed
sets the number of pictures to send to the user
returns true if the service is monitoring
sets the monitoring monitoring status
invoked when an action occurs on the record btn
p stop btn
this method is called when the user selects the cancel button
invoked when an action occurs on the menu item
returns the next element in the content
returns the next entity in the current state
returns the next element in the iteration
skip past the past past the given past word
get the double value associated with an index
get the int value associated with an index
get the long value associated with an index
this method produces a string containing the contents of the string
get an optional object associated with an index
get the integer value associated with a key
get the long value associated with a key
append a value
returns an enumeration of the keys in this map
produce a jsonarray containing the names of the elements of this
removes the string from the string
append a value
append an object value
put a value in the jsonarray where the value will be a
put a value in the jsonarray where the value will be a
returns the value of the specified key as a double
put or replace an object value in the jsonarray
writes the contents of the jsonarray as json text to a writer
returns a string representation of this object
writes the contents of the jsonobject as json text to a writer


this method is used to create the connection

film
at startup create and show the main frame of the application
stops the sip server
call this method to handle a call to the call call
call
make a wrapper for a call
returns the active call info object
returns the sip call session progress
toggle the mute button
sets the trigger listener
show the arrow
sets the key listener for this dial
sets the tab for the left side of the given tab
sets the text of the left hint of the text area
sets the right tab list of the right
sets the right hint text
dispatches the event to the given
sets the file name
sets the file path
returns the file path
returns the uri of the download
update the account with the specified account
insert a new account in the database
returns the account at the specified account
returns the number of accounts in the database
insert a new code insert code into the database
returns the number of in the database
returns true if the string is a valid value
stops the ring
sets the value of the preference with the given key
sets the preference value for the given preference key
inserts a filter into the database
sets the value of the preference with the given preference value
returns the value of the preference as a string
returns the value of the preference with the given key
returns the call state
gets the remote contact
returns the value of the preference with the given key as a
returns the start connect
returns the value of the given key as a integer
returns true if the current state is currently active
creates the data in the database
update the filter
returns the default domain
returns true if the is
inserts a new message into the database
returns the name of the server
returns the password
returns the port number of the server
returns the name of the user
returns the protocol for this transport
returns the address of the proxy server
checks if the connection is valid for outgoing connectivity
returns the sip domain
gets the uri string attribute of the object
returns true if the connection is valid for incoming connections
returns the sip user name
checks if the field is valid
returns the time in milliseconds to wait for the
returns true if the client has an cancellation
returns the number of in the
returns the quality of the media quality
returns the number of in the current session
returns the clock rate of the
returns the enabled value of the current
returns the turn enabled
returns the enabled value
returns the action
returns true if the application has already setup the
checks if the port is valid
get system property
stops the sip stack
add all accounts to the database
unregister all accounts
returns the preference value
adjust the current level of the current thread
adjust the spectral volume of the
returns the phone number
exits the jvm
sets the system system
returns the length of the
load the file
increment the number of times that the has been visited
returns the number of that the current turn
sets the turn number of the first turn
returns the last turn time of the current turn
sets whether or not the source is visited
returns the terrain
sets the terrain
returns the owner of this
sets the owner of this
returns true if the terrain is
returns the north cell
returns the cell of the cell
stops the
returns the south cell
returns the west cell of this cell
returns the north east cell of the cell
returns the north west corner of this cell
stops the
returns the south east cell of the cell
returns the south west corner of the cell
start tracking the
start the
clears the grid
start the
returns the cell at the specified location
handle the new
returns the cell at the given coordinates
returns the cell at the specified coordinates
puts a cell into the map
sets the
sets the y position of the
sets the x coordinate of the x coordinate
sets the y coordinate of the y axis
returns the center of the given location
make a new row
removes the given value from the list of all the
removes the protocol specific protocol
sets the socket buffer size
returns the size of the send buffer
sets the receive buffer size
returns true if the range count is configured for this host
returns the size of the receive buffer size
sets the inclusive host count
returns the number of addresses in the address
decode the object using the specified object
sets the keep alive flag
returns the command id
returns the server socket factory
adds a listener to receive command events
removes a listener for receiving commands
notify listeners that a reply reply reply is received
send a command to the command
create the command support command
returns the command support for this command
returns a new thread that is the current thread
returns the next article in the list
initializes the socket
initializes the ssl context
extracts the prefixed data from the given string
this method is called when the noop command is executed
this method is used to get the list of active servers
test group name with spaces
compare two
returns null if the given file is null
the current
returns true if the given feature has a feature
returns true if the given feature has a feature
returns true if the is
sets the
sets the copy stream listener
returns the copy stream listener
sets the keep alive timeout
returns the timeout for the connection pool
sets the timeout for the timeout
returns the timeout for the control reply
returns a copy of the local copy of the local copy of
returns the exception handler
sets the exception controller
returns the propagate exception
sets the propagate exception
returns the code algorithm handler code that is used to handle the
sets the finally controller
sets the algorithm handlers
invoked when an action occurs
this method initializes this
this method initializes f3
this method initializes j panel
this method initializes j panel1
this method initializes j panel2
this method initializes j radio button
this method initializes j radio button1
this method initializes j radio button2
this method initializes j button
this method initializes j button1
this method initializes j button2
this method initializes j panel3
this method initializes j button3
this method initializes j button4
returns the number of times the counter was created
handles the action event
toggle the tab
toggle the tab
returns true if the given object is a status line
displays an error dialog with the error message
resets all tabs
returns the selected date
returns the selected day
returns the selected month
returns the selected year
stops the playback
returns the absolute uri of the given path
updates the basket with the contents of the basket
initializes the exit menu
exit the application
returns the length of the data in bytes
returns the frequency of the
returns the start chunk
returns the block start block
returns the sample offset
returns the info of this object
returns the maximum value of the first sample in the list
returns the number of channels
returns the minimum value of the first sample in the sample
returns the size of the block
returns the maximum possible maximum possible value for the current
returns the minimum possible minimum possible value for the minimum
returns the current sample pointer
returns the time at which the specified sample is in the sample
returns the current time in seconds
gets the header
close the file
seek to the specified sample
moves the current time to the specified time
gets the value of the property
returns the value of dialect
returns the code page code
merges the given with the given
returns the minimum time in seconds
returns the maximum time in seconds
returns the for the given time
stops the playback of the sound
stops the looping loop
stops the looping loop
plays the sound
returns the visible
returns the visible
invoked when the table model changes
cancel the current frame
process the action
this method gets called when a bound property is changed
this method initializes dir panel
this method initializes this
this method initializes east panel
this method initializes south panel
this method initializes list scroll pane
this method initializes j list
this method initializes save as button
this method initializes empty basket button
quits the application
disables the filter
disable the speaker filter
returns true if the object is a status
adds a new row to the table
this method is called to make the basket to be picked
selects elements of a given element
sets the value of the second column
sets the value of the given attribute
returns the row at the specified index
sets the font bold
clones the speaker
sets the font
resets all the and all the listeners
removes the speaker
select the file
this method gets called when a bound property is changed
invoked when an action occurs
saves the document to disk
this method is called when the menu item is selected
invoked when an action occurs
deletes the selected
resets the of the timeline
returns the format for the given row
sets the format of the given format and sets the value
sets the data for the specified range of values
returns the format for the
returns the absolute uri of the given path
returns the format of the selected column
sets the filename
sets the format for the label
sets the timeline format
returns the format label for the selected format
sets the format for the selected format
process mouse event
edits the tier
updates the basket with the data basket
change the tier order
selects the given class
exit the application
initializes the exit menu
after the selection is called after the start of the caret
removes the tier with the given row
returns the
sets the
removes the specified from the list of all the
returns the tier format table
moves the tier up down the one
sets the tier format table to the given table
called when the user has changed its state
sets whether the text area should be shown
removes an empty event
returns true if the text field should be displayed
returns the number of rows in the model
adds a tier to the current list of the
returns the number of columns in the timeline
show the selected values
returns the table model
notify the listeners that the row has changed
invoked after the edit cell is inserted
notifies all listeners that the column changed event
fires a selection changed event
returns the end position of the frame
fire a row inserted event
sets the position of the end of the frame
resets the model to its initial state
fires data reset event to all data
fires a format reset event to all the listeners
fires a row format event to all listeners
fires a cell format changed event
fires a column label changed event to all listeners
sets the current state of all the items in the model
fires a table row column
returns the version of the version
fires a row
sets the current row number
returns the application name
fire a area changed event
fire event added event
fires a cell span changed event
resizes the row height
returns the event associated with the specified cell
returns the width of the specified column
returns the tier with the given row
returns the table
adds a listener to the table
increases the width of the specified cell
returns the timeline at the specified location
the
this method is called when the media has been changed
this method is called when a cell is changed
returns the text of the given cell
sets the cell span for the specified cell
returns true if the cell contains the specified cell
clears the given
returns the lower triangular factor
returns the upper left corner of the specified column
fires a filename changed event
delete a row from the table
fires a media time changed event
makes the current and all the
removes all items that are not currently being deleted
invoked when the table model changes
removes the current time from the timeline
sets the timeline and the given code timeline code to the given
completes the timeline
completes the timeline
shifts the timeline by the given amount
saves the model to the file
scales the timeline to the specified scale
removes the specified gap between the and the
saves the current
removes all gaps from the list
this method is called when the user wants to jump to the
jumps to the end of the current element
finds the first selected event
searches for the next action
shows a dialog box
sets the special characters
sets the current color to be used for the
make a copy of this object
returns the start point of the object
sets the start point
returns the end point of the
sets the end point of the
returns the xml representation of this object
sets the offset of the current image
returns the number of sync points
write a to a file
creates a copy of the current object
returns the sync point at the given position
check if the file is already saved
writes the xml file
returns the sync point before the given point
gets the sync points
returns the width of the text
returns the sync point after the sync point
returns an xml representation of this object
returns the point that is associated with the given id
sets the format of the format
sets the sync points of the
writes the xml file to the xml file
returns the height of the image
returns the xml representation of the object
adds a new anchor anchor
updates the positions of the
returns true if the format is in the format
adds a sync point to the list of
propagate the format to the
returns the number of lines in the tree
returns the line at the specified position
adds a line to the list of charges
returns the xml representation of this object
returns the height of the font
returns the height of the image
returns the break type
returns the xml representation of this object
propagate the format to the
returns the height of the given code
sets the break type
returns the width of the image
returns the string for the given
returns the label
returns the width of the specified chunk
returns true if the info has been modified
sets the label
returns the width of the given
sets the information
returns the string for the given
returns the width of the image
returns an xml representation of this object
returns the xml representation of this object
returns the information
returns the height of the image
returns an xml representation of this object
returns true if the bundle is a bundle
this method is called when the output is
returns the position of the current selection
returns true if the given point is before the given point
sets the format of the current format
this method is called by the
returns the xml representation of the object
returns the width of the column
returns the number of chunks in this collection
returns the position of the selected text
returns the chunk at the specified position
returns the number of formats
checks if the given id is already in the list
returns the format at the specified position in the list
returns the format for the given id
adds a format to the list of elements in the list
removes the given format from the list of positions
remove a from the
adds a link to the link
adds a chunk to the list of
writes the xml file to the xml file
sets the links
returns the xml representation of this object
returns true if the link has links
the of the
returns the first link of the link
returns the string representation of the
returns the height of the image
returns an xml representation of this object
returns true if this is a bundle
returns the string for the given
removes the empty lines from the list
returns the xml representation of the object
creates a copy of the current object
sets the property to be used for parsing
returns the position of the text area
returns the height of the font
returns the height of the image
returns the descent of the font
returns the xml representation of this object
this method is used to convert the format to a format
this method is called when the system is to be packed
returns the property
returns true if the given point is chunk of the
returns true if the given id is part of the ending of
returns the chunk starting at the given point
returns the chunk of chunk ending at the given point
removes the specified chunk of chunk
updates the positions of the current
returns the current position of the selected element
returns the first column visible
returns the last visible column
launches the browser
this method is called when the user presses the end of a
this method is called when the player has been updated
insert the methods description here
setup the panel
sets the head
returns the xml representation of the xml element
returns the current selection as a new
make a copy of the current object
sets the medium
returns the value of the attribute specified by the attribute name
sets the attribute name for the given attribute
returns the number of attributes in the list
returns the xml representation of this object
creates a new instance of code basic code
the of the
creates a new instance of the
creates an empty copy of the current basic
returns the body of this code code
sets the body
checks the body of the method
returns the of the given
sets the speaker
make a new
this method is used to display the display names
returns the common timeline for the timeline
sets the timeline
returns the
the given
sets the
returns the number of events in the list
returns true if the specified id is already in the list of
creates a new timeline instance
returns an xml representation of this object
returns the timeline at the specified position
returns an xml representation of this object
returns the timeline with the given id
make a copy of this object
returns a distinct version of this
checks the for the current user
returns the of the timeline
start the auto save thread
removes the specified event at the beginning of the list
returns the tier at the specified position
returns the number of timeline items
returns true if the timeline is
returns the tier tier with the given id
swap the
normalizes the white space
adds a new timeline to the list of timeline items
stops the thread running
sorts the timeline
this method is called to place the
adds a timeline to the list of timeline
inserts a new timeline into the timeline
sets the type of this object
sets the category
sets the display name
returns the description of the speaker
inserts the given item into the timeline
make a copy of this object
returns the id of the given
creates a new empty copy of the current object
returns an xml representation of this object
inserts a new code code in the specified
writes the xml file to the output stream
checks the given timeline
returns the id of the given
returns the number of tiers
inserts the given item before the specified index
this method is used to store the for the given tier
insert a new tier at the given position
remove a user from the
this method is called when the timeline is
returns the of the
removes the selected from the list
removes a gap
removes all events from the list of events
removes the timeline at the specified position
removes all the from the timeline
returns true if the timeline is
returns true if the is before the given address
calculates the span of the given span
returns true if the given event is
returns true if the current timeline is consistent
returns the xml representation of the object
returns true if the current object is consistent
make a copy of this object
returns the number of
adds a speaker to the
returns the
creates a new instance of the meta data
this method is called when the user has complete the specified amount
makes a copy of this event
sets the project name
sets the start string
gets the value of the name property
sets the end
sets the name
sets the description
returns the file referenced by this file
returns the file referenced by the extension
removes all the timeline items from the timeline
sets the file referenced by the url
make a new copy of this object
checks the timeline
returns the xml representation of the object
returns the meta info
sets the name of the
sets the meta information information
sets the sex
gets the languages used for this language
make a copy of this head
sets the languages used for this language
returns the meta information
sets the meta information
sets the comment
returns the current language
gets the
sets the
sets the code code
returns a copy of this object with the same time as the
returns the xml representation of this object
returns the languages
sets the
returns the time as string
returns the that is used to validate the
returns the time as string
sets the speaker information
sets the time
sets the comment
returns the xml representation of the object
make a copy of this language
adds a language to the list of language
returns the body of this body
sets the body
returns the xml representation of this object
this method initializes this
this method initializes j content pane
this method initializes card panel
this method initializes task panel
this method initializes files
this method initializes
this method initializes display
this method initializes target
this method initializes publish
this method initializes files button
this method initializes button
this method initializes target button
this method initializes summary button
this method initializes table
this method initializes cancel button
this method initializes publish button
this method initializes summary editor pane
this method initializes save publish settings button
this method initializes files table
returns the element at the specified index
this method initializes reset files button
this method initializes j
this method is called by the digester to show the page number
opens a file to open a file
checks if the given element is a regular expression
sets the
save the document
save the document as modified by the user
this method is called when the user selects the tag
sets the given tag to the current state of the text
sets the font
test of get attribute descriptors method of class org
test of get data descriptor method of class data
adds a node to the end of the list
trims the capacity of this code cache code object to be the
increases the capacity of this tt capacity tt instance if necessary
returns the display name
returns the system identifier for this system
returns the value of the node as a string
test of get base name method of class org
returns the value of the attribute specified by the local name
test of get bean info name method of class org
returns the value of the attribute specified by the id value
returns the string value of this node
test of get bean info names method of class edu
generates a unique id for the current
test of put method of class org
generates a unique id for the
copies the contents of the input stream to the specified
copy the contents of the input stream to the specified
returns the name of the
returns the string representation of the current value
returns true if the user wants to be able to determine whether
returns the owner element of this element
unsupported operation in this implementation
returns the value of the property
returns the system identifier for the document
returns the hash code value for this object
trims the capacity of this code node code to the current
increases the capacity of this tt capacity tt instance if necessary
returns the uri of the namespace
returns the number of nodes in the list
copies the given code code to the specified
returns the parent node of this node
returns the value of the attribute specified by the attribute
returns true if the node is empty
returns the document root
returns the node at the specified index
adds a node to the list
clears the list of all the nodes
returns the value of the attribute specified by the uri attribute
trims the capacity of this code node code to the current
returns the name of the document
increases the capacity of this tt array list tt instance if necessary
returns true if this node is identical to another node
returns the prefix of the prefix
returns the length of the node
sets the pool
returns the number of elements in this collection
returns the name of the node
sets the prefix
returns true if the node is empty
returns the prefix of the prefix
returns the local name of this node
returns the local name of the local file
copies the attributes from the specified code code to the specified
returns the namespace uri of the element
returns the node at the specified index
returns the name of the pool
returns the type of the document
adds the specified element to this set
returns the value of the specified attribute
returns the prefix of the prefix
sets the prefix to be used for the
clears the list of all nodes
returns the uri of the resource
returns the uri of the namespace
returns the parent node of this node
sets the base id of the system
returns the attribute node by name
returns the parent node of this node
returns the prefix for this namespace
not supported by this implementation
returns true if the given attribute is already in the list
returns the document root
returns the local name of the local file
returns the name of the node
returns true if the node contains a child node
returns the unparsed unparsed entity name
removes the specified attribute from this code code
unsupported in this implementation
returns true if this node is equal to another
sets the value of an attribute
removes the named node from the list
returns true if this node is equal to another
returns the named node with the specified name
sets the node value
returns the length of the sequence
returns whether this implementation supports the specified
returns the uri of this resource
returns the document root
compare this node to another
returns true if this node is equal to another node
returns the length of the list
returns the id of the player
sets the my id
returns the name of the
sets the name of the
this method will be called from the persistent storage
returns the persistence manager
remove all memory
compares this object with another one
returns the type of the type
returns true if the macro is
returns true if the given character is whitespace
gets the value of the valid link types property
returns the original command name
returns the source of the event
returns true if the link is a link
returns true if the relation is a relation
prints the given document
returns the link label
prints the license
cuts the selected item in the list
returns the text item that is a link to this object
updates the list of messages
returns the item that is currently selected
returns the value of the option at the specified index
returns a short string representation of the object
returns the text of the item in the tree
gets the value of the copyright year property
creates a url for the given url
creates the guide node
creates a new document
returns the guide for the given file
returns the target
returns the local file local file
returns the name of the target node of the target
returns the link command
returns the hash value of the given object
tests the of a file
delete all files that are deleted from the given folder
returns the style file
deletes a given file
returns a string containing white space
returns the white space in the given space
returns the name of the given node
returns the name of the node that is null
delete a file
creates a directory with the specified directory
sets up the action table editor
copy the contents of the input stream to the input stream
returns the unique name of the node
returns the name of the given uri
shows an error message
this method is called from the classpath to read the
shows an error message
reads a image resource from the specified image name
returns the page uri
returns the source of the source
returns the source file
returns the frame frame
returns the
checks if the plugin is an extension
load the extension
returns the session
reads a signed integer from the stream
returns the connection
reads a string from the input stream
returns the torrent table model
returns a proxy for the client
stops the connection
returns a proxy for the server
starts the
returns a global client object
shuts down the server
returns a proxy connection client
returns the file client
notify listeners that the session has been changed
returns a proxy for the client
adds a listener for session state events
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated axis2 error handler
auto generated setter method
auto generated setter method
auto generated setter method
returns the
auto generated setter method
auto generated setter method
auto generated setter method
auto generated setter method
discovers device discovery device
delete the device discovery service
reads the next instance of the file and returns it
returns the interval in which this interval is
sets the interval
sets the labels
sets the labels set
gets the
sets the
returns the of the
sets the
sets the value of the classified class property
returns the classified class
this method will be called by the default
returns the command id
returns the object at the specified index
the data in the data stream
returns the value of the specified index
returns the value of the specified element as a boolean
creates a string representation of the
returns the number of bytes in the data array
this method is called by the server thread
this method is called when the server is closed
returns the number of connections in the database
this method is called when the client disconnects from the server
returns the free game id
send a queue request to the queue
reads the packet from the socket
returns a connection to the database
send a packet to the server
returns a connection with the given id
this method is called by the client when the connection has been
sends a message to the server
sends a packet to the server
connects to the server
sends a packet to the server
this method is called when the client disconnects from the server
sends a pending request to the given packet
called by the server when a connection is closed
send a chat packet to the server
send a packet to the output stream
sends a chat message to the server
creates a new game
sets the display mode
sets the display mode
adds a new to the
updates the list
returns the from the given id
gets the value of the property
sets the pid
sets the phase of the game
returns the player state
returns the hand of the hand
returns the in play
returns the library used to access this object
gets the value of the property
this method is called to handle a command
at startup create and show the main frame of the application
sets the color of the color
opens session id
removes the session identified by the specified session id
this is the entry point method
checks the first run of the current user
sets the login screen
sets the first run screen to the first run
sets the home screen
this method is called when user logout
check login and login password
inserts the given child into the set
returns the pattern data
sets the container
returns the dialog settings for this dialog
reads the configuration from the current configuration
writes the configuration to the current state
adds a property to the target property
returns true if the user is a folder
returns true if the type is a reference
returns true if the action is a action
returns true if this type is
returns the open for the specified index
returns the name of the display
checks whether the folder can be shown in a folder
checks if the given file is visible
this method initializes j menu item
returns the action at the specified row
inject dependencies into the project
test of get bean factory method of class bean
returns the image that is currently loaded from the image
populate the list of the project summary
finds the project with the specified id
returns the percent completed
returns the percent completed
returns the image of the view
returns the short description of the task
returns the current completion completed
returns the image for the image
returns the selected view
returns the warning image
returns the image of the current image
returns the day of the current day
returns the links url
login to the user
applies the dependencies to the project
returns the target of the project
sets the domain list mapper
test of get bean factory method of class
inject the given set of dependencies
removes the given project proxy from the project
tests the get bean factory method
returns the option value for the given id
returns the number of projects
returns the number of stories in the project
returns the number of iterations
returns the number of
returns the current iteration
this method is called by the form
select a story dto by its id
select a task
returns the number of rows in the document
sets the number of rows to display
returns the number of columns in the current page
sets the number of columns in the
returns the table attributes
sets the list of
returns the value of the code cell attrs code
sets the cell attrs
returns the caption of the page
sets the caption of the component
at startup create and show the main frame of the application
at startup create and show the main frame of the application
resets the crc
update the crc 16 bit 16 bit 16 bit 16 bit 16
update the buffer
update the contents of the specified byte array
sets the encoding of the encoding
prints out the help of the help
returns the checksum of the given file
returns the rtf content type
hides the specified element
show the element
returns the text in the current page
called when a is clicked
invoked when a new document is clicked
called when the document is loaded
called when a load is done
called when the load finished
called when a new done document is done
called when the document is finished
fired when a document is clicked
called when a document is saved
called when a document is done
load the library from the current library
invoked when the user modifies the value of the document
notify the termination event listener
notify the event listener
goes to the page at the specified index
returns the name of the node
returns the number of frames in the frame
returns the locale of the tree
finds the application properties
returns the license that was selected
returns the first completed state of the wizard
returns a string representation of this object
returns the text range of the text
returns the paragraph properties
returns the properties of the code char code
returns the text of the paragraph
sets the text to be displayed in the text area
returns true if the cell reference contains the cell reference
returns true if the given column is reference to the table cell
returns true if the given column is after the given column
returns true if the cell at the given row is the same
returns true if the cell reference contains the given row
returns true if the cell contains the specified cell
returns the expression of the expression
revert to the original model
moves the cursor at the specified position
returns the page number of the page
returns the start text range of the text range
the client wants the client is received from the client
returns an iterator over the values of the given variable
close the socket
resets the parser
removes the filter from the given source
returns the action for the given key
registers the given nodes in the tree
returns the action with the given key
sets the view
invoked when a procedure is being fired
initializes the query
returns the preference service
selects the given attribute
returns the domain of the domain
initializes the model
returns the root pane that the decoration is responsible for showing
returns the elements class
refresh the view
sets the value of the domain property
removes all the buttons from the application
select the parameter value
updates the entity with the current entity
this method is called when the relationship is selected
returns the class of the element
replace the value of the parameter with the given name
this method is called when the relationship is selected
selects the attribute value
returns the elements class
creates a combo box model
updates the state of the entity
sets the domain
returns true if the component is currently selected
sets the data node
sets the value of the unselect attributes
returns the object that is currently being used by this object
returns the action with the given key
this method is called when the project is opened
sets the text
returns the last directory of the last directory
this method is invoked when the user selects the selected action
returns the domain of the application
returns true if the path is in the classpath
hides the menu
report an error
centers the window on the window
adds the given action to the last
enables disables the component
stores properties in the given map
validate the validation
returns true if the given file is accepted by this filter
returns a description of the filter
returns a description of the file type
cancels editing the editing of the editing
notifies all listeners that the tree selection has changed
adds a file to the list of resources
updates the templates for the given domain
loads the preferences from the file
returns the domain preference domain
returns the domain of the preference
returns true if the path is enabled
this method is called by the controller when the entity is created
creates a new entity
returns true if the path is enabled
create a new entity
returns the preference domain for the current domain
builds the project configuration
returns true if the given path is enabled for the specified path
closes the project
checks if the controller is on close
performs the action
returns true if the path is enabled
returns true if the path is enabled
returns true if the path should be enabled
returns the data map for the specified name
returns true if the given path is enabled
returns true if the path is enabled
removes the db entity from the database
removes the current query
returns true if the path is in the classpath
returns the data node of the domain
removes the procedure from the map
open the project
creates a new data node
returns true if the path should be enabled
saves all the project settings
start the model
creates the query
start the application
start the application
start the application
builds the text for the validation text
returns the excluded tables
prepares the generator for the database
generates the for the dialog
creates a new file from the project
this method is called by the framework to initialize the
this method is called when the model changes
handle the control
commits changes to the model
changes the view to the current model
returns the validation string for the given entity name
returns the default entity filter
returns the message
returns the severity of the severity
start the view
this method is called to create a merger that can be edited
returns the name of the relationship display
cancel editing the current row
sets the target object for this model
returns the object targets
called when the entity has changed
called when a entity has been added
called when a entity is removed
creates a new adapter for the specified class
creates a new data source object
creates a new data source action listener
action to make a copy of the selected object
removes the action from the data source
change the current jdbc driver
configures the database generator
binds the dialog to the given component
returns the log file
rename the domain name
returns a domain of the given class
returns the preference for the current preference
returns a preference for the given class
returns the of the nationality
sets the persistence state
returns a list of all the domain values in the list
returns a detail preference
returns true if the master factory is
returns a domain with the specified name
returns a map of all the details for the given class
stops the shutdown process
initializes the preference domain
initializes the schema
returns the size of the cache pk
start the timer
returns a action for the given query
sets the domain preference
returns the properties of the domain
returns a action for the given query
creates a new instance of the default factory
returns the type of the table
configure the extended type map
generates an entity for the given entity
returns a action for the given query
returns the primary key of the given entity
creates a pk generator
returns a qualifier translator for the given query
factory method to create a pk generator
load the adapter from the database
returns the for the given action
returns the sequence of the given entity
creates a sequence string
removes a sequence string from the database
returns a qualifier translator for the given query
returns a list of all the sequences that are older than the
returns a action for the given query
returns a qualifier translator for the given query
returns true if the current datastore allows the dialect to override the
create the table column table
returns a list of statements that are dropped on the database
returns the schema name for the given entity
returns a action for the given query
creates a new table
creates a new table
creates a structured adapter for the database
creates a new primary key
returns the batch terminator
configure the extended types
factory method to create a pk generator
drops the given node in the database
creates a new foreign constraint
finds the adapter url
writes a blob to the stream
returns a action for the given query
writes the clob value
configure the extended type
writes a clob value to the given clob
create a new primary key generator
drops the given node from the database
select a query
returns a qualifier translator for the given query
returns a action for the given query
returns the name of the entity that the entity is mapped to
returns a action for the given query
returns a list of all the sequences that are older than the
returns a list of all the sequences that are older than the
configure the extended types
returns a action for the given query
configure the extended type
returns the type of the table
factory method to create a pk generator
returns a qualifier translator for the given query
creates a table
initializes the configuration with the given configuration
execute a update update update statement
returns the data context
create the table column table
get the data source info object for the given name
returns the driver information
creates a new data source info object from the given properties
sets the data context
extract the names of the properties from the properties
adds a new path to the classpath
load the given location from the given location
adds a resource path to the resource path
returns the delegate
returns the entity that is currently being used by this entity
returns true if the application can be configured to be loaded
returns the primary key from the database
loads the domains from the given domains
called when the midlet is started
returns the resource locator for this item providers resources
sets the resource locator
receive notification of character data
store the current domains
returns the data source for the given location
returns the data source for the given location
request that the request is destroyed
returns a qualifier translator for the given query
creates a new data node
called when the context is initialized
adds a resource path to the filesystem
adds a new filesystem path to the filesystem
configures the logging configuration
returns a new configuration object
sets the configuration
returns true if the file is configured to be loaded
returns the configuration
adds a query to the list of statements
sets the project file
route the given query
returns the project directory
returns the domain configuration name
creates a data node for the given name
returns true if the lock for optimistic locking
sets the domain configuration name
returns the result set of the
returns the list of failures
returns the current qualifier
returns the list of failed map
returns a object that is used to the
returns the attribute of the spok object
returns the failed map of the adapters
returns the domains
returns the object for the given
checks if the job has failed
initializes the given properties
returns the status of the configuration
routes a query to a router
returns the data source factory
returns the object for the given
initialize the properties with the given properties
returns the level of the log
adds a domain to the domain
sets the relationship between the given type and the given value
sets the log level
returns the domain of the specified domain name
returns a query with parameters
unset the relationship between the given relationship
returns the domain of the domain
returns a string representation of this object
removes a domain from the domain
returns the hash code of the object
returns a collection of all domains
returns the object id
returns true if the parser should be ignored
adds a list of to the list of
sets the ignore load failures attribute of the inner node object
adds a ordering to the table
this method is called when the user has finished
returns the load status
adds a sort ordering to the given sort order
sets the status of the load
returns the loader delegate
gets the relationship for a resolver
returns the result class name
returns a string representation of this object
fire a domain event to all listeners
returns the list of
returns the class of the given class loader
returns a string representation of this object
sets the result class name
returns the hash code of this object
returns the root of the tree
sets the root of the tree
returns true if the is
returns a collection of all the nodes in the list
sets the
returns a collection of all disjoint nodes in this collection
returns a collection of all the nodes that are children of this
traverse the
sets the data view locations
add a collection of to the
compares the two arguments
this method is used to extract the of the given host
shuts down the domain
returns true if the tag is a
returns the object for the given
p an entity
returns the children of this node
returns the index of the fetch index
returns a collection of
generates the class of the entity
initializes the properties with the given properties
returns an iterator over the elements of the pipeline
returns the object context
returns the package name
sets the package name
add a prefetch to the prefetch
returns the super package name
sets the super package name
sets the super package name
add a collection of to the
returns the class name of the class represented by this class
returns the package name of the sub package of this package
sets the class name
clear the
returns the super prefix
fire query event
generates the
checks if entity entity is in entity
sets the super prefix
returns the property
checks if the entity entity is accessible by the entity
returns the package name of the super package
returns true if the entity contains all the properties contained in this
fire a procedure event to all listeners
returns a string representation of the variable with the given name
returns true if the relationship contains any relationship properties
returns true if the package name is a package
sets the data
returns true if the package name is a package
executes the generation of the class
returns the prefix of the class loader
returns the entity
validate the attributes of this object
returns true if the model provider is being clipped
sets the properties
fire a procedure parameter event
sets the value of the super class name property
returns the name of the class that the given class is
convert the constant pool class to a constant
generates the class for the class
sets the template
returns the property
sets the template to be used to render the template
format the type of the given type
returns true if the list list is a list list
returns the fetch limit
returns true if the class is using the package name
sets the parent task
returns the entity
sets the fetch limit
returns the super class name
generates a class for a class
creates a sql string for the query
adds a new attribute to the list of attributes
creates a new prepared statement
returns true if the file is already modified
initializes the statement
returns the template for the template
sets the parameters
this method is used to extract the value of the document
sets the qualifier expression to the given qualifier expression
this method is called when the database is broken
returns the template for the template
returns the super class name
returns a list of all the parameter values for the given query
process the column
sets the qualifier expression
append the attribute value pairs to the given string
creates a sql string
returns a list of all the parameter values for the given query
returns the parent obj entity name
returns the columns
returns the order by column list
returns the query assembler
sets the parent obj entity name
add a prefetch to the prefetch
build a list of the group objects
returns the page size
returns true if the value of the
add a collection of to the
sets the page size
process a column
sets whether the translate parent is translated
returns true if the inherited method is declared to
returns the user properties
sets the inherited attribute of the object
this method is called when a relationship is added
sets the list of entities
creates a new
process a termination cycle
create a new child context data context
returns the engine
returns the root inheritance tree
returns true if the table supports aliases
returns the first first rows of the first list of query results
returns a list of all queries
executes the query and returns a new
executes the given sql statement that is thrown if the query is
this method is called when the next is done
returns true if the result is
returns the parent of this query
sets the parent of this channel
compares this object with the specified object for equality
returns the number of queries in the query result
check the next row in the table
returns true if the next row has a row
returns the next data row of the current row
returns the width of the data row
returns a list of all rows in the table
returns the domain data domain
returns the message
returns true if the query is
returns the next object id of the given entity
returns a collection of all the data maps
adds a data map to the map
adds a map to the map
adds a snapshots to the snapshots
returns the data maps
returns the snapshots that are currently displayed in the current list
returns a collection of all the nodes that are currently being viewed
returns the context data for this context
prints the exceptions stack trace to the given print writer
returns the global list of all exceptions
returns the query to be used to execute the query
returns the level of the code logging level code
sets the logging level of the log entry
creates a data context for the given context
this method is called when the query is loaded
executes the next generated query
creates a new transaction
returns a list iterator of the list of elements
returns the next map id
returns the data node for the specified name
returns the width of the table
returns a collection of all the objects that are registered with the
returns the results of the query
returns the node
clears the selection
gets the value of the obj entities for delete property
select a new result set
gets the value of the obj entities for insert property
gets the value of the obj entities for update property
returns the object that is informed that this object is registered
returns the entity sorter
returns the snapshot of the data row
sets the entity sorter
shuts down the cache
extract the template string from the database
gets the value of the disable line breaks property
returns the default class name for the given type
returns the qualified column name
returns a list of all rows in the table
returns true if the query has generated keys
returns the next data row of the iteration
guesses the type of the given type
returns the next object id of the given entity
this method is called by the framework to set the index of
executes the query on the specified query
override this method to override the superclass to override superclass
returns the width of the data row
binds the binding to the binding context
check the next row in the table
creates a translator for the given connection
the of the table
initializes the default types
returns the label of the label
returns a collection of the factories
removes a factory from the factory
registers a new type
returns the type of the given class
returns the type of the given class
returns the data object
returns true if the fault is a fault
invalidates the object list
creates a new object with the specified class
returns the meta data for this database
creates a new object object
returns a list of all catalogs in catalogs
returns a list of all schemas
returns a list of all the table types
load the db relationships
invalidates the cache
releases the pool
deletes the object from the database
notify listeners that the connection has been closed
returns a string representation of this object
returns a string representation of this object
returns the message label
sets the channel
creates an object id object
returns the entity resolver
shuts down the server
returns the event queue
lookup a data node by its data
commit changes to the current transaction
returns the local subject of the subject
removes the given listener from the list of resources
deletes the object from the database
returns the local collection of the local
creates a new object with the specified object
returns true if the class is valid
executes a query and returns a list of query
rolls back the changes to the transaction
reads a property value from the property
this method is called by introspection when a value is made
returns the accessor for the property
shallow copy all of the superclasses of the specified object
this method is called when a transient object is detached from the
this method is called by the reactor to cleanup the
this method is called when the parent changes
shuts down the server
sets the value holder object to be used for the object
creates a new value holder for the given object
sets the value holder object to be used for the object
called when the event is fired
returns true if the user can read the user
returns true if the user can write the user
called after the user has been created
traverse the tree
returns true if the file is undefined
returns true if the upgrade is needed for the upgrade
traverse the project
traverse the tree
gets the value of the upgrade messages property
commits the changes to the current state
returns true if the file has renamed files
returns a list of files in the project
traverse the query path and executes the query
returns the validator
traverse the iterator on the classpath
finds the file that is the specified file
called after the project has been created
append the given object to the path
returns the object
returns the driver file
returns a list of all children
returns the project that contains the given object
returns the root of the tree
resolves the file name
this method is called when the user presses the save button
returns the object that is currently being used by this object
gets the value of the load status property
returns the parent of the path
returns true if the file can be created
sets the driver file
sets the project file
returns the location suffix for the location
returns the data source factory
sets the configuration
returns the location of the object
returns the location of the location
returns the delegate delegate
returns the project directory
returns the location suffix for the location
sets the delegate
returns true if this object can handle the object
returns the path to the project
synchronizes the location of the current location
this method is called when the user wants to save the current
resets the validation results to its initial state
returns the maximum severity of the severity
returns the main file
returns the file where the project is being created
returns the validation results
returns the old location of the file
returns an iterator over the tree nodes in the tree
save the current file to the file
saves the undo history
returns the project
returns the alt project file
returns the destination jar file
returns the file that is the parent of the given file
returns the jar file
sets the alt project file
sets the destination jar file
this method is called when the save button is pressed
sets the jar file to use for the source file
cleanup the directory
performs a query on the query
returns a string representation of the given position
validates the project
synchronizes the entities with the given entities
returns a collection of the given entity objects
prints the map
prints a collection of
print a property
executes a query and returns the query response object
executes the sparql query
sets the context servlet context
executes a query and returns a list of query
finds the resource with the specified location
add a path to the list of paths to be added to
puts a value in the map
sets the root of the data map
returns the entity that is associated with this entity
adds a sql to the given sql statement
p encodes the given xml file
returns the parent entity of this entity
performs query to discover queries
sets the parent entity
p encodes the specified xml file
returns a list of all the attributes
returns a list of all relationships
returns the entity that is associated with this entity
returns the schema entity name
returns the catalog
returns the target attributes
returns the attributes of the source
returns the parent entity name
removes a db relationship from the database
sets the parent entity name
returns the name of the target
creates a new descriptor for the given entity name
returns true if the relationship is a primary entity
p encodes the specified xml file
returns the name of the target
returns the qualifier expression of the given entity
returns the entity matching the given entity
get the query
returns the class of the class
this method will be used to print the
returns the entity resolver for this entity
returns an attribute of the database
sets the value of db attribute
returns the name of the attribute that this attribute belongs to
returns a collection of all the database entities
returns a map with target snapshot
sets the attribute name for the database part
returns a map of snapshot of the given snapshot
returns the attribute object
returns a snapshot of the matching snapshot
returns a collection of all the attributes
sets the to many
adds an attribute to this attribute
returns the entity resolver
returns the path to the database relationship
removes a call parameter
returns a list of all the call parameters
returns the full db version of the database
get the call out parameters
returns a collection of all the
returns the result of the query
sets the db relationship path
returns the tree for the given entity
sets the transaction events enabled attribute of the object
returns the class of the class specified by class loader
returns the query
returns the class of the class
returns a list of all the parameters
returns the relationship between the current entity and the target
gets the value of the expression spec property
sets the expression spec
returns the attribute with the given name
returns an object that is the entity that is used to store
sets the declared property of this property
removes the property declared in the property declared in the given property
returns the class descriptor factory for this factory
returns the relationship for the relationship
compiles the properties
sets the factory class descriptor factory
add a relationship to the relationship
compiles the attribute
returns a string representation of this object
returns a map of relationship objects
returns the procedure associated with this entity
returns the relationship between the relationship and the relationship
returns a collection of all relationships that are contained in this
returns a code sorted map code containing the attributes of this map
returns a collection of all attributes
returns the last path in the path
returns an iterator over the path components of the path
sets the value of the has super class property
returns true if the class is a super class
sets the value of the is client entity property
returns true if the entity is a client entity
sets the entity property
returns the value of is abstract entity
returns the query for the given query
compares this node with another one
returns true if the value of the variable is
returns a collection of all registered listeners
applies the given graph to the graph
undo the change
returns the resolved object of the given class
returns the resolved object of the given class
returns the object that is currently being decorated
returns a map of the id of the current map
creates a shallow copy of this expression
creates a shallow copy of this expression
returns the value of the attribute specified by the attribute name
returns the declared attributes declared in this class
creates a shallow copy of this expression
returns the replacement id
creates a new binary copy of this binary expression
returns the number of operands of the operand
sets the replacement id
creates a shallow copy of this code expression code
creates a shallow copy of this code expression code
creates a new object with the default id
returns the expression that is associated with the given parameter
creates a shallow copy of this code code
returns a new expression with the given parameters
returns a string representation of this object
returns the graph manager
creates a shallow copy of this code expression code
creates a shallow copy of this code expression code
returns a collection of all the entities
returns a shallow copy of this code code
creates a shallow copy of this code expression code
creates a shallow copy of this code expression code
creates a shallow copy of this code expression code
returns the relationship between the relationships
creates a shallow copy of this code expression code
creates a shallow copy of this code expression code
creates a shallow copy of this code expression code
creates a shallow copy of this code expression code
returns a collection of all the entities in this database
creates a shallow copy of this code expression code
returns the attribute for the given attribute
creates a shallow copy of this code expression code
creates a shallow copy of this code expression code
returns the database entity database entity
returns the objects that are not handled by this filter
returns the relationship for the given relationship
returns the name of the expression
creates a shallow copy of this code expression code
creates a shallow copy of this code expression code
returns a collection of all the targets of the given collection
returns the entity for the given class name
creates a shallow copy of this code expression code
removes all the attributes from the database
creates a shallow copy of this code code
returns the entity entity for the given entity name
creates a shallow copy of this code expression code
creates a shallow copy of this code expression code
this method generates a comma seperated representation of the attribute
creates a shallow copy of this code expression code
evaluates the given entity
returns a collection mapped to the given entity
creates a shallow copy of this code expression code
returns a shallow copy of this code code
creates a shallow copy of this code expression code
creates a shallow copy of this code expression code
p appends the given event to the list of logging
configures the logging configuration
creates the default generator
execute the task
execute the task
process the project
load a data map
load the data map
validate the attributes
this method is called to determine the list of entities
filters the items in the list
sets the destination directory
sets the overwrite file
sets the
sets the adapter for this adapter
sets the template
sets the
returns a collection of all the commands
sets the version of the version
sets the encoding
creates a new server event bridge
sets the output pattern
sets the mode
initializes the service
destroy the service
returns the domain channel
returns the session server session
creates a server session
initializes the stack
initializes the event bridge parameters
initializes the servlet
mark the dirty state as dirty
sets the
sets the home attribute of the object
sends a message to the server
sets the
invoked when an attribute changes
returns the property name for the given property mapping
sets the object to be used for this object
sets the service object
called when an attribute is added
removes the parent node from the stack
sets the
returns the class
returns the connection info
called when an attribute is removed from the session
returns the serializer factory for this serializer
sets the value of the send collection type property
invoked when an entity changed
invoked when an object is added to the model
called when an object is removed from the model
decode an element
find gallery gallery
adds a gallery to the
returns the visit data context
sets the error message
appends the error message to the error message
appends the html to the html page
checks if the given text contains a message
returns true if the error message has an error message
reset all properties to their default values
reset all properties to their default values
validate the properties
reset all properties to their default values
handle an entity
invoked when an attribute has been added
called when an attribute of the database has changed
entry changed method
tests the
tests the configuration of the configuration
tests that the select like operator is not allowed
tests that the select like operator is not allowed
test of do method of class
test creating a query with a single
test of do method of class
test of do method of class
returns a string containing the result of the given
test the build query
update the row with the given id
test prefetch query
test select query
test sparql query
test the
tests the
populate the with the
creates a new instance of the given context
create a new context for the server
returns the executed address
tests the fetch functionality
test that a literal expression query works correctly
test the of the database
test that verifies that the correct address is a valid address
test the
tests the get query method
test that department employees are not permitted
test that unrelated classes
returns the number of objects in the given class
test that the select query with a no query parameter
test the method is derived entity
the template
test the code derived entity code method
returns the access stack adapter for the specified adapter
gets the value of the unit domain property
deletes the test data
creates a new data node
creates the schema for the schema
the data in the tree
returns the test directory where the test is created
sets the query to be used for the query
returns the context data for the given context
creates a test data
returns the access stack
build the access stack
test has changed
tests the has changed method
test the
test decode mapping
returns the model
returns the stats for the given domain
returns the default blog
validate the given code code
returns the entry that is associated with this blog entry
returns the depth of the current thread
returns the count of all the children of this entry
returns a list of the discussion discussion
returns true if the entry is a child of this entry
this method is called by the code code method to
checks if the given entity is a valid data
filters the given entity
called when the user selects a page
called when the user selects a page
the create method called by the container when the user has changed
registers the user with the password
generates a password for the user
called when the context is initialized
creates the tables
creates the data for the project
adds a new project to the select list
adds a new category to the list
executes the given user
reset all properties to their default values
returns the child of the given parent
returns the number of children of code parent code
returns the index of child in parent
returns true if the given node is a leaf
this method is used to read the property value
this method is called when the value of the property is changed
connect to the server
dispatches a command to the server
cause the exception to cause the exception to cause the
processes the command
commits changes to the current state
initializes the servlet
destroys the servlet
creates a new default generator
factory method to create a pk generator
returns the model
returns the view
returns the top frame of the frame
returns the selected object
returns the selected object parent
returns true if the given action is activated
updates the activation status of the action
tree selection listener
shuts down the
creates a new
closes the project
opens a file to open the project
edit the editor
deletes the selected model object
this method is used to the object
listens for changes in the property change event
checks if the current project is still open
this method is called when the panel is done
the create method called by create a new instance of this
returns the selected object
get active
creates the view
returns the value of the property with the given key
sets a property
returns the binding for the given key or null if none
returns the sub element of the specified name
binds a property to the given key
returns a component with the specified name
sets the binding for the binding
sets the name of the bean
renders the model
this method is called to make the layout
create a new person employee object
the department
executes the given context and returns the result
this method is called when the user hits the top level
returns the object id of the given object
checks if the schema query has been selected
closes the connection
returns a new entity manager
creates a new code entity manager code instance
returns the entity manager
returns true if the given class is a legal class
returns the entity map
returns the conflict that this is connected to
returns a new instance of the persistence unit
returns an entity listener for the entity class
returns true if the exclude classes are excluded
checks if the given method is a valid method
returns the class loader for this class loader
sets the class loader to use for loading the class loader
close the transaction
returns true if the open
persists the specified entity
removes the specified entity from the list
flush the transaction
sets the flush mode
returns the flush mode
refresh the entity
clears the current state of the
returns true if the entity contains the specified entity
creates a new query
creates a new native query object
creates a new native query
returns the transaction
returns the column definition
returns the hint for the given name
sets the lob to be used for the lob
merges the in the given map
returns the result of the validation
returns the entity entity for the given entity class
sets a parameter to a specific value
returns the entity entity for the given entity class
begins a new transaction
commit the transaction
rolls back the transaction
returns a list of the result objects
returns true if the transaction is active
executes the update operation on the current query
returns the value of the discriminator value
returns a single result
sets the maximum number of results to be returned by the query
sets the hint for the given type
returns the first result of the given position
sets a parameter to a specific query
sets a parameter to a specific parameter
sets a parameter to a specific parameter
sets a parameter to a specific value
sets a parameter to a specific type
returns true if the class name matches the given class
sets the parameter value for a specific type
this is called when the user wants to change the console
start the application
pause the midlet
invoked when an item state changes
called when the search is selected
returns the maximum number of result in the result set
this method is used to navigate to the given item
returns the current lang index
get the file name of the given file
returns the online
finds the word in the dictionary
returns true if the user input is a plain text
sets the online
sends the request to the server
append parameters to the parameters
sets the background color of the component
returns the background color
sets the font
sets the font size
returns the font used for drawing the current font
append a string to the end of the list
sets the mode of the
init the component
start the plugin
initializes the components
adds a model listener to the observer
notify listeners that the model has changed
initializes the parameters
initializes the component
initializes the editor
initializes the components
init the parameters
initializes the model
returns the instance of the instance
initializes the components
initializes the controller
load the plugins
returns the factory class instance
initializes the view
creates a new custom properties object
invokes the method on the specified object
creates a new language properties object
shows the document
this method is called when the model changes
notify listeners that the model has changed
adds a model listener to the model
notify listeners that the model has changed
returns the instance of the instance
paints the background
this method is called when the size of the component changes
dispatches the given object to the given object
p validates the given string
returns the
initializes the components
initializes the controller
returns the area of the area
selects the specified slide
paint the component
this method is called by the
this method is called when the user selects the modification
erases pressed
erases all the editors
returns the resource bundle for the specified locale
creates a portlet context for the given context
stores the portlet
sets the writer
returns the selected class
returns the unselected class
returns the graph class
p encodes the end of the context
p decodes the context attribute
creates a new event
get the location of the image relative to the context
returns the label of the label
returns the script that is currently submitted in the form
returns the parent
returns the number of the form
returns the url to the action
p returns the text value of the resource bundle
sets the value of the parameter
sets the debug information
replaces the old object with the specified object
returns the form encoding for the form
sets the attribute value
returns the table
returns the table that is used to identify the table
clears the file
closes the underlying
moves the pointer to the beginning of the file
truncates the file to the given offset
sets the temp directory
returns the length of the file
returns true if the file is large
returns the string representation of the specified encoding
writes the current state of the to the given output stream
writes the current offset to the given output stream
reads the from a stream
creates a temporary file
write the given byte to the file
read a byte from a file
writes the specified byte array to this output stream
writes the specified byte to this output stream
the output stream to be used to write out
returns true if the given is in the
sets the
sets the
sets the standard
destroy the field
creates an event id for the event
display the display of the user
display the current day
returns true if the calendar event is after the specified date
returns true if the given date is before the given date
compares the time to the time
creates a new portlet context
creates a new instance of this class
creates a new
returns the month for the specified month
returns the maximum inactive interval in seconds
returns the day of the day
sets the status code
begin uml doc
returns the content type of this content type
sets the value of the specified attribute
sets the content length for this response
returns true if the response was successfully processed
sets the response is not modified
returns the code output stream code of the specified output stream
destroy the servlet
returns the name of the day of the day
returns the config file for the specified configuration file
sets the value of container encoding
returns the environment that is allowed to be used for the request
returns the calendar for the given date
updates the current context
get the for the given path
returns the hour of the given date
creates a calendar object from the given date
returns the calendar object for the given
build the popup menu
update the execution time
build the message for the given event
build the link to the popup menu
this method returns the view of the given event
returns the applications applications applications
sets the portlet applications
finds the node with the given path
adds a portlet application to the application
adds a node to the registry
sets the default role roles attribute of the object
find a node by name
returns the role roles
sets the menus
returns the menus
returns true if the receiver is a leaf
lookup a jndi name for the ejb factory
adds a child at the specified position
find a child node with the given name
returns the children of this node
removes a child node
returns a string representation of this object
parse the given path
initializes the parser
this method is called when the context is initialized
sets the plugins
adds a plugin context to the context
returns the editor jar file
sets the editor jar
returns the editor type
returns the main class name
sets the editor type
sets the main class name
returns the roles
gets the value of the property
sets the
p tests context context
tests the set parameter methods
test the context context parameters
tests the http servlet request
tests context context
the stub for the user that does nothing
tests that the headers of the request is not configured
tests the public method
tests the behavior of the portlet config
ensures that the portlet is correctly initialized
test that the portlet is
this method is invoked to be used by the application
tests that the portlet is correctly used by the
tests that the runtime runtime exception is thrown when the portlet is
report the end of a cdata section
report the end of a cdata section
sets the value of the parameter
sets the value of the output property
sets the properties
returns the message
returns the uri of the resource
returns the media to be used for this media
returns the size of the list
returns the position of the current position
returns the next string in the list
returns the prefix of the given uri
returns the version of this repository
returns the version of the repository
retrieves the version of the specified version
returns the version of the specified date
retrieves the version of the given label
returns the version name of the repository
returns the version date
returns the ticket
adds a version label to the repository
removes the specified version label
throws an unsupported operation exception
removes a version from this repository
returns true if the current user has a lock
get access manager
returns the property with the given path
returns the primary node type
returns a node type of the
returns the lock capabilities of this repository
returns the observation manager
returns true if the key is a mixin
returns the type of the node
checks if the given property can be set to the value
checks if the given node name is able to add a child
returns true if the is allowed to be used
checks if the given node name is able to add a child
returns the workspace
returns the root node of the node
returns the uuid of the node
returns the node with the specified absolute path
reverts the node to the root node
the content handler of the content of the content
sets the prefix for the given namespace
copy the contents of the specified src path into the clipboard
logout method comment
returns the uuid of the resource
tests this object for equality with an arbitrary object
tests this object for equality with an arbitrary object
tests this object for equality with an arbitrary object
tests this object for equality with an arbitrary object
tests this object for equality with an arbitrary object
tests this object for equality with an arbitrary object
sets the current state of the stream
sets the value of the code value code property
tests this object for equality with an arbitrary object
returns the error message of this exception
returns the root exception thrown by this exception
prints the stack trace of the stack trace
prints the stack trace of the exception
tests this object for equality with an arbitrary object
prints the stack trace of the exception
synchronously put a new thread to the pool
this method is called by the reactor when the lock is put
returns the current object
returns the value to which the specified object is waiting to
creates a new thread
returns the maximum size of the pool
sets the maximum number of pool connections
returns the pool size in bytes
sets the pool size for the current pool
returns the size of the pool
sets the thread factory
returns the thread factory
add a thread to the pool
creates a new threads threads
interrupts all threads
returns a list of all the tasks that are scheduled in the
called by the worker thread to indicate that a worker is done
returns the task that is waiting for the current execution
wait for the execution strategy
updates the given file with the given name and path
merges the given path to the repository
restore the version of the given name
restore the version
restores the label to the given label
returns the version history
retrieves the version of this repository
initialize the portlet
returns the format patterns used to format the pattern
sets the format patterns used to format patterns
parses the format patterns
sets up the cache
returns the first element in the list
returns the last row in the table
returns the next element in the iteration
returns the previous element in the list
scrolls the table
processes the given event
processes the selected action
returns the status of the
returns the alt alt
sets the alt
returns the label for the current user
returns the coordinates of the current location
click on the current user
sets the coords
returns the shape of the shape
sets the shape
deletes the selected rows
returns the first element in the list
returns the last character in the list
sets the action listener
returns the next element in the iteration
p returns the code string code that represents the current
returns the previous page
resets the
updates the current
p appends the given code faces code to the end of the
sets the value
clears the selected data
sets the selected class
sets the value of the unselected class property
counts the number of rows in the table
sets the style class
notifies the panel that the selected row has changed
sets the immediate immediate value for this
returns an iterator over the customers list
scrolls the table
returns the current current
sets the current state of the current element
returns the family name of this component
broadcast the event to the controller
returns the component that is currently being used in the component
p save the state of the component
returns the family name of this component
returns the family name of this component
p restore the state from the multi state
returns the family name of this component
returns the value of the image
p restore the state of the specified object
get the location of the image context relative path to the context
returns the script for the given path
returns the action for the given url
returns the family name of this component
returns the name of the component
p returns the uri of the resource
p decodes the context
returns the number of columns in the data model
p return the name of the component that is associated with the
returns the number of columns footers
p returns the uri of the given resource
returns the number of columns in the table
returns the total number of pages in the form
returns the number of pages per page
get the remote port of the specified port
sets the object class constraint
sets the type of the type
sets the default object classes
sets the auto create flag
sets the value constraint to the specified constraint
returns true if the user is auto create
returns the value constraint
sets the on version
sets the default value
returns the on version number
returns the default value for this property
stores the current state of the configuration
initializes the
add a new url to the
adds the to the
sets the url to the given url
finds the class with the specified name
checks if the given name is sealed
tests the portlet functionality
test equality of the portlet context and returns the corresponding context
tests the set parameter methods
tests the http servlet request
tests the portlet configuration of the portlet
ensures that the portlet is correctly initialized
tests that the
ensure that the portlet is able to invoke the
creates the default users
creates and initializes the
sets up the test fixture
header row column
deploys a process archive
returns a collection of process definitions
returns a collection of definitions that are not inheriting from definition
returns the process definition for the specified definition
returns the process definition for the given process id
returns the process definition for the given workflow definition
returns all process definitions
returns all process definitions contained in the given process
process an instance instance
process a process instance instance
process a process instance
process a process instance
returns the start form for the given process id
returns the activity form
peforms the processing of a previously created
perform a bare processing
perform a bare processing
cancels the flow execution
returns the flow with the given id
returns the flow for a given id
check the database service
this method will be called to store the current state of the
tests the default behavior of the portlet context
tests the set parameter methods
tests the http servlet request
tests the behavior of the request
tests that the headers of the request is not
tests the public method
ensures that the portlet is correctly initialized
test that the portlet is
tests that the portlet is correctly used by the
tests that the runtime runtime exception is thrown when the portlet is
this method is used to the given object from the graph
the given
returns a collection of the describe object
returns a collection of all terms of the given class
returns true if the phoneme is
returns true if the operator is an operator
sets the to speak value for this
sets the operator
sets the to tokens
returns a string representation of this object
parses the token and returns a token
sets the nick name
returns true if the user wants to add a new
returns the nick name
returns the first mode of the current entry
returns the middle value
adds a new mask to the
parse the token and parse the given token
returns the second mode
sets the middle value
returns the third name of the third element
returns the middle value
parse a token
sets the add mode
sets the server name
adds a new guest to the list of the invited user
returns the server name
sets the first mode of the abductor
sets the second mode
returns the host server
returns the nick of the user who was the last
sets the third mode
adds a user to the list of users
returns the server name
returns a string representation of this object
returns the user token
returns the mask value
parse the token
sets the server host name
sets the mask value
returns the string representation of the mask
sets the nick token
sets the server name
returns the channel name
parse the given token
sets the user token
sets the channel name
returns a string representation of this object
check if the user is on the user specified by the user
returns the channel name
returns the letter of the
gets the value of the token token property
parse the given token
returns the value of the number of the value
sets the user name
sets the middle of middle of the middle of the middle of
parse the token and parse the token
returns the user name
sets the trailing tokens
sets the letter
returns a string representation of this token
returns the token that is associated with this token
sets the number value
parse the token
returns the value of the nickname of the given nickname
returns the channel token
sets the value
returns the string representation of the object
returns the value of the string
gets the trailing value
adds a new message to the list of responses
parse the token and parse the given token
sets the trailing value
returns the string representation of the value
this method is called by the server to run the
returns true if the connection is disconnected
adds a channel to the list of channels
sets the any token
this method is called when the server is started
sends a message to the server
sets the channel token
returns the rights for the given nick
disconnect from the server
sets the disconnected flag
sets the mask token
wait for the current thread to wait until the user has done
disconnect from the given string
add a request to the current thread
returns the idle time in milliseconds
returns a string representation of this object
this method is called when the user selects the server
returns the channel at the specified index
starts the server
sets the time in milliseconds to wait for the idle time
returns the user limit
returns the value of the channel name
gets the value of the replies property
stops the server
returns the settings
returns the host name of the host
returns the user number of the user
returns the number of visible users
returns the idle time
returns the mode of this group
adds the given channel to the list of channel
returns the name of the nick that this user is managing
checks if the user is allowed to speak
returns the real name of the real part
checks if the user is a guest user
returns the full name of the user who is currently connected
displays a file in the system
returns the password for the given user
checks if the user is a operator
returns the name of the package
returns the request message
returns true if the topic is
adds a vector of channel names to the channel
sets the request message
sets the maximum middle token needed to the given maximum number of
returns true if the type of the client is being inside of
returns the command token
sets the value of middle token needed for this field
sets the minimum level token needed to the laser token
sets the param needed to the parameter value
returns the parameters used to identify the request
gets the type only value for this
returns the prefix that is used to identify the token
checks if the given is matching the given name
returns true if the type is
returns a localized message for the given array of strings
returns true if the value is null
returns true if the type is protected
returns the syntax of the syntax
sets the command token
sets the parameters token
returns true if the secret is a secret key
removes the user from the channel
sets the prefix to use for the prefix
sets the state
checks if the given user is a user
remove away away from the chat
returns a string representation of this token
removes the specified mask from the
removes a channel name from the channel list
removes a guest channel
rename a user with the given name
removes the password password from the password
sets the away value for this
removes a user from the list of users
sets the away message
removes the user limit
sets the away state of the user
rename a nick
sends a message to the user
sets the nickname
send a message to a specific host
sets the real name of the real part
sets the server name
sets the operator of the user
start the process
sets the topic
sets whether the client can store the client side inside the client
sets the type only
sets the type
sets the type of the type
sets the value of type secret
sets the user limit
notify listeners that the model has changed
this method is called from within the constructor to
returns the instance of the controller
parse the xml
p validates the given string
this method is called when the xml is received
process the packet
sends a map to the client
this method is used to perform the
returns the packet in the buffer
this method is called when the user selects the current
kills the server
puts the given into the
returns a new packet that is the number of
send a buffer to a client
receive a packet from the socket
send a packet to the server
returns all the available
send a packet to the server
send a packet to the server
registers the server
reads the next byte from the data
unregisters the server
reads an unsigned byte from the input stream
updates the server with the given number of tricks
returns a typed packet containing the given type
returns a typed packet that contains the packet type
this method is called when the game is activated
returns the position of the mouse pointer to the given mouse event
start copy of a block
compares the two colors of the colors
adjust the size of the
called by the framework to initialize the ui
sets the cursor size
sets the text
adds a character to the text
move point to the point
sets the camera size
adds a new tile to the tile
returns the bank name for the specified name
get the name of the bank of the bank
draw a box
this method is called when the user selects a
initialise the draw box
serialize a to a given
draw the current state of the texture
sets the current color of the
capture the screen
returns the current node
terminates the
add a condition to this condition
add a condition to this condition
evaluates the condition
checks if the player is already in the quest
reads the attribute value from the xml element
reads an integer value from the input stream
returns the scene named name
adds a new quest to the list of quest
returns true if the quest is done
this method is called once each time the filter is painted
reads a attribute from the xml
sets the value of the given attribute
broadcasts a sound to the sound
this method is called when a audio player collides with a sound
plays a sound from the server
this method is invoked by the filter when the screen is selected
disconnects from the client
disconnect from server
adds a collision object to the
updates the client keyboard with the given value
check the current state of the server
move the move to the move
the client to the client
checks if collision is
checks if the given collides with the given
executes the scene
collide with the given element and returns true
toggle display specific display
sets up the network connection to the server
this method is called when the engine is destroyed
notify the quest in a quest
this method is called by the process of the
this method is called when the server is started
launches the launch dialog
this method is called when the user selects a new user
register a state to the client
save the player name
unregisters a client id from the
load the player name
this method is called when the is enabled
returns true if the quest is done
saves the game to the given file
returns the point
this method will be called to make the server info
builds the key for the given
returns a weather object for a given area
stops the sound
plays a
this method is used to serialize the entities map
returns the number of in the given range
shifts the current position of the given unit
returns the value of the code usable code property
returns true if the rectangle x1 x2
checks if the entity is
returns the landing point of the
close the player
returns a zone object representing the current
kills all the
returns the distance between this point and the given point
serializes the given
returns a zone object that contains the given zone
serialize a to a given
compares the specified object with this point for equality
returns the position of the
returns the element with the specified name
resets the current state of the
the alpha of the current
a
adds a sprite to the sprite
returns the item type
initialize the
returns the nth immediate ancestor of the nth instruction
returns true if this is
returns true if this is diagonal
returns true if the is empty
this method is called by the
returns the element ref
this method is called by the
this method is called when the collision is destroyed
multiplies the current value of the given factor
scales the given x y z coordinates
returns true if the given point is a crossing
this method is called when the player is done
returns the slope of the rectangle
launches the dialog to launch a new
stops the dialog
compares the specified object with this map for equality
this method is called when the user selects the item
adds an item to the inventory
removes the item from the inventory
projects the given into the given array
checks if item has a given item
the given angle in the
updates the dialog to display the current state of the dialog
reloads the configuration
is this a
move the given object to the given direction
this method is used to remove a from the
sets the for the given item
draw a collision tile
creates an image for the given image
returns the object that is clicked on the given x y coordinate
returns the element that is currently in the given position
sets the selection
draw a circle
returns the point for the given point
returns true if the two nodes are
returns the number of in the given value
compares the specified object with this selection
saves the current tile
checks if the image line contains the given point
returns the width of the specified component
this method is called when a piece of a player is selected
returns the html for the player who is currently highlighted
checks if a player is in the league
checks if a player is a league administrator
checks if player exists
adds a player to the player league id
adds a role to the league
add a match to the league
updates the league roles for all leagues
updates the league roles
updates the blms league role
checks if a player is a league
checks if a player is responsible for a player
checks if a player is a league member
returns the non date time for a given date
checks if the given key exists
returns the value of the key
check if the parameter name is unique
adds a statement to the list of statements
generates the code for the given action
this method is called when the cpm is done
returns the next character in the buffer
initialize the
consumes whitespace characters from the input stream
returns true if the given character is whitespace
returns true if the character is a break break
returns the character value of the given character
reads a binary file
reads the next character from the input stream
reads a hex
reads a float buffer from the buffer
reads the symbol in the symbol table
reads the next token from the input stream
generates the class that is used to create the class
this method is called when the user start an element
sets the version of the apply version
gets the version for apply to the version
checks if the version is incremental
start a new element
flushes the current buffer
this method is used to store the given category in the database
add observer for the system
this method removes the observer from the system
returns the full name of the event that is associated with the
test of get method of class org
bind all the attributes
clones this object
p a context that is used to serve context
p this method is used to handle the given key binding
finds the object that matches the given path
throws a security exception if the user is allowed to
returns the include
returns an enumeration of all the widgets in the current
reset properties to be changed
redirects to the page
redirects to the page
p returns the resource name associated with the given resource key
sets the page to the given page
this method is called when the error is thrown
called when a directory is in the directory
called when a file is opened
returns the named object
sets the named object
returns the url for the given
returns the field with the specified name
creates a new assembly
cancel the current row
called when the row is changed
sets the column names
returns the list of widget names
called when the row is changed
returns an enumeration of all the fields
returns the value of the field with the specified name
creates a widget from a widget
selects the element with the given xpath
returns a list of all the elements of the given xpath expression
returns the first element in the list
returns the output element
returns the value of the key
returns the string representation of the current value
returns the type of the
initialize the server
destroy the service
get the query
returns the value of the specified option
get the value of the option
get the option boolean value
update the cache
add an option to the list of options
remove a repository from the repository
returns a list of the elements in the given list
select the first element in the list
creates a cache entry for the given cache
returns the value of the given expression
returns the value of the given expression
adds a new datatype to the list
adds a string to the list of datatypes
creates a clone of this object
returns the string representation of this object
returns the
p fire before completion
returns the short string for the current batch mode
returns the path to the application
sets the link options
returns the path to the resource path
returns the link to the given url
returns a link to the given resource
link to the given resource and the link
link to a link
link to a link
checks if the given field name is value
adds a page name to the page
sets the new value of the
reads the fields from the given xml element
sets the value of the field
sets the field to the specified field
sets the field name for the given field
called when the job is done
returns the profile
sets the profile
sets the encoding
adds a directory to the path
returns the bool value
sets the bool value
returns the value of the integer value
sets the value of the int property
returns the double value of the thermometer
sets the double value of the thermometer
returns the value of the string
sets the number of the
sets the value of the string attribute
returns the element at the specified position in this list
sets the value of a node
adds a new node to the list
inserts the given node into the tree
removes the child at the specified index
returns the index of the first occurrence of the specified node
returns the parent of this node
returns the number of children
sets the device connection state
returns the index of the card at the specified index
this is the entry point method
creates the file menu
this method initializes exit menu item
returns a list of all student states
returns a list of user names
this method is called when the user selects the user
saves the user to the user
p p p return the attribute of the component code p code
returns the portlet url for the specified url
returns the view for the given icon
returns a string representation of the period of the period
updates the for the user
puts a key value pair into the database
returns the record with the specified key
closes the database connection
checks if the record is valid
this method is used to create the thread pool
returns the time in seconds
send a discovery request to the given address
sets the playing of the image
get the address of the broadcast packet
returns the request prefix
returns the signature of the challenge
start a new thread after the simulation
sets the action button
shows an error with the given id
shows the error message
shows an error dialog
called when the user preference changes
initializes the servlet
returns the right hand side of the grid
returns the left hand side of the grid
start task task
closes the transport
task completed task
task task task task task
returns the transport used to resolve the transport
report the task to the task
returns the session
clears the internal map
returns true if the map contains the specified key
compares the specified object with this resource manager
delegates to the wrapped method
returns the value to which this map maps the specified key
delegates to the wrapped method
traces the given trace
delegates to the wrapped method
called when a task starts
called when the user enters a non static method
called when a task starts
called when a task completed
invoked when a task has been cancelled
called when the user enters a new name
returns the hash code of the resource
called when a task is executed
called when the exit method is called
exit the method
returns true if the map is empty
adds a task to the scheduler
removes a task from the task
associates the specified value with the specified key in this map
removes the mapping for this key from this map if it is
returns the number of resources in the resource pool
returns the connection
append a line to the file
append a line to the file
sets the visibility of the task
inserts a new line before the given line
refresh the component
sets the label
insert a new file after the given file
removes a line from the file
removes a line from the file
sets the selected file
initializes the dialog
returns true if the given file is accepted by this filter
returns the size of the image
returns true if the user is in the current position
accept the file
returns the file extension for the given file
sets the remember size
returns the size of the base
translates a path to a file
returns the nested error
sets the size of the base
the directory and the directory
returns the maximum size of the image
overrides super class abstract method
sets the maximum size of the image
applies the given button to the model
sets the action to be used for the button
initialize the file
initialize the file
sets the disk mode
returns the number of storage
reads the contents of the file
creates a random access
writes the elements of the current element to the file
close the random access
reads the contents of the file
returns the number of columns occupied by the column
returns the number of rows that are stored in the table
disposes the internal frame
this method is used to deserialize the object from the input stream
initialize the file
reads the contents of the file
reads the contents of the file
sets the headers
returns the column header for the specified column
sets the column header
sets the row ids
returns the row id of the first row in the table
sets the row id
returns the index of the row index with the specified row id
sets the properties of this object
sets a property
sets the matrix cell values
sets the data type of the data
sets the data type of the given column
returns the minimum value of the specified column
returns the maximum value of the column
sets the matrix cell values
this method initializes j frame
this method initializes j content pane
sets the output
sets the input value
returns the training set
sets the training set
cleans the training set
this method initializes file menu
empties the set of training instances
adds a delta weight to the delta
resets the concepts in the model
returns true if the error is calculated
sets the training function
returns the training function
checks whether the is
normalize the weights of the weights
cleans up all the
sets the training inputs
updates the weights of the neural network
checks whether the cpm is
calculates the average square of the current state of the
returns true if the current has a square
sets the training inputs
resets the concepts to the original state
updates the weights of the neural network
adds one or more instances to the dataset
the weights of the neural network
this method is called by the filter when the filter is created
this method is used to filter the filter
creates a new instance of the given code object code
this method initializes j menu item
this method initializes j menu item
this method initializes paste menu item
this method initializes j panel right
this method initializes concept text
this method initializes save button
this method initializes j combo box
this method initializes save button link
this method initializes j text field weight
this method initializes in text link
this method initializes out text links
this method initializes j combo box
gets the value of the limit motor motor property
sets the collision between the collision
sets the direction of the car
build the collision shape
rebuilds rigid rigid rigid rigid rigid rigid body
returns the for the given wheel
sets the world translation
sets the rotation of the rotated quaternion
sets the of the
sets the
this method is called when the local is destroyed
sets the of the wheels
sets the wheels damping damping
creates a collision box
sets the compression compression
sets the of the friction
adds a new collision shape to the scene
adds a child shape to the given shape
removes a shape from the
creates a collision nest
creates a collision sphere from the given node
sets the maximum travel to the value of the
sets the maximum travel travel to the
sets the maximum travel to the given value
update the time
updates the physics engine
sets the compression compression
sets the compression
sets the damping concentration
set the translational damping
returns a future object that can be used to execute a future
wraps a previously registered callable
sets the
returns the collision location of the given sprite
sets the
returns the collision location of the bomb
adds a physics object to this physics rigid collision
returns the normal collision of the plane
sets the wheel velocities
returns the normal collision
removes the specified object from the physics object
sets the wheel velocities
sets the wheel speed
sets the value for the given
sets the wheel velocities
sets the gravity vector
sets the wheel velocities
adds a collision listener to this object
removes a collision listener from the list of listeners
destroy the physics engine
sets the mass of the
sets the gravity vector
sets the friction coefficient
sets the
returns the angular velocity of this physics rigid body
this method is used to convert the given code physics code object
sets the angular velocity of this physics rigid body
returns the linear velocity of the linear rigid body
this method is used to calculate the linear velocity of the physics
sets the linear velocity of this physics rigid body
returns the of the vec
returns the force force
returns the location of the force in the
applies the given to the current
returns the of the physics rigid body
returns the of the given vector
applies the given continuous torque along the
applies the impulse to the given vector
apply the torque to the given vector
creates a collision shape type
creates a collision shape
sets the sleeping thresholds for the given intensity
destroy the servlet
called when the user wants to be executed
called when the application is created
called when the window is opened
this method is called when the application is executed
called when the servlet is started
returns the status bar
returns true if the wizard is finished
called when the user selects the
creates the dialog pane for the content pane
resets the
test method for
reads the next line from the input stream
finds the mass of the molecule in the given molecule
returns the module name
open the notes database
create a new profile
delete the profile with the specified id
returns a cursor over the list of all notes in the database
return a cursor positioned at the profile that matches the given row
update the profile
move the given image to the specified image
sets referrer
opens a connection to the server
closes the given reader
reads the from the given input stream
this method is called upon plug in activation
updates the ui
stores the model
sets the preference store for all the
returns the location of the binary location
returns the profile for the profile
adds a filetype extension to the classpath
creates a browser with the given browser id
creates a new profile
launches the given process
sets the listener to be notified of changes to the listener
adds a file to the target
creates the compiler for the given code compiler code
runs the ant task
convert the given record to the given log record
convert the given level to a valid level
stops the
creates a classpath with the given library name
starts the launch
creates a new configuration instance with the specified value
this method is used to convert the given value into the argument
p the main class name of the main class with the given
a vm argument
builds the configuration from the classpath
removes the configuration from the launch configuration
returns the requested handler
adds a handler to the handler
returns the error
apply the given value to the given object
pop the top most stack pointer
returns true if the given type can be converted to a
returns the element name of the element
returns the http error code
convert a json object into a string
convert a json string into a string object
convert the pojo to json object
returns the scriptable object for the given scriptable object
this method is used to handle the command object
add javascript to the script
executes the test
removes the headers from the request
returns the current state of the
process a token
gets the value of the state property
get the parameters for the view parameters
returns the gadget specification for the given uri
returns the view associated with the given gadget
injects the message bundles into the specified code multiline code
adds the parameters to the oauth request
sets the default preference value for the specified component
add a selector to the selector
adds a dependency to the dependency
adds a collection of dependencies
sets the given value for the given key
returns the value of the given key as a string
gets the json string
builds the oauth url
create a new viewer request
substitute all the in the list
create a new owner request element
this method is called when the user selects a browser
returns a token for the given user
create a new person
returns a file containing the given file
create a new activity
returns true if the cache is cacheable
get the data from the request
returns the content of the content of this document
sets the cache ttl
get the connection to the specified url
checks the for the
adds a header to the request
adds a new header entry
adds all headers to the headers
check if the response is a
sets the cache
returns the json representation of a jsonobject
returns the code locale spec code for the specified locale
test that the service does not encode the
encodes a token in the given token
encrypts the request
load the resources from the resource bundle
load the json from the given string
returns the given uri
adds a parameter to the query
locks the lock
execute the given request
injects the of a given script
returns true if the element is an element
transforms the given uri into a uri
creates a rewriter that will be used to create a rewriter
check if the response is a
load resources from the resource bundle
load json from json object
processes the command line
stops the server
returns the col width
returns the col width type
returns true if the column width is set
sets the column number
sets the name of the column
sets the width of the column
sets the column width type
sets whether the column is sortable
returns the element element
sets the col element
installs this component
clears the text areas
uninstall popup menu
remove the given component from the root pane
returns the value for the given column and column
returns true if the given cell is editable
tests the component
sets the pattern
returns true if the given element is inherited
returns an iterator over prefixes of the namespace uri
returns the default property value for the given property name
creates a tool for the given tool
sets the default property values
sets the expanded icon
sets the collapsed icon
returns the value at the specified row and column
returns a hash map that maps the specified list to the hash
returns true if the given namespace is a forced
this method will be used to change the component to the specified
adds a highlighter to this node
adds a highlighter to the list of
removes a highlighter from the list of listeners
returns the prefix of the given id
sets the default values for all the fonts
returns the maximum width of the text in the text
returns the minimum width of the specified text
sets the selection model
returns the view selection model
returns true if the mouse process is able to process the mouse
filters the current state of the filter
sets the column index
translates the given row from the given filter to the previous row
returns the previous filter to the given row
returns the filter mapping
refreshes the filter
filters the filter and all the listeners
returns true if the word can break mid
this method will be called by the component to be notified of
returns true if the character is a space
sets the content pane
checks if the given character is a vowel
sets the orientation of the window
reset the animation
returns the width of the specified column
creates a new search result object matcher
returns the minimum height of the given code component code
returns a clone of this object
toggle popup menu
returns the unit width of the given type
updates the selected table
returns the maximum number of times the value is stored
sets whether the sortable is sortable
creates a new instance of table column
returns a new
copy the client properties to the client
adds the items to the menu
creates a new popup menu
updates the model change listener for the given column
populate the popup menu
clears the visibility of the column
adds the visibility of the popup menu items
adds additional items to the list
creates the visibility of the visibility of the table
returns the code list code that is used for the
returns the additional actions that are contained in the table
installs this component to the specified table
creates and returns the action that will be invoked when the mouse
creates the rollover producer for the mouse
completes the tree
applies the background to the component
returns true if the mouse event process is notified of mouse events
computes the background color for the component
adds a change listener to the list
removes a change listener from the list
notifies all listeners that have registered interest for
configures the background delegate for the viewport
returns true if the
clears the text
sets the tree table model
returns the tree table model
sets the control for the column
sets the column control visible
searches for a given search pattern
returns true if the given pattern contains a valid
adjust the position of the next row of the given range
checks if the pattern is equal to the given pattern
creates and returns the horizontal scroll bar
adds a listener to the list of listeners
removes a listener from the list of listeners
notifies all listeners that the document has been
fires the first document event
resumes the operation
creates and returns the selected action
terminates the operation
invoked when an action occurs
this method is called when the replace button is pressed
cancel the cancel action
closes the close action
creates and returns a new
sets the editor
sets the mode of the gui
initializes the find text
finds the selected tab
find the next suggestion
finds the next selected text in the text area
finds the whole whole position of the first character in the sequence
replace the current choice with replace the current
returns the replace choice
replaces the selected text with the old one
centers the dialog on the dialog
enable or disable the
checks if the given character is a separator
displays a message
sets the enabled mode of the popup window
returns true if the horizontal scroll bar is enabled
this method initializes the
initializes the dialog contents
this method is invoked when the ownership of the clipboard is closed
returns a result that contains the result of the matcher
scrolls the tree to the specified path
handles button events
checks if the current instance is valid
show the input input
returns true if the cell at row and column is editable
sets the selection model
initializes the ui
this method is called when the table model changes
returns the selection mapper
returns the bounded position of the given glyph
returns the current position of the given glyph
sets the pipeline filter
creates the pipeline listener
updates the filter on the display
sets the foreground color of the font
sets the font style
sets the foreground color of the style
returns the foreground color of the token
returns the font for the specified token
returns the style for the given token
sets the range of the text
scans the current scan
called on the edt
creates a new document
sets the loading flag
returns the end of a tag
sets the range of the range
inserts a document into the document
returns the current size of the image
returns the attributes for the specified chunk of attributes
returns the characters at the specified position
returns the string representation of the current
adds a text element to the end of the list
clears the current clip
returns the text associated with the given element
refresh the frame
invoked when a column is removed
removes the columns in the table
returns the columns
returns the columns of the table
sets the column sequence
sets whether the document should be overwritten
requests the request to the active request
shows the dialog
update the title bar
returns true if the element is selected
updates the icons
callback factory for the implementation of the action observer interface
sets the column factory
invoked when a mouse button has been pressed on a component
returns the currently selected perspective
returns the persistence type
returns the display name of the display
returns the icon
returns the help context
returns the description of the
creates a new multi view factory
invoked when the user selects the view
sets the values of the given field
gets the unit of width
sets the unit of width
returns the spacing between the border and the border
sets the border
sets the spacing between the border and the border
sets the padding value
returns the width of the
sets the width of the
returns the pipeline pipeline
sets the pipeline
adds a highlighter to the pipeline
removes a highlighter from the list of
resets the default renderer for the renderer
returns the default renderer for the given class
sets the terminate edit to focus
sets the auto start edit key stroke
update the
sets the height of the
sets the height of the row
enables or disables the row height
returns the point at the specified point
prints out the current display
prints the given output
show text view
show grid view
closes the current frame
resets the undo redo manager
stop the status bar
invoked when an internal frame is closed
invoked when an internal frame is closed
enqueues the specified token in the queue
draw the
returns the height of the line in the specified index
this method initializes s shell
sets the area of the area
evict the current entry
a query
attaches a feature to a feature
attaches a feature to the feature collection
this method is called by the
returns the type of this feature
sets the type of this feature
returns the code filter code that is used to create a new
returns the filter post
splits the map
deletes the data from the given index
clears the data
returns the index of the grid node in the given array
compare this source with another
compares the given source and location to the source location
resolve all variables in the scope
this method is called by the
add a new to the chain
returns true if the given literal is a literal
determines if the given is created by a predicate
stops the
gets the value of the first arch property
start the traversal cycle
checks if the mail has been selected
returns true if this thread is sleeping
sleep for the current thread
creates a table for the given table
returns the name of the
send a message to the server
broadcasts a message to all the clients
returns true if the current thread is running
sets the cycle number of the current cycle
returns the number of cycle
returns the select all predicate
returns the delete all predicate
returns the query count for the given query
returns the string representation of the given string
the system for the given url
default implementation of the default action
initialize the
returns the tensor with the given
removes a goal from the database
compares this atomic atomic with the specified object for order
this method is called by the class to initialize the
creates a new concurrent queue
resets the state of this object
resumes a transition from the game
called when a new state is found
removes the atomic event
drops the
the
the file to be a file
adds a function to the list of functions
adds a function to the given class
returns the function with the given arity
returns the file that the user is currently in
load the file from the file
returns the jar file
returns the home directory
updates the of the
returns the jar name of the
returns the
returns the java
add all the to the
returns the ant library
this method is called when a new component is
this method is called by the reactor when a new
returns the current project buffer
creates a new
creates the
sets the
executes the action
wait until the latch has been killed
called when a cycle finished
this method is called when the user selects the action
finds the given literal from the given literal
adds a new literal to the list
removes a literal from the
a literal
creates the threads
returns a dom document representing the current document
returns a for the given xml document
called when a is finished
returns the program
this method is called when the user modifies the
stops the running process
this method is called from within the constructor to
draw the sprite on the screen
returns the distance between the two
sets the environment for the
draw the sprite at the specified location
returns the distance between this point and the specified location
returns the distance between the two
returns the distance between the two
adds a to the
updates the number of agents in the agents level
sets the number of
removes a literal from the list
returns true if the given location is free
checks if the given coordinates are free
returns true if the given location is free
returns true if the given point is in the given coordinates
checks if the file name is a file name
test if the test cycle has a valid end of the fork
clears the
adds a to the
called when the step has started
removes a from the
removes a by its
removes the given name from the
clears all
schedule a new
executes the given action
adds a new plan to the list of plan
add a new plan to the plan
add a plan to the plan
returns a deep copy of this term
returns the operator relational operator
returns a unique unique name for the current state
returns the plan label
clear the plan
adds a single plan to the current list of
removes a given label from the list of
returns the formula of this formula
returns the formula of this formula
returns a clone of this operator
clone the plan
returns a clone of this term
returns the of the current term
returns the
returns the predicate indicator
this method is used to create the terms
returns a clone of this code code
returns the term in the term
returns the term in the term
sets the terms
adds a new set of source literals to the list
returns a clone of this object
returns the last element in the list
inserts a term into the list
returns the concatenation of the elements of the given term
returns true if the value is evaluated
returns the term in the current term
returns the term in the current term
returns true if the sync is sync
returns the cycle timeout
updates the number of agents in the simulation
this method is called when the is finished
this method is called to notify the user that the has
stops the
stop the processing of the current thread
returns true if the breakpoint has a breakpoint
a
returns the for the given
select the option with the given option
executes the given action
returns a message that is the queue of the specified message
returns the event that matches the given event
select the for the given select
returns the y coordinate of the x coordinate
returns a new vec object that is the same as the
returns the of the
returns the quadrant of this component
checks if the is
checks if the is running
returns true if the is
removes all the from the
removes the from the
waits for the thread to sleep for the current thread
clears the
removes the specified semantic view
returns the last location
starts the thread
sends a request to the server
attempts to authenticate the user
receive notification of the document
this method is used to send a document to the server
sends a ping request to the server
returns the path to the project file name
adapts the behavior of the change to the given property change
moves the token to the end of the token
get the rule with the specified name
returns true if the given file matches the given filename
sets the filename of the file
adds a word to the dictionary
evaluates the given breakpoint
evaluate the given scanner
returns true if the scanner is a nonzero sequence of chars
returns the color for the given type
evaluate the previous scan
evaluate the given
this method initializes group
this method initializes group
this method initializes group
creates the pages of the multi page editor
saves the multi page editors document
initializes the editor
sets the part of the editor input editor
the from the project
sets the composite
called when the page is changed
creates a project directories
creates build properties file
creates a new sample agent
this method is called when the user modifies the
handles the browse button
ensures that the dialog has changed
this method is called when finish button is pressed in
adding the page to the wizard
this method is called when finish button is pressed in
opens the content stream
adding the page to the wizard
adding the page to the wizard
this method is called when finish button is pressed in
opens the given file in the file system
throws a core exception
this method initializes j group
this method is called when the cell is
sets the full structure of the given string

adding the page to the wizard
adding the page to the wizard
creates a new file
creates a new object
creates an atom with an atom
creates a object
converts a axiom to a
returns the of the given axiom
returns the alias for the given uri
returns the ontology that is associated with the given uri
creates a new ontology
initialize the ontology
checks if the given is consistent
puts a new to the map
returns the left y coordinate of the left corner of the
returns the right y value of the given x y x y
returns the alias of the object
returns the for the given
returns the for the given term
returns a list of all annotations
this method is used to unify the given literal
creates the placeholder placeholder for the ontology
prepares the user parameter with the given parameters
returns the name of the agent that is currently being deployed
returns the for the given uri
the
checks if the is in the
returns the label of the
confirm the order of the current user
adds a new customer to the model
creates the
initializes the session
close the session
stops the
start the audio process
stops the reading of the sound
handles an error
processes an audio packet
returns the coupling matrix for the given
this method is called when the circuit is
create a new population
returns the circuit that this belongs to
shows an error dialog

initializes the look and feel

sets the default value for this object
returns the name of the data
sets the view object
sets the view object
returns the name of the algorithm used for the algorithm
returns the minimum spanning tree
returns the name of the algorithm used for the algorithm
returns a string representation of this graph
returns the index of the vertex at the given index
returns the name of the algorithm used for the algorithm
sets the graph
returns the name of the algorithm used for the algorithm
adds the specified element to this set if it is not already
clears the current queue
sets the
sets the result graph
fills the list with the specified data
fills the list with the specified names
internal method to add a heap invariant
returns the name of the algorithm algorithm
returns a string representation of this object
grows the buffer at the specified index
the
returns the name of the algorithm algorithm
initializes the internal array of internal elements
inserts the specified element into this queue
removes the specified element from this queue
removes the mapping from the specified position
returns the name of the algorithm algorithm
returns the name of the algorithm algorithm
updates the graph scale
this method is called when the user modifies the current graph
make the layout
draw the edge
updates the graph scale
returns the coordinates of the point
returns the current point of the
returns true if the selected icon is selected
returns the scalar product of this point
sets the selected state
updates the displayed coordinates of the current graph
invoked when the target of the listener has changed its state
adds all the items to the menu
updates the graph
creates the menu items
updates the current menu item
runs the algorithm
this method is called when the user selects a selected vertex
adds a listener to the graph
updates the state of the algorithm
adds a listener to the list of
this method is called by the sax parser when a parse error
delegates to the underlying code warning handler code
adds the instances of the graph to the graph
adds a new edge to the graph
adds a vertex to the graph
returns the graph
sets the graph
returns the factory used to create the
returns a string representation of this object
compares two edges
returns the factory used to create the
returns the factory used to create the
compares two objects
sets the x coordinate of the x coordinate
sets the y coordinate of the anchor point
compares two edge objects
returns the
sets the cost of this edge
returns a clone of this object
returns the graph that is used to draw the graph
sets the x coordinate
sets the y coordinate of the y coordinate
sets the cost of this
returns the graph
returns the mark
sets the mark
returns the closest vertex in
sets the closest vertex in
returns the graph
returns the of this
returns the
gets the
returns the edge that this edge is connected to
returns the destination of the destination
returns the number of edges in the graph
returns the source of this event
returns the title
sets the edge
returns the vertex with the given name
returns a string representation of this object
returns the vertices in the graph
sets the graph
decreases the number of degree to the highest degree
returns the string representation of the current vertex
compares two vertices
returns an iterator of all edges in the graph
returns the
creates a new edge with the given name
returns the vertex
creates a new vertex
returns the degree of the polynomial
returns the number of degree of the node
returns a new edge
returns the number of outgoing nodes
increases the number of the in the result of the number
increment the number of outgoing cards
sets the vertex
returns true if the given vertex is equal to this one
sets up the fixture for example open a network connection
test that verifies that the graph is directed
test invalid graph
test that verifies that the graph is directed
test invalid graph
test invalid graph
test that verifies that the graph is directed
test invalid graph
sets up the fixture for example open a network connection
test equals method
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
sets up the fixture for example open a network connection
test equals
sets up the fixture for example open a network connection
exit the application
exit the application
clears all attributes
serialize the object to the persistent storage
deserializes the state of the object from the given object
returns the set of headers
returns the value of the specified header
returns the headers of the specified header
returns the url for the specified url
validates all the names of the given name and the parent path
returns the name of the given prefix
returns the path to the parent path
returns the list of children for the given prefix
returns the file associated with the specified path
returns the path to the parent path
returns the file by the given hash
returns the hash
returns true if the path is parent of the given path
this method serialize the xml file to the xml file
checks if the given file exists in the list
adds a directory to the path
add a new to the map
remove a from the map
adds a new peer to the list of peers
removes a peer from the list of peers
adds a file to the file
remove a file from the list
removes the given file path from the given path
returns the child at the specified index
returns the index of the specified file in the file system
reads the xml file from the file
returns a file object representing the file
writes the current xml file to the file
returns the value of the specified key
update the list of root file
delete the selected file
delete the selected directory
returns the size of the feed entry
sets the feed entries
returns the feed description
sets the feed description
sets the feed feed
removes all the patterns from the given string
returns the value to which the specified key is mapped
returns true if the entry is in the past time
initializes the feed description
initializes the feed
returns the settings bean
sets the settings bean
returns the current feed bean
sets the feed bean
returns the feed object for the given bean
creates a feed for the given feed
initializes the feed
returns the value of the given key as a preference
returns the preference value of the portlet
sets the settings bean
returns the selected feed
sets the selected feed
returns the cache timeout
sets the timeout for the cache
sets the portlet config
returns the maximum length of the longest value
returns the preferences object for the portlet
sets the maximum length of the subsequence
returns true if the window is a new window
returns the portlet session
returns true if the window is set to true
sets the new window
returns the window window name
returns the start feed
render the request
render the request
returns the list of the feeds
sets the list of the feeds
this method is called by the application to perform the rendering of
returns the size of the list
returns the maximum age of the cookie
sets the maximum age of the
returns true if the maximum age is allowed to be used
returns true if the maximum age value is
sets whether the should be used to be used for the
returns true if the maximum age of the age is allowed to
returns the maximum number of entries in the list
sets the maximum number of entries in the list
returns true if the maximum number of entries in the set are
returns the index of the tab at the given index
sets the list of commands to be used by the
returns the frequency of the given hardware
returns the voltage type value
returns the activation counter
sets the data
returns the data at the specified index
returns the
returns the
sets the url of the
add a url to the url
gets the value of the property
returns the string
sets the
gets the value of the property
returns the string
sets the
returns the value
returns the of the
sets the value of the
sets the value of the code data code property
sets the response
sets the response of the response
sets the title of the dialog
returns the title of the dialog
sets the approve button text
returns the approve button text
returns the data for the specified index
sets the value of the
returns the expected
returns the expected string
returns the data at the specified index
returns the address of the address
sets the expected
returns the expected
returns the expected string
sets the expected
returns the expected value expected by the bc
sets the available character set
returns the expected expected as a string
sets the expected expected value for the expected
sets the expected expected data value for this data layer
returns the expected data type at the specified index
sets the expected data value for the given index
sets the of the data
writes the contents of the file to the output stream
returns the data for the specified index
sets the data for a given data type
returns the actual actual
returns the expected expected value for the expected number of expected
returns the expected byte of the expected byte
reads the modules from the modules and returns the
returns the index of the specified argument
returns the value of the
returns the index of the argument that is being used
returns true if the is
returns the actual actual value of the actual
returns the value of the specified
returns the expected value of the
returns true if the command is empty
returns the value of the specified replacement
exclude ports from the given ports
sets the expected number of expected values
returns the number of
check if the server is ok
returns the value at the specified index
returns the of the
returns the argument id of the specified argument
sets the
returns the argument id of the specified replacement
get the short value of this
returns the argument at the specified index
returns the string
returns the argument at the specified index
sets the p2 2 d address of the
checks the arguments for the command line arguments
get the value of the median property
returns the string
sets the p1
get the short value of the register
returns the
checks if the specified code mark code
sets the
checks if the specified code string code contains the given
returns the short value of the certificate
returns the as string
sets the
counts the concurrent map
returns the fps of the video
sets the pen size
returns the image
restarts the process
sets the main panel
returns an initiliazed instance of status bar property
this method initializes left status bar
sets the status bar
sets the status bar
sets the status bar
returns the page id
returns the page name
dispose the page
sets the title label text
this method initializes previous page button
this method initializes navigator menu
adds the menu to the menu
shows the first card in the page
shows the next page in the page
shows the previous page
sets the button to the specified location
shows the last card in the page
this method is called from within the constructor to
adds a page to the page
removes the card panel
returns true if the operating system is currently being used
returns true if the contains the
returns the launch command
registers the ontology asociated with the ontology model
registers a ontology model
unregisters the given ontology from the ontology
returns the for the ontology
adds a model to the model
returns an iterator for the daml classes
sets the
returns the id of the
appends a definition to the end of the list
sets the members of the member to the given value
returns the number of chain of the chain
creates a new code code in the given
calculate the weight of the
returns the definition of this definition
returns a string representation of this object
returns an iterator for the daml classes
returns the defined defined term
returns the defining text of the defining
tests the equality of this code chain code
prints the
returns a list of properties for the ontology
ends the document
validates the consistency of the consistency process
saves the sentence to the given string
returns the definition of a given language
returns the doc language
returns an iterator for all the classes that are contained in the
returns the integer value of the property
sets the str string
sets the integer value
returns a string representation of this object
sets the value of the lt n gt
the
sets the number of the
returns the base url
returns the language of the
returns the number of tokens in the token
returns the number of
sets the cf
returns a string representation of this object
this method is called to parse the text into the specified character
appends the given position to the end of the list
returns true if the id equals the same
returns a string representation of this object
gets the value of the property
returns the
returns the lang
returns the number of
ends the document
returns the
sets the relation
gets the value of the property
sets the
sets the
sets the score of the user
sets the
sets the
sets the text position
sets the synset
sets the status of the status
returns the
returns the synset
puts the specified element into the map
returns the tokens of the tokens
returns the id of the
start a new element
returns the id of the
this method is called when the end of the element is not
this method is called to parse the text into the specified character
returns a string representation of this object
checks if the given doc id exists in database
returns the length of the document
returns the frequency of the given concept
returns a string representation of the object
returns the semantic
sets the semantic
sets the query
returns the value of the keyword property
sets the value of keyword
returns a string representation of this object
returns the ontology manager
returns the
returns the concepts in the database
returns the number of tokens in the token
this method is called when the start of an element is encountered
this method is called when the end of a element is encountered
substitutes the term in the given
returns a string representation of the score
the
the url to the page
this method is called to notify the user that an email has
shuts down the application
returns the store
returns the status of the document
returns true if the led for the
sets the status
compare this object with another
returns a string representation of the object
logs the error message
returns the
gets the value of the status str property
returns the id of the document
returns a string representation of this object
returns the name of the document
returns the language of the document
returns the status of the document
returns true if the document is
returns the length of the document
sets the status of the document
sets the length of the document
locks the lock
unlocks the pool
returns true if the is
lock the lock
unlocks the lock
returns true if the lock is locked
returns the string representation of the document
returns the name of the chart
removes a previously added quote dataset
returns the number of items in the dataset
returns the data item at the specified index
returns the data item for the specified time period
returns the time period for the specified time
returns the index for the specified time period
returns the value at the specified index
adds a new time series
adds a time series to the series
adds a new data to the set
adds a new data to the end of the interval
adds a new data to the specified data range
adds a new data item to the end of the list
updates the time and update the data
updates the specified index
returns a new instance of the given time series
returns a new instance of the item
returns the new or updates the select item
removes the specified item from the list
removes the specified item from the list of
this method is for deleting one time
deletes the specified range of characters
returns a clone of this object
returns code true code if the argument is an instance time series
returns the maximum time in the data series
returns the maximum value of the current value
returns the minimum time in the data series
returns the minimum value of the slider
returns the currency formatter for the current currency
compares the specified object with the time series
adds a new item to the list of data
adds a property change listener to the list of listeners
returns the number of plots in the plot
returns true if the component is scrollable
returns the key for a given series
returns the maximum value of the interval in the range
returns the bounds of the domain
returns the lower bound of the interval
returns the upper bound of the interval in terms of the current
returns the range of the values in the range
returns the date at the specified series and interval
returns the icon for this icon
returns the date tick unit
returns the duration of the current time
gets the first date time
returns the last date of the last time
returns the only
sets the first date time of the first time the first time
sets the last date time
returns a string representation of the object
returns true if this symbol contains a given symbol
adds a symbol to the symbol table
returns the date tick unit
gets the value of the trading date time property
returns the value for the specified quote
returns the open
returns the current day
returns the high value
returns the low level value
returns the low level value
returns the close
returns the current day
returns the current volume
returns the volume of the current volume
returns the
returns the value
returns the value of the has gaps property
returns true if the value of the peak has a gap
returns the last value in the list
returns the last value of the last value of the last
handles a
sets the value at the specified index
tests this object for equality with an arbitrary object
compares this object with the specified object for order
returns true if the panel is
returns the key for a given series
returns the x value for an item within a series
returns the ending data of a series
returns the high value for one item in a series
returns the high value for one item in a series
returns the low value for one item in a series
returns the open item for a series and item
removes a from the
returns the open for a dataset
returns the close value for an item within a series
returns the value of the specified item in a series
returns the trading volume
returns the value of a dataset for a series
returns the number of items in the specified series
sorts the data by the current date
tests this dataset for equality with an arbitrary object
removes a property change listener from the list of listeners
sets the date time
tests if a given quote time contains a given quote
returns an iterator over the elements in this collection
saves the toolbar
returns the quote range
sets the quote range
returns the first symbol in the list
returns the first symbols in the list
returns a list of all symbols of the given date
returns a list of all symbols of the given time
returns the last date of the last time
returns the first offset of the first time
returns the last offset of the last date
returns the offset of the quote
returns true if the next object has more elements
returns the domain name
returns the name of the menu
returns the last time series
returns the high
calculates the default box scale
returns the name of the
returns the low time series
returns the object that is the default settings
returns the last time series
returns the name of the
returns the ui for the given ui
returns the current day volume
build the panel
returns the graph with the given text
adds a new graph to the list of graphs
build the panel
removes the given graph from the model
returns the name of the
returns the name of the
returns the dataset
sets the settings
returns true if the annotations are annotations
show the titles
appends the title to the end of the list
replaces the title with the title
removes a title from the list
builds the panel
returns the name of the
builds the panel
returns the name of the
returns the ui for the given ui
returns the name of the
build the panel
returns the ui for the given ui
returns the l f object that renders this component
returns the name of the
returns the name of the
returns the name of the
returns the that is currently in the map
returns the name of the
returns the that is currently in the map
returns the name of the
returns the ui for the given ui
returns the name of the
returns the name of the
shows the dialog
checks if the current user is running in the settings
returns the frame for the menu bar
returns the icon of the frame icon
removes a property change listener from the list of listeners
returns the preferred size of the page
invoked when an action occurs
returns the title of the
saves the current state of the module
saves the current state of the
returns the title of the tab
this method initializes this
creates the panel containing the panel
this method initializes directory text
returns the panel containing the table panel
this method initializes j scroll pane
save the
returns the title of the tab
returns the title of the tab
returns the panel that is used to create the panel
this method initializes edit button
this method initializes add button
this method initializes this
this method initializes j scroll pane
edits the current selected
save the table
returns the title of the tab
adds the current session to the current thread
edits a value in the model
deletes the rows in the table
saves the model
save the
returns the title of the tab
returns the title of the user
increases the cost of the cost
reduces the number of shares of the given number of shares
returns the number of shares
returns the cost of the cost of the cost
returns the related counter
compares this stock to another
redraw the table
returns the stock holding the selected stock
sets the of the stock
release all resources held by this object
returns true if the iteration has more records
returns the next record
adds a new account to the list
adds a new account to the list
add a to the stock
adds a new transaction to the list of transactions
removes all accounts from the agenda
returns a clone of this object
counts the number of accounts in the accounts
returns the number of transactions in the database
compares the specified object with this accounts list for equality
finds the account by name
returns the cash value of this account
returns the last date of the transaction
returns the start date time of the transaction
writes the given file to the writer
this method is called when the user modifies the order of the
clone the cash account
compares the specified object with this account
returns the
this method is called when the tool bar is closed
compares this object to another object
returns the amount of the
returns the cash account
gets the value of the cash property
gets the value of the date time property
gets the share account
returns trade cost
sets the cash
returns a shallow copy of the share account
compares the specified object with this account
sets the share account
returns the stock holding the given symbol
returns true if the given symbol is contained in the database
gets the stock
returns the number of stocks
compares this account with the specified account
returns the module
saves the settings to the application
this method is called when a property change
this method is called when the user selects the property change
sets the visibility of the menu
this method is called by the
handle the order of complex
exports the preferences to the preferences
export the quote to the current file
returns the title of the
this method is called when the user wants to save the
this method is called when the user selects the module
returns the text of the expression in the text
returns true if the current text is stored in the text field
sets the expression that is displayed in the text
this method is called by the application to create the menu
the of the current user
sets the expression text
returns the expression
sets the expression
returns a result set with the specified time and time
returns a clone of this object
sets the pattern filter
sets the sorter
the portfolio
a portfolio graph
invoked when the table model changes
import the preferences
sets the floating component for the component
import the quote module
sets the desktop manager
sets the desktop manager
sets the desktop manager
build the menu
creates a new dialog with the new name and the new location
disable the menus
watch for a new screen
enables disables the menu
open the active jobs module
opens the help menu
opens the license dialog
invoked when a module is renamed
handle a module that has been removed
invoked when a module is renamed
open a portfolio
opens the preferences panel
opens a watch
sets the menu item selected
returns the string representation of this object
returns the quote value
compares this object with the specified object for order
saves the workspace
adds a new tab
removes the tab at the specified index
sets the title at the specified index
removes the title at the specified index
removes all the items from the list
returns the tab properties for the specified index
returns the properties for the specified title
returns a string representation of the object
sets the visibility of the
compares this expression to another object
returns the value of the cell editor
adds a listener to the module
returns the main frame
notifies all registered listeners about the event
notify listeners that a module has been added
notify all registered listeners that a module is detached
fires a module to all registered listeners
notifies all registered listeners about the event
fires a module to the module
removes a module listener
handles the action event
invoked when an action occurs
invoked when the tile frames are
shows the dialog
returns the text of the note
sets the note label
returns the minimum value in progress bar
move the desktop in the desktop
sets the minimum value of the progress bar
sets the maximum value for the progress bar
sets the progress
increments the progress bar
invoked when the tile has horizontally
decrement the progress bar
returns true if the progress bar is indeterminate
sets the progress bar
move the tile frames vertical down
returns true if the is
hide the current progress dialog
shows the progress dialog
returns the current note
sets the note
returns the minimum value in the progress bar
returns the maximum number of active progress
gets the panel containing the table panel
returns the progress of the progress dialog
sets the progress of the progress bar
returns true if the progress bar is a indeterminate
returns the selected text
returns the change
compares this object with the specified object for order
this method initializes button panel
this method initializes j button
handles the action event
returns the change
returns the string representation of this object
compares this object with the specified object for order
this method initializes cancel button
returns the panel that displays the table
this method initializes move up button
returns the selected button
this method initializes delete button
this method initializes j button
this method initializes move up button
this method initializes move down button
this method initializes delete button
sets the columns model
adds a model column to the model
returns the number of columns in the model
returns the model name for the column
sets the value of the
returns the number of columns in the model
returns the list of quotations
sets the list of quotes
returns the number of rows in the model
displays an error message
this method initializes j panel2
this method initializes j text field
this method initializes j text area
this method initializes j button
this method initializes j button1
this method initializes j scroll pane
this method initializes j text field
returns the index of the current model
sets the name of the header
returns the short name of the header
returns the visibility of the component
compares this object with the specified object for order
returns the symbols of the current
adds a list of symbols to the list
removes a symbol from the symbol table
removes all symbols from the given list
this method is called when the user wants to save the
returns the title of the user
returns true if the scroll pane is a scroll pane
handles the property change event
returns the number of rows in the model
saves the current state of the application
returns the title of the dialog
update the table
saves the current layout state to the current state
returns the title of the titled part
compares its two arguments for order
compares the specified objects to the current date
adds a message to the end of the buffer
adds a warning to the list of warnings
adds a new error to the list
returns the number of warnings
returns a clone of this time
returns the number of errors
compares its two arguments for order
compares the specified object to this time
returns the
returns the string representation of the time
returns the time period class for the current day
returns the string representation of this code code
returns the size of the bar in the
returns a clone of this object
adds a month day to the current month
returns the time in milliseconds
returns a string representation of the time zone
returns a short string representation of this object
adds a hour of day to the hour
returns the
adds a millisecond to the second millisecond
adds a minute
adds a month to the current month
adds a second second period in the second period
adds a year to the list of year
returns the sum of the money of the specified money
returns true if the given date is after the specified date
returns true if the specified date is before the specified date
adds a new money to the current money
returns a clone of this object
returns a new
compares this date with the specified date
returns a new instance of this money by the specified number
returns a new instance of this money by the given number
returns the day of the month
returns the day of the week
returns the day of the year
returns the currency
returns the currency code
returns the format used to display the date format
returns the symbol value for this currency
returns the date format
returns true if the given money is less than this money
returns true if the money is less than or equal to the
returns the hour of the day
returns true if the given money is greater than this money
returns the millisecond of the second millisecond
returns true if the money is greater than this money
returns the minute
returns the format for the number format
returns the second of the second
returns the trading date
returns the trading time
returns true if the given class is a
returns true if the day is
jumps to the next day in the day
normalizes this unit
returns the title of the
sets the previous day
this method is called when the user wants to save the
sets the next date in the specified time
returns the text of the current page
finds the page with the given url
sets the index of the previous element
sets the only
returns the
returns true if the given scanner has been selected
returns a string representation of the given format
contracts contracts contracts and returns the contracts
sets the internal file name
returns a connection to the database
check the table with the given table name
returns the offset limit for the specified offset
returns the software software
returns the left side of the given field
reads the number of bytes from the database
shuts down the database
build the date time query string
cancel the order of the current order
builds a symbol for a given symbol
closes the given module
checks whether the quote contains quotes
optimize the quote multiple statements
this method initializes this
this method initializes j panel
this method initializes j panel
this method initializes macro pane
this method initializes j list
this method initializes j button
this method initializes j button1
this method initializes j button
this method initializes j button
starts a new market
the
adds a new to the
adds a new to the list of
this method is called by the server to add a new order
remove a wrapper from the list
updates the accounts of the request
returns the type name for the type name
compares this object to another object
returns the value of the
sets the value
sets the portfolio value for this
returns the parameter at the specified index
returns the value of the specified index
returns the type of the specified index
returns the individual with the given index
returns the of the given
returns the number of in the population
returns the next population size
gets the buy rule
saves the current layout state to the current state
returns the sell rule for this rule
gets the value of the a range property
returns the current range of the
gets the value of the c range property
returns true if the family is enabled
returns the order by key
returns true if the order of the order is ordered
sets the date offset
returns the quote range
returns the start date of the repair
returns the end date of the
returns the date range of the range of the range
returns the order comparator for the given code code
returns the population
returns the display population
sets the progress bar
unsets attribute
sets the value of the buy threshold
sets the sell threshold for the
sets the input layer
the
checks whether the given input is a valid
the
saves the current layout state to the current state
saves the model to the model
saves the current layout state to the current state
load the settings from the given key
load the common settings
returns the pre learning
returns the total number of cycles in the simulation
returns the initial capital
returns the minimum value for the minimum
returns the trade trade
returns the of the current window
returns the current value of the code code
returns the stock value
returns the number of stocks
saves the settings to the given key
load the settings from the given string
returns the random percentage
creates a new random expression
load the settings from the given key
this method is used to parse the
creates a new
returns true if the user is selected
returns the neural network
sets the progress bar
creates a random non terminal non terminal
sets the quote range
checks if the given range is valid
creates a random non terminal non terminal
returns the total number of coins
compares this object to another object
compares this individual with another one
returns a hash code for this instance
creates a new
returns the individual individual of the given index
returns the individual individual individual
returns a list of all symbols of the given date
returns true if the order is ordered
returns the name of the
returns a string representation of the quote
returns the name of the
returns a string representation of the quote
returns the title of the
parses the fields of the selected fields
returns the filter with the given name
checks if the filter is a filter
this method is called when the user wants to save the
saves the configuration settings
returns the name of the
returns a string representation of the quote
opens a file to the specified file
returns true if the file is next in the current directory
closes the file
verifies the given quote
returns the time in the time of the specified time
returns the time offset of the specified time
returns the first time of the first time in seconds
returns the last time in seconds
adds a new listener to the list of listeners
removes a listener for a quote
notifies all listeners that the quote has been added
finds the random site matching the given expression
returns true if the given quote time contains the specified quote
returns the newest time in the past time
returns an iterator over the elements in this collection
returns the name of the
returns a string representation of the quote
sets the quote range
returns true if the given bundle is loaded in the database
returns the message
returns a list of all symbols of the given time
returns the offset of the specified quote
returns the first offset of the first time in the cache
returns the last offset of the last time
returns the symbol
returns the number of contracts in the database
returns the length of the symbol
returns the character at the specified position in the current
returns a clone of this object
compares this object with the specified object for order
adds a symbol to the symbol table
clone the object
compares the specified quote to this quote
tests if the given symbols contains a symbols
compares this object to the specified object
mutate this expression
returns true if the symbol is already in the symbol table
returns the description of the symbol
returns the trading date
returns the trading time
returns a string representation of the quote
performs a mutation on the expression
returns true if this symbol is empty
returns the first offset of the first character in the list
returns the last offset of the last quote
returns true if the is running
returns the offset of the quote quote
run the
sets the enabled state of the stop timer
generates a new complex with a cyclic expression
returns true if the timer is running
returns a string representation of the object
sets the period in which the task began
sets the time range for the specified time
returns the name of the
returns a string representation of this code quote code
evaluates the mutation by removing a
check if the current user is selected
returns the trading date time
compares this object to the specified object
tests if the given quote time in this set of quotations
check if the two are equal
save the configuration
returns a string representation of the quote
returns a list of all symbols of the given date
loads the given quote into the database
returns a new date offset in the specified date
returns a string representation of this code quote code
check if the user is enabled
this method is called by the framework to enable the configuration of
returns a clone of this object
returns true if the given name is contained in the scope
adds a constant to the list
adds a constant value to the map
adds a constant value to the map
sets the value of the variable with the given name
sets the value of the variable with the given name
returns the value of the specified variable
returns the type of the variable
saves the configuration settings
returns the variable with the given name
returns the database manager
sets the value of the current value
returns the title of the
returns true if the assertion is equal to the given object
returns the child at the specified index
returns the title of the
returns the index of the child
returns the parent of this expression
returns the hash code for this object
returns an iterator over the elements in this list
sets the child of the given child
sets the parent of this expression
simplifies the expression
returns the number of children
returns the number of occurrences of the given type
returns the type of this code code
returns the number of children
returns the type of the
returns the type of the child
checks the type of the type
returns the type of this code code
returns a string representation of the given operator
returns the type of the element
returns the type of the conditional
returns the type of the command
returns the type of this code code
returns the type of the
returns the number of children
returns the type of the
returns the number of children
returns the kind of quote
returns the type of the quote
returns the type of the
returns the number of children
checks the type of the value
returns the type of the element
returns the type of the child
removes the last token from the stack
returns true if the given token type matches the given type
this method is called by the parser to set the attributes to
validate the current template
returns the class of the extension
prepares the attributes for the attribute
returns the class of the extension
returns the number of rows in the model
sets the new player
inits the
subscribe to the given match
removes the code exchange code from the current thread
displays the table
inits the
this method is called when the user wants to load a
the gui
creates a new animation
sets the
initialize the game
returns the current contract
sets the current selected match
inits the gui
sets the arena category
action performed method for the play action command
update the radio buttons
removes the user from the
appends a string to the given string
this method is called when the user selects the user
returns the content of this code soapmessage code
sets the content of the panel
appends the given string to the given array of
returns the listener that performs a match listener
sets the icon
sets the msg key
returns the table model
returns the column model
inits the gui
initializes the panel
inits the
returns the scenario version
returns the time of the save time
returns the description of the user
returns the save file
sets the file to be saved
returns the save info
sets the save game info
this method is called when the game is paused
go to the selected
returns the file to save the current file
returns the player with the specified row
exports the given file
exports the scenario in the scenario
show the current day as a message
returns a url for the given file
returns a random image url
show an error message
exit the application
sets the infrastructure objects
calculate the for a given match
calculate the price for the booked exam
calculate the price for the price
missing method documentation
calculates the price for the price of the auction
adds a new element to the parent element
add an element to the parent
checks if the given day is a game day
move the game
returns the date format
adds a scheduler to the list of events
sets the party a
sets the value of party b
returns the scheduler event for the specified event
returns true if the is
sets the auto property
returns the actions draw draw actions
sets the actions draw draw value for this game state
returns the center team
initializes the scene
increase the actions draw the current draw
returns true if the current state is still in the result
returns the number of actions failed
sets the team team a player
show an error
sets the value of the actions failed
returns the center team of the game
increases the number of failures
add a to the current
returns the actions
sets the center team of the player
sets the actions
increase the number of actions
returns true if the winner team is
resets the current state of the
returns the shots on goal
sets the winner team a
sets the shots on goal
increment shots on goal
returns the block of the given player
returns the current block
returns the current
returns the match snapshot
returns the partner type of the given player
checks if a player is in the given player
returns the time keeper keeper
returns the last day of the current day
returns the opponent of a player
sets the match
returns the current match statistics
returns the computed computed holder
returns the current player by its player
sets the value of the computed holder property
this method is called from the player
returns the next available player id
returns the player whose value is tt other tt
returns the section after the given move
returns the dispatcher
returns the player
returns true if the game is
returns the computed result of the result of the result
returns the category
returns the distance between the robot and the ball
gets the value of the match property
sets the category
sets the distance between the robot and the ball
sets the match
sets the computed result
returns the sleep sleep interval
sets the current holder
gets the value of the property
sets sleep sleep
gets the category title
returns the current current block
returns the computed section
sets the current
show the desktop for the given user
returns the steering steering property
returns the center of this plane
sets the category title
sets the end of the range
returns the current home block
returns the normal of this plane
sets the normal
sets the computed section
sets the start value of this object
sets the current home block
returns the home region
returns true if the face is hidden
returns the starting holder
shows the online message
returns the center of this sphere
sets the face off played flag
returns the facing
returns the left post
returns true if the target is at the target direction
returns the right line of the right edge
returns the current momentum
gets the value of the num goals scored property
resets the scored dist
sets the current momentum
returns the bounding radius
sets the starting holder
sets the radius of the circle
returns the team
increases the current momentum by the current current one
sets the position of the current position
returns the scale
creates a new
sets the current state of the current state
sets the scale
sets the global state of the global state machine
sets the current chain
sets the previous state
returns the starting section of the section
shows a message in the system
returns true if the given state is in the current state
returns the current holder
returns true if the player is
returns the current section
creates the regions in the region
sets the starting section
sets the current section
returns true if the attacker is attacking the attacker
this method is called when the menu is pressed
sets the is in goal
gets the current stats
this method is called when a game is paused
returns the x y coordinate of the specified location
sets the current
returns the multiplication of this vector
gets the value of the current home stats property
initialize the current
returns true if the player is in front of the player
sets the current home stats
switch to the current section of the given section
returns the length of the
returns true if the player has all the specified player
returns the best possible spot
this method is called to go to the given rules
returns true if the player is
returns the perpendicular vector of this
this method computes the of the
returns true if the player has a player enter player
returns true if the bomb is in the region
returns the reverse vector of the vector
transforms the given points in the vector of coordinates
returns the maximum number of in the force
returns the score pass score for the score
returns true if the ball is currently choosing a
resets the of the
returns the maximum force
cleans up the content of the dialog
returns the maximum speed in meters per second
returns the goal
returns true if the vector is zero
returns the current score in the score
returns the distance between the spot score
returns true if the current play is currently playing
sets the coordinates of this vector
sets the goal
returns the maximum number of seconds the player has to be played
sets the home region
returns the distance in the player score
sets the current
returns the repeat interval
returns the player
turns off the
returns the distance in the player score
sets the heading of the heading
returns the number of milliseconds to be played
returns true if the property is a
returns the amount of in the player shot
returns the distance between the two points in the plane
returns the minimum distance between the
centers the dialog on the dialog box
returns the zone of the player
returns the region corresponding to the given id
returns the zone of the player
returns the maximum force of the
returns true if the game has already been closed
returns the chance of the type
returns whether the current record is on the current state
sets the maximum force
returns the of the
returns the old position
returns the current of the
place a place in place
returns the maximum force
returns true if the is on
gets the value of the max turn rate property
returns the distance between the
returns true if the can be
gets the value of the property
sets the maximum turn rate
returns the distance between the and the
returns the side of this edge
returns the distance between the
returns the number of five hole elements
sets the goal to match the goal
sets the side of the side of the
returns the distance of the stick
returns true if the is on
returns the
returns the velocity of this object
returns the maximum face speed in meters per second
sets the velocity of this object
sets the hole five five hole
returns the heading of this
returns true if the robot is on the current mode
sets the has
returns true if the home region of the home region is in
returns the speed of the velocity
returns the attribute
returns the speed of the ball
returns true if the wall is on the left side
creates the players
sets the attribute
returns true if the is on
gets the value of the has property
returns the attribute check
sets the attribute check
returns true if the treasure target in the
returns true if the game is currently being played
returns the attribute cover
returns the value of attribute code attr defense code
sets the attribute cover
returns the maximum speed of player
sets the value of attribute attr defense
sets the team
returns the value of attribute code attr code
show the panel in the panel
returns the field player
returns the attribute
sets the value of attribute recover
sets the attribute
returns the attribute stick
returns the away goal
check if the next player is ready to be ready
returns the active
returns the energy consumed by this player
sets the attribute stick
resets the current player to the current state
this method is called by the framework to perform the
returns the centre of the center of this plane
called when the user chooses a to terminate
sets the energy energy
show the panel in the panel
returns the home goal
the goal team score
returns the attribute checking for the user
sets the attribute checking checking for checking
updates stats for the league element
returns the number of attributes used to display the current
returns the attribute
sets the attribute
returns the value of attribute code attr intensity code
sets the value of attribute code attr code
sets the attr intensity value
puts the back into the
returns the attribute passing to the attribute
checks if the game is finished
adds a penalty to the current match
returns true if the current time is finished
sets the value of attribute passing
returns the last goal
returns the attribute form
returns true if the current time is in the
returns the positioning attribute of the object
returns true if the current time is valid
sets the positioning attribute of the object
returns the number of seconds that the next time in seconds
returns the attribute
checks if the team has running running
sets the attribute form
returns a that matches the current value of the
sets the attribute
gets the value of the region area property
returns the penalty player who won
returns the player who was
returns the attribute
returns the penalty time in seconds
returns the handling of the attribute
returns the penalty time for the
returns the current team
adds a parent to the parent element
sets the attribute
sets the attribute stick attribute of the jboss service bean object
returns the points of the team
returns the attribute
adds a parent element to the parent element
returns true if the current state is finished
returns the home team
sets the sponsor
sets the attribute
gets the schedule
returns the number of seconds played
sets the number of seconds played
returns the attribute
adds a number of seconds till the played
returns the component that is connected to the bottom side
returns the current match state
sets the attribute
sets the current match state
returns a random double value between the given and the maximum
returns the steering force
sets the rules
returns the attribute
returns the number of minutes in the current time
goal
returns the match engine
this method is responsible for creating the leagues
returns a random double value between the given and the given
returns the forward speed
sets the attribute
add a to the list of
returns the random
returns the target of this event
shows the frame in the specified mode
resets the chain of
sets the target
returns the random number generator
check if all of the two steps are
returns the owner of this league owner
creates a match with the given element
displays the category of a game
returns a random integer value
returns a random double value between the given and the given
initialize the teams
this method is called when the user finishes his finished
shows the log panel
adds a goal to the
adds a new element to the parent
p adds a goals broken stats
returns the match
adds a new number of points to the
returns the best possible best attacker
this method is called when the user wants to update the game
returns the user by the given team
sets the value of the current value
returns a random value for the probability distribution
adds a parent to the parent element
sets the transfer fee value for this
adds a new element to the parent
adds minutes minutes to the penalty
returns the team
returns the player who is currently connected to this
sets the player
checks if the given team is auto
sets the width of the
returns true if the player is in the control
sets up the for the current
adds a goal to the bugs
adds a to the
show online message
returns the player whose id matches the given id
returns the total number of attributes in the
returns the next block of the block
this method is called when the end of the history is ended
returns the next block of blocks
returns the total energy of the player
returns the next power of the block
returns true if the given player is a player
returns the level of the ai
returns the current effort level
returns the best possible position of the best available
returns the tactic for the ai
returns the risk
sets the risk
update the targets of the player
returns the tactic
sets the
returns the center of the center of this
returns true if all players are all the
gets the
returns the effort
returns the left
returns the right defender
sets the default
returns the right of the
returns the player
sets the
sets the
sets the left
sets the common player attribute of the player object
sets the right
returns the value of the code match code property
sets the last place known
sets the center of the circle
returns the block type
sets the block type
sets the first place of the league
sets the given attribute to the current state
sets the value of the supporting player
this method is called by the scheduler when a group is destroyed
sets the current block
returns the lowest available number
show the message panel
returns the player who is ball to pick up
shows the main screen
returns the number of in the given player
returns the team number of the team
place the robots in the current
show the welcome dialog
returns the
shows the dialog
returns the stats for given league element
sets the
gets the value of the goal property
show the about menu
returns the stats for a league
returns the match player player for a given player
returns the stats for a league element
returns the goal
checks if player is on the player
returns the wrapped team
returns the average player market average value
returns the receiver
sets the receiver
this method is called when the player wants to impact
compute the energy for the player
returns the current spot
this method is called when the player wants to impact
returns true if the team is a team
returns true if the is in
returns the number of players in the player
resets the energy energy to the first match
checks if the team is a
checks if the given team is allowed to be transferred
adds a parent to the parent element
returns the instance of the factory
sets the
returns the singleton instance of this class
returns the singleton instance of this class
creates a physics object from the scene
update the
shuffles the
returns the effects of the damaged
builds the input
update the
update the animation
returns the instance of the engine
begin a new life cycle
evaluate the value of the
the mesh of the given spatial
update the time in the local time
update the physics space
render the scene
update the time in seconds
performs the action
performs the action
sets the actions
this method is called by the
builds the environment
returns true if the vehicle is moving
builds the
sets the weight of the weight
returns the acceleration of the
sets the acceleration
returns the
writes the scene to the output stream
sets the
returns the model of the model
the camera
sets the model spatial of this model
returns the velocity of the velocity
sets the velocity of the velocity
this method is called when a spatial is
returns the speed of the turn speed
reinit the window to be rebuilt
sets the speed of the turn
quits the application
returns the maximum speed
cleanup the application
sets the maximum speed
returns the minimum speed of the current
sets the minimum speed of the crane
sets the velocity
accelerates the velocity of the rocket
writes the scene graph to the given output stream
the given time
writes the node to the given node
writes the content of the xml file
writes the children of the node
loads binary data from the given binary file
reads the header
returns the toolbus instance
writes the joint mesh tag
this method is used to create the
writes the spatial children of the given spatial
this method is called when the spatial is made to be used
writes the keyframe controller to the current state
writes the key frame key in the frame
render the given spatial
processes a spatial and the spatial
creates a material object from the given material
creates a new alpha state object
writes the material state to the material state
writes the end tag
sets a property
removes the given property from the list
adds the spatial attribute to the spatial
writes the header
add a new to the mapping
returns true if the user has a executed
returns the mappings of the current mapping
returns the input message name
checks if the source is already in the source
checks if the target is in the target
returns the flag
returns the
returns a description of the type of the object
returns a description of the type of this object
returns the type of the locator
gets the loc svc attribute of the jboss service object
adds a new operation to the protocol
returns the protocol for the operation
returns the for the given operation
returns a description of the type of this object
registers a new handler
returns true if the given part is part of the
returns the number of keys in the map
returns the part at the specified index
sets the part of the specified part
returns the value of the specified column
returns the span of the specified index
returns a vector containing ordered ordered lists
insert a set of in the list
returns a description of the type of the recordable
notification of a notification handler
this method is called when the activity is started
this method is called when the activity is completed
this method is called when the flow is completed
returns the flow name
gets the flow service type
returns the activity for the given activity
returns the message associated with the given message
returns the part of the message part of the specified part
returns a message part of the specified part
returns a vector of all the flow start activities
returns the current activities
returns true if the activity has a flow end
returns a vector containing all the targets of the given
returns a vector containing the targets of the given
returns a vector with the link to which this connection is to
returns true if the activity has been executed
parse the given string from the
get system output message string
shows the dialog
check if the given request is a valid request
returns a string representation of the object
returns a clone of this object
enable disable the
returns the proxy
returns the proxy for the given
starts the server and listens for incoming tcp tcp port
stops the
sets the chain proxy
returns the chain of the chain
this method is called by the server to run the next command
starts the server
returns the service id for the specified service name
a
echo a socket
discards the specified socket
reads the port
returns the string representation of the given string
this method is called to make the node read from the xml
returns the stanza to the first node in the document
write the to the
initializes the connection to the server
reads the stanza from the given node
returns the current node in the tree
reconnects to the cache
log a message
writes the given to the air
generate the initial id for the initial request
print a string and then terminate the line
returns the number of instances of the given value
returns the number of particles in the group
sets the x y coordinate for the specified coordinate
sets the
returns the at the specified index
returns the for the given frame
returns the width of the window
sets the position of the current sprite
sets the window position
returns the width of the specified string
returns the height of the font
renders a window
add all the components to the given part of the table
renders the sprite at the specified index
renders the given frame in the given render frame
renders a single single component in the specified location
renders a single sub
save a record in the database
load image from file
called when the tree value changes
load the given file
load the specified url from the input file
load the given input stream
load the specified input stream
load the specified file
load information from a url
load the audio file format
load information from a url
returns a resource as an input stream
returns the tip anchor
adds the given focus to the front of the list
adds the given code code to the front of the list
returns the of the last character
returns the current segment of the given coordinates
returns the current segment of the given coordinates
returns the
returns the limit of the current recursion
returns the winding rule for the current path
sets the size of the image
moves the cursor to the next one
sets the frame for the given frame
returns true if the current thread is done
returns the current segment of the given coordinates
returns the current segment of the given coordinates
returns the current segment of the given coordinates
returns the current segment of the given coordinates
sets the rectangle to be used to draw the given rectangle
returns an iterator for the specified path iterator
returns the hash code for this object
tests this object for equality with an arbitrary object
returns true if the current index is done
returns the current segment of the given coordinates
returns the current segment of the given coordinates
returns the current segment of the given coordinates
returns the current segment of the given coordinates
returns true if the arc segment is done
resets the polygon to zero
invalidates the current state of this node
translate the given point
adds a new polygon to the end of the polygon
returns the type of this type
returns the bounds of this bounding box
returns true if the point contains the point
returns true if the point at the specified coordinates are
sets the rectangle to the given rectangle
checks if the line contains a line of the given line
tests if the given line2 d is a line of
returns the x coordinate of the point at the given point
returns the determinant of the transform
sets the frame rate
returns an iterator for the specified path iterator
returns an iterator for the outline of the given boundary
returns the current
returns true if the polygon is done
returns the current position of the given points
adds a new to the end of the list
returns the coordinates of the current polygon
adds a point to the end of the polyline
sets the size of the image
adds a rectangle to the end of the rectangle
returns the size of the image
sets the size of the component
sets the size of the image
compares this object with another object
returns the hash code of this object
returns an iterator for the specified path iterator
returns a string representation of this object
returns the matrix of the matrix
returns an iterator for the coordinates of the given boundary
returns the location of the point
sets the location of the component
sets the location of the component
sets the location of the x y location
move the given point
sets the curve at the given coordinates
translate the rectangle by dx dy
tests this object for equality with an arbitrary object
tests this object for equality with an arbitrary object
sets the curve to the given point
returns the minimum x value of the component
returns the minimum y value
returns the maximum x value of the image
returns the x coordinate of the upper left corner of the
returns the y coordinate of the upper y coordinate
returns the x coordinate of the center of this rectangle
sets the curve of the given curve
returns the y coordinate of the center of this rectangle
returns the framing rectangle
sets the frame for the given location
sets the frame
sets the curve to be used for the curve
sets the frame for the given point
sets the frame to center of the given point
returns the of the
returns the y coordinate of the scale
returns the of the line
returns an iterator for the outline of the given boundary
sets the quad at the given quad
returns the shear x value
returns the y coordinate of the upper bound
returns the x coordinate of the x axis
returns the y coordinate of the upper left corner of the
returns an iterator for the specified path
rotates the by a given angle
sets the location of the image
returns a string representation of this object
returns a string representation of this object
sets the location of the location
rotates the by a given angle
returns the square of the given square
returns the distance between the point and the given point
returns the distance between this point and the specified
returns the distance between this point and the specified point
returns a hash code for this object
compares this object to the specified object
rotates the
returns the bounds of this rectangle
sets the bounds of this rectangle
sets the bounds of the component
sets the curve at the given coordinates
rotate the around the given
sets the curve to the given point
sets the curve of the given curve
sets the curve to be used for the curve
returns the of the
sets the current
returns the of the outline
sets the right edge of the left side of the
returns an iterator for the specified path iterator
returns the hash code for this object
tests this object for equality with an arbitrary object
sets the size of the image
adds a polygon to this polygon
subtract a polygon
intersect this surface with the given area
this method is invoked by the
resets the bounds of the polygon
returns true if the shape is empty
returns true if the is
returns true if the point contains the specified point
returns true if the curve is rectangular
sets the transform to the identity matrix
returns true if the curve is singular
returns true if the rectangle contains the rectangle
returns the bounding rectangle of the current
returns the bounds of the popup
returns a clone of this object
sets the value of the transformation
compares this polygon to another
transforms the given transform to the given transform
returns true if the given rectangle intersects the rectangle
creates a new code area code object with the given
sets the rotation angle in radians
returns an iterator for the specified code code
adds the given to the current
adds a point to the end of the polygon
sets the rotation angle in radians
returns the type of arc
returns the current segment of the given coordinates
returns the current segment of the given coordinates
returns the start point of the line
returns the end point of the arc
sets the line of the specified line
compares this rectangle to the specified object
sets the arc d
returns a string representation of this object
sets the start angle of the given angle
sets the angles
returns the y coordinate of the y2 coordinate
sets the arc type
returns the y coordinate of the specified point in the
sets the transformation to scale
tests if a line intersects the given line
returns true if the given line contains the same
returns the square of the distance between the points
returns the square of the given point in the current coordinate
sets the transformation to the specified value
tests if the given angle is in the current
returns the distance between the two points in the given coordinates
returns the distance between the two points in the given point
returns the square of the straight line
sets the transform of the given transform
returns the distance between the line of the line the given points
tests if the given rectangle contains the specified rectangular
returns the distance between the line and the specified line
returns the distance between the line and the specified points
returns true if the specified rectangle contains the specified rectangle
returns true if the given point is inside the rectangle
returns true if the point contains the specified point
returns an iterator for the specified path iterator
returns the hash code for this object
tests if the given coordinates are inside the
compares this object with another one
returns true if the given rectangle contains the specified rectangle
returns an iterator for the specified line iterator
returns an iterator for the outline of the given boundary
creates a shape that is a shape
returns a string representation of this object
returns true if this identity is a identity
returns the hash code value for this object
returns true if the transform is equal to this affine transform
returns the destination of the peer
returns the derived type of the given type
returns a sub type of this surface type
adds a range of values to the end of the list
adds a new infinite interval to the list
compares this object with the specified object for order
returns the id of the
returns a new code extended code instance
gets the value of the property
returns the adapter id
flush the buffer
sets the output area
adds a rectangular area of the given x y coordinates
sets the output area
sets the of the
fill the path with the current fill state
get the path to the
intersect the clip box with the given
skip the specified number of
returns the native iterator
append spans spans spans to the end of the spans
forces the to fill the data in the current path
clears the
returns the intersection of the rectangle
clears the current state of the
creates a region of the given region

returns the intersection of the specified region
creates a copy of the current region
copies the state of the given region from the current state
checks if the given range is a valid range of the current
returns true if the given range is in the range of the
returns the union of the union of the union of the union
skip over the specified number of rows
returns the difference between the two
initializes the surface
returns the exclusive region of the specified region
returns the native resource
returns the default screen device
returns true if the image is
returns the intersection of this rectangle with the specified
creates a new graphics object for rendering
creates a region of the given region
returns true if the font name is used to use the absolute
returns the intersection region of the region
returns the default font file name
returns the name of the default font face
returns the destination image
this method is called when the surface is destroyed
returns true if the is empty
returns true if the cell is rectangular
returns the toplevel frame
returns true if the given point is inside the polygon
this method is called when the peer is connected
adds a horizontal points to the given coordinates
this method is called when the surface is repainted

removes the surface from the
wake up the thread so that it is called when the thread
returns true if the given region is inside the rectangle
updates the current run of the current thread
returns true if the given region intersects the given region
returns the file name of the platform specific platform platform specific platform
returns true if the given region is
adds a horizontal points to the given coordinates
returns the printer job

get the bounds of the
the bounding box box to move to the clipped box
marks the dirty state of the backup
initializes the surface
sets the needs backup backup
returns an iterator over the elements of this region
sets the flag indicating that the surface has been lost
increase the number of copies
returns the iterator for the span iterator
invalidates the current state of the component
returns the replacement data
returns a raster with the given coordinates
returns true if this object is
returns the pixel value of the rgb pixel at the specified rgb
returns the color for the pixel at the specified pixel scaled
this method is called to invalidate the component
returns the bounds of this rectangle
returns a span iterator for the specified
checks the custom composite
returns the destination of the object
returns an iterator over the elements in this plane
fill the surface mask with the specified fill style
returns the render for a given
returns a clone of this graphics object
returns true if the image is
returns the transparency of the transparency
returns true if the is
returns the pixel value for the specified rgb rgb pixel
returns the pixel at the specified color
returns the rgb value for the pixel at the specified pixel scaled
checks the custom composite
flush the current state of the
adds a font to the font
returns the font configuration
returns the native resource that matches the given type
display the current display
this method is called when the palette has changed
adds a display changed listener
removes a display listener from the list of listeners
returns true if the component is a flipped strategy
returns true if the shape is a shape
returns the device color model
returns the device configuration associated with this device
adds a hints to the hints
returns the rendering hints for this rendering hints
translate the current transform by a given amounts
rotates the current rotation
rotates the current coordinate by a given point
concatenates the current code graphics2 d code
concatenates the current transformation
transforms the given transform to the current transform
sets the transform of the current transform
returns the number of instances of the given value
returns the current transform
clones the transform
sets the background color
returns the background color
returns the number of
gets the value of the is a property
returns true if the transition is a transition
sets the transition to be used for transition
sets the transition to be used to draw the transition
intersects the current code shape code with the specified
returns true if the key is down
checks if the key is up up
returns true if the key is hold
returns true if the current pointer is held in the context
returns true if the current key is down
returns true if the current pointer is up down
returns true if the pointer is drag pointer
sets the
returns the width of the image
returns the height of the image
renders a window with a given graphics context
returns the number of frames in the current frame
adds a part to the end of the list
returns the image at the specified index
clear the screen
returns the image for the specified frame and sub frame
renders the sprite at the specified index
clears the screen and the current color
renders the sub image at the specified index
renders a single single component
renders a single sub
returns the width of the string
returns the height of the specified image
returns the width of the specified string
returns the height of the current image
draw the outline of the given shape
draw a string using the color of the specified string
fills the given shape with the given shape
clips the clipped clip rectangle clipped to the clip
returns the context
sets the open gl binary
sets the of the given binary binary
draws the specified image in the image
tests the equality of this code insets code
returns the hash code of this object
returns the destination of the destination
sets the opacity of the
sets the opaque attribute of the jcomponent object
sets the value of the resizable property
returns the wrapped window
returns true if the device has changed
sets the auto drawable for the client
disposes the internal frame
returns the width of the current user
returns the height of the image
returns the object attached to the given name
returns the object attached to the given name
puts an object in the database
puts an object in the database
destroys the session
this method is called by the when the user clicks on
removes the object from the database
returns the profile
sets the auto swap buffer mode
resizes the sprite
returns true if the buffer buffer buffer is
sets the profile
returns true if the is
returns the double value of the double property
sets the double buffering
returns the stereo
paint the component
returns true if hardware is
sets the hardware flag
returns the depth of the current state
sets the depth of the current state
returns the stencil bits
sets the stencil bits
returns the number of in the current hex
sets the value of the red property
returns the value of the green bits in the format
removes the object from the
sets the value of the green bits
returns the current value of the blue
sets the value of the blue
returns the value of the code alpha bits code property
sets the value of the alpha bit
resizes the component
sets the value of the sample buffers
returns true if the sample is backed by a
sets the number of samples to be used for the current thread
returns the number of samples in the current thread
sets the floating point size
returns true if the
sets the render to texture
gets the render to texture
sets the render to texture
returns true if the texture is render
shuts down the application
save the current fps
sets the value at the specified index
returns the value at the specified index
sets the factor
returns the product of this matrix with the specified double
scales the given value to the specified scale
returns a stldata type object
adds a new to the list
adds a b b to the vector b b b b
returns a new instance of the given
adds a new to the vector
returns a new instance of the
subtracts a sub
subtract two vectors
returns the cross product of this
cross product of two vectors
multiplies the components of this vector
returns true if the buffer should be preserved
updates the window configuration
returns true if the given object is bound in the target
clears the state of the state of the state machine
returns the length of the ramp ramp
sets the ramp pitch
returns the ramp
resets the pitch and pitch size of the
translates a matrix to the given
creates a matrix with the given
matrix

resets the current state of the
sets the current
returns the alignment of the pack
sets the pack alignment
returns the length of the pack row
sets the pack row length
returns the skip rows num
sets the pack skip rows skip
returns the skip line skip skip skip skip pixels
sets the pack skip line
gets the pack first value
sets the pack first value
gets the pack
sets the pack swap bytes
returns the number of images skip images
sets the pack skip images
returns the height of the pack image
sets the height of the pack image
returns the unpack alignment
sets the unpack alignment
returns the length of the unpack row length
sets the unpack row length
returns the skip rows rows
sets the unpack skip rows rows attribute of the object
returns the unpack skip pixel
the
gets the unpack first value
sets the of the
sets the first first value
gets the unpack swap bytes
enables the specified type
sets the unpack swap bytes value for this
sets the
sets the to be used for the
returns the unpack skip image
sets the unpack skip image
sets the of the
sets the current pointer to the current value
returns the height of the image
sets the of the given area
returns the value at the specified index
returns the relative position of the given element
sets the image height
sets the value of the specified integer
validate the
show the message
sets the property
sets the current pointer to the current position
sets the array of the
sets the of the
sets the range of the range
returns the value of the specified
append an arc to the end of the list
returns the arc associated with the given index
sets the value of the specified arc
this method is called by the
returns true if this type is
sets the array of the arc
sets the attribute of the object
appends an object to the end of the list
this method is called by the server to invoke the
the curve to the
returns true if this object is
this method is called by the server to invoke the
sets the of the curve
sets the
sets the current value
returns the element at the specified index
this method is called when the user selects a
sets the array of the
the
sets the

this method is called when the user selects a
selects the
the
adds a new to the map
locate a
returns the type of the given type
copy the
performs the
this method is called when the is
this method is used to reduce the bezier curve
returns the element at the specified index
download all the from the given download
this method is called when the user selects the
sets the current value to the next
this method is used to convert the range array to a range
checks if the given tag is a property
checks if the
returns the
returns the id of the
this method is called by the object to populate the range
returns true if the surface is
returns true if the sampling mode is enabled
returns true if the sampling path is a
returns the
returns true if the sampling area is a
returns the check
returns true if the surface is calibrated
returns true if the is
define a map of type
returns true if the sampling type is correct
returns true if the sampling is a domain sampling
the
sets the and
returns the value of the specified tag
returns true if the sampling sampling is
the property
returns true if the head of the list is
sets the arc to be used for arc
returns the number of in the
returns the arc arc arc arc
the property
the
returns the arc
returns the arc
sets the distance of the probe distance
this method is called by the factory
this method is called when the user selects the
the
this method is called when the user selects the
this method is called when the

this method is called to make a
this method is called by the servlet container to indicate that the
returns the height of the component
returns the ramp length for the ramp
sets the draw style
sets the normals for this mesh
sets the arc type to the bezier destination
sets the orientation of the
draw the
sets the texture flag
splits the and
returns the style of the draw style
returns the normals for this vertex
sets the distance of the probe distance
returns the texture flag
this method is used to set the specular color of the matrix
lock the lock
unlocks the current thread
returns true if the lock is held by this lock
creates a new instance of the given
resets the of the table
sets the flag
matrix
this method is called by the factory when the
translate the matrix to a float
returns true if the extension is available
binds the given location to the local location
returns the location of the given location
enables the of the
this method is called by the
returns true if the given shader object is a legal array
returns the floating point mode
returns the pointer to the given code name code
disables all the of the given polygon
returns the location of the uniform location
this method is used to convert the given to a uniform
returns the uniform name for the given name
removes all from the
clear all the from the given
returns the width of the image
puts the specified element into the buffer
returns the height of the image
returns the size of the image
returns the size of the image
returns the bounds of the specified string
sets the size of the frame
returns true if the contents of the contents of the contents of
mark the specified rectangle as dirty
draw all the
begins a rendering of the rendering
sets the size of the component
ends the rendering
draws the outline of the specified rectangle
sets whether smoothing is enabled
returns the smoothing flag
returns the bounds of the specified element
returns the maximum x value of the
returns the maximum y value of the y axis
mark the rectangle as being dirty
returns the texture of the texture
sets the maximum size of the component
removes the specified rectangle from the list of levels
disposes the texture and its texture
visits the visitor
returns the ratio of the vertical resolution of the
compacts the list
begins a rendering of a rendering surface
clears the list
removes all the objects from the backing store
begins a ortho rendering
removes the specified rectangle from the list of levels
the
returns true if the level is expanded
returns the font render context
returns the height of the image
sets the height of the image
sets the color of the component
returns the ratio of the vertical fragmentation ratio
visit the visitor
updates the rectangle with the current level
sets the color of the component
clears the contents of the tree
draws the ortho rectangle
removes the specified rectangle from the list of elements
begins a rendering of a particular rendering
returns true if the buffer is empty
returns true if the given area is allowed to be used for
visit the visitor
updates the rectangle of the current area
ends the current ortho rendering
sets the
this method is called when the is finished
creates a solid
returns true if the generation is
sets the
sets the of the
sets the
update the image
sets whether the parser should ignore exceptions
sets whether the print formatter should be printed
display the event
returns the image data
sets the color of the current color
enables the
writes the specified string to the file
writes the swf header to the file
disable the
returns the width of the header
returns the height of the header
returns the pixel format of the image
returns the type of pixel value
binds the texture to the current target
draw a character
destroy the service
disposes the given graphics2 d object
draw a string at the specified location
destroy the texture

returns the pixel format of the pixel
the
returns the pixel type of the pixel
returns the target of the target
sets the value of the given x y and y coordinates
returns the width of the texture
returns the height of the texture
returns the width of the specified char in the font
flushes the pipeline
sets the buffer size
sets the
returns the number of bits in the
sets the number of red bits
sets the
returns the green bits bits
sets the green bits
returns the estimated memory size
returns the blue bits
returns the aspect ratio
sets the blue bit number
ends the rendering process
flush the current
returns the number of bits bits in alpha
sets the alpha bits
sets the opaque background color
returns true if the background is opaque
sets the
returns true if the is
returns the texture coordinates of the texture
sets the handle
returns a string representation of this object
update the image data
disposes the current session
sets the current capabilities
sets the screen
gets the value of the must flip property
update the of the
returns the texture object of the
returns true if the generation is used for
sets the size of the image
returns the id of the
returns the glyph code
returns the advance of the sprite
clears the current glyph
sets the flag that controls whether or not the vertex arrays are
returns the flag indicating whether or not the vertex arrays are
sets the smoothing flag
returns the xml representation of the object
asserts that two objects are equal
tests the correct behavior of the code source code
returns true if instantiate type is a default type
returns the default
returns a property value for a given class
returns true if the type can convert the given type
returns the class of the bean
returns the type of the object
returns the name of the property
returns true if the property is readable
returns true if the property is writable
returns the value of the specified member
sets the value of the given property
returns the class that is mapped to the given name
register a new field with the given type
returns an iterator for the given class
returns an iterator for the given class
returns a field with the given name and type
invokes the given object and returns the result
serializes the object to xml
serialize the object to a writer
serialize an object in the xml format
marshal the given object and convert this object to a hierarchical object
deserialize an object from a xml data object
deserialize a hierarchical data object from the specified data reader
this method is used to provide the alias of a class
this method is used to convert a type of a type
this method is used to provide the package name for the package
this method is used to convert a field to a
this method is used to determine the alias for a given alias
this method will be used to set the alias of a system
this method will be used to identify a class attribute
adds a field to the attribute list
adds a class to the list of supported attributes
adds a class to the attribute list
adds a default implementation to the default implementation
adds a new primitive type to the list
registers a new local converter
registers a new instance of the given class with the given converter
sets the mode of the current thread
adds a class to the collection of classes
this method is used to set the field name
process the annotations for the given class
process the annotations for the given type
sets the annotations annotations
returns the name of the converter
extract the key from the given name
returns the name of the key
adds a class loader to the classpath
returns the flag
returns true if the component supports swing
returns the flag
returns the state of the state
creates a new hierarchical hierarchical writer
creates a new parser
returns the xml name of the given xml element
escape the given xml string
sets the input source
sets the xmlreader to be used for reading the xml file
returns the xmlreader to be used for reading the xml file
xstream code xstream code xstream code
sets the source of the list
sets the source of the list
returns the name of the specified
called when the end of the node is removed
returns the class name of the given qname
returns the qname for the given class name
escapes the given xml string
close the underlying stream
returns true if the namespace is
sets the entity resolver
sets the handler
sets the content handler
sets the error handler
parse the given string
parse the given input
parse the xml config file
start the document
ends the document
start the tag
pushes an element to the end of the stack
pop the current element from the stack
returns the path to the current path
serialize an object in the xml format
this method reads the xml from the xml string
adds a field to the list of attribute names
adds a class to the list of attribute names
not supported throws an unsupported operation exception
returns true if this is a integer integer
returns true if the current object is nil
set the
get the table for the given key
returns a new
returns the string representation of this object
returns the length of the
returns the

returns the type name of the type
returns a string representation of this object
returns true if the current user is a java
convert the byte to a java byte
convert the java char to a java char
convert the java object to a java int value
convert the java object to a java long value
returns true if the is
convert the byte to a java byte
convert the java to a java character
convert the double to a double precision floating point number
convert the float to java float
convert the to a java integer
convert the to a long
convert the java to java
returns the object
returns the nil stmt
returns the lvalue reference
concat buffer
returns true if the user is a string
returns true if the table is in the table
returns true if this function is a function
returns true if the user data is a user data
returns true if this is a number of
returns true if this object is closure
checks for equality of two
returns true if the string is a string
returns a byte converter that can be used to convert the byte
returns a new character representation of this code char code
returns the double of the current double
returns the java float
returns the integer representation of the integer value
returns a long representation of the long value
returns a short representation of this object
the
writes the given code binary code to the output stream
returns true if the number of the is a number
returns the capacity of the array
returns the capacity of the hash map
returns the number of keys in the array
puts a key value pair into the map
puts a key value pair into the hash map
puts a key value pair into the hash map
expand the current
puts a string into the internal buffer
returns the value associated with the specified key
returns the value of the specified object
checks whether the specified key is contained in the map
returns the length of the
insert a new position in the database
remove the position of the given
returns the maximum number of in this block
a function
installs the libraries for the libraries
executes the command
call this method to execute the given command
invokes the method on the

load a from the given stream
returns the v for the given key
the top most
the given
returns the file name of the given level
logs a message with level
throws a error with an error
a
sets the
checks if the given index is
inserts the element at the specified position in this list
checks if the given index is in the list
checks if the given index is in the list
remove the element at the top of the stack
sets the value of the top level property
sets the attribute of the object
sets the of the
sets the
the
the specified byte array from the
the byte array of
the
sets the of the
sets the
sets the index of the
sets the precinct index of the specified index
removes the element at the given index
replaces the current index with the specified index
a
sets the
checks if the given index is in the list
returns the value of the given index as an integer
the function at the given index
returns the at the specified index
returns the value of the given index as a double
returns the top level
sets the nt
the
the at the given index
returns the of the given index
returns the at the specified index
returns the value of the specified
returns the type of the specified index
returns the name of the nationality
sets the stack trace
sets the
sets the
sets the character to be used for the
sets the
sets the
sets the value of the negative property
sets the
symbolically executes the corresponding java virtual machine instruction
sets the
sets the
sets the
sets the
returns the for the given
returns the for the given
returns the id of the given
returns the of the given
returns the of the given
returns the of the given
returns the for the given
returns the with the specified id
returns the id of the given
returns the for the given
the
the given object and returns the result
returns the of the specified
returns the of the specified
get the object corresponding to the given type
get the object for the given
returns the
call a function with a call function
call a function to call
the function call to the given function
a function call
the given call to the
sets the for the given
gets the value of the property
returns the id of the
returns the id of the
returns the for a given
call this method to call the function
invokes the given
returns the index of the given block
a
returns the pc of the
convert the current value to a java string
returns the index of the given
writes the specified offset to the given offset
copies the contents of the given array into the current byte array
returns the length of the
returns true if the number of nil
returns the env of the
returns true if this object is closure
compiles the given input stream

creates a library instance
returns the of the given
convert a date to a string
execute the command
returns the value of the given
removes the given file from the list of resources
rename a file
returns the for the given category
returns the time in milliseconds to the specified time
load a class by name
returns the resource for the specified resource name
returns a resource as an input stream
returns the class loader
sets the threshold for the threshold
load a class by name
initializes the loading process
load a class by its name
returns the resource for the given resource name
returns a resource as an input stream for the given resource
returns the class loader
returns the class loader
initializes the class loader
load a class by name
returns the resource for the specified resource name
returns a resource as an input stream
returns the class loader
returns true if the throw statement is throw if not found throws
sets the throw exception property
gets the warn if property value not found
sets the warn if not found
returns the start time in milliseconds since the beginning of the
returns the time in millis in milliseconds since january 1 1970
returns true if time range is used to invert the range
sets whether the time range is in the range of the range
validate the hour
sets the time zone
removes a day from the day
returns the time zone
sets the time zone
returns a string representation of the object
returns cron expression
sets the cron expression for the cron expression
sets the cron expression for this user
returns true if the game has started
returns true if the server is started
returns the name of the scheduler object
sets the scheduler object name
sets the scheduler object name
sets the scheduling context
returns true if the service is started
returns a properties object with the same properties
sets the flag
sets the flag indicating whether the transaction transaction is committed
sets the current value of the auto commit commit property
sets the transaction isolation level for the transaction
returns the wrapped connection
restore the original value
closes the database connection
lock the lock owner locks a lock
returns true if the connection is established
returns the key value pairs in the map
convert the properties to a map
closes the result set
close the statement
sets the boolean value of the given statement
retrieves a value from the result set
retrieves a boolean value from the result set
sets the bytes of the prepared statement
sets the boolean value of the given statement
returns the transaction that is currently being used in the transaction
returns true if the connection requires a connection to the database
sets the lock on insert lock
sets the threshold for the threshold
sets whether the auto commit is not auto commit false
sets the value of the transaction isolation level
returns true if lock is synchronized
sets the lock triggers for lock on the lock
returns true if the server is running
sets the threads
returns true if the class loader is a class
returns true if the lock was
returns a connection to the given connection
recover the jobs from the database
closes the connection
rolls back the given connection
sets the bytes of the given object
sets the boolean value of the given statement
returns the current log
adds a regular expression to the list of regular expression patterns
adds a regular expression to the group
add a link to the given job
adds a regular expression to the list of regular expression
adds a new job group to the list of regular expressions
sets the cron expression for this player
returns true if the properties of this object has any properties
returns the cron time before the cron time
returns the fire time
returns the scheduled time
returns the job run time
puts a key value pair into the map
returns the value associated with the specified key
the jmx registry
the jmx mbean
returns true if the scheduler thread daemon thread daemon is running
sets the thread daemon thread daemon thread daemon
returns the rmi bind id
sets the rmi bind name
returns true if the jmx gateway is a gateway
sets the jmx export
returns the jmx mbean server
sets the jmx mbean
returns the scheduler
gets the wrap in user transaction property value
sets the wrap in user transaction property value
start the user
shuts down the user
resolve the current transaction
returns true if the is clean shutdown
returns the job success message
returns the job failed message
returns the fired job to be fired
set the job success message
sets the job failed message
sets the job to be fired
gets the value of the trigger complete message
gets the value of the trigger fired message property
gets the value of the trigger message property
sets the trigger complete message
sets the trigger fired message
sets the trigger message
returns the file name of the file
sets the file name
sets the file names
returns true if the job is written to existing jobs
sets the over write write existing jobs
returns the scan interval in ms
sets the scan interval
gets the value of the fail on file not found property
sets whether the file should be rejected
returns true if the schema parser is configured to be validating
sets the parser schema
shuts down the application
sets the n n n
sets the interval type
returns the interval type
sets the interval between the and the cutoff interval
returns the minimum cutoff interval of the
sets the start time
returns the start time
sets the end time
returns the end time of the event
returns the time of the next event
returns the previous fire fire time
returns the date after the simulation
returns the date the time the current time
this method is called when the calendar is triggered
returns true if the event has been registered
validate the given parameter type
updates the given date in the current time
returns true if the given date satisfies the opposite date
returns the next time after the specified date
returns the time zone
returns the cron expression
sets the calendar day
returns the time before the end of the end time
returns the date the time was last fire
returns true if the mode is in mode
returns true if the current mode is paused
this method is called when the user presses the end of the
closes the context
this method is called by the garbage collector
sets the data for the current data access object
returns true if transient data is allowed to be used
returns true if the object is transient
removes the transient data from the database
returns the property value as a string
returns the value of the property with the specified name
returns the property group for the given property
returns the data source
get a connection from the database
shuts down the provider
initializes the digester
adds a digester rules digester rules to the digester
p initializes the schema validation
returns true if the context loader should be used to process the
sets the context classloader
returns true if the job is written to disk
process the file
returns the url for the specified file
returns a map of scheduled jobs
returns the scheduled job for the given job
returns the input stream for the given file name
adds a job to the scheduled job
adds a new calendar to the list of calendar objects
receive notification of a warning
throws a sax exception that is thrown if parsing errors
receive notification of a non recoverable error
adds a validation exception to the given validation exception
clears the validation exception
throws an exception if the validation throws exception
returns the value of the constant value for the specified constant name
convert the specified input object into an output object of the
convert the specified input object into an output object of the
returns the validation exceptions
returns the message of the exception
clears all trigger listeners
tests shutdown
sets up the test case
tears down the test environment
test the flatten stream method
tests that the of the database is updated
tests that the of the database is updated
tests the catalog catalog
test the connection properties
test method for
test the use of props compress
tears down the directory
test that the url factory method is used to load the
test of connect method of class com
test the
test of execute method of class
test the server
this method is called from the webpage to set the
this method is called when the is up
returns the mean value of the mean
returns the current confidence
returns the minimum number of error in the
returns the standard deviation of the number of the
adds a new number to the current iteration
this method is called by the iteration to perform the
test the
test that the database is correctly used to execute the
tests fix for the get server method
test for bug
test the
test the
tests the applet security manager
test of method of class
test for bug
test the
test the
test of execute method of class
test that the statement is definitely assigned to a
test the
tests the
tests the
test that the executes the
tests fix for bug
test the
tests the
close the
tests the limit and limit rows
test of set fetch size method of class
test of set max rows method of interface java
tests the
test the
tests the close connection
test for bug
test for bug
tests fix for bug
test the
tests the
test the comment parsing
test
test of set query method of class
test of
this method is deprecated
test for the method get property info
tests the long text
test that a with the same name is already set
test
test
test for
test the
test the
test the
tests the
tests the
test
tests the of the table
tests fix for bug
test that verifies that the driver is
test database tables
test for the method for
tests the
tests the
test the
test that the bug reported in the bug report is
test for is before first on empty list
tests that the
test that the query updatable is updatable for
test of get method of class
tests fix for bug
test of execute method of class
tests fix for bug npe
tests fix for bug
tests fix for bug
test that derby
tests the
test the
tests fix for bug npe
tests fix for bug
tests fix for bug
test that the query is correctly executed
test for bug
test that the database is prepared to detect the database
test for derby
test the
tests the
tests the
tests the
test the conversion of a conversion
test the regression method
test the
test for
test the
sets up the fixture for example open a network connection
tear down the test
test
test the creation of a new configuration
tests the of the
test the

test the creation of a
tests the replication of the
test the
tests the
test the
test the
tests the
test ping
test the conection with a connection
tests fix for bug
destroys the
test that the database is
test the
create a new directory
test
returns the instance number
returns the sql statement for the given variable
returns the properties from the database
checks if the given property is a test system property
tears down the fixture for example close a network connection
returns true if the url is already in the database
returns the database database for the given database name
returns the host property
returns the port number of the specified port
gets the character set attribute of the ascii form object
checks whether the database is
returns the output parameters for the given parameter
returns the major version of the driver
returns the minor version of the driver
whats the version of this jdbc driver
retrieves the maximum length of a statement
retrieves whether this database treats mixed case sensitive
retrieves whether this database treats mixed case quoted sql identifiers as
does the database store mixed case unquoted sql identifiers as
does the database store mixed case quoted sql identifiers as
does the database store mixed case quoted sql identifiers as
can a catalog name be used in a result set index
can a catalog name be used in a privilege definition statement
returns whether a catalog name can be used in a procedure call
returns whether a catalog name can be used in a table definition
sets the value of a parameter
skip the current value in the current position
sets the byte buffer to the specified byte array
sets the position of the
sets the flag indicating whether this
returns true if this packet has a multi line
add a row to the table
retrieves the result of the specified
returns true if there is a next row
retrieves whether this column is after last last
retrieves whether the cursor is before the first row in this
sets the next row in the queue
method not supported
removes a statement event listener from the list of listeners
this method is used to reference the given reference from the database
tests if the specified class is a wrapper
sets the database name
returns the database name
sets the log writer
sets the password
sets the port
sets the server name
returns the server name
returns the url of the server
sets the user id
returns the user
tests if the given class is wrapper for the specified
returns the jdbc proxy for the given object
tests if the given class is a wrapper
start generic documentation
start generic documentation
start generic documentation
start generic documentation
returns true if the current connection is closed
returns the idle for the idle time
start generic documentation
start generic documentation
start generic documentation
start generic documentation
start generic documentation
start generic documentation
closes the connection
start generic documentation
passes call to method on physical connection
start generic documentation
create a new object
returns the transaction timeout in the transaction
this method is called to indicate that a transaction is a transaction
returns true if the given is a
this method is called to transform the resource manager to a transaction
this method is called to indicate that the transaction manager is being
this method is called to roll back the given transaction
this method is called to notify the resource that a transaction is
this method is called to start a transaction
logs the debug message
logs the debug message
logs a message with code java
log an error with error log level
logs a fatal error
logs a fatal error
logs a message with code level code
log a message object with the code level code
p log a message with code trace code
log a message object with the trace level
logs the given message
logs the message and the message
socket socket timeout
returns the socket timeout
reads the configuration from the given server
returns the event creation point as a string
returns the catalog
returns the connection id
returns the event that caused the event when the event is created
returns the time of the event creation time
returns the duration of the event
returns the duration units
returns the event type
returns the statement id
compute the batch size of the batch
executes the statement
send a packet to the server
clears the next result set
clears the warnings reported by the code result set code object
closes the connection
sets the designated parameter to the given boolean value
sets the designated parameter to the given byte code byte code
sets the bytes mapped to the given byte array
sets the value of a parameter
sets the designated parameter to the given code float code value
retrieves the value of the designated column in the current row of
sets the designated parameter to the given code int code value
sets the designated parameter to the given long value
sets the designated parameter to sql code null code
returns the calendar instance for the session
retrieves the cursor name
sets the designated parameter to the given code short code value
returns the double value of the specified column
returns the first character of the query
returns a string representation of this object
returns the server info
retrieves the value stored in the designated column
returns true if the last row is after the last row
retrieves whether the cursor is before the first time
returns the current row number
returns whether this code result set code object is empty
retrieves whether the cursor is on the first row of
indicates whether the last row is the last row of
returns the value of the specified column as a time value
returns the value of the java column
sets the basedir
sets the data directory
start the server
stop the server
returns the command line
builds the command line
checks if the given property name is a valid command line
returns true if the system is running
returns the value of the specified column as a java
retrieves the value of the designated column in the current row
retrieves the value of the designated column in the current row
tests if the given code class code is a wrapper
check the isolation level of the transaction isolation level
internal use only
close the connection
clears all warnings reported on this connection
start generic documentation
returns the flag that is used to commit the current transaction
returns the calendar instance for the session
retrieves the catalog name
returns the idle time for this query
returns the connection
returns the log
returns the character encoding used for the server
retrieves the first warning reported by calls on this
sets the binary encoded binary value
sets the first character of the query
sets the concurrency result set
is the database read only
sets the result set type
sets the server info
returns the sql string for the given sql statement
ping the connection
reports the current status of the current report
resets the server state to the server
sets the state of the failed
shuts down the server
returns the cached result of the specified sql statement
returns the statement comment
sets the statement
whats the designated column in the designated column
whats the designated in the current row of the designated
retrieves the value of the designated column in the current row
returns the number of columns in this database
gets the size of a column
retrieves the designated columns suggested title for use in
whats the columns name
retrieves the designated columns sql type
returns the field that is the result of the column
whats a columns schema
whats the designated columns table name in the table
indicates whether the designated column is automatically numbered thus
indicates whether the column is case sensitive for a column
retrieves whether the designated column is in a currency
indicates whether the designated column will definitely succeed
indicates the start of a nullable column
retrieves the value of the designated column in the current row of
indicates whether the designated column is definitely not
indicates whether the designated column will definitely succeed
returns a string representation of this object
returns true if the column info has long column info
checks if the current packet is valid
check if the charset is still available
this method is used to indicate the current
cancels the current connection
checks if the connection is closed
checks if the query is empty
closes all open connections
executes the given sql statement which may return multiple results
executes the given sql statement which may update the given
close the device
suspends the current context
destroy the context
returns the device that this device is connected to
configure the data buffer
deletes the current
returns the depth of the
returns the number of channels
returns the data
get the frequency of the
returns the size of the
sets the orientation of the
plays the sound
pause the sound
stops the forwarder
rewind the source code
deletes the
sets the pitch of the pitch
get the pitch of the pitch
sets the gain for the
get the gain gain value
returns the id of the statement
sets the maximum distance between the and the specified
returns the maximum distance between the current
sets the factor
get the factor
sets the distance between the and the
get the distance between the two points
sets the minimum gain value for the specified gain
returns the minimum gain value for the
sets the maximum gain value for the request
returns the maximum gain value for the current
sets the gain for the outer gain
returns the cone gain gain for the cone gain
sets the position of the
sets the position of the camera
returns the position of the
sets the velocity
sets the velocity of the velocity
returns the velocity of this
sets the direction of the camera
sets the direction of the camera
returns the direction of the
sets the source of the source file
returns true if the source file is a source
sets the looping looping
returns true if the looping list is looping
returns the number of buffers in the
returns the number of buffers processed by the
sets the buffer of the buffer
returns the buffer
queues the buffer to the specified buffer
the buffers of the buffers
retrieves the value of the more results
sets the value of the given property
returns the value of the specified property
sets the value of the specified property
returns a property value for the specified property
returns the update count of the result
sets the maximum number of bytes allowed in the database
sets the query timeout in seconds
returns the runtime runtime exception type
sets the returned string
sets the
returns the argument name
sets the
returns true if the signature is not
sets the name of the renamed method
sets the body
sets the erase buffer and buffer types
returns true if the should be
sets whether the method calls the method call
returns true if the should be
sets the value of direct direct buffer
returns true if the should be
sets the value of the for indirect buffer and array value for
returns true if the signature uses the signature type
returns true if the type is
returns true if the should be
returns true if the should be
returns true if the should be
returns true if the signature is a primitive value
returns true if the type contains the type
returns the type of the
returns the type
find pointer to the pointer
clears the pointer pointer
returns true if the pointer is pointer
creates a new code configuration code object
returns the configuration
creates a new ast object with the given text
returns the base element type of this type
recompute the size of the element
returns the value of the struct name
sets the value of struct name
returns the number of fields in the database
returns the field at the specified index
adds a field to the list of parsed fields
sets the body parsed
puts a type into the map
returns the type of the specified type
removes a from the map
returns a string representation of the function
returns the size in bits of the current size of the
returns the name of the
sets the name of the
returns the size of the given machine
returns true if the pointer is a function pointer
returns the hash code for this object
tests the equality of this object against the specified object
returns a string representation of this object
visits the given type
returns true if the name has a name
returns the depth of the pointer
returns the dimension of the array
returns the argument name
returns the type of the argument
adds a new argument to the argument
returns a string representation of this object
returns the argument name
returns the type of the argument
adds a new argument to the argument list
returns the value of the enum value
returns true if the given name is contained in the set
remove a specific
pushes a new scope onto the stack
pops the top scope stack
returns the current scope as a string
adds a scope to the current scope
adds a scope to the scope
removes one level scope scope name
adds a symbol to the table
returns the scoped scoped scoped scoped scoped scoped scoped scoped scoped scoped
searches the scope in the scope of the scope
returns a string representation of this object
returns the class of the class
returns the name of the class
returns the descriptor of the descriptor
returns the output directory
returns the package name of the package
returns the package name of the package
emit all the files in the file
parse the given file
sets the background image
returns the control for the specified method
returns true if the given function is a function name
returns the length of the given string
checks if the given function name is a direct direct direct
returns true if the given class is a
returns a list of class names for the given class
returns a list of all the classes that are referenced by this
returns the package name for the given package
returns the value of the given function
returns the value of the given string as a string
checks if the given symbol is
rename a java type
returns the php method name
returns true if the emitter is static
emit the interface
invoked by the platform to emit a code code
returns the function name
returns the number of
returns the path to the library
close the library
emits the declarations of the given variable declaration
returns true if the type is a constant
emits the body user
returns the name of the function in the scope of the given
emitter for the default comment
writes a single value to the output buffer
adds a new record to the table
gets the value of the sort property
gets the value of the sort property
gets the value of the sort property
returns the flag indicating whether or not the columns are sorted
gets the value of the sort property
gets the value of the sort property
gets the value of the sort property
returns true if the search result is a sort case sensitive
initializes the textures
creates a texture from the given filename
this method is invoked when the user is
this method is called when the user wants to draw the
this method is invoked when the user is
this method is called when the user wants to draw the
initializes the textures
sets the options to the user
calculate the fps of the current frame
invoked when a key is released
invoked when a key has been typed
returns the texture of the texture
returns a list of all entries in the list
returns a hash code for this object
returns the ceiling of the given x
returns the largest value of the specified x and y
returns the sine of the x coordinate
returns a string representation of the object
returns the tangent of the kernel
performs a standard way of the page format
returns true if the given attribute is supported by the service
compares two urls for equality
closes the jar file
checks if the job is complete
returns the index of the page at the given index
returns true if the range range receiver is allowed to merge
merges this range with another range
sets the flag indicating that the personal is personal
disposes the toolkit
returns the desktop
disables the specified canvas
disables the background of the component
returns true if the modifiers of the modifiers
compares this folder with the specified object for order
returns whether the user can popup a task
returns the language for the given language
sets the positions of the
returns the data column at the specified column
returns the data row
sets the data row
returns the parameter value
connect to the remote server
returns true if the window is meant to be updated
returns the number of buttons in the table
close the connection and release resources
constrain the given value to the left
returns the destination of the object
returns a raster with alpha and
returns the rgb value of the pixel at the specified coordinates
returns the width of the image
returns the height of the image
returns the width of the image
returns the height of the image
returns the image producer for this image
creates a new graphics object
returns a new
the current color model
returns the minimum x value of the raster
returns the minimum y value of this raster
returns the sample model
finishes the current state of the
returns the width of the tile
returns the height of the tile
checks if the socket is valid
returns the y coordinate of the raster
returns the y coordinate of the raster pixel
returns the raster tile at the given tile
returns a raster object from the raster
creates a new raster data object with the specified raster
returns a new code raster code that is used to draw the
writes the specified byte to the output stream
returns a string representation of this signature
returns the value of the object field of the given object
returns the value of the code code
creates a new instance of the method
creates and returns a copy of the field
returns the constructor this class is using
returns a string representation of the given service
exit the application
saves the current state of the file
returns the value to be used for the key
returns true if the given flag is true if the thread is
print the usage of the system
returns the destination folder of the given line
find the package with the given data
searches directory for the given jar file
save the given file to the file system
returns the constructor handle for the given constructor
returns the context class loader
set the context class loader
returns the probability of the probability distribution for the given probability
returns the sum of the probability of the probability of the probability
multiplies the constant value of the constant at the given
sum of the sum of the sum
trims the current value to the maximum value
returns the number of columns in the table
returns the column name
returns the most specific superclass for the specified column
sets the data object
sets the observer
initializes the object
initializes the object
initializes the property
returns the unique id of the object
sets the agents collection of this swarm
initializes the property
returns the properties
returns the list of peptide
returns the number of validated spectra
compares this object with the specified object for order
resets the panel of the of the panel
returns true if the current thread is active
returns true if the has veto
sets the name of the
returns the aggregator that is used to determine the of the
sets the active flag
sets the value of veto
invoked when a key is pressed
returns true if the is
show all the perspectives in the database
sets the startup mode
sets the
returns the properties of the agent
returns the free text
returns the column name
compares this object with the specified object for order
returns the general property for the given key
sets the property
returns the value of the specified property
returns the set of general key
returns the general properties
returns the selected import
sets the selected iterator
changes the value of the given property
updates the text field
sets the status of the text
sets the error
returns the properties of the table row
sets the status color of the status panel
sets the color of the error
gets the active validation saver
returns the timestamp of the last
returns the properties of the given
returns a string representation of this object
returns the saver saver
sets the output file
returns a string representation of this object
calculate the width of the font
calculate height of the height
get an iterator for the
returns the saver that is used to validate the validation xml
adds a new agent to the list of agents
sets the file
returns a string representation of this object
sets the sequence of the given sequence
sets the
returns the number of rows in the table
sets the file
returns the sequence for the given hit
returns a string representation of this object
returns the column name
returns the annotations for the peptide
returns true if the cell at row and column index and column
returns the peptide identification
load the
this method is called when the user selects the menu item
returns the value for the cell at code column index code and
sets the value at code column index code and code column code
adds a listener to the table model
get an iterator for the
load the
removes a listener from the table model
sets the file
returns a string representation of this object
sets the spectrum file
returns the description of the filter
returns the description of the filter
sets the annotations
returns the description of the
returns the description of the filter
returns the description of the filter
returns the description of the filter
returns the description of the filter
returns the description of the filter
invoked when a key is pressed
returns the description of the filter
returns the description of the filter
gets the value of the property
returns the description of the filter
returns the description of the agent
returns the description of the
returns the description of the filter
returns the component that is currently displayed in the table
sets the table color
sets the current status of the
this method is called when the mark is
sets the color of the spectrum
sets the current state of the label
sets the default font
returns the selected light
returns the selected dark color
determines if the given value is important or not
returns the selected highlight
returns the column name
returns the non selected non null value
returns the color of the header light
returns the data for the given peptide
returns the name of the class that this belongs to
returns dark color of the dark
returns true if the given peptide object is the peptide
returns the sequence of the sequence
sets the sequence of the sequence
disable filter filter
returns true if the filter is filtered
this method is used to get the for the given peptide
returns the number of visible rows
returns the number of visible rows in the table
returns the maximum mass of the
returns the table row for the specified row index
returns true if the given peptide is
returns the minimum mass of the
sets the value of the spinner
returns the peptide identification
returns the number of visible rows
returns the message
adds a listener to the panel
returns the table row at the specified index
sets the maximum value of the range
sets the of the selected peptide
returns the selected table column
sets the value of the progress bar
updates the spectrum annotation with the specified spectrum
creates the screen
closes the tab
returns the root of the tree
returns the number of peptide
this method is called when the user selects a tab
returns the peptide identification of the given index
returns the tree model
sets the filter
disable the filter
returns the next element in the tree
returns the previous element in the tree
returns true if the model is filtered
sets the text area
sets the text area
cancel the current frame
invoked when a window is being made in a
creates the strings
invoked when a mouse button has been pressed on a component
cancel the cancel button
invoked when a key has been typed
invoked when a key has been typed
mouse drag listener interface
gets the value of the changed since last save property
cancel the current thread
sets the action listener
sets the value of changed changed in save
returns the selected mediator
adds an action listener to the combo box
returns the saver that is used to validate the validation
invoked when the mouse has moved on a component
sets the selected quantity of the
returns the selected peptide
sets the value indicating whether or not the last modified time was
creates the text for the tree
sets the of the selected
returns the selected import
closes the dialog
returns the frame that is currently being used to display
initialize the first tab
returns the aggregator that the aggregator was used to send the
show the dialog
this method is called when the is
returns the number of peptide spectra
returns the peptide identification of the given index
called when the has been triggered
updates the state of the task
invoked when an action occurs
returns the input
returns the selected table column
returns the last version of the current version
this method is called when the user changes the
returns the active peptide identification
gets spectrum spectrum
gets the value of the selected peptide property
returns the peptide hit for the given peptide index
tree selection tree node
returns the best peptide peptide hit
returns the number of peptide hits
returns the number of peptide hits
this method is called when the tab is removed
removes a tab from the tabbed pane
returns the meta data for the given key
adds an agent report to the database
removes all tabs from the tabbed pane
returns a list of reports for a given hit
removes all tab selected tab
returns the validation report
returns true if the validation is validated
clears the table
compares this object with the specified object for order
gets the
returns the name of the spectrum
returns the hit
sets the text of the tree node
sets the filter
sets the value of the validated property
returns the value of the result property
disable the filter
sets the result of the query
saves the current task
sets the auto comment
returns the user comment
sets the user comment
returns the number of correct questions
sets the correct version number of the abductor
resets the to the default value
gets the value of the property
adds a report to the report
returns the report
returns a string representation of the object
returns the
adds a new number of to the database
returns the id of the identification
returns the number of items in the list
sets the type
returns the table row at the specified index
gets the value of the type property
moves the selected item to the next one
moves the selected item to the previous one
returns the current file name
sets the file to the given file
returns the settings
this method is called when the agent is connected
returns the
report the number of partners
this method is called when the is dropped on the board
report the end of a
sets the
returns the current file name
returns the current file name
finds the mass of the mass of the given delta
returns the current file name
gets an agent aggregator
sets the sequence of the
returns the description of the
returns a description of the current
returns the description of the file
returns the description of this filter
returns the description of the test
returns the description of the file
returns the description of the current user
returns the description of the current user
returns true if the iteration has more iteration
returns the description of the modification
returns the description of the
returns the description of the modification
returns the index of the file that was written to the
returns the description of the filter
returns the description of the filter
returns a description of the distribution
returns a description of the distribution
returns a description of the distribution
sets the type
returns the description of the current user
sets the sequence of the
returns a description of the type of the
returns a description of the type of this configuration
returns the description of the file
returns the description of the filter
returns the description of the filter
sets the alpha value for the alpha channel
sets the delta
returns the description of the filter
returns the description of the file
checks if a given word is modified
sets the future future model
sum the votes of the vote
returns a description of the type of the user
returns a description of the type of the user
returns the connection
returns the description of the score
returns true if the connection has a connection
tests if the connection is still valid
sets the connection to the database
closes the connection to the database
returns the configuration file
sets the value of comments
returns the number of tabs
returns the output file output
returns the task input file
returns the index of the selected tab
returns the output file
sets the configuration input configuration configuration
returns a string representation of this object
returns the file
sets the separator
sets the file
returns the file
shows the about dialog
returns the output
sets the value of the peptide
returns the value of the
toggle info panel
sets the of the
this method is called when the exit is closed
initialise the retrieval service
get entry entry from the df entry service
returns protein protein sequence
returns an agent object from the specified reference
returns the next element in the iteration
returns a list of all active agents
returns true if there are more keys to be processed
sets all active agents
sets all the agents to be used for the agent
returns the name of the
sets all the agents in the agent
returns the current file name
returns a short description of this action
populate the with the given domain
returns the minimum number of ip addresses in the
adds the tap to the
expands the tree
sets the name of the user
removes all nodes from the scene graph
returns the selected node
selects the node with the given node
removes the current node from the tree
adds a new child to this node
creates a new link
adds a new node to the tree
removes the host from the
removes the domain from the list of the
add a new host to the list of hosts
adds a interface interface to the list of interfaces
adds a host to the list of hosts
adds a collision domain object to the domain
removes a host from the host
removes a collision domain from the list of collision domains
prints the exit help
this method is called by the thread to run the
run the transformer
prints the exit help
returns the time at the specified index
returns the start time of the specified time
returns the stop time of the specified index
gets the value of the sys cmd property
returns the response at the specified index
returns the total time in the total time
returns the average time in milliseconds
tests if a given file is accepted by this filter
schedules the specified task for execution of a specific task
parse the given string array
schedules the specified task for repeated execution of a specific task
returns the number of arguments
schedules the specified task for repeated execution of a repeated task
returns the argument at the specified index
returns the proxy map
runs the task
sets the proxy map
get the value of the specified integer
run the task
returns the map of the given name
returns a list of the named object
get the value of the specified element
adds all properties to the given properties
returns the string value of the specified property
add a new argument to the parameter list
returns true if the given option is an option
returns the boolean value of the specified property
stores the given file in the file system
add a new parameter
returns true if the given option is not
returns the value of the specified property
load a file
returns the value of the specified property
returns the optional value of the property
load the file from a file
add a parameter to this element
returns the double value of the specified property
load the properties from the given input stream
returns the value of the option
returns the string value of the specified property
returns the value at the specified index
returns the boolean value of the specified property
returns the optional long value associated with an object
returns the number of parameters
returns the integer value associated with the specified key
finds the property names matching the given regular expression
returns the value of the specified option
returns the long value of the specified property
find a property group with the given name
returns the string representation of the parameter
returns the value of the specified option
returns the double value of the specified property
removes a regular expression from the list
sets the use id attribute of the object
returns the boolean value of the option
returns the set of sections
returns the config property
sets the value of the property
loads the given input stream from the given stream
returns the current value of the opt expression
load the xml document from the xml file
stores the contents of the header
stores the given code string code to the specified output stream
returns the value of the named property
returns a string representation of the object
returns a string representation of this object
stores the given map into the map
returns a string representation of the object
returns the value of the property with the specified name
returns the double property
tears down the test
test of get file method of class path
test method for
test method for
make sure that the file is touched
tests move from file
tests that the file system is copied
test glob of glob glob
test glob of glob
this method initializes this
this method initializes j toggle button
this method initializes j text pane
this method initializes j scroll pane
this method initializes server text field
this method initializes this
this method initializes mail in server text field
this method initializes login text field
this method initializes password field
this method initializes interval text field
this method initializes btn cmd go to
this method initializes this
this method initializes btn cmd type
this method initializes j text pane
this method initializes this
this method initializes j scroll pane
this method initializes script panel
this method initializes btn wait wait
this method initializes j button run
this method initializes shift
this method initializes ctrl
this method initializes this
this method initializes alt
this method initializes win key
this method initializes
this method initializes j content pane
this method initializes j text pane
this method initializes this
this method initializes script input
this method initializes this
this method initializes enter
this method initializes pos poll panel
this method initializes j button go to
this method initializes j button jump to
this method initializes
this method initializes j jmenu bar
this method initializes space
this method initializes tab
this method initializes j scroll pane
this method initializes file menu
this method initializes key a
this method initializes key b
this method initializes command menu
this method initializes key c
this method initializes key d
this method initializes options menu
this method initializes key e
this method initializes help menu
this method initializes key f
this method initializes key
this method initializes this
this method initializes key h
this method initializes key
this method initializes j menu item
this method initializes key j
this method initializes key k
this method initializes key l
this method initializes j menu item
this method initializes key
this method initializes key n
this method initializes key
this method initializes j menu item
this method initializes key p
this method initializes key q
this method initializes j menu item
this method initializes key r
this method initializes key s
this method initializes key t
this method initializes j menu item
this method initializes key u value
this method initializes script panel
this method initializes key v
this method initializes cmd go to menu item
this method initializes key
this method initializes cmd jump to menu item
this method initializes key x
this method initializes cmd click menu item
this method initializes key y
this method initializes tool bar
this method initializes key z
this method initializes map menu item
this method initializes j button ok
this method initializes j button cancel
this method initializes cmd type menu item
this method initializes cmd wait menu item
this method initializes sample script menu item
this method initializes cmd screenshot menu item
this method initializes cmd mail
this method initializes help commands menu item
this method initializes help advanced commands menu item
this method initializes mail check menu item
this method initializes j menu item
this method initializes cmd key
this method initializes console console menu item
this method initializes check mail menu item
this method initializes console panel
this method initializes execute menu item
this method initializes j menu item
this method initializes new menu item
tests the functionality of the test
this method is used to execute the object
this method is invoked when the user wants to select a new
flushes the current page
adds a new attribute
closes the item
writes the text to the xml document
writes the given string to the output stream
write a line to the output stream
writes the given to the current output stream
translates this component
sets guard condition
adds a new extend
sets the name of the name
flushes the previous item
sets the brief brief brief brief brief brief brief brief brief brief
returns the brief description of the item
adds a condition to the end of the list
returns the basic flow
adds a new alternate flow to the list of alternate flows
adds a new sub flow to the sub flow
adds a condition to the end of the list
adds a new extension point to the
adds a special requirement to the
adds a bullet to the end of the list
adds a step to the current step
add a new extension point to the output
creates a new
add a new extension point to the output
closes the item
writes the text to the xml document
writes the given string to the output stream
write a line to the output stream
drag source drop target
this method transfers the current data to the output stream
returns the number of elements in the list
compares two attribute objects for equality
returns the namespace uri associated with the given prefix
sets the z data reference
returns the curve
returns the prefix of the namespace uri
returns the curve
returns true if the log is a
returns an iterator over the prefixes
returns true if the log is a
clears the current document
returns an iterator over the prefixes associated with the given namespace
returns an iterator over the uris of the
sets the
returns the kind of the
gets the value of the property
returns the kind of the
returns the kind of the attribute
sets the new value of
returns the kind of the
is this a
is this a
returns true if the report is a report of the
removes the content model from the model
returns the document
gets the value of the property
returns the kind of the
sets the algorithm
returns the math expression
compares this object with the specified object for order
adds a parameter to the list of parameters
sets the data reference
adds a variable to the list of variables
sets the initial time
returns the symbol
sets the time of the output time
sets the output time to be used for the output time
returns true if this is a symbol
sets the number of points
returns the kind of the
sets the
returns the time of the output stream
sets the symbol
returns the output time for the output time
returns true if this is a variable
returns true if the list has changed
returns true if this symbol is
returns the kind of the
returns the contents of the file
check if the version is newer than the other version
returns the uri of the
gets the value of the property
sets the notes
returns true if the is
adds a note to the list
removes a notes from the list
sets the notes
returns the value of the code property code
returns true if the source file is
gets the value of the type property
writes the document to the file
removes the specified annotation from this set
sets the annotations
sets the
writes the document to the document
returns true if the entry is obsolete
returns the version of this version
returns the for the given
returns the attribute of the object
returns the for the given
returns the species name and species name
returns the for the given
returns the result of the last processed
returns true if the operation is currently
returns the notes element
returns true if the name is set to true
sets the data reference
returns the report
sets the y data reference
returns true if the attribute is a change attribute
returns true if the event is
returns true if this object is processed
sets the simulation reference
returns true if the kind of the is
returns the model reference
returns true if the is
gets the value of the simulation reference property
returns true if the change is set to false
sets the target
returns the element annotation element
removes the element from the element
sets additional namespaces for this context
sets the models
sets the
sets the data generators
sets the outputs of the output
returns a model with the given name
returns the simulation sim of the sim sim sim
returns the task with the given id
returns a list of all the additional namespaces
disconnect from the server
send a message to the server
tests if the token is valid and false otherwise
checks if the group is valid
reads a token group from the input stream
returns true if the given token is a valid type
returns the mask
returns the token
removes a token from the list
send a message to the server
resets the iterator to the first character
insert the error at the end of the list
returns the output value
checks if the given string is a valid
tests if the given type matches the given type
returns a new token group
stops listening for incoming connections
returns true if the connection has been disconnected
returns true if the connection is connected to the connection
this method is used to connect to the socket
this method initializes this
this method initializes j content pane
send a message to the server
disconnect from the server
returns the turn of this query
closes the connection
parse the given message
handles the message
handles a message
sends a message to the server
returns the state of the connection
the given message
creates a new option group
returns the number of of the given token
returns the variant option for the given token
returns the note
returns true if the given value is present in the given
returns the order of this order
returns the number of the variant value
returns true if the deadline is
creates a new instance of the class
returns the syntax level of the syntax
returns true if this is a
returns the output token group
sets the status
adds a handler to the list of handlers
handle the group
removes a handler from the list of handlers
this method is called when the user selects a command
this method will handle the command handler
returns true if the is
this method is called when the command is executed
sets the turn
accept a command
returns the phase order of the current group
returns true if the cell is positions
the command should be handled by the command
returns the left
the given
logs the parsing error
logs a message in the current token
log a message to the log
log the given message and the user
this method is used to log the message
logs a message with the given message
logs a message with the given message
turns the turn to a turn
returns the turn info for a turn
this method is called when a connection is closed
logs the error message
remove target from the list
disconnect from the server
returns true if the current play is ready to play
returns true if this object is observer
adds a token to the end of the list
reject a command
sends a command to the server
adds a token to the end of the token
returns true if this is a move
turn the next turn
the connection to the database
resets the orders
connect to the server
starts the game
adds all the given mapping to the current token
reads a command from the given file
returns the current turn info
returns the map of the current map
returns the maximum number of
returns the state of the server
returns the target of the target
returns the variant info
convert the given to a token
copy the target to the target server
listen for a token in the server
returns true if the observer is
this method is called when the user selects a invalid state
converts a given token into a given token
checks if the given token is a valid token
reorder the order of the given order
the
start a new game
starts a game
this method is called to indicate that the next turn
this method is called when the game is started
returns the unassigned power of the current group
this method is called to indicate that the player wants to turn
notify the player that a player has
notify the player that a player has
pauses the game
sets the game state
save a user into the database
checks if a user exists in the database
deletes the specified permission
deletes a blog entry
returns the first result of the query
populate the list with the
saves a blog
this method is used to update the blog
handle the exception handler
sets the time as now as now as now as now
returns the day
gets the month
sets the month
returns the number of objects per page
sets the number of objects per page
returns the list
generate a string for a list
returns a string representation of the day
this method is used to get the current blog
this method is used to get the resolution of the blog
registers the user to the user
returns the theme path
append a to the
returns the path to the blog theme path
returns the request parameter name for the specified request parameter
returns the request attribute value
sets the request attribute of the attribute object
returns the session attribute for the specified attribute
returns the action id for the action
returns the subject of the current subject
returns the current user
execute the logic logic logic
gets the value of the property
sets the
resizes the image to fit the given size
sets the default key listener
sets the default mouse listener
sets the default media event listener
returns the number of connections in the pool
adds a connection to the end of the list
removes a connection from the list of connections
closes the connection to the server
updates the
sets the x y and y values
returns a string representation of this object
this method is used to run the server
creates a new dbobject
creates a new dbobject
creates a new dbobject
saves the graph to a given path
writes the nodes
writes the edges of the graph to the target
generates a string representation of the footer
creates a regular expression pattern for the given rule
the matcher
forces a new character to be flushed and storing the end of
returns the index of the relative index
creates a regular expression pattern for the given rule
adds a language map for the given language
creates a string representation of the rule
reads the text from the given amount
initializes the text
reads the next character from the given amount
reads the contents of the buffer from the specified reader
transform the given reader into the given reader
transform the given reader into the specified reader
parse the given reader into a version
writes the contents of the given reader into the given reader
initializes the matcher
moves the matcher to the current position
the matcher
parse the given reader
parse the given reader into a reader
adds a rule to the list of rules
returns the value associated with the specified key
find out if the matcher has been found
finds the first occurrence of the specified element in the current
marshal an object into the stream
marshal the contents of the file to the writer
unmarshal an xml element into a dom object
deserialize a content from the input stream
closes the reader
closes the writer
returns the
returns the regular expression for the given title
returns the
returns the regular expression for the given title
returns the pattern for the given category
returns true if the given wiki is before the given wiki
returns the link to the category
this method is called when the user selects the delete button
adds a card to the table
adds a new code row code to the table
removes a card from the list of rows
get the properties from the database
update the card
deletes the card by id
load cards from the card
load cards from the card
enables the toolbar button
displays the card
returns the selected section
returns the selected question
builds a string from a statement
closes the dialog
closes the current session
displays the given section
checks if the given name is already in the test
check user for the given author
change the details of the given test
removes the specified section from the ini file
removes a subsection of the given question
starts a test
answer question answer
displays the text in the question
returns a string representation of the sign of the sign
returns the string representation of this object
adds bean bean to the set of the bean
replaces the object with the specified reference
returns the for a given object
this method is called when the connection is closed
returns the session
adds a bean in the list of bean ids
removes a bean from the list of
returns the requestor for the given request requestor
this method is called when a connection is started
writes the reply to the output stream
called when a connection is closed
unregister a
reads the request from the request
get the method invocation handler for the given name
writes the request to the output stream
reads the reply from the message
registers a new object
returns the value of the text to sign for authentication
sets the connection listener
sets the connection
process a request
returns the invocation handler
sets the connection listener
called by the user to handle the method called when the method
returns true if the method is a method comment
called when the cpm is started
returns the of the given factory
returns the name of the published event
returns the reply code
this method is for externalizable
this method is used for deserialization of the object
creates a new instance of callback
sets the configuration
returns the size of the message
writes the message to the given output stream
dispose the resources
sets the address of the message
creates a new name for the given mail name
verifies that the given code address code is the same as the
this method is used to send a message to the server
returns the mail address
returns the header of the given message and returns the header
this method is called by the framework to run the
log a message to the log
log a message with the given message and cause
returns the hash code of this object
log a message to the log
logs a message with the given message and cause
returns the advertisement of the pipe
returns the input pipe
returns the next character
sets the next char
returns the previous character
sets the previous character
inserts a new char into the list
sets the current position of the current character
inserts a new into the given position
returns true if the next character contains a character
returns a string representation of the current character
inserts a new position into the given position
returns a string representation of this object
deletes a position in the list
fills the data in the list
connect to the server
disconnect from the socket
connect to the server
sends a byte array to the output stream
opens the file chooser
opens the server
notify the status of the player
close the log file
returns the logfile
sets the time in milliseconds
returns the lock for the given code string code
returns a new string with the specified lock
stops the
this method is called when the user selects the
flush the log
flush the stats
sets the level of the trace level
sets the timer for the timer
the
returns the for the given user
this method will be called when the timer expires
returns the lock for the given code string code
returns true if the timeout is timed out
sets the
sets the data directory
returns true if the sort criteria is supported
returns the host
returns a string representation of this object
this method is used to set the user id of a user
returns true if the scan is supported
returns the rank of the rank
returns the rank of the rank
returns true if the user has a users password
returns true if the user has been signaled by the user
disconnect from the database
returns the list of metadata infos
returns the rank of the rank
closes the remote server
reconnects a user
returns a string representation of this object
returns a shallow copy of this list
returns the stats for this user
returns a rank data rank
returns the bitset of the given code bit code
returns the last character in the stream
stem the word
copy the given bit set to the current state
flush the buffer
set the offset of the program
returns the of the given offset
adds a new letter to the
sets the letter
returns the rank of the rank

get the from
adds a number of
returns the list of metadata infos for a given
returns the number of in the current thread
returns the rank of the rank
returns the rank of the rank
returns the list of infos that are in the list of
returns the rank of the rank
sets the next data directory
compares the term of the term
compare two terms
this method is called when the user selects the
returns true if this object is
returns true if the interval is greater than or equal to the
sets the cmp
compare two
returns the next
compare the term with the terms of the term
returns the next element in the list
returns the next
returns the next term in the database
resets the list of active objects
returns the next term in the document
returns the next term in the database
adds a new entry to the list of
returns the next entry in the list
compares two
returns the next
returns the next element in the iteration
returns the of the given
loads the of the given rule
resets the list of the elements in this list
load a new rule in the given sudoku
close the file
returns the number of regions in the given region
get the offset of the record
returns the offset of the
returns the number of in the
initializes the code ini code
closes the current
resets the list of
closes the current connection
returns a record directory with the specified issn
closes the current instance
returns the specified number of records
closes the current
checks if the term is
close the database
returns the buffer buffer
puts a buffer region in the buffer
returns a list of terms

returns the short value at the specified index

returns the short value at the specified index
decode the next byte
returns the order of the given order
returns the order of the given class
returns the byte offset of the specified byte array
returns the short value of the specified byte array
returns true if the element type is a display type
checks if the element contains a given element
returns true if the section is in the section
returns a string representation of this object
called when an element is clicked
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of the object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
creates a new instance of
sets the
returns a string representation of the given action
sets the
creates a new instance of
set the
creates a new instance of
returns a string representation of the given content
creates a new instance of
creates a new instance of
creates a new instance of
returns a string representation of the object
creates a new instance of
extract the field name from the given field
creates a new instance of
extract the marc field from the data
creates a new instance of
creates a new instance of
this method is used to create the edit session info
creates a new instance of
sets the
creates a new instance of
creates a new instance of
creates a new instance of
returns the module data
returns the module data for the specified request
creates the document
parses the file
release the lock
display the
returns a string representation of this object
display heading
displays an error message
the user request
sets the user request
this method is called when the user selects a user
returns a string representation of this object
returns a string representation of the map
sets the
returns the string representation of the given string
resets the
returns true if the is
returns a string representation of the object
send a response to the
this method is called to indicate the data is done
initializes the client with the specified port number
returns a string representation of this object
initializes the client
returns true if the connection is connected to the host
returns a string representation of the transaction
resets the connection to the database
closes the connection to the database
returns the info
returns the server
requests the current request to be a count
count the number of requests in the current thread
creates a new instance of sip security
returns the value of the attribute
sets the
resets the value of the counter
update the digest
updates the specified code code
returns a string representation of the object
display the anchor of the anchor
this method is called when the user selects the ok button
returns true if the item is available
returns the valid
returns the password password
gets the value of the status property
gets the value of the institution id property
gets the value of the identifier property
returns the personal name
gets the value of the home address property
gets the email address of the email
gets the value of the home phone number property
creates a new instance of sip sequence
returns the sequence of the current value
returns the end session
display a
close the connection
sets the timeout for the connection
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
this method is used to render the request
returns a string representation of the object
returns a string representation of this object
builds the individual individual list of individual individual names
sets the info for the query
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
append the error information to the current page
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
writes the given line to the buffer
returns a string representation of this object
returns a string representation of this object
checks if the given data is a
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
sets the info for the query
returns a string containing the user specific url
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
returns a string representation of this object
build individual individual list
display the contents of the element
writes the text in the text area
returns the user specified by the request url
returns a string representation of this object
this method is used to get the user
returns a string representation of this object
returns a string representation of this object
initialize the
select a single resource
returns the system name
returns the host name
returns the server name
returns the server port
returns the server type
gets the value of the property
returns true if the lower case is used to determine whether the
returns true if the name required for the name is required
returns true if the is
returns true if the is
returns true if the authorization required for this
returns the client class name
returns the timeout value
returns true if the block is on error
returns the connection retries
returns the ini file name
returns the strip chars
returns the block number of the block
this method is used to handle the addition of a
deletes a row from the table
initialize the given ini file
initialize the given ini file
this method is called once when the is selected
initialize the ini file
initialize the ini file
open the connection
print a message with the given line
rolls the current time the specified time the connection to the specified
close the log file
returns the logfile
this method is called when the user selects a new
this method is called when the user logs
close the server
returns the logfile log file
opens the file chooser
print a string
returns the logfile
sets the user name
this method is called when the user selects the
rolls the current time the current time
close the file
returns a string representation of this group
send a response to the ab
resets the status to zero
run the
sets the name of the
sets the state
sets the group
sorts the in the reverse order of the given object
returns the largest number of
this method is used to read the input stream from the input
this method is called when the input stream is read
check if the given address is connected to the given address
this method is used to set the input file name
returns the percent done for the current sequence
log the log
open the log
delete all users
kills the given session
sets the timer for the timer
returns true if the is
sets the timer
sets the trace
returns true if the connection has been connected
returns the session id
gets the value of the property
stops the
initializes the user
checks if the user is authorized to the given name
this method is used to determine if the given ipaddress is in
returns true if the given is in the database
flush stats and flush the stats
sets the level of the log
returns the metadata data
sets the timer for the timer
returns the database list
sets the db list
returns the remote cseq name
returns the remote user password
checks if the database is allowed to access the database
returns the error code
initializes the user
returns the error message
returns true if the user is authorized to enable the authentication
returns true if the is
returns true if the is
sets the password for the user
gets the value of the property
returns the password
returns the ip address of the user
sets the locale
returns the user object of this object
check if the password matches the given password
returns the value of the resource with the given resource name
puts a resource into the resource bundle
deletes a resource and its resource
sets the local
returns a string representation of this object
this method is used to determine if the given ipaddress is in
checks if the given database access is allowed to access the database
close the connection
check if the password matches the password
returns the error code
returns the table name for the given table
returns the error message for the error
returns the column name for the given column name
merges the template with the given template
returns the value to which the specified resource name and resource matches
updates the element with the specified id
closes the current session
returns a string representation of this object
adds all elements in the vector to the vector
adds a new partial task to the completion queue
returns the object associated with the given password
adds a new duplicate
returns a vector of descriptions of descriptions
updates the given tree
sets the language
returns the languages
updates the number of files in the database
returns the database id for the given user id
this method is called by the framework to initialize the
sets the operation client
returns true if the ok button is pressed
returns true if the next element has more elements
this method is called when the user logs
updates the tree
returns true if the user has a users password
search for the current search
returns a string representation of the object
this method is called when the user selects the
close the database
this method is called by the browser to insert the tree
returns true if the current user is ok
the user
returns true if the ok button is pressed
delete data from database
sets the case sensitive flag
sets whether the punctuation should be searched
returns the key for the given key
finalize the log
closes the current database
the db user db
returns the first of a given
closes the
updates the given data in the table
closes the database
returns the error message
returns the
returns the attributes of the database
disconnect from the given user
the for the given user id and returns the result
returns the element that is contained in the given parent
this method is called by the garbage collector
this method is invoked to indicate the request to be invoked
returns the string representation of this object
sets up the page
returns the access control command
the given user data
sets the command to the specified
returns the element of the given element
returns a term info object for this term
saves the db results to the database
returns the element name for the given element
returns the name of the specified entry in the database
returns true if the receiver supports sort
returns the element at the given element
returns the class of the entry in the given set
the data
returns the number of entries in the given string
returns true if the scan is supported
returns the last result set
toggle the current page
returns the last result set
returns the last group
returns the last group
returns the scan query data
add a new to the database
returns the query for the given query
returns the query for the given query
returns the query component for the given query name
closes the current
returns the query for the given query
returns the query limits for the given query
removes an element from the list of elements
returns the query for the given query
returns a string representation of the object
sets the database
sets the password of the user
returns the
returns true if the given result set is sorted
returns the service type
returns the password of the user
returns the remote server name
returns the service provider
returns true if the user is allowed to be able to determine
returns true if the given name is in the history
returns true if the connection is still in the connection
checks if the given name is a temporary file
checks if the given is
load ini file from ini file
returns the
returns the threshold
checks if the given group is a group of the given name
returns true if the send is send to the server
sets the
returns the order preference
returns the result set of the user
returns the type of the service service
returns the action for the given action
gets the value of the property
returns the source of the event
returns a string representation of the user
returns the name of the result set
returns the copyright compliance for the
returns the original result set name
returns the requester
gets the value of the before date property
search term for search term
disconnect from the server
search term limit
sets the action to be used for the
removes the element with the specified id from the current element
returns true if the database is a valid db
updates the information on the given directory
gets the value of the data property
returns the database name
returns the
returns the element name
returns the key for the given image
returns the filename of the image
returns the thumbnail of the image
returns the type of the image
deletes a database database database database database
returns the cookie value
returns the class
get the file name of the image
sets the image file
returns a string representation of this object
returns the replicate element
returns the id of the
sets the for the given request
sets the preferred database names
sets the data access object
gets the value of the property
returns the database name
add a to the database
returns the database
returns the keys hashtable
returns the long name of the specified key
returns the display name for the specified key
returns the maximum number of records that are allowed to be used
returns the maximum number of records that are allowed to be used
returns the key for the given key
returns the direction of the key
returns the section with the given key
returns the long name of the key
returns the number of levels in the given element
returns the display name for the specified key
returns true if the sort attributes are sorted
returns a string representation of the term
returns true if the current session is a request
count the number of requests in the current session
returns the total number of total
returns the current number of the current session
deletes the current instance of the current user
returns the number of sessions
returns true if the session is
resets the count of all the session records
initialize the user
returns the current session
deletes the selected session
returns the session object for this session
sets the search results
returns the database name for the given result set
removes the element with the specified id from the list
returns the number of request
returns the name of the given result set
returns the number of response bytes
returns the id of the
returns the query parser
returns the first letter of the given id
returns the z name of the given
returns the image for the given directory
returns the db with the given name and the db
returns the code
gets the value of the property
returns a string representation of the object
returns the database object for the given name
sets the
returns the first element of the given element
returns the for the given
returns the entry that matches the given name
returns true if the field is required
returns the for the given user
returns a string representation of this object
returns the list of uddi database names
returns all matches of the element
returns the last entry in the history
returns true if this can be read
returns the class of the class
returns true if the is
returns true if the generator is a generator
returns a string representation of this object
this method is called when the user selects a user
returns the number of history entries in the given code history code
returns true if the database environment can be done
returns true if the object is a new session
returns the session id of the user
returns the number of last result set
returns true if the is
get the
returns true if the consumer can be done
returns the number of last result in the given set
run the
returns true if this is a
returns a handle to the specified string
returns the last name of the last database
returns true if the sort is allowed to be sorted
returns true if the summary results are
returns true if the object is
get the database name for the database
returns true if the is
sets the timeout for the timer
sets the timeout for the timer
sets the trace
disconnect from the session
get the database name for the database
returns true if the default use result set name is used to
returns true if the given partner is connected to the given address
returns the label of the element
log the log
returns true if the element names should be used as a string
open the log
called when the cpm is done
returns true if the reference id is used to use the reference
returns the of the given result set
stops the
returns true if the sort attributes are sorted
flush the log
flush stats and flush the stats
sets the level of the log
sets the timer for the timer
returns a server location for the given session id
get the for a given query
returns the depth of the tree
removes a child from the list of children
adds a child to this node
returns the child of the given xmldata xmldata
connect to the server
returns the next element in the iteration
returns the label for the given element
returns the id of the
returns the value for the given name
disconnect from the server
adds a child to the tree
returns the next element in the tree
sets the password
returns the total number of results in the result set
sets the init options
returns the large lower bound of the large set of the large
returns the for the given
returns the maximum size of the message
returns the word that is used to pass the password to the
returns the original result set for the given search
returns the preferred size of the message
returns the query type
returns the indicator of the current indicator
returns true if the element is
returns the scan size
returns the upper bound of the upper bound
get a object
increases the height of the element with the given id
returns the timeout value
returns the z table of the database
returns the timeout value
returns the server
returns the includes
increases the height of the element
clears the current document
returns the database server
decreases the height of the element with the given height
sets the initial user information
decreases the height of the element
returns the user information for this user
remove a list
sets the width of the element
returns the z coordinate of the z database
decode the input buffer
gets the
sets the width of the element
this method computes the digest of the digest
the digit of a digit
returns a string representation of the current value
returns a string representation of this object
compares this code code with the given
returns the data format for the specified format
updates the byte array with the values of the given byte
encodes the given buffer to the given buffer
encode a buffer into a base64 encoded string
sets the width of the element
adds a new to the data directory
closes the stream
sets the width of the element
adds a new to the data directory
closes the connection
returns true if the data is equal to this one
change the display element
adds a new to the collection
returns a string representation of this object
saves the applicable keys to the given directory
initializes the client
insert the new directory in the directory
initialize the client
returns the number of in the current
trims the text to be the given number of spaces
returns the first number of
insert the data directory in the directory
merge the occurrences of the given string into the database
compares this term to another
compares this term to another
puts a value in the ini file
kills the element
sets the attribute value
returns a string representation of the object
writes the specified file to the file
returns the transaction id
writes the given file to the file
sets the object to be used for this object
add a new to the database
send a response to the
returns a string representation of the specified request
returns a new data directory
this method is called when the user selects the
send a response to the ab
sets the value attribute of the object
returns true if this data contains the same data as the same
send a response to the
returns true if this object is that the same as they are
reset the iterator
returns the data for the given data type
send a response to the
returns the previous element type of the element
returns the of the given
returns the next element in the given element
resets the iterator to the next record
replaces the current data in the given data
returns the string representation of the string representation of the
returns the string representation of the given string
send a response to the
resets the status of the
returns a string of the given id and the specified
sets the
move the node out of the specified node
returns the ini file for the given key
finds the data node in the data directory
returns an enumeration of all sections in the specified section
find the data node with the given data
returns an enumeration of all sections in the ini file
move the node up to the specified move
compares this attribute type with another one
returns a string representation of this object
returns the directory where the data directory is stored in
returns the string representation of the attribute
returns the directory where the user can be used to data dir
returns the string representation of the
returns the additional info
returns a string representation of this object
adds a challenge request to the current
returns the attribute of this element
returns the structure of the structure
returns the value of the lt gt
adds a resource to the list of resources
returns a string representation of this object
build the directory
build the response directory
move down the node down
this method is called by the framework to perform the request
adds a default to the
clear the order of the current user
returns a string representation of the object
sets the data directory
this method will be called by the director
returns a data directory containing the data directory
returns a string representation of this object
returns the directory where the data directory is in
sets the database name
stores the aggregator in the database
returns true if the given attribute matches the given array
adds a new to the database
returns the string representation of this object
returns a data directory containing the data directory
returns the string representation of the current state of the
returns true if the error is an error
returns the diagnostic information
adds a to the
reset the result set id
returns the name of the database
resets the persistence context to the given time
returns the number of
sets the result of the given task
this method is called when the user selects the first time
returns the prices for the given method
get the prices of the given method
move the node in the given node
resets the property values
returns a string representation of the object
sets the maximum number of rows to sort the
sets the maximum number of records to be used by the user
sets whether the sort criteria should be used in the sort
sets the syntax of the syntax
sets the step size
add a key to the map
returns true if the session object is a new session
returns the key for the given key
returns a string representation of the object
returns the sync object associated with the given key
creates a new code action code instance
returns the value of the given key as a integer
creates a new instance of
initialize the
initializes the
returns true if the given key is in sync mode
removes the sync sync from the table
initializes the user
checks if the user password is by the user
sets the sync synchronization
sets the ip address
sets the ip address
returns the history of the history
returns the list of the authorized user
sets the list of the
returns the application context
returns the user password for the given server
opens the log level
checks if the database is allowed to access the database
returns true if the named key is contained in the hashtable
strips out the string characters from the given string
returns the ip address of the ip address
returns the number of data in the current session
the block number of the given block
check if the user is authorized to check if the user is
returns the user object
returns a string representation of the property
returns the root element of the element
close the log
returns true if the user fulfills the given user
returns the list of the
escape the user
checks if the database is allowed to access the database
returns true if the ip address is a valid ip address
returns true if the is authorized to the server
returns the string value of the given string
returns the error message
replaces the first occurence of the string with the specified delimiter
sets the http response header
returns the peer host
returns the peer address of the peer
returns the peer information as a string
returns the action for the given action
returns the authorization status
deletes all the users from the database
kills the given user
returns the action
returns the thread id
returns the status of the current status
returns a clone of this style
returns the
returns a string representation of the object
merges the given style in the table
returns the value to which the specified key is mapped in this
returns the value to which the specified key is mapped in this
returns the value to which the specified key is mapped in this
returns the value to which the specified key is mapped in
returns the value of the key in the ini file
returns the value of the key in the ini file
puts a key value pair into the map
creates a new data pair
creates a new data pair with the specified data
returns the string representation of the separator
returns a string representation of the object
returns true if the value is empty
stops the
flush the log
flush the stats
sets the level of the tracing of the log
sets the timer for the timer

returns a string representation of this object
returns true if multipart data is used for
sets the locale
returns the content boundary of the multi part
this method will be called when the timer expires
save user profile
returns the code rule code that matches the given name
removes a given instruction from the list of rules
returns a string representation of this object
strips the string from the string buffer
returns a string representation of the record
returns the string representation of the contents of the given
returns the string representation of the specified
returns the string representation of the specified
returns a string representation of the given
returns a string representation of the record
returns a string representation of this object
this method is used to format the given object
returns the rule
this method initializes the
returns the string representation of the specified
creates a string with the given string
creates a new text record
returns the directory of the data directory
returns a string representation of the object
returns the key for the given key
insert a new location in the table
returns the marc content
returns a string representation of this object
returns the call no call no
returns the call no call no
returns the call no call no
adds a new data to the data set
returns the call no call no
find the for a given directory
returns the list of the data for the given directory
adds a new character to the data
appends the specified character to the end of this data block
returns true if the next element has more elements
sets the widgets
adds the given code offset code to the current one
removes the specified user from the list of users
saves the to the given
returns the entity identified by the specified name
returns the user
puts a new entity in the database
sets the default operator
sets the default map to use for the default map
sets plural
returns a string representation of this map
returns a shallow copy of this map
checks if the specified code name code is in the current
request that the user requests the
saves the duplicate in the database
returns a string representation of this object
returns the data pairs
returns the data as a string
sets the data
returns the names of all the database names
returns the raw data object
returns the value of the specified attribute
add a database name to the database
returns the name of the
removes the selected element from the list
returns the name of the database
returns the file name of the file
add a new selected user
returns the name of the element
returns the name of the class that this is to be
sets the selected string
returns the
sets the selected vector
returns the result of the
returns a string representation of this object
returns true if the user has selected the specified user
checks if the database name is already present in the database
updates the db names
sets up the fixture for example open a network connection
updates the long name of the long name
deletes the database name from the database
sets the value of the given object
returns the db group name
sets the user request
returns the selected
returns the names of the database
returns the name of the long name
returns the topic name
returns true if the user defined topic is a user defined topic
validates the parameters
sets the bundle name
sets the database file
sets the desc file
sets the file
sets the name of the message bundle
sets the backup directory
sets the name
sets the log directory
add a new to the list of all the
add a new reporter to the list
generates a report for the given template
commit the file
compares this object with the specified object for order
sets the registered registered database
compares this database with the specified object for equality
returns a string representation of the current locale
runs the thread
returns the localized string value of the specified key
flushes the database
sets the executable executable
sets the messages to be used for messages
resolve a key value pair
resolve a key value pair
resolve the given java object
resolve a value
convert the given double value to a string
convert a string to a double
initializes the message bundle
une
initializes the message bundle
returns the default conversion
returns the name of the message bundle
returns the current database
retrieves latest update time in database
add a new record to the
sets the class name of the class that this class
sets the skipped records value
generates a report of the given template
exit the application
initializes the
returns true if the given object is a valid
checks if the given directory is a special
returns a string representation of this object
check if the given directory is a special
the input file
returns the percentage of total number of records in the total number
returns a data directory containing the data for the given data
returns true if the given object is a valid
returns true if the given object is a valid record
this method is used to read the input stream
this method is used to set the input file name
returns the percentage of bytes that can be done in the file
returns a data directory containing the data for the given data
returns a string representation of the object
returns the number of bytes read from the stream
returns the number of bytes read from the disk
returns true if the given object is a valid record
check if the given directory is a valid directory
returns the number of records in the current format
returns the number of records that are allowed
returns the number of records in the database
returns the number of records skipped
this method is used to read the input stream
this method is called when the input is found
returns a string representation of the object
returns the number of regions in the current
returns the read count
returns the write count
returns the total number of milliseconds that this
returns the write time of the current time
returns the size of the block
returns the rank of the rank
resets the statistics to the current time
close the file
returns the list of info objects
returns the next entry in the stream
returns the parameters of the ini file
resets the list of all the entries
returns a vector of all the of the given section
replace all the characters in the current character
gets the parameters of the ini file
returns the of the ini file
compare two terms
compares the term in this list to the specified term
adds a new entry to the list of
returns the next entry in the iteration
returns true if the given value is
returns true if the current value is greater than or equal to
returns true if this object is
returns true if the current match matches against the
returns the id of the
sets the cmp
returns the term
the given code char code
initialize the ini ini file
adds a new indicators to the list of indicators
returns the character data writer
prints the stack trace of the exception
prints the stack trace of the exception
convert the object to a string
marshal the contents of the object into the stream
creates a new
returns the container class
appends attributes to the end of the list
load the content of the current template
returns the content template
returns the command nodes
load the template
returns the name of the template
returns the view of the view
returns the view of the given node
sets the template reader
loads the command
returns the next factory factory
load the configuration file
creates a new object
returns the factory that is used to create the
returns the next object in the queue
returns the view associated with the given identifier
puts a new child object into the given view
adds a space space to the buffer
returns the parent context
returns the config context
adds a reader to the list of readers
this method is called when the reader is finished
prints the stack trace of the exception
this method is called by the when the user presses the
prints the stack trace of the exception
returns the content event counter
returns the simple property value
this method initializes this
this method initializes j content pane
this method initializes j text pane error
this method initializes j button ok
writes the text to the text
writes the given text to the end of the text
writes the comment text to the given text
receive an object for locating the origin of sax document events
receive notification of the beginning of a document
receive notification of the end of a document
start the prefix mapping
end the scope of a namespace mapping
sax handler method
receive notification of a skipped entity
report the end of dtd declarations
sax2 callback simply propagates the call to the registered
ends the entity
report the end of dtd declarations
report the end of dtd declarations
sax2 callback simply propagates the call to the underlying sax parser
this method is used to write the content of the object
this method initializes this
this method is called when the user chooses a hello message
this method is called by the framework to initialize the sub system
returns the sub subsystem
returns the subsystem
returns the maximum time in milliseconds to wait for the test
sets the status of the dialog
updates the current state of the dialog
sends a hello message
returns the included data source codes
initializes the fragment of the fragment
this method is called by the framework to initialize the system
returns the description of the filter
sets the logging level
returns the subsystem
this method is called when the fragment is destroyed
sets the logging status of the dialog
returns the sub system control panel
returns the level of this
returns the status of the sub subsystem
initializes the sub system core
sets the number of fragments label
this method is called by the server when a remote connection has
this method is called when a remote peer is connected
called when a connection has been closed
sets the number of fragments label
this method is called when the server wants to disconnect from the
sets the logging status of the application
returns the number of fragments in the database
stops the thread
sets the logging level
runs the thread
returns the flag indicating whether this instance is a logging
returns the subsystem
shuts down the system system
returns the sub system control panel
returns the status of the
returns the subsystem id
returns the number of elements in this collection
checks whether the given class contains the given class
tests this object for equality with the same class
returns the sub subsystem
clears the current
returns the maximum test time
returns a clone of this object
compares this class to another
compares this object with the specified object for order
this method is called when the fragment the
this method is called when the fragment is destroyed
returns the
compares its two arguments for order
returns the hash code for this object
compares this object with the specified object for order
initializes the system
returns the number of columns in the model
returns the column name for the specified column
log a message
returns the value at the specified row and column
this method is called by the subsystem when a remote subsystem connects
clears the log
this method is called when the connection is closed
gets the value of the subsystem id property
this method is called by the server when a remote subsystem is
adds a new entry to the table
called when a connection has been closed
returns the column name for the specified column
adds an action listener to the listener
removes a row from the table
returns the value at the specified column
returns the severity mask
returns the sub system control panel
returns the query
sets the severity mask
returns the input text field for the input field
sets the status of the selected option
sets the offset of the row
sets the checkbox
returns the status of the sub subsystem
sets the check box
updates the status of the task
returns the log entry for the specified row
sets the check box
sets the check box
returns the number of rows in the table
disables the panel
sets the scroll position
sets the check box
shuts down the system system
log the entry
adds a new entry to the table
add a log entry to the list of log entries
removes all entries from the table
checks if the given severity is selected
log the remote entry
scrolls the table down the table
this method is called when the user logs
clears the table
removes the current row from the table
returns the log entry filter
process the log entry
returns true if the trace is allowed to be used
initialize the application
this method is called by the subsystem when a remote subsystem connects
returns true if the severity is allowed to be used
shuts down the application
returns true if the error is allowed to be allowed
this method is called when the connection is lost
returns the application name
returns true if the severity is allowed to be used
initializes the application
returns the severity mask
returns true if the info is allowed to be used
returns the application name
returns true if the severity is
update the
returns the wrapped class
updates the resource manager
returns true if the given interface is implemented by this class
initializes the panel
returns true if the given class extends the super class
initializes the system
returns true if the given object is a resolved object
adds the classes to the
returns the subsystem
load the class from the given class
returns the number of messages that have been registered
shuts down the server system
resolve the class loader
returns a new instance of the sub system control panel
load the
returns the status of the current status
clears the tree
this method is called when the user selects a
returns the number of listeners that this task is listening to
updates the tree
sets the running system test
returns the system test
get the classes loaded in the class loader
clears the current time
sets the remaining time to the specified time
shuts down the server
initializes the database
runs the thread
invoked when an action occurs
initialize the application
returns the application name
test that the sub tree with a given sub node is selected
test the
this method will be called by the server to remove the specified
update the gui
this method is called when a test is selected
clear the log
a
clears the database
the jar file
returns the horizontal axis
returns the vertical axis for the axis
returns the number of series in the series
adds a system test result
the of a node
returns the name of a series
invoked when an action occurs
returns the number of items in the specified series
returns the x value for an item within a series and the
notify listeners that the resource changes
invoked when an action occurs
returns the y value for an item within a series
returns a string representation of this object
returns the entries in the database entry for the given query
adds a new node to the
update the data codes
initializes the database
returns a string representation of this object
this method is called by the server when a new connection is
sets the
gets the subsystem id
this method is called by the
the connection to the given
returns true if the given object is equal to this other
shuts down the database
this method is called by the server when a new connection is
adds a to the
updates the data in the database
this method is called by the data to be notified of the
called when a connection has been closed
returns the horizontal axis for the axis
returns the
returns the vertical axis for the chart
gets the
returns the name of a series
returns the number of items in the specified series
removes the element from the
returns the x value for an item within a series
returns the sub system control panel
returns the y value for the specified series and item
returns a string representation of the object
process the data point
disable the panel
compares this object with another one
initialize system data structures
returns the status of the task
initializes the application
sets the recording
returns the application name
this method is called by the server when a new remote subsystem
this method is called when the connection is lost
sets the recording
initializes the system
returns the available data point codes
invoked when an action occurs
returns true if the recording is recording
this method is called when the system is destroyed
this method is called by the subsystem
gets the subsystem id
load the
sets the processing state
returns the sub system control panel
returns the number of recording listeners
returns the status of the sub system
load the available system list
this method is called when the connection is lost
returns true if the processing is processing
returns the
returns the specified class
sets the contents of the contents of the contents of the file
returns the number of listeners
returns true if the class is a same class name
returns the gain value
returns true if the class is contained in the class
sets the name of the file that this is used to
adds a code extension code to the code code
returns the name of the source file
returns true if the file is accepted by the filter
sets the contents of the contents
returns the contents of the contents of the contents of the contents
returns the pan
compare this file object to another object
returns the source file
returns the source machine that this event is connected to
returns the muted flag
add a compressed file to the list of
returns a string representation of the object
clears the list of all the
tests if the given class is exact
returns true if the given object is a
clear all data from the database
kills the player
returns the hash code of this object
returns the data manager
load the classes from the class
returns the system test for the system test
clears the current compressed data
returns the class of the class
purge classes from the current thread
sets the location of the url to the specified url
shuts down the system
returns true if this object is empty
returns the sub system control panel
this method is used to resolve the given classname
starts the player
clears the current class
returns the number of files in the pool
load the specified class
returns the status of the sub system
load the class
adds a report page to the report
invoked when the data model changes
returns true if the specified file is compressed
registers a listener for changes to the model
closes the input stream and the
this method is invoked when the data model changes
notify the listeners that the data has been updated
returns the number of elements in this list
returns the compressed file name for the specified file
adds a parameter def to the list of parameters
returns the arguments
removes a parameter definition from the list of parameters
get a parameter def for a given name
returns the options
returns the parameter def at the specified index
returns the compressed data
tests if the parameter definition is contained in this group
clears the parameters
returns a shallow copy of this list
returns a parameter form parameter
sets the status
returns a vector containing all the files that are compressed from the
returns the maximum gain value of this
validates the parameter
returns the number of parameters
adds a parameter to the list of parameters
removes a parameter from the list of parameters
returns the arguments
returns the options
returns the parameter with the specified name
returns a string representation of this object
returns the parameter at the specified index
returns true if the parameter is a parameter
returns a collection of class loaders
returns true if the parameter contains the specified parameter
returns a parameter form parameter
validates the parameter
returns the minimum gain value for the component
returns the number of elements in the stack
returns a copy of this list
adds a new instruction definition to the list of definitions
compares this parameter with another parameter for equality
removes a code def def code from the code def code
delete a compressed file
returns the instruction definition at the specified index
tests if the given instruction is contained in this definition
clears the instruction
sets the pan
returns a copy of this code instruction def code
load the file
start the thread
returns a vector with the of the
this method is called when a new connection is established
called when a connection is refused to the remote server
returns the is bad value
returns a vector containing all fragments of the
returns the number of results in the system
adds a system test result
returns the system test result at the given index
compares this test result with another one
returns the string representation of the current
tests this type for equality with another object
returns the maximum time in milliseconds to wait for the maximum time
returns true if the current test is running
gets the value of the result type property
sets the test result code
returns the name of the jar file
gets the value of the test result code property
compares this test result with another one
gets the value of the system test type property
sets the test started
returns the target sub system
assert that the given object is not equal to the given object
assert that two doubles are equal
returns the test started
returns the test description
sets the end date
returns the number of elements in this collection
gets the excluded log entry
adds a to the
returns the current time
returns the at the specified index
gets the value of the included data codes property
returns the table name for the given data
sets the value of the collected log entries
gets the
sets the severity
returns the test name
returns the entries collected by this
returns the severity of this exception
returns the system code
sets the
compares this object against the specified object for equality
returns the current parameters
returns the data point
returns the host name
returns the hash code of the object
sets the name of the jar file
returns the date of the current date
sets the test notes
returns the log entry
checks if the given data point is a valid data point
sets the current test
logs a message
gets the value of test notes
returns a string representation of the object
returns true if the dialog was cancelled
installs this synchronizer
returns the standalone standalone application
shows a dialog with the given error
closes the tab
closes the tab by key
sets the current state of the connection
returns a new frame that is associated with the mobile
the connection to the given
sets the current state of the connection
paint the image
adds a panel to the panel
removes the mobile frame from the frame
sets the image
returns true if the server is connected
makes the frame visible
returns the window menu
removes the given panel from the panel
hides all frames in the frame
adds a component to the container
removes a panel from the panel
returns the text area
returns the sub system core
removes the component associated with the specified key
clears the text area
returns true if the key is contained in the container
interrupts the test
shows the specified component
returns the log entry filter
update the view
log the entry
sets the component
writes the message to the text area
this method is called by the panel to select the panel
gets the status panel
this method is called by the panel to update the panel
sets the selected tab color
returns the panel with the given title
adds a new mobile panel to the panel
sets the mobile panel
returns the panel that is responsible for the given
sets the class name of the class to be
returns the children of this node as an enumeration
returns the mobile panel
sets the background color for selected tab
clears the model
returns the child at the specified index
returns the number of children
updates the tree
returns the index of code node code in the receivers children
sets the listener to be notified of changes to the listener
returns the leaf name
returns the text field
returns the branch name
returns true if the given object is a descendant of this node
adds a class name
returns true if the given object is a branch
this method is called when the application is running
sets the component
sets the label
returns the application name
returns the control panel
updates the tree
returns the preferred size of the panel
sets the connected status of the connection
returns the width of the component
returns the class that this class is responsible for managing
sets the disconnected state of this connection
returns the wrapped component
returns the height of the component
closes the tab
enable or disable the component
adds a class name to the tree
returns true if the file is accepted by this filter
adds a new test part
compares this object with another one
gets the value for the total name property
enables disables the component
sets the date of the
asserts that two ints are equal
gets the
returns the angle of the axis
sets the location of the location
gets the
returns the location of the location
returns the vector vec of the rotation vectors in the vector
returns the string representation of the object
compares this object with another one
returns the location of the location
compares this object with another one
rotates the clockwise
sets the orientation
returns the month of the current element
returns the hash code of this object
rotates the current coordinate system by 90 degrees
creates a new instance of the sub system
moves the camera to the given position
moves the camera backwards
returns the
transforms the point
returns the
initialize the remote system
returns a clone of the location
returns a string representation of the object
shuts down the remote server
applies the given vector3 d to the vector
compares this object with another one
asserts that two longs are equal
returns the hash code for this object
returns true if this matrix is identity
returns the number of elements in this collection
adds a parameter to the list of parameters
shutdown the remote server
returns the
adds a system code
adds a new orientation to the
returns the system code at the specified index
returns a string representation of this object
sets the axis
initialize the system
sets the type
returns the axis of this
shuts down the server
sets the message
returns true if the current test is running
returns the string representation of the current matrix
clones this property matrix with the same orientation as the same orientation
compares this object with another one
returns the matrix of the current matrix
asserts that the two floats are equal
returns the status of the current system
install the current system
add a dependency to the
compares this object with another one
adds a data point to the data set
returns true if the given object is sub system
returns the data point at the specified index
gets the value of the data data code property
returns the dependencies
returns the collection type
returns the data number
returns true if the data points to empty
updates the remote object
adds a data point to the data point
returns the fragment dependencies
returns the number of elements in this collection
returns the date of the
checks if the given double is equal to a given primitive
returns the data description
adds a data point code to the data point code
sets the earliest date
returns a string representation of the object
sets the database status
removes a data point code from the data point code
returns the data units
sets the data point code
returns the earliest date of the earliest date
returns the data point code at the specified index
returns the number type
checks if the given point is contained in the data
sets the latest date
returns the database database status
clears the data
returns true if the given point is a
sets the time to be used for the time
returns the latest date
returns a clone of this data point
compares this object with another one
returns the job info
sets the data point code
sets the thread manager
returns the maximum job time in milliseconds
gets the
compares two notes
returns true if the test is
returns a string representation of this object
returns true if the given object is equal to this
returns a string representation of the object
returns true if the date is empty
returns true if the given object is a deadline
returns the host location of the host
resets the timer to the specified time
this method is called when the thread is started
schedules the timer to stop the timer
kills the thread
this method is called by the thread pool
resets the connection to the server
returns the number of threads in the current thread
returns true if the connection is connected
compares this object with another one
adds a parameter to the list of parameters
disconnects from the server
returns the number of threads in the pool
adds a parameter to the list of parameters
returns the status of the
sets the status of the status
returns the required parameter with the given name
kills the thread
assert that the two ints are equal
returns true if this is a complete
make a connection to the database
returns the optional parameter
checks if the connection is established
wake up the process
returns an enumeration of the required parameter
returns an enumeration of optional parameters
sets the value of the parameter
kills the thread
sets the value of the parameter
verifies if the current user has a valid parameters
sets the minimum value of the parameter
run the job
returns whether the given object is a valid property for equality
load values from the given array
sets the max value
returns the worker state of the worker
sets the description of the
returns the thread id
sets the value of the parameter
returns true if the job is running
sets the minimum value of the parameter
clears the hashtable
assert that the two ints are equal
sets the max value
compares this property with another
sets the value of the parameter
returns true if the worker thread is not already in the thread
sets the value of the parameter
compares this object with another one
run the job
sets the minimum value of the parameter
adds a property to the set
sets the max value
sets the value of the parameter
compares this object with another one
update the remote remote object
sets the minimum value of the parameter
sets the max value
returns a vector of strings
start the applet
assert that the two floats are equal
invoked when the user has cancelled the
compares this property with another
the error message is not a url
installed
returns a string property
returns true if the parameter is a float
returns true if the net is
sets the severity
returns a new log entry filter
returns true if the error is allowed to be used
log the entry
adds a new entry to the list
returns true if the error is allowed to be allowed
format the log entry
returns true if the warning is allowed to be used
returns the severity
removes a property
returns true if the portlet supports info
returns the flag indicating whether or not the debug output is allowed
returns the system code
returns true if the net is a net
returns true if the user can handle a fatal error
tests this object for equality with another object
returns true if the error is allowed to be redirected
adds a new entry to the list
returns true if the warning is not
assert that the two doubles are equal
returns true if the request is not supported
returns the value of the code parameter code
returns true if the debug mode is enabled
adds a property to the set
sets the earliest date to be used for the earliest date
adds all of the elements in the specified collection to this list
returns the date of the user
sets the latest date
returns a vector of names of the properties
returns the error message of the message
sets the severity mask
inserts all the values in the specified collection into this list
gets the
returns the severity mask
returns a property value as an integer property
returns the log entry filter
asserts that two objects are equal
sets the system code type
this method is called when the log entry has been received
gets the system code type
adds a new entry to the list
removes a property
sets the
inserts the specified object into the database
gets the
sets the excluded system codes
gets the excluded system codes
check if the current thread is still running
adds a property to the set
replaces the entry at the specified position in this list with the
returns true if the date is empty
sets the element at the specified index
returns a vector with the names of the property names
gets the
checks if the given entry is already in the log file
returns a long property
gets the subsystem id
returns true if the connection is connected
initializes the console
returns the port number of the server
removes a property
returns the
returns the rmi server name
called when the connection is lost
this method is called when the connection is established
adds a property to the set
returns the available fragments
called when the connection has disconnected
returns the remote machine id
returns a vector of names of the properties
returns the available available
returns a property value
removes a property
adds a property to the set
returns a vector of names of the values in the vector
returns the selected
returns the selected
returns a property value
gets the subsystem id
removes a property
returns the port number of the server
merges the given to the database
adds a property to the set
returns a vector with the names of the values in this property
returns the rmi server name
called when the connection has been closed
returns a float property value
returns all the listeners that are notified about the
this method is called by the server to connect to the server
removes a property
called when the connection has been closed
clears the menu
adds a property to the store
this method is called when the is disconnected
sets the
returns a vector containing all the names of the properties
returns the remote core driver
clears the current state of the
returns a property store for the given name
ping the server
removes a property from the store
starts the process
stops the processor
kills the current thread
returns a string representation of this object
removes a from the machine
returns an xml representation of this element
returns the icon of the icon
this method is invoked when the user enter a node
returns a string representation of this object
resets the state of the node
returns the block node block node
returns true if the other object is equal to this one
notify the connection that a connection has been established
returns the subsystem
returns the machine that this machine is associated with
sets the timeout for the timeout
sets the timeout
adds a new node to the list of nodes
notify the listeners that the has been lost
returns true if the given object is a block of the same
returns a string representation of this object
returns the
adds a new core gateway to the menu
returns the fragments
returns an xml representation of the element
returns the available
resets the node to its initial state
adds a block node to the list of
returns an xml representation of the element
resets the
initializes the application
initializes the
returns the application name
sets the property editor panel
this method is called by the property editors to update the value
returns true if this object has a maximum value
removes the currently selected property
returns true if this object has min
removes all panels from the tabbed pane
removes the property from the tree
returns the name of the property
removes a property store from the store
the
returns the name of the store
returns the property store
clears the property store
removes a menu from the menu
returns true if the given object is equal to this node
returns a list of all the remote objects in the database
returns true if the given node is wrapping
sets the tree panel property tree panel
runs the
sets the changed state
this method is called by the property editor to update the property
this method is called by the framework to initialize the frame
returns true if this object has a maximum value
returns true if this object is min
returns the name of the property
returns the name of the
updates the tree
returns the name of the property
returns the name of the property
returns the name of the property
returns the property
returns whether the given object is equal to this node
clears the available sub systems menu
returns true if the property is set to the property change
returns the name of the property
returns the name of the property
returns the of the master
sets the status of the current task
returns the of the master
sets the
returns true if the given position is selected
sets the vertical position of the image
returns true if the given position is selected
calculates the dimensions of the image
calculates the dimensions of the image
save all action
returns true if the given position is selected
calculate the dimensions of the font
calculate the dimensions of the font
initializes the application
returns the target sub subsystem
returns the excluded log entry
returns the application name
returns the included data in the data source codes
returns the description of the filter
returns the sub system
returns the application name
returns the maximum time in milliseconds to wait for the test
adds a new to the menu
returns the included data source codes
returns the excluded log entry
returns the description of the filter
this method is called to notify the client that a client has
returns the included data source codes
returns the description of the filter
returns the description of the filter
tests that the logging service is working properly
tests the log entry
the remote service that is used to log the remote entry
tests the constructor
test the driver of driver
test constructor
initializes the
test the ability to play a player
checks if the given code code is in the given tree
test that verifies that the file is equal to the same file
sets up the fixture for example open a network connection
clear all data
test that verifies that this object can be equal to the same
test a bad bad bad bad bad chars
test of get file extension method of class file file
returns the selected graphic object
updates the console
calculates the dimensions of the given font
notify the listener that the resource has changed
returns true if the is notified
this method is invoked when the data model changes
resets the state of the
updates the tree
tests if the given object is a resource
gets the
returns the last core
gets the
this method is called by the server when a new connection is
this method is called when the connection is lost
test constructor with string
tests the constructor
test the severity
tests the constructor
tests the constructor
test constructor with a null constructor
test the
test of equals method
two objects that are equal are required to return the same hash
test the test
test
returns the index of the menu component at the specified index
test the
test of equals method
test that the parameters are correctly
two objects that are equal are required to return the same hash
test for the method for the test
this method is called when the remote server is destroyed
test dump of dump
returns the
this method is called when the remote system is done
ping the connection
returns the
returns a string representation of this object
returns true if the given object is a sub remote object
returns the status of the remote server
returns a string representation of this object
returns true if the given object is a sub remote object
tests the query when the query is empty
tests the functionality of the constructor
runs the thread
test the
test method for
test
test equals als
test equals method
test
adds a node to the list of nodes
run the job
test of string property
test loading a driver
updates the tree
tests the constructor
updates the remote object
tests the constructor
tests setting the severity
tests that the filter correctly is rejected
tests that the excluded keys are not supported
tests the date
test info
test warning
returns the root of the store
test the creation of the latest date
test error
test the system code
test fatal
test
tests that the net is correctly used by the
test host host
saves all the
tests the functionality of the log entry
test the log method
sets the
resets the state of this object
clears the current session
sets the
returns the
run the
reset the remote service to its initial state
returns a string representation of this object
gets the value of the property
compares this object with another one
returns the
returns the port number of the server
reset the
returns the rmi server name
this method is called by the thread to run the
this method is called when the connection is established
sets the
called when the connection has disconnected
add a remote remote
returns the thread
this method is called by the remote server
test the
run the thread
add a new remote fragments to the remote manager
returns a string representation of this object
reset the service
tests this object for equality with other objects
returns the
shuts down the agent
compares this object with another one
compares this object with another one
returns true if the machine node is equal to another object
returns a string representation of this object
gets the
sets the place holder value for this j2
gets the place holder value for this j2
compares this object with another one
returns a string representation of this object
gets the
compares this object with another one
returns a string representation of this object
returns the current category
this method initializes the round
returns the game player
updates the score of the player
spin the given jcomponent
returns true if the player has a free tank
this method is used to grow the tank to be used to
returns the question for a given category
change turn number
returns a random opponent
returns the spin
the
updates the score score of the given round
this method initializes department field
this method initializes comments field
this method initializes salary field
this method initializes j menu
this method initializes exit menu item
this method initializes employee check
this method initializes file menu
this method initializes firstname field
this method initializes main menu bar
this method initializes lastname field
this method initializes simple branching menu item
this method initializes simple demo menu item
this method initializes windows demo menu item
this method initializes this
returns the property value for the specified property
returns the value to which the specified key is mapped in this
starts the server
this method is called when the thread is started
stops the server
kills the client
process the server process
returns the boolean value associated with a key
returns the sponsor object
get last up branch
checks if the user is allowed to select a group name
returns group group for edit group
get the privileges for the session
returns the total number of in the database
returns the total number of in the
adds the total visit to the current session
returns the total up tree
returns the total number of tree items in the database
returns the total number of
check user check user
get the card level
returns user for edit user
returns the total sponsor
returns a list of all the user groups
returns the total number of thumbnails in the database
returns the up branch branch
returns the last branch down branch
returns the current page
this method is used to set the of the
this method is used to fetch the
this method will update the specified folder with the specified id
this method is used to get the files for the given id
prints the grid
this method is called when the user selects the
creates a new tree entry
returns the hash code of the object
stops the test runner
called after the update process has been successfully updated
returns the display name for the current method
resets the test suite
show the test results
this method enables disables the failure of the task
creates the table viewer
returns the text for the element
launches the given code code
stores the output directory in the project
returns a hash code for this object
called by the framework to indicate the root of the element
visits the given type specific ast
this method is called by the lookup parser to perform the given
this method is called when the is selected
render the groups element
creates an input stream for the current page
initializes the wizard
sets the input object for this input
adds a filter to the list
creates the tree viewer
tests if the current workbench selection is a suitable container to use
handles the browse button
creates a new test def
called when a test is started
initializes the parameters
updates the preferences
initializes the parameters
initializes the parameters
updates the preferences
updates the preferences
sets the square mode
sets the constraint to be used for the constraint
handle the content changed event
creates the selection
initializes the parameters
updates the preferences
sets the mode
disposes the resources associated with this instance
refresh the nodes with the given resource
sets the modified flag
checks if the resource id is used in the resource
sets the name of the svg document
called by the garbage collector when a handle is destroyed
returns the bounds of the given element
initializes the menu
closes the editor
adds a listener to the list of handles notified when the
removes the handles from the list of listeners
handle the change listener
decorator method for transform element
handles the change of the content changed event
returns the bounds of the specified rectangle
returns the outline node of the given outline node
picks a color from the given point
removes a handle from the menu
returns the outline of the node
changes the name of the current
sets the current handle
returns the shape that is drawn on the graphics
returns the number of in the given name
executes the runnable
undo the last operation
redoes the last undone command
sets the current zoom to the current scale
sets the zoom out scale to the current zoom out
checks the scale of the scale
resizes the image to fit the current canvas
handles the stroke of the stroke
this method resizes the viewport to the viewport
launch the dialog
sets the selected nodes in the view
updates the grids
updates the preferences and updates the preferences
handles the action event
sets the grid enabled
builds the border of the panel
updates the current bar
sets the mouse position
sets the zone size
sets the zoom factor
initializes the parameters
update the
updates the preferences
sets the enabled property
sets the align with align align value for this
sets the label
move the frame to the back
move frame to the front of the front frame
refresh the viewport
removes the current desktop from the desktop
updates the panel with the
refresh the ruler
draw the cursor
removes the listener from the list of listeners
sets the scroll values
removes all the listeners from this tree
sets the listener that will be notified of the
removes a listener from the list of listeners
notify listeners that a node has been removed
notify listeners that a node inserted has been inserted
disposes of the operating system resources associated with
sets the enabled state of the listeners
normalizes the element
removes the given node from the list of children
determines if the given element is converted to a final element
translate the given code key code by the specified
returns the translation of the given code point code
returns the text of the node
returns true if the popup menu is a pop up popup menu
returns true if the mouse is enabled
returns the event that is currently being dragged
sets the uri of the document
sets the parent element
sets the point of the caret
sets the selection sub mode
sets the preferred size of the canvas
selection mode is selected
returns true if the mouse move is clicked on the foreground color
sets whether or not the background selection is drawn
paints the border
selects all elements in the tree
clears the selection
returns true if the drawing is enabled
repaint the content of the view
updates the content area of the area
creates a new element
notifies all registered listeners that the selection changed
returns true if the element type is supported
installs a new drawing on the given point
sets the cursor to the given cursor
notify the parent of the parent change
this method is called when the user selects a menu item
resets the drawing mode
this method is called when the selection mode is being edited
notify the listeners that the action is about to be made
enable or disable the group
enables disables the group of the group
returns the transformed shape for a given element
enables disables the menu item
adds a listener for layer specular paint events
removes the specified canvas listener
translates the given point
this method is called when the user hits a clip
sets the mouse point
handle the selection of the given element
causes the cameras view to be repainted
returns the point in the xy coordinates of the given point
returns the bounds of the given element
clears the cache
sets the shape of the shape
sets the shape to be used for the
returns true if the element is locked
shows the dialog
locks the selection
removes the lock from the list
clears the selection
cleans up the
show popup menu
this method is called when the is selected
resets the given to the specified path
initializes the drawing path
shows the dialog for the given color
returns the color for a given color
returns the color of the specified color
returns the for the current color
returns true if the data flavor is a
sets the points on the given point
paint the shape
sets the current directory
draw a circle
the
sets the for the given document
returns the value of the given string as a double
initializes the menu
initializes the module
creates the module objects
picks a color of the pick points
adds a file to the recent list of recently opened files
returns the module with the specified name
sets the path to the
returns the shape that is used to represent the given module
returns the image from the given color
sets the current segment shape
sets the current color of the current color
sets the shape control points
creates a cursor for the specified color
adds a listener to the list of listeners
clears the
removes a menu item from the list
removes the listener from the list of listeners
creates the menu items
creates a cursor for the specified image
handle the items state
handles the items in the list
notifies all listeners that the recent files have changed
print the contents of the document
removes the attributes from the given element
saves the current state of the current state of the current project
checks the file extension
handles export export export
checks if the file is a file extension
returns the file containing the file
returns the number of nodes in the document
this method is called when a new component is closed
closes all the active connections
close the given handle
this method is called when the user wants to change the
creates a new document
schedules the given runnable to be executed on the execution of the
sets the file filter
returns true if the file is a file or not
adds the selected elements to the list of selected elements
returns the text field for the given component
disposes the widget
sets the selected tab
returns the value of the property
invalidate the given resource
disposes the toolkit
checks the given svg model to be loaded
returns the component that will be displayed in the list
sets the value of the named property
sets the image to be displayed
sets the value of the attribute specified by the given attribute
returns the name of the
returns the name of the
returns the image resource image for the given resource
sets the value
removes a resource resource from the model
applies the attributes to the model
disposes the resources associated with this sprite
removes a visual resource from the given resource
appends the given node to the end of the list
refresh the parents
disposes the toolkit
checks if the given node is a valid resource manager
removes the given resource object from the list of resources
disposes the toolkit
creates a visual resource structure structure
removes the panel from the panel
appends the visual resource to the parent node
removes a code visual resource code from the node
returns the id of the selected item in the tab
sets the selected item id
removes all panels from the panel
creates a new editor
returns the popup menu item for the given element
sets the state of the menu item
refresh the panel
adds a new popup menu item
returns the element definition for the given handle
p get module popup
removes the popup menu
refresh the panel
restore the initial state of the popup menu
clears the clipboard
creates the gradient for the given
clears the source handle
returns the visual resource for a given object
returns the absolute path of the given string
this method is called when the user selects the menu item
removes the current gradient
returns a string normalized value of the given string
sets the visibility of the frame
causes this frame to be the new frame
initializes the menu
find the module menu items in the module menu
adds a new menu item to the menu
returns the menu with the given name
add a menu item to the menu
removes a menu item from the list of menu items
this method is called by the
shows the dialog
updates the menu items
check if the correct selection is correct
check if the given set of elements are correct
returns true if the given set of correct type is correct
apply the apply button
returns the normalized point of the given point
exit the application
sets the visibility of the component
enables disables the items
removes the element from the list of elements that are not in
returns the union of the union of the rectangle
disposes the current item
cuts the selected text
selects the elements of the given set of elements
returns the shape that is used to display the given module
called when the user selects the selected element
exit the current group
removes the given node from the list of children
returns the id of the clipboard
sets the selection mode to the current state
sets the selection mode
disposes the session
returns the id of the given base
load the main tag handler
load the tag events tag handler
sets the document id
returns the tag handler for the given element
returns the handler for the given id
creates a file containing the given file name
returns true if the given attribute name is a tag
returns true if the given attribute name is a view attribute
checks if the tag name is a tag
returns the xml for the given xml file
sets the
returns the path to the normalized file
merges the elements in the given element
returns true if the attribute value is the value of the given
returns the value of the attribute specified by the symbolic attribute name
returns true if the attribute name is
returns the directory where the project is located
sets the radius of the circle
returns the first child of a given file
returns the next sibling of the given file
returns true if the given file has children
compile the file
sets the point of the given point
disposes the resources associated with this node
disposes the editor
returns the icon for the given node
disposes the editor
returns the icon for the given node
returns true if the path is absolute path
returns the tree node for the given element
applies the changes to the current state
disposes the receiver
this method is called when the user selects a selected node
returns the tree node for the given element
compute the files to be done by the given
build the widget
returns the file for the given
handles the user event when the user presses the ok button
sets the current value of the current user
adds an action listener to the listener list
removes an action listener
notify listeners that the action has been changed
disables the
enables the listeners
disposes the toolkit
removes the listener from the list
build the widget
sets the color value for the current color
adds an action listener to the button
removes an action listener from the button
disables the color and disable listeners
sets the
enables disables the action listener
removes all action listeners
sets the source of the image
sets the default animation
clean the current state of the
returns the for the given id
sets the
this method is called to refresh the element
executes the action
adds an element to the list of active elements
handle the configuration of the
sets the selected tool button
returns the id of the column
returns the encoded image encoded as a string
shows the dialog
clears the simulation
shows the dialog
sets the value of the label
refresh the table
removes all the components from the table
refresh the test table
creates the toolbar
this method is called when the screen mode is shown
this method is called when a new node is set to the
refresh the simulation
gets the value of a property
creates a new element
creates a new element with the given element
shows the insertion failed error dialog
creates the panel for the simulation
refresh the simulation
returns the path to the base directory
sets the value of the tag attribute
import element from xml element
stop the editing cell editing
stop the editing cell editing
sets the animation to the given animation
returns the value for the cell at code column index code and
sets the selected element
clean the current state of the
handle the event
returns the previous element in the dom element
returns the label for the specified resource bundle
sets the enabled state of the canvas
returns the next element in the dom tree
shows the popup menu
sets the animation object for this object
resizes the columns
cancels the
cleans the table
stop editing the editing cell
removes all the animations from the list
sets the current element
returns the label for the specified element
returns the value for the cell at code column index code and
sets the animation object
cleans the animation
removes a listener from the list of listeners
creates the children listeners
removes the listener from the list
cleans the
returns the specification of the attribute specified by the attribute name
returns the animations for the given class
builds the widget
sets the current item in the given item
handles the source of a change in the source panel
refresh the source
build the widget
build the widget
build the widget
clears the current selection
returns the label for the specified id
converts the given point to the given point
build the widget
this method is called when the user selects the user interface
show popup menu
sets the value of the field to the specified string
notify listeners that the action has been changed
this method initializes the
this method initializes the
sets the value of the tag
shows a dialog box
shows a dialog with the given value
enables disables the button
build the widget
clears the enumerator
returns a string normalized for the given string
shows the dialog
sets the document animation document
sets the value of the string valued property
enables disables the combo box
notify the user that the given
sets the tag name
build the remaining file
notify the listeners that the given
returns the icon for the given node
removes the selection listener
clears the current theme
sets the current item for rendering
sets the editing item for editing the given item
returns the button with the given id
returns true if the given source id is contained in the source
build the source
registers all buttons
this method is called when the menu is drawn
unregisters all buttons
disposes the toolkit
returns true if the given source id contains the given source id
returns the item with the given id
creates a new child element
registers the listener to the list of listeners
unregisters all listeners
dispose the menu item
returns the label for the given element
build the source
sets the editable attribute of the cell editor object
returns true if the given cell exist in the table
registers the listener to the table model
sets the editable attribute of the cell edit object
handles the buttons state
sets the label for the button
shows the malformed dialog
build the source
adds a button to the table
resets the panel
removes the button at the specified index
puts up the selected button
handle the buttons state
puts the selected button in the table
initialize the panel
initializes the panel
initializes the panel
initializes the component
initializes the given element
handles the check box state
handles buttons in the state
initializes the panel
initializes the given element
handles the check box
disposes the toolkit
initializes the given element
initializes the given element
handles the buttons state
initializes the given element
initializes the panel
initializes the given element
checks if the modifiers are correct
initializes the given value
sets new value
returns the value of the tag
resize the table
records a field
returns the history table for the given table id
records the history table
disposes the menu item
this method is invoked by the framework to update the table
returns the type of the element
computes the stroke for the current line
invoked when the user selects a new one
this method is called when the zoom is changed
invoked when the style curve is changed
creates a new value and sets the new value of
this method is called when the color curve is changed
this method is called when the user modifies the curve
notify the listeners of the change in the style changed
returns the configuration of the given configuration
request a tag value
sets the visibility of the frame
sets the location of the frame
notify all listeners that the current color changed
adds a listener to the list of listeners
change the curve to the given configuration
sets the value of the specified tag
adds the column to the table model
notify the listeners that the bounds of the
removes a listener from the list of listeners
removes the given column from the table
sets the current mode
place the given place in the table
notify the controller that the user has failed
change the curve to the given configuration
notify listeners that the current state is bound
updates the scale value
notify listeners that the duration changed
returns the tree node for the given element
change the curve configuration
sets the current value of the current text field
sets the allow event dispatch value for this
sets the configuration of the current configuration
creates an icon for the given color
returns true if the current request is ready to be done
initializes the component
returns true if the data object is contained in the request
adds a painter to the list of any painter
removes a painter
sets the update state of the image
sets the color of the preference
returns the history manager for the given id
sets the vertical zoom factor for the specified zoom factor
deselects the tool and selects the tool bars
invoked when the mode is changed
returns true if the given label is an ordinary
validates the path
paints the background
stores the new value in the database
sets the vertical zoom origin
closes the connection
returns the label for the given base name
notify listeners that the zoom has changed
removes a child node from the list
sets the current state of the
initializes the component
returns the painter for the specified name
enables disables the curve
inserts a node in the menu
puts up the current element up to the current page
validate the update date
dispose the dialog
this method is called when the user selects the menu item
invoked when the sub mode is selected
initializes the tool
invoked when the sub mode is selected
this method is called by the framework to build the ui
puts the current element down to the current element
disposes the toolkit
update the current icon and updates the ui
removes the component from the list
invoked when the user selects a sub mode
this method is called by the framework to initialize selfs toolbar
this method is called when the user selects the menu item
dispose of this component
this method is called by the framework to initialize selfs component
this method is called by the framework to initialize the
sets the preferences to the preferences
sets the label of the element
calculates the normalized point of the point
sets the value of the specified tag
this method is used to draw a line between the outline and
dispose of stuff
removes all the components from this component
removes the component from the list
dispose of stuff
sets the current action
sets the current exclusive action
initialize the model
registers a new tag with the given name
returns the value of the specified tag
clears the tool bar
compute the of the given point
sets the value of the specified tag
draw the
returns the value of the specified tag
resets the tag value
sets the geometric parameters
request a tag value
validate the update date
updates the time components of the given time
removes all the components and listeners
updates the specified date in the database
sets the current tree model
sets the
sets the value of the string valued attribute
invoked when the current mode is selected
sets the location of the location
returns the string representation of the value of the given string
sets the current date
initializes the model
sets the table model for this table
disposes the toolkit
reloads the data from the database
shows the popup dialog
does the actual work of the
called when the animation is started
stops the animation
called when the cpm is resumed
called when the animation is stopped
registers a listener for the task
removes a previously registered listener
paint the picture
sets whether the invalid markers for the user is enabled
clears all the
this method is called when the bounds of this component is
remove a object from the list
creates a new animation
refresh the component state
returns the for the given id
checks whether the given set of actions are allowed
compute the current value of the given time
returns the color of the
adds a value to the enumerated type
compute the bounds of the component
sets the picture
handle the look and feel
returns the for a given project
adds a new animation to the list of
removes a animation from the list of
disconnect from the database
sets the value of the given attribute
adds an action to the list of actions
this method is invoked when the data is successfully processed
removes an action from this action
this method is called when the user wants to remove the image
removes the colors and from the project
build the file
adds a new listener to the list of rights
returns the icon for the menu item
returns the file containing the of the given file
removes the specified rights listener
notify the user that the user has changed
clears the
returns the authorization level for a view
the
shows the wrong login dialog
shows the wrong password dialog
returns the user object associated with the given login
compute the tag types
returns the profile for the given user
called when the user modifies the user name
returns the type of the tag
shows the dialog
registers a view browser view
dispose all the
adds a listener for the loaded view
clears the picture
removes the specified view loaded listener from the view
builds a dom document from the given file
dispose the button
remove a view browser view
handle the previous button state
sets the value of the attribute
returns the browser browser view browser id
dispose all view
initialize the document
popup the popup window
dispose of the picture
rebuilds all the
sets the view browser browser
returns the picture with the given uri
this method initializes the animation
returns the uri of the view
adds a component to the list of components
the element
removes the specified component from the container
returns the configuration document for the given picture
disposes the canvas
sets the value of displayed
returns the uri of the given project
disposes the sprite
creates the element
returns the canvas size for the specified document
executes the specified runnable
adds a collection of to the
stops the animation
adds a painter to the list
clears the
returns the for the given string
constructs a new user agent
initializes the animation actions
adds a listener for the function tag
adds a listener to the list of listeners
composes the of the element
removes a listener from the list of listeners
dispose the dialog
disposes the toolkit
disposes the runnable
concatenates the given transform and translates the transform to the
concatenates the given quaternion with the given scale
sets the picture of the current item
concatenates the given angle in the current transform
concatenates the given code skew code with this quaternion
concatenates the given quaternion with the given skew
concatenates the current
concatenates the given matrix
sets the current affine transform to the current value
concatenates the given transform
clones the matrix
creates a new project
adds a value to the modifiers of the modifiers
performs the action
handles the server socket
checks the modifiers for the given modifiers
loads the view
this method is called when a view is loaded
sets the current test
test the
this method will be called by the test framework when the limit
removes all the tags from the list
initializes the tool
initializes the action
returns the limit value for the specified limit
initializes the tool
initialize the action
this method is called when the action is performed
disposes the dialog
add a value to the tag
returns true if the type is equal to the type
returns the current value of the specified tag
returns the current image of the given tag name
quits the application
compute the rights for the model
refresh the current picture
adds a new data to the list
sets the user id to the user
activates the value modifier
compute the rights for the view
deactivates the modifiers
computes the rights for this model
computes the rights of the modification
disposes the provider
computes the rights for the
checks if the authorization is authorized to be authorized
adds a new data object to the data store
returns the data object associated with the specified tag name
refreshes all the tags
handles the user choosing new user
load the view
load a view from the database
show confirmation dialog
show the tooltip
shows a tooltip for the current tool tip
sets the data value for the data value
disposes the toolkit
returns the source id for the given element
returns the real time provider for the given time
refresh the values of the values
called by to refresh the current value
sets the state of the full screen state
called by the framework to refresh the current value
returns the data information for the given name
initializes the object
returns the type of the specified tag
build the build
disposes the toolkit
adds an action listener to the listener list
removes an action listener
notify listeners that the action has been changed
this method is called when the focus is triggered
initializes the dialog with the given value
starts the simulation
pauses the paused
sets the title text
p p p return the code string code that is equal to
sets the message label and display it
this method initializes the
shows the dialog
resumes the paused state
p automatically managed component initialization
dispose of the dialog
initializes the widget with the given value
shows the dialog for the given color
stops the simulation
this method will be called from the user interface
sets the title bar
initializes the
sets the message
sets the current frame
disposes the dialog
shows the dialog
sets the current progress message
dispose of the dialog
sets the error message
sets the current progress indicator
sets the progress value
increments the progress monitor
creates the points array
fills the path with the path to the current path
adds a listener for the animations state events
sets the component that will be used to display the component
starts the task
sets the point at the specified index
adds a new point to the end of the list
stops the playback
removes the last last last time the last time the last time
refreshes the current path
executes the runnable on the specified awt thread
resets the current path to the initial state
parses the string and returns the segment
applies the transform to the given transform
removes the specified listener from the list of listeners
adds a listener for the view
parses the string and returns the segment
tests if a given segment is a cubic bezier curve
tests if a given segment is a cubic bezier curve
returns true if the index at the given index is segment in
sets the previous segment
sets the next segment
removes a listener from the view
fills the path with the given path
returns true if the given string is a relative
computes the absolute location of the relative point
notify the view that the view display display request is not visible
refreshes the current path
modifies the point at the given point at the given point
notify the view that the user wants to quit the application
removes the specified segment from the list of segments
insert a new path into the general path
notify all listeners that the current state has been destroyed
closes the path
notify the listeners that the event has been destroyed
initialize the component
insert a new path into the diagram
notify listeners that the animation has started
returns the segment at the given index
notify listeners that the animation has been paused
notify listeners that the current state has resumed
applies the transform to the given transform
notify listeners that the animation has stopped
runs the runnable
adds a runnable to the queue
clears the current
adds a new thread to the animation
executes the move
removes all sprites from the playlist
removes the given component from the tabbed pane
sets the decoration decoration
sets the decoration for the left side of the panel
creates the editor
adds a new selection interval to the end of the list
sets the interval to be selected or not
removes the specified date interval from the selection
sets the error level of the error
returns true if the given date is selected
tests the component
returns true if the date is date
returns true if the date is a flagged date
sets the flagged dates as a long
returns the preferred size of the specified group
adds a highlighter to the list of
sets the dates for the
returns the component that will be notified of the
tests if the given row is the correct value
returns true if the given date is today
returns the day of the week
returns the x y coordinate of the x y coordinate at the
calculates the start position of the start of the view
calculates the number of displayed
sets the first day of the week
sets the painter to use to paint the background
sets the save mode
sets the list of servers
sets the login service
creates a new buffered image
sets the password store
paint the background for the day
sets the pipeline
paint the background day
sets the banner
creates property change listener
sets the banner text
paints the background of the specified region background
paints the foreground of the specified day foreground
paint the background for the trailing day
paints the foreground of the specified day
cancel the login button
returns the day at the specified coordinates
creates a new instance of the producer producer
fires an action performed event
sets the rollover cursor to the specified value
returns the shared panel for the
sets the filter enabled
adds a component to the root pane
removes the component from the tree
sets the enabled state of the input handler
sets the image to be displayed
sets the image url
sets the image
returns the text for the given key
invoked when an item has been selected
invoked when an item has been selected
gets the value of the mail addr property
sets the mail address
sets the dublin core module format
sets the formats format
sets the date
returns the date of the selected date
sets the month view
returns the editor
returns the string representation of the given key
this method is called by the user edit the user to edit
creates a new pattern model
removes the login listener from the list of listeners
returns the listener that will be notified of the document field changed
adds the code color code as a new one to the plot
fires an action performed event
binds the current select field into the target
creates a new search label
creates and returns the action that will be used to draw the
sets the image to be displayed by this image
sets the style
sets the paint for the gradient
sets the paint for the gradient
sets the resize radius
sets the paint for the gradient
sets the painter to be used for this component
sets the resize resize
sets the shape
returns true if the mouse event process is notified of mouse events
sets the stroke
sets the fill paint
sets the effect of the effect
sets the icon for this icon
sets the stroke used to paint the stroke
sets the location of the location
sets the length of the square
sets the filter to be used for the effects
sets the background color for the thermometer
sets the style
sets the paint for the light
sets the clipped clip
sets the resize location
sets the resize resize
sets the resize clip
sets the composite for the
sets the alpha transparency for the alpha axis
adds a component to the container
removes the component from the container
sets the tool bar
sets the antialiasing
sets the rendering color of the rendering algorithms
sets the
removes the mapping for this key from this map if it is
sets the fractional metrics property
sets the size of the image to fit the image
sets the interpolation setting for this tool
draw the error
creates a new bridge context
creates the rollover producer for the table
returns the at the given index
sets the stroke control
sets the text antialiasing
sets the rendering hints for this rendering hints
returns the color type
restores the state of this component
returns the color of the
returns the icc color
called when the uri is changed
paint the background
returns the css style for a given property
creates a new
returns the css style for this component
dispose of stuff
sets the visibility of the column control
returns the orientation of the vertical orientation
returns the orientation of the current component
returns the font size for the font size
adds a new item to the list
creates and returns the horizontal scroll bar
sets the media
appends a value to the end of the array
tests if the given element matches this filter
creates the pack selected action
tests whether the given element matches the given element
gets the
returns the style map
returns a string representation of the
returns a string representation of the
returns a string representation of the given
returns true if the given value is inherited from the
creates and returns a new
puts a new into the specified
puts a value into the
puts a into the
sets the inherited value of this object
puts a color into the current color
puts a new parent in the current context
sets the height of the specified line
sets the font size for the specified font
puts a block width in the current context
puts a block in the current frame
returns a string representation of the
returns true if the media matches the given media
clears the internal stack
start the font face
the
the
this method is called when the linear is
two linear
the
the cubic bezier curve
adds a rectangle to the end of the list
the segment
the
sets the filter pipeline
returns a shallow copy of this code general path code
the url
sets the composite rule to use for the
sets the flag
returns true if the clip is
sets the region
sets the source of the source file
returns the family font family
returns the element base element for the given context
handle the addition of an element
returns the pixel units in the
creates and returns a new graphics node
returns the interpreter
returns the uri to the namespace uri
sets the to the
returns the contact address
returns the description of the filter
registers a new context for the current context
invoked when a key is pressed
returns the local name of the local flow
returns a new instance of this bridge
returns the button for the specified mouse event
returns the element base element for the given context
returns true if the given element is a dynamic element
returns the font face for this font
returns a new code code object that contains the same
derives a font object by the given font object
returns true if the complex type is complex
returns the message of the current document
creates a new graphics node
parse the given text
get the url for the specified uri
returns the element of the given element
returns the of the glyphs in the
returns the of the glyphs in the
creates a new graphics node
sets the document to be used for the document
load a document from the given uri
disposes the cache
returns the line number of the given element
sets the data element
returns the data of the specified node
called by the when the user wants to stop the document
update the listeners for the given element
dispose of this document
creates a new graphics node
handle the geometry changed
returns the interpreter for the given language
returns the local name of the local
returns true if the transform is to the scene
process a generic
returns the font family for the given context
update the scene
this method is called when a new element is added
returns true if the dynamic status is dynamic
returns true if the user is a valid status
sets the dynamic state of the status
returns the bounding box of this circle
sets the dynamic state of the dynamic
sets the interactive flag
returns an iterator over the extensions of the extensions
register a new
returns true if the element is dynamic
creates the graphics node to be used for rendering the given
suspends the execution of the execution manager
notify the scheduler that the execution of the execution has resumed
returns the local name of the local file
returns a new instance of this node
returns the namespace uri of the uri
bind the element to a new element
returns the bridge
removes the element from the tree
returns the graphics node for the specified element
creates an instance of the associated element type
returns the element that is associated with the specified node
returns true if the element is a graphics node bridge
returns the bridge associated with the given element
returns the bridge associated with the given uri
sets the document to be the given document
this method is called when a node is inserted
returns the url to the url to the server
returns true if the is
returns the thread that this queue is running
returns true if the current is complete
clears the
event fired when a mutation event is fired
sets the background thread to be used for the next thread
wait until a thread is waiting for a thread and wait for
suspends the execution of the execution
resumes the execution of the execution
invoked when an mutation event of type is fired
invoked when an mutation event of type domnode inserted
returns the string representation of this node
b dom b implements
returns true if the node is a parent
returns the type of the entity
handles the event
returns a new uninitialized instance of this objects class
returns a new uninitialized instance of this objects class
creates an instance of the associated element type
creates an instance of the associated element type
returns the local name of the svg image
creates an instance of the associated element type
returns a new uninitialized instance of this objects class
creates an instance of the associated element type
fires the event to all the active document
creates an instance of the associated element type
creates an instance of the associated element type
creates an instance of the associated element type
creates an instance of the associated element type
this method is invoked to indicate the document changes
creates an instance of the associated element type
creates an instance of the associated element type
invoked when an mutation event of type modified
creates an instance of the associated element type
creates an instance of the associated element type
returns the local name of the local
returns a new uninitialized instance of this objects class
returns a new uninitialized instance of this objects class
this method is invoked to indicate the document is processed
returns a new uninitialized instance of this objects class
returns the local name of the
returns a new uninitialized instance of this objects class
returns the local name of this component
returns a new uninitialized instance of this objects class
returns a new uninitialized instance of this objects class
returns a new uninitialized instance of this objects class
returns a new uninitialized instance of this objects class
returns the local name of this node
returns a new uninitialized instance of this objects class
returns the font family for the current document
gets the style sheets
returns the default view
returns the number of elements in this collection
returns the location of the line of the specified element
sets the location of the element to a given location
pushes the current stack to the current stack
pops the current stack pointer and returns the next element
puts a string into the current context
returns the value of the specified string
returns true if the node is a id
returns the attribute node by name
removes the given attribute node from the dom node
appends the given node to the end of this list
returns the type of the document
returns true if the given document is a dynamic document
start the parser
adds a listener to the list
removes a listener from the list
returns true if the document is interactive interactive
sets the node name
checks if the given element is forbidden
deeply exports this node to the given document
deeply exports this node to the given document
copy the fields of the current node into the given node
deeply copy the fields of the current node into the given node
this method is called by the
returns the named node
removes the first element from the list
report the end of a cdata section
returns the doctype declaration
this method is called by the digester
removes the last element from the list
returns the local font
returns the aspect ratio of the
returns the local name of this node
this method is invoked when the current document is selected
this method is called when the document is selected
copy the fields of the current node into the given node
deeply copy the fields of the current node into the given node
sets the id of the
b dom b implements
returns the svg separator
start the document
returns the base value of this
called when an attr node has been added
called when an attr node has been modified
called when an attr node has been removed
returns true if the animation is a legal val
returns the document that is used to convert the document to
returns the spacing between the current
b dom b implements
called when a new attribute has been added
called when an attr node has been modified
creates the listener that will be notified of the change
called when a new attribute has been added
called when an attr node has been modified
this method is called when the text is changed
returns a new
returns the point at the given distance
returns the path to the specified distance in the current distance
returns the path to the animated path to the current path
returns the elliptical normalized path seg list
returns true if the node is a id
returns the document
returns the
copy the fields of the current node into the given node
deeply copy the fields of the current node into the given node
disposes the toolkit
sets the lazy lazy lazy lazy lazy lazy lazy lazy lazy lazy
sets lazy load of the given class
this method is called before the document starts with a given offset
sets the current region of the
sets the slice of the current slice
invoked when an mutation event of type modified
returns the x coordinate of the svg node
returns the y coordinate of the current svg element
returns the x deviation x
returns true if the local field is local
creates a new interpreter
creates a new scroll bar listener
displays an error dialog box
displays an error
displays a message in the message
shows a message in the user interface
shows a prompt dialog box
shows a prompt dialog box
shows a confirm dialog
check if the view is correct
returns true if resizing is resized
sets the on resize
sets the uri of the resource
displays an error resulting from the specified exception
returns true if the document is interactive
shows a message in the system
show a prompt dialog
show a prompt message
returns the default font family
adds a selection listener to the selection
removes the listener from the collection of listeners
stops the processing of the document
update the
returns a string representation of the given xml string
sets the url of the document
mouse pressed method
invoked when the mouse exits a component
sets whether the interactions list is disabled
sets the tool tip text
returns true if the current is disabled
sets whether the user selects the unix text selection
sets the selection mode
displays an error dialog box
sets the document to be used by this
displays an error resulting from the specified exception
sets the event tool tip for the event
sets the
returns true if the event is last activated
stops the processing of the
stops the
initializes the event handling
creates the text selection manager
returns the text selection manager
sets the gvt tree
sets the paint
returns the precision of the precision
sets the precision of the numeric
returns the value of the specified double as a double
paints the component
returns the number of referenced objects in the group
returns true if the given style name is contained in the given
creates a bridge context
computes the rendering of the rendering algorithms
releases resources allocated by this component
called when the gvt tree is disposed
returns the of the graphic context
called when a rendering is made
recycle the stack group
recycle the recycle group
returns the view transform of this view
returns the bounds of the source
returns the bounds of the specified transform
returns the bounds of the bounding rectangle of the
called when a rendering is completed
returns the bounds of the specified geometry
returns the bounds of the
returns the outline of the outline
returns the root node of the tree
returns the graphics node that is currently being used to draw the
sets the value of hit check children
this method is called when the rendering is stopped
sets the transform of this transform
returns the painted shapes bounding box
returns true if the specified area is in the area of the
sets the visibility of the node
sets the root node of the tree
sets the base transform of this transformation
returns the bounds of the image
returns the bounds of the image
returns the bounds of the image
returns the bounds of the image
returns the outline of the image
returns the painted shape
returns the damaged area painted by this object
returns true if the area is painted
returns the area of the shape
returns the
returns true if the given area is in the area of the
returns the index of the character at which the next character is
invoked when a mouse button has been pressed on a component
returns the bounds of the bounding rectangle of the
flush the buffer
repaints the given shape
flush the contents of the buffer
invoked when a mouse button is pressed on a component
invalidates the geometry cache
sets the height of the line
returns true if the given string contains the specified unicode codepoint
returns the bounds of the given code rectangle code
returns true if the given point is inside the border
returns true if the given rectangle intersects the interior of the
derives a object from the given font object
derives a object from the font object
returns true if the given unicode matches a glyph
returns true if the given unicode character matches the unicode character
returns true if the given unicode matches a glyph
returns true if the given unicode character matches the given unicode character
sets the position of the current position
returns the glyph metrics for the given
this method is called by the
invalidates the cache
returns the outline of the outline
returns the bounds of the specified transform
returns the bounds of the bounding box of the
returns the bounds of the specified geometry
returns the bounds of the
returns the bounds of the specified transform
returns true if the given point lies inside the polygon
sets the position of the specified glyph in the position
returns the outline of the outline
returns the last selected node
returns a new code attributed character code
invalidates the cached geometry cache
returns true if the given point is inside the polygon
returns the bounds of the shape
returns the area painted by this shape painter
returns the painted shapes bounding box
returns true if the area is painted
returns the shape where the shape is drawn
returns the current
returns true if the given area is in the area of the
sets the stroke
returns the area painted for the shape
returns the painted shapes painted
returns true if the area is painted
returns the current shape
returns the that is used to translate the current
returns true if the given area is within the area of the
sets the shape
sets the preferred size of the component
sets the list handler
returns the offset of the current character
returns the number of the handler
parse the current state of the current token
returns the font that is currently selected
called when the loading of a document is finished
called when the loading of a document was cancelled
called when the loading of a document is loaded
called when a build has been completed
test if character is
called when a build has been cancelled
called when a build failed
called when a rendering was cancelled
called when a rendering failed
invoked when a new
closes the document
sets the encryption password for this document
sets the column of the rectangle
dispatches the mouse event listener to the given mouse event
sets the canvas
dispatches the event to the gvt tree
dispatches the event to the gvt tree
returns the signature dictionary for the given name
sets the rendering hints for this object
sets the selection text
deselects all events
returns the page rotation
returns the page size with the specified index
returns the page size
returns the crop box for the given index
returns the page dictionary for the given page number
returns the for the given page
removes all the from the dictionary
removes all the annotations from the dictionary
removes the unused objects
sets the text selection
deselects all selected items
returns true if the given extension is supported
creates a new
initializes the file
initializes the frame
removes the component from the panel
clears the form
saves the current confirmation
this method is called when the user selects a new document
opens the document
save the document to the document
saves the current document as a file
closes the program
invoked when a window is in a component
called when the drop end drag source
this method initializes this
this method initializes j content pane
this method initializes j panel
this method initializes j panel1
this method initializes j button
this method initializes j button1
this method initializes j panel2
this method initializes j tree
this method initializes j button
this method initializes dir b
this method initializes this
this method initializes dir b
this method initializes note note
this method initializes link b
this method initializes link b
this method initializes note note
this method initializes this
this method initializes j content pane
this method initializes j tabbed pane1
this method initializes name panel
this method initializes ok
this method initializes link label
this method initializes this
this method initializes j content pane
this method initializes ok
this method initializes j
this method initializes j scroll
this method initializes this
this method initializes j content pane
this method initializes this
this method initializes j panel
this method initializes j panel
this method initializes j panel
this method initializes j button
this method initializes snap tree
this method initializes j button
this method initializes wrap b
this method initializes wrap b
this method initializes this
this method initializes j panel
this method initializes j panel
this method initializes j button
this method initializes url
this method initializes wrap b
this method initializes j
this method initializes snap dir dir
this method initializes snap
this method initializes j button4
this method initializes text field
this method initializes j button5
this method initializes text area
this method initializes this
this method initializes info panel
this method initializes j content pane
this method initializes path
this method initializes main panel
this method initializes j text field
this method initializes tree pane
this method initializes buttons
this method initializes j scroll pane1
this method initializes tree scroll
this method initializes j search list
this method initializes save as
this method initializes down panel
this method initializes load
this method initializes new dir
this method initializes up panel
this method initializes new link
this method initializes left panel
this method initializes panel
this method initializes meta
this method initializes buttons
this method initializes update
this method initializes j
this method initializes snapshots
this method initializes snap
this method initializes j me down button
this method initializes add snapshot
this method initializes j panel
this method initializes delete snapshot
this method initializes scroll pane list
this method initializes j panel right buttons
this method initializes tree
this method initializes full
this method initializes meta tab
this method initializes description pane
this method initializes main
this method initializes tools
this method initializes
this method initializes description
this method initializes j panel
this method initializes exit btn
this method initializes j panel1
this method initializes j scroll pane
this method initializes j text field
this method initializes j button search
this method initializes snap tree
this method initializes snap dir
this method initializes update b
returns the scale type
returns the quadrant rotation
returns the rotation value
returns the shear x value
returns the shear y value
returns true if the mirror type is a mirror
returns true if the aspect ratio is set to true
returns true if the scale size is scaled to the preferred size
creates the text area
sets the message type
sets the option type
gets the accessible context associated with this context
checks if the element has an attribute name
called by the factory when the properties searcher is set
sets the query properties
sets the searcher factory
returns the searcher factory
creates a new query
check if the parameters are valid
creates a lucene lucene template
this method is called when the template is loaded
sets the analyzer
sets the searcher factory
determines whether the given document is a
this method searches for the query
sets the directories
returns the index factory
sets the index factory
returns the searcher for this searcher
returns the searcher for this searcher
get the searcher for this searcher
called by the factory when the
destroy the searcher
returns the searcher associated with this searcher
initializes the searcher
close the searcher
refresh the current page
returns the index of the target index
sets the index of the target index
sets the lock lock value for this j2
sets the index writer
check the directory and the directory
returns the maximum field length
acquires the lock lock on the lock
release lock on the lock
check if the directory index is locked
get index reader
creates the index
returns the index writer wrapper for the current index
returns the term index
returns the index reader
returns the write lock timeout
returns the index writer for this writer
returns true if the file is used to be used for compound
returns the index writer for the given index
sets the merge factor
returns the number of documents in the current document
returns the type of object
checks if the configuration bean is configured to be used
initializes the directory
returns the type of object
initialize the directory
returns the index writer
releases the index writer
release the index reader
called by the framework to initialize the
returns true if the writer is index writer
called by the factory when the
sets the index factory
this method is called when the user releases the
creates lucene lucene index
test that the rules recognizes the axiom
reset all properties to their default values
check status of the server
adds the project
this method is called when the user selects the previous button
this method is called when the project is deleted
returns the script
returns the file watch
checks the value of the specified parameter
executes a validation request
adds a to the list of
adds a new event to the list of events
returns the decoded string representation of the specified
sets the message id of the message
initializes the given description
adds a situation to the
change the url of the repository
adds a semantic annotation to the model
returns the object that is associated with the given status
sets the status of the sync server
sets the sync status
prints the given info
returns the class of the given class
find the field with the given class
gets the salary of the salary
adds a new executable to the current group
this method is called when the transaction is cancelled
returns true if the given item can be executed
returns true if the item can be executed
returns the descriptor for this executable
returns a decision of the decision of the given
this method is called when the selection time is
adds a executable to the list of commands
returns the call mode
sets the execution target
returns the execution target
sets the update update view
update the graphical representation of the graphical descriptor
returns a transaction that is a transaction that is a transaction
gets the content search params
gets the value of the path search parameters property
called when the work directory is finished
returns the index of the first occurrence of the specified element
sets the context of the file
reports on the operation in progress
returns true if the user has a
returns a string representation of this object
returns a decision of the given
returns true if the item can be executed
returns true if the given item can be executed
cancels the given action
returns the descriptor of the descriptor
returns true if the given item can be executed
returns the decision of the given
returns a string representation of this object
checks that the given item is able to determine if the synthesized
returns the decision of the given
returns a decision for the decision of the given item
invoked when a work is selected
returns the type of the metadata
returns the path of the given relative path
returns the path to the paths
returns the date of the item
returns an input stream for the given attachment
returns true if the given item is descendant of this path
returns the transaction object for the given attribute
returns the absolute path of the file
returns the focused on this item
returns an input stream for this attachment
adds a child to this item
returns the absolute path of the file
returns the current context
returns the children of the class
returns the date in milliseconds
returns the parent item of this object
returns the path of the given relative path
returns the size of the content
returns the type of the descriptor
returns true if the descriptor has children
returns true if this descriptor has parent
adds a new selection to the selection
returns the absolute path of the file
sets the selected item
returns the class that this class is associated with
returns the time in milliseconds
sets the focused on focus
sets the colors of the given items rgb color
returns the parent item
returns the path of the given path
returns the type of this object
returns true if this object is parent
translates the point to the point
tests the
test group by cost
returns the window
returns the location of the workspace
sets the of the recent
reads the contents of the file
returns true if the given code card code is a
initializes the
returns the number of elements in the list
returns the wrapped progress monitor
returns true if the xml format is a format
escape the given string
returns a file object representing the directory
creates the buttons
saves the pressed state
creates the buttons
creates the selection listener
checks if the text field is valid
creates a selection listener
returns the code composite code value
returns the button box that controls the user to the specified
returns the list of composite controls that is currently being
returns the selection listener
returns the shell
returns the shell
creates a new list of items
handles selection changes
returns the value of the preference as string
this method is called when the selection changes
returns the text control
sets up the selected
called when the drag operation has finished
sets the data source
start the drag operation
hook for subclassers to handle the action double click action
returns the for the given container
sets the value of the text field
sets the text of the text area
sets the value of validate strategy
notifies the change listener that the value changed
updates the page completion page
creates the options group
displays the dialog with the given error message
displays an error dialog with the given exception
returns the title for the error dialog
searches for a text with the given text
called when the drag operation has finished
sets the data source
updates the viewer
sets the initial selection
sets the initial selection
sets the input object for this input
sets the expanded elements of the list
creates a tree viewer
returns the viewer tree viewer
returns an image from the registry
this method initializes this
handle the browse button
called when the user modifies the current state
updates the viewer
executes the sql update statement
execute a sql query
notify listeners that a client is connected to the client
notify listeners that a client has disconnected
stops listening for incoming connections
commit the database connection
this method is invoked by the server side handler to handle the
fires a user login event
notify user that a user has logged out
returns the connection handler
returns the connection details
adds a new adapter to the table
adds a new adapter to the table
refresh the background color
creates the default edit policies and associates them to this
update the split table
sets the icon for the
sets the icon for the
updates the current figure and the respective result
sets the icon for the join
sets the icon for the
update the join of the
updates the color of the figure
sets the icon for the join
sets the icon for the
unselects the selection
adds a new adapter to the model
updates the color of the figure
clear the bottom margin
adds a new adapter to the table
sets the inner margin
paints the inner margin
shows the selected figure
clears the selection
refresh the font color
update the split table
sets the icon for the
adds a new adapter to the table
updates the color of the
adds a new adapter to the model
update the of the node
adds a new adapter to the table
sets the icon for the
shows the selected figure
sets the icon for the
unselects the selection
shows the selected figure
updates the color of the figure
adds a new view adapter
adds a new adapter to the table
shows the selected figure
unselects the selection
updates the color of the
adds a new adapter to the model
updates the color of the
refreshes the current state of the tree
returns the message of the resource bundle
returns the message
activates the figure
returns the command to be executed
deactivates the figure
returns the the feature type
checks if compilation unit is already present in the database
checks the given procedure if any
remove the given path from the list of paths
runs the action
log a message to the log
logs a message with code name code
logs an error
log a error with the specified error
returns true if the live validation is enabled
sets whether validation is enabled
updates the enablement of the selection
returns the initial location of the dialog
creates the settings for the dialog
returns the initial size of the dialog
runs the action
this method is called when the user selects the selected element
the action has been activated
verifies that the resource file is valid
this method will be called when the adapter factories
this method will be called to initialize the semantic adapter
this method will be called to initialize the semantic adapter
this method will be called to initialize the semantic adapter
initializes the semantic adapter
this method will be called to initialize the semantic adapter
executes the runnable
executes the runnable
initializes the semantic adapter
this method will be called when the adapter factories
this method is invoked to update the runnable
this method will be called when the adapter factories
this method will be called to initialize the semantic adapter
this method will be called when the adapter factories
this method will be called when the adapter factories
creates and returns a program properties object
creates the input condition edition properties
creates and returns a new output condition
creates a new instance of predicate
create an instance of
creates a link provider provider provider
creates a new procedure properties object
creates the properties provider for the experiment properties
returns a while loop properties
creates the data provider for the database
creates and returns a new handler properties object
creates and returns a new pipeline edition
fill the color
creates an image for the current image
returns the image for the given path
returns the image for the given image id
returns the color of the selected color
returns true if the default color is used to use default colors
sets the id of the editing component
sets the pn
initializes the label provider
returns the label provider factory
returns the content provider of this content provider
disable the move button
disposes the receiver
enables disables the button
sets the tool tip text
extended request data key to hold editpart visual id
creates containers palette tool group
creates nodes palette tool group
creates complex nodes
creates containers palette tool group
this adds a property descriptor for the procedures feature
this adds a property descriptor for the name feature
this adds a property descriptor for the description feature
this adds a property descriptor for the type feature
this adds a property descriptor for the input links feature
this adds a property descriptor for the executable feature
this adds a property descriptor for the join feature
this adds a property descriptor for the split feature
this adds a property descriptor for the capacity feature
this adds a property descriptor for the iterable feature
this adds a property descriptor for the predicate feature
this adds a property descriptor for the destination feature
this adds a property descriptor for the procedures feature
this adds a property descriptor for the predicate feature
this adds a property descriptor for the input condition feature
this adds a property descriptor for the output condition feature
this adds a property descriptor for the capacity feature
clears the map
returns true if the type is valid
logs a message with info log level
adds the given type to the result set
logs a warning
logs an error
logs an error with the given message and cause
sets the fixture for this spec test case
sets the fixture for this meta info test case
returns the fixture for this specification test case
returns the fixture for this meta info test case
sets the fixture for this meta info container test case
returns the fixture for this meta info container container test case
process the compilation unit
determines whether the given annotation is a annotation
returns true if the field is abstract
returns true if the anonymous class declaration is anonymous
extends the superclass to meet the schema class
checks if the field is initialized
returns true if the interface is fully qualified
returns true if the given type is typed
returns true if the given interface name is contained in the list
returns true if the field is transient
returns true if the constant is already defined
returns the number of interfaces
returns the constant checker for the given type name
returns true if the type is parameterized
returns the number of errors in the document
checks if the given field contains a field
returns true if the given annotation is annotated
returns a field checker for the given field
returns true if the field is abstract
returns true if the given annotation is annotated
checks if the given import is already imported
checks if the given method is contained in the table
returns true if the given annotation is annotated with the given
returns true if the field is synchronized
checks if the method is contained in the table
returns true if the current code javadoc code is used
returns the number of imports
returns true if the field is a native
returns a method checker
returns true if this is a final
returns true if the given type is a valid type
returns a method checker
returns true if this class is static
returns true if the given package is in package
checks if a given parameter is contained in the given parameter
returns true if this is a private modifier
returns true if this is a protected modifier
returns true if the given parameter is a parameter
returns type checker
returns true if this is a public
returns true if the given parameter is annotated with the given parameter
returns the type checker for the given type
checks if the fields are set
returns the main type checker
check methods for the method
returns true if the given type contains the given type
returns true if the given exception is thrown if the given exception
returns the number of exceptions thrown by this method
returns true if the body contains the body of the body
tests if the given body contains the expected body
returns the number of occurrences of the given
removes the given from the given registry
checks if the type of node is declared in the given type
writes the message to the given string
closes the underlying
adds a new import declaration to the imported
determines whether the given type name is included in the package
merges the given and merge the result in the result set
returns the package declaration for the given node
removes the given code body code from this code code
sets the rewriter rewriter for the rewriter
checks if the given package name matches the given type
logs a message with info log level
logs a warning
logs an error
logs an error
returns the image for the given path
returns the image for the given file
logs a message with info level
logs a warning
logs an error
logs an error
returns the image for the given path
returns the image for the given file
checks if the given type is a program
this just records the information
create a new model
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
creates a new adapter for an object of class
returns the label for the specified type name
handles activation of the editor or its associated views
adds an attribute to the list
this method is called when the process is activated or not
verify the predicate
dispatches the specified event to the queue
returns a runnable that will be executed when the runnable is finished
execute the given process
submits a runnable to the task
sets the program
this method is called by the framework to initiate the process
returns true if the player is busy
sets the capacity of the queue
returns the value of the specified
sets the value of a specific value
adds a parameter to the input parameter
adds a parameter to the output
sets the exit
creates a new process instance
returns the value of the property
sets the capacity of the queue
sets the property
returns the input condition
sets the handler
returns the output condition
sets the exception handling policy
sets the iterable
returns true if the given process is contained in the list
resets the process to its original state
resets the process to its original state
consumes the specified process
adds a call to the
this method is called by the process when a new process
resets the process to its original state
called by the framework to indicate that the
returns the number of in the given
returns true if the given code process code is empty
start the task
end the current state of the
end the current state of the specified element
returns the state of the
returns a diagnostic describing the errors and warnings listed in the resource
format the given arguments
this accesses a cached version of the property sheet
returns the user defined credentials for the user
returns the default value of the default value
sets the default value for this property
returns the java type of the java class
returns the default value for the default value
sets the default value for the default value
compares this object with the specified object for order
returns the default value for the default value
sets the default value for the default value
returns the java type of the java class
returns the java type of the java class
sets the default value for this property
sets the default value for the given value
returns the java type of the java class
sets the length of the string
returns the java type of the java class
returns the default value for this property
sets the default value for this property
compares this object with the specified object for order
sets the default value for this property
returns the java type of the java class
sets the length of the string
sets the number of decimals to be used
returns the java type of the java class
gets the nullable
sets the default value for this property
returns the java type of the java class
compares this object with the specified object for order
sets the name of the
returns true if this nullable nullable nullable nullable is a nullable
sets the name of the database
returns the table
sets the table
sets the database database
gets the value of the property
sets the host name
sets the tables in the table
sets the
sets the userid
returns the default value of the default value
sets the default value for this property
returns the java type of the java class
compares this table with the specified object for order
sets the password
adds a new table to the table
sets the name of the table
returns the default value
sets the default value for this property
sets the default value for this property
returns the java type of the java class
sets the default value
sets the default value for the given default value
returns the java type of the java class
sets the table
returns the java type of the java class
sets the
removes the given table
load the tables
sets the fields
compares this object with the specified object for order
connect to the database
returns the tables contained in the database
returns the class comment for the given class
returns the table with the specified name
sets the name of the database
sets the tables in the database
returns the comment for the given attribute
adds a new table to the table
removes a table
sets the database
removes a table from the table
load the primary key value pairs
adds a field to this field
returns the field with the specified name
removes a field from the list
adds a new index to the list
returns the indexes of the current object
removes the given index from the list of
removes a field from the list
returns the of the
returns the number of elements in this list
ask the question to ask for a question
returns the target desc
divides this value by the specified amount
sets the color palette
process the request and return the response
process the request and return the response
checks if the is valid
returns the user manager
verifies all organizations in the database
saves the organizations
verifies that the researchers
returns the xml
this method marshalls the given file to a file
login to the server
marshall the given file into a file
this method uses the xml file to marshall the xml file
returns the collaboration name
sets the collaboration name
gets the organization name
gets the organization type
gets the researchers
sets the organization name
sets the collaborating type
sets the researchers researchers
returns the researchers name
gets the researchers organization
sets the researchers name
sets the researchers organization
display researchers to display the researcher
display the collaborations
this method will be called to display the current organization
finds the organization
finds the collaboration to the database
returns the y coordinate of the y coordinate
returns the x size of the image
center of mass
builds the patch for the given
evaluate the given value in the model
sets the quad at the specified position
returns a string representation of the arc
returns true if the given ray is a
returns a string representation of this object
sets the triangles of this triangle mesh triangle
returns the selected triangle
returns the z coordinate of the specified coordinates
sets the of the current
sets the position of the component at the specified location
returns the image export image
returns the image for the given
returns the image for the given
sets the perimeter of the polygon
add a line to the end of the line
returns a string representation of this object
returns the phase of the current phase
returns a new instance of this complex number with the specified
returns the subtraction of this complex number with another
returns the product of this complex number with a complex number
returns the conjugate of this complex number
returns the conjugate of this complex number
returns the complex conjugate of this complex number
sine of this complex number
returns the cosine of this complex number
tangent of this complex number
returns a string representation of the object
returns a string representation of the object
returns the distance between this point and another
this method is called by the drawable
this method is called by the application when the user selects the
this method is called when the open gl is called
this method is called once for the drawable
mouse wheel listener
display the current state of this drawable
mouse wheel mouse wheel listener
this method is called once for the drawable
invoked when a mouse wheel is moved
invoked when a mouse wheel is moved
this method is called once for the drawable
this method is called once for the
display the current state of this frame
execute the sql statement
generate a string representing the current state of the
returns a string representation of the object
persists a object and saves the object
returns an object from the database
update the object
adds members to the given code group object code
deletes an object from the database
creates a new connection
returns the class name of the database class
initializes the default configuration settings
clears the source and the source
returns a string representation of the given query
updates the settings for the given settings
returns the holiday interval id
load holidays calendars from calendars
upgrades the given project to version
upgrades the given unit to version information
returns the subject by id
cleans up the session
deletes the default exclusion permissions for the given code
this method is used to sign the
this method is used to sign the
returns the resource with the specified locator
get the resource id of the resource with the given name
get a resource pool by its locator
get the resource pool id for the given pool name
creates a new pool with the given name and arguments
upgrades the given project to version
prepares the rate for a
executes the object
restore the backup context
returns a list of all reports
returns a list of all the
cleans up the database
this method is called by the framework to set the form
prepares the query for the query
returns the number of objects in the given ideal
returns the localized name of the jasper file
returns the project status for the specified locator
get the project status id
returns all projects in the project
creates a report content
removes all the objects in the given session
count the number of objects in the given project
writes a binary file to the file
returns the accessor for the accessor method for the given member
this method is used to display the given process
this method is used to display a file with the given
returns the object that is used to hold the object
sets the object to be used for this object
creates the fake output streams
upgrades the project to
upgrades the given project to version information
returns the holiday calendar
sets the holiday calendar
returns the imdb id for the given name
returns the project id for the given project name
returns the assignment by its locator
returns the assignment of the activity
returns the project plan for the given locator
returns the project plan id for the specified project name
returns the project plan version
creates a content object
returns a list of all project plans
returns the activity by id
returns the activity version of the given activity locator
returns the activity id of the activity
returns the version id of the activity
returns the number of in the database
adds a node to the graph
returns the id of the node
sets the node id
creates a new instance of the given link
removes the link from the given index
sets the mapping mapping
sets the nodes
returns the node for the given node id
adds a matrix view to the model
moves the selected activities over the specified position
returns the set of activities that are not cloned
expands all the nodes in the list
update the tree type
removes a link from the source
insert a new attachment into the list
returns the base costs for the current task
applies the template to the given plan
returns the project node assignment
sets the project finish
cleans up the
validate plan values
fills the list with the attachments
calculates the cost of the adaptation
calculate the base cost of the
updates the remaining personnel in the city
updates the remaining of the given
returns the polygon that is currently being used for the current component
deletes the work records from the database
revalidates all the projects in the project
fix the plan project plan dates
upgrades this query to version 5
upgrades the plan to the plan
execute the revalidate and delete plan
returns the duration for the given period
expands a project project
returns a list of all activities for the given activity
checks the resource availability of the assignment
returns a list of all tasks that are visible
checks the ownership of the given project
returns the activity by id
returns the activity id of the activity
returns a list of all activities
returns a list of all attachments
returns the preference value for the specified user
returns true if the given activity is independent of the given activity
handle the user click on the component
deletes the given project data set from the repository
checks the buttons for the given set of buttons
execute the operation
delete a task task
returns true if the given activity is excluded
returns the for the given work
returns the resource with the specified locator
returns the attachment for the locator
upgrades the given project to version
upgrades the given unit to version 1
upgrades the given to the correct work
updates the finish time
resets the work values for the given session
sets the finish attribute of the object
accepts the specified file
returns the file containing the request file
creates a backup filename
validates the admin password
adds the given row to the table
load modules from modules
load the modules from the module
returns the project for the given project
sets the initializer class of the initializer
returns the initializer of this operation
extends the prototypes prototypes
deletes all objects from the system
cleans up the file
post a start of a post
checks if the source file is already in the database
creates the schema for the export
sets the content disposition header
initializes the gantt component
returns the gmt gmt date
calculate the hash value for the given data
returns the hash value of the algorithm
finalize the session
checks if the license is allowed to be displayed
adds the tools to the list of tools
checks the license warnings
disables the fields of the form
this method is used to execute the given password
returns true if the current session is a valid
initializes the project home
initialize the
resets the default settings to system
returns the class of the specified service
returns the availability of the resource
returns the row with the given id
load settings from settings
sets the assignment of the assignment
detects if the graph is possible to drive the
returns the area of the given component
paints the header of the specified area
removes a filter from a list of elements
returns an iterator for the holidays for the given time
undo the last undo operation
creates the set of the set of the set
returns the latest time in the end of the activity
returns the latest start activity
at startup create and show the main frame of the application
get the
sets the
get the
sets the
get the
sets the
get the
sets the
get the
sets the
get the
sets the
get the
sets the
get the
sets the
get the
sets the
adds a pair to the category
returns true if the current is ignoring case
returns the highlight
returns the highlight groups
sets highlight groups
returns the current line number
returns a string representation of this token
returns true if the character is a letter
checks if the given character is a digit
the current token
scans the current character
scan the token
returns the last accepted string
parses the program
sets the value of the parameter
checks the parameters for the parameters
executes the given query
adds a pattern to the list of patterns
clears the patterns
checks if the parameter is valid
returns the url
initializes the database
returns the
execute the query
adds a child node to this node
searches the node with the given name
returns true if the node has a leaf
returns true if this node is a leaf
returns the error message
render the result of the query
p escape a string
executes the given query
returns the value of the lt value gt
checks the parameters for the parameters
executes the command
adds a document section to the document
renders the node
sets the record sets
adds a processor to the processor
execute the query
renders the
executes the given code pattern code by the given pattern
returns the value of the http request
returns the result of the given node
sets the result of the result
executes the given query
returns the result of the test
returns the value of the file
initialize the service
get the records from the given records
passing the focus request to the viewers control
returns the for the given date
terminate the resource
adds a parameter list to the list of parameters
returns the number of cross product of the cross product of the
initialize the
disposes the toolkit
this method is called when the parameter value is changed
resets the
update the parameter value
disposes the toolkit
disposes the toolkit
returns true if the default is auto commit by default
resets the job
update the parameter value
resets the execution status
update the parameter value
reset the parameters
disposes the toolkit
this method is called when the user modifies a parameter
reset the sql query
disposes the toolkit
update the parameter value
disposes the toolkit
resets the
disposes the toolkit
update the parameter value
resets the parameters
disposes the toolkit
update the parameter value
resets the
disposes the toolkit
update the parameter value
resets the
disposes the toolkit
resets the flow to the initial state
disposes the toolkit
update the parameter value
initialize the
resets the document
disposes the toolkit
disposes the toolkit
update the parameter value
resets the sequence
disposes the toolkit
update the parameter value
initialize the
disposes the toolkit
resets the parameters
initialize the
disposes the toolkit
disposes the toolkit
update the parameter value
resets the resource to its initial state
disposes the toolkit
resets the resource bundle
update the parameter value
disposes the toolkit
update the parameter value
resets the resource to its original state
disposes the toolkit
update the parameter value
resets the
disposes the toolkit
update the parameter value
resets the collection of parameters to their default values
disposes the toolkit
resets the resource bundle
update the parameter value
disposes the toolkit
update the parameter value
disposes the toolkit
resets the collection of parameters to its original state
disposes the toolkit
update the parameter value
resets the parameters to the default values
resets the
disposes the toolkit
disposes the toolkit
update the parameter value
update the parameter value
disposes the toolkit
reset the query
disposes the toolkit
update the parameter value
resets the
disposes the toolkit
update the parameter value
resets the url to the default value
resets the
disposes the toolkit
update the parameter value
disposes the toolkit
update the parameter value
resets the uri to the default values
disposes the toolkit
update the parameter value
resets the field values
disposes the toolkit
reset the
update the parameter value
disposes the toolkit
update the parameter value
initialize the
resets the file
disposes the toolkit
update the parameter value
update the parameter value
resets the parameters
disposes the toolkit
update the parameter value
update the parameter with the given value
returns true if the auto commit is visible
resets the status panel
update the parameter value
updates the gui
called when the user clicks ok button
cancel the clicked button
this method is called when the user selects the
resets the view
this method is called to process the request
resets the parameters
disposes the toolkit
update the parameter value
process the file
resets the file
disposes the toolkit
update the parameter value
resets the input parameter
sets the value of the parameter
returns the preferred buttons for this button
initializes the panel
update the parameter value
returns the query string
returns the default index service url
returns a string representation of the object
returns true if the application has applications to be
returns true if the application has applications
returns true if this component is highlighted
returns the selected application
sets the name of the column
sets the column name
sets the value at the specified position
sets the values of the table
update the list of references to the given
this method initializes default text area
creates a panel with the given text
gets the value of the application property
sets the values of the values
inits the details panel
returns true if the combo box is visible
adds the default parameters to the given parameter
resets the parameters to the default values
adds a set of parameters to the parameters
sets the parameters from the settings map
load properties from the file
load properties from the given file
saves properties to the given file
returns the author of this object
creates a new note
creates a new instance of the given author
gets the value of the create date property
sets the create date
returns an iterator of the list of notes in the list
returns the root category of the category
returns the parent category
sets the parent of this category
sets the root category of the category
adds a new note to the list
removes a note from the list
returns a string representation of the category
returns a string representation of the list
returns an iterator over the in this list
returns the parent of this node
sets the parent of this node
adds a note item to the list of items
sets the parent category
removes a note item from the list
returns an iterator of the note items
returns a string representation of the object
adds a to the
returns an iterator for the category list
sets the root parent
removes the from the
adds a category to the category
removes a category from the category
returns a string representation of the category
process a processing instruction
creates xml document with given xml
receive notification of character data
this method is used to set the object to be used for
throws a code error code
this method is called when the user wants to update the object
parse the document
receive notification of a warning
adds a logger to the list of loggers
this method is called by the digester to handle the exception thrown
removes a logger from the registry
writes an object to the output stream
returns the logger
returns the logger with the specified name
writes the given item to the log
writes the info object to the object
parse the root category
writes the given object
write a log object to the output stream
terminates the current thread
writes the given object and returns the value of the
this method is called to write the log to the log
returns an iterator over the names of the attributes
terminates the output
returns the value of the specified attribute key
returns a string representation of this object
writes the xml document to the xml file
sets the attribute value
writes the given object and writes the type to the given object
returns the value of the attribute specified by the name
writes the given log item to the log
returns true if the attributes are not empty
parse the
returns the attributes of this object
constructs a new instance of this class given its parent
returns the attributes as a string
parse the
returns true if the children of this node has children
returns the time in seconds
returns the date of the
returns the children of this node
returns a string representation of the object
returns the child of the given name
convert a date to a date
notify the model changed
adds an attribute to the element
convert a double to a double
returns the object type name
sets the body text
returns a string representation of the category
adds a new child to this node
sets the parent
creates a new instance of the given author
notify the model changed
returns the object type name
returns a string representation of this object
returns a string representation of this object
creates a new instance of dossier model
opens an xml file
returns a dump of this object
notify the model changed
returns a string representation of the tree
creates a new instance of notebook
returns the object type name
notify the observers that the changed event has occured
creates a new instance of notebook xml
parse the document
updates the view
update the category of the category
updates the note
updates the note
returns the object type name
removes a category from the category
notify the model changed
returns the object type name
adds a sub permission to this group
returns an iterator over the permissions in this code code
removes a sub permission from the list of sub permissions
adds a user to the database
returns the number of sub
removes a user from the list
check if the password is correct
sets the permission
returns an iterator over the users
adds a member to the group
returns an iterator over the members of this group
returns the number of users in the list
returns the group permission
removes a member from the group
adds a group to the group
sets the group permission
registers the given model with the model
returns the number of members of this group
returns the permission
removes the specified group from this group
sets the other permission
notify the observers of the change
returns an iterator over the groups in the group
returns the type of change
returns the number of groups in the group
sets the change type
returns the user permission
create an instance of
adds a new object to the list
gets the value of the unique text property
notify the model changed
removes an object from the database
returns the properties
returns an iterator over the objects in this object
returns a string representation of the object
returns the size of the object
unsupported operation set id
sets the properties
notify the model changed
notify the model changed event
returns the change detail
returns the permissions
returns the properties of the current user
sets the change detail
returns the root of the tree
returns the properties of the current user
returns the element type
sets the permissions
returns a string representation of the list
sets the element type
returns a string representation of the object
returns the parent of this note
sets the parent of this note
adds a child to this
returns a new child
returns the iterator of children of this node
returns the properties of the hashtable
removes a child from the
create an instance of
adds a note to the list of items
finds a child with the given unique id
returns the number of children of this node
returns the root of the notebook
returns the properties of this object
adds a note to the note
sets the root of the notebook
returns the notes of the current notes
adds a notebook to the list of notebook
removes a note from the list
adds a note item to the note
finds a note in the database
creates a new code cli view code instance
returns an iterator over the
adds a category to the category
returns the number of notes in the notes
removes a note item from the list
creates a new instance of the view view
finds a note item with the given name
returns an iterator of the categories
returns the value of a property
returns the number of items in the list
removes a notebook from the notebook
sets the value of a property
removes a category from the category
returns a string representation of the object
finds a category
returns the properties of this object
finds a notebook by its unique id
returns the value of a property
returns the number of categories in the list
sets the value of a property
removes the first occurrence of the given location
returns a string representation of the object
creates a notebook
returns an iterator over the
returns true if the given text is a notebook
removes the given from the list of
creates a new category
finds a object from the database
returns the number of in the
returns true if the given text is
notify the model changed
returns true if the given text is
returns true if the given string is a note
returns true if the given string is a note
returns the value of a property
sets the value of a property
sets the element name
if the element is a new element element
sets as xml the element name
sets the element
sets the customer
sets as xml the info element
sets as xml the element act as a xml element
element element element
sets the element
sets as element as a element as a
sets the long value of the element
true if the type element is type element
sets the array type element
true if the user has a id element
sets as xml the element type
unsets the array type element
sets the id element
add a to the user
sets as
unsets the id element
add a soap envelope to the database
true if the link element is an href
add a jaxb element to the list of schemas
sets the href element
sets as href
unsets the href element
sets the byte array
add a to the user
add a to the
sets the language
true if the element is
sets the offset element
unsets the offset element
sets the duration value for this task
add a soap envelope to the database
add a bunch of soap soap headers
sets the struct
true if the store element is an offset element
sets the offset element
unsets the offset element
sets the name of the element
true if the user has a id element
sets the short value for the target
sets the id element
true if the user is set position
sets the position element
sets as id
unsets the position
sets the float value of the element
unsets the id element
true if the attribute element is an link element
sets the href element
sets as href
sets the array of the element type
unsets the href element
sets the string value for the given string
add a soap envelope to the database
sets the value of the id element
sets the date time value for this user
add a qname to the qname
returns true if the element is root element
add a soap envelope to the database
sets the time value
true if the root element was
sets the root element
unsets the root element
sets the decimal value for the target
add a to the
sets the int value
sets the boolean value of the element
add a soap envelope to the database
add a new to the database
sets as element as xml the element
true if the content type element is set
sets the expected media type element
sets the content type element
unsets the content type element
sets the echo string param element
sets the echo string for the element
sets the customer
sets as xml the customer element element
sets the size
sets as the size as a element
true if the element element is a element
sets the preferred sub sub attribute element
sets as xml the preferred sub components
unsets the preferred sub element
sets the date to the given date
sets the double value of the element
gets the value of the name property
sets the value of the name property
gets the value of the customer property
sets the value of the customer property
create an instance of
returns the value
sets the value of the value property
sets the email address
sets as xml the email address
sets the subject email subject element
sets as xml the email subject element
sets the body element
sets as xml the body element
sets the points of the game
sets the reason code
sets the transaction id
sets the address of the address
returns the current points
sets the email address
returns the plan number
sets the current points
sets the plan number
returns the input stream for the input stream
sets the transaction
sets the plan
returns the output stream to which this output stream is written
sets the phone number
sets the output stream to which this output stream should be
returns the photo with the specified url
sets the
returns the url of the photo link
returns the
sets the
returns the
returns the
sets the resolution x
sets the
sets the resolution y resolution
sets the
sets the
sets the first name of the first item
sets the create date
sets the last name
sets the name
sets the date of the uploaded file
returns the number of photos in the project
sets the file
returns the unique file name
sets the number of photos in the session
sets the output stream to which this output stream will
returns the allocated size of the allocated file
sets the input stream to which this input stream can be read
returns the current size of the current
sets the url of the photo link
sets the allocated size of the allocated allocated
sets the current size of the current
gets the value of the property
prints the stack trace of the stack trace of the exception
prints the stack trace of the embedded exception
prints the stack trace of the embedded exception
returns the error
returns the embedded exception embedded in the exception
sets the error
returns the first link node
returns the last element of this list
sets the last node
adds a node to the list of nodes
removes the mapping for this key from this map if it is
removes the given link from the list
returns a set view of the keys contained in this map
gets the value of the property
gets the value of the property
gets the value of the property
sets the
sets the
sets the
gets the value of the qty property
sets the finish attribute of the object
gets the value of the property
gets the value of the property
sets the qty
gets the value of the property
gets the value of the can send email property
sets the size of the list
returns the cost of the current unit
returns the cost of the
returns the about
gets the value of the property
gets the value of the property
gets the value of the property
sets the
gets the referral user name
sets the
gets the value of the email property
sets the
returns the password
sets the
sets the
sets the
sets the
sets the
sets whether the user wants to send a email to the user
sets the about the
sets the
sets the
sets the
sets the referral user name
sets the email
sets the password to use for
sets the zip
gets the cart items
sets the cart items
gets the value of the cart item count property
returns the number of photo photo
returns the cost of the task
returns the file containing the file
sets the cart item count
gets the value of the property
returns the album
returns the file that was used to display the file
sets the number of photos in the photo
gets the value of the rec phone phone property
returns the
returns the
gets the value of the total purchase cost property
returns the
returns a list of
returns the
returns the
returns the
sets the album
returns the
sets the order id
returns the name of the
sets the
sets the
sets the value of record name
sets the value of record phone number
sets the
sets the total purchase cost cost
gets the value of the property
sets the
gets the value of the property
returns the
gets the value of the property
gets the value of the property
returns the page selected
sets the file containing the file
returns the last page in the list
sets the file that the should be used to
sets the
sets the
sets the
sets the page selected
sets the
sets the value of photos on last page
sets the
sets the
sets the value of the first five field
returns the number of columns in the table
returns the number of rows
sets the
sets the number of columns
sets the rows
sets the
sets the
sets the
sets the
updates the graph node of the given graph node
this method is called when the graph is connected to the
returns the additional information for the given method
returns the method for the given method name
search for the current date
returns the for the log
searches the user for the user
returns true if the password is confirm
checks if the user is valid for the user
validates the input data
this method is called when the user selects the user account
this method is called once for the
resets the page to the new page
sets the agent to the database
returns the size of the policies
validate the input
returns the of the
re initialize the bean
returns the current progress value
checks if the policy is
adds a policy to the list of policies
removes the policy from the policies
returns true if the input table contains the input
this method is called when the initialization is executed
fills the list type list with the selected items
fills the list with the selected items
navigate to the next page
navigate to the previous page
navigate to the page
goes to the last page of the current page
sets the agent to be used for the
deselects the agent
re initialize the bean
this method is used to launch the service
completes the current
re initialize the bean
helper method to check the policy for the policy
re initialize the bean
this method checks the policies of policies and policies
initialize the database
edit the document to edit
returns a new code code for the given configuration
sets the current package and the current status of the current page
clean up the database
initializes the database
clean the database
returns the for the specified code
returns the associated with the given key code
closes the given
this method is called when the user selects a person object
opens a new
returns the task id
adds a listener for changes to the connection listener
removes a listener from the list of listeners
connect to the server
returns the task that is used to execute the task
login to server
select a new
execute a command
close the connection
this method is called when the user selects a new
returns true if the color flavor is in the same as the
returns true if the component can import the given code code
add a new entry to the set of the
add a new to the node
checks if the given host is local
returns the next hop from the route
returns the of the given ip address
checks if the is
adds a new hop to the table
delete a routing entry
generates a bad checksum checksum
sets the interface to be used by this transporter
adds a interface to the
test the
this method is called when the length of the
turns the current turn
adds a listener to the season
adds a listener for a specific time
removes a listener for a specific time
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
create an instance of
fired when the user clicks on the user button
this method is called when the user changes the message type
adds a listener to the
adds a listener to the
returns the selected index
returns the selected image
adds a new item to the list
adds a button to the button
sets the selected index
add a new item to the resizable menu
returns the foreground color
sets the foreground color
sets the background color
returns the index of the selected image
returns the number of rows in the table
sets the number of rows to display
sets the background color of the button
returns the cols
adds a new item to the menu
sets the cols
returns the selected image button
sets dark background dark
save the record store
load the given store from the database
add a new transparent button to the menu
sets the selected index
sets the button selection highlight
sets dark shade dark zoom
removes all components from the container
adds a node to the tree
sets the title foreground
returns the next form
sets the next form
sets the title background color
returns the prefix for the level
returns the display of the display
sets the display
add a button to the list
adds a listener to the table
returns the parent form
add a new item to the group
sets the parent form
adds a button to the list
removes a listener from the table
add a new item to the list
returns the color for the specified theme code
returns the selected image
sets the text of the cell
returns the text of the selected text
sets the selected index
returns true if the row is selected
sets the row select
returns the index of the selected column
returns true if the font is a stretch
sets the selected column
returns the depth of the current page
sets the stretch icons
returns the selected row index
returns the style of the button
returns the depth of the nth child of the given node
sets the selected row
sets the button style
adds a child node to the list of children
removes a child node
removes all children
sets the leaf
returns the data for the specified column
sets the user object of the object
returns the child at the specified index
sets the expanded flag
returns the number of columns in the table
sets the selected value
clears the outer circle of the specified graphics context and clears the
gets the value of the image property
adds a listener to the tree
sets the image
removes a listener from the tree
sets the parent
returns the parent of this node
returns true if the icon should be stretch
sets the stretch icon
notify all listeners that a node has been closed
returns true if the is
sets the
notifies all listeners that a node is selected
returns the selected button
sets the selected index
returns the leaf image
sets the leaf image
returns the image open image
sets the image open image
returns the node that was closed
sets the image that the node has been closed
returns true if the specified value is contained in the table
returns true if the key is contained in the map
puts a short value into the hashtable
removes the key from this map
returns true if the specified value is contained in the table
returns true if the key is contained in the hashtable
puts the specified value in the hashtable with the specified key
removes the key from this map
returns a string representation of the object
returns true if the specified key is contained in the hashtable
rehashes the contents of the hashtable into a bigger table
puts the specified value to the specified key
removes the mapping for the specified key from this map if it
returns a string representation of the object
returns the instance for the given
returns the widget that this widget is being created
this method is called by the
returns the action to be used for the action
returns the div container
initializes the
returns the action
gets the
creates a new event controller
notifies listeners that the model has changed
adds a listener to the view
removes a listener from the list of listeners
updates the value of the given code code
updates the error
get the url parameter
updates the error
returns the controller that is used to edit the controller
returns the valid flag
p validate the contents of the form form element
displays the given token in the history
returns an object from the data type
returns the string representation of the specified type
returns the data type reader for the specified datatype
puts a data type reader and add it to the data reader
removes the data type from the data source
returns the data type
returns the offset of the current object
sets the offset
returns the size of the file
sets the byte order
returns the string representation of the specified type
this method is called by the parser
returns an object of type and type
returns the string representation of the specified type
returns the offset of the bit in the current state
sets the bit offset of the current bit
sets the byte offset of the byte array
adds a new number of bits to the current position
returns an object from the data type
this method initializes this
this method initializes pan content
this method initializes mnu bar
this method initializes mnu doc
this method initializes mnu doc exit
this method initializes tool bar
this method initializes cmd open
creates the root element
creates an include element
creates a block definition element
creates an item definition
creates an element
creates an element reference
creates an element for the given data item
creates a new block element
creates a table element
creates a new code loop code element
creates a select element
creates an optional literal
creates a new case with the given data
sets the properties of the given element
sets the entity properties
returns the value of the numbered property
sets the value of the numbered property
sets the
this method is used to process the data
gets the value of the size property
sets the size of the item
gets the value of the calculation property
sets the value of the calculation property
returns the
returns the item datum for the specified key
removes a datum item from the list
returns the data map
returns the data reference
sets the data reference
reads the value of the specified data from the data file
returns the data item def for the specified data
returns the size of the data format
returns the offset of the given format
this method is used to determine if the given data format is
sets the include
returns the iteration
sets the iteration
returns the data node associated with the specified key
removes a data node from the map
returns the data nodes
this method is used to process the data in the data format
returns the number of iteration
returns the base def
sets the base definition
returns the type of the reference
sets the type of the reference
sets the
returns the after block
sets the block after block
sets the processed flag
returns the offset of the current entry
returns the item
sets the item
adds a node to the list of nodes
removes a node from the list
process the data
get the value of the data type
reads a string from the given string
returns a string representation of the given
this method is used to get the resource contents
this method is called when the user selects the engine
cleanup the
initializes the given number of occurrences of the given field
checks if the given string is a decimal separator
returns the number of comma separated string
returns the number of dot in the given string
returns the number of in the given string
sets the resource bundle name
returns an iterator over all the descendants of the component
maps the given object to the given object
returns the values of the given expression
reloads the document
f0 default
f0
f0
f0
f0 instance
f0
f0 default
f0
f0
f0
f0
f0 list
f0
this method saves a midi file to a midi file
ensures that the file chooser dialog is closed
ensures that the file chooser dialog is a file
creates a midi phrase
invoked when a window is being made in a close window
returns the value of the current value
returns true if the given symbol is in the
checks if the given string is contained in the list
returns a string representation of this object
accept the visitor
accept the visitor
returns the value of the current value
strips a string from the string
returns the value of the current value
description of the method
description of the method
sets the symbol table
returns true if the node is satisfied
adds the prerequisite to this type
load the class loader
get the for the ejb deployed deployed ejb
returns a new
saves the contents of the xml file to the output stream
saves the given file to the file
returns the of the given modules
returns a string representation of this object
returns true if the is
returns the runtime runtime directory
stops the server
returns true if the module is a single root module
initialize the servlet
posts the http request to the code http code
adds a date to the end of the date
adds a date item to the cart
sets the response header
shuts down the server
returns the csv data
returns the connection
returns the server runtime name
returns the query interval in milliseconds
formats a date time
format the time seconds
returns the resource type for the given uri
returns the default name of the application
adds an attribute to the element
returns the object name
log the statistics
returns the value of the attribute specified by the name
adds an element to the record
returns the total number of records in the database
adds an element to the record
gets the value of the type name property
this method is used to handle the data sources of the current
returns the instance data record for the given name
this method is called when the destinations stats is collected
returns true if the domain service is
returns the statistic for the statistic object
p log the current stats
called when the user selects the expiration of the given
the
checks if the domain is greater than or equal to the domain
returns the work manager for the given session
creates a new cursor with the current time
checks if more data points to the given data
logs the current state of the application
close the cursor
checks if the given server is a module
log the core statistics
returns true if the module is
appends the given string to the end of the list
log the aggregate stats
returns true if this is a daemon
this method is called when the user wants to specify the critical
log an error at the error level
logs a warning message
print a message
checks if any policy exist for a given server
get the server name
returns the name of the domain object
prints a debug message with the given debug level
returns the domain configuration name
returns the value of the property
returns the value of the property
returns the configuration for the
returns the value of the property with the specified key
this method will be called when the edit name is changed
returns an object that is an object of the attribute
cancel editing the edit
stops the editing of the edit manager
sets an object attribute
adds the given parent to the target
returns the file for the given resource type
returns the text value of the attribute
sets the attribute value
returns the value of the attribute specified by the attr name
sets the attribute value
sets the attribute value
returns the resource monitor object for the specified resource type
returns the attribute value of the attribute
sets the attribute value
returns the named object
returns the path to the day server directory
invokes the method on the given object
closes the connection
returns the connection to the database
returns the connection
destroy the application
returns the value of the property
sets the end day of the day
setup the time for the sensor
compares two sensor objects
compares the of the
adds a member dev event to the list of
returns the total dev time
creates a new instance of dev counter
adds an dev event to the list
returns true if the latest snapshot is empty
compare two string objects
returns the current value of the stored data
creates a stub data object for the type of issue
creates a new issue
returns the resource
returns the owner of this object
returns the for the given granularity
returns the number of covered coverage for a given string
returns the coverage property for the given property
gets the value of the runtime property
returns the number of lines added to the
returns the number of lines deleted
returns the number of lines in the file
returns the property with the given name
returns the property with the given name and value
adds a new sensor data to the database
checks if the sensor data is valid
returns the value of the property with the given name
returns the number of lines added to the given owner
returns the deleted lines of the given owner
returns the number of lines in the given code string code
returns the of the given owner
adds a sensor to the configuration
returns true if the given status is a open status
creates a sensor data object for the given time
creates a sensor data object for the given time
adds a property to the properties
adds a user to the current workplace user
adds a user to the map
checks if the given data is valid
log the request
enqueue a request to be processed
constructs a authenticator with the specified base and
sets the status of the request
sets the status of the request
sets the test properties
returns true if the front side cache is enabled
returns the maximum life of the cache
returns the capacity of the cache
returns the front side cache
returns the host name of the host
returns the sensorbase hostname
returns the server server
puts a new project into the cache
clears the cache
clears the cache
returns true if the server is disabled
sets the timeout for the timeout property
logs the elapsed time in the database
logs the current elapsed time
this method is called by the garbage collector
creates a highlight region of the current map
this method is called by the garbage collector
returns the current presentation list of the current object
creates a map slice slice from a map
creates a map of color map objects
creates a map of color values
creates a new
returns the for the given statement
sorts the table in the database
clones the current frame
adds a choice to the choice
returns the value of the code code property
this method is used to get the value of a property
returns the choice list
returns the number of choices
sets the to the given value
sets the discrete value of the discrete fourier discrete fourier
removes all choices from the choices
removes the default values from the default values
sets the default values for this object
sets the has presentation nature
returns true if the is
returns true if the is currently
adds a highlight information to the list
sets the has presentation nature
returns the object for the given key
returns the set of
returns the decorator for a given key
returns the decorators
returns the display order
returns the formatter for the given datatype
returns the blue value
returns the horizontal alignment
returns the font color
returns the ssrow set column
returns the green value
returns the ssrow set minimum number of columns in the table
returns the red value for the
sets the alpha value for the alpha channel
returns the sort priority
sets the blue value for the blue component
sets the font
returns the value name
sets the font color
returns the vertical alignment
sets the color of the specified component
sets the font color
removes the given interaction object from the list of
returns the controller
clears the
returns the has boolean value
returns the value of has date time
returns the value of the has float property
returns the has integer value
returns the has string value
sets the value of has boolean
sets the value of the has date time value
sets the value of the has float value
sets the value of the has integer value
removes a decorator
sets the has presentation nature
sets the value of the has string value
sets the value name
sets the green value of the green component
removes all decorators from the list
sets the red value for the red component
returns the alternate alternate alternate row shading
returns true if the current page is always show
returns true if the submit button has own submit
sets the value of has own submit
sets whether or not the crawler needs to refresh the
sets the display order
sets the format pattern for the pattern
sets the has presentation nature
sets the horizontal alignment of the text
removes a column from the table
sets the ssrow set column
removes all data from the data
setter for property row span grouping
sets the value of the alternate row shading property
sets the sort priority
sets the data
returns the
returns the
sets the name of the
sets the vertical alignment of the text
adds properties to the set of properties
adds the properties to the given set
this method is called by garbage collection
adds the given code code to the end of the list
checks if the given parameter is a same as the same
sets the
adds a new code code to the end of the list
sets the x y coordinate of the x axis
sets the y coordinate of the y axis label
returns true if the is
returns true if the is
returns the
returns the at the specified index
returns the maximum number of in the region
returns the maximum number of in the region
returns the minimum value of the
returns the minimum value of the
sets the z label of the z axis label
sets the z coordinate of the z axis
clears the
removes a from the
sets the title of the
sets the x value of the x axis
returns the background color of the
clears the
returns the font decorator for this component
sets the y coordinate of the y axis
clears the y axis label
sets the flag
returns the replacement
sets the flag
sets the background color of the background
sets the has presentation nature
sets the background color
sets the background color of the
sets the opacity of the
sets the font used to render the text
sets the title of the axis
sets the replacement object
sets the title of the
adds a to the list of
sets the has presentation nature
returns the color of the
returns the maximum value of the range
returns the at the specified index
returns the minimum value of the range
sets the current value of the code code property
returns the
sets the minimum value for the component
sets the scramble y value
returns the number of
sets the minimum value for the
returns the color value
sets the color value
returns the maximum value of the range of the
returns the maximum value of the
returns the minimum value of the
returns the minimum value of the
removes a from the list of
sets the alpha value for the alpha channel
sets the blue value of the color
sets the color of the color
sets the color of the component
sets the color of the specified color
sets the list of
sets the green value of the green component
sets the has presentation nature
sets the value of red lon
this method is called by garbage collection
sets the identifier
render the object
sets the value of is displayed
returns the list of presentation objects
removes a presentation object from the list
sets the of the
the for a series
gets the value of the property
gets the value of the property
returns the link display text
returns the url of the
sets the has presentation nature
sets the
returns the series of the chart
render a presentation
sets the
sets the link display text
sets the target
sets the height of the image
returns the series of the given
sets the z order of the z order
returns a pie dataset for the given dataset
removes a named object from the list
remove the given from the current frame
removes the given from the current
removes the current from the current frame
sorts the table in the table
sets the context path
increments the current position of the current iteration
sets the properties
sets up the authenticator
sets the authenticator
returns true if the server is reached by the user
returns the messages
returns the list of help references
returns the resource label
gets the value of the property
sets the information for the given object
sets the resource label
sets the
returns the anchor questions
returns the value of the code applies to code property
gets the value of the hi threshold property
gets the value of the action property
returns the choices
gets the value of the lo threshold property
returns the has focus
gets the value of the property
returns the presentation object associated with the specified index
returns the list of presentation objects
sets the anchor choices
adds a new code code to the list of
sets the value of the to property
returns the object that is currently displayed in the list
sets the blue value for this
returns the errors
sets the green val value for this
adds a new po object to the list of errors
sets the threshold for the hi threshold
returns the missing property object at the specified index
sets the action
returns the value of the missing property
adds a new property object to the list of
sets the choices
sets the threshold for the low threshold
sets the value of the has focus property
sets the member
sets the type of the member
sets the name of the frame
sets the value of red val
gets the value of the property
sets the
sets the
returns the code list code of code assist script code objects
returns a list of header objects
adds a course to the map
returns a list of the questions
renders the tag
create a new connection
create a new connection
initializes the map
returns the id of the
sets the alt attribute
returns the is map
wraps a given object
sets the href attribute of the tag element object
sets the name of the attribute
returns the use map
sets the target attribute of the object
returns the id of the
sets the align attribute of the object
sets the border of the border
sets the height of the image
sets the attribute
sets the flag indicating whether or not the map is
sets the source of the event
sets the map tag attribute of the object
sets the value of the attribute
sets the attribute
sets the width of the table
adds a parameter to the
returns a hash map of all parameters
returns the value of the parameter with the given key
wraps a
returns the number of columns in the matrix
removes a parameter from the set
removes the parameters from the database
sets the archive attribute of the archive entry object
returns the on change
sets the code attribute code
returns the number of rows in the table
sets the codebase attribute of the object
sets the cols attribute
sets the height of the image
sets whether or not the extension is disabled
sets the attribute of the object
sets the width
sets the number of rows to be inserted
sets the text
sets the wrap attribute
writes the tag specific data to the tag
add a row to the table
returns the row at the specified index
sets the selected attribute of the object
removes a row from the table
removes the rows from the table
writes the tag specific data to the tag
returns the color
returns the border color dark shade
writes the tag specific attributes for this tag
returns the frame
gets the rules
writes the tag specific data to the tag
gets the value of the property
returns the name of the load
sets the background attribute of the object
sets the attribute of the object
sets the height of the current image
sets the background color of the
sets the attribute of the object
sets the attribute value
sets the width of the specified field
sets the border color
sets the color of the
sets the border color of the border dark color
returns the checked state of the button
sets the padding for the table
sets the spacing between columns and newlines
sets the number of columns
sets the frame attribute of the frame tag object
sets the checked state of the attribute
sets the attribute of the object
sets the maxlength attribute of the object
sets the rowspan
sets the size of the table
sets the rules attribute of the object
sets the vertical attribute of the tag object
sets the type of the attribute
sets the language attribute
sets the type of the attribute
adds a column to the table
returns the cell at the specified index
returns the cells
returns the number of cells in the cell
removes the specified cell from the table
removes cells from the table
sets the contents of the content
writes the tag specific data to the output stream
add an option
sets the color of the node
sets the face attribute of the object
sets the size of the attribute
returns the number of options
returns the value of the on before change property
returns the on after change
returns the nth option
removes the specified option from the list
removes the options from the list
compares the specified object with this principal
returns a string representation of this object
sets the multiple attribute of the doclet tags object
returns the principal associated with the given principal name
sets the new value of the
sets the on after change
adds the given principal to the list of principals
sets the size of the attribute
returns the authenticator
login to the server
sets the class loader to use for loading the class loader
sets the driver name
returns the database driver
sets the url of the database
gets the value of the url property
sets the username
returns the username
sets the password
returns the password
sets the lease time in milliseconds
frees a connection
sets the log file
returns the connection to the database
creates a new object
choose a file to choose a file
adds a filetype extension to the file extension filter
sets the extensions
returns the extensions
sets the description of the filter
returns the description of the filter
adds a filetype extension to the list
returns the help context for the given uri
returns the of the
adds a series to the collection
sets the name for a series
returns the value of the element
returns the number of elements in this collection
find a element with the given tag
removes the element at the specified position in this list
returns true if the element contains the element
removes all elements from this list
returns true if this element is empty
get the element with the given name
find a element by its name
returns the element at the specified index
sets the tag for the tag
sets the value attribute of the object
add a new element to the element
adds a new attribute to the element
sets the predicate
finds the first attribute in the attribute
serializes the given writer to the given writer
removes an answer from the list
removes the given value from the list of possible answers
this method is called when the user selects the model
this method is called to indicate that a class has been loaded
render a description of the given class
returns the range restrictions
sets the cardinality restriction
returns the cardinality restriction
sets the min cardinality restriction
returns the minimum cardinality of the restriction
sets the max cardinality restriction
returns the maximum cardinality of the restricted
sets the subject of the
returns the subject of the
adds a new answer to the current list of answers
clears the current answers
returns a well formed well formed string
uploads the data file to the file
sets the interaction content
returns the interaction content
sets the value of a parameter
returns the value of the parameter with the given key
returns the value of the specified parameter as a code java
checks if the parameter contains a parameter
returns true if the parameter value is a parameter value
adds a presentation object to the list of items
gets the value of the property
sets the parameter map
returns the parameter map
returns the property value for the given key
tests if the given file is a valid
executes the query
executes the query
query
processes the given controller
processes the given controller
remove a from the database
gets the value of the last time
returns the controller
makes a new menu
returns true if the external data cache is caching
returns true if the external data cache is
returns the value of the restriction for the given column
returns the type of the given column
adds a member to the set of the
returns the current parent value
returns the namespace of the
returns the class name prefix
returns the match case value for this case
returns the prefix of the prefix
returns the current name value
returns the current label
returns the current comment value
find a class by its class name
decodes an individual
removes a property from the list of ranges
removes a property entry from the list
adds a property range to the current list of
adds a property domain entry to the list of known resources
sets the value of a property to a datatype
returns the range of ranges in the current list
returns a list of the domains property domains
returns the presentation object associated with the given
gets the value of the in new property
edit the current selection
returns the value of the editable model alt uri property
clears the internal cache of the interaction
adds the given list to the concept list
returns a list of all concepts in the model
adds a new composite to the
returns the current presentation object
returns a list of all properties of the given
returns the properties of the given individual
processes a script
process a action
process an action
process an interaction answer
finds the interaction that is contained in the given
p returns the class that is used to instantiate the given class
returns a property ont object ont
returns the resource with the given name
returns an individual picked from the
returns the resource comment for the given resource
returns the resource label for the given resource
returns the label of the individual label
returns the resource label for the specified resource
returns the resource label for the given resource
sets the resource label and resource name for the resource
sets the resource label to the given resource
returns the level of the trace
returns the user who made the user
this method is used to convert a new value to a statement
returns the type of the given property
sets the datatype of the property
sets the datatype of the property
sets the datatype of the property to a value
sets the datatype of the property
add a statement with a statement
checks if the inference model is valid
creates an individual in the of a given individual
creates an individual individual individual
sets the instance creation time of the
creates a property
creates a new resource
display the class hierarchy
this method will be called by the class to indicate that the
returns the size of the model
this method is used to convert the given list of classes to
this method is used to set the list of classes
returns the namespace uri of the given prefix
this method is used to retrieve the individuals listed in the population
execute query and return a string
returns the query string for the given query string
returns the local name of the individual in the local arch
returns the maker maker used to create the model
checks if the language is valid
closes all resources
returns an iterator with the given name and returns it
this method is called when a user selects a
returns a list of all matching statements matching the given individual
returns the model for this model
closes the given connection
returns a literal value for a literal
this method is called to notify the model that the model has
this method is called to make the model of the given model
update the presentation parameter map
returns true if the given resource is in the namespace
p create a new
creates a sub model for a sub model
p p remove a restriction restriction p
checks if the given ontology is in the model
returns the for the given
creates a property for the given ont property
creates a new datatype property
creates a new datatype in the sub model
creates a new object property
creates a new property object in the model
gets the value of the property
creates a new property object with the given property and domain and
creates an object property with the given range and range
creates a new datatype property
returns the code
prints the branch condition
exports the contents of the tree
returns the new id for the node type
returns the shape of the shape
returns the
creates a new group id
draw a node and its children
writes an edge
writes a label to the end of the list
writes an edge
writes an edge
writes the end of the line end
adds a point to the end of the element
write a string to a node
creates a diagram header element
load the schema in the tree
writes an attribute
creates the root node of the tree
writes a shape to the file
write a label
creates a new test node
returns the nested elements description
write a group
returns the schema node for the given type
write a group
returns the value of the specified integer value
sets the height of the image
write a aux node to the current node
this method is called once when the game is created
writes a string to the output
writes the current line to the output
writes the string to the output stream
writes the current indent to the current output
writes the current state of the
writes the header of the graph
writes the end of the graph
writes the header of the
writes the transition to the given name
returns the expression of the expression
increases the level of the stack
decreases the level of the stack
sets the next node
sets the parent node
adds a child to this node
show the frame
test a shape with a given class
ensures that the file extension is selected
returns the code
sets the code
sets the shape
returns the bottom size of the bottom of the bottom of the
sets the bottom size of the bottom of the bottom of the
gets the value of the closing shape property
returns the root of the tree
returns true if the condition has any conditions
adds a condition to the current set of conditions
go to the next node in the tree
removes the listener from the document listeners
evaluates the selected state
highlights the selected results
initializes the results
returns the pattern that is currently selected
returns a list of the current lines
returns the next character in the
show the status bar
returns the number of messages in the message
returns the inbox folder
returns the number of deleted messages
returns the user key
returns the user key
populates the preferences dialog with the properties
populates the preferences
initializes the servlet
returns the value of mime tiles base
sets the value of mime tiles base
format the given object and return the result
parse a string object
returns the parameters
sets the parameters
sets the message
sets the message
returns the parameters for the request
sets the parameters
sets the value of resources
returns the file
returns the db
returns the file
returns the ldap server instance
sets the username
generate a file name for the given type
checks if the given email address is contained in the list
sets the display name
adds a new address to the list
gets the value of the perm id property
remove a address from the cache
sets the perm id
returns the display name of the user specified in the group
returns the signature of the signature
returns true if the given file name contains a file name
sets the signature of the
returns the display name of the user defined in the specified
get the session session
returns the file named by the given file name
returns the mail store
compares the two addresses
get the id of the user
returns the object that is associated with the given name
returns the id of the user specified by the user id
adds an attachment to the file
this method is called when the session is bound to the
sets the user info
returns the is forward
this method is called when the session is pushed
sets the is forward
resets all properties to their default values
returns a hashtable of the environment
returns the mime body part of this mime part list
validate the properties
sets the message number of the message
sets the uid
sets the message number
returns the full path to the folder
sets the full path to the specified full name
returns the sum of the number of elements in this list
sets the action
validate the properties
gets the message number
sets the full name of the folder
this method is called by the garbage collector when the
resets all properties to their default values
validate the properties
validate the properties
validate the data from the attachment
resets all properties to their default values
sets the email of the email
sets the name of the
returns the part of the part
gets the new folder
validate the properties
resets all properties to their default values
sets the new folder
sets the part of the part
returns the to folder
validate the properties
resets all properties to their default values
sets the to folder
resets all properties to their default values
validate the properties
sets the username
sets the password
returns the domain of the domain
returns a user object from the database
returns the authenticator that is used for the given user
sets the to to the given string
sets the action
initializes the servlet
sets the body
compares two objects
returns the username
returns the carbon copy of the message
sets the host
returns the email address of the user
sets the carbon copy recipients of the message
gets the bcc
executes the action
returns the host name of the host
sets the bcc
sets the host url
returns the host
returns the attachment
returns the port of the server
sets the property wrapper
sets the host url
sets the attachment
returns the smtp host
returns the server port
returns true if the message is a copy of the message
sets the smtp server host name
fetch body part from cid
compares two objects
sets the copy to sent
sets the property wrapper
returns the smtp server port
sets the smtp server host name
returns the key for the key
sets the key for the key
returns the timeout value
sets the timeout property
returns the map of keys to be used to map the map
move the move to the given location
returns the text in the text
copy the given action to the current folder
multipart attachment is multipart
returns true if the part is part of the part
executes the action
cancels a delete action
action for the action
move the move to the given location
returns the message that is used to send messages to the
returns the authentication password
returns the full name of the user
copy the given action to the current folder
sets the message that is used to send mail messages
returns the number of messages in the message
returns the name of the mailbox
returns the subject of the message
returns a list of the addresses contained in this message
upload a file to the application
returns the size of the mail message
returns true if the file name is a file name
compares the two arguments
compares the two arguments
returns a free face face
finds the half edge of a given edge
returns the norm of the vector
clears the of the
returns a vector containing normalized norm
returns a vector containing the multiplication of the vector
returns a vector of product objects of the given vector
returns the vector of vector v
returns the dot product of this vector and the given vector
compares this player to another player
removes all alerts that are not consumed by the
this method is called when the user enters the current object
cancels the search request
returns the number of elements in this collection
returns the element with the specified id
execute the search command
sets the trip time
sets the include schedule
sets the status of the include status
sets the radius of the circle
sets the of the specified time
sets the of the specified component
sets the query string
sets the date
sets the server
sets the include
sets the api key
sets the
returns the type of the type
returns the name of the
adds a new mail to the list of mails
validate the properties
validate the properties
notifies this model that the given viewers input has been changed
removes the specified listener from the list of listeners
adds the given code tree model code to the tree
notifies this model that the given viewers input has been changed
removes a listener from the list of listeners
adds the given code tree code to the tree model
enables disables the button
creates the toolbar
notifies this viewer that the given viewers input has been changed
removes a listener from the list of folders
adds the given code tree code to the list of listeners
returns true if the is
notifies this model that the given viewers input has been changed
removes a listener from the tree
adds the given code tree code to the tree model
updates the view
returns the current folder
disconnect from the server
this method is called by the thread to run the thread
performs a step in the current step
closes the progress monitor
shuts down the server
connect to the server
connect to the server
returns an input stream to be used in the input stream
returns the output stream for the connection
disconnect from the server
send a string to the server
accepts the socket connection timeout
sends a command to the server
disconnect from the server
deletes the associated file
this method is called when the server wants to shut down the
reloads the current state of the file
removes a from the collection
update the base size of the base
returns the path to the file system
resets the local state of the archive
creates the archive
synchronize the state of the
returns the xml representation of this element
check if the protocol is valid
this method initializes sync progress shell
logs out the current client
this method initializes this
this method initializes tp main tabs
this method initializes p
this method initializes this
returns the number of
returns the
shuts down the application
adds a new line to the end of the list
adds a string to the end of the list
returns the active texture
draw the debug information
sets the texture to use for the texture
adds a texture to the texture
render the debug information
sets the debug information enabled
returns true if the debug info is enabled
returns the index of the current frame
returns the id of the texture
returns the bounding box of the bounding box
moves the animation to the next animation
returns the bounding box of the bounding box
returns the frames
returns the ver frames
returns the index of the current entry in the list
sets the animation to the specified animation
sets the value of the mirrored property
returns the value of the mirrored property
animates the current animation
animates the current animation from the current animation
returns the length of the vector
returns a vector of vector of vectors
selects the previous item in the list
returns a vector of division division
selects the next item in the list
returns the cross product of the product
returns the project vector with the specified vector
returns the sum of the vector of vectors
returns a vector of subtraction of this vector
this method is invoked when the mouse is pressed
normalizes the vector
returns the selected menu item
returns a vector with the y coordinate of the current
returns a vector with the y coordinate of the current
returns the current menu item
returns a vector containing the vector of y values
returns a vector containing the x and y values
sets the current menu item
returns true if the vector contains any of the keys
shows the confirm dialog
checks whether the given vector is the same as the same direction
returns the confirm dialog
returns true if the direction is opposite
sets the sprite
adds a new menu to the menu
returns the menu with the given id
rotates the 3x3 vector of 3x3 t1 around the 3x3 direction
this method is called by the
rotate the vector around the given vector
sets the aim of the specified weapon
returns the sprite associated with this sprite
sets the timer
returns the rotation of the ellipse
returns the timer
returns the current level
sets the vector of vector of ground contacts
sets the level of the player
returns the alternate flag
returns the vector of vector of vector vector
move the action
sets the health of the player
returns a polygon that is in the collision graph
adds a new game object to the game
returns the collision data object
mouse button was pressed
mouse moved function
sets the
sets the collision data collision
returns true if the is
sets the weapon
this method is called when the player plays a player
returns the current weapon in the current position
sets the weapon offset
returns the surface
sets the damage
sets the health points value for this
returns the health points
returns the damage
returns the mass of the
adds a terrain to the section
sets the distance distance
returns the distance between the
adds a new game object to the game
sets the x coordinate of the position
sets the
this method will handle the
sets the attack timer
adds a new game object to the game
sets the y coordinate of the y coordinate
sets the background texture id
sets the position of the
returns the attack timer
returns the background texture id
translate the vector
sets the owner of this object
sets the velocity of the velocity
returns the owner of this object
sets the force
sets the player
returns the
returns true if the has a
applies the force to the current vector
sets the has
sets the
sets the offset
this method is invoked to be called by the game
returns the offset of the current
returns the current time in the current directory
update forces to update the forces
sets the start position
sets the speed
returns the speed of the crane
this method is called when the game has been made
sets the time in the current directory
returns the start position of the current position
returns the number of the current
adds a level to the level
sets the number of the
returns the level of the specified level
sets the sprite
returns the number of levels in the current level
adds an image to the image
move the left down
returns the data
sets the size of the vector
move the down right
returns the level of the current level
returns the current state of the
this method is called when the user selects the current logic
draw the current state of the game
sets the resistance resistance value for this
returns the air resistance of the cone
returns the game round
sets the
returns true if the is
sets the shoot
sets the scale
adds a new child object to the list of children
checks whether the given direction is the same as the same direction
returns true if the direction is opposite direction
returns the maximum velocity of the request
send a message to all clients
returns the number of client objects in the list
deletes a client from the server
stops the forwarder
get domains list
this method is responsible to select the data from the datastore
returns the domain list
returns the navigation point for the given string
returns the control for the given type
opens the resource
resets the
sets the data input format
sets the component
sets the bounds of this object
draw the sprite
closes the current session
this method is called when the data source is updated
checks whether the given format matches the given format
closes the current session
parse the arguments
load the movie
this method is called by the thread to run the thread
returns true if the given source stream is supported by this socket
closes the source
start the server
stops the source
returns the name of the
returns true if the given sortable is sortable
returns the command
execute the command
gets the value of the tracks list property
returns the track model
returns the current time
returns the track for the given track
returns the value of the start time
sets the tracks list
adds a track to the list
prefetch the player
closes the track
returns the number of tracks
this method is called to detect the prefetch player
returns the track for a player
sets the viewing panel
this method is called when the user has changed
gets the value of the panel property
start the event
sets the player
restarts the event
returns the rectangle that is currently clipped by this
this method is called by the to rewind the track
returns the rectangle of the thumb rectangle
calculates the bounds of the thumb
stops the track
sets the media locator
returns the media locator
returns the url of the url that is used to connect to
displays the track in the
sets the time in seconds
returns the playing time
notify listeners that a player has been updated
returns the track at the specified index
returns the latency of the current thread
adds a new multi player listener to the list of listeners
assigns a new track to the given player
returns the
returns the preferred size of the window
sets the paint ticks
sets the track slider
invoked when an action occurs
returns the track slider
removes a multi player listener from the list
sets the track index
track the slider to track the track slider
this method is called by the
track of
clears the track
track the track model
sets the media locator
this method is called when the player rotates the player facing
this method is called when a player is loaded
sets the label increment
sets the playing time of the specified time
creates a border for the given
sets the frames frames
creates a layout manager for the specified number of components
sets the start time of the specified time
resets the media to its default state
calculates the preferred size of the icon
sets the player at the specified index
sets the time of the movie
returns the track number of the track
sets the time in seconds
returns the time in seconds
returns the number of available resolutions
sets the rate of the frame
sets the message to be used for this message
returns the number of tracks
calculate the frame
appends a message to the list of messages
returns the number of tracks tracks
creates a new controls
sets the background color of the component
returns true if the media is the end of media
returns the fast control control
notify the cell that the table cell has been updated
creates and returns a new listener
returns the preferred size of the component
sets the shadow x coordinate
sets the size of the image
creates a new listener
creates a new gain control
returns the shadow x coordinate
creates a new progress control
sets the layout control panel
creates a new code controls code instance
removes the control components
returns the control for the specified name
sets the y coordinate of the shadow
creates a new code control code object
sets the controls for the player
adds a control to the control table
returns the y coordinate of the shadow
returns the control for the specified control
sets the shadow color
returns true if the cell at row and column is editable
invoked when the controller has been changed
returns the controls for the current state
returns the preferred size of the component
returns the start button
adds a new player to the screen
sets the shadow enabled state
displays the current state of the panel
removes a player from the screen
pauses the current game
returns the preferred size of the component
returns the pause button
creates a new control for the control
gets the shadow enabled
sets the mute flag
creates a new control for the control
updates the view
returns the fast button for the current button
creates a new standard progress control
returns the progress bar
returns the button that is used to gain the
returns the button that is used to draw the
returns the currently set stop button
returns true if the focus is painted on the focus
returns the preferred size of the icon
paints the thumb
calculates the thumb rectangle
creates the gain object that can be used to gain the
creates the button that will be used to paint the gain
sets the font
returns the button that controls the control
sets the background color of the component
returns the gain panel for the control
sets the level of the view
sets the foreground color
returns the current level for a given level
update the view icon
returns the preferred size of the icon
returns the button that is currently being used to create a radio
sets the image to be used for the image
sets the start button
invalidates the image
returns the control that is used to control the control
returns the control for the control
returns the current control
sets the time
sets the stop button
returns the start button
notify listeners that the track has been updated
returns the button that is currently currently currently being used
sets the stop button for the given button
sets the state of the
adds a listener to the controller
stops the thread
removes the listener from the controller
returns the button that is currently being played
creates the
sets the button for the control
realize the realize realize
destroy the player
deallocate the session
stops the playback
prefetch the prefetch prefetch prefetch
starts the player
returns the button that is currently currently in the reverse
sets the button for the given control
starts the timer
returns true if the given start time is still running
stops the timer
returns the track data for the specified data
adds a new track data object to the list of data
invoked when an action occurs
returns the preferred size of the dialog
notify listeners that the thread has been suspended
sets the control to be used for the button
returns the media panel
removes the loading label
adds a listener to the list of listeners
returns the divisor
adds a component to the
sets the control for the given control
returns the panel panel
adds a visual component to the list of visual components
adds a component to the control panel
redraw the frame
adds a component to the control panel
sets the pause button
sets the pause button for the specified control
sets the progress bar
sets the progress bar to the specified value
reads a single byte from the stream
this method is called by the thread to run the thread
this method is called when the event is dispatched
reads the next byte of data from the input stream
reads the specified byte array from the specified byte array
dispatches the event to the controller
returns the source stream
sets the control to be used for the gain control
this method is called by the thread to run the event
returns the stream source stream
sets the gain for the specified control
sets the gain for the gain control
starts the execution of the thread
this method is called by the thread to stop the thread
returns the time that the media was started
returns the time base start time
returns the event controller event
returns the vector of controllers
sets the gain control
returns the gain control
returns the component that is currently shown in the panel
this method is called when realize is enabled
start the server sync start until the start time is reached
returns the component that is used to edit the component
returns true if the player has a player
this method is used to stop the tape
sets the visual component
closes the tape
set the rate of the rate
invoked when an action occurs
start the server sync start until the start time is reached
returns the time at which this player starts at the end of
sets the downloading
creates a new control component
returns the duration of the player
adds a progress to the progress bar
posts an event to the controller
this method is used to stop the server
sets the current status of the done
returns the component that is currently being displayed
this method is called when the player closes the server
returns true if the user is downloading the downloading
returns the rate of the
creates a new control component
sets the controller to be used for the draggable
creates a new control component
creates a new component
sets the controller hook to be used for draggable control
creates a listener for the action
creates a new control component
create a listener for the event controller
create a listener for the action
creates a new control component
creates a new control component
returns the progress content
sets the level of the component
adds a listener to the control
creates a new control component
returns the control component
sets the mute flag
removes a listener from the control
sets the time to the specified time
sets the listener to be notified of the specified value
returns the current component
sets the controller for this controller
creates a listener for the event
adds a listener to receive events from this control
sets the control listener
sets up the gui component for the component
removes a listener from the control
sets the current component to the specified value
sets the controller hook hook for the controller
creates a new component
sets the listener
change the gain value
returns the component that is currently being played
creates a new gain object that can be used to gain the
convert the given time to a long value
initializes the listener
creates a new gain for the gain control
sets the control listener
creates a new control component
sets the button
sets the listener that will receive events from the listener
creates a new component
sets the controller hook to be used for draggable objects
invoked when an action occurs
sets the operational operational
sets the component to be used for the control panel
sets the component
sets the controller to be used for the controller
creates a new component
sets the controller to be called by the controller
invoked when the controller is changed
this method is called when the timer expires
returns the duration of the player
adds a listener for the control button
this method is called when the controller changes
removes the listener from the control panel
creates a new control component
returns the time in nanoseconds
creates a listener for the event
removes a listener from the control
returns the time of the
adds a listener to the control
sets the operational operational flag
sets the value of the progress bar
this method is called when the user changes the gain
sets the control listener
returns true if the operational operational operational is operational operational
notify the controller that the controller has been updated
this method is called when the timer expires
sets the component and listener for the specified panel
returns the component that is currently being displayed in the current state
sets the component to be used for the component
returns the time in milliseconds since the last time the request was
stop the controller
initialize the url
this method initializes the game
initialize the video window
stops the controller
returns the source of the event
initialize the player
adds a control to the control
this method initializes the player
this method is called when the player changes
removes the specified control
returns the control for the specified name
sets the controller error
sets up the borders of the current border
adds a controller listener to the controller
resets the controller error to the current controller
prints the error
this method is called when the controller changes
sets up the borders of the current border
returns the track for the given track
removes a controller listener from the list of listeners
writes a string to the event
returns the error controller
checks if the given state is reached
sets the target state of the target
checks if the controller is running
posts the controller to the controller
this method is called when the player state changes
posts an event to the controller
posts the event to the process
called by the server to start the synchronous
called when realize realize is finished
called when the prefetch complete
posts the event to the media
posts the event to the target
posts the event to the end of the animation
posts the event to the target
posts the event to the
posts the end of the media event
posts the event to the
posts the event to the target
this method is called when the controller is closed
returns the thread queue
called when realize is done
called by the prefetch to prefetch the
returns the start latency latency
blocks until the start of a time is started
initialize the file object
returns a string representation of the object
creates a new atom factory
