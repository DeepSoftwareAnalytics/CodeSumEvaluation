/ * ( non - javadoc )
returns a flowable that emits the termination of the specified sources . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a flowable that emits the termination of the source publisher termination . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt >
concatenates an iterable of sources into a single sequence . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
concatenate a single { @link singlesource } into a single { @link flowable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . concat . pn . png alt = > <dl > <dt > <b >
returns an observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . concat . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the termination of the specified sources . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
concatenates the singlesources eagerly . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd >
concatenates the iterable sequence of publishers into a single sequence by subscribing to each sequence of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
concatenates the iterable sequence of publishers into a single sequence by subscribing to each sequence of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
concatenates an iterable of sources into an observable of one or more delays . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the results of applying the specified function to each item emitted by the source publisher via a { @code mapper } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png
returns a flowable that emits the items emitted by the source iterable with a single sequence of items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure
concatenates the iterable sequence of singlesources eagerly into a single sequence of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns an observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns an { @link <unk> } that subscribes to the given { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the items emitted by the source of items . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / from . png alt = > <dl > <dt > <b > backpressure : < / b >
returns an observable that subscribes to the given observable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
converts a { @link publisher } into a single { @link single } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b >
returns a cold synchronous and stateful generator of values . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / generate . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
returns a cold synchronous and stateful generator of values . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / generate . png alt = >
returns a flowable that emits the time emitted by the source publisher with the specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . timer . png alt = > <dl > <dt > <b >
returns a flowable that mirrors the source publisher with the given timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . timeout . png alt = > <dl > <dt > <b > scheduler : < / b
returns an observable that emits the time emitted by the source publisher with the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . timer . png alt = > <dl > <dt > <b > scheduler
returns a flowable that mirrors the source publisher with the given timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . timeout . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the interval after the specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . timer . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a single that emits the specified item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits the source of items emitted by the source iterable into a new one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source iterable into a new one . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns an observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . png alt = > <dl > <dt > <b > scheduler : < / b > <
concatenates an iterable of sources into a single sequence of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
returns an observable that emits the items emitted by the source observable via a separator . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns an observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
<p > returns a new { @link observable } that contains a range of { @code count } elements . < / p > <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . <unk> . png alt = > <dl > <dt
returns a flowable that emits the range [ start - 1 ] . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a single observable that emits the items emitted by the source observable via the same sequence . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a single that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a single observable that emits the items emitted by the source observable via the same sequence . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler :
concatenate a single { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
concatenate a single { @link maybe } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd >
wraps a { @link singlesource } into a { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that calls { @code <unk> } with a { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b >
returns a flowable that calls the supplied { @code <unk> } with a { @code <unk> } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt
wraps an { @link <unk> } into a { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
combines the { @link singlesource } into a single { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b >
combines the { @link singlesource } into a single { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b >
a wrapper around { @link <unk> ( iterable ) } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a single that emits the items emitted by the source publisher as soon as possible . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a single that emits the first and first one of the other singlesource . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > scheduler : < / b
returns a single that emits a single or all of the items emitted by the source publisher that satisfy a specified predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
returns an { @link <unk> } that subscribes to the first item emitted by the scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
perform a foreach operation over the elements of this stream . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
returns a flowable that emits the items emitted by the source publisher with a given buffer size . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a { @link <unk> } that subscribes to the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with the specified value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
/ * ( non - javadoc )
returns a single that emits a single item that emits only a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt
returns a { @link future } that subscribes to this { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : <
calls the {
subscribes to this publisher and subscribes it to a consumer . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / subscribe . subscribe . png alt = > <dl > <dt > <b > backpressure : < / b > <
subscribes to this publisher and subscribes it to the specified consumer . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / subscribe . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
subscribes to the given observer . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd >
returns an observable that subscribes to the given initial capacity . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns an observable that emits the items emitted by the source observable and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the results of replacing each item emitted by the source publisher with the results of replacing each item emitted by the source publisher into a single sequence . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators
returns a flowable that emits the items emitted by the source observable via a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with the specified timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the windows of the specified timespan with the specified timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the items emitted by the source publisher with the given timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits windows events according to the specified timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits windows events according to the specified timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns an observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a single instance of { @code <unk> } using the specified { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits the items emitted by the source observable window with the given boundary . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher with the specified boundary . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns an { @link observable } that calls { @link <unk> ( java . lang . throwable ) } with an { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / defer . png alt = >
returns an observable that subscribes to the given initial capacity . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a { @link flowable } that collects items emitted by the source publisher into a single { @link iterable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / collect . png alt = > <dl > <dt >
collects the results into a single { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / collect . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a { @link maybe } that emits the results of applying the specified { @code bifunction } to the resulting observablesource . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = >
returns a flowable that emits the results of applying the given function to each item . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a flowable that emits the items emitted by the source publisher with the results of applying the specified function to the items . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl >
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt
returns a flowable that emits the results of applying a function to each item emitted by the source publisher via a specified function . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / mapper . <unk> . <unk> . png alt
returns a flowable that emits the results of applying a function to each item emitted by the source publisher via a specified function . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / mapper . <unk> . <unk> . png alt
maps a { @link completable } to a { @link completablefuture } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
maps the upstream items into a single map . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
maps a { @link completable } to a { @link completablefuture } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
maps the upstream items into a { @code <unk> > } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > backpressure :
flattens the inner maybe into a single observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
maps a { @link maybe } to a { @link <unk> } and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > backpressure
maps the upstream items into a {
maps a { @link maybe } into a single { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > backpressure :
maps the upstream items into a { @code <unk> > } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a single that emits the results of applying the provided mapping function to each item emitted by the source maybe as a single value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt
returns a flowable that emits the results of applying the provided mapping function to each element . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > backpressure
maps the upstream items into { @code <unk> } into a single { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure
maps the upstream items into { @code <unk> } and returns a single { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a single that emits the result of this one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns a single that emits the result of this one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits the items emitted by the source from another one by one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source from another one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure :
instructs a single to pass control to a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
delays the emission of this observablesource until a new one is subscribed to . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a single that emits the result of the function with the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . timeout . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the items emitted by the source publisher with the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher if it is empty . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / default . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher with a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher with a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher with a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher with a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl > <dt > <b > backpressure
delays the emission of this observablesource with the given other subscription . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a single { @link single } with the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns an observable that emits the notification emitted by this notification . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a { @link observable } that applies the given { @link function } to this { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the item emitted by the source publisher with the specified item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a distinct { @link single } containing the results of applying the specified { @code keyselector } function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / distinct . png alt = > <dl > <dt > <b >
returns a flowable that emits the results of applying the specified function to each item . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / distinct . png alt = > <dl > <dt > <b > backpressure : < /
returns a distinct { @link single } that emits the items emitted by the source iterable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / distinct . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the results of applying the specified function to each item . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / distinct . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the items emitted by the source publisher with the given value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
calls the {
calls the {
returns a { @link maybe } that signals to the given { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . finally . png alt = > <dl > <dt > <b > scheduler :
calls the { @link <unk> ( java . lang . object ) } instead of an { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
calls the { @code oncomplete } function on each item emitted by the current { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
subscribes to the source publisher and calls the supplied { @code onerror } function on each emitted item . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
calls a callback on success and a success of the emitted item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
subscribes to the specified { @link observer } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
calls the {
calls the { @link <unk> ( consumer ) } on a { @link subscription } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
calls the {
calls the {
calls the { @code oncomplete } function on each item emitted by the { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items at the specified index . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the items at the specified index . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the items at the specified index . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a maybe that emits the results of applying the specified predicate to each item emitted by the maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / filter . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher with the specified default item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / default . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl >
returns a flowable that emits the results of applying the specified function to each item emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a { @link maybe } that emits the results of applying the given function to each item emitted by the source and emits the resulting maybesource if the maybe emits a success . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images /
returns a flowable that emits the results of applying the provided function to each item emitted by the source publisher into a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl
returns a completable that subscribes to this completable instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a flowable that emits the results of applying the provided function to each item emitted by the source publisher into a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl
maps a { @link maybe } to a { @link <unk> } that emits the items emitted by the source maybe as a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> .
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the source maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl >
returns a single that emits the results of applying the provided mapping function to each item emitted by the source maybe as a single value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt
subscribes to this publisher and subscribes it to a given consumer . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / subscribe . subscribe . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a single { @link single } that emits the results of applying the specified { @code keyselector } function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / groups . png alt = > <dl > <dt > <b
returns a single observable that emits the results of applying the specified function to each item emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a single that emits a { @link observable } that emits the items emitted by the source publisher into a single { @link single } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / tomap
returns a { @link observable } that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / hides . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @link completable } that completes when this completable completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a single that emits the items emitted by the first item emitted by the finite source publisher into a single list . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl
returns a flowable that emits the results of applying the specified function to each item . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / groups . png alt = > <dl > <dt > <b > backpressure : < /
returns a { @link maybe } that emits the item emitted by the { @code onerror } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
returns a single that emits the items emitted by the source publisher if the source publisher emits an item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt
returns a single that emits the last item emitted by the source publisher if the source publisher emits an item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher as soon as possible . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / map . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / materialize . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a single that emits the first one that emits the first one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the items emitted by the source of this one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the items emitted by the source from another one by one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source from another one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher asynchronously via a { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . of . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher asynchronously via a { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . of . png alt = > <dl > <dt >
instructs a single to pass control to a single inner value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the items emitted by the source observable via an { @code onerror } function . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <p > if
instructs an { @link java . lang . throwable } to an { @link java . lang . throwable } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
instructs an { @link java . lang . throwable } to an { @link java . lang . throwable } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt
returns an observable that emits all items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a { @link observable } that emits the items emitted by the source { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source maybe as soon as possible . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / filter . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the results of applying the provided accumulation function to each item emitted by the source maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / reduces . png alt = > <dl > <dt >
returns a maybe that emits the results of applying the provided mapping function to each item emitted by the maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher with the specified value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl > <dt > <b > scheduler : <
returns a { @link flowable } that retries up to a given number of times . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > backpressure :
returns a { @link flowable } that repeats the source emitted by the source publisher until the source completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / repeat . <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher with the given handler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the results of { @link <unk> ( function ) } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that mirrors the source publisher with the given timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / replays . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits the results of { @link <unk> ( function ) } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher with the given buffer size . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . <unk> . png alt = > <dl > <dt > <b >
returns a maybe that mirrors the source observable via the given { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . timeout . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the items emitted by the source publisher up to the specified time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / skip . <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source observable via a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . of . png alt = > <dl > <dt >
returns a { @link maybe } that subscribes to the given { @link scheduler } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . observeon . png alt = > <dl > <dt >
returns a maybe that retries until the specified { @code stop } and { @code false } is returned . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . <unk> . png alt = > <dl > <dt >
returns a flowable that applies the specified { @code predicate } to { @code true } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > backpressure
retries the provided { @link <unk> } until { @link <unk> ( java . lang . object ) } will be called for a given { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry .
retries the operator and retries on the specified time times . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > backpressure : < / b > <
retries the provided { @link <unk> } until a predicate returns true . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the items emitted by the source publisher by the given { @code handler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl > <dt > <b >
returns a flowable that mirrors the source publisher with the given timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . timeout . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the items emitted by the source publisher with a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl > <dt >
delays the emission of this observablesource with the given other subscription . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits all items emitted by the source publisher as soon as possible . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / accumulation
returns a flowable that emits the items emitted by the source publisher with a given initial value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / iterative . png alt = >
returns a flowable that emits the items emitted by the source publisher as soon as possible . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / accumulation . png alt = > <dl > <dt > <b > backpressure :
returns an observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a { @link maybe } that emits the item emitted by the { @code onerror } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
returns a single that emits a single item that emits only a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt
returns a single that emits the single item emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b >
returns an observable that emits the items emitted by the source observable and emits the next item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . ts . png alt = > <dl > <dt > <b >
returns a single that emits the result of the specified time window . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . timeout . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the items emitted by the source publisher with the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / skip . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items at the specified index . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the items emitted by the source publisher with the specified time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . skip . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the items emitted by the source publisher up to the specified amount of time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . skip . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source observable until the next item emits an item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt >
returns an observable that emits the items emitted by the source observable until the predicate returns true . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a single that emits the items emitted by the finite source publisher into a sorted list . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a single that emits the items emitted by the finite source publisher into a sorted list . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with the specified publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / startwith . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher and emits the result . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / startwith . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher with the specified value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / start . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source of an array . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / from . png alt = > <dl > <dt > <b > backpressure : < / b
subscribes to this maybe and subscribes to it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
subscribes to this maybe and subscribes to it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
subscribes to this publisher and subscribes it to a given consumer . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / subscribe . subscribe . png alt = > <dl > <dt > <b > backpressure : < / b >
subscribes the given { @link scheduler } to this { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . subscribeon . png alt = > <dl > <dt > <b > scheduler : < /
returns a single that emits the result of this one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits the items emitted by the source publisher with the results of applying the specified function to the items . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl >
maps a { @link completable } to a { @link completable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
maps a { @link completable } to a { @link completable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
maps a { @link maybe } to a { @link flowable } applying { @code mapper } to it and emits the result . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl >
maps a { @link maybe } to a { @link flowable } applying the { @code mapper } to it and emits the result . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl
returns a flowable that emits the items emitted by the source observable according to the specified function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source observable according to the specified function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the source maybe as a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a flowable that emits the items emitted by the source publisher times up to the specified predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b
returns a { @link <unk> } that subscribes to the specified time unit . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / take . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the items emitted by the source publisher with the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / take . s . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the items at the specified index with the specified default item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher up to the specified amount of time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / skip . <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher until the other publisher emits an item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt >
returns an observable that emits the items emitted by the source observable until the predicate returns true . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns an { @link maybe } that completes when the given { @link singlesource } completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . timeout . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the items emitted by the source publisher with the given { @code count } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns an { @link single } that emits the result of the { @code fallback } function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . timeout . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with the given timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns an { @link maybe } that completes when the given timeout completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . timeout . png alt = > <dl > <dt > <b > scheduler : < /
returns an { @link observable } that completes when the specified timeout expires . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b > scheduler : < /
returns a maybe that emits the time emitted by the source maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the items emitted by the specified scheduler with the specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the items emitted by the source publisher with the specified value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . timeout . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher with the specified value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . timeout . png alt = > <dl > <dt > <b > backpressure
returns a flowable that mirrors the source publisher with the given timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . timeout . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that mirrors the source publisher with the given timeout . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . timeout . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that mirrors the source publisher with the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . timeout . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that mirrors the source publisher with the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . timeout . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the items emitted by the source publisher with a single unit of time . <p > <img width = 640 height = scheduler src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timestamp .
returns a flowable that emits the items emitted by the source publisher with a single unit of time . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timestamp . <p >
returns a { @link single } that emits the result of this { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler
returns a { @link single } that emits the result of this { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a single that emits a { @link map } consisting of the results of applying the specified { @code keyselector } function . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl >
returns a flowable that emits the items emitted by the source publisher up to the specified capacity . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a single that emits the items emitted by the finite source publisher into a sorted list . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a { @link maybe } that subscribes to the given { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . subscribeon . png alt = > <dl > <dt > <b > scheduler :
returns an flowable that emits the items emitted by the source observable window with the given initial capacity . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher with a given timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the items emitted by the source publisher with a specified timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits windows events according to the specified timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher with a specified timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits windows events according to the specified timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits windows events according to the specified timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits the items emitted by the source publisher with the specified boundary . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher with the given { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with the given boundary . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher with the specified boundary . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : <
returns a { @link maybe } that emits the results of applying the provided { @code bifunction } to this . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = >
returns a { @link maybe } that emits the results of applying the provided { @code bifunction } to this . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = >
/ * ( non - javadoc )
returns a flowable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the items emitted by the source maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns an { @link observable } that completes when the specified timeout expires . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the items emitted by the source publisher with a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl > <dt >
returns an { @link observable } that will connect to the { @link observable } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
sends out a {
converts a { @link flowable } into a { @link flowable } that can be used in parallel stream .
creates a parallel { @link <unk> } that can be used to produce an unbounded stream .
returns a flowable that emits the results of applying the specified { @code mapper } to the stream . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b
maps a { @link maybe } to a { @link <unk> } .
returns a flowable that emits the items emitted by the source publisher as soon as possible . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by { @code <unk> } by applying { @code mapper } to it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt >
returns a maybe that emits the results of applying a predicate to each item emitted by the maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / filter . png alt = > <dl > <dt > <b >
returns a { @link flowable } that emits the results of applying the specified { @code predicate } to it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher as soon as possible . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with the given { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the { @code accumulator } by its accumulation function . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / accumulation . png alt = >
returns a flowable that emits the items emitted by the { @code <unk> } by applying { @code mapper } to it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher with the specified value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher with the specified value . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher with the specified value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher with the specified value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a stream consisting of the elements of this stream sorted according to the specified comparator .
returns a new {
returns a {
calls the {
calls { @code oncomplete } on the { @code consumer } using the specified { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
calls the {
calls the {
calls the { @code oncomplete } function on each item emitted by the current { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
calls { @link <unk> ( java . util . function . <unk> ) } with an { @link java . util . function . <unk> () } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> .
calls the {
calls the {
calls the {
returns a flowable that emits the items emitted by the source publisher with the results of applying the given function to each item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / collect . png alt = > <dl >
returns a flowable that emits the termination of the given sources . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
invokes { @link <unk> ( function ) } on the given { @code converter } .
returns a { @link <unk> } that calls { @link <unk> ( <unk> ) } with the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl
returns a flowable that emits the results of applying the provided function to each item emitted by the source publisher with the result of applying the given function to each item . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a flowable that emits the results of applying the given function to each item emitted by the source publisher if there are any . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt =
returns a flowable that emits the result of applying the specified function to the result of applying the provided function to the result .
returns a flowable that emits the results of applying the specified function to each item emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the results of applying the given function to each item emitted by the source publisher via a { @code <unk> } function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> .
returns a flowable that emits the results of applying a function to each item emitted by the source publisher via a specified function . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / mapper . <unk> . <unk> . png alt
returns a { @link observable } that applies { @code <unk> } to { @code <unk> } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
<p > <unk> . < / p >
creates a { @link <unk> } that can be used to execute the { @link <unk> ( observable ) } .
creates a { @link <unk> } that uses the given { @link <unk> } to create a { @link <unk> } .
creates a { @link replay } with the given { @code max } and { @code max } .
creates a { @link replay } with the given { @code max } and { @code <unk> } .
creates a { @link <unk> } that will execute the given { @link observable } on the given { @link observable } .
sets the resource at the given index .
replaces the end of the subscription with the given index .
creates a { @link replay } . <p > creates a { @link replay } from the given { @link <unk> } .
creates a new { @link mapper } that uses the given { @link <unk> } .
returns a new { @link <unk> } .
/ * documented <unk>
returns a flowable that emits the results of applying the provided mapping function to each element . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
create a disposable object from the given run .
returns an { @link maybe } that emits the item emitted by the given action . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler :
converts a { @link future } into a { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / from . png alt = >
converts a { @link future } into a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <p > this method is useful for cases where
creates a disposable object from the given action . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
performs an blocking operation against rdbms .
returns a { @link flowable } that will be subscribed to the specified scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a { @link <unk> } that subscribes to the specified { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a new { @link <unk> } that subscribes to the specified { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
returns a flowable that emits the items emitted by the source scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / generate . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns an { @link <unk> } that subscribes to the specified { @link scheduler } .
<p > <unk> . < / p >
returns a { @link scheduler } that calls { @link <unk> ( <unk> ) } on the { @link scheduler } .
returns a flowable that subscribes to the specified scheduler . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
returns a runnable that is run on the schedule .
returns a { @link flowable } that subscribes to a single scheduler . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
disable this {
/ * ( non - javadoc )
sets the default { @link <unk> } for the given { @link scheduler } .
sets the default { @link exceptionhandler } .
<p > sets the given { @link function } to the default { @link <unk> } . < / p >
sets the default exception handler . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
sets the default exception handler .
sets the default exception handler .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the {
rethrows the given {
returns a flowable that emits the results of a { @link <unk> onerror } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a { @link maybe } that emits the results of a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = >
sets the {
returns a { @link flowable } that can be passed to { @link <unk> ( bifunction ) } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = >
returns a { @link <unk> } that will receive the given { @link bifunction } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
sets the { @link <unk> } of the given { @link observable } .
sets the {
a wrapper around { @link <unk> ( java . util . function . <unk> ) } .
sets the { @link <unk> () } of the { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b >
sets the default { @link exceptionhandler } .
wraps the given { @link flowable } into a { @link subscriber } .
returns an { @link observer } that calls { @link <unk> ( observer ) } on the given { @link observer } .
automatically subscribes the observer to the given observer .
adds an observer to the observer .
returns a { @link maybe } that emits the given { @link maybe } if one is emitted . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . observer . png alt = >
returns a maybe and emits the resulting maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = >
returns a flowable that emits the items emitted by the source iterable . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
creates a new <unk>
{ @link <unk> ( object ) }
creates a { @link <unk> } based on this { @link <unk> } .
wraps the given source into a single one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a stream consisting of the elements obtained by applying the given combiner function .
/ * ( non - javadoc )
wrap a parallel flowable . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns { @code true } if { @code <unk> } is { @code false } otherwise .
create a { @link scheduler } instance .
returns a composed function that applies { @code t } to { @code function } .
wrap a {
calls { @link <unk> ( callable ) } on the given { @link scheduler } .
applies the given { @code function } to the { @code scheduler } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / generate . png alt = >
concatenate a single { @link maybesource } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . concat . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
concatenate a single { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . concat . png alt = > <dl > <dt > <b > backpressure : < / b > <
concatenate a single value in a single { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > backpressure :
concatenate a single { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . concat . png alt = > <dl > <dt > <b > backpressure : < / b > <
concatenates a sequence of singlesources eagerly into a single sequence of singlesources eagerly . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > backpressure :
concatenates the iterable sequence of singlesources eagerly into a single sequence of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
calls the { @link <unk> onerror } method on the given { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @link maybe } that emits the results of applying the provided { @code source } to this { @code maybesource } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt =
returns an { @link maybe } that emits the items emitted by the { @code source } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
returns an { @link maybe } that emits the item emitted by the { @code throwable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / error . <unk> . png alt = > <dl > <dt > <b >
returns an { @link observable } that subscribes to the given { @link java . lang . throwable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromcallable . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source of the source . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a { @link maybe } that emits the results of a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns an { @link observable } that subscribes to the given { @link java . lang . callable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromcallable . png alt = > <dl > <dt >
converts a { @link future } into a { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / from . future . future . future . png alt = >
converts a { @link future } into an { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <p > you can
returns an { @link maybe } that emits the item emitted by the { @code action } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
returns a single that emits the specified item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
merges a single { @link maybesource } into a single { @link flowable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . png alt = > <dl > <dt > <b > backpressure : < / b
concatenates the iterable sequence of values into a single sequence by subscribing to each maybesource one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
concatenates the iterable sequence of publishers into a single sequence by subscribing to each maybesource one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns an { @link maybe } that emits the items emitted by the source maybe as soon as possible . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = >
returns a flowable that emits the items emitted by the source after the first one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the items emitted by the source iterable via a zipper function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . png alt = > <dl > <dt > <b >
returns a { @link maybe } that mirrors the source scheduler but with a maximum of time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . timeout . png alt = > <dl > <dt > <b >
returns a flowable that emits the time emitted by the source publisher with a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . timer . png alt = > <dl > <dt > <b >
returns a { @link maybe } that emits the items emitted by the { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that mirrors the source resource identified by the supplied resource s resource via { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / using . <unk> . png alt = > <dl > <dt
returns a flowable that mirrors the source resource identified by the supplied resource s resource . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / using . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a { @link maybe } that emits the items emitted by the source publisher if it is a { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = >
combines the { @link singlesource } into a single { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b >
a wrapper around { @link <unk> ( iterable ) } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a single that emits the first one and first if the other singlesource signals an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b >
returns a single { @link observer } that subscribes to this completable instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a single { @link throwable } that subscribes to this completable instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a { @link maybe } that emits the item emitted by the { @code onsuccess } function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b
returns a { @link maybe } that emits the results of applying the provided { @code function } to the resulting maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = >
maps a { @link maybe } to a { @link maybe } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . maybe . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher with the other publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > backpressure :
returns a single that emits the specified item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a single that emits the items emitted by the source maybe as a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a maybe that mirrors the source maybe in a time window . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . timeout . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the items emitted by the source publisher with a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher with the specified subscription . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that mirrors the source publisher with the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . timeout . png alt = > <dl > <dt > <b > scheduler : < / b
calls the {
calls the specified { @link <unk> onerror } on a single { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b >
calls the {
returns a flowable that emits the results of applying the provided function to each item emitted by the source maybe as a maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
returns a { @link observable } that combines the items emitted by the source into a single { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a { @link maybe } that emits the item emitted by the { @code predicate } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / hides . png alt = > <dl > <dt > <b > scheduler :
returns a { @link completable } that completes when this completable completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a single that emits the items emitted by the source publisher until a single item is empty . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > backpressure
converts the { @link <unk> } into a plain { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a { @link maybe } that emits the results of applying the provided mapping function to each element . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source of the specified type . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / cast . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the results of applying the specified function to each item emitted by the current maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
converts a { @link maybe } into a single { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a maybe that emits the item emitted by the specified { @code item } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the items emitted by the source publisher until the next item is encountered . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure
instructs a maybe to pass control to the next inner maybesource . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . on . png alt = > <dl > <dt > <b > scheduler : < / b >
instructs an { @link java . lang . throwable } to an { @link java . lang . throwable } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
calls the {
returns a flowable that repeats the source emitted by the source publisher until the given stop function returns false . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / repeat . html
returns a flowable that emits the items emitted by the source publisher with the given handler . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / repeat . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source maybe as soon as possible . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > backpressure
retries the provided { @link <unk> } until { @link <unk> ( java . lang . object java . lang . object ) } will be called for a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
retries the provided { @link <unk> } with the given predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the items emitted by the source publisher by the given { @code handler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl > <dt > <b >
calls the {
subscribes to this maybe and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . subscribe . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns a maybe that emits the item emitted by the source maybe as soon as possible . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
returns a single that emits a single and the specified other value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a maybe that emits the item emitted by the source publisher until the source publisher emits an item . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . take . png alt = > <dl > <dt >
returns a maybe that emits the item emitted by the source maybe as a result of the specified time unit . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . timeout . png alt = > <dl > <dt
returns a { @link maybe } that mirrors the source maybe but only if the timeout is exceeded . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . timeout . timeout . png alt = > <dl > <dt
returns a { @link <unk> } that delays the current item emitted by the source publisher until it completes it completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl >
returns a { @link <unk> } that emits the items emitted by the source publisher after the specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl > <dt >
returns a { @link maybe } that emits the item emitted by the { @code scheduler } by calling { @link <unk> () } on each item emitted by the { @code scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx
returns a flowable that emits the items emitted by the source stream with the given boundary . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
wrap a { @link observer } .
throws a nullpointerexception if the given object is null .
returns a new {
returns true if the subscriber is onerror or <unk> .
returns true if the subscriber is onerror or <unk> .
returns true if the subscriber is onerror or <unk> .
returns true if the subscriber is onerror or <unk> .
returns the { @code function } that returns { @code null } .
returns a new {
<p > memoize . < / p >
cast result object to a stream .
print stack trace .
returns the root cause of the given exception .
creates a new instance of this { @link <unk> } .
creates a { @link replay } instance with the given { @link <unk> } .
creates a new { @link org . <unk> . parser . stream . <unk> } with the given source and capacity hint .
creates a new { @link org . <unk> . parser . subject . subject } from the given { @link <unk> } .
tries to offer an item to the end of the queue .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
returns the qr code for the specified mode .
returns true if there is no error .
/ * ( non - javadoc )
waits for the command to complete .
creates a {
creates a {
creates a { @link replay } for the { @link <unk> } .
creates a { @link replay } with the given { @code max } and { @code <unk> } .
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
creates a default behavior of { @link <unk> } .
gets the value of the { @link <unk> } .
returns an array containing all of the elements in this list in proper sequence ( from first to last element ) .
get an array of values from an array .
returns true if the specified value is a valid value .
removes the maximum bound from the given queue .
factory method for creating a new { @link queue } instance .
calls the {
returns true if the predicate is cancelled .
perform a foreach operation on the subscriber .
invokes { @link <unk> ( subscriber atomicinteger ) } .
creates a {
creates a {
creates a { @link replay } for the { @link <unk> } .
nonsymmetric reduction from hessenberg to real schur form .
gets the value of the <unk> property .
gets an array containing all of the elements in this array in proper sequence ( from first to last element ) .
returns the value associated with the specified {
returns the error .
maps the given { @code value } to a { @code notification } .
returns an { @link observable } that will emit an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
atomically sets the value of { @code upstream } to { @code null } .
atomically sets the value in { @code upstream } to { @code null } .
atomically sets the { @link <unk> } to the next { @link <unk> } .
atomically sets the value of { @code atomicreference } to { @code atomicreference } and returns { @code true } if the atomicreference is not { @code null } .
adds all of the elements in the specified collection to the end of the list .
removes all of the elements in this { @code <unk> } array .
replay from the {
adds the given long to the given long value .
returns the product of { @code a } and { @code b } unless it would overflow or underflow in which case { @code long . max_value } or { @code long . min_value } is returned .
atomically adds the specified number to the specified number of longs .
atomically adds the specified number of milliseconds to the given requested number .
atomically adds the specified number of milliseconds to the given requested number .
create a new { @link subscription } .
returns a { @link <unk> } that subscribes to the given { @link observable } .
subscribes to this publisher and subscribes it to a consumer . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / subscribe . subscribe . png alt = > <dl > <dt > <b > backpressure :
returns a completable which terminates the first and first one first . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . amb . png
merges an iterable of sources into a completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . amb . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns a flowable that emits the items emitted by the source publisher with the source of source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the source of items emitted by the source publisher with the specified sources . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b
returns a single { @link single } instance with the given source . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns an { @link <unk> } that subscribes to the given { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a maybe that emits the item emitted by the { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns an { @link <unk> } that subscribes to the given { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler :
converts a { @link future } into a { @link completablefuture } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / from . future . future . future . png alt = >
maps a { @link maybe } to a { @link maybe } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a maybe that emits the item emitted by the { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a completable instance that subscribes to the given observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a completable which terminates the first and first one first . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . amb . png
merges an iterable of sources into a single sequence . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a completable that subscribes to all of the source completables emitted by the source publisher until the source publisher completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl >
returns a completable instance that merges items emitted by the source publisher into one or more sources . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a completable that subscribes to the source of the source publisher and delays any errors till the source completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt
returns a completable instance that merges items emitted by the source publisher into one or more sources . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a completable instance that completes when the completable finishes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . completes . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a single { @link single } with the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . timer . png alt = > <dl > <dt > <b > scheduler : < / b >
converts a { @link throwable } to a { @link nullpointerexception } .
returns a completable instance that manages a { @link completable } instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> .
wraps the given source into a single { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
concatenates this completable and emits the result of this completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits the items emitted by the source maybe until the next item is emitted . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher until the next item has been emitted . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a single that emits the result of this one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
instructs a maybe to pass control to another maybesource rather than invoking it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a completable that subscribes to this completable instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
maps a { @link maybe } to a { @link <unk> } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / cast . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a { @link <unk> } that subscribes to this completable instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a completable which emits the result of this completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits the result of this completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a completable that fires an { @link <unk> } with a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a completable that completes when the specified delay completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a maybe that mirrors the source maybe in a time window . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . timeout . png alt = > <dl > <dt > <b > scheduler : < / b
returns a completable that subscribes to the specified { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
calls the { @code oncomplete } function on each item emitted by the { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
calls the { @link <unk> ( java . lang . object ) } instead of an { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt
calls the {
subscribes to the source publisher and returns a flowable that emits the items emitted by the source publisher up to it . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl >
calls the {
returns a { @link maybe } that emits the item emitted by the { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
returns a { @link maybe } that emits the item emitted by the { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
returns a completable which is invoked when a { @link completable } is invoked . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a maybe that emits the item emitted by the given { @code <unk> } as a { @link maybe } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl >
maps a { @link completable } to a { @link completable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a completable that emits the result of this completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits the result of this completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . repeat . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits the items emitted by the source publisher with the given handler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that retries the specified { @code predicate } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a completable that emits the result of this completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . retry . png alt = > <dl > <dt > <b > scheduler : < / b > <
retries the operator and retries on the specified time times . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . retry . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher by the given { @code handler } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher and emits the result . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / startwith . png alt = > <dl > <dt > <b > backpressure : <
subscribes to this completable instance and subscribes to it . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . subscribe . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns an observer that subscribes to the given observer . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a completable which subscribes to this completable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns a flowable that emits the items emitted by the source from another one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a single { @link single } that mirrors the source via an { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . timeout . png alt = > <dl > <dt > <b >
returns a single { @link single } that mirrors the source { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . timeout . png alt = > <dl > <dt > <b >
returns a single { @link completable } that completes when the specified timeout completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . timeout . png alt = > <dl > <dt > <b > scheduler : <
returns a completable instance that subscribes to the other completable and other { @link completable } s . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a { @link maybe } that emits the items emitted by the source of the current maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / cast . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
try to remap the {
maps the {
adds the specified element to the tail of this deque . if the head of the queue is full this method returns { @code true } .
shuts down the thread pool .
creates a new { @link scheduledexecutorservice } instance with the specified factory .
sets the missing requests .
/ * -------------------------------------------------------------------------------
/ * ( non - javadoc )
if the provided throwable is a java throwable then propagate it to a fatal error .
wraps the given throwable as a runtimeexception .
replies the index of the given statement .
wraps the given throwable if necessary .
adds the given consumer to the cache .
removes all items from the cache .
replays the whole items from the cache .
creates a new { @link <unk> } and emits the result of the { @link <unk> } .
adds a disposable object to the disposed closure .
adds all assets .
removes the specified disposable object from the internal list .
atomically removes the given disposable object from this { @link disposable } .
removes all bindings from this { @link <unk> } .
returns the number of items contained in this {
an implementation of { @link <unk> ( map ) } .
subscribes to the specified { @link observable } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
subscribes to this publisher and subscribes it to a consumer . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / subscribe . subscribe . png alt = > <dl > <dt > <b > backpressure : < / b > <
subscribes to this publisher and subscribes it to a consumer . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / subscribe . subscribe . png alt = > <dl > <dt > <b > backpressure : < / b > <
adds all helper texts which are contained by a specific { @link <unk> } .
returns a flowable that emits the results of applying the given function to each item emitted by the source observable . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
returns an observable that emits the items emitted by the source maybe as emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler
wrap a { @link observer } .
creates a new instance of { @link scheduler } for the given { @link executor } .
starts the code .
adds the specified value to the end of the list .
iterate over the elements of the map .
/ * ( non - javadoc )
/ * ( non - javadoc )
iterate over the entries of the map .
mirrors the specified iterable but only if the source iterable completes successfully or sends a termination notification . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b >
returns a single { @link single } that emits the first one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher into one or more items . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . concat . png alt = > <dl > <dt > <b >
returns an observable that calls the given { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / defer . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a completable that subscribes to the given { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns an { @link single } that emits the results of the given { @code callable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromcallable . png alt = > <dl > <dt > <b > scheduler :
converts a { @link future } into a { @link flowable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
converts a { @link future } into a { @link rx . observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <p > you can
converts a { @link future } into an { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = >
returns an { @link maybe } that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher into one or more items . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . concat . png alt = > <dl > <dt > <b >
returns a single that emits a single { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the specified { @code delay } to the specified { @code unit } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . timer . png alt = > <dl >
wraps a { @link singlesource } into a single { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a single instance of { @code <unk> } using the specified { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher as soon as possible . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > backpressure : <
returns a single that emits the items emitted by the source publisher with a default item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b >
returns a single that emits the results of applying the provided mapping function to each item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a single that emits the items emitted by the source publisher with a default item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with the other publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > backpressure :
returns a single that emits a single that completes by a given time unit . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . timeout . png alt = > <dl > <dt > <b > scheduler : <
returns a single that completes when the specified delay completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits the items emitted by the source publisher with the specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher as soon as possible . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a single that emits a single that completes by a given time unit . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . timeout . png alt = > <dl > <dt > <b > scheduler : <
returns a single that emits the result of the { @code this } with the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl > <dt > <b >
returns a { @link maybe } that emits the results of { @link <unk> ( predicate ) } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / filter . <unk> . png alt = > <dl > <dt > <b
calls the {
executes a single { @link <unk> ( throwable ) } with the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b >
returns a { @link maybe } that signals onerror signals that if the { @code onsuccess } signals that expired . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . finally . png alt = > <dl > <dt
calls a single { @link <unk> onerror } on a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : <
calls the {
calls the {
calls the specified { @link <unk> onerror } with a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : <
calls { @link <unk> ( bifunction ) onerror } on a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a single that emits the results of applying the provided mapping function to each item emitted by the source maybe as a single value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt
returns a { @link maybe } that emits the results of applying the provided mapping function to each element . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt >
returns a flowable that emits the results of applying the provided function to each item emitted by the current maybe and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt =
converts the { @link <unk> } into a plain { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the source maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher with a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / materialize . png alt = > <dl > <dt > <b >
returns a single { @code single } with the specified value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the items emitted by the source publisher with a single publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . png alt = > <dl > <dt > <b > backpressure :
returns a { @link maybe } that emits the item emitted by the { @link maybe } with the given { @link scheduler } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . observeon . png alt =
returns a single { @link single } with the given { @code value } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a single that emits the items emitted by the given { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the items emitted by the source publisher with the specified value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / repeat . png alt = > <dl > <dt > <b > backpressure : <
converts a { @link singlesource } into a single { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that applies the specified { @code predicate } to { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > backpressure
retries the operator and retries on the specified time times . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher by the given { @code handler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl > <dt > <b >
subscribes to this maybe and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . subscribe . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
subscribes to this maybe and subscribes it to the specified consumer . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . subscribe . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a single { @link observer } that subscribes to this { @link cancellationexception } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
subscribes the given { @link scheduler } to this { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . subscribeon . png alt = > <dl > <dt > <b > scheduler : < /
returns a single that emits the result of this one . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . take . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a single that emits the result of the { @code other } single with the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . timeout . png alt = > <dl > <dt > <b
returns a single that emits the result of the {
returns a completable instance that subscribes to this completable instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a single that emits the result of this one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns a { @link maybe } that subscribes to the given { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . subscribeon . png alt = > <dl > <dt > <b > scheduler :
returns a { @link maybe } that differs from { @code other } and { @code other } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = >
creates a { @link <unk> } map .
returns a { @link <unk> } that maps a { @link map } to a { @link <unk> } .
/ * ( non - javadoc )
starts the {
inserts the specified object into the queue . if the queue is not full this method returns false .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
assert that a disposable object is not disposed .
returns a new { @link <unk> } that can be used to generate a { @link <unk> } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
{ @inheritdoc }
stops the component .
/ * ( non - javadoc )
concatenates two iterable sequences into a single sequence of one or more items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the termination of the specified sources . <p > <img width = 640 height = 385 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > backpressure : < / b > < /
concatenate a single { @link singlesource } into a single { @link flowable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
concatenates the iterable sequence of publishers into a single sequence by subscribing to each sequence of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
concatenates the iterable sequence of publishers into a single sequence by subscribing to each sequence of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
concatenates the iterable sequence of publishers into a single sequence by subscribing to each sequence of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher as soon as possible . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / from . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher with the specified function . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher with the given callable . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromcallable . png alt = > <dl > <dt > <b > backpressure :
returns a cold synchronous stateful and backpressure - aware generator of values . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / generate . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the time emitted by the source publisher with a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . timer . png alt = > <dl > <dt > <b >
returns a flowable that mirrors the source publisher with the specified delay . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . timeout . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the time emitted by the source publisher with the specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . timer . png alt = > <dl > <dt > <b >
returns a flowable that mirrors the source publisher with the specified delay . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher with a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . timer . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher with the specified item . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the items emitted by the source iterable with a sequence error sequence . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher forward after the second one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . png alt = > <dl > <dt > <b > backpressure :
concatenates an iterable of sources into a single sequence of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
returns a flowable that emits the items emitted by the source publisher emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source sequence . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the items emitted by the source publisher with the specified predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . retry . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source after the first one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the items emitted by the source of items emitted by the source publisher with the same values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source after the first one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the items emitted by the source iterable with a sequence error sequence . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher with a single sequence of items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the time emitted by the source publisher with the specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . timer . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher as soon as possible . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromcallable . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that mirrors the source resource identified by the supplied resource s resource via { @code <unk> } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / using . <unk> . png alt = > <dl > <dt
combines the { @link singlesource } into a single { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b >
combines the { @link singlesource } into a single { @link single } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher as soon as possible . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher times each item emitted by the source publisher times out of the source publisher times . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry .
returns a flowable that emits the items emitted by the source publisher with the specified value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher with a specified number of items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher times each item emitted by the source publisher times out of the source publisher times . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry .
returns a flowable that emits the items emitted by the source publisher into a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / collect . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher with the specified value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher with a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a single that emits a single item emitted by a source publisher or a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher with a publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the finite source publisher with a specified comparator . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
subscribes to this publisher and subscribes it to a consumer . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
subscribes to this publisher and subscribes to the subscriber . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
returns a flowable that emits the items emitted by the source publisher with a given number of times . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source { @code count } with the specified { @code count } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . <unk> . png alt = > <dl
returns a flowable that emits the items emitted by the source publisher with the results of replacing each item emitted by the source publisher with the values from the source iterable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a flowable that emits the items emitted by the source publisher with the results of replacing each item emitted by the source publisher with the values from the source collection . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a flowable that emits the items emitted by the source publisher according to the specified timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits windows events according to the specified timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher with the given timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits windows events according to the specified timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits windows events according to the specified timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the results of applying the specified function to each item . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / groups . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the results of applying the specified function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher with the specified boundary . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher with the specified boundary . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher with the specified boundary . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that caches the items emitted by the source publisher to the specified initial capacity . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / default . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher up to the specified initial capacity . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source item emitted by the source publisher into a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / collect . png alt = > <dl > <dt >
returns a flowable that applies the specified function to each item emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
maps the upstream items into a single map . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
maps the upstream items into a single map . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a flowable that emits the results of applying the provided function to each item emitted by the source and maps them to a single one . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png
returns a flowable that emits the items emitted by the source publisher with the specified function . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the results of applying a function to each item emitted by the source publisher via a specified function . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = >
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
maps a { @link maybe } into a { @link flowable } that emits the items emitted by the source after applying the provided mapping function . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt =
returns a flowable that emits the results of applying the provided mapping function to each element . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the results of applying the provided function to each item emitted by the source publisher via a { @code function } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt =
returns a flowable that emits the items emitted by the source of the source publisher as soon as possible . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source of the source publisher as soon as possible . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source from another one by one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the item emitted by the source publisher with the specified item . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a single that emits the items emitted by the source publisher if the source publisher emits an item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher with a single subscription . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher with the given delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher with a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl > <dt >
returns a flowable that delays all items emitted by the source publisher until a publisher emits an item to the source publisher . <p > <img width = 640 height = 450 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl
returns a flowable that emits the items emitted by the source publisher to a different publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / notifications . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher by using the specified function . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher with a single value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher into a single value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / distinct . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the finite source publisher with a different value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / distinct . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher with the specified value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / distinct . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher with a different value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / distinct . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher as soon as possible . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > backpressure
returns a { @link maybe } that emits the item emitted by the { @code onerror } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . finally . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher after the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a { @link flowable } that invokes { @link <unk> ( java . lang . function ) } with an { @link java . lang . function } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> .
returns a flowable that emits the items emitted by the source publisher up to the lifecycle of the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
calls the { @code oncomplete } function on each item emitted via the { @code oncomplete } and { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
calls the specified { @link <unk> onerror } with the given { @link <unk> } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the items emitted by the source publisher up to the specified consumer . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher up to the provided subscriber . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
calls the { @code oncomplete } function on each emitted item until { @code <unk> } completes normally or an { @code onerror } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl
calls the { @code onerror } function on each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
calls the { @code oncomplete } subscriber to emit items emitted by the source publisher up to the given consumer . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
calls the { @code oncomplete } subscriber to emit items emitted by the source publisher up to the given consumer . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a { @link maybe } that calls { @link <unk> ( java . lang . function ) } with an { @link java . lang . function } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> .
returns a flowable that emits the items at the specified index . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the items at the specified index . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that applies the specified { @code predicate } to { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher up to the specified amount . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / default . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher with the specified default item . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / default . <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher up to the next buffer . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the results of applying the specified function to each item emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a maybe that emits the results of applying the given function to the maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the results of applying a function to each item emitted by the source publisher emits a mapping from the source publisher to a maybesource . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> .
maps a { @link completable } to a { @link completable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the source maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl >
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the source maybe . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl >
returns a flowable that emits the items emitted by the source publisher emits all items emitted by the source publisher emits them according to the provided function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the source maybe . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl >
subscribes to this publisher and subscribes to the subscriber . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / subscribe . subscribe . png alt = > <dl > <dt > <b > backpressure : < / b > < /
returns a flowable that emits the items emitted by the source maybe as a result item . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
subscribes to the items emitted by the source publisher until a subscriber subscribes to the items emitted by the source publisher or an { @code onerror } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / subscribe . subscribe .
subscribes to this publisher and subscribes it to the specified consumer . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / subscribe . subscribe . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher into a single value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher according to the specified selector function . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the results of applying the specified { @code keyselector } function to each item . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source of both source and other source . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with the specified publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a single that emits the items emitted by the finite source publisher to the specified comparator . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a single that emits the items emitted by the source publisher if the source publisher emits an item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl > <dt >
returns a single that emits the last item emitted by the source publisher if the source publisher emits an item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt
returns a flowable that retries the specified number of times the last item emitted by the source publisher times out . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher until a source publisher emits an item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / repeat . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with the other publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source from another one by one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source of both source and other values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with a value of { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . of . png alt = > <dl > <dt
instructs a publisher that is emitting items up to the specified amount . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher up to the specified amount of capacity . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher as soon as possible . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher as soon as possible . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl > <dt > <b > backpressure :
instructs a publisher to emit an { @link java . lang . throwable } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the items emitted by the source of the source publisher as soon as possible . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher with the specified value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with the specified parallelism . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with the results of { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher with the specified selector . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher with a specified number of items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher as soon as possible . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > backpressure
returns a { @link maybe } that emits the items emitted by the source publisher or a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt >
returns a flowable that applies the specified function to each item emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher as soon as possible . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher with the specified value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher times up to the specified predicate . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b
returns a flowable that mirrors the source publisher with the given publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the results of { @link <unk> ( function ) } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the results of { @link <unk> ( function ) } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher with a given buffer size . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that mirrors the source publisher with the given timeout . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / replay . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher up to the given amount of time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / skip . <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher asynchronously via a { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . of . png alt = > <dl > <dt >
returns a flowable that retries the specified { @code stop } and { @code <unk> } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . repeatedly . png alt = > <dl > <dt > <b > backpressure
returns a flowable that retries the specified { @code stop } and { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . repeatedly . <unk> . png alt = > <dl > <dt > <b
returns a flowable that retries the specified { @code stop } and { @code predicate } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . <unk> . png alt = > <dl > <dt > <b
subscribes to the given observer . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that mirrors the source publisher with the specified timeout . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher with the given delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher until a source publisher emits an item . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with a given initial value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / accumulation . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source of both source and other source . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source { @code flowable } to a { @code flowable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / share . png alt = > <dl > <dt >
returns a { @link single } that emits the items emitted by the source publisher with a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt
returns a single that emits a single item that emits only a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher until the given predicate returns true . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b
returns a flowable that skips the first item emitted by the source publisher up to the specified time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . skip . png alt = > <dl > <dt > <b
returns a flowable that mirrors the source publisher with the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . timeout . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that retries the specified number of times the last item emitted by the source publisher times . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt >
returns a flowable that skips the items emitted by the source publisher with the specified time . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / skip . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher with the given amount of time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / skip . <unk> . png alt = > <dl > <dt > <b
returns a flowable that applies the specified { @code predicate } to { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the finite source publisher with a specified comparator . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the finite source publisher with a specified comparator . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with the specified publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / startwith . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source of items . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / from . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a maybe that subscribes to the items emitted by the source publisher and then emits the resulting item . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
subscribes to this publisher and subscribes it to a subscription . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / subscribe . subscribe . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher up to the specified predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . retry . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with the specified subscription . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / subscribe . timeout . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher via a { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher until the other publisher emits an item . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
maps a { @link completablefuture } to a { @link completablefuture } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the results of applying the specified function to each item emitted by the source publisher emits a transformed item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl
returns a flowable that emits the items emitted by the source publisher times up to the specified predicate . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher with a specified scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timestamp . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher with a specified time unit . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher with the specified predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher up to the specified time . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher up to the specified amount of time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . ts . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher up to the specified amount of time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / skip . last . png alt = > <dl > <dt >
returns an observable that emits the items emitted by the source observable until the predicate returns true . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher until the source publisher emits the source of the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl >
returns a flowable that applies the specified { @code predicate } to { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > backpressure
returns a flowable that mirrors the source publisher with the given timeout . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher with the given { @code count } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with the given { @code count } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with the given { @code count } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with a single unit of time . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timestamp . <p >
returns a flowable that emits the items emitted by the source publisher with a given scheduler . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timestamp . <unk> . png alt = > <dl > <dt >
returns a flowable that mirrors the source publisher but with the specified timeout . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . timeout . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that mirrors the source publisher with the specified timeout . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that mirrors the source publisher with the specified timeout . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . timeout . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the items emitted by the source publisher as soon as possible . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . timeout . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher with a single unit of time . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timestamp . <p >
returns a flowable that emits the items emitted by the source publisher with the given converter . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a single that emits the items emitted by the source publisher as a single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher up to the specified capacity . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a { @link single } that emits the items emitted by the source of the source publisher as soon as possible . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl
returns a single that emits a { @link map } consisting of the results of applying the specified function to each item . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher with the specified publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a single that emits the items emitted by the finite source publisher to the specified comparator . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher as soon as possible . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher with the given count . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits windows events according to the specified timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits windows events according to the specified timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits windows events according to the specified timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits windows events according to the specified timespan . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher with the results of { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher with the specified boundary . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher with the specified boundary . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher with the specified boundary . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source maybe by applying the provided mapping function to each item . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = >
returns a { @link maybe } that differs from { @code other } and { @code other } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = >
/ * ( non - javadoc )
{ @inheritdoc }
an implementation of { @link <unk> ( runnable ) } for the { @link <unk> ( runnable ) } method .
acquires this instance from the pool .
performs a complete update on the intersection of the cache .
creates a { @link single } instance .
/ * ( non - javadoc )
/ * ( non - javadoc )
verifies that the { @link java . util . concurrent . blockingqueue } is not { @link <unk> } .
returns a flowable that emits the items emitted by the source of the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher up to the specified number of milliseconds . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher with a specified timeout . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher with a specified scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher with a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / generate . png alt = > <dl > <dt > <b > backpressure : < / b > <
close the subscription .
atomically sets the value of the given { @link disposable } to this { @link disposable } . if the stream is empty { @link <unk> () } will be called .
replaces the resource with the given { @link <unk> } with the given { @link <unk> } .
see ipromise ( inheriting callback ) interface
adds all of the elements in the specified collection to the end of the list .
/ * ( non - javadoc )
returns a flowable that emits the results of applying the given { @code selector } to each element of the source stream . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
returns a flowable that emits the termination of items emitted by the source publisher with a given <unk> . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt >
creates a new <unk>
writes a { @link flowable } to a { @link <unk> } .
creates a { @link replay } with the given { @link scheduler } and { @link <unk> } .
creates a { @link replay } with the given timespan and size . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a { @link <unk> } that emits the items emitted by the source stream to the given publisher . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
parses an { @link <unk> } into an { @link <unk> } .
creates an instance of { @link me . <unk> . scheduler . <unk> } with the given { @link scheduler } .
factory method for creating a new instance of { @link <unk> } .
returns the generic type of the given { @code ancestor } .
creates a new { @link future } with the given { @link callable } .
create an instance of the { @link class } for a { @link service } .
calls the {
returns a { @link converter } for the given { @link type } .
{ @inheritdoc }
returns a { @link converter } for the given { @link type } .
creates a converter for a { @link <unk> } .
returns a converter for a given type .
returns a { @link converter } for the given { @link type } .
<p > <unk> . < / p >
registers the {
creates a new instance of { @link java . util . scheduler } with the given { @link scheduler } .
creates a new instance of { @link <unk> } .
internal method for returning response .
returns an immutable view of the given { @code vector } .
sets the default { @link delay } to be used in the { @link <unk> } .
registers a { @link <unk> } with the given { @link <unk> } .
close the server .
returns a random delay between <code > <unk> / code > and <code > <unk> / code > .
create a response from a success response .
create a { @link <unk> } instance .
http error : http : // http : // code . google . com / p / google - api / java / util / concurrent / <unk>
create an instance of a generic error response .
<unk> : <unk>
returns true if the specified character is a cjk character
/ * package
returns a list of default zones .
<p > <unk> . < / p >
/ * ( non - javadoc )
determines the article of <unk> .
returns a {
/ * ( non - javadoc )
add worklist items .
/ * ( non - javadoc )
getmessage -- read the buffer .
inits the cursor .
adds a path to the list of rejected parts .
/ * <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new <unk> matrix .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
parses the { @code value } .
/ * ( non - javadoc )
parses the <unk> .
vars doc end
[ variable <unk> ]
adds a word to the segment .
checks whether the document matches the given range of characters .
<unk> <unk> <unk>
matches an {
returns true if the specified char array matches any of the words in the pattern .
load dict .
load <unk> dict .
load the dictionaries .
this method is used to get a list of remote words from a location .
load dict .
load a quantifier dictionary .
/ * ( non - javadoc )
read the status of this request .
adds a new { @link cell } to the tail of the list .
parses the head .
parses the head of the queue .
/ * ( non - javadoc )
/ * <unk>
<unk> <unk> <unk>
/ * ( non - javadoc )
matches documents that match the given array of characters .
adds a new segment to the specified char array .
gets the children of a segment .
get the children map
remove <unk> .
/ * ( non - javadoc )
returns the string representation of the given type .
/ * ( non - javadoc )
adds a converter to the list of errors .
sets the status converter converter .
/ * ( non - javadoc )
sets the default timeout for the connection .
set the { @link converter } for the { @link <unk> } .
set the http port mappings .
<p > startup . < / p >
生成 { @link secretkey } <unk>
/ * ( non - javadoc )
returns a { @code date } object from the given { @code string } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
this method decrypts the given { @link inputstream } with the given password .
{ @inheritdoc }
creates a runner for the plugin dependencies .
add a callback for the specified spring security version .
get the current version of the spring jar file .
performs the actual client registration id .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the subject principal from the subject .
/ * ( non - javadoc )
get the { @link org . apache . gobblin . config . <unk> } annotation for the given object .
creates a map of authorization requests for the given request .
logs if the given access control entry is satisfied .
/ * ( non - javadoc )
/ * ( non - javadoc )
get a list of <unk> from a list of openid attributes .
get authentication user details service .
initialise the default login filter .
configure endpoint access by form login using form login request .
calls the { @link <unk> () } method with the given { @link <unk> } .
import the launcher data from configurer .
import the launcher data from configurer .
configures the channel to be used by the channel .
add filter after
add a filter before
adds a filter to the validator .
add a filter
/ * ( non - javadoc )
{ @inheritdoc }
create a new { @link httpmethod } with the given { @link method } and uri .
returns the users groups .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
search for attribute values for multiple attributes
see { @link <unk> ( class string string [] ) } .
perform a search operation for a single attribute
builds a string representation of the search controls .
<p > <unk> . < / p >
this method is responsible for looking up the primary keys of the given list of acls .
/ * ( non - javadoc )
creates an { @link map } of { @link acls } for the given { @link object } .
implementation of {
helper method to create a { @link sid } instance .
returns a collection of user roles for the given portlet request .
<p > <unk> . < / p >
sets the { @link <unk> } for the given { @link <unk> } .
sets the value of { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
create the registration request filter .
create the <unk>
list of fragments
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
gets whether the current user has the specified role .
creates a new {
/ * ( non - javadoc )
parse the web security filter chain .
validates the query parameters .
registers a filter with web . xml .
looks up the grailsapplication context .
<p > <unk> . < / p >
this method returns a { @link <unk> } for the specified { @link series } .
<p > <unk> . < / p >
{ @inheritdoc }
<p > <unk> . < / p >
add an attribute to the manifest .
initialise the default login filter .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the { @link <unk> } for the { @link <unk> } .
gets the invalid session strategy .
returns the effective authorization policy for the given message .
returns effective authorization policy .
gets the session authentication strategy .
{ @inheritdoc }
/ * ( non - javadoc )
called by { @link <unk> ( <unk> ) } and { @link <unk> ( <unk> <unk> ) } .
this method is used to inform the user that the authentication provider is authentication .
/ * package
runs the {
factory method for creating a new { @link secretkey } from the given password .
factory method for creating a new { @link secretkey } from the given parameters .
factory method for creating a new { @link cipher } from the given mode .
returns the parameter specification for the given parameter specification .
initializes the cipher with the given mode .
factory method for creating a new { @link cipher } from the given parameters .
initializes the cipher with the given mode and returns the cipher .
encrypts the given data using the specified cipher specification .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
called by { @link <unk> ( <unk> ) } and { @link <unk> ( <unk> <unk> ) }
called by the { @link <unk> } method to inform the authentication service that the authentication process was successfully successfully authentication .
/ * ( non - javadoc )
build the content length of the content .
gets the parser .
sets the http methods .
feeds a crawl request url to the encoded url .
converts a list of authorities to a list .
/ * ( non - javadoc )
<p > <unk> . < / p >
sets the failure url for the failure .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
create a { @link <unk> } using the given { @link <unk> } .
set the { @link <unk> } for the given { @link <unk> } .
{ @link <unk> ( <unk> ) } for { @link <unk> ( <unk> ) } .
forwards the request to the registry .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
transforms an { @link set } of { @link string } s into a { @link collection } of { @link <unk> } s .
sets the list of url mappings to be used .
sets the { @link resttemplate } .
/ * ( non - javadoc )
returns the annotation of the given type or null if not found .
resolve the logged - in user .
returns a <code > default - <unk> / code > for the <code > default - <unk> / code > elements
/ * ( non - javadoc )
/ * ( non - javadoc )
find the user token value in the request .
factory method for creating successful authentication .
decodes a cookie value .
encodes the collection of cookie tokens into a url encoded string .
/ * ( non - javadoc )
determine if the connection should close the connection .
add a cookie to the response .
adds a cookie to the response .
/ * ( non - javadoc )
create a converter for { @link <unk> }
taking in an rsa public key and returns a { @link converter } that can be used to get the public key .
/ * ( non - javadoc )
returns a list of users with the given username .
returns a { @link list } of { @link <unk> } s for the { @link <unk> } .
returns a { @link list } of { @link <unk> } s for the { @link <unk> } .
creates a new user based on the user query .
saves a csrf token .
this method checks if the given resource has been set to the appropriate <unk> method .
/ * -------------------------------------------------------------------
sets the error page url .
/ * ( non - javadoc )
resolve the evaluation context
gets the query id from the request .
compiles an assignment to a regular expression .
get the target port for the given port .
authenticate and obtain the principal .
/ * ( non - javadoc )
log an exception .
f743 - <unk>
method called after {
<p > initialize the invocation process after invocation . < / p >
initialize the access decision manager .
process the authentication manager .
spring security metadata source .
pre - pre - pre - setup - advice .
<p > <unk> . < / p >
{ @inheritdoc }
/ * ( non - javadoc )
set the default { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> <unk> <unk>
add one filter to the web .
/ * ( non - javadoc )
save the current session in the context .
/ * ( non - javadoc )
set the href attribute .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
publish the event to the user .
creates a {
returns all attributes that have been added to the model .
transforms the set of authorities to a collection of authorities .
returns a new {
build the url for a provider
build the { @link <unk> } s for the { @link <unk> } .
set the base environment properties .
partition the limit by request parameter .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the { @link converter } for the given { @link map } .
set the { @link converter } for the request .
/ * ( non - javadoc )
gets the jwt decoder .
/ * ( non - javadoc )
create a <unk> for the given element .
create a <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
add a user to the list of users .
factory method for creating a new { @link <unk> } object .
create a new {
validates the given url against the given url .
generates a md5 digest based on rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk> rfc <unk>
split the given array of comma separated values into a { @link map } .
splits a string into a list of strings .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
authenticate if authentication is enabled .
/ * public void <unk> ( string <unk> ) throws ioexception { try { <unk> <unk> = <unk> . <unk> ( <unk> ) ; }
returns the {
adds the authorization parameters to the authorization challenge .
called by { @link <unk> ( <unk> ) } and { @link <unk> ( <unk> <unk> ) } .
checks if the request requires authentication .
/ * ( non - javadoc )
check the ticket validity .
check if current authentication token is authenticated .
/ * ( non - javadoc )
/ * ( non - javadoc )
retrieve the user details from the resultset .
find the <unk> instance with the given servletcontext
finds the <unk> instance with the given servletcontext .
create a new evaluation context .
create a { @link <unk> } instance .
filter the given filter .
return the url of the uaa .
returns a comma - separated list of { @link <unk> } s .
redirect the given url to the given url .
performs authentication .
create a { @link authentication } with the given details .
votes on a collection of objects .
{ @inheritdoc }
write an authentication token .
initialize the request url .
obtains the username from a request .
url encode a value .
gets the user from the cache .
check if authentication is authenticated .
/ * ( non - javadoc )
returns the authenticated user .
create a new <unk> object .
transforms the <unk> object into a <unk> object .
finds the ldap authenticator .
/ * ( non - javadoc )
add the password encoder .
adds a converter to the request .
performs the actual authentication .
<p > sends a <code > <unk> / code > to the <code > <unk> / code > . < / p >
sets the status mappings for the given { @code converter } .
sets the status of the request response .
<p > <unk> . < / p >
returns the {
sets the { @link <unk> } of the { @link <unk> } .
/ * ( non - javadoc )
load user by assertion .
create a { @link <unk> } using the given { @link <unk> } .
set the { @link <unk> } for the given { @link <unk> } .
{ @link <unk> ( <unk> ) } for { @link <unk> ( <unk> ) } .
get the response information .
gets the pre authenticated principal .
retrieves the user details by username .
loads a user from a list of attributes .
returns a map of {
{ @link consumer } of { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk>
{ @link consumer } of { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk>
<p > <unk> . < / p >
returns the specified {
render the response .
determines whether the given resource has the given permission .
/ * ( non - javadoc )
computes the signature for the given username and password .
combines arrays of bytes into a single byte array .
returns a new array containing the given portion of the array .
returns the set of granted roles for the given user .
/ * --- private methods ---
gets the { @link <unk> } s for the given user .
votes on a collection of <unk> .
/ * ( non - javadoc )
returns the object in the queue or null .
create a { @link state } from a { @link <unk> } .
adds placeholder support to the {
converts the given object to a shared object .
returns the shared object for the given shared type .
add a { @link <unk> } to the builder .
return a new instance of { @link classaccess } for the given class .
creates a new instance of this class with the given class . if the classaccess for this class is not present it will be returned . otherwise a new instance will be created and returned .
remove a configurer from the composite class .
registers the post processor .
builds the { @link <unk> } annotation .
creates a { @link <unk> } instance for the given { @link object } .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
build the https url for http requests .
/ * ( non - javadoc )
create a new <unk> for the given domain .
/ * public static string <unk> ( string path string path string path string path string path string path string path string path string path string path string path ) throws ioexception { string <unk> = <unk> . <unk> ( <unk> ) ; }
/ * ( non - javadoc )
sets the username and password to use .
/ * ( non - javadoc )
process auto login cookie .
process login success .
{ @inheritdoc }
changes the user s password .
attempts to get the logged in user .
/ * ( non - javadoc )
gets whether the current user has the given role .
sets the { @link <unk> } for the { @link <unk> } .
sets the { @link <unk> } for the { @link <unk> } .
sets the { @link <unk> } of the { @link <unk> } .
this method is used to retrieve all the registered skin ( s ) in the view .
display a list of contacts
/ * ( non - javadoc )
cas default security configurer .
executes the initialization security setup .
/ * ( non - javadoc )
creates a { @link list } of { @link <unk> } instances .
/ * ( non - javadoc )
handle failure failure .
returns true if the given {
returns a { @link mono } of { @link <unk> }
returns true if the access token is authorized or not .
this method is used to determine if the access expression is an <unk> .
/ * ( non - javadoc )
changes the password for the privilege .
returns the {
/ * ( non - javadoc )
{ @link <unk> }
/ * ( non - javadoc )
create remember me s services
create a {
create a new { @link me . <unk> . me . me . me . me . <unk> } instance for the given key .
get user details service .
sets the { @link <unk> } for the given { @link <unk> } .
create a new { @link <unk> } instance .
<unk> { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk>
/ * ( non - javadoc )
returns the {
create a new { @link <unk> } instance .
/ * ------------------------------------------------------------
adds a header to the operation .
enables default values for disabled options .
validate header .
returns a list of all available header writers .
add filter after
add filter at
add filter before
checks if the given class is an entity class .
/ * public static void <unk> ( <unk> <unk> ) { <unk> <unk> = <unk> . <unk> ( <unk> . <unk> () ) ; }
returns the list of roles associated with the jwt .
configure ldap authentication manager .
define a { @link <unk> } bean .
create a new {
/ * ( non - javadoc )
/ * ( non - javadoc )
display admin page
display a list of targets .
add a permission
deleting a permission
returns true if the role starts with the given prefix .
/ * ( non - javadoc )
returns a builder for {
returns a builder for {
/ * ( non - javadoc )
{ @link <unk> ( string ) }
create a new instance of { @link <unk> } .
converts list of { @link <unk> } s into a list of { @link <unk> } objects .
this method deserializes and returns a { @link user } object
creates the default access decision manager .
<p > getter for the field <code > <unk> / code > . < / p >
f743 - <unk>
{ @link <unk> ( string ) }
creates a { @link <unk> } bean for the given resource .
creates a list of { @link <unk> } from the given string .
create a <unk> that matches the given pattern .
validate the package name matcher .
returns the list of mappings associated with the given element . <p >
get the first parameter value for the given parameter name .
{ @inheritdoc }
convert a string to a byte array .
decodes a byte array into a string .
produce ticket .
returns a { @link amethodwithitsargs } class for the given { @link method } .
chooses the first parameter of the given type .
returns true if the given parameter is annotated with {
add a new contact .
/ * ( non - javadoc )
sets the value of the configuration property .
adds a folder to the list .
/ * ( non - javadoc )
/ * ( non - javadoc )
add a method to the list of secure methods .
add a method to the receiver .
add a method to the cache .
add the given { @code <unk> } to the given { @code <unk> } .
/ * ( non - javadoc )
<unk> > <unk>
returns the { @link <unk> } for the specified { @link <unk> } .
removes a csrf token from the scoped session .
/ * ( non - javadoc )
gets a {
/ * ( non - javadoc )
creates a new { @link <unk> } for the given resources .
transforms an { @link set } of { @link string } s into a { @link <unk> } .
return a {
/ * ( non - javadoc )
configures the authorization request using the specified request .
creates a new {
/ * ( non - javadoc )
sets the { @link <unk> } for this request .
returns a { @link <unk> } with the specified { @link <unk> } .
resolve the logged in user .
create the login context for the login process .
/ * ( non - javadoc )
logs an unexpected exception .
/ * ( non - javadoc )
/ * ( non - javadoc )
called by the authentication process to authenticate authentication .
returns a list of user - specified user friendly settings .
sets the keys of the keys in the array .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
returns the uri of the authorization header .
checks if our controlled objects should be authorized or not .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> <unk> <unk>
called by { @link #login ( authentication ) } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
post process .
/ * ------------------------------------------------------------
clear authentication attributes .
returns the field of the given type or throws an exception .
<p > <unk> . < / p >
/ * ( non - javadoc )
create the service url .
create a redirect url .
/ * ( non - javadoc )
transforms the set of reachable roles to a given role .
returns the set of roles reachable from the given verb .
read the roles in one step .
get the roles that are reachable from the user .
return an array of bytes from the given byte array .
add logout handler .
/ * ( non - javadoc )
sets the { @link handler } for the { @link <unk> } .
register a { @link <unk> } with the { @link <unk> } .
runs the {
returns the set of { @link <unk> } s for the given { @link method } .
generates a md5 hash from a byte array .
encodes the given { @link inputstream } into a { @link string } using the given { @link password } format .
sets the password .
extracts the prefix from the given string .
/ * ------------------------------------------------------------
login form .
logout method .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
gets the filter list .
private method to check the login page to populate the login page .
register a { @link throwable } with the { @link <unk> } .
gets the registered types .
<p > <unk> . < / p >
extract the raw cause of the given type .
finds the first exception of the given type or null if no such exception is found .
validates that the specified { @code throwable } is assignable to the given { @code throwable } .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the username and password to use .
adds a converter to the request .
determine the { @link <unk> } for the { @link javax . ws . rs . portlet . portlet . <unk> } class .
gets a { @link consumer } for the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a list of { @link <unk> } to a list of { @link string } s .
compares two byte arrays .
/ * ( non - javadoc )
build form parameters
{ @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> }
create a { @link <unk> } using the given { @link <unk> } .
/ * ( non - javadoc )
clear the authentication attributes of the request .
sets the default failure url .
performs actual authentication .
sets the list of hidden servlet names that should be applied to the hidden input variables .
performs the actual authentication .
loads a { @link userdetails } from the { @link <unk> } .
creates a new role for the given authentication token .
<unk> > <unk>
gets the request context .
returns the full url of the given request .
gets the full url of the given service .
expose the current request uri .
/ * ( non - javadoc )
checks if the given url is absolute .
returns a list of all the attributes that match the given identifier .
/ * ( non - javadoc )
prints the given { @link net . dv8tion . jda . core . entities . character } to the given { @link net . dv8tion . jda . core . entities . character } .
flushes an identifier .
converts an identifier to a long value .
creates a new { @link net . dv8tion . jda . core . entities . user password } with default password encoder .
configure assertion .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the access denied .
sets the default { @link <unk> } for the given { @link <unk> } .
default authentication entry point .
gets the {
<p > creates a { @link <unk> } instance . < / p >
gets the request cache .
submit a new { @link <unk> } .
creates an { @link <unk> } with the given identity identity .
create a new sql snapshot .
create an object identity element
/ * ( non - javadoc )
create the primary key of the given sid .
create a new primary key
returns the value of the primary key of the specified identity identity .
updates an existing acl with the given identity identity .
updates an existing acl with the given identity .
/ * ( non - javadoc )
creates a {
sets the logout handlers .
maps a { @link list } of { @link <unk> } instances to a { @link constraint } .
returns a { @link <unk> } that matches any of the provided uris .
create a standard { @link com . google . cloud . com . google . android . base64url . codec . <unk> } for the given password .
create a standard { @link com . google . cloud . com . google . android . base64url . codec . <unk> } for the given password .
creates a { @link <unk> } instance using the given password .
creates a { @link <unk> } instance using the given password .
creates a text encryptor using aes - 256 algorithm .
sets the {
get the { @link <unk> } .
this method checks if the given resource is decided by the user . this method should be called from the main method of the <unk> interface .
create a { @link <unk> } instance .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
obtain the subject associated with the given request .
creates a csrf csrf document .
specifies that retries should be aborted if the { @code failures } matches the { @code failures } .
returns a csrf version of the web .
returns a csrf request matcher .
returns a matcher that can be used to grant a deferred authorization matcher .
get default access denied .
returns a {
create a { @link <unk> } handler .
/ * ( non - javadoc )
determine the target url for the request .
determine the redirect url for the current request .
sets the default target url .
sets the target url parameter .
parses the {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new { @link builder } .
introspect the <unk> response for the given token .
returns a new { @link <unk> } instance .
obtain the authentication manager .
gets the { @link <unk> } bean for the { @link <unk> } .
configure the { @link <unk> } instance .
creates a shared object from the shared object .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new evaluation context for the given authentication .
returns the service url for the specified service type .
/ * ( non - javadoc )
/ * package private
/ * ( non - javadoc )
prepare a connection to a connection .
get a { @link mono } of { @link <unk> } .
<p > <unk> . < / p >
performs destroy on the disposable object .
tokenize the given string as a list of user attributes .
sets the service id .
parses a date value into a { @link date } object .
returns the current date as a string .
parses the given string as a date object .
parse a date value from a string .
caches the specified value in the cache .
find the method with the given parameters .
gets a method invocation from the given object .
create a static method from a class .
handles an authentication request .
sets the details of the authentication request .
maps a { @link list } of { @link <unk> } s to a { @link constraint } object .
maps a { @link list } of { @link <unk> } instances to a { @link constraint } .
creates a new { @link net . dv8tion . jda . core . entities . <unk> <unk> } with the given matcher .
maps a { @link message } to a { @link constraint } .
/ * ( non - javadoc )
create a { @link <unk> } instance .
create an authentication authentication token .
set the realm name .
set the { @link datasource } for the { @link datasource } .
/ * ( non - javadoc )
add a folder to the list of files .
/ * ( non - javadoc )
sets the password .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the user is authenticated .
/ * ( non - javadoc )
{ @link <unk> ( string ) }
creates a { @link <unk> } from a resource .
creates a { @link list } of { @link <unk> } .
delete an entry from the <unk> .
{ @inheritdoc }
find the { @link annotation } annotation for the given { @code method } .
returns a credentials object for the given subject .
/ * ( non - javadoc )
changes the password of the current user .
/ * ( non - javadoc )
sets the filter attribute .
converts the object to a list of objects
/ * ( non - javadoc )
/ * this method is called when a session has been established or not .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
build form parameters
/ * ( non - javadoc )
create an authentication object with authentication information .
/ * ( non - javadoc )
/ * ( non - javadoc )
extract the authorities from the security profile .
returns the list of { @link javax . portlet . filter } s for the specified { @link portlet } .
returns a list of filters for the specified branch .
/ * ( non - javadoc )
find the application context for the given servletcontext .
authenticate with authentication .
create a new <unk>
/ * ( non - javadoc )
/ * public static void close () { try { <unk> <unk> = <unk> . <unk> () ;
get the name of a distinguished name .
returns an {
set the { @link converter } for the { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a copy of the given { @code <unk> } with the given { @code <unk> } .
/ * ( non - javadoc )
add additional parameters to the logged - in user .
returns the {
marshall the given { @link <unk> } with the given { @link <unk> } .
sets the basic authentication scheme .
adds a list of {
filters the filter with the given filters .
adds a list of { @link filter } s to the given list of { @link filter } s .
<p > <unk> . < / p >
converts the given object mapper to the given { @link objectmapper } .
build argument list .
gets the response .
gets the response .
performs a post request .
performs a post request .
creates a new { @link response } with the given path and query parameters .
performs an http get request .
creates a new { @link response } with the given path and query parameters .
returns the head of the resource with the given path .
creates a new { @code path } from the given { @code path } .
performs a patch request .
creates a new patch request with the given parameters .
creates a engine with the given path parameters .
creates a new { @link path } instance with the given path and query parameters .
creates a new http request with the given method and url .
creates a new http request with the given method and url .
checks whether the given method matches the given uri .
creates a new http request with the given method and url .
/ * ( non - javadoc )
/ * ( non - javadoc )
set the authentication scheme .
/ * ( non - javadoc )
returns an {
creates an authentication scheme for the given issuer .
creates a new authentication scheme .
<p > <unk> . < / p >
<p > <unk> . < / p >
代码管理<br > <unk>
/ * ------------------------------------------------------------
<p > <unk> . < / p >
enable / disable
<p > <unk> . < / p >
creates a trust store with the specified username and password .
checks if the given { @link javax . ws . server . configuration . <unk> } is used .
<p > <unk> . < / p >
copies the specified { @link file } to the specified { @link file } .
commit the proxy .
set proxy host and port .
get the bucket name from the given uri .
processes the response .
create a { @link <unk> } for the given { @link <unk> } .
creates a { @link com . hazelcast . encoder . encoder } for the given content type .
returns the default charset for the given content type .
set the { @link charset } for the { @link charset } .
/ * ( non - javadoc )
create and return a default encoding based on the given charset .
<p > <unk> . < / p >
send a { @link restresponse } object to the { @link restresponse } object .
create a { @link com . <unk> . jackson . <unk> . mapper . <unk> } from a { @link <unk> } .
reads the {
reads the { @link <unk> } from the given { @link <unk> } .
reads the { @link <unk> } from the given { @link <unk> } .
reads a {
heron la <unk> <unk>
build a { @link <unk> } for a { @link <unk> } .
helper method to parse a configuration object .
<unk> by default
generate a new { @link <unk> } .
sets the encoder configuration for the encoder .
sets the {
create a new { @link <unk> } .
create a mock configuration for the given configuration .
create a new { @link <unk> } .
inject the config parameter { @link <unk> } into the { @link <unk> } object .
create a new { @link <unk> } .
<unk> <p > function : <unk> / p > <p > description : < / p >
/ * <unk>
creates a new { @link sslcontext } .
returns a new { @link <unk> } that can be passed to the { @link sslcontext } .
returns a newly created {
produce a new instance of { @link <unk> } .
create a new instance of { @code <unk> } .
parse xml document configuration .
creates a new { @code <unk> } with the given name and value .
sets up the features for external external external entities .
default implementation of { @link <unk> } .
declares an xml document that will be used to resolve xml documents .
/ * ( non - javadoc )
get all objects from the authenticated user .
delegate to the { @link com . google . common . io . <unk> ( java . lang . string java . util . map ) } method .
perform a post to the client .
perform a patch request on the specified host and port .
performs an http patch request .
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> <unk> <unk> <unk>
deserialize the response .
get default response handlers .
{ @inheritdoc }
set the uri for the given uri .
appends the given { @link map } to the given { @link map } .
returns a proxy with the specified host and port .
sets the name of the { @link net . dv8tion . jda . core . entities . emote <unk> } .
adds a named argument to the argument builder .
/ * ( non - javadoc )
/ * ( non - javadoc )
set the { @link charset } for this { @link mediatype } .
change the default password encoding .
sets the { @link <unk> } for the given { @link <unk> } .
create a basic websocket connection .
basic basic authentication .
dispatch a cookie to the session .
sets <unk> to the remote sender .
create an instance of { @link sslcontext } .
<p > configures the resulting <b > crest< / b > instance to the given endpoint . < / p > <p > <b > access control< / b > < / p >
<p > execute . < / p >
returns the mime type of the http response .
parses the http headers and returns the response headers .
<p > <unk> . < / p >
reset the <unk>
execute post .
performs a get request .
execute post request .
execute post request .
execute post request .
execute post request .
execute post request .
execute post request .
perform a http get request .
execute post request .
execute patch .
/ * private static void <unk> ( string path string path string params ) throws ioexception { string <unk> = new <unk> ( <unk> ) ; }
see http : // www . <unk> . com / docs / api / java / util / <unk>
creates a new http request for the given method and url .
creates a new { @link <unk> } with the given url and url .
<p > <unk> . < / p >
creates a new { @link <unk> } with the specified url and url .
/ * package
creates a mock authentication scheme .
{ @link <unk> } object .
{ @link <unk> ( object ) }
/ * ( non - javadoc )
enable / disable
creates a { @link predicate } for a { @link org . parboiled . parserunners . tracingparserunner } .
creates a matcher for { @link <unk> } s .
creates a matcher for { @link <unk> } s .
creates a matcher for { @link <unk> } s .
sets the content type header .
sets the content type of the response .
specifies http response headers .
/ * ( non - javadoc )
fails if the given value matches the given matcher .
fails if a comment is found .
find the entry for the given date and time matches .
converts a {
parses the given {
return a boolean matcher that can be used to determine if this auditor matches the current request .
returns a new instance of {
return a {
writes the max age to the maximum age .
adds a header to the builder .
adds a header to the request .
adds a parameter to the request .
adds a cookie to the response .
expect that the cookie with the expected name has the expected value .
sets the {
get the process root path .
appends the root path to the response .
adds a parameter to the request .
expect that the provided {
creates a new task group specification builder .
creates a new { @link <unk> } .
sets the parser content .
creates a validator from a json schema .
creates a validator for a json schema validator .
/ * ( non - javadoc )
process the json schema from the given file .
returns a matcher that matches all the responses that match the given <unk> .
returns a matcher that matches the head of the given matchers .
returns a matcher that matches any of the given matchers .
returns the entity type for the given entity .
<p > <unk> . < / p >
gets the list of weak updates .
returns an unmodifiable view of the values contained in the map .
creates a proxy for a proxy host .
creates a new <code > <unk> / code > using the specified username and password .
creates a proxy for the specified host and password .
creates a new { @link <unk> } with basic authentication .
finds the deserializer for the return type .
returns the {
parse a default { @link <unk> } .
finds the {
finds the { @link <unk> } for the given { @link <unk> } .
finds the { @link <unk> } for the given { @link <unk> } .
checks if the given location is absolute .
/ * ( non - javadoc )
marshall the given logging object .
creates a top - level content - type string from the given headers .
get the httprequest for the given http method
<p > <unk> . < / p >
overwrites the existing ones .
/ * ( non - javadoc )
returns a new { @link <unk> } instance that can be used to create a { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a default { @link <unk> } for the default { @link <unk> } .
returns a copy of this serializer with the specified converter .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a new namespace
adds a new attribute to the builder .
adds a header to the request .
add a new multi part .
/ * ( non - javadoc )
add a multi - part field to the request .
adds a multi - part field to the request .
sets the session id to use .
setup the mock web application .
adds the specified result handlers to the validator .
helper method to initialize the { @link <unk> } .
sets a { @link <unk> } .
creates a new instance of { @link httpclient } using the given { @link httpclient } .
calls { @link <unk> ( java . util . map ) } and { @link <unk> ( java . util . map ) } .
returns a new {
returns the {
returns the json object of the specified path .
returns the integer value of the specified property as an integer .
applies the operator to the given value .
returns the short value of the specified index in the expression specified by the index .
returns the value at the specified index as a double .
returns the value associated with the given key as a double .
returns the value at { @code index } in the given { @code path } .
{ @link <unk> ( string object class ) }
/ * ( non - javadoc )
get the object returned by the given path .
/ * ( non - javadoc )
add a parameter to the map .
/ * ( non - javadoc )
create xml configuration features .
create an instance of { @link <unk> } .
executes the api action with the given parameters .
create a new xml configuration object .
declare namespaces declared by the reader .
executes the api action <unk> for the given parameters .
create a new { @link <unk> } .
<p > <unk> . < / p >
<p > <unk> . < / p >
parse an xml document declaration declaration .
returns a {
set the { @link charset } for the given { @link charset } .
returns the default charset for the given content type .
returns a default { @link com . hazelcast . content . content . <unk> } for the default { @link <unk> } .
returns a default { @link com . <unk> . io . <unk> . <unk> } for the default charset .
returns a {
sets the value of the given property file .
get a field as list .
<unk> > <unk>
get object value .
get the int value of the specified property as an integer .
get the boolean value of the property with the specified path .
gets the value of the property with the specified path .
gets the value of the specified property as string .
gets the double value of the property with the specified path .
gets the double value of the property with the specified path .
returns the value of the <code > name< / code > property as a <code > double< / code > . if no such property exists or empty <code > double< / code > is returned .
returns the value mapped by { @code path } if it exists and is a { @code long } .
gets the value of the property with the specified path .
/ * ( non - javadoc )
create a new param with the given name and value .
{ @inheritdoc }
/ * ( non - javadoc )
sets the { @link mapper } for the field .
sets the {
adds a parameter to the query spec .
add a parameter to the param .
添加命名的参数 : propertyname - > 命名的参数
添加命名的参数 : propertyname - > 命名的参数
adds a query parameter to the url .
set the request body .
adds a query parameter to the url .
adds a query parameter to the url .
add a list of path parameter values to the request .
adds a { @link <unk> } to the default { @link <unk> } .
loads the { @link keystore } from the file system using the default { @link keystore } .
adds a header to the request .
adds a header to the request .
adds a multi - part field to the request .
adds a session header to the request .
<p > adds a set of attributes to the request . < / p >
/ * <unk>
default implementation of { @link <unk> ( string int ) } .
/ * ( non - javadoc )
creates a new { @link genericresponsebuilder } with the given { @link uri } and { @link uri } .
creates a new { @link <unk> } using the specified path .
creates a { @link <unk> } middleware that will start with the given path .
creates a { @link <unk> } middleware that will serialize the given path .
creates a { @link <unk> } that matches the given matcher .
creates a { @link sslcontext } from the specified { @link file } .
get an { @link sslconfig } .
returns a {
create an sslcontext from the certificate .
returns a newly - created {
adds a parameter to the authorization url .
get the value of the given cookie .
returns a list of cookies matching the specified cookie .
factory method for creating an instance of { @link provider } .
removes the specified keys and values from the backing map .
adds the types to the given list of types .
/ * ( non - javadoc )
/ * package
finds and returns the binding binding .
returns true if the given key is excluded .
create and return a provider binding for the given key .
liberty change end
creates a binding for the given dependency binding .
removes the given binding from the binding list .
returns the dependencies of the given binding .
creates a binding for the given key .
create a binding binding for the given key .
/ * ( non - javadoc )
this is a convenience wrapper for {
create and return a new binding binding for the given method .
create a binding binding for the given method .
<p > <unk> . < / p >
create a sub context .
utility method to extract the value of the parameter values from the parameter map .
creates the label for a node .
factory method for creating a new { @link <unk> } .
create a new { @link <unk> } with a set of annotations .
see <a href = https : // github . com / <unk> / <unk> / issues / <unk> . <unk> > <unk> / a >
see { @link <unk> ( class ) } for more details .
builds a <unk> for the given type .
binds the specified {
binds the specified {
returns a dependency that can be used to build a dependency .
returns a new {
returns a new {
find the matching constructor for the given type .
creates a new instance of the specified type .
returns a set of { @link <unk> } s matching the given { @link type } .
returns a set of {
initializes a {
returns a set of injection points for the given type .
returns true if the given method is a non - static method .
check whether the given method overrides the given target class .
registers the delegate .
inject members of the members of this type .
creates an { @link <unk> } with the given { @link <unk> } and { @link <unk> } .
returns a { @code <unk> } that matches the given { @code instance } .
returns an { @link <unk> } that can be used to log an { @link <unk> } .
returns a { @link <unk> } if the specified { @code throwable } is { @code null } .
get the actual type parameter of the given class .
returns the provider for the given type .
returns a type reference for the given type .
resolves all generic interfaces of the given type .
returns the { @link java . util . list } of { @code supertype . type } or { @code <unk> } if the supertype is { @code supertype . <unk> } .
returns the {
returns a list of { @link method } s for the given { @link method } or { @link java . util . list } .
<p > creates a { @link methodparameter } for the specified { @link class } . < / p >
returns the {
create a key binding from the given key .
returns a converter for the given type .
returns true if the given type reference is a boolean reference .
returns the raw type of the given type .
resolves a { @link typevariable } for the given { @link typevariable } .
initialize the list of servlets .
prepare the built in converters .
matches the class loader for the given class loader .
fast fast - public static inner class
<p > <unk> . < / p >
determine whether the class has the same version of the provided class .
<p > <unk> . < / p >
factory method to create a provider instance .
get the { @link <unk> } for the given { @link injector } .
returns the { @link key } of the given { @link key } .
gets the template annotation .
/ * ( non - javadoc )
validates the consistency check .
sets up all the singletons that are eager singletons .
<p > newinstance . < / p >
finds all { @link <unk> } definitions for the given { @link injector } .
forwards the request dispatcher to the specified servlet .
resolve aliases .
returns true if the specified stage is modified .
returns a {
returns true if the binding is a scoped binding .
normalize a path .
/ * <unk>
returns true if the binding is eager or not .
returns the annotation of the specified type .
returns true if the given object is an instance of the given class .
find the annotation hashcode of the given members .
returns a string representation of the given annotation type .
returns true if the retention policy of the given class is retained at runtime .
returns an {
finds the scope annotation index for the given annotation .
checks if the given binding is a { @link <unk> } .
checks if the given { @link java . lang . reflect . constructor } is { @link <unk> } or { @link <unk> } .
returns the annotation found for the given annotation .
returns the name of the named annotation .
returns the { @link class } for the given { @code annotation } type .
returns the name of the generated annotation .
registers the delegate .
/ * ( non - javadoc )
returns the { @link class } representation of the given { @link member } .
returns a new { @code <unk> } that collects entries of { @code v } in { @code binder } .
returns a new { @code <unk> } with { @code key } and { @code value } .
returns a new { @code <unk> } with the given { @code key } and { @code value } .
binds jersey {
creates a new { @link <unk> } instance based on the given { @link org . apache . inject . injection . <unk> } .
returns true if {
returns a new { @code <unk> } that collects entries of { @code v } in { @code binder } .
returns a new { @link java . util . binding } of the given type .
binds the given { @link key } to the given { @link key } .
factory method for creating a new { @link <unk> } .
returns a new { @link <unk> } instance for the given { @link <unk> } .
creates a { @link <unk> } object from the given { @link method } .
/ * ( non - javadoc )
returns the index of the first source provider that is the source of the source provider .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a binding for the given scope .
returns a binding with the given annotation .
/ * <unk>
create a { @link <unk> } for the given module .
returns an { @link collection } of { @link plan } s where { @link org . <unk> . plan . <unk> () } has been called .
returns true if the given type is not specified .
find the matching constructor injection point .
checks if the constructor has an implicit constructor with the same constructor .
returns an instance of { @link dependency } instances .
returns an immutable set of { @link dependency } s for the given { @link set } .
check if constructor matches constructor .
returns true if constructor is excluded .
initialize the component .
a binding for { @link <unk> ( java . lang . object java . lang . object java . lang . object java . lang . object java . lang . object java . lang . object java . util . list java . lang . object java . util . list java . util . list ) } or { @link org .
/ * ( non - javadoc )
checks if the exception type can be checked .
throws a { @link nullpointerexception } if the specified object is not null .
precondition that the given condition is { @code true } .
returns a new errors object that can be used to create new errors .
/ * ( non - javadoc )
formats the given message using the given arguments .
convert an object to a generic type .
factory method for creating a new { @link <unk> } using the given { @link binder } .
tries to initialize the <unk> .
find the next filter matching the request .
checks if the given member has an inject .
{ @inheritdoc }
gets the provider dependencies for the injection point .
{ @inheritdoc }
returns a set of dependencies for the injection point .
returns the provider injection points .
get the value of a parameter with the specified name .
get the value of a system property .
/ * ( non - javadoc )
returns a parameterized type with the given {
returns a parameterized type with the given {
build a parameterized type node with the given key and value type .
create a new instance of { @link parameterizedtype } .
returns a list of modules in the given iterable .
find the matching constructor for the given method .
binds the given properties to the system properties .
binds the configuration properties to the mojo .
create a new { @link injector } with the given { @link modules } .
creates a new { @link injector } with the given { @link <unk> } .
gets the number of trees in the given stack trace .
crop the current stack trace .
returns a { @link <unk> } instance for the given { @link field } .
this method initializes ellipses
wrap a {
returns a { @link callable } that applies the given { @link callable } to the { @link callable } .
returns a {
checks if the given object is a {
returns a { @link <unk> } instance for the given { @link type } .
{ @inheritdoc }
returns a set of all the members of the injection point .
sets the {
returns a new {
factory method for creating a new { @link key } from the given { @link method } .
returns a new {
returns a new {
creates a key for the given type and annotation types .
creates a key for the given type and annotation types .
returns the {
returns a new {
returns a new {
<p > <unk> . < / p >
binds the given type to the given type .
checks if the given { @code annotation } is a { @link <unk> } .
finds an annotation strategy for the given annotation type .
returns a list of modules from the given modules .
returns a list of modules in the given iterable .
returns a list of {
<p > <unk> . < / p >
get a list of all registered { @link <unk> } instances registered with this { @link <unk> } .
create a new { @link <unk> } with a { @link collection } of { @link <unk> } s .
/ * ( non - javadoc )
returns the list of plugins that match the given target .
returns the raw members of the current type .
convert sources from sources to message sources
formats the given string using the given format string .
format a collection of messages to a string .
formats the given message with the given arguments .
creates a formatted string with the given message and arguments .
constructs and initializes a new { @link <unk> } with the given { @link throwable cause } and { @link string message } formatted with the given { @link object [] arguments } .
convert a list to a boolean .
returns the cause of a collection of error messages .
returns a list of class names for the given qualified name .
crop the current stacktrace of the stack and crop the stack trace .
creates a new instance of the specified { @link class } .
/ * ( non - javadoc )
converts a list of class names to a list of strings .
returns the {
package private for testing
/ * helper methods
<p > <unk> . < / p >
main method .
converts a { @link stacktraceelement } to a { @link <unk> } .
converts the stack trace to an array of { @link stacktraceelement } s .
/ * package
<pre > { @code < / pre >
/ * ( non - javadoc )
create a provider for the given instance .
/ * ------------------------------------------------------------
creates a new { @link <unk> } with the given provider .
/ * ( non - javadoc )
add a { @link <unk> } to the list of processors .
/ * ( non - javadoc )
<p > <unk> . < / p >
<unk> { @link <unk> } <unk>
register a { @link <unk> } .
returns the {
try to obtain a url from the given url .
decode the given { @link bytebuf } into a { @link string } .
get a list of all registered connections .
{ @inheritdoc }
~ methods **************************************************************************************************************************************
creates a new connection to the pool .
method <unk> .
<unk> > <unk>
remove a task from the pool .
/ * <unk>
method <unk> .
initializes the thread pool .
{ @inheritdoc }
process the way of one way
<unk> method .
<unk> method .
<p > <unk> . < / p >
{ @link <unk> }
{ @link <unk> }
{ @link <unk> }
remoting synchronous call
remoting synchronous call
creates a remoting call with future .
remoting side to <unk>
<unk> remoting request
remoting side to <unk>
/ * ( non - javadoc )
creates a standalone { @link connection } .
build a connection to the server .
opens a connection to the server .
returns true if the connection is valid .
set the validation connection .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
create the channel .
waits for a close entity to be closed .
close the channel
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is called from { @link <unk> ( channelhandlercontext bytebuf list ) } .
register user processors .
register all registered { @link icommentprocessor } s .
send response if necessary
/ * ( non - javadoc )
executes the { @link <unk> ( string ) } method of the { @link <unk> } .
process the response headers .
this method is called from http : // stackoverflow . com / questions / <unk> / how - to - https - client
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
invoke a callback on the remoting server .
connect to the server .
create a new bit set .
creates a new protocol array with the given index .
converts a string to a byte array .
convert integer to bit set .
get the connection and init context .
add a new session to the pool .
stops the scheduler .
process the way of one way
process ecp request .
<p > <unk> . < / p >
remoting <unk> 同步调用
<unk> remoting request
calls the <unk> method on the remoting server .
remoting postinvoke invocation
serialize a command to the remoting server .
{ @inheritdoc }
unregister a connection from the pool .
close a parallel select connection .
--- factory method ---
performs the opening handshake
returns the value of a system property as a boolean .
deserialize a long value .
returns the default serializer for this request .
{ @inheritdoc }
log a info message .
/ * ( non - javadoc )
<unk> > <unk>
find all implementations of the given class .
returns the default serializer for this object .
/ * ( non - javadoc )
returns the value associated with the given key or the default value if not found .
removes the property with the given key from this map . if the property does not exist or has no value for the key it is removed from the map .
crc32 - <unk>
create a response object from zanata .
converts the given response response to a { @link <unk> } .
/ * ( non - javadoc )
waits for a token to be sent to the client .
creates a chained exception .
execute a digital object .
creates a new {
return the {
fire the scan .
returns the remote address for the given channel .
returns the local address of the remote channel .
returns the remote address as a string .
/ * public static string <unk> () { return <unk> . <unk> () ; }
returns a string representation of the given channel .
read the socket address from the given channel .
returns the host name of the given channel .
returns a string representation of the given socket address .
returns the host name of the given socket address .
/ * ------------------------------------------------------------
add a connection to the pool .
remove a connection from the pool .
update the connection .
<p > obtain the custom serializer for the given class . < / p >
returns the custom serializer for the given class name .
<p > obtain the custom serializer for the given configuration attribute . < / p >
gets the serializer for the given class .
start the monitoring service .
/ * ( non - javadoc )
process the way of one way
perform one way on a url .
calls <unk> to process the way .
<unk> { @link <unk> } <unk>
remoting side of <unk>
invoke the 同步调用
invoke the 同步调用
remoting side to invoke a <unk>
calls <unk> on the remoting server .
returns true if the remote address is connected to the remote address .
returns true if the connection is connected .
attempts to initialize the {
converts a byte array into a boolean .
scans the given string for the given opcode .
iterate over the socket s socket and return the result .
sets the status of this object .
/ * ( non - javadoc )
updates the payload of the payload
/ * find the sip protocol by it s ip address .
translate a single frame to a single frame .
/ * -------------------------------------------------------------------------------
checks that the next frame size is valid .
generates a md5 hash for a string .
process the <unk>
process a binary frame .
this method is called when a runtime exception occurs .
process the received websocket message .
process a data frame .
process a complete frame .
/ * ( non - javadoc )
gets the limit size of the buffer .
returns a copy of the given list of buffers .
returns a copy of the given list of buffers .
perform handshake .
/ * ------------------------------------------------------------
returns the number of bytes consumed from the given { @link bytebuffer } .
/ * -------------------------------------------------------------------------------
/ * -------------------------------------------------------------------------------
this method is used to process the incoming handshake data .
start measurement .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the error message for the given error code .
/ * ( non - javadoc )
sets the mask of the transmitter .
adds a worker to the worker hooks .
writes all the bytes in { @code <unk> } to the given { @code bytebuf } .
/ * ( non - javadoc )
this method is called by the {
waits for the completion of a lock .
returns the port element of the supplied uri .
/ * ensure that the dashboard is expired .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the connection lost timeout .
stop connection lost timer .
starts a connection lost timer .
restart a connection lost timer .
sends a connection to the pool .
closes this connection .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
this method is meant to be used by <unk>
unwraps this {
unwrap the <unk> .
read remaining bytes from the credential .
stops socket .
/ * ( non - javadoc )
/ * ( non - javadoc )
stream a urlconnection
<p > <unk> . < / p >
invokes the delegate s <code > <unk> () < / code > method .
handle a selectionkey on the websocket
/ * ( non - javadoc )
checks if the current thread is a non - null thread .
<p > <unk> . < / p >
remove a connection from the list of connections .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a websocket .
/ * broadcast the broadcast message to the client
fill all the stack frames for the given site .
transfers data from the source buffer to the destination buffer starting at the current position .
/ * ------------------------------------------------------------
starts the persistence unit .
<p > <unk> . < / p >
executes the given consumer .
retrieves the bean from the datasource . the assumption is that the bean exists in the datasource .
obtains an instance of { @link entitymanager } with the given name .
adds a <code > <unk> / code > to the store .
creates a new db instance with the given supplier .
/ * ( non - javadoc )
use { @link <unk> ( typed ) } instead .
casts a { @link linkedlist } to a { @link java . util . list } .
converts the given arguments to a list .
<p > <unk> . < / p >
gets a tuple with the specified key arguments .
returns true if the specified key is defined in the service .
<p > <unk> . < / p >
create a new {
<p > set the value of the language property . < / p >
create a new { @link <unk> } .
creates a new <code > <unk> / code > .
adds a bind variable value to the statement .
creates a new <code > <unk> / code > with the given <code > <unk> / code > .
returns a self - defined bindings for the specified modules .
returns a new <code > <unk> / code > of the specified { @link binder } . the bindings will be bound to the specified { @link <unk> } .
register a new { @link <unk> } with the given { @link modules } .
register guice modules .
returns the {
returns a self - configured version of the given class .
expression : expression
calls { @link <unk> ( httpservletrequest httpservletresponse ) } .
returns the file denoted by the given path .
returns a binding model for the given scope .
static factory method for wrapping a value of type <code > b< / code > in a { @link <unk> } .
add a tuple to this tuple .
converts the given execution context into an executor .
decodes a multipart header .
returns a list of all the types of skipped classes .
returns a list of all classes in this category .
capture stack trace information .
creates a new unit from the given group name and unit name .
factory method for creating a new { @link <unk> } based on the given parameters .
converts a map of { @link map } to a { @link set } of { @link <unk> } s .
encode a { @link string } into a { @link flow } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / st . encode . png alt = >
returns a { @link string } representation of the given json object .
creates a logger with the given name .
creates a new logger for the given class .
send a debug log message to the logger .
send a debug log message to the logger .
log a message at the trace level .
log a info message with an array of { @link string message } formatted with the given { @link object [] arguments } .
log a debug message .
log a debug message .
<p > info< / p >
<p > info< / p >
@deprecated use { @link <unk> ( string throwable ) } instead .
send a warning log message .
log a warn message with the supplied tag and arguments .
log a warning at the warn level .
send an error log message .
log an error message .
log a message at the error level .
/ * ( non - javadoc )
loads an instance of a { @link <unk> } .
shows views with the given id .
gets the dimension of the video file .
<p > <unk> . < / p >
finds the method with the given name in the superclass or null if not found .
<p > <unk> . < / p >
sets the status code of the request .
on bad request
returns the result as a result .
gets the scope of the scope .
/ * ( non - javadoc )
<p > <unk> . < / p >
converts a throwable to a proposallineitemconstraints .
returns a completionstage that will be called when an error occurs .
on a server ( e . g . http : // localhost : 8080 / <unk> )
creates a { @link <unk> } from a list of files .
create a new repository package from a directory .
creates a { @link <unk> } from a jar file .
creates a {
creates a repository from a jar file .
creates a {
executes an asynchronous post request on the configured { @link completablefuture } .
returns a new middleware that can be used to read the contents of the given { @link <unk> } .
parse the given { @link httpentity } into a { @link list } of { @link entity } s .
creates a new instance of { @link <unk> } .
creates a new { @link <unk> } instance with the given message .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new { @link collection } of { @link <unk> } .
creates a new { @link collection } of { @link <unk> } .
creates a new result with the status { @literal 200 - ok } with the status { @literal 200 - ok } .
decodes a status code and returns the result as a byte array .
creates a new { @link <unk> } instance with the given status .
sends an http response stream to the response .
creates a new result with the status { @literal 401 - unauthorized } with the given content .
create a { @link <unk> } multi { @link file } .
create a status file .
creates a new result with the status { @literal 401 - unauthorized } with the given content .
creates a new result with the status { @literal 200 - ok } with the status { @literal content - type } .
create a { @link <unk> } multi { @link file } .
<unk> content .
creates a new result with the status { @literal 200 - ok } with the given padding padding and { @link jsonnode } .
creates a new result with the status { @literal 200 - ok } with the content - type header and content - type header .
creates a new { @link result } with status { @literal 200 - ok } with the content - type header .
creates a new result with the status { @literal 200 - ok } with the status { @literal 200 - ok } .
creates a new result with the status { @literal 200 - ok } with the content - type header and content - type header .
creates a new { @link result } with status { @literal 200 - ok } with the content - type header .
created the content of a string content .
creates a new result with the status { @literal 200 - ok } with the specified padding .
create a file with the given content .
checks if the content of the given file is a file .
create a { @link <unk> } multi { @link file } instance .
writes the content of the given file to the given file .
create a new result with the given file and filename .
creates a new result with the status { @literal 200 - ok } with the content - type header .
creates a new result with the status { @literal 200 - ok } with the content - type header .
creates a new result with the status { @literal 200 - ok } with the content - type header .
creates a new result with the status { @literal 200 - ok } with the content - type header .
creates a new result with the status { @literal 200 - ok } with the content - type header .
creates a new result with the status { @literal 200 - ok } with the content - type header .
creates a new result with the status { @literal 200 - ok } with the content - type header .
creates and returns a new result with the <b > { @link <unk> } < / b > . <b > note : < / b > use { @link <unk> ( string ) } instead .
executes the given { @link string content } and returns the result as { @link result } .
executes the given { @link string content } and returns the result as { @link result } .
executes the given { @link string content } and returns the result as { @link result } .
creates and returns a new result with the <b > { @link <unk> } < / b > . <b > note : < / b > this method does not use the { @link <unk> } class .
creates and returns a new result with the <b > { @link <unk> } < / b > . <b > note : < / b > this method does not use the { @link <unk> } class .
creates and returns a new result with the <b > { @link <unk> } < / b > . <b > note : < / b > this method does not use the { @link <unk> } class .
<unk> content .
static factory method for { @link <unk> ( byte [] ) } .
checks if the given content - type is not found found .
create a { @link <unk> } multi { @link file } instance .
checks if the given file is required for the given file .
create a { @link <unk> } multi { @link file } instance .
writes the content of the given file to the given file .
creates a new result with the status { @literal 403 - forbidden } with the given content .
creates a new result with the status { @literal 403 - forbidden } with the given content .
creates a new result with the status { @literal 403 - forbidden } with the given content .
creates a new result with the status { @literal 403 - forbidden } with the given content .
creates a new result with the status { @literal 403 - forbidden } with the given content .
creates a new result with the status { @literal 403 - forbidden } with the given content .
creates a new result with the status { @literal 403 - forbidden } with the given content .
returns a { @link result } that contains the not found content found in the result .
returns a { @link result } that contains the not found content found in the result .
creates a new result with the given content and returns the result as a result .
creates a new result with the given content and filename .
creates a new result with the given content and returns the result as a result .
creates a new result with the given content and returns the result as a result .
creates a new result with the status { @literal 404 - not found } with the given content .
not use { @link <unk> ( string charset ) } but with non - ascii characters .
<unk> - <unk>
creates a new result with not { @link <unk> } and return the result .
returns { @link result } not acceptable file not found in the result .
not acceptable file .
replies if the given file is a esri shape .
not acceptable .
<p > <unk> . < / p >
checks if the given json content type is a valid content type .
creates a new instance of { @link attachment } from the given { @link file } .
creates a new instance of { @link <unk> } .
checks if the content of the given file is a mime type .
creates a new instance of { @link <unk> } .
writes the content of the given file to the given file .
run a string content .
returns a { @link result } representing the content of the specified { @link jsonnode } .
returns the result of { @literal content - type } found in the result .
creates a { @link result } from the given { @link file } .
checks if the content of the given file is a file .
converts the given { @link path } to a { @link <unk> } .
writes the content of a file to a file .
returns a static { @link content } instance with the given error code .
returns a { @link <unk> } with the given error encoding .
returns the { @link <unk> } represented by the given { @link file content } .
returns the {
returns a new instance of { @link <unk> } .
gets the static {
returns the { @link <unk> } represented by the given { @link path } .
get the header field with the given charset .
returns the header of the header field .
creates a header with the size of the header field too large .
creates a new instance of {
creates a header with the size of the header field too large .
creates a header with the size of the header field .
creates a header with the size of the header field too large .
creates a new result with the given content and returns the result as { @link <unk> } .
creates a server error with the given content .
creates a new result with the given content and returns the result as { @link <unk> } .
creates a new server error with the given text content .
creates a new server error with the given text content .
creates a new { @link <unk> } with the given content .
creates a server error with the given content .
get the content of a string content .
performs an http post on the given url .
creates a new result with the given content and returns the result as { @link result } .
create and return a multi - part part of the file .
checks if the content - type header is required .
create and return a multi - part part of the file .
create and return a multi - part part of the file .
convenience method to abort a url .
<p > redirect . < / p >
<p > redirect . < / p >
returns a result of redirect to the contents of a url .
<p > redirect . < / p >
<p > redirect . < / p >
<p > redirect . < / p >
redirect to the given url .
redirect to the given url .
redirect to the given url .
permanent constructor . see {
/ * ( non - javadoc )
returns the username for the given id .
<p > <unk> . < / p >
show a unique slide .
creates a new {
/ * ------------------------------------------------------------
creates a <unk> .
disposes a connection .
returns a { @link <unk> } for the given { @link connection } .
/ * ( non - javadoc )
returns a new { @link server } instance for router router .
creates a new { @link net . <unk> . router . <unk> } instance with the given { @link mode } .
creates a new { @link net . dv8tion . jda . core . router . <unk> } instance with the given { @link mode } .
tag :: <unk> []
returns a { @link string } representation of the given { @link object } .
converts a { @link jsonnode } to an { @link object } .
parses a json string into a json node .
parses the given { @link inputstream } into a { @link jsonnode } .
sign a message with rsa private key .
creates a new { @link <unk> } with the given parameters .
@deprecated use { @link <unk> ( string ) } instead .
creates a { @link url } from the given parameters .
returns an array of { @link annotation } s that correspond to the specified annotation .
<unk> <p > <unk> / p >
<p > <unk> . < / p >
returns a canonical path for the given path .
displays the hello response .
converts a list of constraint constraints to a list of { @link constraint } s .
returns a set of constraint column names for a materialized constraint .
takes a collection of groups and extracts the constraint constraint .
executes an sql query synchronously with the given transaction .
executes the query .
obtains an instance of { @code duration } from a temporal amount . <p > this returns a { @code duration } based on the specified { @code amount } . <p > the returned { @code duration } is one of the following conventions : <ul > <li > { @code duration } = { @code - > } { @code
/ * ( non - javadoc )
returns a {
constructs a {
<p > checks if an array of classes can be assigned to the specified class array . < / p >
convert a string to a uri .
wandelt den angegebenen monetaryamount in einen geldbetrag um . um die anzahl von objekten gering zu halten wird nur dann tatsaechlich eine neues objekt erzeugt wenn es sich nicht vermeiden laesst . <p > <unk> . < / p >
test if a table is a streamed primitive .
displays the routing context .
/ * ( non - javadoc )
convert a { @link linkedlist } to a { @link <unk> } .
{ @link <unk> }
@deprecated use { @link <unk> ( string string ) } instead .
adds a value to the flash .
/ * ( non - javadoc )
create an instance of { @link <unk> } that wraps the given { @link <unk> } .
transforms an annotation into an { @link <unk> } .
associates the given {
returns a { @link list } containing the elements of this { @code provider } sorted by the specified { @code provider } .
wrap a { @link <unk> } in a { @link <unk> } with the given handler .
/ * ( non - javadoc )
returns a new { @link binding } that binds to the given provider .
creates a new instance of { @link <unk> } .
static factory method for <unk>
gets the list of languages supported by the application .
<unk> <unk> <unk>
<unk> <unk> <unk>
returns a {
<unk> > <unk>
/ * <unk>
apply the evolution database to the <unk> database .
apply the specified <unk> to the <unk> file .
/ * ( non - javadoc )
creates a new {
create a new {
create a new {
create a new {
create a new instance of { @link <unk> } .
load a { @link <unk> } with the given { @link <unk> } .
factory method to create an instance of { @link <unk> } .
encodes the given cookie into a base - 32 string .
encodes the specified cookies into a single string .
encodes the given cookies into a base64 encoded string .
<p > <unk> . < / p >
<p > <unk> . < / p >
creates and registers the { @link entitymanager } using the { @link <unk> } .
parse json .
tag :: hello - json []
tag :: hello - json []
/ * public static final <unk> () { return null ; }
given a { @link flow flow } compute the optimal { @link <unk> } .
creates a new {
binds the error request to the model .
binds the specified request to the given request .
creates a new dto binding .
/ * ( non - javadoc )
marshals the given data .
/ * ( non - javadoc )
get the constraints for constraint violations .
creates a new { @link form } of this { @link map } .
<p > bind . < / p >
/ * ( non - javadoc )
converts a list of { @link object } s into a { @link list } of { @link object } s .
/ * ( non - javadoc )
returns a list of errors that can be used to render errors .
returns a json representation of the given sqs messages .
returns the boolean value of the specified field . if the field is not a set then this method throws an { @link illegalargumentexception } .
gets the field .
factory method to create a new instance of this class .
gets the value of the specified locale .
/ * ( non - javadoc )
creates a new { @link <unk> } for the given { @link <unk> } .
get the configuration for the given key .
<p > <unk> . < / p >
verify the luhn check .
parses the given { @link string } as an instance of the specified class .
<unk> > <unk>
converts an object to a string .
get field .
converts a type descriptor to a string .
<p > registers . < / p >
converts the given { @link class } to a { @link <unk> } .
<p > <unk> . < / p >
encodes the given cookie into a cookie header value .
encodes the set of cookies into a set of cookies .
set cookies for cookies set .
encodes cookies into a set of cookies .
split the given header into a set of cookie objects .
creates a new <code > <unk> / code > object from the given request .
creates a new { @link result } from an { @link inputstream } .
returns the {
create a new { @link result } from the given { @link path } .
add the given base path to the path .
create a new { @link <unk> } from the given { @link path } .
render the given file as a file .
create a new { @link <unk> } from a { @link file } .
create a new result with the specified file and file name .
creates a new { @link <unk> } with the given source and content type .
creates a new { @link payload } from the given { @link byte [] } .
returns the node values of the given node in the given path .
casts a { @link linkedlist } to a { @link java . util . list } .
<unk> > <unk>
sort an array of {
given a { @link column } return a { @link observable } of { @link <unk> } s .
creates a new { @link <unk> } instance .
checks if the given member is accessible .
<p > <unk> . < / p >
returns a list of {
/ * package private
compares two parameters .
gets the primitive number of primitive types stored in dest class .
get the total transformation cost for the given source class .
gets the transformation costs from the source class object .
creates a new <unk> .
gets the message .
/ * ( non - javadoc )
creates a { @link <unk> } for the given { @link properties } .
returns a new path relative to the specified url .
creates a { @link url } from the given parameters .
build a database url .
creates a pipe from the given parameters .
creates a new { @link <unk> } instance .
creates a database in memory
creates an immutable map containing the results of applying the given function to the given value .
creates an { @link immutablemap } with the given key and value .
creates a new instance of {
returns a copy of the specified {
creates a new instance of <unk> .
sorts the given array using the specified comparator .
merge the specified portion of the given array using the specified comparator .
emit a list of methods by contract .
emits the index of the given class array .
creates a new instance of { @link <unk> } .
create a new instance of <unk> .
create a new {
creates a { @link list } of { @link route } .
creates a proxy for a class .
add the specified url to the classpath .
/ * ( non - javadoc )
<p > invoke . < / p >
/ * ( non - javadoc )
load an argument at the given index .
parses the arguments .
emit a field instruction .
todo ( <unk> )
/ * ( non - javadoc )
create an array of parameters for the given parameters .
f743 - <unk>
coerce an expression to a boolean .
generates method body .
<unk> > <unk>
coerce an expression to the end of the <unk>
wrap an exception thrown
returns a new instance of { @link <unk> } instances .
set the { @link superclass } hierarchy for the given { @link class } .
sets the type of callbacks .
<p > sets the minimum value of the callback . < / p >
creates a new instance of the specified class using the specified arguments .
find all methods of the given class that implement a superclass method .
filter constructors .
checks if the given class is an interface or not .
creates a new instance of the given class using reflection .
<p > <unk> . < / p >
creates a proxy factory for the given class and interfaces .
creates a proxy for the given class and interfaces .
set the annotations of this class .
/ * ( non - javadoc )
add a method to this class .
returns an array of methods for the given class .
returns the number of times v {
set the naming policy .
sets the arbitration strategy to be used .
<p > <unk> . < / p >
returns a list of all methods of the given class that match the given set of methods .
resolves a child path .
load settings from a file .
sets the host header .
returns the {
creates a new http request with the given method and url .
creates a new http request with the given method and url .
creates a new http request with the given method and url .
creates a new http request with the given method and url .
creates a new http request with the given method and url .
creates a new http request with the given method and url .
creates a new http request with the given method and url .
creates a new http request with the given method and url .
creates a new http request with the given method and url .
returns a new {
/ * ------------------------------------------------------------
sets the cookies in the cookie header .
adds a query parameter to the request .
文件表单项<br > 一旦有文件加入，表单变为multipart / form - data
set attributes of this controller .
adds a query string parameter to the request .
set the { @link url } to use for this { @link query } .
returns the url as a url string .
returns a string representation of the url of the given url .
set the http authentication header .
set the host header .
sets the http connection to the console .
sets the http method to be applied to the server .
sends a keep - alive request to the client .
send the http request to the http client .
/ * ( non - javadoc )
adds the specified { @link function } to the response .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the named context property .
adds an error message to the list of errors .
removes a range from the end of the handler .
get the number of jobs currently in the <unk> .
puts the exception table into the given bytevector .
collect request interceptors .
returns a list of {
collect results object .
/ * example
read the nested {
/ * ( non - javadoc )
attempts to set the property on this bean .
returns true if an index property is detected .
gets the bean index property .
sets the index property .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
reset the journal .
/ * ( non - javadoc )
gets the bean reference .
/ * ( non - javadoc )
returns the class descriptor for the given table reference .
returns a { @link <unk> } for the given { @link <unk> } .
returns the class name of the given table .
register a table reference .
adds a parameter to the database .
get the entity descriptor for the given entity name
helper method to get a { @link <unk> } from a { @link <unk> } .
/ * ( non - javadoc )
add a locale to the hints list .
/ * ( non - javadoc )
/ * ( non - javadoc )
finds the <unk> attribute of the given servletcontext .
<p > <unk> . < / p >
format the uploaded files for the request .
{ @link <unk> }
converts the property name to the corresponding column name .
converts a column name to a property name .
<p > <unk> . < / p >
<unk> > <unk>
store object value into prepared statement .
returns a new instance of { @code t } .
returns the values contained in this object .
create a wrapper around a wrapper .
creates a new array of the specified size .
<p > <unk> . < / p >
creates a new instance of the given class .
add a base path to a base path .
converts separators to a system separator string .
returns the index of the last windows extension .
gets the full path of a file .
splits the given filename into an array of strings .
removes leading and trailing separators from the path .
gets the relative path of a base path .
/ * ( non - javadoc )
adds a { @link <unk> } annotation to the saga .
adds the given { @link runnable } to the run tasks .
sets the producer config for the action .
register a { @link wavetype } action action .
<p > start . < / p >
configure the {
/ * ( non - javadoc )
exclude all jar files from the classpath .
adds a list of jar files to be included in the classpath .
includes inclusion in the classpath .
exclude all entries from the classpath .
<unk> > <unk>
scan jar files .
scans the classpath for classes and directories .
/ * ------------------------------------------------------------
extracts the contents of a classpath entry .
return the bytecode of a method name .
scans the classpath for the scan .
expand the classpath .
<unk> > <unk>
<p > replaces all of the characters in { @code str } with the specified { @code string } . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the {
get or create a new scope .
adds a scope to the given scope .
creates the message headers for the given message .
returns the file info .
resets the parts of a multipart .
adds the string content to the file .
/ * private void <unk> ( final part ) { return null ; }
/ * private static void <unk> ( final part ) { if ( x == null ) { if ( <unk> ! = null ) { if ( <unk> ! = null ) { if ( <unk> ! = null ) { if ( <unk> == null } ) { if ( <unk> == null ) { if ( <unk> == null ) {
adds attachment to the email .
adds attachment to the email .
creates a new {
encodes a byte array into base64 .
decodes a byte array into a byte array .
encodes a byte array into base64 .
decode from base64 .
parse a csrf token .
returns a list of tokens that can be accessed by the disk .
returns true if the given token is a valid token .
checks if the request cookies match the request token .
creates a new instance of a <unk> .
creates a copy of the source object of the given source object .
this method must be called by the layout engine .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
instantiate a set of scopes for a given type .
creates a new instance of the given class .
register a new scope with the given scope .
returns the bean definition for the given name .
lookup the bean definition factory .
lookup a bean definition for the given name .
create a bean definition for the given interface .
creates a bean definition for the given type .
registers a bean node .
use { @link <unk> ( class consumer consumer ) } instead .
creates a bean definition for the given type .
registers a bean with the given set of alternative names .
<p > <unk> . < / p >
removes the bean with the given name .
<p > <unk> . < / p >
<p > <unk> . < / p >
{ @inheritdoc }
convert a { @link <unk> } to a { @link <unk> } .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
registers a class with the given parameters .
<p > <unk> . < / p >
/ * ( non - javadoc )
<p > <unk> . < / p >
merge properties from properties .
convert props to map
parses the environment variable .
sets the current thread s context class loader .
{ @inheritdoc }
<! -- start generic documentation -- >
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
creates the canonical request for the action .
/ * ------------------------------------------------------------
returns the java version number of the java version .
generate a jump to the operand stack .
check that the argument index is a valid method index .
gets the mutator for the specified field .
<p > <unk> . < / p >
load method argument class .
load special method arguments
load method arguments .
load virtual method arguments .
load the set of load instructions for the given method .
store the load method into the local load operation .
returns true if the given opcode is known to be known .
<blockquote > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> >
prepare the return value for the given method .
create a string representation of a method .
generate the ldc instruction .
/ * ( non - javadoc )
/ * public void dup () { return get () ; }
returns true if the given pattern matches the pattern .
<unk> > <unk>
resolves the specified action path .
returns the mime type of the given http content type .
<unk> > <unk> > <unk> / code > <unk> > <unk> > <unk> / code > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> >
extract the charset from the given content - type header .
returns the mime type of a multipart .
returns true if the given flags are empty .
<unk> > <unk>
check if the request is a multipart content .
<p > <unk> . < / p >
checks if the authorization header is not null .
sends a http authorization header . <p >
---------------------------------------------------------- getters and setters end
/ * ( non - javadoc )
returns the request cookies for the given request .
returns a string representation of the request body .
gets the request body from the request .
returns the context path for the given request .
gets context path .
create a fully - rewritten context path with parameters derived from the given url parameters .
returns the object name for the jawr context
returns the value of the specified attribute in the request .
returns the value of the parameter with the specified name in the page context .
resolve event from request .
sets the scope attribute of the given scope .
removes a scope from the given scope .
/ * ( non - javadoc )
returns a string representation of the url of the given url .
get request parameter value from request parameter .
/ * ( non - javadoc )
parses the request parameters into a map of parameters . <p >
checks if the given request is a post request .
<p > <unk> . < / p >
set the body to the console .
render the body of the jsp fragment .
render the body of the jsp fragment .
sets an attribute in the page context .
tag a scope attribute .
invokes { @link <unk> ( view invocationhandler ) } for all annotated methods .
call this method to destroy all the destroy methods .
creates a new bean from the bean definition .
get the bean metadata
create a new httpservletrequest .
{ @inheritdoc }
/ * ( non - javadoc )
adds a value to the list of values .
/ * ( non - javadoc )
/ * ( non - javadoc )
put a value in the map .
add a property .
returns the number of profile keys contained in this profile .
add a profile property .
get the metadata for the specified profile .
read properties from active profiles .
resolves the macros in the given url .
extract properties from active profiles .
converts an array of bytes to an integer .
converts the given password into a byte array
generate a ansi password hash .
reads the contents of a file into a file .
/ * ( non - javadoc )
/ * ( non - javadoc )
初始化<br > <unk> > <unk>
初始化<br > <unk>
returns the { @link <unk> } for the given { @link <unk> } .
detect and registers an alias .
methode permettant de charger toutes les <unk>
<p > <unk> . < / p >
/ * ( non - javadoc )
<p > <unk> . < / p >
<p > <unk> . < / p >
returns the { @link alias } of the { @link <unk> } .
returns the method name for the given method name .
creates action runtime action .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
<p > <unk> . < / p >
to boolean .
to boolean .
<p > returns the integer value of the specified type . < / p >
cast a object to an integer .
converts value into integer or returns default value if conversion is not possible .
returns a long value for the given type .
cast a object to a long value .
cast a object to a long value .
gets attribute value as <code > float< / code > . if there is a { @link converter } registered for the attribute that converts from class <code > s< / code > to class <code > java . lang . float< / code > given the attribute value is an instance of <code > s< / code > then it will be used
<unk> > 如果给定的值为空，或者转换失败，返回默认值<br > 转换失败不会报错
cast a object to a float object ( reference type )
returns the double value of the array converted to double .
<unk> > 如果给定的值为空，或者转换失败，返回默认值<br > 转换失败不会报错
<unk> > 如果给定的值为空，或者转换失败，返回默认值<br > 转换失败不会报错
returns an <code > <unk> / code > for the specified <code > value< / code > .
<p > <unk> . < / p >
cast a object to a short object ( reference type )
returns a { @link java . util . character } converted to a { @link java . util . converter } .
cast a object to a character object .
<p > converts the specified character to the specified character . < / p >
returns the byte converted to bytes .
cast a object to a byte .
cast a object to a byte object ( reference type )
convert this event type to long array .
<p > <unk> . < / p >
convert the value to a class .
returns a { @link java . math . biginteger } converted to a { @link biginteger } .
converts value into integer or returns default when conversion is not possible .
gets attribute value as <code > java . math . bigdecimal< / code > . if there is a { @link converter } registered for the attribute that converts from class <code > s< / code > to class <code > java . math . bigdecimal< / code > given the attribute value is an instance of <code > s< / code > then
<unk> { @link bigdecimal }
/ * ( non - javadoc )
/ * public void <unk> ( string [] args ) { <unk> > <unk> = new <unk> () ; }
/ * ( non - javadoc )
/ * ( non - javadoc )
set the target proxy into the proxy .
visit an annotation .
----- public static methods -----
/ * ( non - javadoc )
{ @inheritdoc }
gets the expected type of the given type .
find the { @link annotation } of the given { @link class } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the file extension contains a file extension .
/ * ( non - javadoc )
copy the bootstrap methods .
get or set the { @link <unk> } represented by this { @link <unk> } .
put constant pool constant pool .
put methods .
rehashes the contents of this map into a new entry .
adds an entry to the end of the list .
creates a constant ref constant .
creates a symbol uninteresting structure for given owner .
adds a type to the constant pool of the symbol table .
add a new integer member to the constant pool .
adds a type to the constant pool of this symbol table .
adds a new integer value to the constant pool of the given index .
adds a type to the constant pool of the symbol table .
adds a long value .
adds a type to the constant pool of the symbol table .
adds a constant name and value to the constant pool of the symbol table .
adds a type to the constant pool of the symbol table .
adds a new integer value to the constant pool of the symbol table .
adds a type to the constant pool of the given type .
adds a type to the constant pool of the given type .
add a dynamic constant .
add a dynamic dynamic ref .
adds the type dynamic type to the given bytecode type .
adds a dynamic reference to the constant pool of the named type .
adds a type to the constant pool of this symbol table .
adds a new integer value to the constant pool of the given index .
add a method to the bootstrap method .
add a symbol to the bootstrap method .
adds the specified type to the given bytecode type .
adds a type to the internal buffer .
<unk> > <unk>
returns true if the given string is a valid character .
returns true if the given string is a valid uri .
removes all of the mappings from this table .
<unk> > <unk>
removes the mapping with the specified name .
returns the value associated with the given key or null if not found .
returns the index of the entry with the specified name .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the name the old value is replaced by the specified value .
/ * ( non - javadoc )
returns a list of all the entries in this map .
increases the capacity of the buffer if necessary to ensure that it can hold at least the number of elements specified .
/ * ( non - javadoc )
append a char buffer to the buffer
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
create the method call .
create proxy method .
encodes the given path into a json object .
push a field .
/ * ( non - javadoc )
create a new <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
retrieves the double value of the specified attribute .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a map of field names for the given {
returns an array of <code > <unk> / code > that correspond to all the fields of this <code > <unk> / code > .
{ @inheritdoc }
{ @inheritdoc }
test the scalability of a consumer .
converts { @link <unk> } to { @link <unk> } .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
<p > <unk> . < / p >
reads a property object from the given object .
returns the length of the given object .
composes the given email with the given email .
prepares the service document .
replaces this buffer in the buffer with the given buffer .
rehashes the contents of this map into a new larger map .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
copies all of the mappings from the specified map to this map .
removes all of the mappings from this map .
append a buffer to the buffer .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
sets the length of the buffer .
append a buffer to the end of the buffer .
/ * ------------------------------------------------------------
opens a stream to the specified output stream .
write a { @link <unk> } to the stream .
encode a string to a string .
returns the string associated with the given key as a string .
returns the value mapped by {
returns the value mapped by {
retrieve a double value .
returns the value of the <code > name< / code > property as a <code > double< / code > . if no such property can be found <code > null< / code > is returned .
returns the value mapped by {
returns the value mapped by {
decodes a base64 encoded string .
retrieves the value associated with the given key from the map . if there is no value for the key then the default value is returned .
gets the prefixed key and parse it to an array .
returns the integer value associated with the given key as an integer .
returns the value associated with the given key as a long .
returns the value associated with the given key as a double .
returns the value associated with the given key as a float .
returns the boolean value for the specified key . if the key does not exist or the value for the key is not found in the map the default value is returned .
returns the value mapped by {
gets the prefixed key and parse it to an array .
gets the prefixed key and parse it to an array .
get a value from the map .
adds a header to the response .
adds a header to the response .
adds a header to the response .
returns the { @code null } value for the given key .
adds a header to the response .
returns a list of all the classes in the given folder .
creates a new { @link <unk> } with the given name .
creates a folder in the specified folder .
receive an array of { @link <unk> } s from the given filter .
receive an array of { @link email } from the given filter .
receive an array of { @link email } from the given { @link <unk> } .
receives a { @link <unk> } from a { @link <unk> } .
on flush batch .
/ * ( non - javadoc )
lookup parameter by name .
returns the value of the parameter with the given name .
this method parses a sql statement .
<p > alias . < / p >
<p > <unk> . < / p >
validate violations .
add a new violation to the list of violations .
checks to see if the tag is valid .
/ * ( non - javadoc )
get raw content of the file .
read target object from source stream .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
process the <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new configuration from a host .
add an email address to this address .
convert a string to a email address .
sets the reply to reply to message .
sets the reply to reply to the internet
sets the reply to reply to message .
add an email address to this email address .
add a cc recipient address .
calculates the ***********************************************************************************
sets the subject to the subject .
returns the mime type of the given filename .
creates a new email message with the given subject and encoding .
creates a new { @link <unk> } with the given name and body .
设置一个header<br > <unk>
sets the response headers .
set the message headers .
<p > store a list of existing attachments . < / p >
<p > uploads . < / p >
/ * ( non - javadoc )
adds an attachment to the builder .
add an embedded server attachment .
returns an array of { @link emailaddress } objects representing an array of { @link internetaddress } s .
get the value of a system property .
get boolean value .
retrieves a system property as an integer .
returns the value of the property with the specified name or the defaultvalue if not found .
/ * ( non - javadoc )
/ * ( non - javadoc )
append a new element to the buffer .
encodes a byte array into a byte array .
append a buffer to the buffer .
returns true if the argument is a valid log type name .
/ * package
iri expansion algorithm
/ * public void <unk> ( string alias ) { return <unk> ; }
/ * ( non - javadoc )
siehe syntaxelement :: <unk> ()
returns the result of evaluating the result path .
/ * ------------------------------------------------------------
returns the short name of the last dot after the last slash .
returns the index of the first slash in the string .
remove the numeric suffix from the given string .
returns the name of the class that matches the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the table name for the table .
validate and return the name of the generated schema .
<p > <unk> . < / p >
resolve column descriptors .
<p > <unk> . < / p >
quote a string if it is required .
computes the weight of the two vectors
compact the array .
weighted edit algorithm
compact the array .
weighted edit distance .
returns the key - value pairs in the blowfish table
/ * <unk>
/ * ( non - javadoc )
convert a byte array to a long .
<p > parse a character . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
parses the email address and returns the internet address .
parses the email address and returns the internet address .
parses the email address and returns a {
build the patterns .
construct a <unk> object from a string .
returns the first key tag of the given key .
<p > removes a substring from the specified string . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
encrypt a file .
compress a file .
<unk> > <unk>
<p > zip . < / p >
list the files in a zip file .
<p > unzip . < / p >
/ * --- public methods ---
/ * --- public methods ---
get a fielddescriptor .
/ * ( non - javadoc )
returns the { @link propertydescriptor } for the given property name .
/ * ( non - javadoc )
returns the { @link <unk> } for the given arguments .
sets the name of the action output to the given value .
sets the locale for the specified locale .
returns the { @link locale } object for the given request .
/ * ( non - javadoc )
<unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> >
------------------------------------------------------------------------ class implementation
compute the size of the named annotation .
puts the annotation vector into this writer .
/ * package private
/ * package private
returns true if all profiles are supported by this instance .
little - endian or intel format .
hashes a byte array using murmurhash3 .
decode the input stream to a byte array .
get the interfaces implemented by this class .
accept an attribute .
reads the module attribute .
reads a module reference frame .
reads the method .
read code .
reads a label and returns the corresponding label .
creates a label for the given offset and labels .
creates a label for debug label .
read the annotations of the given type .
get the type annotation for the type annotation .
/ * check the type of a type annotation .
reads the parameter annotations of a parameter .
reads the annotation values of the annotation descriptor and returns the index of the annotation .
reads an annotation value .
visit the implicit first frame .
reads the stack frame from the stack frame .
visit the implicit type information .
returns the offset of the first attribute of the array .
read index attribute .
reads an attribute from an array of attribute s attributes .
reads a 32 - bit integer from the given byte array at the given offset .
reads a 64 - bit integer from the stream at the specified index .
reads the constant pool entry for the given index .
read the constant pool entry .
reads a utf - 8 encoded string from the stream .
get the constant pool constant .
reads a primitive constant pool object . <i > this method is intended for { @link <unk> } < / li > <li > <i > <unk> / i > <i > int< / i > is <i > <unk> / i > and <i > <unk> / i > <i > <unk> / i > <i > <unk> / i > <i >
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
returns all the constructors in the class under inspection .
returns the matching constructor .
get the list of <code > { @link <unk> } < / code > for the specified <code > <unk> / code > .
/ * ( non - javadoc )
returns the current request .
<unk> > <unk>
convert an array to an array .
converts the given primitive array value to an array of type { @code long [] } .
{ @inheritdoc }
commit file .
apply a search path to the search path .
delete file .
recursively searches the contents of the specified directory recursively .
<p > returns the list of parameters associated with the specified {
<p > <unk> . < / p >
checks if the given consumer matches the given consumer .
/ * ( non - javadoc )
add a path to the source path .
resets the source file to the initial state .
open the next file .
returns a list of all the files in this directory .
initialize file .
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
returns the { @link <unk> } annotation for the given { @link class } .
resolves the bean with the given name .
write a bean name to a java bean type .
checks if a bean has been annotated with { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the type of the specified type .
returns the class name of the given type .
returns the descriptor corresponding to the given return type .
gets the argument types .
returns the return type of the given method descriptor .
returns the type name for the given type .
returns the name of the class .
returns the descriptor corresponding to a constructor .
returns the descriptor corresponding to the given return type .
returns the descriptor corresponding to the given method .
returns the descriptor corresponding to the signature .
returns the size of the stack .
returns the argument types for the given method descriptor .
https : // github . com / asm / asm / asm / java / asm / jls / asm / jls / asm / asm / java / asm / java / java / org / apache / org / java / asm / jls / asm / jls / asm / java / java / asm / asm / java / java
/ * ( non - javadoc )
/ * ( non - javadoc )
commits a transaction .
/ * ( non - javadoc )
visible for testing
returns the resource for the given resource type .
push a comma - separated list of comma separated values .
write a name .
write an attribute .
write a string to a json string .
converts a unicode character to a unicode character .
<p > <unk> . < / p >
sets the { @link <unk> } level .
<p > <unk> . < / p >
checks if a tag is matched .
<p > <unk> . < / p >
checks to see if the tag is inside another tag region .
returns true if the specified value is acceptable .
register a pseudo function type .
implementations for pseudo - functions .
{ @inheritdoc }
visit all of the matched values .
visit a method .
/ * ( non - javadoc )
creates the static initializer block .
creates the proxy constructor .
get method param names .
/ * package private
returns a list of { @link <unk> } s for the given { @link <unk> } .
returns the index of the first occurrence of the specified { @code x } or { @code - 1 } .
returns the index of the last element in the array .
returns the index of the last element in the array .
returns a string representation of the given style .
/ * ( non - javadoc )
visit the bytecode of a class .
returns a byte array representation of this field .
utility method to replace the asm instructions from a byte array file .
get attribute information .
visits a method instruction .
creates a constant meta constant .
create a new <unk> with the given name and descriptor .
creates a new constant pool entry .
visits a method instruction .
returns the common super class of the given type .
register default values .
registers a converter with the given type .
returns the parameterized type of the given class .
{ @inheritdoc }
creates a proxy using the proxy host and port .
<p > <unk> . < / p >
set proxy settings .
returns the total number of children of this transaction .
get the number of threads currently running in a thread group .
erzeugt eine <unk> <unk> .
erzeugt eine <unk> <unk> .
returns the current context .
erzeugt eine <unk> <unk> .
factory method to create a rollback transaction .
{ @inheritdoc }
f743 - <unk>
/ * ( non - javadoc )
<unk> <unk> .
creates a new instance of { @link <unk> } .
enlist this <code > <unk> / code > with the given <code > <unk> / code > .
/ * ( non - javadoc )
{ @link <unk> ( object object ) }
called by the transaction manager after a transaction has been removed .
registers a collection of resource managers .
/ * ( non - javadoc )
rolls back the resource manager .
creates a new proxy object for the given target class .
append the given method name to the file .
continue a { @link java . lang . reflect . <unk> } .
encodes a byte array into base64 format .
aligns left and right padding with spaces .
formats a long value to a human readable string .
returns a string representation of the given value .
converts a camel - case string to camel case .
converts a string to lower camel case .
<unk> > <unk>
converts tabs to spaces .
escapes a string so that it can be properly escaped .
<p > <unk> . < / p >
returns true if {
traverses a bean definition .
returns the bean for the given type .
populate bean .
registers a bean with the given name .
this method initialises the bean definition based on the given definition definition .
registers methods annotated with { @link <unk> } and { @link <unk> } .
<p > <unk> . < / p >
<p > <unk> . < / p >
initializes the bean for the given type .
/ * ( non - javadoc )
add a { @link <unk> } to this { @link <unk> } .
<unk> > <unk> { @link <unk> ( string object ... ) }
returns a property of the given bean name .
shuts down all connections .
creates a { @link properties } object that can be used to configure the javamail { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a java logging level into a java . util . logging level .
{ @inheritdoc }
<! -- start generic documentation -- >
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
ends the end of the node .
create a { @link element } from a { @link tag } .
{ @inheritdoc }
remove the last child node if it is empty .
returns the parent node of the given tag name .
returns the top - level tag of the parent node .
returns the text of a node .
{ @inheritdoc }
returns the index of the argument .
/ * ( non - javadoc )
returns the count of arguments for the given method .
<unk> . <unk>
<unk> > <unk>
generate a call to the delegate object .
generate a call to the delegate object .
<unk> <unk> <unk>
write the security information for the given method .
creates the stack for the top of the stack
checkstyle : off
method <unk> .
parse a semicolon separated list of { @link <unk> } s .
sets the value of the query parameter to the given value .
<p > <unk> . < / p >
calculate the amount of bytes from the request .
iterate over the collection of items .
<p > <unk> . < / p >
/ * ( non - javadoc )
replace all occurrences of a string with another string .
<p > replaces each substring of the string with the specified char removed . < / p >
<p > <unk> . < / p >
replace all occurrences of a string with another string with another string .
<p > replaces all occurrences of a string with another string . < / p >
<p > replaces all occurrences of a string with another string . < / p >
<p > replaces all occurrences of a string with another string . < / p >
replace all occurrences of a string with another string .
<p > <unk> . < / p >
<p > <unk> . < / p >
returns true if the specified string is { @code null } .
checks if the string contains only whitespace characters .
returns true if the string contains only whitespace .
converts an array of objects to an array of strings .
<p > capitalizes the first character of a string . < / p >
<p > <unk> . < / p >
<strong > [ icu ] < / strong > returns the substring of the given path between the specified path and the specified toindex .
check to see if a string is a substring of the specified substring .
splits a string into an array of strings .
create an array of strings from a string .
returns a string representation of the words in a string .
returns the index of the first occurrence of the specified character in the specified string starting at the specified index .
returns the index of the first occurrence of the specified character starting at the specified index .
returns the index of the first occurrence of the specified string ignoring case .
returns the index of the last occurrence of the specified string ignoring case .
returns the index of the last occurrence of the specified substring within the source string ignoring case .
returns the index of the first occurrence of the last character in the string .
returns the index of the last occurrence of the specified character at the given index .
returns the boolean index of the first occurrence of the specified substring starting at the given index .
check if a string ends with the specified character .
counts the number of occurrences of needle in the string up to the specified string .
returns the index of the last occurrence of the specified string ignoring case .
returns <code > true< / code > if the given <code > string< / code > starts with the given <code > <unk> / code > ignoring case .
replaces all occurrences of a string with another string .
replace all occurrences of a string with another string .
returns the index of the first occurrence of <code > source [ 0 ] < / code > .
<p > <unk> . < / p >
<p > checks if a string starts with a given string . < / p >
/ * ------------------------------------------------------------
<p > checks if a string ends with a given string . < / p >
check if the given string ends with one of the given strings .
returns the index of the first occurrence of the specified character in the specified string .
removes the end of a string from the beginning of the string .
removes the specified character from the beginning of the string .
<p > removes the specified character from the string . < / p >
<p > removes the specified character from the specified string . < / p >
<p > removes all of the specified character from the given string . < / p >
trims an array of strings .
trims the array of strings .
removes leading and trailing whitespace from string .
<p > interns all of the strings in an array . < / p >
trim leading and trailing whitespace from string .
trim leading and trailing white spaces .
<p > returns an array of <code > <unk> / code > objects in the specified <code > <unk> / code > . < / p >
returns an array of {
<p > joins the elements of a collection into a single string . < / p >
<p > joins . < / p >
<unk> > <unk>
check if a string is a substring of the specified character .
surround the given string with the given prefix .
<p > prefix . < / p >
<p > suffix . < / p >
returns the substring of the given string after the given string .
returns the substring of the given string after the first occurrence of the given string .
gets the suffix from the given string .
removes the suffix from the filename .
<p > <unk> . < / p >
summarize strings .
this method checks if the given string is a valid character .
<p > read . < / p >
returns the specified number of times a given number of times .
returns a string representation of the given string .
<p > <unk> . < / p >
implements { @link <unk> ( string ) } .
truncate string .
strips illegal characters from a string .
removes leading and trailing quoted string .
converts a byte array to a hexadecimal string .
do if not null .
converts a string to a byte array .
encodes the given string .
/ * ( non - javadoc )
append a buffer to the buffer .
makes the given visitor visit this annotation .
visit an annotation of the given type .
visit an annotation .
returns the { @link <unk> } for the given type .
registers a kryo instance .
builds a { @link <unk> } for the given class .
<p > <unk> . < / p >
from interface <unk>
/ * ( non - javadoc )
creates a new instance of the given class .
<p > merges the target class with the specified target interface . < / p >
build the <unk> .
inject target into wrapper .
returns an array of {
detect the correct database routine .
determine the type of the database connection .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
write len bytes to the buffer .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a { @link <unk> } value .
serializes this object to a byte array .
writes the given file to the output directory .
<unk> > <unk> >
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
returns a string representation of the argument string .
returns a list of arguments in the given order .
returns a string representation of this return type .
/ * ( non - javadoc )
register default converters .
registers a converter for the given type .
gets a converter for the given type .
<unk> > <unk>
<p > convert . < / p >
returns a list of nodes that match the given selectors .
helper method to visit all the selectors in the given node .
iterate over nodes in the tree .
returns the first node matching the selectors or null if no such node exists .
/ * ( non - javadoc )
select the first node that matches the given filter .
walks through the { @link <unk> } into a jts { @link <unk> } .
walk through all descendants of the given node list .
walks the node tree and creates node tree .
select a list of nodes from the result document .
/ * filter
convert a string to a char array .
refills the input buffer .
resumes scanning until the next regular expression is matched the end of input is encountered or an i / o - error occurs .
<unk> > <unk>
/ * ( non - javadoc )
<unk> > <unk>
returns true if the sql string is likely to be ascending .
<unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> >
replies the html code for the given html .
returns the name of the first entity in the array .
/ * ( non - javadoc )
判断自动! = null的条件结构
/ * ( non - javadoc )
{ @inheritdoc }
update columns and properties .
/ * ( non - javadoc )
returns the { @link propertydescriptor } for the given property name .
returns the property name for the given column name .
gets the column name .
<p > <unk> . < / p >
sets the value of the given property to the provided value .
returns the { @link <unk> } value for the given object .
/ * ( non - javadoc )
sorts the specified index into the specified array .
/ * ( non - javadoc )
increases the capacity of the internal array if necessary .
returns the length of the array .
lookup a value .
creates a message for the <unk> .
create a proxy bean from a <unk>
----- private methods -----
process the body of the request .
process the files .
checks if the given file is a valid file .
<p > <unk> . < / p >
/ * ( non - javadoc )
find the change event for the given file type .
add a class .
/ * ( non - javadoc )
<unk> > <unk>
compute the size of the field ( s ) .
puts the content of this field .
parses the length of a string .
transfers this buffer s data to this buffer .
create a new instance of the specified { @link <unk> } .
create a new { @link <unk> } .
create a new { @link <unk> } .
assigns the specified value to the given component .
/ * ( non - javadoc )
parse decorator .
parse the page data .
writes the contents of the decorated section into the output stream .
resets the region s region .
returns true if the parameter is blank .
start the server .
<unk> > <unk>
runs a process command .
/ * ( non - javadoc )
src / main / resources / org / drools / compiler / lang / drl6expressions . util . functions
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
{ @inheritdoc }
{ @inheritdoc }
{ @inheritdoc }
generates the sql alias for the spatial index .
create a column name .
adds a rule definition to a rule definition .
check whether or not the value class should be scanned .
determine if the value of the given parameter class is a member of the list .
/ * this method transforms the given { @link string } into a { @link <unk> } .
checks if the given value matches the given value .
{ @inheritdoc }
returns the pseudo - name of the pseudo - class .
/ * ( non - javadoc )
appends all of the elements in the specified collection to the end of the list .
/ * find the index of a particular insertion unit .
translates { @link org . apache . log4j . log4j . log4j . log4j . log4j . log4j . log4j . log4j . log4j . log4j . log4j . log4j . log4j . log4j . log4j . log4j . log4j . log4j . log4j . log4j . log4j . log4j . log4j . log4j . logging . logging . logging . logback . <unk>
returns true if the given node evaluates to <code > true< / code > .
registers the {
binds the given annotation to the given annotation type .
register a new action configuration .
lookup the { @link <unk> } for the given { @link <unk> } .
convert a {
/ * ( non - javadoc )
sets up default mail properties .
validates the given value against the given value .
<p > <unk> . < / p >
returns true if the node is a table name .
removes the node with the given parent node .
find the create table node with the given id .
extracts the node description from the given node .
insert a itemized list .
<unk> > <unk>
register a session bean for the session .
get the session map for the specified session .
returns the current request .
initialize the proxy class .
puts the aspect advice bean .
puts the aspect advice bean .
{ @inheritdoc }
{ @inheritdoc }
process a bundle .
/ * ( non - javadoc )
replaces the bundle id with the given content .
write a properties file .
writes the properties to the given writer .
parses the contents of a string .
adds a condition to the specified section .
checkstyle : off
add the property profiles .
/ * ( non - javadoc )
converts a string descriptor into a type descriptor .
checks if the given string is a valid method descriptor .
acquire a typedesc from a type descriptor .
returns the type of the given class .
get the int value of a method .
long - <unk>
prints the value of a method on top of the stack .
<unk> . <unk> ()
<unk> . <unk>
generate a short value on a stack .
<unk> . <unk>
get the stack value for the given object .
add multiple consumers to the server .
{ @inheritdoc }
converts a collection of objects to a collection .
converts the given object to a collection .
<unk> > <unk>
/ * ( non - javadoc )
convert an array to a collection .
build the work data .
adds a line number to the list of lines .
makes the given visitor visit a method parameter .
puts a reference to the bytecode instruction .
add a reference to this reference .
/ * package private
marks all basic blocks as belonging to the given subroutine .
adds a block of blocks to the given subroutine .
returns a new { @link label } that contains the given { @link <unk> } .
compare two strings .
returns true if the specified character is a remove character .
count the number of times in a string .
puts the specified string into this byte vector .
puts the specified string into this byte vector .
puts the specified string into this byte vector .
puts a string ------------------------------------------------------------------------
puts the specified string into this byte vector .
puts the specified string into this byte vector .
puts the specified string into this byte vector .
puts the specified string into this byte vector .
puts a byte array into the byte array .
increases the capacity of this <tt > <unk> / tt > instance .
checks if the user is authenticated by the user .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
{ @inheritdoc }
{ @inheritdoc }
----- private methods -----
returns the localized message for the given bundle .
finds the localized message for the given key .
gets a message from the resource bundles specified by the locale .
<p > <unk> . < / p >
returns a { @link resourcebundle } for the given { @link locale } .
<unk> > <unk>
/ * ( non - javadoc )
finds an entity from the database .
{ @inheritdoc }
saves the specified entity .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
<unk> > <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > < / code > < / div > <div color = red style = font - size : 18px ; color : red > <i >
executes the given {
counts the number of rows matching the criteria .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of the entities that are related to the target object .
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i >
add soft - evidence to the parent node .
add soft - evidence to the parent node .
returns true if the node matches the given node name .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
crop the stack trace of the current stack and crop the stack trace .
filters the stack trace of the given { @link throwable } array .
get the stack trace for the specified stack trace .
returns the root cause of the given throwable .
get the stack trace as a string .
get the first cause of a throwable .
constructs a message and appends it to the given throwable .
returns the root cause of the given throwable .
<unk> { @link throwable } <unk>
<unk> > <unk>
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
wrap the given throwable as a runtime exception .
unwraps a wrapped method wrapped in a { @link <unk> } .
returns a new { @code <unk> } with the specified annotation parser .
<unk> <unk> <unk>
checks if the given class is an interface or not .
初始化<br > <unk>
get the annotation class for the given class .
returns the class loader for the current thread .
returns the class loader for the specified class .
gets the manifest urls for the given url .
gets the classpath item from the classpath .
<p > <unk> . < / p >
<p > <unk> . < / p >
get an input stream from the resource .
opens the given resource as an input stream .
load properties from a resource .
loads an { @link inputstream } from the given { @link classloader } .
returns the class of the given class name .
loads a class using the specified classloader .
create a list of route chunks
find or create a child of this route .
check if the path matches the given value .
get a list of files from the multipart request .
this method parses the request parameters into a map of parameters .
/ * ( non - javadoc )
/ * ( non - javadoc )
update row .
returns the value at the given index in the array .
used by subclasses
returns the index of the first character in the string .
returns true if the package is detected .
returns the value of the bean property .
find the {
update index to map key .
extract the type of a property .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * ( non - javadoc )
obtains an instance of { @code java . util . date } from the given { @code localdatetime } .
converts a { @code localdatetime } to a { @code localdatetime } . <p > this returns a { @code localdatetime } based on the specified local date - time and the default { @link java . time . localdatetime } .
converts a time value to a string .
parses a date from the given time string .
create a new { @link <unk> } instance .
adds a query parameter to the request .
returns true if the given target class that matches the given target class will be used .
adds all read - only classes to the list of read - only methods .
persistencedelegate . initialize ()
adds the annotation values to the given { @link <unk> } .
create a new instance of the given type .
prints the default check properties .
creates a new completablefuture that is after the given tag .
{ @inheritdoc }
{ @inheritdoc }
encodes a byte array into an ascii string .
encodes a string into a base64 - encoded string .
encodes the given string using the given encoding .
encodes the given uri scheme with the given encoding .
encodes the given uri host with the given encoding .
encodes the given uri and encoding as a uri string .
encodes the given uri path with the given encoding .
encodes the given uri query with the given encoding .
encodes the given query param with the given encoding .
encodes the given uri fragment using the given encoding .
encodes a uri into a uri .
encodes the given http url and returns the encoded uri .
encodes the given path and returns the resulting builder .
introspects <code > { @link <unk> () } < / code > and <code > <unk> / code > .
add a property .
builds a { @link propertydescriptor } .
factory method to create a { @link propertydescriptor } .
/ * ( non - javadoc )
returns the absolute url of the given location .
returns a list of cookies in the response .
<p > <unk> . < / p >
/ * ( non - javadoc )
reads an http response from the given url and returns a new { @link xpathfactory } .
/ * ------------------------------------------------------------
returns true if the scope reference is annotated with { @link <unk> } .
/ * ( non - javadoc )
print the provider s routes .
encrypts a byte array to a byte array .
decrypt encrypted data .
<unk> > <unk>
/ * <unk>
sets the value of the given property to the given value .
returns a deep copy of a pdef map .
<p > <unk> . < / p >
<unk> > <unk>
{ @inheritdoc }
adds a default parameter to the configuration .
sends a get request to the server .
/ * ------------------------------------------------------------
add headers to the request .
removes all the cookies in the response .
add cookies to the request .
sends an email message to all recipients in the message .
/ * ( non - javadoc )
fills the { @link <unk> } with the given { @link <unk> } .
sets the { @link <unk> } for the { @link <unk> } .
sets the message headers .
sets the recipients for the email message .
populates the specified email message with the email address .
add a message to the email message .
creates a body part for the multipart body .
sets the content of the email .
create an attachment part part .
creates a list of { @link <unk> } s from the given { @link collection } .
fills the { @link <unk> } with the attachments .
/ * ( non - javadoc )
returns the value of a data field .
/ * <unk>
surrogate for the given result set .
/ * ------------------------------------------------------------
initialize the jdbc connection
<p > <unk> . < / p >
/ * ( non - javadoc )
<p > <unk> . < / p >
{ @inheritdoc }
executes the sql statement .
executes the fetch size of the query .
<p > sets the maximum number of rows stored in the connection patterns . < / p >
execute the sql statement and return the result .
executes the prepared statement .
execute the sql lock .
<unk> > <unk>
executes the given sql statement and returns the result .
execute the query -------------------------------------------------------------
retrieves the value of the generated key from the database .
/ * ( non - javadoc )
executes the query .
create a new { @link email } from the given string .
/ * ( non - javadoc )
converts a list of { @link emailaddress } to an array of { @link transportaddress } s .
converts an array of addresses to an array of addresses .
creates an instance of the given class .
creates a proxy of the given { @link invocationhandler } .
returns a boolean representation of the given template .
/ * documented <unk>
returns an <code > iterator< / code > over all elements of the given <code > iterator< / code > .
collects the elements of an iterator into a collection .
convert an iterator to a stream .
convert an iterator to a stream .
returns a sequential ordered { @code stream } from the given { @code iterable } .
returns the current database session .
/ * ( non - javadoc )
encrypts the content to a zip file .
adds a folder to a zip file .
sets the default transfer mode for this task .
returns the { @link <unk> } for this { @link <unk> } .
/ * ( non - javadoc )
returns the class name of the stack trace of the logger .
shorten the class name according to the specified class name .
adds a serializer to the serializer .
registers this serializer with the given serializer .
checks if the given path should be excluded .
sets the exclude field names .
exclude all map types .
serializes an object into a json object .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a deep copy of the given object .
serialize an object to a file .
deserialize session .
serializes an object to a byte array .
deserializes a byte array to an object .
/ * ( non - javadoc )
gets an array of { @link <unk> } s for the given type .
<p > <unk> . < / p >
<p > <unk> . < / p >
get the names of all the columns in the result set .
{ @inheritdoc }
<unk> - <unk>
this method caches the entities in the cache .
resolve the provider by name .
builds and returns the id of the entity with the given name .
convert a table name to entity name .
<unk> method .
/ * ( non - javadoc )
get a connection from the pool .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the target plugin exists .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the html representation of the content .
/ * ( non - javadoc )
writes the content of the given inputstream to the output stream .
/ * ( non - javadoc )
sets the http header .
/ * ( non - javadoc )
/ * ( non - javadoc )
login to the user .
gson invokes this call - back method during deserialization when it encounters a field of the specified type .
login with the given request .
checks if the basic authentication has been authenticated .
/ * ( non - javadoc )
<unk> > <unk>
get file index file .
gets the media type from a file .
convert a url to a file name .
creates a { @link <unk> } from a url .
creates a directory if it does not exist .
create workspace directory .
set the last modified time of the file to the given file .
copies a file to another location .
internal copy file method .
copies a file to a directory .
copies a directory to a destination directory .
moves a file to another location .
moves the given source file to the destination directory .
copy a zip file to a destination directory
delete all the files in the given directory .
<unk> > <unk>
<unk> > <unk>
writes the characters from the given { @link java . io . file } to the given { @link java . io . file } .
writes the contents of a file to a file .
<unk> > <unk>
<p > <unk> . < / p >
reads the contents of a file into a string .
write the text to a file .
<p > append to the <code > tostring< / code > an <code > map< / code > . < / p >
writes a string to a file .
copies the input stream to the given output stream .
read lines from a file .
read bytes from a file .
writes <code > len< / code > bytes from <code > data< / code > to <code > dest< / code > .
<unk> > <unk>
<unk> > <unk>
compares the contents of two strings .
compares two utf - 8 files to determine if they are equal . <p > <strong > note : < / strong > this method does not check if the contents of the two files are equal or not . <p > this method compares the contents of the first two bytes to determine if they are equal . <p > <p > if
checks if the file is newer than the given reference .
check if file is newer than file .
<unk> { @link file } <unk>
copies a file from src to dest .
deletes a file .
checks if the given file is an ancestor of the specified file .
gets the parent file for the given file .
<unk> > <unk>
create a temporary file in a temporary directory .
create a temporary directory .
<unk> > <unk> > <unk> [ tmp ] <unk> [ <unk> ]
read a binary file .
returns an iterator for the given file .
returns the encoding of the error stream .
checks if the given file exists and throws an illegalargumentexception otherwise .
checks if the given directory exists .
copies a file from src to dest .
copies a file to a destination file .
/ * ( non - javadoc )
/ * ( non - javadoc )
resolves a method descriptor .
初始化<br > <unk>
初始化<br > <unk>
{ @inheritdoc }
/ * ( non - javadoc )
adds a path to the cache .
returns <tt > true< / tt > if this map contains the specified looping .
create a new { @link char } array from the given { @link <unk> } .
append a buffer to the buffer .
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
wrap a {
creates a { @link <unk> } .
returns the index of the first occurrence of the specified <code > from< / code > in between <code > from< / code > inclusive and <code > to< / code > inclusive .
returns the index of the first occurrence of the specified <code > from< / code > in between <code > from< / code > and <code > to< / code > inclusive .
returns true if the given array contains the given target .
returns true if the specified region matches the specified target target .
return a copy of this list with the specified step .
/ * ( non - javadoc )
returns the current transaction associated with the given transaction .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an array of urls for the current class .
returns a base - 64 encoded string for the given content .
add a bcc recipient address to the bcc field .
add a bcc recipient .
add a new email address to the bcc field
{ @inheritdoc }
registers a {
/ * ( non - javadoc )
gets the serializer for the given class .
upload a file to the request .
http : // docs . oracle . com / javase / 6 / docs / api / java / util / inputstream . <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk> - <unk>
<unk> > <unk>
returns an array of strings with the given name or <code > null< / code > if no such request parameter exists .
gets the file with the given name from the request .
get the list of files associated with the given parameter name .
{ @inheritdoc }
parse template .
splits the given { @code string } into a { @code list } of { @code string } s .
parse the given string .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the name of the first word in the string .
strip off parameters from content type .
extract the value from a header value .
{ @inheritdoc }
{ @inheritdoc }
{ @inheritdoc }
checkstyle : off
write the given { @link node } to the given { @link appendable } .
write the given node to the given appendable .
/ * ( non - javadoc )
<unk> > <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
--- stop cacher ---
/ * ( non - javadoc )
/ * ( non - javadoc )
registers servlets for web application .
/ * ( non - javadoc )
publish the web application .
load parameters from the classpath .
/ * ( non - javadoc )
loads a class from the given class name using the specified class loader .
init method .
lazy getter for lazy usage .
/ * ( non - javadoc )
add a modification
obtains an instance of { @link java . util . list } of { @link <unk> } { @link <unk> } s .
extracts the class name from a string pattern .
parses the given { @code input } string into an instance of { @code t } .
parses the next token from the given { @link string } .
<p > <unk> . < / p >
parses the given { @code input } string into an instance of { @code t } .
checkstyle : off
returns the default value for the given type .
method to split the object into a list of json strings .
parses the quoted string .
un - escape a character literal .
increases the capacity of this <tt > <unk> / tt > instance .
decodes a base64 encoded unicode string from base64 format .
returns a string representation of this association as a string .
--- number parser ---
checkstyle : off
checkstyle : off
/ * ------------------------------------------------------------
returns { @code true } if the specified { @code char } is match .
converts a hex string to a byte array .
/ * ( non - javadoc )
creates an empty constructor for the given class .
/ * ( non - javadoc )
creates a call to the <unk> interface .
returns a string representation of the method .
returns the java type name for the given sql type .
adds a reference to the reference list .
/ * ( non - javadoc )
read the reference to the references of the given type .
read references from annotation .
read annotation value from annotation .
build default references for a method or constructor .
build the permutations for the given property descriptor .
removes all duplicate names from the list .
set references to references to references
converts a comma - separated list of property names to an array of references .
----- private methods -----
starts a new transaction .
finds the method with the specified name in the given class .
finds a constructor with the given parameter types .
<p > checks if the actual type is compatible with the given constructor . < / p >
returns an array of {
<p > <unk> . < / p >
<p > <unk> . < / p >
get an array of all interfaces implemented by the given class .
replies all superclasses of the given class .
<p > <unk> . < / p >
returns a list of all methods of a class that are supported by this class .
compares two { @link <unk> } and { @link <unk> } .
checks if two methods are equal .
compare two parameters .
checks if the given object is accessible .
checks if the given member is public accessible .
<p > newinstance . < / p >
creates a new instance of the given type .
returns true if the given member is an instance of the given {
get the superclasses of the given class .
checks if a method is a getter method .
gets the getter name of a getter method .
returns the name of the getter ( s ) for the given method .
gets the parameterized component type .
<p > <unk> . < / p >
returns a string representation of the given type .
<p > <unk> . < / p >
returns the caller class of the caller .
returns the caller of the caller .
returns true if the given value is a subclass of the given class .
returns the boolean value of the first child of the given parent class .
returns the jar file summary of the specified class .
converts a class name to a file name .
returns true if the given type is annotated with {
returns true if the sql type is numeric .
causes the current thread to sleep for the specified number of milliseconds .
pause the current thread .
wait for the given object to be interrupted .
pause the current thread .
get a thread factory for the given group name .
returns the value associated with the provided supplier .
visits a ldc instruction .
visits an annotation .
visits an ldc instruction .
visits the annotation .
<editor - fold defaultstate = collapsed desc = stack frame >
visits a method instruction .
todo ( <unk> )
visits a ldc instruction .
visit a jump instruction .
visits a parameter .
visit a try catch block .
visits a local variable annotation .
writes a list of profiles to a writer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new array with the specified componenttype and size .
returns an array containing all of the elements in the given arrays that are contained in the given arrays .
returns an array containing all of the elements in the given arrays that are contained in the given array .
returns an array containing all of the elements of the given array that are greater than the size of the array .
inserts the given array at the end of the array .
returns an array containing all of the elements in the buffer if the new buffer is empty .
creates and returns a new array containing all of the elements in the array <code > <unk> / code > and <code > <unk> / code > . if <code > <unk> / code > is <code > null< / code > and <code > length< / code > elements are removed from the array .
utility method to copy a byte array into a byte array .
returns a new array containing all of the elements of the given array .
returns a new array containing all of the elements of the two arrays .
copy the contents of a byte array into a new byte array .
inserts an array of strings into an array of strings .
reverses an array
reverses an array .
extract the value from the array .
casts <code > d [] < / code > to <code > byte [] < / code >
<p > 包装类数组转为原始类型数组 . < / p >
/ * documented <unk>
casts <code > short [] < / code > to <code > short [] < / code >
casts <code > short [] < / code > to <code > short [] < / code >
sorts an array into an array of integers .
casts <code > double [] < / code > to <code > integer [] < / code >
returns an array of longs from the given long array .
casts <code > double [] < / code > to <code > long< / code > .
return an array of values from the given float array .
convert float array to float array .
sorts the given double array into an array of doubles .
casts <code > double [] < / code > to <code > double [] < / code >
<p > 包装类数组转为原始类型数组 . < / p >
casts <code > double [] < / code > to <code > true< / code > .
returns the index of the first occurrence of the specified value in the array starting at the given index .
returns the index of the first occurrence of the specified character in the array .
returns the index of the first occurrence of the specified value in the array .
returns the index of the first occurrence of the specified element in the array .
returns the index of the first occurrence of the specified element in the array .
returns the index of the first occurrence of the specified element in the array .
returns the index of the first occurrence of the specified value in the array .
returns the index of the first occurrence of the given byte array within the byte array .
laplace interpolation .
converts an array of objects to an array of strings .
converts an array of characters into an array of strings .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
compute all successor information .
finds the maximum number of instructions that owns the given subroutine .
adds the successor of the given successor to the current basic block .
check that the current basic block has no successor .
visit a frame .
/ * package
adds a frame to the stack .
sort the internal array of keys in the array .
sets the frame type .
returns <code > true< / code > if <code > <unk> / code > is a copy of the given method .
returns the size of the method .
puts the bytecode of a method .
collects attribute information .
/ * ( non - javadoc )
inject the current {
parse next token .
parses the given query and returns a list of { @link <unk> } s .
register a pseudo class for pseudo classes .
adds a pseudo class to the list of pseudo classes .
/ * ( non - javadoc )
/ * ( non - javadoc )
closes the given {
copy the contents of the given reader to the given writer .
copy bytes from the input stream to the output stream .
reads bytes from an input stream .
copy input stream to output stream .
copy input stream to output stream .
copy the contents of an inputstream into a byte array .
read a list of characters from the input stream .
copy the contents of the given reader to the given writer .
returns an <code > inputstream< / code > from the given <code > inputstream< / code > .
creates a writer for the given { @link java . io . outputstream } .
returns all property names for the given class .
<p > <unk> . < / p >
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
resolve the injection point for the given class .
write out the filter configuration parameters .
create bundle manager .
loads the cache file from the cache .
this method is called by the validator to initialize the database .
returns a new instance of the {
generates a random sequence of characters .
returns the bundle path for the given folder .
looks up the bundle file for the given bundle id .
looks up the gzip bundle cache file to the destination directory .
register a bundle .
creates a md5 digest of the given source string .
create a duplicate resource bundle
execute the mojo .
fixes the css .
install a relative path to a resource .
<unk> > <unk>
<unk> > <unk>
<unk> > <unk>
<unk> > <unk>
delete entity .
delete entity by id .
delete entity by id .
delete entity by id .
<unk> > <unk>
<unk> > <unk>
<unk> > <unk>
<unk> > <unk>
populate entity .
<unk> > <unk>
<unk> > <unk>
<unk> > <unk>
check if the table exists .
delete all entity in the database .
count the items in the table .
update column .
creates the name of the table .
check database settings .
add an object to the composite .
returns the value of the field in the hierarchy represented by this class .
初始化<br > <unk>
converts the given value to a single element array .
<unk> > <unk>
converts the given primitive value to an array of {
parse a generic type signature .
<p > compile . < / p >
add a value to the bag .
/ * ( non - javadoc )
/ * ( non - javadoc )
serializes an object to a json object .
<p > <unk> . < / p >
closes exception .
/ * ( non - javadoc )
{ @inheritdoc }
disposes the tables .
/ * ( non - javadoc )
commits the transaction .
<p > <unk> . < / p >
create action definition .
/ * ------------------------------------------------------------
reads properties from a file .
copies the fromfile to the tofile location .
load properties from a file
copies the fromfile to the tofile location .
write the contents of a properties file to a file .
copies the fromfile to the tofile location .
write properties to a file .
loads properties from a string .
/ * ------------------------------------------------------------
<p > <unk> . < / p >
read template from classpath .
loads the { @link properties } from the given { @link properties } object .
gets the value of a property from a file .
returns the value associated with the specified key or the default value if the map does not exist .
adds all properties in the given properties file to the system property .
returns the value for the property with the specified key in the properties map . if the property is not found in the map then null is returned .
returns the object name for the given method name .
finalize transaction mode .
returns an array of {
/ * ( non - javadoc )
sets the selector id .
checks if the given property is a join .
returns the index of the children of the given node .
/ * ( non - javadoc )
<p > unescapes the dot suffix of the given string . < / p >
build the servlet package package names .
returns the supported version number from the java version .
/ * ( non - javadoc )
set the parent node .
adds a child node to this help node .
adds a list of nodes to this help node .
/ * ( non - javadoc )
inserts the specified child node before the given child .
inserts a child node into the child tree .
insert a child node into this node .
inserts a new child node into this node .
removes the child at the specified index .
recycle all child nodes .
returns the value at the specified index .
returns true if the document has an attribute with the given name .
returns the value of the named attribute as a string or null if not found .
set attribute value .
returns true if the attribute with the specified name is contained in this set .
returns the node with the given name .
returns the child node at the specified index .
returns the index of the node at the given index .
returns the child element at the specified index .
returns the first child of this node or null if not found .
returns the last child of this node .
returns the child element with the given name .
returns the index of the child node .
remove all child elements from this node .
<p > <unk> . < / p >
gets the index of sibling nodes .
initialize the child nodes .
changes the owner of the <unk>
get the next sibling node .
returns the index of the next child node .
returns the index of the next sibling .
get the next sibling node .
get the next sibling of this node .
returns the index of the previous sibling .
/ * ( non - javadoc )
appends the text content of the node to the given appendable .
get the html configuration .
gets the inner html tag .
visit all the children of the given node .
/ * ( non - javadoc )
generate tag contributions for a tag tag .
on id attribute .
define the tag .
creates a proxy that will be used to create the proxy requests .
start the server
/ * map
{ @inheritdoc }
{ @inheritdoc }
get the mime type of a file .
find the mime types of a mime type .
{ @inheritdoc }
{ @inheritdoc }
sets the package root options .
初始化<br > <unk>
siehe syntaxelement :: <unk> ()
returns the absolute path of the given action package .
begins a transaction .
commits the transaction .
commits a transaction .
creates a json object from the given arguments .
<p > <unk> . < / p >
find the lowest common ancestor of this name .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a props .
iterates through all the ajax targets and adds them to the target list .
iterates over all targets of the given scope and invokes { @link <unk> () } on each of them in a { @link <unk> } .
append a destructuring function to each scope .
gets the values of the arguments .
creates an array of { @link target } s .
creates an instance of a { @link java . lang . object } .
/ * ( non - javadoc )
/ * ( non - javadoc )
appends the specified character sequence to the end of the string .
returns the value mapped by {
returns the value mapped by {
retrieve a double value .
returns the value of the <code > name< / code > property as a <code > double< / code > . if no such property can be found <code > null< / code > is returned .
returns the value of the specified {
returns the value as an array .
gets the prefixed key and parse it to a byte array .
get the value at the given position
appends the specified enum value to the end of this array .
sets the value of the given { @code value } .
creates and returns a new array containing all of the bytes in the specified array .
shifts components horizontally .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
process an input start tag .
converts the given properties object to a list of properties .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
render the given nodes against the current state .
returns the name of the pseudo - function descriptor .
create and return a string representing the class name of the action .
{ @inheritdoc }
{ @inheritdoc }
resolve snake points .
/ * ------------------------------------------------------------
reads an attribute from the given reader .
writes the given byte array to the given writer .
returns the count of all attribute types .
compute the size of the attributes of this symbol table .
returns the size of the bytecode instruction .
puts the content of the given byte vector into the given bytevector .
puts the bytecode of the given class .
gets all the action results .
registers a fallback result .
gets the action result .
lookup action .
creates and returns a new { @link <unk> } instance for the given class .
<p > checks if a string matches the substring of the specified substring . < / p >
check if the substring at the given index is equal to the specified substring .
answers the first index of the first occurrence of the specified character starting at the given index .
add arguments to the command line .
set environment property .
run the command .
invokes the { @link <unk> ( object ) } method of the given { @link <unk> } .
visit this frame .
returns the abstract type for the given { @link <unk> } .
acquire the abstract type descriptor for the given descriptor .
initializes the input frame for the given method .
sets the input frame from the given { @link <unk> } .
merge permutations of local variables .
pushes a local variable to the stack .
pushes a new value onto the stack .
push a symbol table onto the symbol table .
pushes a new value onto the stack .
pop a string from the stack .
this method is called to add an initialized frame to the set of points .
merge this frame with the given frame .
method to parse instructions from stack .
merge this frame with the given source frame .
makes the given method visit method .
puts the abstract type for the given type .
<unk> > <unk>
schedule a new timer .
visits a module .
visit a ldc instruction .
visits a class that is a non - inner class .
visits the annotation .
visits a ldc instruction .
visit an inner class .
visit a field .
/ * ( non - javadoc )
<p > <unk> . < / p >
removes the cp session session from the database .
creates the result array .
invokes the action .
reads the request body and returns the request body .
calculates the index of the last page .
creates the page index .
converts a string to an integer .
returns true if the specified count is equal to the specified number .
converts a character sequence to a byte array .
find the index of the first occurrence of the specified string in the given array .
returns the qualified name of a node .
resolves an attribute name for the given attribute .
renders an attribute .
<unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> >
<unk> > <unk> > <unk>
loads the contents of an input stream into a base64 - encoded stream .
{ @inheritdoc }
{ @inheritdoc }
returns a { @link properties } object for the given { @code prefix } .
load environment variables .
loads the properties from the classpath .
returns the value associated with the given key as a string .
returns the value associated with the given key as an integer .
/ * ( non - javadoc )
sets the value of the specified key to the given value .
start scan .
installs the specified <code > map< / code > to the specified <code > map< / code > .
extract sub - properties .
sets the dynamic arguments .
add a resource to the destination map .
initialize the active profiles .
returns the profiles for all the profiles .
get the profiles for the given profile key .
initialize the property injection point .
add a set of sets injection point .
add a method injectionpoint to the classpath .
add configurations for initialization methods .
httl . properties : java . lang . reflect . <unk>
<p > <unk> . < / p >
sets the private field on the target object .
inject target into wrapper .
<p > <unk> . < / p >
<unk> > <unk>
returns the { @link fielddescriptor } for the given { @link field } .
returns the type of this field .
<p > getter for the field <code > <unk> / code > . < / p >
creates the getter method .
returns a list of setter setters .
<p > <unk> . < / p >
/ * public void <unk> ( <unk> <unk> ) { return <unk> . <unk> () ; }
<p > <unk> . < / p >
/ * ( non - javadoc )
creates a new json object from the given object .
<p > <unk> . < / p >
resolves the http method name from the given method name .
return true if the candidate string matches the pattern .
find the first occurrence of a pattern in the given string .
returns the index of the matched pattern .
return true if the path matches a pattern .
checks if the rule block contains rules .
resolves the loading of the given class .
resolves the resource loading of a resource .
/ * ( non - javadoc )
/ * ( non - javadoc )
waits for the current thread to be interrupted .
returns the {
inspect an abstract method .
build injection point handler .
inspect class <unk> .
/ * ( non - javadoc )
{ @inheritdoc }
add the class loader to the classloader
sets the bean .
/ * ( non - javadoc )
introspects the given { @link class } and returns the { @link <unk> } if it exists .
<p > getter for the field <code > <unk> / code > . < / p >
returns the setter for the given name .
create a new {
adds the specified iterator to the iterator .
returns <tt > true< / tt > if this iterator has more elements .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
prints the logo to stdout .
stops the {
/ * ( non - javadoc )
/ * ( non - javadoc )
creates an sslsocket that can be used to connect to this host .
set the certificate to ignore ssl / tls certificates .
factory method to create a new { @link <unk> } .
generate a random string of characters .
generate a random string .
produce a string representation of the specified ranges .
delegates to {
/ * ( non - javadoc )
loads an object from a file .
sends a { @link <unk> } to the { @link <unk> } .
returns a new collection instance of the given type .
<p > <unk> . < / p >
<p > <unk> . < / p >
convert the given value to the target type .
visits a module that has been exported .
{ @inheritdoc }
{ @inheritdoc }
visit a class and its interfaces .
returns the default implementation of {
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
returns the value associated with the given key or null if not found .
{ @inheritdoc }
{ @inheritdoc }
returns an array of {
invokes a method with the given name and parameter types .
returns the method descriptor for the given name .
introspects the supplied class and returns an array of { @link propertydescriptor } s .
checks if the given domain is a valid ip address .
/ * ( non - javadoc )
method to check if a string is a valid address .
returns the ip address of the given host .
converts the given url to a byte array .
read string .
download the contents of the given url to the given file .
/ * ( non - javadoc )
returns the id of the embedded resource .
{ @inheritdoc }
/ * ( non - javadoc )
inject the injection targets into the scope .
<p > <unk> . < / p >
/ * ( non - javadoc )
connect to socket .
convert the class name to a string classname .
returns the package name from the fully qualified class name .
/ * ( non - javadoc )
returns the class for the given class name .
loads an array of class objects using the given classloader .
/ * ( non - javadoc )
returns an <code > <unk> / code > that contains all elements of the given array <code > array< / code > .
returns an { @code <unk> > } { @code <unk> > } for the given { @code array } .
returns the index of the first occurrence of the specified slot or - 1 if not found .
checks whether the given exclusion should be excluded .
check if the include pattern is included in the include .
returns an iterator over all bean properties that are matched by the specified template .
/ * ( non - javadoc )
returns true if the specified charsequence contains the specified character sequence .
ensure the length of the attribute .
<p > <unk> . < / p >
register a component with the given component .
register a component with the given annotation .
/ * ( non - javadoc )
registers a component instance with the specified component instance .
add an event to all registered listeners .
gets the component of the given type .
creates a new instance of the specified type .
creates a component of the specified component name .
returns the super class name for the given component class .
/ * ( non - javadoc )
fetches the type from the database .
/ * <unk>
get the row from the row .
try to create a new result set mapper .
creates a new instance of the given type .
<unk> > <unk>
/ * ( non - javadoc )
<p > clears all the declarations in the prepared statement . < / p >
sets the value of the <code > <unk> / code > of the <code > resultset< / code > object as a <code > null< / code > .
/ * ( non - javadoc )
sets the value at the specified index to the given value .
sets the value at the given index .
sets the value at the given index .
sets the value at the given index .
/ * ( non - javadoc )
sets the value at the given index .
sets the value at the given index .
sets the designated parameter to the given <code > java . sql . date< / code > value using the specified date and time . the <code > java . sql . date< / code > value designated by the value of the <code > <unk> / code > property is set to <code > true< / code > .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the value to the given <code > <unk> / code > value .
set the value at the specified index as a biginteger .
sets the value of the dtd field to the specified value .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the array value for the patterns .
/ * ( non - javadoc )
set the files in the given inputstream to the given level .
<unk> > <unk>
sets the parameters of the report .
sets the parameter object to the specified object .
set the value of the parameter object .
sets the specified object to the target type .
{ @inheritdoc }
sets the objects in the hash table .
sets an array of attribute names to the specified array .
sets the value of a batch property .
pick up a batch of objects from a collection of objects .
inserts a new chunk into the previous chunk .
lookup the entity name for the given entity name
/ * ( non - javadoc )
returns a {
resolves the table for a table .
add a parameter to the template .
returns the component class for the given object .
checks whether the given value is a valid column value .
formats a string .
/ * ( non - javadoc )
returns a connection to the database .
returns an enumeration of the init parameters of the file system .
<unk> . <unk>
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
includes the given path in the servlet context .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
redirect the given url to the given url .
redirects the browser to the specified url .
/ * ------------------------------------------------------------
returns the url of the given request .
sends a redirect to the servlet .
returns the request uri for the given request .
returns the request uri for the given request .
returns the parameter names for the given method .
find the path macros in the given action path .
create the servicedirectorymanagerfactory .
{ @inheritdoc }
/ * ( non - javadoc )
get the display name for a given number .
/ * ( non - javadoc )
create a new {
gets the message id .
create a new { @link <unk> } from the given string .
this method will create a new { @link <unk> } object .
filter a cc recipient address .
add a bcc recipient address .
sets the flags of this { @link <unk> } .
/ * ( non - javadoc )
build an { @link <unk> } representing the received { @link <unk> } .
add a { @link <unk> } to the given { @link <unk> } .
returns a new {
creates a new { @link <unk> } object .
convert a { @link <unk> } to a { @link email } object .
finds the first { @link email } which matches the specified criteria .
/ * ( non - javadoc )
add a search term .
parses the given search term into a search term .
add a search term .
----- public methods -----
convert a byte array to a byte array .
converts a string to a byte array .
convert a value to a byte array .
/ * ( non - javadoc )
/ * ( non - javadoc )
this method determines whether the given request is equal to gzip .
add validation violations
/ * ( non - javadoc )
validate the constraint display resources .
<p > sets the { @link profile } for the service . < / p >
sets the { @link org . <unk> . service . api . api . <unk> } for a given user .
determine if the program profiles match .
parses the body of the request and returns it as a json object .
returns a timestamp in milliseconds from the date .
/ * [ deutsch ] <p > addiert den angegebenen date . < / p >
/ * [ deutsch ] <p > erzeugt ein neues <unk> - <unk> . < / p >
symmetric householder reduction to tridiagonal form .
/ * [ deutsch ] <p > bestimmt die <unk> - <unk> . < / p >
/ * ( non - javadoc )
convert a <unk> rgb to a rgb value .
resets the { @link <unk> } .
convert a hex color value to a rgb color .
returns the index of the first occurrence of the specified <code > from< / code > between <code > fromindex< / code > inclusive and <code > toindex< / code > exclusive .
{ @inheritdoc }
parse the given {
emit a comment .
validate files .
returns the index of the first character in the given sequence .
generates a salted pbkdf2 hash of the password .
computes the pbkdf2 hash of a password .
converts a hex string into a byte array .
/ * ( non - javadoc )
sets the name of the email argument .
get the { @link datasource } for the { @link datasource } .
create a new attachment with the given content type .
create a new { @link <unk> } with the given byte array and filename .
create a new { @link <unk> } .
/ * ( non - javadoc )
sets the content id for the given file .
returns the content type for the given content type .
accept a signature .
parse a type signature .
compute the size of the module field .
puts the content of the given bytevector .
decodes a string using the given encoding . <p >
url encode a value .
{ @inheritdoc }
validate datasource .
list undocumented entities .
looks up a method signature for a given class .
visit a super class .
get method visitor method .
/ * ( non - javadoc )
get method signature .
converts a { @link string } to a { @link string } array .
convert a string to a list of strings .
/ * ( non - javadoc )
creates a description for the description of the <unk> .
gets the advice result for the specified advice .
get the advice method .
encrypt a string .
{ @link <unk> ( string ) }
sets the logger .
returns a logger with the given name .
validate that the name is valid .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
creates an instance of this class .
creates action for action requests .
/ * ( non - javadoc )
return true if the passed in bean data is in java . lang . string
get all enabled beans for the given data .
creates a bean from a bean data bean .
/ * ( non - javadoc )
creates a new { @link properties } object .
gets a list of all of the recipients in this folder .
returns a copy of an array of { @link <unk> } s .
the main method .
allocate a counter with the given parameters .
/ * ( non - javadoc )
prints a {
print an error message .
print rate .
create a new { @link java . nio . mappedbytebuffer } for a { @link file } in a { @link java . nio . channels . filechannel . mapmode#read_write } . <p > the given { @code location } will be mapped to the specified { @link java . nio . channels . filechannel . mapmode } . < / p >
close the archive .
invokes the {
return a { @link consumer } that calls { @link <unk> () } on the given { @link <unk> } .
/ * ( non - javadoc )
wrap the given { @link <unk> } with the given { @link <unk> } .
allocate a counter from the given buffer .
/ * ( non - javadoc )
return a long value from the <unk> .
{ @inheritdoc }
claim a tag .
{ @inheritdoc }
creates a new {
/ * ( non - javadoc )
launch the aeron context
launch the listening socket
retrieves the polling response for an error response .
/ * ( non - javadoc )
add a message to the myproxy server
add an ndarray to the given channel
/ * ( non - javadoc )
/ * stop recording
stop a transaction
stops a recording .
/ * ( non - javadoc )
authorizes the android application to stop the replay process .
/ * ////////////////////////// messages //////////////////////////
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is used to send a {
this method will truncate the specified recording to the specified position .
/ * ( non - javadoc )
dumps the contents of the specified { @link bytebuf } into a { @link <unk> } .
print an image to stdout .
prints an image to stdout .
prints a message to the console .
returns an instance of the counter indicator for the specified index .
delete a { @link <unk> } object .
delete a { @link <unk> } from a { @link com . <unk> . <unk> . metadata . <unk> } .
sets the maximum number of elements in this buffer .
append a new { @link <unk> } to the buffer .
/ * ( non - javadoc )
similar to { @link <unk> ( java . nio . file . <unk> java . util . function . <unk> java . util . function . <unk> ) }
decodes a fragment .
iterate over the { @link <unk> } and { @link <unk> } s .
prints the contents of { @code <unk> } to { @code out } .
generate a random term with a new tile .
the implementation of {
waits for the connection to complete .
/ * ( non - javadoc )
reads a number of entries from the stream .
create a new header with the given id .
creates a new { @link counter } from the given { @link <unk> } .
allocate a new counter with the given label and key length .
pick up the provided fragment .
validate the incoming {
retrieves the messages poll for the given block .
returns the raw messages of the image that match the given block .
finds an image with the given id .
iterate over all entries in the map .
factory method to create a new { @link <unk> } facade .
checks if the channel is normalized .
this method is called by the {
{ @inheritdoc }
append a message to the end of the buffer .
append a message to the <unk> buffer .
append the given number of bytes to the <unk> .
create a new { @link <unk> } .
attempts to connect to the given { @link <unk> } .
/ * ( non - javadoc )
start a new recording
stop recording a multipart recording .
stop recording event .
sends a message to the exception .
stops a replay session .
list all messages in a specific recording .
list all recordings made to a given channel .
sends a checkpoint event to the exception .
extend a message
publish a checkpoint event to the server .
sends a message to the exception recording .
publish a specific stop position .
prints a {
list all recording subscriptions for a given stream and stream id .
parse a { @link channel } from the { @link <unk> } .
formats the given { @link inetsocketaddress } and { @link inetaddress } as a string .
/ * ( non - javadoc )
executes the given { @link net . sf . mmm . util . io . <unk> } .
{ @inheritdoc }
close all the items in the input file .
adds a subscriber to the notification at the given position .
remove a subscription from the map .
publish a gap
/ * package
/ * ( non - javadoc )
{ @inheritdoc }
returns true if at least one connection is started .
selects a new taxonomy number .
resolves a taxonomy term .
this method will be called when the user is running .
this should be called after the front of the setup frame .
<p > <unk> . < / p >
calculates the sha1 checksum of the given file .
iterate through all the counters in the specified { @link columnmetadata } using the given { @link <unk> } .
puts a string into the map .
<strong > [ icu ] < / strong >
<strong > [ icu ] < / strong >
sets the initial position of the url .
converts a string to a list of { @link <unk> } s .
save the given ssh session id to the underlying channel .
returns the value of the tag with the specified key value .
claim a term .
append a term to the buffer .
appends the specified term to the end of the buffer .
this method is used to append the number of bytes to the <unk> .
attempt to update the given publisher up to the specified number of positions .
<strong > [ icu ] < / strong > down a network interface .
allocate a new direct block that is aligned with the given alignment .
allocate a new sketch manager for a given buffer .
returns the name of the proto property .
scans the buffer s size and returns the number of bytes written to the buffer .
/ * ( non - javadoc )
validate model .
sets the prefix { @code prefix } .
create a new {
sets the { @link net . dv8tion . jda . core . entities . mode <unk> } of this { @link channel } .
sets the time to live in { @link <unk> } .
returns the size of the output channel .
<p > term . < / p >
/ * <unk>
create a {
adds a initial position to the tsdb .
<p > build . < / p >
serializes an { @link <unk> } to a { @link <unk> } .
bootstraps a datagram channel .
/ * ( non - javadoc )
returns true if the given buffer id is valid .
receives a { @link <unk> } from a { @link bytebuffer } .
/ * ( non - javadoc )
called when the <unk> action is received .
******************************************************************** / ******************************************************************** / * internal methods ********************************************************************
/ * ( non - javadoc )
read a message from the buffer .
<p > returns the status code of a status . < / p >
allocate a new counter with the given name and key .
this method is called by the { @link <unk> ( int int int ) } method .
resets this buffer with the specified offset and length .
returns a copy of this buffer with the specified capacity .
validates the given vectors .
/ * ( non - javadoc )
returns an instance of { @link <unk> } which can be used in a { @link <unk> } .
creates a new instance of the { @link <unk> } using the given { @link <unk> } .
creates a new instance of { @link <unk> } .
build the {
creates a new instance of { @link <unk> } .
gets the <unk> -------------------------------------------------------------
validates that the given configuration is valid .
creates a new instance of the termination validator .
validate socket buffer lengths .
validates that the page size is valid .
checks that the session id range is within the range [ low high ] .
validates the timeout for the given property .
converts an error code and returns the corresponding error code .
returns a {
returns a { @link set } of { @link <unk> } s for the given { @link <unk> } .
returns a set of { @link <unk> } s for the given enabled { @link <unk> } .
resets the state of this instance .
parses the given string into an array of { @link <unk> } s .
splits a string array into a list of strings .
publish member status trust context .
notifies all registered { @link <unk> } s that a member has changed .
add a member status message to the cluster .
adds the cluster member ids to the cluster .
returns true if the cluster has active quorum .
compute the position of the first byte in a list of members .
reset the members of a cluster .
checks if the current node is a parity position .
replace the candidate set with the given member .
returns true if the given member is a full candidate index .
returns true if the member is a member of the given members .
returns true if the cluster membership points for a cluster member .
determines if the member is a member of the cluster .
validates a member endpoints .
checks if two nodes are equal .
<p > determines whether a constructor is a multi - option . < / p >
returns true if the cluster is a block .
compare two log segments .
<p > compare . < / p >
checks if the given member array is not duplicates .
returns the index of the member with the given member path .
returns the index of the data member .
creates a new array of members .
removes the member from the { @link <unk> } .
returns the high - bit high - bit addresses of the members of this member .
produce a string representation of the established endpoint .
this method is called when an envelope is idle .
unblock this {
parses a list of properties and returns a list of custom <unk> objects .
returns true if the file is active .
returns true if the specified driver is active .
returns true if the given driver is active
determines the termination termination of the given directory .
copy error log .
{ @inheritdoc }
this method returns the frame length of the frame specified by { @code <unk> } .
returns the frame length of the specified region in the buffer .
writes the given type to the given buffer .
writes the flags into the buffer .
sets the term offset for the specified term offset .
allocate a term id .
/ * ( non - javadoc )
sends a channel request to the client .
allocate a counter id .
allocate a counter id .
allocate a new recording for a given counter .
allocate a new counter with the given key and key .
allocate a new counter .
/ * package private
/ * ( non - javadoc )
scans the contents of a buffer to find the number of entries in the buffer .
creates a new instance of { @link <unk> } using the given { @link <unk> } .
sbob_sl64 [ 6 ]
gets the status message for the receiver .
/ * ( non - javadoc )
writes the payload to the { @link bytebuf } .
fill the current {
returns the index of the last term in the stream .
returns true if the dependency is modified .
returns the { @link entry } value for the given { @link <unk> } .
/ * ( non - javadoc )
creates a { @link <unk> } for the given list of { @link <unk> } s .
appends a term to the log .
appends the central directory to the { @link <unk> } .
commits a log entry .
increments the last {
connect to the aeron context
launch the connection to the aeron server
close the ndarray
gets the length of an { @link <unk> } .
{ @link <unk> }
send a non - non - non - handshake request to the server .
this method is called when a leader node is leader .
sets the { @code <unk> } to { @code <unk> } .
returns the string as a string .
creates a new { @link net . dv8tion . jda . core . requests . <unk> <unk> } from the given channel .
discrete wavelet transform .
checks the capacity of the page .
cas the count term count .
<p > <unk> . < / p >
calculates the length of the log file .
stores the default { @link <unk> () default } for the specified { @link <unk> } .
{ @link <unk> () }
rotate a buffer .
transmit the tail of the buffer with the specified partition id .
term offset .
sort the tail of the given buffer .
sorts the last volatile fields in the given buffer .
returns the number of active items in the given buffer .
cas to cas .
the main method .
writes the token buffer to the given buffer .
allocate a new { @link <unk> } with the given { @link <unk> } .
allocate a counter id .
allocate a new counter .
iterate through all the counters in the counter .
returns the number of unique contributors to a given counter .
<p > converts an array of { @code <unk> } into a { @code short } array . < / p >
creates a new { @code logentry } from the given { @code <unk> } .
allocate a counter with the given key and length .
creates a new {
try to fill the gap with a gap .
reads and returns the number of bytes read from the specified { @link <unk> } .
writes a buffer to the buffer .
offers a new counter to the given buffer .
wrap the given { @code buffer } with the given { @code length } and { @code length } .
claim a buffer .
/ * ( non - javadoc )
aborts the {
the main method .
launch the embedded context
closes the underlying { @link <unk> } .
notifies the items of the current items .
returns the number of bytes written to the given fragment .
reads the next message .
/ * ( non - javadoc )
return the number of bytes written to the given buffer .
return the position of this buffer .
like { @link <unk> ( channel string ) }
factory method to create an instance of a { @link <unk> } .
create a new image reader .
allocate a new { @link counter } with the given { @link <unk> } .
iterate through the counters and allocate a new counter .
returns a {
send out a {
scans the contents of the source buffer to find the previous value .
this method offers <code > <unk> / code > to <code > <unk> / code > .
insert a new value into the buffer .
attempt to claim a return position .
scans the buffer s position and returns the number of bytes written .
the main method .
creates a new counter with the given name and type .
start a subscriber in another thread based on the given parameters
prints the counters to the print stream .
launch an existing subscription .
creates a new { @link <unk> } with the given { @link <unk> } and { @link <unk> } .
/ * ( non - javadoc )
close the map .
dispatches a { @link <unk> } to a { @link <unk> } .
write a buffer to the buffer .
creates a new { @link <unk> } with the specified name from the specified { @link <unk> } .
creates a new slab from the pool .
writes all the blocks from the <unk> to the output stream .
reads from the pool .
reads from the <unk> buffer .
add the given list of {
returns true if the given comparator is descending .
@deprecated use { @link <unk> () } instead .
@deprecated use { @link <unk> ( byte [] int int ) } instead .
reads the entire contents of the page from the given input stream .
set the requested projection table to the requested projection
sets the compression level of the avro schema .
set the { @link <unk> } for the { @link job } .
/ * ( non - javadoc )
calculates the count of rows that satisfy the given filter .
gets thrift class .
converts a {
convert a {
converts a {
expand a glob pattern .
creates a { @link <unk> } for the given { @link number } .
creates a new instance of { @link <unk> } .
zips two ranges .
negates the given ranges .
/ * [ deutsch ] <p > liefert eine liste aller <unk> <unk> . < / p >
returns the value of the specified { @code long } value .
parses a {
prints one line to a filename .
reads next bit packed {
adapt a {
{ @link <unk> }
get the { @link filter } that matches the { @link predicate } .
creates a list of all the files in the given list of { @link <unk> } s .
reads the entire contents of a collection of files .
read a list of files from a list of files .
reads the entire contents of a { @link filestatus } into a { @link list } of { @link footer } s .
reads the entire contents of a { @link filestatus } into a { @link list } of { @link footer } objects .
reads the entire contents of a file into a collection of tokens .
reads the entire contents of a { @link <unk> } into a list of { @link footer } s .
reads the summary file from the given { @link configuration } .
read avro schema from parquet file .
read avro schema from parquet file .
read avro schema from parquet file .
main read method .
creates a { @link <unk> } from a file .
create a { @link <unk> } from a file .
read next row group .
read filtered row group
returns the next block of the dictionary .
loads the dictionary from the url .
add a record to the <unk> .
remove a writer from the given path .
this method is used to update the memory usage of a given font .
registers a new event to the callback .
/ * ( non - javadoc )
starts a new record .
starts a new {
writes the dictionary to the supplied dictionary .
writes the data to the stream .
write data page .
write data page .
write the data to the output
ends the end of the column .
ends the current record .
copy the contents of the given stream to the given stream .
ends the specified {
{ @link <unk> } for { @link <unk> } .
writes the merged metadata to the output directory .
writes a metadata file to a file .
writes the given metadata to the output directory .
merges two {
merges the {
merges two {
reads a value from the parquet data .
returns true if field type is optional .
merges the elements of each schema into a list of schema .
merges the given schema into this schema .
merges two { @link schema } objects with the given { @link schema } .
creates a union schema for the given schema .
http : // docs . oracle . com / javase / specs / jls / <unk> / <unk> . html
returns a {
returns a copy of the given field .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
returns a string representation of the given {
get thrift class from extra meta data
get thrift class from thrift class .
----- private methods -----
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
finalize the column .
/ * ( non - javadoc )
/ * package
convert the given path to a <code > <unk> / code > .
returns true if the type is a group type .
sets a field to the internally <code > <unk> / code > .
set a field value .
/ * ( non - javadoc )
returns true if the group type is a group type e . g . a group type .
adds a binary value to the delegate .
/ * ( non - javadoc )
<p > <unk> . < / p >
{ @inheritdoc }
/ * ( non - javadoc )
reads a mini block .
merges the attributes of a model into a new one .
get the logical type of the original type .
/ * ( non - javadoc )
{ @inheritdoc }
checks that the argument is a valid { @link illegalargumentexception } .
throws a { @link illegalstateexception } with the given message if condition is not met .
read all libraries from the stream .
migrate procedure to partitioned enum values .
get the { @link messagetype } for the given { @link <unk> } .
/ * ( non - javadoc )
initialize context .
/ * ( non - javadoc )
calculate the bit width for a given mini - formed data block .
creates a { @link <unk> } .
/ * ( non - javadoc )
creates a { @link <unk> } for the specified { @link <unk> } .
releases the { @link <unk> } .
checks if the given throwable is an instance of the specified type .
creates a factory for {
creates a new { @code statistics } .
returns a builder for the given primitive type .
returns a new {
returns true if the given schema type is supported by the given schema .
returns true if the given type is a group type e . g . a group type .
create a new { @link <unk> } instance .
returns an instance of { @link invocationhandler } for the given instance .
invokes the given method on the given object .
invokes a method on the given object with the given arguments .
adds a pattern to the stringbuilder .
/ * ( non - javadoc )
returns a list of beanspec for the given schema .
creates a { @link <unk> } exporter with the given { @link reporter } .
this method writes bytes from the input stream to the output stream .
close a closeable .
get a pathfilter instance of the filter .
/ * ( non - javadoc )
defers to {
/ * ( non - javadoc )
retrieves the list of { @link footer } s of the given { @link <unk> } .
split a {
<p > determines whether the specified column and value requirement for the specified column . < / p >
<p > <unk> . < / p >
creates a <b > <unk> / b > for two comparable objects .
gets the relationaloperator performing greater than equal to the provided column .
returns a { @link pair } of { @link column } s where the value is greater than or equal to the given value .
gets a relationaloperator performing less than equal to comparisons to determine whether all provided values are less than the specified value .
create a new path expression
create a new { @link <unk> } which is defined by a { @link <unk> } .
/ * ( non - javadoc )
log a message at the debug level .
/ * ( non - javadoc )
log a message at the info level .
/ * ( non - javadoc )
log a message at the warn level .
/ * ( non - javadoc )
log a message at the error level .
creates a { @link <unk> } .
/ * ( non - javadoc )
returns the parquet fields for the given parquet schema .
serialize a protobuf message .
creates a new { @link codec } for a specific { @link eventloopgroup } .
decorate a {
get a list of all fields that are missing
<unk> set set of <unk>
reads the meta - data from an instance of { @link <unk> } .
/ * ( non - javadoc )
set the {
adds the fields from the parquet class to the parquet type .
asserts that the type of agent is valid .
join an iterable of strings together into a single string .
joins the given collection of { @link string } s into a single { @link string } .
join an array of strings by using the specified separator .
expand the given glob pattern .
requires that { @code value } is { @code i } .
create a { @link org . apache . hadoop . api . java . lang . reflect . <unk> } .
create a {
writes the metadata from the parquet file to the given output file .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a { @link <unk> } for the given { @link arrow } .
maps parquet schema to <code > <unk> / code > .
convert a { @link schema } to an { @link schema } .
<p > <unk> . < / p >
returns the { @link <unk> } for the given { @link <unk> } .
retrieve the {
determines whether the given primitive type can be used for sorting .
returns the data type represented by this { @link <unk> } as a { @link byte } .
returns the logical type annotation of the given type .
encodes the given component metadata .
/ * package
/ * package
creates a { @link <unk> } for parquet schema .
{ @inheritdoc }
writes a long to the output stream .
advances the current {
write object to a base64 - encoded string .
reads an object from a byte array .
adds a new row to the end of the table .
adds the given offset to the table .
gets the offset from the given offsets for the given offsets .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
puts a new value into the cache .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
writes the given value to the given {
convert a glob expression to a regex pattern .
/ * ( non - javadoc )
returns the path to the given filename relative to the current directory .
converts a file name into a { @link java . net . uri } .
opens a new { @link inputstream } with the given { @link configuration } .
create a classloader for a list of jars .
create a classloader for the given jars .
create a classloader for a list of paths .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
returns a new { @link list } of { @link <unk> } s .
convert a {
convert a struct to a messagetype
returns true if the field is a valid element type .
get a {
obtains a list of { @link <unk> } { @link <unk> } and { @link <unk> } .
/ * ( non - javadoc )
creates a {
/ * ( non - javadoc )
returns a map of { @link <unk> } s .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
reads a signed 16 - bit int from this stream in little - endian order . this method reads two bytes from the stream starting at the current stream pointer . if the bytes read in order are <code > b1< / code > and <code > b2< / code > where <code > 0&nbsp ; &lt ; = &nbsp ; b1 &nbsp ;
reads a 64 - bit integer from the stream .
splits the given { @link <unk> } into a { @link <unk> } .
creates a flink { @link <unk> } from the given hadoop { @link org . apache . hadoop . mapred . inputsplit } .
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a primitive type to a primitive type .
convert a primitive type to a primitive type .
returns a builder for {
create a group definition for a group type .
create a matcher for { @link java . lang . object#equals ( object ) } .
create a group builder for repeated groups .
returns an { @link java . nio . iterator } from the pool .
checks to see if the specified version is satisfied by the specified type .
/ * ( non - javadoc )
returns a map of fields annotated with {
returns true if the given type is a group type e . g . a group type .
/ * ( non - javadoc )
/ * struct operations
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
write a socket to the channel .
write a 32 - bit integer into the buffer
write a type .
/ * ( non - javadoc )
/ * <unk>
/ * ( non - javadoc )
returns the {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
list input directories .
checks that the input files are satisfied .
creates a list of all the input files in the given directory .
initializes the list property .
{ @link <unk> } .
/ * ( non - javadoc )
reads the contents of the given { @link bytebuffer } from the given { @link bytebuffer } .
writes the content of the given { @link bytebuffer } to the given { @link bytebuffer } .
reads a direct buffer from the input stream .
reads the requested number of bytes from the given input stream into a new byte array .
constructs a { @link <unk> } instance with the specified { @link <unk> } .
----- private methods -----
/ * ( non - javadoc )
convert a { @link fielddescriptor } to a { @link <unk> } .
validates the rest of the avro schema .
filter data from repositories .
returns the type token for the given schema type .
set the converter class to use .
set the filter class to use .
merges the given tuple into the given tuple .
sum up columns .
{ @inheritdoc }
performs a read - on - data transfer .
deserialize a single thrift record to a struct .
reads a struct from the specified { @link <unk> } .
add a set content .
creates a recursing type checker for a { @link java . util . map } .
deserialize a map entry into a typed map .
/ * ( non - javadoc )
pack a number of bytes into the pool .
little - endian or intel format .
little - endian or intel format .
reads a 16 - bit integer from the stream .
read a {
{ @inheritdoc }
/ * ( non - javadoc )
set the {
----- interface <unk> -----
wraps the given { @link <unk> } into a { @link <unk> } .
converts a collection of objects to a string .
/ * ( non - javadoc )
writes the domain name to the file .
get the final version of the request .
creates a pipeline for the pipeline .
creates a <unk> .
creates a {
adapts a list of { @link <unk> } s to a list of { @link <unk> } instances .
creates the interceptor .
parses the avro schema into a schema object .
converts a number of days to a number .
returns the number of millis in the given milliseconds .
/ * ( non - javadoc )
decodes a { @link bigdecimal } into a { @link bigdecimal } .
/ * private void <unk> ( string address ) { if ( <unk> == null ) { return null ; }
/ * ( non - javadoc )
renames the blobstore and directories in the specified directory
/ * ( non - javadoc )
reports the current thread as a hung task .
registers a thread for the checkpoint .
/ * package private
returns the user information for the given username .
this method is used to retrieve the users credentials from the ldap server .
returns the list of groups for the given user .
builds a formatted fetch filter .
authenticates the user .
authenticates a web credential .
/ * ( non - javadoc )
create a props from a list of names .
creates a new { @link <unk> } object for the given { @link config } { @link <unk> } .
returns a read - only { @link com . hazelcast . core . <unk> } configuration for the given name . <p > the name is matched by pattern to the configuration and by stripping the partition id qualifier from the given { @code name } . if there is no config found by the name it will return the configuration with the name
re - authenticates the tgt .
allocate { @link <unk> } if necessary .
returns a list of strings that can be used to findings the task if necessary .
create a { @link <unk> } from the given { @link stage } .
attempts to create a cluster configuration if needed .
attempt to upgrade a saxon <unk> .
upgrade saxon .
/ * ( non - javadoc )
returns a list of {
returns true if the given class name is a system path .
creates a new {
adds the specified element to this queue .
inserts the specified element at the tail of this queue and returns the associated { @link object } . if the queue is empty returns { @code null } .
puts the value into the map .
returns a list of all { @link <unk> } s that have been added to the batcher .
gets descriptor .
gets the descriptor .
populates a map of { @link field } s with the given { @link map } of { @link descriptors } .
gets the descriptor .
converts a { @link genericrecord } to a { @link <unk> } .
/ * ( non - javadoc )
convert a { @link jsonobject } to a { @link <unk> } .
convert a mmcif message to a protobuf message .
<p > <unk> . < / p >
/ * ( non - javadoc )
converts the <unk> .
parse the field .
adapts a list of { @link object } s to a list of endpoint interceptors .
gets the original string .
tells whether or not the configuration depends on the specified configuration . <p > if the add - on depends on the value of { @code configuration } then it is assumed to be { @code false } otherwise . < / p > <p > if { @code configuration } is { @code true } the { @code configuration } is considered as
adds a stage alias to the stage .
analyzes the <unk> .
adds the given { @link <unk> } to the stage of the stage .
validates the stage .
/ * ( non - javadoc )
generate a batch of records .
process the response .
parses the response and returns a record .
resolve response headers .
populates a { @link <unk> } with a { @link <unk> } .
gets the header of the response .
save the metadata .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
sets the page offset .
/ * @param <unk>
returns a boolean indicating the last request .
parse a http response .
creates a taxonomy term .
increment the source offset from the given string .
clean up the response from the input stream .
returns the current page of the current record .
this method parses the given { @link <unk> } into a { @link <unk> } .
gets the header of the response .
/ * ( non - javadoc )
creates a new {
checks if the property is defined .
converts a <unk> into a <unk> object .
converts a { @link <unk> } to a { @link <unk> } object .
returns the { @link <unk> } instance for the given { @link credential } .
configure the { @link <unk> } instance .
list alert notes attached to the specified pipeline .
copy a line to a buffer .
returns the names of all classes in the given package .
removes duplicates from the given packages .
check if a batch is expired .
/ * ( non - javadoc )
find the next line in the list .
/ * ( non - javadoc )
binds the <code > connection< / code > to the <code > datasource< / code > .
closes the connection .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * <unk>
builds and returns the {
returns a {
creates a {
extract the type information from the hive metastore .
gets the value of the designated column in the hive table .
/ * ( non - javadoc )
<p > <unk> .
transforms a string into a <unk> .
adds the dictionary to the outputstream .
/ * ( non - javadoc )
stop the aggregator .
/ * ( non - javadoc )
returns a {
serialize an object to a string .
deserialize a json string to a java object .
deserializes a json string into an object of the specified type .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> el expression el el el el el el el el el el el el el el el el el el el el el el el el el el el el el el el el el el el el el el el el el el expression <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the fully qualified table name for the given table and table name .
convert a {
get the partition records type .
get the partition name value for the given partition .
returns true if the given record has changed .
returns a {
retrieves the name of a table .
<p > <unk> . < / p >
returns the field represented by the given {
get the location of a geometry field .
returns the location of a custom location .
get the avro schema for the builder .
returns the data format for the specified {
/ * ( non - javadoc )
create a {
resolves the scale or precision of the script .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
creates a data stream from a collection of {
validate that the partition name is valid .
write a key / value pair to a string .
reads the metadata from a metadata table .
get the cached caches .
set the parameters for the query .
handle batch update exception .
generate a list of saved searches for saved searches .
builds the cache context cache .
initializes the gauge if needed .
returns the group for the given {
handle post requests .
sets the context .
wait for a query to be done .
set the context for the table .
/ * ( non - javadoc )
reads a timestamp from the cache .
parses the given { @link string } into a { @link long } object .
causes the current thread to wait until the specified number of milliseconds is reached .
formats the given template with the specified arguments .
serialize a message to a document .
deserialize a live file .
refresh the live file .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a string representation of a { @link <unk> } to an { @link socketaddress } .
/ * ( non - javadoc )
checks the fields of solr fields .
returns a set of fields for the given field names .
/ * <unk>
handle error messages .
/ * ( non - javadoc )
sends a {
parse the name of the jar and return an array of dependencies .
parses the given url into a { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
produce the next source .
parses a date string to a calendar object .
/ * ( non - javadoc )
{ @inheritdoc }
fetches the credentials from aws sdk .
build client configuration .
create amazon <unk> db instance .
creates a new { @link <unk> } for the { @link <unk> } .
inetaddress we use to communicate to this node .
checks if the specified node is a valid snapshot .
receives a <code > <unk> / code > from the given <code > <unk> / code > .
write document .
add the { @link <unk> } to the { @link <unk> } .
helper method to create a { @link <unk> } with a { @link <unk> } .
execute a privileged { @link action } as a { @link subject } instance .
execute the given action as a subject .
/ * ( non - javadoc )
{ @inheritdoc }
decode the {
extracts the { @link bytebuf } from the specified { @link bytebuf } starting at index { @code index } .
signal that the <unk> is already configured .
create a directory context .
starts the background receive packet .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the ratio of two sets .
/ * ( non - javadoc )
creates a list of {
/ * ( non - javadoc )
register a function definition .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
clones this record .
clones this record .
returns a {
/ * ( non - javadoc )
adds a value to the cache .
serialize a request to the api .
build a config definition by name
returns the name of the column with the specified name .
returns a string representation of the given string .
delete alert with the given <unk>
create or update an alert fragment .
returns the list of <unk> available to the user .
returns the list of brand profiles for the specified account .
/ * ( non - javadoc )
/ * --- public methods ---
writes all the dependencies to the output stream .
/ * ( non - javadoc )
saves the operation .
for internal use only .
/ * ( non - javadoc )
returns the value of the given field .
returns a sorted set of all the elements in this set sorted by {
{ @inheritdoc }
this method is used to convert the xmx to a xmx object .
adds the contents of a folder to the given directory .
/ * ( non - javadoc )
returns the value to which the specified key is mapped .
{ @inheritdoc }
/ * ( non - javadoc )
sets the <unk> flag .
/ * ( non - javadoc )
utility function to get the last shards for the given kinesis stream .
process the query .
handle <unk> error .
returns the checksum of the specified record .
/ * package
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
generates the verification string .
raid an extension .
replies the directory that corresponds to the given directory .
returns the pid of the process process .
validate and extract fields .
/ * ( non - javadoc )
{ @inheritdoc }
returns a snapshot of this snapshot .
ensures that the given directory exists .
{ @inheritdoc }
returns a string representation of the exception .
get the catalog from the database .
retrieves a description of the specified column in the database .
retrieves a description of the specified table in the database .
retrieves a description of the specified table in the database .
gets the primary keys of the given table and table name .
returns a set of index names for the given schema .
<unk> - <unk>
write a batch of records to a table .
write a batch of records .
/ * ( non - javadoc )
drop a partition
return drop - index values for the specified mbean
/ * ( non - javadoc )
adds a record header to the record .
process a string value .
convert a { @link stage } to a { @link stage }
main method .
force the runnable to be run on the background thread .
creates jersey {
checks if the http header value is contained in the map .
/ * ( non - javadoc )
/ * ( non - javadoc )
fill a {
returns null if field is not null .
creates a field from a script object .
/ * ( non - javadoc )
loads a schema from the registry .
register a schema with the given schema .
fetch schema from registry .
fetch schema id from the given subject .
/ * ( non - javadoc )
writes the schema id to the output stream .
<p > returns the id of the schema if it exists . < / p >
returns the default values for the given schema .
parse the records into a list of records .
called when the {
find the field name for the given field path .
/ * ( non - javadoc )
process response .
find the field offset for the given field path .
this method returns a list of all the bad records in the record .
compares this version to another version .
/ * ( non - javadoc )
returns a { @link collection } of { @link edge } s where the { @link edge } s are contained in { @link <unk> } .
/ * ( non - javadoc )
returns <code > <unk> / code > if <code > <unk> / code > is <code > <unk> / code > .
convert a map to a json string .
read a map of field names to a map .
process the response .
waits for a report to be sent .
checks if the given file exists in the filesystem .
write the offsets for the {
read the whitelist of whitelist from a file .
creates a { @link <unk> } initialized with the given { @link <unk> } .
[ variable my_blob_name ]
creates a copy of this blob with the specified destination path .
handles a {
allocate a new relationship for a given blob .
returns a new {
release a reader .
sets the authentication to be used for authentication .
adds a default value for the given key .
parses the given string as a date object .
returns the value of the accept header with the given array of accepted accepts .
<p > <unk> . < / p >
encodes a string to a url - encoded string .
/ * ( non - javadoc )
deserializes the given response into an object of the specified type .
gets the client .
init credential provider
get the metadata for a table .
bulk initialization method for bulk initialization .
construct a new <unk> .
creates a list of {
compile an encoded string .
add all the jars to the job .
add all the jars in the given { @link configuration } to the given { @link configuration } .
{ @inheritdoc }
writes records to the batch .
shutdown the checkpoint .
/ * ( non - javadoc )
/ * <unk>
evaluates the condition expressions
/ * ( non - javadoc )
produce a batch of data from a batch of data .
get the offset of the file for the given file .
java agent premain method .
builds a set of white list dependencies .
returns a map with all stage libraries that are dependent on the stage .
traverses the classpath .
set the parallelism for this layer .
package - private
example of running a batch query .
<pre > { <unk> : [ 1 2 3 ] } < / pre >
~ methods **************************************************************************************************************************************
[ variable <unk> ]
gets the table descriptions .
check if a table is valid and throws an exception if not .
create routines .
returns true if the given {
get the table schema from the given table response .
get the foreign key properties for a join table .
returns the java type for the given sql type name . <p >
try to send a { @link <unk> } via a { @link <unk> } .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package
evaluates the given field expression and returns the result .
/ * ( non - javadoc )
releases the lock on the file system .
returns an input stream for reading the contents of the zip file .
returns a {
writes the contents of the given { @link outputstream } to the given { @link file } .
/ * ( non - javadoc )
copied from <unk> .
create a { @link <unk> } from a { @link <unk> } .
executes the required configuration libraries .
find all services that are available .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
registers a groupby object with the given name and type .
start the server .
stop the aggregator .
/ * ( non - javadoc )
----- private methods -----
acquires a login required for the given jaas type .
release the references to the given tablename .
close all the instances in the cache .
translate a glob pattern to a regular expression .
binds the given data to the given address .
returns a list of <code > <unk> / code > s that match the given bucket name .
returns a list of {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
produce an instance of { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
set the binding .
/ * ( non - javadoc )
/ * ( non - javadoc )
create kafka consumer properties .
records a partition - disabled partition .
discretizes the current table .
wait for the head of the workspace to be used .
returns the next partition for the given { @link <unk> } .
this method is called when a {
/ * ( non - javadoc )
reads a csv file from a csv file .
returns the next token .
returns a copy of this counter with the specified multiplier .
returns the current access token .
/ * ------------------------------------------------------------
gets the <unk> response .
returns the base url for the given url .
retrieve the user token from the response .
/ * ( non - javadoc )
returns instance of {
update properties .
{ @inheritdoc }
<unk> <unk> .
logs an unauthorized response .
creates a schema for the given field .
helper method to get the schema for a single field .
converts a {
returns the value of the specified attribute in the record .
create a default value for nullable types .
download metrics if needed .
compares two paths .
returns the index of the first occurrence of the specified group .
returns an unmodifiable list of the names of the group .
determines if a string is a digit or not .
splits a string into a list of escaped characters .
returns true if the given string is a quote .
parses the given string and returns true if the given string is escaped .
check if the given string is a valid html entity reference .
/ * package private
this method checks if the named group name matches the named pattern .
<unk> > <unk>
splits the input string using the given prefix .
/ * --- private methods ---
/ * ( non - javadoc )
get all attributes of a mbean
execute a sql schema .
/ * documented <unk>
/ * ( non - javadoc )
<p > gets the offset of the file . < / p >
fills the buffer with the given data .
recovers the default configuration from the exchange configuration .
get the details of a detached service .
extracts the contents of an input stream into a byte array .
/ * ( non - javadoc )
convert string to nearest object type .
parses the part of the plugin part .
/ * ( non - javadoc )
convert a byte array to a long value .
{ @inheritdoc }
{ @inheritdoc }
returns the fully - qualified index table name for the given schema .
returns the qualified table name for the given table .
handles the <unk> .
retrieves a list of table names for the table .
/ * ( non - javadoc )
creates the default table names for the given table and table name .
creates the persist field mappings .
convert a java type to dialect type
<p > <unk> . < / p >
set the primary keys of this sender .
<p > <unk> . < / p >
/ * ( non - javadoc )
classify the schema .
this method is called by the { @link <unk> ( map <unk> ) } method .
creates a batch context .
{ @inheritdoc }
returns a map with the given input .
creates a runtime bean from the given bean .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
builds a string representation of a partition column .
returns a map of the last column offset from the given offset .
retrieves the schema format for the given schema .
{ @link <unk> ( string string ) }
returns a { @link list } of { @link org . apache . commons . codec . <unk> } s for the given { @link table } .
generates a new <code > <unk> / code > instance .
generates a { @link com . <unk> . <unk> . <unk> . <unk> } for the specified { @link <unk> } .
uploads a list of {
uploads a new { @link <unk> } to the s3 bucket .
shutdown the leader election .
read a buffer from the input stream .
returns a list of {
get the query parameters from the request string .
/ * ( non - javadoc )
converts the list of { @link string } s into an array of { @link string } s .
/ * ( non - javadoc )
converts a double to a display format .
download a live file .
/ * ( non - javadoc )
check if the given module name is fully qualified .
returns <code > true< / code > if <code > <unk> / code > is set to <code > <unk> / code > .
/ * ( non - javadoc )
builds proposals from the given list of stages .
$example off : <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
propagates the config to the <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * convert a string to a string
create jdbc record writer .
create jdbc record writer .
subscribe to the <unk> .
extract named groups .
/ * ( non - javadoc )
create a new <unk> object .
creates a new network container for the specified id .
sets the aliases for the given record .
/ * ( non - javadoc )
convert a { @link future } to a { @link <unk> } .
this method will return the operation code from the given record .
create a gauge for the given name and <unk> .
removes the <unk> from the specified <unk> .
{ @inheritdoc }
/ * ( non - javadoc )
/ * package
/ * ( non - javadoc )
<p > <unk> . < / p >
prepare the temp files for the temp file .
write a resulset to a geojson file reference
converts avro data into a { @link <unk> } object .
write parquet configuration to avro parquet .
destroys the { @link redis ( client ) } { @link redis server } { @link <unk> } .
checks that the names of the packages are unique .
validate a resource .
returns the type information for the given field name .
convenience method for { @link <unk> ( class string ) } .
<p > <unk> . < / p >
check that the { @link field } is encrypted .
add a new <unk> to the given <unk> .
read the field value .
<unk> <unk> .
/ * ( non - javadoc )
handles a checkpoint .
returns true if the graph is equivalent to graph vertices .
sets the pattern used by this matcher .
matches a string buffer with the given replacement string .
/ * ( non - javadoc )
replaces all occurrences of the given regular expression with the given replacement string .
returns a { @link properties } object for the consumer .
<unk> > <unk>
returns a string literal with double - quotes double quotes .
unescape quotes and back - quotes .
<unk> <unk> - <unk>
ensures that the given {
get a list of <unk> .
converts a { @link <unk> } to a { @link status } .
creates the start event .
creates a {
gets all references to the given connection .
put the offset from the byte array at the given offset .
convert a field to a runtime type .
execute a partition query using the given partition name and partition names .
drop the table with the given partition name .
returns a set of {
{ @inheritdoc }
execute the query and return the result .
this method is used to set the names of an avro schema .
execute the query .
execute a {
converts the next batch of records to a batch of records .
delete property .
/ * ( non - javadoc )
get the { @link <unk> } for this { @link <unk> } .
/ * ( non - javadoc )
runs a {
/ * ( non - javadoc )
populates the {
gets the value from the field path .
checks if the port is valid .
returns true if the subscriber is true .
serializes the {
delete the fragment .
resolve the record in a { @link <unk> } .
delete records from metadata .
attempts to reconcile the given operation .
downloads an s3 file data format .
/ * <unk>
/ * <unk>
loads a { @link class } from a { @link classloader } .
parse the message read and close the stream .
runs the given { @link java . util . concurrent . <unk> ( java . util . resourcebundle java . lang . object ) } with the given { @link java . util . concurrent . <unk> } .
runs the given loader using the given action .
creates a new instance of the given { @link <unk> } .
registers the given {
returns a list of key / value pairs in the map .
reads all the attributes of the given resource .
/ * ( non - javadoc )
logs out the current user .
disable exceptions .
returns a normalized path for the given path .
ensures that the given path is a java . io . file .
generate fields for the given class .
generate jdbc fields from metadata field .
returns the value of the column for the given column .
creates a { @link java . util . concurrent . <unk> } instance .
/ * ( non - javadoc )
/ * ( non - javadoc )
rename the path .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
produces a sequence of download records from a batch .
set the path separator .
get a {
converts a collection of strings to a string array .
checks if the given string matches the given pattern .
set the suggested offsets for the file .
gets the month aliases for the file .
returns the amount of time that the next wait time is reached .
<p > <unk> . < / p >
returns a map of the link aggregation link aggregation id for the given schema .
<unk> operation .
/ * ( non - javadoc )
<p > <unk> . < / p >
configures the {
refresh the access token .
~ methods **************************************************************************************************************************************
get the next time from the runner .
<p > main . < / p >
override this to customize the response .
decode header .
decodes the form data and frame .
decode parameters into a map .
reads a number of bytes from the buffer .
gets boundary positions .
/ * ( non - javadoc )
internal method to save a temporary file .
/ * [ deutsch ] <p > <unk> . < / p >
/ * [ deutsch ] <p > <unk> . < / p >
/ * ( non - javadoc )
returns the mime type of a file .
/ * ( non - javadoc )
override this to customize the server .
stops the client .
register handler mappings
sends statistics to the given output stream .
copies the contents of a file to the output stream .
create a new response response .
create a fixed length response .
creates a fixed length response .
creates a fixed length response response .
/ * ( non - javadoc )
/ * ( non - javadoc )
encodes a byte array into base64 notation .
returns the current repository s name .
read payload .
write the payload to the output stream .
add a cookie to the set of cookies
adds the cookie to the response .
delete session key .
method <unk> <p >
/ * ------------------------------------------------------------
convert a base64 encoded string to a base64 encoded string .
encodes a plain text string with base64 encoding .
returns the name of the domain name pattern .
set the table name .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
creates a mapper for the jackson objectmapper .
/ * ( non - javadoc )
gets the value of the requested property .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ------------------------------------------------------------
/ * ( non - javadoc )
registers the session repository filter .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
fetch column .
/ * ( non - javadoc )
handle a jndi name .
converts the given object to an array of { @link class } s .
/ * ( non - javadoc )
/ * ( non - javadoc )
initialise the <unk> .
/ * ( non - javadoc )
convenience method to return the raw text for the attribute .
/ * ( non - javadoc )
add dependencies for modules
returns a list of all of the items in this folder .
/ * ( non - javadoc )
returns a list of { @link <unk> } instances .
validate dn .
utility method to check if the generation of the generation of the generation has been processed .
<p > <unk> . < / p >
init method .
called when a component is stopped .
a helper method to resolve a string literal .
called when the orb ===============================================================
store the object data .
this method ===============================================================
/ * ------------------------------------------------------------
encrypts the object .
/ * ( non - javadoc )
writes the read lock count to the next read lock .
increments the current read lock count .
add runtime extensions to the deployment .
add archives to be included in the {
add a service extensions to the deployment .
attempts to load the given id from the security context .
/ * ( non - javadoc )
register operations .
/ * ( non - javadoc )
<unk> > <unk>
/ * ( non - javadoc )
create a new { @link <unk> } instance .
/ * package
load an persistence provider .
/ * ( non - javadoc )
get the next timer object . <p >
helper method to set the accessibility archives .
add runtime extensions to the deployment .
{ @inheritdoc }
create the <unk> .
set the configuration and file
----- private methods -----
returns a list of servlet url patterns .
returns the list of servlet class mappings for the given annotation .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link org . jboss . as . controller . <unk> ( org . jboss . dmr . modelnode org . jboss . as . controller . <unk> ) }
/ * ( non - javadoc )
this method parses a { @link org . jboss . as . controller . <unk> } attribute from the given { @link org . jboss . as . controller . <unk> } .
/ * public void <unk> ( <unk> pod ) { this . <unk> () ;
gets the container .
returns { @code true } if { @code <unk> } is { @code true } .
{ @link <unk> ( modelnode ) }
set an operation address .
creates an operation address .
returns true if the given operation is a { @link <unk> } .
creates a { @link modelnode } from a list of { @link modelnode } s .
creates a string representation of a { @link <unk> } .
convienence method that creates an { @link org . jboss . as . controller . <unk> . read } operation .
convienence method that allows you to create an operation that will create an operation .
creates a write - attribute operation .
creates an undefine - attribute operation .
{ @inheritdoc }
adds a componenthandler with the specified componenttype and renderertype aliased by the tag name .
returns an unmodifiable map of the specified factories .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the method name from the given request .
adds a { @link <unk> } to the cache .
add a module dependency .
configures the cluster endpoints .
gets the root context root .
get the name of the transport class .
/ * ( non - javadoc )
/ * [ deutsch ] <p > liefert den <unk> - <unk> . < / p >
replaces all activation config properties in the given source object with the given properties .
throws { @link org . apache . wlp . <unk> . wlp . <unk> . <unk> . <unk> }
loads a security context from a module .
push the run as identity .
returns the { @link <unk> } for the current { @link <unk> } .
clear the security context .
get the run as identity as identity .
get the run as identity as identity .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link description }
installs the given management service services .
installs the { @link service } service with the given { @link service } .
register add operation .
/ * ( non - javadoc )
checks if the given string is a valid property type .
resolves a method .
find field by reflection
process invocation method .
/ * ( non - javadoc )
quote a string .
initializes the options .
{ @link <unk> ( java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string ) }
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
creates a standalone url report from the specified host and port .
the main method .
remove shrinkwrap deployment
remove shrinkwrap deployment
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new { @link org . apache . beehive . netui . pageflow . annotations . <unk> } for this request .
/ * private void <unk> ( <unk> <unk> ) { <unk> = new <unk> ( <unk> ) ; }
helper method for { @link <unk> ( <unk> ) } .
reads a name attribute and returns it as a string .
reads the value of an attribute .
/ * package private
add dependencies for modules
reloads the component with the given components .
eap 7 . 1 .
creates a strategy for a {
/ * ( non - javadoc )
load an exception from an input stream .
returns <tt > true< / tt > if this list contains the specified element .
get the value of the local remote object .
minioclient . <unk> () example .
/ * ( non - javadoc )
get the list of potential subtypes of a class .
add the given set of <unk> to the given class .
puts the given entitymanager into the current context registry .
write the criteria element .
returns a list of {
create a new { @link url } from a { @link string } .
clear the security context .
write the element content .
sets the value of the specified key in the current valuemap to the given value .
appends the given parts to this line .
returns the current lock key .
release an instance .
releases the lock of the given instance .
/ * ( non - javadoc )
write the given inputstream to the given virtual file .
add a string to the scheduler .
/ * ------------------------------------------------------------
verifies the content of the given string .
attempts to create a thread for the given module name and thread name .
add dependencies for modules .
/ * ( non - javadoc )
gets the velocity context .
invokes the { @code endpoint } invocation .
invokes { @link <unk> ( view collection ) } .
returns true if the given method matches the given method .
creates an instance of { @link resource } .
/ * managamentxmldelegate methods
gets the { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
handles the endpoint security request .
get transport http response string .
<unk> <unk> <unk>
adds a new domain to the given <unk>
create a new <unk> object from the given <unk> .
/ * ( non - javadoc )
/ * managamentxmldelegate methods
returns the omg idl exception name for the given idl exception name .
returns the name of the given parent .
----- public static methods -----
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the <unk> of the current transaction
get the { @link <unk> } instance for the given { @link <unk> } .
gets the connection factory .
get the last component of a name .
checks if the given name is null or empty .
returns an exception with the given name and context name .
factory method for creating a new { @link namingexception } from the given { @link throwable cause } .
<p > <unk> . < / p >
converts the given identifier to a set of <unk> beans .
returns an enumeration backed by the given collection .
unbinds a value from the specified context .
unbinds the specified <code > <unk> / code > .
called by { @link <unk> ( operationcontext org . jboss . dmr . modelnode org . jboss . dmr . modelnode org . jboss . as . controller . model . controller org . jboss . dmr . modelnode org . jboss . as . controller . model . model . model . model ) } ) .
{ @link org . jboss . as . controller . operationcontext . <unk> ( org . jboss . dmr . modelnode org . jboss . as . controller . <unk> . jboss . dmr . modelnode org . jboss . as . controller . <unk> ) } .
add a new { @link org . jboss . as . controller . <unk> } to the { @link org . jboss . as . controller . operationcontext . stage#model } .
parses a remote domain controller attributes .
parse connection definitions .
/ * parse the connection definitions attribute .
parse a xa pool .
creates a new instance of this class with the given instance .
/ * ( non - javadoc )
construct a <code > <unk> / code > instance for the given <code > <unk> / code > .
/ * ( non - javadoc )
merges the given { @link <unk> } with the given { @link <unk> } .
lookup seam integration resource loader .
resolves a runtime name .
/ * ( non - javadoc )
test if the managed bean class is abstract .
create a <unk> listener for a <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the primitive value of the specified type .
/ * ( non - javadoc )
closes the <unk> .
returns a list of urls for the given url pattern .
get grammar pool .
returns the list of servlet mappings associated with the specified servlet name .
get all security constraints .
configure jaas authentication provider .
this method is called when a { @link <unk> } is received from a { @link <unk> } .
/ * ( non - javadoc )
process init context parameters .
factory method to create a new { @link <unk> } .
publish meta data
returns a new { @code <unk> } with the specified servlet class name .
creates a new { @link <unk> } instance .
new auth constraint .
new user data constraint .
factory method for creating a new { @link <unk> } .
this method constructs a new { @link <unk> } with the given key and value .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of an attribute as a class .
register a new {
/ * public byte [] <unk> ( byte [] <unk> ) { <unk> = <unk> . <unk> ( <unk> . length () ) ; }
create a tagged component using the specified codec .
create a { @link component } for the specified { @link <unk> } .
create a { @link <unk> } from a { @link <unk> } .
given a {
creates a new { @link <unk> } with the { @link <unk> } and { @link <unk> } .
/ * ( non - javadoc )
applies the transport protocol to the given host and port
this method is called by the test code to create a target phase for the binding .
this method is used to create the target phase for the current resource .
gzip compress the given input and return the result as a byte array .
/ * double
encode a base64 encoded string token .
this function decodes a { @code <unk> } into a { @code <unk> } .
decodes a byte array into a byte array .
identifies the security mechanism used by the client .
/ * ( non - javadoc )
/ * ( non - javadoc )
process injection targets .
{ @inheritdoc }
retrieve the jndi name from the given { @link operationcontext } .
implementation of <unk> implementation of { @link org . jboss . as . controller . <unk> ( org . jboss . as . controller . <unk> ) } .
resolves the domain attribute .
/ * ( non - javadoc )
parse permissions from the provided { @link virtualfile } .
/ * ( non - javadoc )
/ * package
/ * package
associates the specified { @link <unk> } with the given { @link <unk> } .
/ * package
/ * package
convert a { @link map } to a { @link string } .
parses the persistence unit .
load the persistence unit name .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > start . < / p >
stop operation .
pauses the { @link <unk> } .
resume ( un - pause ) .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
add listener .
{ @inheritdoc }
modify the naming store .
stop the manifest .
/ * package
creates a {
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > getall . < / p >
gets the reference to the <unk> .
{ @inheritdoc }
/ * ( non - javadoc )
processes the annotations of the given bean .
/ * ( non - javadoc )
/ * ( non - javadoc )
reads the property transformer .
checks to see if two <unk> beans have two <unk> .
configure the default datasource properties .
execute an entity detached from a map .
skip synchronization .
liberty change for cxf begin
{ @link <unk> ( modelnode modelnode ) }
/ * ( non - javadoc )
create an orb instance .
bindview annotated fields in the specified { @link view } using the specified { @link <unk> } .
d413752 . 1
returns the current { @link <unk> } for the current { @link <unk> } .
creates an instance of the { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
destroy the { @link <unk> } associated with this { @link <unk> } .
creates an instance of { @link <unk> } .
/ * ( non - javadoc )
returns a new ldapname instance with the given name .
composes a name with a composite name .
/ * ( non - javadoc )
add a naming listener .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
liberty change for cxf begin
turns a composite changeset into a map of { @link <unk> } s .
/ * package
/ * ( non - javadoc )
returns the default value for the given annotation array .
liberty change for cxf begin
{ @inheritdoc }
/ * ( non - javadoc )
register persistence context .
creates an array of { @link provisionoption } s .
returns the status code of the given status code .
<pre > { @code <unk> > <unk> = <unk> . <unk> () ; } < / pre >
creates a new entity manager factory .
called after entity manager has been created .
start a cache .
binds the action listeners to the specified component .
binds the specified { @link <unk> } to the { @link <unk> } .
/ * ( non - javadoc )
<p > extracts all properties from a jsonarray . < / p >
/ * --------------------------------------------------------------------------
determine the full dialect for the given name .
/ * ( non - javadoc )
converts the given string into a date using the given format .
<unk> > <unk>
marks the given deployment as an attachment .
determines if the deployment unit is part of the process application .
reads the contents of the given { @link inputstream } into a { @link string } .
serializes the object to the given output stream .
/ * ( non - javadoc )
answer the reference to the <unk> .
determines the description of the preference .
/ * managamentxmldelegate methods
looks up the xpath for the given index types . <p >
/ * ( non - javadoc )
inform monitor of <unk> .
this method is called by the intent to end the <unk> .
@param stack @param <unk>
adds an entity to the database .
@param <unk> the list of entity names @param <unk>
gets the current call size .
add dependencies for modules
process configurations .
process the <unk> .
<unk> <p > <unk> . < / p >
d413752 . 1
write simple primitive value .
convert a string to a string .
returns a string representation of the given string .
returns true if the given string is a valid utf - 8 string .
this method checks if the given character is a valid password . this method is used to check whether a given character is a brute - force a brute force method .
adapted from {
<p > <unk> . < / p >
returns the signature of a method .
returns the class name of the given expected type .
/ * ( non - javadoc )
returns a { @link <unk> } for the specified { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new { @link <unk> } for the given { @link <unk> } .
adds a resource to the given { @link <unk> } .
( non - javadoc )
/ * ( non - javadoc )
returns <tt > integer . max_value< / tt >
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced by the specified value .
copies all of the mappings from the specified map to this map .
converts a { @link modelnode } to a { @link pathaddress } .
sort the clustering
returns the package name of the given class .
/ * ( non - javadoc )
returns a map with the timers associated with the timer .
convenience method to create a directory with the given parameters .
invoked by the deployment activator to perform the deploy phase of the deployment .
returns a {
/ * ( non - javadoc )
----- private methods -----
add a listener to the target scope .
remove a listener .
fire an event .
returns a new instance of { @link <unk> } with the given { @link <unk> } .
/ * ( non - javadoc )
creates a new { @link subject } instance for the given { @link <unk> } .
{ @inheritdoc }
returns the current {
add the subject to the subject .
handle { @link org . jboss . as . controller . <unk> . <unk> } and { @link org . jboss . as . controller . <unk> . <unk> }
get the modifiable data store service .
process the invocation context .
/ * ( non - javadoc )
/ * ( non - javadoc )
todo maybe do something with <unk>
add a {
returns the class that corresponds to the specified class name .
$antlr start <unk>
substitute sub - strings in the buffer .
/ * ( non - javadoc )
stop the service .
{ @link <unk> ( operationcontext org . jboss . dmr . modelnode org . jboss . as . controller . <unk> . jboss . dmr . modelnode org . jboss . as . controller . <unk> . jboss . dmr . modelnode org . jboss . as . controller . resource . <unk> ) } .
/ * package private
get the top level deployment unit .
get the name of the binding .
creates a { @link <unk> } for the given { @link component } .
/ * ( non - javadoc )
visit a class .
returns a list of { @link <unk> } s for the current { @link <unk> } .
adds a { @link <unk> } to the given { @link <unk> } .
adds a chained interceptor to this view .
returns the list of interceptors for the given method . <p >
adds a new { @link <unk> } to the given { @link <unk> } .
adds a chained interceptor factory to the list of interceptors .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
creates a list of class loaders for a list of class loaders .
get an exception reporting an unexpected xml element .
removes the given resource from the tree .
creates new {
get <unk> <unk>
check if a deployment unit is mbean
gets the host name from the given <unk> .
/ * ------------------------------------------------------------
<p > <unk> . < / p >
get required attachment from webservice deployment .
gets optional attachment .
merge a { @link org . apache . commons . war . metadata . <unk> } object to a { @link org . apache . commons . war . metadata . <unk> } .
/ * ( non - javadoc )
<unk> : <unk>
gets the context root of the deployment .
turns a changeset into a composite write operation .
/ * ( non - javadoc )
/ * ( non - javadoc )
setup the orb instances .
create an ssl configuration for the ssl configuration .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link <unk> ( org . jboss . controller . <unk> . controller org . jboss . controller . <unk> . controller org . jboss . controller . controller . <unk> ) }
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
get a list of resource files .
add dependencies for modules
/ * ( non - javadoc )
returns the external properties for the given pu .
/ * package
/ * ( non - javadoc )
{ @inheritdoc }
process a single index .
update a server config .
{ @inheritdoc }
/ * ( non - javadoc )
process invocation method .
start indexing .
d413752 . 1
returns true if all fields are static .
visit a reference .
returns the { @link <unk> } contained by the given name .
returns an array of {
sets the type of this type .
simplified method to locate a request .
decodes a base64 encoded string .
decodes a string into a string .
converts a string into a hex encoded string .
gets a new set of deployments for the given unit .
creates a new { @link endpoint } instance .
{ @inheritdoc }
create a uri from a client request .
{ @inheritdoc }
determines whether a deployment unit is a jax - rs deployment .
remove the lock . <p >
li2281 . 07
get the next timeout . <p >
sets the next event .
get the next time in milliseconds . <p >
/ * ( non - javadoc )
throws an {
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new { @link set } of { @link <unk> } .
visit a class .
/ * ( non - javadoc )
add dependencies for modules
returns a handler that can be used to create a new { @link <unk> } instance .
removes the <unk> from the <unk> .
returns a list of {
adds a dependency to the list of active transactions .
adds a { @link org . jboss . as . controller . <unk> } instance to the { @link org . jboss . as . controller . deployment . <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
初始化<br > <unk>
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
<unk> method .
/ * ( non - javadoc )
pauses the handshake .
creates a dialog title .
registers the given class for the given class .
convert a string to a <unk> .
/ * ******************************************************************** / * factory methods
create a reader for the given class .
verifies that the given class is a subclass of the expected type .
merge all the injections required to the book .
this method determines if the element is equal to the given element .
construct a list of all child executions of the given job .
{ @link <unk> ( operationcontext org . jboss . dmr . modelnode org . jboss . dmr . modelnode org . jboss . as . controller . <unk> ) } .
creates a new {
factory method to create a { @link field } from a { @link <unk> } .
returns a { @link <unk> } for the given class .
returns the class of the given class name .
returns the {
{ @link org . jboss . as . controller . <unk> ( org . jboss . as . controller . <unk> ) }
get the <unk> service key store when needed .
{ @link <unk> }
get the customized {
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
split a string into a byte array .
parses the given component string into a string .
returns the index of the first occurrence of the specified string .
{ @link <unk> ( org . jboss . controller . <unk> . controller org . jboss . controller . <unk> . controller org . jboss . controller . controller . <unk> ) }
/ * ( non - javadoc )
/ * ( non - javadoc )
configure the logging service .
/ * ( non - javadoc )
get the value
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * <unk>
configure the bean .
dispatches the given { @link bean } to the given { @link bean } .
add the receiver configuration to the receiver .
create a service reference .
gets the object instance of the given object .
returns the { @link <unk> } for the current { @link <unk> } .
checks if the given { @code name } is a { @link <unk> } .
returns the {
returns all annotations of the given class that are annotated with the given annotation .
gets a module by name .
/ * ( non - javadoc )
extracts and verifies the session info class .
/ * ( non - javadoc )
/ * ( non - javadoc )
parses the steps .
find persistence unit metadata .
/ * ( non - javadoc )
creates a new {
returns the number of non - null parameters .
validate the descriptor .
/ * ( non - javadoc )
returns an instance of the { @link <unk> } .
creates a new { @link <unk> } with the specified { @link <unk> } .
create the web application descriptor .
/ * ( non - javadoc )
{ @inheritdoc }
create the servlet mapping config .
creates the security constraints for this ejb .
create the login config .
/ * ( non - javadoc )
get the <unk> for ejb
{ @inheritdoc }
f743 - <unk>
/ * ( non - javadoc )
returns the value of the <code > <unk> / code > property that is contained within this <code > <unk> / code > .
normalize an array of bytes .
/ * ( non - javadoc )
{ @link <unk> ( org . jboss . controller . controller . <unk> ) }
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
called by { @link <unk> ( operationcontext org . jboss . dmr . modelnode org . jboss . dmr . modelnode org . jboss . dmr . modelnode org . jboss . as . controller . model . model . model . model . <unk> org . jboss . as . controller . model . model . model . model . model ) }
/ * ( non - javadoc )
{ @inheritdoc }
shuts down the {
/ * ( non - javadoc )
returns the parent classloader for the given class loader .
{ @link <unk> ( org . jboss . as . controller . <unk> ) }
/ * managamentxmldelegate methods
/ * ( non - javadoc )
/ * ( non - javadoc )
method <unk> .
/ * ( non - javadoc )
{ @inheritdoc }
/ * invokes the <unk> method .
method called to parse authorization configuration .
parse a <unk> configuration element .
/ * public void <unk> ( string value ) { <unk> > <unk> = new <unk> () ; system . out . println ( new <unk> () ; ) ;
method called to parse the attributes of a remote domain element .
/ * ( non - javadoc )
/ * public void <unk> ( string value ) { if ( ! = null ) { return null ; }
/ * public void <unk> ( string value ) { <unk> > <unk> = new <unk> () ; }
/ * public void <unk> ( string value ) { <unk> > <unk> = new <unk> > () ; if ( <unk> == null ) { return null ; }
{ @link <unk> ( <unk> ) } method .
/ * ( non - javadoc )
write the naming attribute .
write a constructor configuration .
write decorator .
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the node is writable .
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is used to merge the deployment descriptor to the deployment descriptor .
add dependencies for modules
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > execute . < / p >
/ * ( non - javadoc )
adds the {
deploys an existing persistence unit .
/ * ( non - javadoc )
set the persistence level .
gets persistence provider .
gets the persistence provider services .
/ * ( non - javadoc )
process the persistence unit for persistence unit .
adds the management console console to the given unit .
gets or creates a resource .
/ * ( non - javadoc )
create a deployment
build the { @link <unk> } .
build enterprise bean meta data .
validates the given operation .
adds a participant to the given { @link operationcontext } .
/ * ( non - javadoc )
returns the name of the given deployment unit .
<p > getter for the field <code > <unk> / code > . < / p >
{ @link description }
/ * managamentxmldelegate methods
/ * public void <unk> ( string value ) { <unk> > <unk> = new arraylist< > () ;
/ * ( non - javadoc )
150727 - rewrote entire method .
{ @link com . google . orb . impl . spi . <unk> ( com . jboss . msc . service . servicename java . io . service org . jboss . msc . service . servicename java . io . service org . jboss . msc . service . servicename java . io . service org . jboss .
/ * ( non - javadoc )
get a class analysis object .
lookup the properties for the specified class .
creates a new instance of the { @link <unk> } .
returns the class name of the given package .
converts an integer to a hex string .
converts a long to a hex string .
returns the name of the getter method .
returns the name of the getter method .
returns true if the method has non - implicit non - null non - ignored exceptions .
get the enum codes for a class .
analyzes the control interfaces of this control interface .
returns an array of all the methods that have been defined by this class .
gets the property name .
returns the name of the property name .
analyzes the fields and fields .
analyze the method signature .
this method is used to fixup a <unk> array names .
<unk> case .
calculates the hashcode of the class .
convert a string to a hex string .
recursive entry point .
/ * managamentxmldelegate methods
/ * ( non - javadoc )
method called to parse authorization attributes xml attributes .
/ * parse the authorization attribute of a remote domain .
/ * ( non - javadoc )
load modules by name .
the main method .
visit a class .
{ @link <unk> ( string ) }
create and add a new { @link org . jboss . as . controller . <unk> } to the given { @link org . jboss . as . controller . <unk> () } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
write an attribute .
/ * ( non - javadoc )
{ @inheritdoc }
<p > <unk> . < / p >
/ * ( non - javadoc )
authenticate a keystore .
resolve the method call targets .
f743 - <unk>
<p > creates a new <code > beano< / code > . < / p >
/ * @override public void <unk> ( string msg ) { return <unk> . <unk> () ; }
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if rollback is enabled or not .
/ * ( non - javadoc )
eap 7 .
/ * project
<p > generate method code . < / p >
generates the bytecode for the given analysis interface .
build the stub for the given superclass .
creates an analysis object for the given interface .
{ @inheritdoc }
get the names of the given surname .
initializes the { @link <unk> } .
/ * ------------------------------------------------------------
<p > <unk> . < / p >
create a new <unk> .
create a <unk> url .
create a directory context .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > lookup an object in the form of an object . < / p >
/ * ( non - javadoc )
create a directory binding .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
call the { @link <unk> () } method for a { @link naming } object .
create a new directory with the specified name .
create a new context .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
eap 7 . 0 . 1 .
parse the security
parse the security
{ @inheritdoc }
{ @link <unk> ( <unk> ) }
write a criteria element .
this method is used to write the cluster content to the given writer .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the { @link <unk> } for the given security domain .
/ * ( non - javadoc )
get the { @link <unk> } for the given security domain .
get the mapping manager
get the subject when needed .
remove the security domain from the list of security domain
evaluates the given context name .
/ * ( non - javadoc )
create a new {
initializes the authentication manager .
initializes the query manager .
create a {
initializes the identity manager .
initializes the query manager .
used only with java 7 do not set
get the type of the expression .
factory method .
factory method for creating a new { @link <unk> } .
factory method for creating a new { @link <unk> } .
{ @inheritdoc }
{ @inheritdoc }
main method .
/ * ( non - javadoc )
=========================================== of ===========================================
wait for service to be deleted .
helper method to create a { @link cipher } from a { @link <unk> } .
initializes the security vault .
load the vault .
/ * ( non - javadoc )
adds an attribute to the vault .
returns the value of the specified attribute in the vault .
removes the specified attribute from the vault .
retrieves the attributes of a secured attribute .
handles an attribute created display .
prints the results to stdout .
get the hash code for the vault
/ * ( non - javadoc )
method without varargs to increase performance
gets the service service name .
register resource adapter identifier .
inserts a new value into the array .
/ * ( non - javadoc )
/ * ( non - javadoc )
copies the contents of the given { @code inputstream } to the given { @code outputstream } .
write actions to the action .
adds a new {
--- ping loop ---
gets the prefix .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
gets or creates the transactional entitymanager .
/ * ( non - javadoc )
checks if a servlet class is present in the registry .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of the given type .
get the { @link <unk> } for the given { @link <unk> } .
adapts a list of { @link object } s to a list of { @link endpoint } s .
get the { @link interceptor } for this { @link interceptor } .
add a method to the list of interceptors .
adds a list of interceptors to the project .
<p > <unk> . < / p >
set the naming mode .
/ * ( non - javadoc )
gets the list of { @link interceptor } s for the given path .
get the value of the <unk> property .
/ * ( non - javadoc )
liberty change for cxf begin
adds a new { @link <unk> } to the given { @link <unk> } .
adds a list of { @link interceptor } s to the list of interceptors .
factory method for creating a new { @link <unk> } instance .
get all { @link <unk> } s for all interceptors .
/ * ( non - javadoc )
get a list of all { @link <unk> } s .
adds a new interceptor chain to the interceptor chain .
gets the list of { @link <unk> } s for the given { @link <unk> } .
add a new interceptor chain to the interceptor chain .
returns a chained { @link list } of { @link <unk> } s .
adds a pre - passivate list of interceptor - chain interceptors to the interceptor chain .
gets the list of { @link interceptor } s for the given { @link <unk> } .
adds a new interceptor chain to the interceptor chain .
<p > <unk> . < / p >
create a new { @link component } instance .
gets the module .
get the protection domain of the <unk> .
find the <unk> from a module .
builds a new { @link <unk> } with the given { @link <unk> } .
this method is used to set the flag for the transaction related to this context .
returns a {
returns the service name for the given application .
returns the service name for the process application .
bind to {
this method binds a { @link <unk> } to the given { @link <unk> } .
create an info object from a jndi name .
locates the { @link entitymanager } in the module registry .
raw xml attribute
/ * ( non - javadoc )
binds the given object to the target service .
get the results as { @link <unk> } .
visit a class .
returns the type of this instance .
generates a description of the request .
get the members of this { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * managamentxmldelegate methods
parses the remote domain controller attributes .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a { @link <unk> } .
retrieves the components of a { @link <unk> } .
adds a message to the aggregator
create a new { @link set } of { @link view } s from the given { @link array } .
retrieves the components of a component .
gets the components of a specific view .
resolve message destination
eap 7 . 0
eap 7 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1 . 1
eap 7 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0 . 0
eap 7 . 0 . 1 .
eap 7 . 1
/ * ( non - javadoc )
this method is used to obtain an instance of { @link <unk> } from a { @link principal } .
clean up the connection
creates a new { @link <unk> } instance .
/ * ( non - javadoc )
lookup a security domain from the network security map .
loads the module dependencies .
/ * private void <unk> () { return <unk> . <unk> () ; }
<p > <unk> . < / p >
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
loads the configuration from the given list of properties .
/ * ( non - javadoc )
fills the { @link <unk> } with the given { @link modelnode } .
get the schemata type code for the given class .
returns the type code for the given class .
get the type code for the given class .
create a java . util . object
initialise the orb
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
set the properties of the dn .
adds operations to the container
creates an array of interfaces implemented by the given class .
add the array of atoms to the <unk> .
check if obj is a primitive type .
returns the omg idl method name for a class .
add an interface to the <unk> .
todo : <unk>
execute get exception .
get the class level injection type .
register a { @link <unk> } with a { @link <unk> } .
check if the given <unk> is a <unk> .
install service target .
helper method to close the context .
/ * ( non - javadoc )
add dependencies for modules
erzeugt eine einzelne <unk> - <unk> .
adds a handler to the list of handlers .
process the invocation of the given method .
checkstyle : off
throws an {
throws the given { @link <unk> } .
/ * ( non - javadoc )
returns all component classes found in the deployment descriptor passed in .
li2281 . 07
li2281 . 07
~ methoden ----------------------------------------------------------
~ methoden ----------------------------------------------------------
~ methoden ----------------------------------------------------------
~ methoden ----------------------------------------------------------
li2281 . 07
li2281 . 07
f743 - 506
f743 - 506
get all active timers .
get all active timers . <p >
/ * ( non - javadoc )
f743 - 506
/ * ( non - javadoc )
/ * ( non - javadoc )
suspend all timers .
restore timers .
resume timer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get all interfaces implemented by this class .
get all interfaces implemented by this class .
returns all interfaces that implement the given interface .
this method is called by the component <unk> to configure the netty connection .
adds extra parameters to the output .
create step data context data .
process the connectors .
{ @link <unk> ( operationcontext modelnode ) }
create a new service url .
<p > <unk> . < / p >
coerces a value to a java object
returns an array of {
finds a method in the passed <code > classreflectionindex< / code > .
locate all public static methods of the given class .
checks if the given method is a simple check .
/ * ( non - javadoc )
creates a new <code > <unk> / code > object .
<unk> <unk> .
/ * ( non - javadoc )
merges the properties of the given property with the given properties .
adds properties .
/ * public void <unk> ( object <unk> ) { if ( <unk> ! = null ) { if ( <unk> ! = null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk>
runs all registered { @link <unk> } instances registered with the given { @link <unk> } .
clear the health - check with the health check .
examine the given locator to a xml file .
simplified interface .
binds the given object to the naming context .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of the specified { @code value } as an enum value .
returns the value of the specified { @code value } .
returns an { @code doublestreamex } describing the first element of the given { @code optionaldouble } mapping .
returns the value specified by the given string value .
returns an { @code int } describing the value of the { @code optional } if present .
returns the { @code longstreamex } whose value is an { @code long } .
returns the value of the specified { @code value } .
returns the value of the specified property of the specified { @code value } .
returns the value of the specified property of the specified { @code value } .
returns the value of the specified { @code value } .
returns the value of the specified { @code value } as an enum value .
creates a { @link <unk> } for the specified { @link virtualfile } .
creates a new read - only operation parameter .
creates a new { @link <unk> } with the given { @link <unk> } .
returns an array of roles that can be used to access the given roles .
skips the specified amount of bytes from the input stream .
/ * ( non - javadoc )
this method checks if the element is equal to the given element .
/ * ( non - javadoc )
invokes the given operation on the given operation .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates the { @link org . jboss . dmr . modelnode } for the given { @link operationcontext } .
returns the class description of the specified class .
/ * ( non - javadoc )
shuts down the classpath .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
add a naming listener .
remove a naming listener from the coordinator .
/ * ( non - javadoc )
method called to read an xml element from an xml element .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
initializes the module archive .
create a new { @link org . jboss . dmr . modelnode } for the given { @link org . jboss . as . controller . <unk> } .
create a new { @link <unk> } with { @link <unk> } and { @link <unk> } .
creates { @link <unk> } { @link org . jboss . as . controller . <unk> . <unk> } .
/ * package
throws an exception if the pool is not held .
add an object to the pool .
returns the shape of the given indices .
analyzes all the operations on this class .
returns an array of pk analysis map for the current operation .
this method is used to refine the pairs of all the remote interfaces .
get the {
initialize ffdc for the given module .
this method is used to configure the <unk> of a bus
publish service .
stops the web application context .
start the bean .
stop the {
get the {
add a { @link <unk> } to the container .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
--- timeout ---
/ * ( non - javadoc )
{ @inheritdoc }
returns an array of {
get all classes declared in a class .
/ * private static boolean <unk> ( object [] <unk> ) { if ( <unk> == null ) { return null ; }
get a constructor with the given name .
get a { @link field } from a class .
add a list of { @link org . jboss . as . controller . <unk> . <unk> } to the { @link org . jboss . as . controller . operationcontext . <unk> } .
/ * ( non - javadoc )
returns true if the given node is allowed .
returns a {
new attribute .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
cancel this list .
set the maximum concurrent state .
change the type of the change .
get a byte array from a byte array .
retrieves a stream sequence number from the given data starting at the given offset .
returns a clone of the given object .
returns the input graph for the given file .
deserialize a json graph from an input stream .
creates an instance of { @link <unk> }
extract field name .
executes the given operator without index .
determines the number of isomorphic graphs .
finds all classes in the given directory .
gets all the classes found in the given package .
get the generic type arguments for the given class .
gets the type of a field .
checks if the given class is a java list .
execute a function .
{ @inheritdoc }
returns the result of the field .
execute the command .
update the record with the given record .
finds a record for the given identifier .
execute the command .
serializes an object to a bytebuffer .
{ @inheritdoc }
returns the string representation of the object size in bytes .
{ @inheritdoc }
{ @link <unk> ( bytebuffer ) }
this method is used to begin a new connection .
execute the command .
runs the sql update strategy .
gets the set of set insert set for a given query .
returns a set of all the topology ids for the cluster .
execute the query .
translate a { @link <unk> } to a { @link <unk> } .
replies if the given expression is a distinct value .
checks if a query is enabled .
splits a { @link <unk> } into a global { @link <unk> }
returns a list of { @link <unk> } s for the given { @link <unk> } .
add order by projections .
获取 { @link <unk> }
splits a query
perform the substitutions .
extract sub - queries
checks if the given record looks at the given index .
/ * ( non - javadoc )
run the algorithm .
runs the query .
returns true if the given {
finds the index of the first index in the fulltext index .
returns a list of all elements in the given collection that satisfy the given predicate .
returns true if the given string starts with the given descriptor .
/ * ( non - javadoc )
builds a search index if any .
/ * reconnect
change the type of object .
re - create any object if the class has a public constructor that accepts a string as unique parameter .
create a string representation of this class with the class passed in .
execute a function .
sets the permission to the requested resource .
checks to see if the given resource is a rule defined .
dump the server status
initialize system database .
load local databases .
stops the <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
{ @link <unk> ( bytebuffer int int ) }
{ @link <unk> ( bytebuffer int int ) }
sets the transaction isolation level .
sets the transaction isolation level .
re - create the class if possible .
called by cluster iterator .
initialization of file
atomically move the given source node to the target location .
gets the list of added patterns .
this method fills the list of available nodes in the local database .
/ * ( non - javadoc )
convert a date string to a date .
/ * ( non - javadoc )
execute the command .
read a short array from the input buffer .
merges the given byte array .
merges the given arrays .
{ @link <unk> ( bytebuffer int ) }
this method splits a byte array into a { @link <unk> } .
converts a long to a byte array .
execute the create property .
execute the command .
{ @inheritdoc }
{ @inheritdoc }
executes the transaction .
execute first .
gets the value at the specified position in the segment .
/ * ( non - javadoc )
creates an instance of { @link <unk> } .
checks the availability of a region .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
writes the content of a file to a file .
/ * ( non - javadoc )
stops the server .
initialize the <unk> .
/ * ------------------------------------------------------------
start a connection .
/ * ( non - javadoc )
{ @inheritdoc }
get the database session .
creates a reference to an index .
<p > initialize . < / p >
create a connection to the server .
/ * ( non - javadoc )
get a connection .
gets a connection .
terminates the connection .
interrupt the connection .
pauses the connection .
push all the <unk> <unk>
gets the element at the given index .
execute the deletion .
move the edge to the record .
set the edge pointer to the current vertex .
applies the update to the record .
/ * ( non - javadoc )
/ * ( non - javadoc )
method to generate entities
execute the update schema .
update the metadata for a metric .
move the cursor to the previous record .
move the cursor to the previous record .
move the cursor to the previous record .
<unk> method .
<unk> method .
execute the command .
reads the next character from the stream .
execute the command .
create a new <unk>
<! -- begin - user - doc -- >
converts a string value to an object .
{ @inheritdoc }
get the compression codec for the given class .
/ * ( non - javadoc )
/ * ( non - javadoc )
try to create a prepared directory context
determine if the function expressions should be indexed
execute the command .
writes a byte array to a byte array .
<p > write . < / p >
returns the number of bytes read from the input buffer .
appends the record as part of the hole .
fill the buffer with the given length .
/ * ( non - javadoc )
helper method to generate a list of floats
serialize the link .
returns the generic value for the given object .
{ @inheritdoc }
execute the command .
serialize a { @link byte } object to a { @link bufferedimage } .
decode a byte array to a string .
{ @link <unk> ( <unk> ) }
this method is used to load a record that has a public unique interface that accepts a string .
/ * ( non - javadoc )
<p > checks if the specified array is contained in the array . < / p >
returns <tt > true< / tt > if this list contains the specified element .
/ * {
create a list of filter filters
checks that the given {
/ * ( non - javadoc )
execute the command .
adds a post - processing edge to the graph .
this method returns a sorted list of <unk> sorted by the estimated pattern .
adds a single value to the cache .
build the select statement .
{ @inheritdoc }
returns a { @code comparator } with the second of the second element .
adds an { @link <unk> } to the { @link <unk> } .
{ @inheritdoc }
{ @link <unk> ( object ) }
/ * ( non - javadoc )
returns the indices of the indexes in the { @link <unk> } .
/ * ( non - javadoc )
create a ddl dump .
execute the command .
splits the set of aggregate expressions into a set of aggregate expressions .
/ * ( non - javadoc )
/ * ( non - javadoc )
publish a link .
gets the prefix from the given value .
returns the string value of the given string .
pseudo - randomly advances the given probe value .
/ * ( non - javadoc )
execute the command .
creates an instance of { @link jsonobject } with the given url .
execute the command .
/ * ( non - javadoc )
returns the usage of the return .
checks if the password is correct .
creates a hash from an input string .
checks if the algorithm is supported .
creates the index .
finalizes the query .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the index of the task .
/ * ( non - javadoc )
create a sql ddl string with the given index .
/ * ( non - javadoc )
/ * parse features
removes the specified edge from the graph .
execute the create link .
returns { @code true } if { @code <unk> } is { @code null } .
<p > sets the super credentials for the database . < / p >
parse timeout projections .
/ * ( non - javadoc )
performs the search algorithm .
/ * ( non - javadoc )
execute the command .
return true or null if the record does not exist .
merge this query with one or more filters .
execute the command .
get the values of the <code > <unk> / code > property .
execute the schema .
free the cluster .
<p > startup . < / p >
<p > startup . < / p >
<p > singleton . < / p >
grant a resource to be required
revokes all required rules for the specified resource
/ * ( non - javadoc )
{ @inheritdoc }
execute the command .
helper method to convert a plan to a <unk> result
/ * ( non - javadoc )
{ @inheritdoc }
binds parameters .
converts the given index to the document .
/ * ( non - javadoc )
----- private methods -----
convert a string to simplify type .
convert a string type to type t .
extracts the raw type from the given string . if the string is too long we treat it as a number . if the number is too long we treat them as a result . if the number is too long we treat them as short float float float long float float long float float long float float long float float long float float
increments the popularity of an element with an expired element .
increments the value at the specified index .
try to reset the size of the table .
for testing purposes
exposed for testing .
creates an index gfs .
drop all indexes .
gets the index of the property .
returns the linked class .
execute the command .
adds the specified key to the composite .
creates the index .
/ * ( non - javadoc )
set the server role .
vr : inline
set the database owner .
remove a set of nodes from the cluster .
converts a { @link string } to a list of { @link <unk> } instances .
configures this object with the given parameters .
configures the target object .
remove a listener .
aligns a database with a database .
/ * ( non - javadoc )
waits for a request to be notified .
starts the spider crawling .
creates a copy of the users database .
deletes the record .
execute the record .
/ * ( non - javadoc )
called when the pointer is saved .
tries to merge the given value with the given value .
returns the index of the owner element of the given pointer .
{ @link <unk> ( object ) }
execute the create class .
close all databases .
invoked when unregistration is done .
returns a set of function factories .
returns a set of all the factories names .
returns a set of all command names .
/ * helper methods
----- public methods -----
send http request headers .
write vcf records .
write the current record to the database .
sends an object property .
add a stream to the file .
/ * ( non - javadoc )
returns the next record in the current transaction .
begin the current record .
tell if a database is alive .
opens a new { @link <unk> } with the given name and password .
add a parameter to the writer .
sets the value of the target object to the given value .
/ * ( non - javadoc )
/ * ( non - javadoc )
process the request .
remove all components of the given component .
completes the descendants of the given component .
get the speed from symmetry in pages .
gets the {
/ * ( non - javadoc )
/ * ( non - javadoc )
get the matrix write factors for the specified component .
method to get the total number of pages written to disk in cache .
gets the cache hits for a given component .
/ * ( non - javadoc )
merges the old counters with the old ones .
push the record counters to disk .
push storage to the given <code > holder . <unk> / code > .
push the given <code > <unk> / code > to the given <code > <unk> / code > .
pushes a new {
convert the <unk> to a document .
increment the number of counters in the cache
stop the cache flush timer .
stop the sliding checkpoint .
calculate the height of a page from the cache .
stops the sliding checkpoint .
create and return a scaling to the specified page size .
run the timer for committing the committed commit event .
finish the connect operation .
returns the number of events created by the <unk> .
update the locality wait counters for a particular component .
/ * ( non - javadoc )
execute a sql statement .
gets the cas ids .
execute a sql statement .
/ * ( non - javadoc )
starts the consumer thread .
start a daemon timer .
start daemon .
starts the timer .
serialize the given value into a byte array .
/ * aes / ecb / pkcs5padding
removes the record from the graph .
sets the value of { @link <unk> () } to { @link <unk> } .
----- interface <unk> -----
{ @inheritdoc }
/ * ( non - javadoc )
save graph elements .
create a unique object from the file .
serialize the link .
returns the { @link graph } represented by this { @link object } .
detaches the {
attaches this { @link graph } to the specified { @link graph } .
get the graph result .
/ * ( non - javadoc )
execute the create engine .
converts the specified { @link object } to a { @link <unk> } .
returns the enum value for the given enum type .
creates a new <unk> for the specified index .
{ @inheritdoc }
/ * ( non - javadoc )
returns a set of all edges in the graph .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
get an attribute builder for the given attribute name .
imports the data from <code > inputstream< / code > to database .
loads the stackdriver graph from the specified input graph .
counts the number of lines in the given file .
create an {
load a { @link graph } from an { @link inputstream } .
create a new { @link <unk> } with the given filename .
write a date to the given date .
{ @link <unk> ( bytebuffer ) }
{ @inheritdoc }
called by class iterator .
called by cluster iterator .
adds an index entry .
merges the { @link set } of { @link set } s into a { @link set } of { @link set } s { @link set } s { @link set } s { @link set } s { @link set } s .
/ * ( non - javadoc )
configure the configuration .
/ * ( non - javadoc )
check if the resource is authorized .
build the result .
/ * handles update edge .
/ * ( non - javadoc )
invokes the given operator with the given operator and operator .
/ * ( non - javadoc )
determine if the given { @link <unk> } can be applied to the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link <unk> ( bytebuffer ) }
workgroup all records in the file
{ @inheritdoc }
opens a new database with the given database and password .
open a new database with a given url .
init the database .
create a database connection .
creates a new table if it exists .
/ * ( non - javadoc )
create proxies for a specific database .
finds the index of the first index of the specified index .
/ * ( non - javadoc )
returns the element at the given key in this map . if the map contains no mapping for the key the old value is returned .
/ * ( non - javadoc )
update statistics for specified index .
writes the page to the given page .
read a page from the journal .
truncates the page to the given value .
reads the shape from the given page .
/ * ( non - javadoc )
/ * ( non - javadoc )
runs the example .
returns a copy of the record .
checks if the cluster is active or not .
converts a { @link sort } to a { @link sort } .
checks if the given cluster name is an execution mode .
/ * ( non - javadoc )
get a list of cluster definitions from a collection of cluster names .
returns the list of clusters owned by the current cluster .
get the list of all the features in this cluster .
returns true if the cluster contains a cluster .
checks if the cluster contains a cluster .
/ * ( non - javadoc )
get a list of all the master servers .
returns a set of all configured configured repositories .
returns a set of all clusters in the cluster .
given a list of cluster ids return a set of clusters owned by the current user .
get the owner of the cluster .
/ * ( non - javadoc )
returns a list of configured configured servers .
get the { @link <unk> } of the { @link <unk> } .
gets all registered { @link <unk> } s .
get the effective data center for all columns of the given type .
returns the number of bytes in the given string
prime a list of servers with a set of servers .
get a list of columnmetadata servers .
returns the data center of a server .
gets the global read quorum .
/ * ( non - javadoc )
gets the quorum of write quorum .
saves the cluster configuration .
get the data center configuration for the given data center .
/ * ( non - javadoc )
returns a list of all initialized initialization annotations .
get the class names for the given status .
get the edge class names for the given graph
re - create the class of the class .
returns the package name of the given class .
set the settings for this project .
{ @inheritdoc }
drop index .
adds an object to the graph .
adds the given label to the graph .
adds a new vertex to the graph .
adds a temporary vertex to the graph .
adds a new edge to the graph .
serialize the link .
returns the vertices of the given class .
returns the vertices of the specified class .
execute the update .
returns an {
returns the number of edges of the given class .
get the edge edges for the given key .
re - creates the {
use this method to reuse repository .
/ * ( non - javadoc )
get the type of graph class .
returns the type of the vertex type .
creates a new instance of { @link <unk> } .
creates a { @link <unk> } for the given class .
document type .
execute the create vertex .
get the edge count for the given class .
create a new { @link <unk> } .
create a { @link edge } type .
create the edge type from the class name .
serialize the link .
execute the { @link <unk> } interface .
/ * ( non - javadoc )
{ @link <unk> ( java . lang . string java . lang . string java . lang . string java . lang . string ) }
/ * ( non - javadoc )
removes the edge from the graph .
removes the inverse edge from the graph .
delete the edge if any .
set the listener .
fire an event to all listeners .
this method is called when a space is unused .
/ * ( non - javadoc )
creates a sub - parameter .
execute the command .
this method is called when a new thread is being started on a new thread .
/ * ( non - javadoc )
/ * ( non - javadoc )
register the given { @link <unk> } { @link <unk> } with the given { @link <unk> } .
unregister the {
gets the amount of setup for the given component .
delete setup statistics .
fetches the cache cache counters .
fetches system counters from the given holder .
fetches the list of {
this method is called when a mutation fails .
returns the entry for the given entry .
compress the given string using gzip .
removes the property with the given name .
create a new instance of the class .
create a new instance of this pojo
create a new instance of the <unk> .
saves the given object at the specified mode .
saves the given object to the cluster .
saves the given { @link <unk> } to the given { @link <unk> } .
returns the version number from the pojo .
/ * ( non - javadoc )
create a new instance of the given object
convert the arguments to a string .
returns the version number for the given object .
returns the version number for the given object .
<p > <unk> . < / p >
returns a set of all factories .
returns a set of all the factories that have been added to the provider .
create an { @link <unk> } from a { @link <unk> } .
/ * ( non - javadoc )
sets the local node for this node .
wait for upgradable responses to complete .
/ * ( non - javadoc )
answer a list of all literal results in a list of <unk> .
returns the index of the first corner in the response .
send quorum response .
/ * ( non - javadoc )
execute a get request .
/ * ( non - javadoc )
gets the set of pattern pattern alias alias alias .
determine whether an indexed function is executed on the given target object .
try to load the given message form definition .
<p > acquire a database engine . < / p >
release the database engine associated with the specified language .
<p > <unk> . < / p >
returns the next record in the cache .
updates the size of the queue .
removes an element from the cache .
{ @inheritdoc }
attempt to read the value of the given value .
returns the value at the given index .
process an index .
unquote string .
move the position of the record .
get the index of any character in the buffer .
returns true if the source string starts with the given string ignoring case .
sets the fetch plan .
serialize the link .
serialize the link .
/ * ( non - javadoc )
<p > execute . < / p >
/ * package private
sorts the edges in a map .
获取 { @link <unk> } <unk>
creates a { @link <unk> } object for the given class name .
/ * ( non - javadoc )
/ * ( non - javadoc )
deserialize the fields of the given class .
sets the class that will be used to load classes .
<p > acquire a remote database . < / p >
get available datasource
<p > authenticate . < / p >
execute the command .
prints the contents of the report .
creates an instance of { @link java . util . concurrent . <unk> } .
get the maximum value of the jvm heap .
get the maximum memory heap of the jvm heap .
used by <unk>
creates an { @link object } from a { @link reader } .
returns the { @link string } representation of this { @link <unk> } .
creates a { @link edge } from json .
creates a { @link edge } from json .
creates a { @link string } from a json object .
creates a jsonobject jsonobject from the contents of the specified xml element .
creates an object node from an element .
creates a json object from a json element .
creates a { @link jsonobject } from a { @link <unk> } .
create a json object from an xml element .
create a json object from a set of properties .
shuts down the specified { @link <unk> } .
returns the cluster status .
serialize a header .
deserializes a {
{ @inheritdoc }
returns a comparator for the given type .
returns the set of active clusters in the cluster .
get the set of active data centers from the configuration .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
returns a ddl statement for an index .
/ * [ deutsch ] <p > ermittelt den <unk> des angegebenen <unk> . < / p >
creates a { @link <unk> } from a { @link string } .
{ @link <unk> ( string ) <unk> }
creates a new <unk> from a stream .
<p > <unk> . < / p >
{ @link <unk> ( inputstream ) }
encrypt value .
encrypts / decrypts a string using the specified key .
<p > <unk> . < / p >
restores persisted field values from preferences .
save data to a file .
save the keystore to the specified alias .
serialize a uuid object to a bytebuffer .
deserialize a uuid from a bytebuffer .
returns the { @link uuid } represented by this { @link <unk> } .
set the child context .
adds an object to the list .
/ * ( non - javadoc )
decodes a { @link bytebuffer } into a { @link bigdecimal } .
returns the size of the object in bytes .
/ * ( non - javadoc )
{ @link <unk> ( bytebuffer int ) }
convert object to map .
copies a database to a remote server instance .
get the property names .
check if the object has the same content as the same content .
check if the current graph is the same content .
returns the remote address .
returns the record for the operation .
read the current record in the cache .
import transaction .
method to calculate the distance between the normalized normalized average and normalized features .
internal function used by gammacdf
replies the projection cost of a segment .
calculates the heuristic used to calculate the heuristic cost .
gets the expected distance between two points .
return the squared top - dimensional area for the target edge
opens the { @link <unk> } of the given { @link configuration } .
connects to the begin of the graph
/ * ( non - javadoc )
returns true if the table exists .
stops the pool .
returns the value of the property with the specified name .
/ * ( non - javadoc )
/ * <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> /
returns the next token in the token list .
returns the next token in the stream .
/ * ( non - javadoc )
gets the connection field name .
gets the label of the job
replaces all of the links in the vertex with the given vertex .
unlinks the edge from the graph .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
~ --- methods --------------------------------------------------------
saves the link to the database .
deletes the specified edge from the graph .
adds a new { @link <unk> } to the graph .
adds the specified edge to the graph .
counts the number of edges in the graph .
{ @inheritdoc }
update the edges of the given destination
/ * ( non - javadoc )
opens the { @link <unk> } .
/ * ( non - javadoc )
gets the connection .
gets the connection fields .
delete broken file .
execute the command .
returns a map of {
{ @inheritdoc }
{ @inheritdoc }
{ @inheritdoc }
install a database from a database .
/ * ( non - javadoc )
create a new role .
execute the create property .
execute trigger .
wait for the next lock .
returns the value at the specified position in this position .
handle request parameters .
connect to remote remote server
lists all available databases .
gets the server databases
creates a new database in the remote server .
creates a database .
checks if a database exists in the remote server .
copies a database to a remote server instance .
creates a new database in a remote server .
release a database .
returns the cluster status .
execute the create index .
~ methods **************************************************************************************************************************************
parses the retry word .
/ * ( non - javadoc )
update the record .
deletes the record .
validate command configuration .
<p > <unk> . < / p >
config configuration config .
/ * ( non - javadoc )
check to see if the specified resource is authorized by the user .
/ * ( non - javadoc )
/ * ( non - javadoc )
parses the iterator .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
method to adjust the start of a line .
/ * ( non - javadoc )
{ @link <unk> ( bytebuffer ) }
{ @inheritdoc }
sets the value belonging to the given field .
gets the { @link <unk> } for the given offset .
truncates the database .
start copy operation .
commit an atomic operation .
acquires exclusive lock on lock state .
acquires exclusive lock checking operation .
changes the maximum amount of memory that this network buffers .
/ * ( non - javadoc )
/ * ( non - javadoc )
store the filestore state .
starts the tracker .
read the parameters from the given iterator .
applies the default filter to the set of default handlers .
shuts down the reader manager .
{ @inheritdoc }
removes the given key from the storage .
acquires a key from the pool .
executes the runnable in the main thread .
returns the value to which the specified key is mapped or { @code null } if this map contains no mapping for the key .
removes all entries from the cache .
returns true if the specified key is not closed .
/ * ( non - javadoc )
loads the read buffers .
performs the post - processing work required after a write .
performs a read - write operation on a node .
returns a read - only record for the given node .
returns the next power of two greater than or equal to the specified value .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
re - create any object if the class has a public constructor that accepts a string as unique parameter .
serialize the class name .
re - create any object if the class has a public constructor that accepts a string as unique parameter .
create a string representation of this object with the class passed in .
----- private methods -----
serialize a bean .
gets the { @link <unk> } for the given type .
this method is used to process an incoming request .
adds a request to the queue .
add a shutdown hook that will be used to shut down shut down .
<p > <unk> . < / p >
gets the script engine .
gets the script engine if it exists .
sets the engine .
/ * ( non - javadoc )
/ * ( non - javadoc )
remove the state change state .
adds a state to the database .
/ * ( non - javadoc )
/ * ( non - javadoc )
--------------------- checkpointing --------------------------
/ * ( non - javadoc )
attempt to acquire a shared lock .
--------------------- checkpointing --------------------------
attempt to acquire a shared lock .
/ * ( non - javadoc )
<p > execute . < / p >
/ * ( non - javadoc )
sets the logback configuration to the given file name .
try to acquire a read lock .
returns true if the label is a labeled directory .
returns the label of the edges from the edge .
removes the given vertex from the graph .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
----- interface <unk> -----
/ * ( non - javadoc )
/ * ( non - javadoc )
removes corners from the graph .
get the { @link graph } represented by this { @link <unk> } .
convert the edge to a document .
gets the class name of the given label .
execute the alter database .
serialize a date object to a bytebuffer .
/ * ( non - javadoc )
/ * ( non - javadoc )
execute the command .
/ * ( non - javadoc )
--- delete ---
this method will be called to start a new task .
returns the {
create a new vertex .
creates a new { @code index } with the given { @code <unk> } and { @code <unk> } .
execute the command .
serialize the link .
parse a <unk> .
parses the strategy .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
get the number of bytes that should be read from the given { @link bytebuffer } starting at the specified offset .
read the positions .
execute the command .
append the given value to the result .
gets the transaction type .
execute the create index .
update an url
fill the object with the given record .
appends a record to the object .
set the identity object .
set the record version .
rolls back the record type .
initializes the database instance .
cancel the task .
/ * ( non - javadoc )
--- publish ---
<p > execute . < / p >
convert the record to record .
/ * ( non - javadoc )
{ @inheritdoc }
register a command .
config entity .
create the authenticationinfo for the user doc .
/ * ( non - javadoc )
check if the given resource is authorized .
/ * --- public methods ---
create a list of lists that match the specified condition .
create and return a new { @link <unk> } that matches a list of candidate atoms .
<p > <unk> . < / p >
<p > <unk> . < / p >
method that attaches this document to the given object
returns a list of {
execute the create property .
returns the {
reads the next value from the cache .
/ * ( non - javadoc )
execute the command .
remove a record from the table .
truncates the database .
returns true if the class is a sub class .
returns true if the class is a sub - class or not .
add a base class to the set of polymorphic classes .
adds the given <unk> to the polymorphic cluster .
{ @inheritdoc }
serialize the link .
builds a { @link sort } based on the given { @link map } .
/ * ( non - javadoc )
reads from an input stream and returns the number of bytes read from the input stream .
{ @inheritdoc }
releases all buffers associated with the specified {
attempts to check whether there are any memory leaks .
resets the hash table .
reads an int from a byte array at the given offset .
/ * ( non - javadoc )
download the persistence unit information from the given url .
/ * ( non - javadoc )
write a long value to a stream .
read a medium int from a buffer .
reads an unsigned long value from the byte array .
/ * ( non - javadoc )
installs a database from a database .
unlinks all the clusters from database .
{ @inheritdoc }
dumps the status of a { @link <unk> } .
returns the index of the first occurrence of the specified { @code object } in the specified { @code array } .
returns the index of the first occurrence of the specified element in the array .
returns the index of the first occurrence of the given object in the array .
parse a query projections .
gets the tables .
{ @inheritdoc }
/ * ( non - javadoc )
apply the order by clause to the result buffer .
/ * private methods
parse a <unk> projections .
////////////// string <unk>
/ * ( non - javadoc )
flattens the list into the result .
returns the cluster status .
executes the query and returns the record .
create a link .
suspend an error .
/ * ( non - javadoc )
locks the file .
start a new thread
sets the performance statistics for the current thread .
called by the <unk> .
called by iterator .
method to validate the index for a new index .
commit the database .
this method is called by the { @link <unk> ( string string map ) } method .
/ * ( non - javadoc )
execute a command .
check if the disk space space is valid .
/ * ( non - javadoc )
execute the create class .
{ @inheritdoc }
execute the command .
create a new instance of the given help module .
loads records from the record file .
delete a record .
saves the record to the database .
create a new command
executes the query and returns the result .
/ * ( non - javadoc )
saves the current transaction .
check { @link <unk> }
sets the { @link <unk> } for the { @link <unk> } .
finds the { @link <unk> } permission .
/ * ( non - javadoc )
set the user .
register hooks for motifs .
register a { @link <unk> } .
<p > <unk> . < / p >
adds the given id and id to the result .
enable / disable
delete the record .
loads records from the database .
serialize record .
{ @inheritdoc }
saves the given class to the database .
saves the current cluster to the database .
saves a { @link <unk> } to the database .
saves the given record to the specified record . note : if the record is already running the transaction throws { @link <unk> } .
saves the given record to the database .
saves the record to the database .
returns the number view of the given class .
returns the number of elements in the database .
/ * ( non - javadoc )
/ * ( non - javadoc )
writes the orthogonal data to the <code > blob< / code > value that this <code > blob< / code > object represents starting at position <code > pos< / code > .
returns the index of the current sentence in the sentence .
returns the word or <code > null< / code > if the word was not found .
a helper method to get the required word required by the parser .
advance to the next word .
<p > <unk> . < / p >
<p > checks if the next word is a separator . < / p >
returns the path to the next row .
execute the create property .
/ * ------------------------------------------------------------
----- private methods -----
appends payload to the end of the segment .
gets the http header value from the current token .
/ * ( non - javadoc )
return the access token for a given resource .
expects to { @link <unk> } if { @link <unk> } is { @link <unk> } .
registers a bean with the given name .
parse a node .
cast a { @link object } to a { @link date } object .
converts an object to a date .
<unk> <unk> <unk>
log a task .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
remove the task actor from the url
synchronizes this task s tasks with the specified task .
/ * ( non - javadoc )
publishes a task to mini .
create a new task report
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * create a new task .
save a single task .
/ * ( non - javadoc )
receive a list of task actors .
/ * ( non - javadoc )
returns an input stream for the specified resource .
copy the contents of the given inputstream to the given outputstream .
copy bytes from the input stream to the output stream .
initialize the configuration .
<unk> <unk> .
<p > <unk> . < / p >
get a list of task actors .
parse the json .
externalizes a { @link <unk> } to a xml element .
/ * ( non - javadoc )
opens a datasource
returns the first element in the list .
returns the name of the first column in the result set .
get the result set value .
returns the value of the first column in the resultset .
gets the meta data for the database .
<p > <unk> . < / p >
<unk> > <unk>
normalize the arguments .
find the servicedirectorymanagerfactory .
creates a new { @link <unk> } with the given { @link <unk> } .
<p > start a group by id . < / p >
<p > <unk> . < / p >
<p > start . < / p >
<p > start . < / p >
/ * ( non - javadoc )
executes the given { @link process } on the given { @link process } .
lists the task information for a given task .
executes the given { @link <unk> operator } on the given task .
executes the given execution of the current execution of the given task .
<pre > 算法 = 1 < / pre >
/ * ( non - javadoc )
handle an execution .
run the sql script .
run script .
<p > <unk> . < / p >
set the order of the order .
get a list of child elements of a given element .
<p > <unk> . < / p >
replaces all invalid characters in the xml content .
{ @link <unk> }
checks that the charsequence is not null or empty .
/ * ( non - javadoc )
transmits the difftask .
formaltypeparameter :: = ?
/ * ( non - javadoc )
returns a new { @link order } object that can be used to undo / redo { @link order } .
returns the { @link <unk> } instance associated with the specified { @link <unk> } .
sets the value of the given object to the given value .
add a new { @link com . codahale . metrics . <unk> } .
returns the default provider for the given type .
return a list of providers for the given class .
finds a descriptor with the given name .
/ * ( non - javadoc )
this method is called by <unk> to execute a task .
callback for the given task id and task id .
<p > <unk> . < / p >
cast a { @code count } to a { @code float } .
tries to load a class from the current thread s context class loader .
<p > newinstance . < / p >
creates a new instance of the given class .
/ * ( non - javadoc )
returns the next revisiontask .
converts a list of edbobjects to a list of model objects of the given model type .
/ * ( non - javadoc )
returns the node with the given name .
/ * ( non - javadoc )
looks up a value for the given text .
returns a list containing all of the elements in this context .
looks up the setters with the given text .
registers a class with the given name .
sets up the engine .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
<p > <unk> . < / p >
<unk> <p > function : <unk> / p > <p > description : < / p >
<p > invoke . < / p >
finds the method with the given annotation name .
schedule a job .
start the engine .
<unk> method .
restores a scheduled task instance .
/ * ( non - javadoc )
parses the given node and adds it to the decision table
<p > getter for the field <code > <unk> / code > . < / p >
/ * ( non - javadoc )
this method initializes the <unk> .
convert a string value to a string .
returns an array of property descriptors for the given class .
updates the cached entity type .
gets the cached entity by id .
gets the process key for the given version .
get the info for the specified method .
sets the field value .
<p > <unk> . < / p >
gets the { @link <unk> } with the given id .
returns a new { @link <unk> } that matches the specified filter .
get a list of pages for a given page and filter .
builds the cache for the given entity .
inserts the given process entity into the cache .
parse a topic model from a byte array .
/ * ( non - javadoc )
<p > <unk> . < / p >
get the next task models for this project .
create an { @link indexchangeadapter } implementation that handles the given { @link process } .
/ * ( non - javadoc )
splits the { @link <unk> } into a { @link <unk> } .
builds a list of interceptor instances .
handle the action .
/ * ( non - javadoc )
{ @inheritdoc }
** xaconnection interface
<p > <unk> . < / p >
/ * ( non - javadoc )
returns true if the given method matches the pattern .
adds a new step to the list of targets .
create an order root .
cancels an order .
runs a breadth - first order .
save the order of the order in the history .
<unk> <unk> .
runs a user - id .
adapts a { @link <unk> } to an { @link order } .
terminate the task .
resumes the order of the specified order .
this method is called by the { @link <unk> () } method when the { @link <unk> () } method is called with the given { @link <unk> } .
builds a map from the given parameters .
builds the time map from the given entity .
<unk> > <unk>
save the columns
update the table
/ * ( non - javadoc )
converts a { @link string } to an object .
removes the property with the given key from the map .
returns the integer value of the system property . if the key does not exist or the value for the key is not found in the properties file the default value is returned .
loads the properties from the current thread .
/ * ------------------------------------------------------------
reads a line out of the given byte array .
read a byte array from byte array .
reads up to <code > len< / code > bytes from the specified <code > byte [] < / code >
/ * ( non - javadoc )
skip bytes until the end of the stream is reached .
/ * ( non - javadoc )
/ * ( non - javadoc )
ensures that the specified index is equal to the specified size .
this traverses the range of elements in sorted order .
returns the upper bound of the first argument .
returns the first upper bound of the first sequence between the specified positions inclusive .
merges the specified range of <code > { ... } < / code > into <code > fromindex< / code > inclusive and <code > toindex< / code > in the specified <code > toindex< / code > .
swaps x [ and b ] [ 0 .. n - 1 ] [ 0 .. n - 1 ] .
alternative to { @link <unk> ( runnable ) } .
sorts the specified range of elements according to the specified comparator .
murmurhash hash function .
returns the final value of the specified 64 - bit value .
closes this channel .
creates a new { @link bytebuffer } from the given { @link bytebuffer } .
truncate the file to the given size .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
reports a request to the end of the queue .
wait for futures to complete .
creates a new stream with the specified elements .
returns a stream of matches that match the specified query .
{ @inheritdoc }
returns a set of the indexes of the specified { @link <unk> } .
gets the matching ordinal value for the given key .
gets the matching ordinal value .
sets the bit at the given index to the given value .
{ @inheritdoc }
read from the specified <code > <unk> / code > from the specified <code > <unk> / code > .
returns true if the specified <code > <unk> / code > matches the specified <code > <unk> / code > .
processes the specified <code > <unk> / code > with the specified <code > <unk> / code > .
add the specified <unk> object to the specified schema .
add the specified schema object to the specified schema .
/ * ( non - javadoc )
start the expiry cycle .
/ * ( non - javadoc )
/ * ( non - javadoc )
loads the tags from the input stream .
/ * ( non - javadoc )
writes the specified object to the specified {
returns a { @link <unk> } token extracted from the specified object .
sets the controller class to the given class .
removes all of the mappings from the map .
bitwise and atomic operation .
creates a new { @link <unk> } .
increases the capacity of the given segment .
updates the status of the specified { @link <unk> } .
validates the string with the specified status .
/ * ( non - javadoc )
read the specified { @link <unk> } for the specified { @link <unk> } .
returns the value at the given index .
returns the size of this bit set .
decrypt the specified password from the specified stream .
decrypt a password
returns a string containing the value of the specified field in the specified array .
sets the value at the given index to the specified value .
copies all of the bytes in { @code src } to { @code src } .
copy the data from the given byte array to the given byte array starting at the given offset in the given array .
returns true if the range starts with the specified range .
performs a copy of the checksums .
encodes the given byte array into an array of bytes .
reads bytes from an input stream .
writes a range of bytes to an output stream .
increases the capacity of a segment to ensure that it can hold at least the number of segments .
returns the index of the specified feature .
unescape operations for both <unk> and <unk>
unescape api gateway .
validate message set .
/ * ( non - javadoc )
get the files from the specified directory .
returns true if the specified key matches the header .
get the values for the record .
initializes the { @link pair } of { @link <unk> } .
adds the specified schema to the specified schema .
read the specified state from the specified <unk> .
enable or disable the primary producer button .
/ * ( non - javadoc )
obtain the contents of the specified { @link <unk> } .
adds the specified type listener to the specified type .
creates a field path for a primary key .
returns a {
returns a {
creates a field path from the specified { @link <unk> } .
returns the { @link <unk> } for the given key .
creates a new instance of the specified plan snapshot .
/ * get the value of the specified <unk> from the specified <unk> .
this method initializes the cache .
returns the value of devicedata .
/ * ( non - javadoc )
{ @inheritdoc }
return the value of the progress bar .
/ * ( non - javadoc )
determines the preference vector from the specified type .
adds a field to the specified detail field .
adds the specified field to the specified field .
record a field of the specified field with the specified field .
creates a new { @link <unk> } from a string .
<p > <unk> . < / p >
get a list of unique values for the specified { @link <unk> } .
sets the <unk> .
sets the value at the given index to the given value .
returns the long value at the given index .
/ * ( non - javadoc )
returns a map of matching records with the specified field name and value .
/ * ( non - javadoc )
set the path .
/ * ( non - javadoc )
add a connection to the set .
add the specified field to the base field .
/ * ( non - javadoc )
stops the replication connection .
cancels the process with the given delay .
acquires protobuf message .
creates an updater for the given api class .
creates a new <unk> .
gets the { @link <unk> } from the specified { @link object } .
gets the { @link <unk> } from the specified { @link object } .
creates a new <code > <unk> / code > with the specified objects .
returns a new { @link <unk> } object with the specified { @link <unk> } and { @link <unk> } .
returns a new instance of the specified { @link <unk> } with the specified { @link <unk> } .
restore the latest version from the last change .
runs a single cycle cycle .
refresh the executors in parallel .
remove the specified key from the specified key .
/ * ( non - javadoc )
writes the specified header to the specified stream .
returns the number of bits required to satisfy the given field .
gets the { @link <unk> } from the specified { @link <unk> } .
sets the primary key for the primary key .
{ @link <unk> }
/ * ( non - javadoc )
gets the field buffer for the given field position .
writes a fixed number of bytes to the field .
writes a long to the field .
returns a sequential ordered { @code intstream } produced by iterative application of the select table .
adds a { @link <unk> } { @link <unk> } to the { @link <unk> } .
sorts the elements in reverse order .
hash a char [] array into a hash value .
hash table .
adds an element to the storage .
returns a list of all elements in the list that are greater than or equal to the given node .
resize the storage .
tokenizes the entire contents of the stream .
get the ordinal value for the given serialized representation .
add a { @link <unk> } to the { @link <unk> } .
removes the { @link <unk> } from the { @link <unk> } .
prepare for write operation .
compact the calibration behavior .
deserialize a bloom filter .
changes the size of the list .
/ * ( non - javadoc )
helper method to create a new <unk> for the given key .
returns an empty array for the given size .
returns <code > true< / code > if the specified <code > <unk> / code > match the specified match .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new stream with the specified elements .
<p > <unk> . < / p >
parses the specified { @link <unk> } and returns a { @link list } of { @link <unk> } s .
creates a new { @link <unk> } from the given schema .
returns the simple name of the specified type .
returns the number of elements in the specified number of elements .
/ * ( non - javadoc )
completes the specified snapshot .
this method writes the specified <code > <unk> / code > to the specified <code > outputstream< / code > .
/ * ( non - javadoc )
appends the specified properties to the specified block if necessary .
returns a string representation of this version .
/ * ( non - javadoc )
<p > <unk> . < / p >
convert a string to a format suitable for use in a <unk> .
define the field index .
/ * ( non - javadoc )
trigger a new asynchronous trigger with a random delay .
this method will sleep for the specified delay .
add a type diff .
executes the calculation .
obtains the version of the specified movie .
/ * <unk>
/ * ( non - javadoc )
writes a long to the output stream .
writes a long value to the output stream .
writes the encoded int to the byte array .
writes the encoded int to the byte array .
writes an int to a byte array .
reads an int value from the byte buffer .
reads a tag from the stream .
pack a long into a long value .
writes an ascii string to the byte array at the given position .
reads a tag from an input stream .
check if the given long value is a power of 2 .
count the number of var - int in <unk> .
called when the activity is first created .
add a view to the body
creates a {
helper method to call {
called when the view is reset .
scroll view size
updates the view visibilities .
called when a configuration change is changed .
pulls out the behavior of an event .
called when the activity is first created .
called when the activity is first created .
called when the activity is first created .
region lifecycle methods
called when the activity is first created .
called when the activity is first created .
scroll by animation .
utility method to scroll the captured fragment .
called when the activity is first created .
returns the empty view .
add or remove a rule to the rule .
/ * ( non - javadoc )
gets the value of the selected method .
gets the value of the selected item .
gets the value of the given key as a string .
coerces an attribute value to an integer .
/ * ( non - javadoc )
设置一个header<br > <unk>
/ * ( non - javadoc )
add a header to the request .
adds the given { @link <unk> } to the rule .
returns a new instance of { @link <unk> } using the supplied { @link <unk> } .
create an instance of { @link <unk> } .
creates a new instance of { @link <unk> } .
/ * ( non - javadoc )
<p > <unk> . < / p >
implementation of { @link <unk> ( string ) } .
shrinks a rule to a given size
shrinks a rule to a page .
implementation of { @link <unk> ( string ) } .
returns a new instance of { @link <unk> } .
/ * private void <unk> ( string value ) { if ( <unk> == null ) { return null ; }
creates a new instance of the { @link <unk> } .
this is the main entry point of the <code > <unk> / code > method .
batch delete model .
add a header to the request .
add a new rule to the view .
returns a list of fields annotated with {
gets the { @link field } s annotated with the specified annotation .
returns all methods of the given class that are annotated with the given annotation .
returns the { @link method } annotated with { @link method } s annotated with the given annotation .
returns all annotations of the given class that are annotated with the given annotation type .
<p > collection . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
retrieve the columnfamily corresponding to the given class names .
registers a new reference to the map .
/ * ( non - javadoc )
returns the context status map for the current thread .
creates and returns a new { @link <unk> } builder for the current rule .
get a { @link <unk> } instance .
add new rule to the rule .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
adds a new rule to the result set .
adds a { @link <unk> } to the rule .
adds a { @link <unk> } to the rule .
returns a { @link <unk> } that represents the default { @link rule } s .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
add rule to the rule .
returns an instance of {
gets the list of language rules that are annotated with { @link <unk> } .
combine two arrays .
<p > adds all the elements of the given arrays into a new array . < / p >
read empty lines or end table .
{ @inheritdoc }
creates a new instance of { @link <unk> } .
add services to a list builder .
converts a list of { @link service } s into an array of { @link service } s .
/ * --- private methods ---
extract ports from a list of image configurations
get the ports from the given image configuration .
extract the values from the list of ports .
normalize the port mapping .
adds the part number if not null .
/ * ( non - javadoc )
get the default service name .
find the service port for the given service .
build an image resource .
service service .
determine the container port for the given service port .
converts the given service name to a { @link <unk> } .
<unk> <unk> <unk>
add a value to the map .
----- private methods -----
transforms a map into a new map .
puts the value into the map if it is not null .
/ * ( non - javadoc )
<p > update the containers in the template list . < / p >
loads the image from the docker image .
wait until the pod is ready .
push image suffix suffix to <unk>
returns <tt > true< / tt > if the specified object is reachable .
validates a metric name .
converts an entity to a list of objects .
returns the resource version of the resource .
counts the number of occurrences of the given string .
/ * ( non - javadoc )
returns true if the pod is ready or not .
gets the current context .
returns true if the specified { @link <unk> } contains a { @link <unk> } .
copies properties from a map to a string .
add a shutdown hook to the process .
forwards a port to the given { @link <unk> } .
/ * public static <unk> <unk> ( string path ) { if ( <unk> == null ) { return null ; }
checks if the pom has the given dependency .
given a collection of groupid / artifactid and groupid : artifactid : projects / projects / projects / projects / projects / projects / projects / projects / projects / projects / projects / projects / projects / projects / projects / projects / projects / projects / projects / projects / projects / projects / projects / projects / projects / projects /
finds the plugin with the given artifact id and artifact id .
create a {
gets the version of the artifact based on the maven - maven - maven - maven - maven - maven - maven - maven - maven - maven - maven - maven - maven - maven - maven - maven - maven - maven - maven - maven - maven - maven - maven - maven - maven - maven - maven - jar
/ * ( non - javadoc )
reads resource which contains a list of resource paths .
reads the given url and returns a { @link <unk> } object .
read and configure the fragment .
/ * ( non - javadoc )
returns a list of environment variable names .
<unk> > <unk>
search for an existing { @link <unk> } .
returns an empty map if there are no errors .
returns true if the given {
create a { @link map } from a { @link file } .
flatten a map of key / value pairs into a map .
converts this object to a map of string values .
add a port to the map .
/ * ------------------------------------------------------------
get json string
gets the accumulators for the given job .
{ @inheritdoc }
download a file to the raygun server .
returns a free port number in the specified number of ports .
compare two versions .
creates a new { @link <unk> } for the given profile .
<pre > {
<p > <unk> . < / p >
reads all profiles from the classpath .
/ * ( non - javadoc )
find the profile of the given directory .
returns a list of commands that can be used for profile execution .
deserialize a list of attachment objects .
prepare rootdir .
adds a list of flows to the git repository .
get the given default value .
this method is used to check whether openshift mode is allowed .
updates the relationship count for the resource list .
gets the first child element with the given name .
get the node data for a node .
/ * ( non - javadoc )
apply the srid .
/ * ( non - javadoc )
parse the template declaration .
try to create a new service account .
remove tags from a tag .
remove repository locally .
applies the specified {
implementation of <unk> rest api .
get or create a map from metadata or create a map if none exists .
this method is called when an exception is thrown .
add a line symbolizer definition to the rule .
/ * --- private methods ---
/ * ( non - javadoc )
/ * ( non - javadoc )
parse the given xml configuration into a map .
return a list of { @link configurations } for the specified { @link <unk> } .
/ * [ deutsch ] <p > konstruiert eine <unk> verschiebung . < / p >
calculates the duration of a duration .
scans the classpath to find the compiled files .
/ * ( non - javadoc )
this method is used to disable the client - side templates .
/ * package private
returns the root directory of the project .
adds the given { @link <unk> } to the given { @link <unk> } .
/ * ( non - javadoc )
parses the given input stream and returns a map keyed by filename .
{ @inheritdoc }
initializes the generator context .
creates a { @link <unk> } for the { @link <unk> } .
return a { @link <unk> } or { @link org . apache . maven . project . artifact . <unk> } for the given { @link org . apache . maven . api . project . <unk> } .
validates the provided json using the provided { @link <unk> } .
gets the icon ref .
gets the service id from the maven classpath .
copy a list of files to a directory .
/ * ( non - javadoc )
get the spring boot application properties .
loads properties from a resource .
get the spring - boot - boot - boot - boot - boot - boot - boot - boot - boot - boot - boot - boot - boot - boot - boot - maven - boot - boot - boot - boot - boot - boot - boot - boot - boot - boot - boot - boot - maven - boot -
creates a { @link list } of { @link service } objects .
attempt to configure the given <unk> list with the provided <unk> list .
prints the given array of { @link <unk> } objects .
loads the { @link properties } from the given { @link <unk> } .
get the fixed configuration for the given processor .
attempt to get the value of the given key from the configuration .
set up rules for a resource .
validate the xml schema and validate the schema .
/ * ( non - javadoc )
returns the symbolic name of the artifact .
gets the list of watchers from the current context .
gets the singleton list of { @link <unk> } objects .
resolves the image configuration for the given { @link date } .
store timestamp date
analyze an object .
gets the read method for the given bean .
add parameters to other parameters .
get the value of the configuration property . if no value is found null will be returned .
get the value of a configuration property . if the key does not exist or is null the default value is returned .
returns an unmodifiable map of the configuration properties for the given name .
prepare a list of named options .
merges self - config files into self .
converts a list of { @link string } s into a { @link list } of integers .
<p > add . < / p >
initializes the { @link <unk> } .
gets the image name .
gets the registry path .
returns the absolute path to the absolute path .
checks if the config option is online or not .
etl service service
find all of the { @link <unk> } s of the given { @link collection } of { @link throwable } types .
loads a boolean property from the system property .
{ @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> }
creates a {
/ * ( non - javadoc )
scans the classpath to find the plugins .
convert a distance to a string
marshals the single field into the given map .
marshals the given bean into the given map .
converts a { @link jsonobject } to a { @link <unk> } .
gets the client - metadata id .
builds jwt chaincode .
creates a { @link org . arrives . <unk> <unk> } from a json string .
set the access token from json .
starts a new session with the given { @link <unk> } .
enroll the user with member <unk>
construct a <unk> from the fragment fragment .
converts a json string into a <unk> object .
from json .
open the google play screen intent .
authorize the {
creates a { @link <unk> } from a { @link jsonobject } .
returns the number of object rewards .
gets the repository definition from a json string .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the presence of the token .
converts the given string into a json object .
returns the { @link <unk> } represented by the { @link <unk> } .
notifies all registered { @link <unk> } s of the given fragment .
generate the notification data for the notification .
collect the metrics attached to a <unk>
creates a downloader client metadata id .
returns true if the given certificate is valid for debug purposes .
this method is used to schedule the payment method to be used .
delete a { @link <unk> } .
tries to send a slot to the server .
parses the request and returns the result as a { @link result } object .
/ * returns the popup id of the popup - metadata menu .
perform the actual verification .
perform the verification .
perform the browser verification .
callback from json
construct an <unk> from the fragment builder .
returns the value mapped by {
/ * package
returns a { @link <unk> } object that can be used to fetch the json object from a json string .
creates a { @link <unk> } object containing a { @link <unk> } object .
get the { @link endpoint } for the given { @link environment } .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
gets the <unk> .
attempt to get the <unk> of the recipe .
converts a json string into a { @link jsonobject } object .
parses a json object from a json object .
converts a json object into a { @link <unk> } object .
split the { @link <unk> } into a { @link <unk> } .
/ * ------------------------------------------------------------
run a post request on the thread pool .
posts data to stackify
create a <unk> from json .
start a payment request .
approve or reject a payment .
convert an authorization string to an authorization token .
returns true if {
<pre > <unk> : https : // github . com / google / <unk> / blob / master / bip - <unk> - holder / <unk> . <unk>
de - serializes the document identifier from json .
/ * ( non - javadoc )
add a listener to the list of listeners .
add a listener to the list of listeners .
gets the google api client .
creates a <unk> from a json object .
request a { @link <unk> } to the given { @link <unk> } .
create the payment resource .
<p > <unk> . < / p >
creates a new { @link <unk> } with the given { @link <unk> } .
method to validate idtoken
callback for the <unk> object .
adds a tuple to a scala tuple
removes words in a dictionary from the dictionary .
convert a {
converts the input token into a list of tokens .
extract phrases from input text .
<unk> [ <unk> ] <unk> [ <unk> ]
returns a copy of the given set .
fetches the content of the given { @link bytebuffer } as a { @link bytebuffer } .
get the q matrix
get the q matrix
unmask a buffer .
writes a buffer to the buffer .
encode websocket message information .
<unk> the given index using the <unk> <unk> .
<unk> > <unk> category
this method is used to write the contents of the buffer to the end of the buffer .
used directly by {
copy a sketch into a collection .
/ * struct { @link <unk> ( byte [] ) }
/ * struct { <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
creates a copy of the given list of buffers .
serialize a list of bloom filters .
compute block <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> [] <unk>
<unk> <unk> <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * public void <unk> ( byte [] <unk> byte [] <unk> byte [] <unk> int len ) { int <unk> = <unk> . <unk> ( <unk> ) ; }
/ * ( non - javadoc )
/ * public void <unk> ( byte [] int int len ) byte [] len = <unk> ( <unk> ) ;
draws an image onto the block block
/ * ( non - javadoc )
/ * ( non - javadoc )
draws the block to block
/ * ( non - javadoc )
initializes the block along the layout .
/ * ( non - javadoc )
compute the gradient for a block .
method to decode a { @link <unk> } .
returns the profile for the given index .
compress the precision of a string .
<unk> picture .
returns the start of the dictionary starting from the given <unk> .
stop <unk> .
write the number of symbolic constants to the <unk>
<p > returns the pixel mapped pixel in the image vector . < / p >
compute the number of nodes in the cluster .
utility method to compute the number of significant glyphs of a number .
reads a sequence of bytes from the given buffer .
/ * ( non - javadoc )
inits the .
gets the maximum number of available frames .
/ * <unk> <unk> . <unk> ( <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
prepare the foreground edge limit .
<unk> > <unk>
copies the contents of a chain to a destination .
/ * ______________________________________________________________________
compute the <unk> matrices .
<unk> upper bound
get the edit duration
converts a { @link <unk> } to a { @link <unk> } .
convert a approximated into a { @link <unk> } frame .
replay the <unk> .
convert a byte array to a long .
creates a { @link <unk> } for the given { @link movie } .
/ * ( non - javadoc )
creates a { @link <unk> } for the given movie .
draw marker for the given reader .
convert a <unk> to a <unk> frame .
formats a series of timecodes for a record .
multiply two values throwing an exception if overflow occurs .
used by <unk> ()
returns true if the specified color is present .
returns the size of the component .
receive a { @link picture } object from the socket .
gets the next frame .
parses the frame at the given checksum .
creates a { @link <unk> } for the given { @link <unk> } .
<unk> el <unk> <unk> <unk> una excepcion .
creates a { @link <unk> } for the given { @link <unk> } .
gets a native frame at the specified location .
returns the native frame at the given time .
gets a native frame for a native device - only device .
gets the native frame at a pose that has been cdf of the given value .
creates a { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
read a message from the buffer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the index of the next bit in the list .
/ * ( non - javadoc )
skip over linker
returns the sub - frame of the cropped frame .
places an array of characters into a vector .
<unk> a kernel
decodes the provided {
returns a default {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the buffer .
read one or more { @link <unk> } objects .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
readobject for <unk> - <unk>
initialize fullscreen mode
splits a movie into a pair of edit .
decode the frame of the given frame .
encodes the given { @link biginteger } into a { @link <unk> } .
stackblur by bug
method search for the mark border of the area .
******************** methods *******************************************
convert a long to a byte array .
returns the index of the first occurrence of the specified byte .
returns the length of the specified { @code v } .
/ clover : off
<p > converts a float array into a hexadecimal integer representation . < / p >
adds the new mapping to this encoder
read bits from <unk>
computes the high - level compression level .
get the number of <unk> .
computes the <unk> <unk> of a single channel .
/ * -------- high - level <unk>
utility method to evaluate a grid .
<p > <unk> . < / p >
read <unk> mode .
<unk> <unk> <unk> <unk>
/ * <unk> - <unk>
get a list of noise .
this unicodeset is equivalent to <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk> = <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
repositions the svuid .
/ * returns true if the message could be rendered .
/ * -------- <unk> ( <unk> ) <unk> ( <unk> )
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
/ * ( non - javadoc )
unmask a buffer .
get a { @link <unk> } from a floating point value .
this is the opposite of the <unk> method .
reads in a byte array in bulk .
function to read a <unk>
train l2 tree
/ * <unk>
returns the number of characters in the <unk> array .
clamp a double value to an interval .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * internal methods
two - dimensional decoding methods
{ @inheritdoc }
checks if the given { @code int } is a { @link <unk> } .
/ * ( non - javadoc )
returns a deep copy of the cropped image . <p >
this method needs to be called after the {
fills the matrix with values from the given matrix .
reorder the objects in the block .
convert a string array to a byte array .
create a <unk> from a byte array .
gets the custom parent of the given type .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
directs the {
starts the timer .
parses a { @link <unk> } to a { @link bitmap } object .
get a {
creates a bitmap with the metadata of the bitmap .
creates a bitmap from the given bitmap .
<p > <unk> . < / p >
get a sound frame from a file .
renders the given { @link <unk> } to the given { @link <unk> } .
write a { @link <unk> } to a { @link <unk> }
create a { @link bitmap } from a { @link <unk> } .
render a frame with a specific frame .
instantiates a frame with the <unk> of the given track .
factory method to seek to the next { @link <unk> } .
******************** resizing ******************************************
dedup data between two blocks .
splits picture .
/ * ----------------------------------------------------------------------------
convolve with <unk> .
/ * <unk>
returns the index of the last occurrence of the specified element id or null if not found .
returns the value smoothed by the given interpolation function .
converts a byte array into an array of ints .
converts an array element to a byte array .
convert a <unk> to a <unk>
creates a { @link <unk> } from the specified { @link float } .
returns the interleaved instance of the instance .
encode a set of audio bytes in the planes of an audio frame .
returns the generator size for the specified size .
<unk> <unk> .
<unk> . <unk>
<unk> <unk> .
converts a bytebuffer into an array of <unk> .
gets the int array representation of the given byte array .
parses the given file and returns a <code > bufferedimage< / code > object .
<p > <unk> . < / p >
returns the image with the specified { @link <unk> } .
<unk> > <unk>
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
returns a <unk> for the transmission .
returns a { @link bufferedimage } from a { @link <unk> } .
decodes packet header .
this method performs the quicksort method .
encodes the bounds of bounds into bytes .
read scaling .
read a list matrix .
encode a { @link picture } into a { @link frame } .
encode a packet .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
set a new property on this database .
set the <unk> property .
return the first occurrence of the specified property or null if not found .
set the value of the <unk> property .
/ * ( non - javadoc )
gets the number of supported codecs .
set the number of supported codec ids .
/ * ( non - javadoc )
dumps the current instance of {
/ * ( non - javadoc )
cleans up the table .
starts the background thread .
/ * -------------------------------------------------------------------------------
/ * ( non - javadoc )
add a picture to the canvas .
loads the native library .
unpack library .
delete the temporary files .
get the default layout for this audio channel .
get the index of a channel in a layout .
get the channel channel from the specified layout .
creates a { @link <unk> } for the given { @link string } .
returns the descriptor for the specified compressed format .
helper method to format a { @link drawable } according to the specified { @link <unk> } .
returns the buffer size needed for the buffer size with the requested size .
make a media packet .
reads a {
make a media packet .
creates a new { @link <unk> } object .
get the data for this media packet .
get the data for a given <unk>
get the { @link <unk> } for the given { @link <unk> } .
if the <code > init - type< / code > element will be created and returned . otherwise <code > null< / code > is returned .
/ * ------------------------------------------------------------
reads data from the input stream and returns the number of bytes read from the input stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if a data input is streamed to a streamed file .
get the image descriptor for the component .
gets the version of the manifest .
get the default time base .
returns a {
get a {
make a { @link camera } from this camera .
return the { @link net . dv8tion . jda . core . entities . camera } .
open a camera with the given parameters .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
sets the bit mask for this camera .
get the metadata for this experiment
{ @inheritdoc }
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * <unk>
compares this rational number with the specified object .
compares this rational number to the specified value .
computes the sigmoid for the specified number of times .
reduces the number of numeric numbers in a block with a sparse .
calculates the multiplication of this rational number .
creates a rational number of the specified number of integers .
binomial product .
creates a rational number of the specified division number .
binomial product .
creates a rational number of the specified number of integers .
return a rational number for the specified argument
creates a rational number of this rational number .
/ * ( non - javadoc )
<p > returns the original value of the original value . < / p >
/ * <unk>
make this rational number .
make this rational part of a <unk> object .
power of a number .
return a scaled version of the original factor .
rescale the original value using the greatest common divisor .
<unk> > <unk>
play the camera .
gets the value of { @link <unk> } from a { @link <unk> } .
returns a { @link collection } of { @link edge } s .
creates a converter for the specified audio description and audio rates .
creates a archiver for the given archive format .
create a new encoder with specified codec name .
creates a new <code > <unk> / code >
open a new <unk>
try to encode a video packet .
gets the audio content and writes it to the given stream .
downloads the content of the url and writes it to the given writer .
convert a { @link <unk> } to a bufferedimage .
/ * ( non - javadoc )
make a codec descriptor .
/ * ( non - javadoc )
prints a bean property .
/ * ( non - javadoc )
loads the configuration file .
get the base time base time base .
finds the descriptor corresponding to the given type .
creates a new { @link <unk> } .
returns true if the given image can be created .
convert a buffered image to a { @link <unk> } .
append an converter to a path .
creates a new instance of { @link <unk> } .
converts a buffered image into a bufferedimage .
call this method directly .
close the stream .
open the url .
reads payload data and returns the number of bytes read from the stream .
writes the given byte array to the given channel .
creates a url factory for the given protocol prefix .
returns a string representation of the given object .
执行http <unk> > <unk>
transform input to upper case
reads the entire contents of the specified { @link datasource } into a { @link list } .
transforms the input into a map .
copy the contents of the url into a { @link java . io . file } instance using the specified { @link java . io . outputstream } and the specified { @link <unk> } .
transform a file into a bufferedimage
copy the contents of a url to a file .
transforms a { @link readable } object into a { @link string } .
transforms a { @link url } to a { @link readable } object .
transforms a { @link <unk> } to a { @link <unk> } .
copy the contents of a url to a file .
returns a copy of the specified { @link channel } .
copy the contents of a channel to a channel .
read properties from file .
reads the entire contents of the specified { @link inputstream } into a { @link string } .
transforms a { @link file } to a { @link string } .
transforms the specified { @link url } to the specified { @link outputstream } .
copies the contents of the given url to the given file .
performs a deep copy of the given { @link readablebytechannel } .
fetches the contents of the given url from the given url .
transforms a limiter url into a { @link uri } .
{ @link <unk> ( string string ) }
remove a health check .
register a handler for a given url .
get a logger with the specified name .
returns a logger with the specified name .
logs a file on the tracker .
sets the audio channels of the media to the peer .
convert a sampled sequence of data to a pdf format .
get the base time base .
set the time index for the morph .
gets the index entries for the index .
get the frame rate for this font .
get the base time base .
/ * ( non - javadoc )
returns a copy of the container .
get the record metadata
finds an entry in an index .
returns the index entry for the given position .
get a single <unk> packet .
gets the names of all installed codecs .
get the supported video frame rates .
get the supported pixel formats supported by this { @link codec } .
gets the supported sample rates .
creates a list of audio formats supported by this library .
get audio channel layouts .
get the encoding of the encoding .
get the {
create a codec with the specified name .
create a codec with the specified codec id .
get the {
create a codec with the specified name .
parse a { @link <unk> } to a { @link <unk> } .
get a specific codec for the given index .
return the video frame rate for the specified frame .
get the supported pixel formats supported by this { @link codec } .
/ * [ deutsch ] <p > liefert einen { @code inputstream } mit der angegebenen <unk> . < / p >
get the optional audio channel layout at the given index .
get a supported profile for a specific codec .
convert a sampled sequence of data to a { @link <unk> } . unlike { @link <unk> ( media ) } this method simply calls { @link <unk> ( <unk> ) } .
/ * ( non - javadoc )
creates a { @link <unk> } for the specified { @link <unk> } .
open the url .
reads data from the input stream into a byte array .
/ * ( non - javadoc )
returns a list of all keys in the matched header .
sets the value of the <unk> property .
sets the value of the specified key to the given value .
make a new key value pair .
set the value of the <unk> property .
open a new <unk>
gets the raid codec .
get the base time base .
set the base time base .
/ * ( non - javadoc )
<! -- begin - user - doc --
/ * ( non - javadoc )
#region camera camera camera
format a collection of formats .
<strong > [ icu ] < / strong > attempts to guess the format of a mime type .
get the number of supported codec ids .
returns the size of the specified bit in bytes .
creates a new filter for the given element .
/ * ( non - javadoc )
add an audio source to the audio stream .
add a picture to the orderbook
add a audio sink to the assembly .
creates a { @link <unk> } that can be used to perform a { @link <unk> } .
queues a command to be used in a command line .
factory method for creating a new { @link <unk> } .
/ * <unk>
makes a bit stream filter .
find the type of this bit stream type .
compress the input buffers using the given input buffer .
/ * ( non - javadoc )
read an array of bytes from the stream .
get an { @link bytebuffer } instance for the given { @link int } array .
returns a nio buffer for the specified length .
creates a buffer for the specified {
creates a buffer for the specified { @link <unk> } .
creates a buffer for the specified child .
creates a buffer for the specified child .
creates a <unk> container from the specified inputstream .
/ * ( non - javadoc )
convert a <unk> to a <unk> .
validate the image type .
validate picture .
/ * ( non - javadoc )
stops the thread .
gets the filter graph for this filter .
get the base time base .
/ * ( non - javadoc )
get the base time base .
get the record metadata
set the time base time base .
/ * ( non - javadoc )
get a handler for the specified url .
take a url and turn it into a url .
returns true if the url is a valid url .
calculates the <unk> .
<p > <unk> . < / p >
returns the current operating system .
returns the type of operating system .
/ * [ deutsch ] <p > ermittelt die <unk> - zeit in der format der angegebenen <unk> . < / p >
get the base time base .
play a sound .
the main method .
delete the object .
loads a native library from the library .
load the library name from the given library .
/ * package private
load candidate library .
returns the available library candidates for the given library .
initialize the search paths .
checks if the supplied library is already loaded .
create a new decoder for the specified codec .
make a new <code > <unk> / code > object from a <code > <unk> / code > .
/ * ( non - javadoc )
/ * ( non - javadoc )
decode and decode data from the given data .
creates a new screen .
this method is called by the <unk> and <unk> methods .
negotiates the audio formats to be added to the audio manager .
convert a sampled sequence of data to a { @link <unk> } . unlike { @link <unk> ( media ) } this method simply calls { @link <unk> ( <unk> ) } .
/ * ( non - javadoc )
get alternate format format .
get a { @link <unk> } array for the specified audio format .
creates a { @link <unk> } for the specified { @link <unk> } .
get the number of bytes that would be requested to the global buffer .
get the amount of data that would be needed to encode the data .
<unk> > <unk>
splits this block into a new format .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
factory method to create a new mutex
set the number of supported runs for this method .
/ * package
returns the { @link <unk> } that corresponds to the given { @link <unk> } .
/ * ( non - javadoc )
gets a <code > coder / code > from the <code > coder / code > object .
get a copy of this <unk> .
creates a new { @link <unk> } instance with the specified { @link <unk> } .
decodes the given base58 string into the original bytes .
/ * method to generate the random seed
gets a {
returns the flows matching the given cluster status .
returns a list of transactions that match the given address .
/ * ( non - javadoc )
gets a block by its signature .
sends a post request to the specified transaction .
evaluates the { @link checksum } of { @link checksum#type } with the given { @link <unk> } .
/ * [ deutsch ] <p > executes a script in json format . < / p >
decodes the given string into a byte array .
{ @inheritdoc }
gets the intersection of the specified arrays .
reads a utf - 8 encoded string from the stream .
writes an array of type <code > <unk> / code > to the given <code > array< / code > .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
writes an error to the output .
/ * ( non - javadoc )
converts an array of bytes to a byte array .
{ @inheritdoc }
/ * ( non - javadoc )
get the package name from the given path .
copies the contents of the specified file to the specified filechannel .
get the {
get a {
resize the store .
parses the given byte array and returns the decoded byte array .
removes the specified byte from the list .
/ * ( non - javadoc )
write an array of bytes to the output stream .
write the number of bytes to the output stream .
/ * ------------------------------------------------------------
write a string to the end of the string .
writes a 32 - bit integer to the buffer .
sets the object to the output stream .
create struct wrapper
create an instance of { @link <unk> } .
creates a json configuration for the given pattern .
gets the json representation of the object .
registers a serializer for the given class .
create a { @link <unk> } instance .
<p > return the cached object in cache . < / p >
converts an <code > object< / code > to a byte array .
/ * ( non - javadoc )
/ * ( non - javadoc )
build an object input from an array of bytes .
deserialize an { @link <unk> } .
{ @link <unk> ( outputstream ) }
<unk> method .
register a class with the given short name
returns the class name of a class .
/ * ( non - javadoc )
serializes an object into a byte array .
gets the byte array as a byte array .
adds the given object to the activity .
/ * ( non - javadoc )
reads a <code > object< / code > from the <code > inputstream< / code > .
gets the { @link <unk> } .
/ * ( non - javadoc )
writes the given byte array to the specified byte array .
writes a messagepack int .
write array .
write a raw byte array to the end of the array .
read a new array from the resulting array .
/ * ( non - javadoc )
returns the local <unk> of the given type .
remove the unshared object from the object .
this method is called when an object has been written out .
write the object to disk .
<p > <unk> . < / p >
writes out all of the fields of the given object to the specified field .
write an array of bytes to the output stream .
resets the source to the given output stream .
this method returns the contents of the local file data .
introspect the object .
prints a string to a string .
/ * ( non - javadoc )
exporte les <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
removes the entry from the segment .
grows the <unk> .
process changes tracking
returns the { @link bytebuffer } representation of this { @link <unk> } .
compute a struct array for the specified size .
create a new array
solve the change in the lu decomposition .
register an object in the buffer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates an object from a jsonarray .
adds a file to the storage .
poll for timers from the beginning of the queue .
adds the specified object to the storage .
reads a <code > int< / code > <code > int< / code > <code > int< / code > from the current <code > dest< / code > .
{ @inheritdoc }
add a class to this class .
sets the thread pool enabled .
start embedded in {
set the { @link <unk> } for the given { @link keyspace } and { @link <unk> } .
creates a copy of the specified resource .
prints the thread dump .
returns the class of the given object .
returns true if the given port is open .
returns an empty {
/ * <unk>
performs a rank - 1 update of a - b { @link <unk> }
<unk> performs a rank - 1 update of a triangle defined by a x = alpha * a + a + a + a + a * x = b
/ * ( non - javadoc )
<unk> performs a rank - 1 update of a block of a matrix
performs a rank - 1 update of a triangle defined by a x = b
performs a rank - 1 update of a triangle defined by a x = b
performs a rank - 1 update of a triangle defined by a x = b
performs a rank - 1 update of a triangle defined by a x = b
performs a rank - 1 update of a triangle defined by a x = b
performs a rank - 1 update of a triangle defined by a x = b
loads the <unk> descriptors
get the allocation mode from the context
set the device allocation mode for the context .
/ * ( non - javadoc )
returns the shape of the output of this shape
/ * ( non - javadoc )
this method executes the given {
returns true if the specified condition condition is satisfied .
returns true if the specified condition is condition .
same as { @link <unk> ( <unk> ) } but returns { @code true } if and only if the condition of condition matches condition .
this method merges the given array of { @link <unk> } and returns the index of the last element in the array .
same as { @link <unk> ( indarray [] indarray ... ) }
<p > applies a { @link <unk> ( int ) } to the specified { @link indarray } . < / p >
<p > applies a function to each element of the given array with the given condition . < / p >
this method is similar to {
this method converts a { @link indarray } to a { @link <unk> } .
<p > creates a new { @link <unk> } for the specified { @link number } applying the specified function to each element of the vector . < / p >
applies a <unk> function to each element of the matrix .
this method returns the last index of the last element of the given array
reads all properties from the specified {
creates a function from a json object .
creates a { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > normalize . < / p >
merges two points into an array .
given an array of doubles return an array of values .
returns a list of samples from a list of labels .
splits the given vector into an array .
convert an <unk> type to an nd4j type type
this method initiates the work of this method .
<b > <unk> / b > <br > <b > <unk> / b > <br > <b > <unk> / b > <br > <b > <unk> / b > <br > <b > <unk> / b > <br > <b > <unk> / b > <br > <b > <unk> / b > <br > <b > <unk> / b > <br >
<b > <unk> / b > <br > public void <unk> ( int mtlv ) <br > <b > <unk> > <unk> / b > <br > <b > <unk> / b > < / b > <br > <b > <unk> / b > < / b > < / b > <br > public void <unk> ( int mtlv ) <br >
this method replicates given device id and device id
returns a subset of this array based on the specified indexes
/ * ( non - javadoc )
rearrange matrix columns into blocks
pooling 2d implementation
implement column formatted images
this method returns 2d convolution data for a convolution given an array of input elements
create a {
convert an ndarray to a direct buffer .
given a list of partition size this method returns a batch of aggregates for the given list of partition size .
/ * compute the <unk> for a given gradient
checks if the given amount of values is sorted
sets the data optype for the data optype
create a copy of the specified ndarray .
this method returns identity 2d array
this method returns the pca products
reverse the reverse operation
this method returns the activations array for all vectors
creates a random ndarray with the specified number of columns .
random normal using the specified seed
/ * ( non - javadoc )
create a new ndarray with the specified shape
create an ndarray with the specified value
concatenate ndarrays along a dimension
create an ndarray with the specified shape
create an ndarray with the specified shape
create a new complex ndarray with the specified shape
creates a random ndarray with the specified shape
creates a random ndarray with the specified shape
creates an ndarray with the specified shape
creates a new ndarray with the specified shape
create a scalar nd array with the specified offset and offset
create a scalar nd array with the specified value
create a scalar nd array with the specified value
create a scalar nd array with the specified offset and offset
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
computes the n<sup > th< / sup > root of this complex number .
iteratively improve the <unk>
transform the original data array to a complex number .
get the column numbers for the matrix .
creates a random call with the given scope .
~ methoden ----------------------------------------------------------
/ * ******************************************************************** / * internal function methods
/ * ( non - javadoc )
<p > computes the householder operation : < / p >
exp ( <unk> )
exp ( <unk> d )
exp ( <unk> exp )
start the given context
/ * ( non - javadoc )
returns a subset of this array based on the specified indexes
returns a new {
do the <unk> method of the matrix .
{ @inheritdoc }
reshapes the input to the data set .
creates a data set with the given number of samples . the data set must have the same size as the original data set . the data set may be smaller than <code > <unk> / code > .
returns the memory footprint
converts a { @link throwable } to a string .
strips the hostname from the hostname .
<p > formats the given { @code message } with the given { @code format } . < / p >
<p > <unk> . < / p >
converts a byte array to a hex string .
formats the elapsed time with the specified finish time .
returns a string array containing all of the values in the given string separated by delimiters .
get a collection of strings from a string .
convert a string to a list of values .
converts a string to a list of strings .
splits the string into an array of strings .
split a string into an array of strings .
split a string into an array of strings .
unquote a string .
<p > escapes a string like <code > java . lang . string< / code > . < / p >
<p > unescapes the given string <strong > escape< / strong > operation on a <tt > string< / tt > input . < / p > <p > this method will unescape every percent - encoded ( <tt > %hh< / tt > ) sequences present in input . < / p >
/ * ( non - javadoc )
joins the given collection of strings with the given separator .
<p > <unk> . < / p >
replaces all the tokens in the given text with their corresponding tokens .
get the stack trace for the given stack trace .
checks whether two strings are case sensitive .
<p > checks if the string contains only unicode digits . < / p >
inverts an element
returns the { @code biginteger } value of this { @code biginteger } .
checks if the specified date is on the host side .
checks if the device is on device side .
create the shape information for the given shape
create the shape information for the given shape
returns true if the given shape is a vector ( i . e . the shape is not null )
create a new shape for the given shape
get the stride for an ordering
get the stride for the given indexes for the given indexes
convert an array of indices into an array of indexes
get the shape of a buffer
unzips a zip file to a zip file .
get short value
create a new data buffer
this method executes given <unk>
copy a buffer at a given offset in the buffer .
start server .
asynchronous version of memcpy
this method should be called by the device s class to support specific device support
this method moves the memory cache to the device
this function takes a set of indexes and returns a new <unk> based on the specified indexes
/ * ( non - javadoc )
calculate cosine similarity between 2 arrays of 2 : cosine similarity
this method executes <unk> > function . this is equivalent to : <pre > <unk> ( x ) . atan2 ( x y ) < / pre >
ceiling function to ceiling
sin : <unk>
sin function : = sin ( ... )
sinh function .
sigmoid - function
sigmoid function for scalar
element - wise power function
log n function
this function returns the less than n - > examples of length = > <br >
this method returns the greater or equal floating point of length
element - wise power function
element - wise max function
element wise wise max function
minimum function with a scalar
element wise wise max function
element - wise max function
floor absolute function
exp ( array
sigmoid function for nearest
generate sigmoid function
square sigmoid function
element - wise sigmoid function
log 2 scalar
sigmoid function .
compute the distance of a single op . this is equivalent to : <pre > math . op ( 1 ) ; <br > see : { @link <unk> ( string ) } < / pre >
pre - execute operation .
compute the compressed matrix that is power of an ndarray .
broadcast max op . see : {
/ * adjust the scheme for a given label
returns the next <code > <unk> / code > at the next <code > <unk> / code > element .
this method returns <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> / tt > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk>
q r decomp
q and cholesky decomp
this method returns allocationshape for specific array
this method returns allocationshape for specific databuffer .
checks if the given executable name exists in the given directory .
read the data from the input stream
******************** methods *******************************************
creates an ndarray with the specified shape
creates a new ndarray with the specified shape
randomly shuffle an ndarray .
this method creates an ndarray pointer from the given pointer pointer
create a new databuffer for the given file .
this method provides the requested allocation of specified chunk and location
this method allocates a new instance of { @link org . apache . flink . api . <unk> } .
/ * ( non - javadoc )
compute the updater for a given gradient
serializes a {
this is the same as {
returns true if the server is started .
this method pushes op functions into the functions queue .
/ * ( non - javadoc )
/ * ( non - javadoc )
this method returns the device pointer to the device .
this method returns the device pointer to the device .
returns the device pointer to the device .
/ * --- public methods ---
/ * ( non - javadoc )
attaches a thread to the current thread
returns the next device available for the given thread id .
loads a native library from the library .
writes the given resource to a file .
load a temporary file .
writes the given resource to the given file .
returns the extension of the os .
returns the string representation of this library .
calculates the current operating system type .
send an ndarray to the producer
save media file .
creates a data buffer .
this method executes the given <unk>
/ * ( non - javadoc )
multiply two complex numbers in - place
iteratively improve the <unk>
read the unknown data from the specified stream
/ * ( non - javadoc )
local response normalization operation .
<unk> operation : output [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] =
element - wise operation : see {
average pooling 2d operation .
max pooling 2d operation .
avg pooling 3d operation .
max pooling 3d operation .
element - wise operation : see {
element - wise rank reduction operation : <br > out [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] = ( <unk> > = [ 1 ] = [ 1 1 ] out [
element - wise operation : see {
this method calculates the covariance matrix for the given matrix . this method is used for calculating the <unk> of the matrix .
calculates the principal components for the covariance matrix .
main reset method
gets the module name for the given op .
creates a new ndarray with the specified shape
allocate a new array with the new array and allocate a new array .
this method returns an array with the current value of the current vertex .
return the shape of this variable .
create the gradient function .
this method creates a indarray array with the given shape and order order . the shape is automatically compressed ( i . e . the indarray returned by this method )
convert an { @link <unk> } to a list of { @link <unk> }
convert an array of shape to a matrix
concatenate ndarrays along a dimension
returns the number of elements in the target array
find the index of the absolute value of the element
this method sends out a { @link indarray } to the device .
/ * ( non - javadoc )
calculates { @link bigdecimal } pi .
calculates the gamma function of the given { @link mathcontext } .
returns the { @link bigdecimal } value of { @link bigdecimal } x .
return the result of { @link java . math . bigdecimal } .
calculates the n th root of { @link bigdecimal } x .
calculates { @link bigdecimal } x to the power of { @link bigdecimal } y .
<p > returns the { @link bigdecimal } value of { @link bigdecimal } x . < / p >
returns the { @link bigdecimal } value of { @link bigdecimal } x .
returns the { @link bigdecimal } of { @link bigdecimal } x .
returns a { @code bigdecimal } whose value is { @link <unk> } .
returns the natural logarithm of {
variations on { @link <unk> }
calculates { @link bigdecimal } x to the power of { @link bigdecimal } .
calculates the logarithm of { @link bigdecimal } x to { @link bigdecimal } x .
calculates the sine of { @link bigdecimal } x .
variations on asin ()
variations on asin ()
calculates the arc tangens ( inverted tangens ) of { @link bigdecimal } x .
calculates the hyperbolic cosine of a { @link bigdecimal } .
calculates the hyperbolic sine of { @link bigdecimal } .
calculates the arc tangens ( inverted tangens ) of { @link bigdecimal } .
returns the { @link bigdecimal } that is <code > <unk> / code > .
variations on { @link <unk> }
variations on gamma function .
variations on asin ()
calculates the n th root of { @link bigdecimal } .
returns the { @link bigdecimal } value of { @link bigdecimal } x .
returns a { @code bigdecimal } whose value is { @code n } .
gamma function .
symmetric difference of {
calculates the sqrt ( { @link bigdecimal } x ) of { @link bigdecimal } x .
returns a { @link bigdecimal } whose { @link bigdecimal } value is { @link <unk> } .
calculates the logarithm of { @link bigdecimal } x .
calculates { @link bigdecimal } x .
returns a { @link bigdecimal } whose { @link bigdecimal } value is { @link <unk> } .
returns a { @link bigdecimal } whose { @link bigdecimal } value is { @link <unk> } .
returns a { @code bigdecimal } whose value is { @code x } and { @code ( x ) } .
calculates the hyperbolic tangens of { @link bigdecimal } x .
returns a { @link java . math . bigdecimal } rounded up to { @link java . math . bigdecimal } x .
calculates { @link bigdecimal } x .
/ * ( non - javadoc )
update the variable name for the given variable with the given name .
get the function by id
create a function for the given id
get the inputs for the specified function
update the shape for the given variable name .
associate the given variable name with the given variable name .
get the shape for the given variable name .
update the shape for the given variable name .
associate the given variable name with the given variable name .
associate the array with the given variable .
adds a property to the specified {
adds a variable mapping for the specified field .
adds an outgoing function to this graph
add arguments for the specified differential function to the graph
checks to see if this function has the specified args
evaluate the difference
create a { @link sdvariable } with the given { @link shape } and { @link shape } . <br > note that if { @code shape } has shape [ 0 . 0 1 . 3 . x ] <br > for later use { @link <unk> ( int ) } <br
return a variable of the same shape as the input variable with the same shape as the input variable . <br > for example : <br > [ a b c ] <br > [ i ] = [ a b c ] <br > [ i ] = > [ a b c ] <br > [ i ] [ i ] [
return a variable of all 0s with the same shape as the input variable . <br > if the input has variable size then the output variable has the same shape as the input variable . <br > for example if the input variable has shape [ a b c ] then output will be output . <br > if the input has variable
returns a variable of this shape with the specified weight . <br > for example if x and y have different shapes and are broadcastable . <br > for example : <br > out [ i ] = [ a b c ] = [ a b c ] = [ a b c ] = [ a b c ] = [ a
create a new variable with the same shape as the input variable . if the variable is not in the array this method returns an array with the shape of the variable . if the variable is not in the array this method returns a new variable with the same shape as the input variable .
remove an argument from the specified function
sets the gradient for the given variable name .
average pooling 2d operation .
average pooling 2d operation .
max pooling 2d operation .
avg pooling 3d operation .
max pooling 3d operation .
max pooling 3d operation .
element - wise operation : <br > out [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] =
returns the size of the input variable . <br > for example : <br > out [ i ] = in [ i ] = in [ i ] = in [ i ] = in [ i ] = in [ i ] = <unk> [ i ] . <br > for example if input has shape [ a b c ] then
local response normalization operation .
local response normalization operation .
element - wise shuffle operation : <br > <br > out [ i ] = <unk> [ i ] = ( [ i ] ) > out [ i ] = a [ i ] = > [ 1 2 3 ] <br > [ 1 2 3 ] <br > [ 1 2 3 ] <br > [ 1 2 3 ] <br
todo : todo use <unk> instead of <unk>
element - wise merge operation : <br > out [ i ] = in [ i ] = in [ i ] = in [ i ] = in [ i ] if in [ i ] > = ( [ i ] [ i ]
element - wise shuffle operation : <br > <br > out [ i ] = <unk> [ i ] = ( [ i ] ) > out [ i ] = a [ i ] = > [ 1 2 3 ] <br > [ 1 2 3 ] <br > [ 1 2 3 ] <br > [ 1 2 3 ] <br
element - wise merge operation : <br > out [ i ] = in [ i ] = in [ i ] = in [ i ] = in [ i ] if in [ i ] > = ( [ i ] [ i ]
element - wise todo use : <br > this is equivalent to : <pre > out [ i ] = <unk> [ i ] = <unk> [ i ] = b [ i ] = > [ 1 2 3 ] <br > [ 1 2 3 ] <br > [ 1 2 3 ] <br > [ 1 2 3 ] <br >
element - wise merge operation : <br > out [ i ] = in [ i ] = in [ i ] = in [ i ] = in [ i ] if in [ i ] > = ( [ i ] [ i ]
element - wise operation : <br > <br > out [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] = <unk> [ i ] =
returns the size of the specified inputs . <br > for example if x and y have different shapes and are broadcastable the output shape is the same as the inputs . <br > for example if input has shape [ a b c ] then output will be output . <br > if input has shape [ a b c ] then output
batch norm operation .
batch norm operation .
<unk> ( <unk> ) : out = <unk> ( x y ) = <unk> ( x y ) = > <unk> ( <unk> ) = > <unk> ( <unk> ) = > <unk> ( <unk> ) = > <unk> ( <unk> ) = > <unk> ( <unk> ) = > <unk> ( <unk> ) =
get the output variable ( s ) out of the specified configuration . <br > for example if x and y have different shapes and are broadcastable the output variable will be set to 0 . <br > see { @link <unk> } for details . < / p >
generate an array of output variable for the specified operation
get an array of differential functions
this method returns list of differential functions
while { @code body } matches the condition { @code <unk> } and { @code <unk> } .
given a function name return a list of <unk> objects .
get a list of differential functions
create the gradient function .
this method returns the result of backward compatibility
adds a variable to the list of registered shape .
this method is used to resolve variables with the given map of arrays .
/ * ( non - javadoc )
set the place holder for the given variable name .
this method executes the given { @link <unk> } and returns a list of { @link differential } objects .
returns an array of differential functions
update the variable name and reference for a new variable with the given new variable . if the variable is not in the set it will be replaced with the new variable . if the variable does not exist an illegalargumentexception is thrown .
this function executes the {
removes the specified function from the samediff instance
converts an array of { @link string } s into an array of { @link <unk> } s .
update the gradient for the given variable name .
return the {
returns a string representation of this ndarray .
this method converts enums for datatype
convert the given datatype to a byte array
see : { @link <unk> ( org . op . <unk> . op . <unk> ) }
returns the type of the given type .
returns the {
this method is used to allocate a chunk of memory from the device .
get the float data for the given ndarray
returns the length of the data for the given data optype .
get the allocation mode for the given datatype
returns the binary name of the given {
get the allocation mode from the context
acquire the allocation mode for a context .
/ * ( non - javadoc )
this method picks and stores the references of the given { @link workspace } to the given { @link <unk> } .
destroys all workspaces allocated to current thread
this method prints out the cost statistics for current thread .
/ * <unk>
/ * <unk>
creates an <unk> matrix from the given data order and performs the linear algebraic operation on the given data order and performs the linear system of the given data order and a x y and beta vectors .
performs a rank - 1 update of an element in the given order order : <br > <br > see { @link <unk> } for more details .
performs a rank - 1 update of the given data
performs a rank - 1 update of the given data
performs a rank - 1 update of a packed { @link <unk> }
performs a rank - 1 update of a packed { @link <unk> }
computes a rank - 1 matrix in a &lt ; <unk> ;
performs a rank - 1 update of a packed { @link <unk> }
performs a rank - 1 update of the given data
computes a rank - 1 matrix of n : a [ a - c ] a [ : j ] ( : a = a [ : j ] )
/ * ( non - javadoc )
given a set of labels return the index of the label .
variance array reduction .
this method executes the given rng
this method returns output for the given input
conduct encode normalization
broadcast copy op . see : {
pre - process blocks
evaluate the network with optional metadata
returns the name of the node to be used .
runs a single dimension
/ * ( non - javadoc )
/ * ( non - javadoc )
this method executes a given rng
this method executes given <unk>
/ * ( non - javadoc )
send a feedback message to the client .
asserts that the specified workspace is open .
this method throws an { @link <unk> } for each element of the ndarray . note that this is not the same as { @link <unk> ( indarray [] int [] int int ) } but it is not possible to call { @link <unk> ( indarray [] int [] ) } instead .
compute the gradient for the log
{ @inheritdoc }
waits for the next scheduled request to active .
/ * ( non - javadoc )
sets the current state of the session .
build environment .
/ * ( non - javadoc )
initialize training from list of examples .
sets the given value to the given value .
this method is called when a action is created .
this method returns the pointer to the device using the specified shape
this method should be called by the {
this method is used to allocate a memory chunk of memory from memory
convert a {
add the data in the given { @link <unk> } to this { @link <unk> } .
create a {
this method provides an externally - allocated version of {
/ * ( non - javadoc )
create a gradient frame for the given gradient and <unk>
this method should only be called when the allocation point is required .
convert the writables to an index array .
broadcast add op . see : {
broadcast copy op . see : {
broadcast divide op . see : {
broadcast equal to op . see : {
broadcast greater than op . see : {
broadcast greater than or equal to op . see : {
broadcast less than op . see : {
broadcast less than or equal to op . see : {
broadcast not equal to op . see : {
broadcast element computation op . see : {
broadcast reverse subtraction op . see : {
broadcast max op . see : {
broadcast min op . see : {
broadcast copy op . see : {
broadcast absolute min op . see : {
this method is used to initialize the form of the current samediff instance .
returns true if the current samediff function has place .
compute the difference between two given arrays .
calculate the shape of the given set of indices
format the given ndarray as a string .
{ @inheritdoc }
convert an ndarray to a blob
{ @inheritdoc }
save an ndarray with the specified id
convert an ndarray to an offset
convert an ndarray to an offset
iteratively this = <unk> ( <unk> )
scalarization values based on <unk>
/ * ( non - javadoc )
calculates the anomaly score for the given instance .
/ * ( non - javadoc )
/ * ( non - javadoc )
convert an ndarray to a <unk>
{ @inheritdoc }
reverses a slice
swap the elements of i i . i . e . i . e . i . e . i . e . i . e . i . e . i . e .
/ * <unk>
this method converts an array of outcomes into a {
/ * ( non - javadoc )
creates an ndarray with the specified row and column
/ * unsynchronized
create an { @link <unk> } with the specified element .
this method returns the { @link doublevector } of the given { @link ndarray } .
add an element to the members
returns a new <unk> with the given variance
get the row width
shuffle a column in a matrix
multiplies each row in this matrix
add a column - wise column vector
add a row to rotate - > row
/ * ( non - javadoc )
divide matrix to another
/ * matrix multiplication
/ * matrix multiplication
/ * matrix multiplication
computes the dot product of this matrix by a vector .
compute the random ndarray with the specified shape
iterate operation on the given matrix
this method calculates pca - wise scalar ndarray
convert the value to a scalar value
/ * matrix multiplication
/ * matrix multiplication
/ * matrix multiplication
/ * matrix multiplication
returns the value at the specified index .
creates a random view of the specified values .
computes the eigenvalues of a general matrix .
computes the eigenvalues and eigenvectors of a general matrix .
compute generalized eigenvalues of the problem a x = l b x .
returns the log probability of the binomial distribution .
returns the value of the element in the vector that contains the largest element in the vector .
copies a vector to a vector
computes a vector - vector multiplication of a vector with a vector : <br > vector = a [ i : ] = a [ i ] = a [ i ] = a [ i ] = a [ i ] = a [ i ] = a [ i + 1 ] < / code >
see : http : // en . wikipedia . org / wiki / <unk>
computes the product of a vector by a scalar .
pre - block transpose
undo ( revert ) the normalization .
merge a set of features with the specified features and mask arrays ( i . e . concatenate the specified features )
this method returns 2d array of 3d array with specified masks .
this method returns 2d array of 3d array with specified masks in 3d order .
this method executes the given { @link <unk> } and returns an array of { @link <unk> } objects .
returns true if the specified ndarray is contiguous .
returns true if the specified x is contiguous
this method converts an array to an offset along the given dimension
/ * ( non - javadoc )
computes the cosine loss for a given label . <br > for example if predictions is the same as the input { @code label } <br > implements { @code <unk> ( label [ i ] } ) < / p >
log loss .
get the non - squared count of all non - zero squared error values .
compute the reduced error squared error .
<editor - fold defaultstate = collapsed desc = initialization >
finds a constructor with the given argument types .
finds a constructor with the given argument types .
invokes the given method handle with the given target object handle .
<p > newinstance . < / p >
get the value of the given field from the given object .
checks if the given value is assignable to the specified class .
returns the annotation of the given type .
checks if the given annotation is present on the given class .
returns true if the specified annotation is present on the given class .
create a proxy for the given interface .
/ * ( non - javadoc )
converts the <code > <unk> / code > to a <code > <unk> / code > object .
marshals the entity represented by the given metadata .
reads a { @link <unk> } from the { @link <unk> } .
{ @link <unk> ( java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string ) }
helper method to parse the value of a { @link <unk> } .
translate the given { @link <unk> } to a { @link filter } .
/ * ( non - javadoc )
[ variable <unk> ]
sets the value of the stringvalue to the given value .
adds a field to the actual fields .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
[ variable my_kind ]
<p > <unk> . < / p >
adds a projection to a query .
add distinct on on to builder .
creates a new instance of the { @link <unk> } .
/ * ( non - javadoc )
{ @inheritdoc }
waits for all pending tasks to complete .
{ @inheritdoc }
gets the metadata for the given kind .
returns a { @link org . apache . lucene . api . query . query } for the given { @link key } .
[ variable my_kind ]
[ variable <unk> ]
queries an existing { @link <unk> } using the specified { @link <unk> } .
[ variable my_kind ]
divides the elements in the given iterator .
loads all buckets from the given iterator .
returns an array containing all of the elements in this list in proper sequence ( from first to last element ) .
returns the { @link constraint } for the given id .
gets the url of the user code .
creates a key from a google api key key .
<p > create a new { @link key } of the specified type . < / p >
<p > column . < / p >
creates a key from a google api key key .
creates a { @link id } for the given { @link class } .
{ @inheritdoc }
compares two keys with the second argument .
<pre > key = key . < / pre >
gets the raw value of the api key .
returns the name of the given type .
returns the kind of the kind of the given class .
<p > <unk> . < / p >
returns whether the given type is a {
returns the exact type of the super type of the given type .
gets the exact direct super type for the given generic type .
gets the exact return type of the given method .
return the boxed type of the given type .
create rest callback implementation .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
registers the index instruction for the given class .
returns true if the given field is a {
returns true if method is annotated with {
/ * ( non - javadoc )
gets the attribute metadata .
returns a list of instances associated with the given key .
commits the transaction .
translates acid house { key } and { @code <unk> } to { @code <unk> } .
{ @inheritdoc }
{ @inheritdoc }
sets the indexed value for this class .
registers a new { @link <unk> } with the given { @link <unk> } .
returns the type of the collection component of the given type .
gets the map key type for the given generic type .
returns the relative path of the given path relative to the base path .
gets the final node path .
/ * ( non - javadoc )
returns the depth of the tree .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts entities to a java . util . map .
/ * ( non - javadoc )
gets all the keys in the cache .
copies all of the elements in the given collection into the cache .
removes all keys and values from the given iterable .
puts a list of {
gets all keys in the given collection .
returns a { @link set } of { @link label } s of the given { @link annotation } s .
find all key fields for the given path .
{ @inheritdoc }
sets the key serializer .
creates a new document with the given documentreference .
/ * ( non - javadoc )
<code > . google . com . <unk> . <unk> . <unk> . <unk> () < / code >
sets the id of the given class to the given class .
liberty change for cxf begin
register a new subclass of { @link <unk> } .
<p > <unk> . < / p >
<unk> > <unk>
create a parameterized type instance .
checks that the parameterized type is a bound bound type .
<p > <unk> . < / p >
<p > <unk> . < / p >
returns the {
creates a wildcard type with the specified bounds .
returns the annotation of the specified type or null if no annotation is found .
adds the given { @link session } to the { @link <unk> } .
add a value to the list .
adds the given stream to this class .
remove key from entity .
/ * ( non - javadoc )
execute the {
helper method to create a { @link ref } from a { @link <unk> } .
returns the result as a { @link mealymachine } .
translates acid house { @link entity } s to a { @link java . util . map . <unk> } .
create and return a wrapper around the supplied entity .
adds a filter to the filter list .
/ * ( non - javadoc )
/ * ( non - javadoc )
appends the given ids to the given ids .
/ * ( non - javadoc )
closes the queue .
/ * ( non - javadoc )
create a key from a key or entity .
<code > . google . cloud . inventory . <unk> ( <unk> ) < / code >
creates a new entity in the specified parent .
creates a key from the parent map .
gets the raw value of a key .
copies the indexes of the given node to the given mapper .
converts a { @link <unk> } into a { @link <unk> } .
create a { @link <unk> cloud google . cloud . storage . <unk> cloud datastore key } from the given { @link <unk> } .
returns a {
{ @inheritdoc }
same as { @link <unk> ( java . util . function . <unk> ) } except that the { @link <unk> ( java . util . concurrent . scheduledexecutorservice java . util . concurrent . <unk> ) <unk> () } is thrown .
same as { @link <unk> ( <unk> ) } but with a { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
appends the given ids to the map .
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
same as {
this is a synchronous call .
obtains a global lock of the given { @link <unk> } .
<p > duplicate . < / p >
helper method to get the { @link counterdata } associated with the supplied { @link <unk> } .
creates a new datastore
/ * ( non - javadoc )
construct a collection from a list of objects .
creates a new instance of the specified type .
<p > newinstance . < / p >
gets instances of the given type .
[ variable <unk> ]
allocate a incompletekey .
/ * [ deutsch ] <p > allocate a new key range . < / p >
convenience method for { @link android . ui . <unk> () } .
returns a new instance of { @code <unk> } .
/ * ( non - javadoc )
get the ccm instance associated with the { @link <unk> } .
/ * ( non - javadoc )
/ * documented <unk>
<p > <unk> . < / p >
coerces a number to a number .
/ * ( non - javadoc )
/ * ( non - javadoc )
on typed query
returns the offset from the given query .
/ * ( non - javadoc )
return the end of the query
returns a typed { @link java . util . query }
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a typed { @link java . util . query } instance with the given value .
/ * ( non - javadoc )
creates a new key - value pair .
creates a key from the given value .
returns an instance of the {
add a value to the list .
/ * ( non - javadoc )
generates a { @link <unk> } for the given { @code <unk> } .
executes the task .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the stat for the given type .
returns the exception that caused the exception .
rethrow the given { @code throwable } and throws an { @code exception } if it is unchecked .
coerces a number to a number .
returns a { @link translator } for a path .
gets a { @link list } of { @link plugin } s with the given alias .
creates a new { @link translator } for the given path .
/ * ( non - javadoc )
returns the name of the specified bean in the container .
sets the value of the given { @code <unk> } to the given { @code <unk> } .
this method binds the given value to the given path .
/ * ( non - javadoc )
<p > <unk> . < / p >
writes the certificate extensions .
returns true if the category is a content category .
write a list of categories to the output .
process the macros in the given snippet
converts a dom node to a json string .
writes the given json object to the given writer .
writes the bid of an object to the output stream .
writes the state of this object to a jsongenerator .
converts a dom node to a json string .
serialize an object to an output stream .
writes the given json object to the given writer .
writes the bid of the bid to the jsongenerator .
check the bid of the bid in the bid of the bid .
returns an iterable of {
returns a list of clusters that can be used for generation of clusters .
returns the bid of the example bid .
returns an instance of the bid of the bid of the bid server .
returns an iterable of {
update the bid of the bid .
set the bid of the bid to the bid of the <unk> .
removes equalities from the bid .
removes java .
transfomiert eine <unk> operation .
sets the specified <unk> to the specified type .
transfomiert eine implication ( imp ) operation .
returns a predicate that is equivalent to the <unk> interface .
compare two <unk> .
write native json data to json .
writes the native json content to the given writer .
serialize an object to an output stream .
/ * ------------------------------------------------------------
converts a stream to a json string .
writes an object to the given outputstream .
writes native json to the given writer .
writes the native url to the jsongenerator .
read a set of {
returns whether or not the current token is empty .
register a { @link <unk> } .
register a { @link <unk> } .
<p > register . < / p >
creates a native representation of a native string .
reads an object from a reader .
reads an object from an input stream .
build a native request from a jsonparser .
creates a native representation of a charsequence .
reads the json data from the given reader and returns the result .
reads the native json from an input stream .
builds a native get request .
returns the bid of the bid .
returns the bid of the record required for the request bid .
creates a representation of the request .
reads the bid request for the specified reader .
returns a {
returns the request bid request or null .
creates a new representation of the given string .
deserialises the given { @link reader } to the specified { @link <unk> } .
reads the bid of the document .
gets the bid of the complex bid .
/ * ( non - javadoc )
assert that {
updates the update .
collects all nodes underneath the given filter .
filters the given message using the given { @link <unk> } .
returns the name of the current method .
parses a json object from a jsonparser .
end an object from a jsonparser .
parses a json array and returns an array of strings .
/ * ******************************************************************** / * internal methods ********************************************************************
creates a new token that can be used in a jsonparser .
returns the {
write a number field .
writes a json array to the jsongenerator .
writes a list of measurements to a file .
write long data to a jsongenerator .
writes a number field .
writes a { @code long } to the given { @code archive } .
writes the given geometry to the geojson file .
write a number field .
write a list of archived {
load a parameter string from a json array .
creates a url from the target url .
get the url of the target url .
get the filename of the embedded parameters .
checks if the given url is a valid host .
returns the url for the given url .
<unk> > <unk>
get list of property values from storm s configuration .
get lstm config element from storm s configuration .
returns true if the protocol is not found .
create a new { @link tuple } { @link <unk> } .
/ * ------------------------------------------------------------
fix http : // www . w3 . org / protocols / rfc2616 / rfc2616 - <unk> . html
attempts to parse the given { @link <unk> } into a { @link <unk> } .
parse a string value .
gets the metadata for a given password .
/ * ( non - javadoc )
loads all the rules from the given engine .
{ @link <unk> ( string string ) }
add a key / value pair to the map .
/ * ( non - javadoc )
computes the md5 hash of the given url .
clean a field name .
/ * ( non - javadoc )
<unk> > <unk> > <unk> > <unk> / code > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> >
loads a model from the given byte array .
/ * ( non - javadoc )
recursive method to get the encoding of the meta data .
reads a byte array .
<p > <unk> . < / p >
sets a parameter .
gets the first value in the map .
take a command and return the result .
/ * ( non - javadoc )
parse a set of cookies into a list of cookies .
check if the domain matches the given domain name
get the cache url for the given url .
<p > <unk> . < / p >
{ @link java . util . <unk> }
get the list of tags for the given node .
extract the line from a string content .
write robots .
returns the ack to the given tuple .
convert the given url to a boolean .
{ @inheritdoc }
create a list of rules .
reads match rules from a jar file .
build the query string from the given url .
adds the url to the url .
unescapes the given <code > path< / code > in the given <code > path< / code > .
convert a byte array to a hex string .
create a <unk> from the specified region .
mark the results of a { @link <unk> } .
adds a record to the grpc output format .
/ * returns the number of times the current time in milliseconds .
checks if the last query has been executed .
creates a { @link <unk> } from storm s { @link conf } and { @link <unk> } .
receive notification of character data .
receive notification of ignorable whitespace .
receive notification of a processing instruction .
receive notification of character data .
receive notification of cdata .
report the start of dtd declarations if any .
receive notification of the start of a prefix mapping .
/ * ( non - javadoc )
parse a robot .
returns true if the specified {
filters the given metadata string .
returns the canonical form of the given tuple as a { @link string } .
removes the given string from the end of the string .
{ @inheritdoc }
schedule a time interval .
checks the custom intervals for the querycriterion .
get configuration from storm conf file
creates an instance of the { @link scheduler } for the given { @code <unk> } .
submit a topology
submit a topology .
create a list from an object .
unmarshals the given { @link file } into an { @link object } .
读取整个excel文件 <unk> 全部返回
<unk> > <unk> { @link <unk> } <unk>
unmarshals the given { @link file } into an { @link object } .
向工作簿中写入beans，所有bean写在一个sheet中 默认以bean中的所有属性作为标题且写入第0行，0 - <unk> <unk>
<unk> > <unk> { @link <unk> } <unk>
sets the instance of the given field .
/ * <unk>
set the count of <unk> .
gets the default size .
sets the drawable at the specified index .
sets the divider that will be used to render the header .
set the progress angle .
updates the position of the slider .
invalidates the item at the given position .
calculate the position of the adapter .
updates the velocity .
calculate the colors color from the map entry .
calculates the number of digits in the given value .
return true if the given string matches the pattern .
creates a { @link classloader } for the given { @link job } .
execute the mojo .
encodes the given array of characters .
produce a comma - delimited list of the xml elements from the supplied index .
returns an { @link bytebuffer } containing all the bytes in the { @link inputstream } as an { @link inputstream } .
returns the string representation of the pattern .
retrieve a double value .
returns the string representation of the pattern .
set the value of a string
set the coordinate at the given index .
creates a string representation of the given pattern .
returns an array of all of the elements in the result set .
splits a string into an array of characters .
gets a string .
given a string representation of a string array it will return a comment object .
returns the dot matrix .
matrix multiplication m1 .
solve a * x = b .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
show the task .
activates the window view .
reads the data from the file at the specified level .
gets the compressed image data .
calculate the size of a grid given a grid position .
write a <unk> to a <unk>
writes a random file to a random file .
the main method .
factory method for create a new { @link unit } .
factory method for create a new { @link <unk> } .
returns the plural form of the given word .
choose a time ago ( <unk> ) .
checks if the given date is included in the given date .
/ * ( non - javadoc )
returns { @code true } if this range intersects with the specified start date .
return the intersection of the specified property .
process a range of ranges .
sets the end date .
/ * [ deutsch ] <p > ermittelt die <unk> - <unk> . < / p >
/ * [ deutsch ] <p > ermittelt die <unk> <unk> <unk> . < / p >
sets the duration of this view .
delete backups according to the retention period .
store persistent data into preferences .
called when the map is released .
create the dataset dataset .
write a bson array from the file system .
write a <unk> event to the file
returns the position of the first outer table in the table .
returns the next character in the string .
print error message .
creates a new database work for given location .
todo : use <unk>
get the value of the extension .
updates the given list of atoms with the given name .
search by short name .
/ * ( non - javadoc )
used by <unk>
todo add unit test
control the viewpager .
calculates the distance between two points .
/ * drawing
checks if a file is a multimedia file .
parses an xml file into an object .
turns a changeset into a new { @link <unk> } .
gets the maximum value of this field from the specified partial . <p > the maximum value of the field is the value of the specified field . the maximum value of the returned value is the maximum value of the largest field . the maximum value of the returned value is the maximum value of the
gets the maximum value of this field of the specified partial instant . <p > the maximum values of the fields in the fields are the minimum and maximum values in the specified partial . <p > the maximum values of the fields in the fields are the minimum and maximum values in the specified partial . <p > the values of the fields
writes the {
/ * ( non - javadoc )
creates a { @link <unk> } for the <unk> feature .
/ * public void <unk> ( string [] args ) { return <unk> . <unk> () ; }
https : // www . <unk> . com / <unk> / master / src / main / java / src / main / java / src / main / java / src / main / java / src / main / java / src / main / java / src / main / java / src / main / java / src / main
read all data from the file .
/ * ( non - javadoc )
/ * ( non - javadoc )
registers the given directory with the watchservice
process the watcher from the watcher .
creates a new <unk> for the given date unit .
returns true if the given name is a class .
<p > <unk> . < / p >
register a factory to create a new instance of the specified class .
open a feature table .
method <unk> .
get the effective typequalifierannotation on the feature type .
{ @link <unk> }
/ * ( non - javadoc )
write the text to the response .
/ * ( non - javadoc )
<p > <unk> . < / p >
generates the html code for the current user . <p >
get the catalog for the given path .
removes the dynamic catalog from the given path .
add global {
initialize the global credentials .
执行http - <unk>
creates and returns a new { @link <unk> } object .
this method is used to get the url of the http call to { @link <unk> } .
execute op .
returns an array of filter expressions .
src support for <unk>
src / main / resources / org / drools / compiler / lang / drl5expressions .
todo : add <unk>
/ * <unk>
creates a collection name from a class name .
$example off : <unk>
returns a list of catalog methods for the given group id .
make a dataset .
<p > <unk> . < / p >
expands a dataset into a dataset .
read a dataset and group the data from <unk> .
/ * ( non - javadoc )
check if two objects are equals .
creates a new {
/ * ------------------------------------------------------------
reads a range of <unk> from the file .
read a chemfile object .
/ * ( non - javadoc )
sets the product information .
/ * public int <unk> ( int short int short int <unk> ) throws <unk> { int <unk> = <unk> . <unk> ( 2 ) ;
convert a byte array to an int .
get a date from the specified julian day .
sets the value of the named property .
checks if the given string is a valid <unk> object .
returns a valid <unk> object name for the given string .
returns true if the given string is a member name .
open the file
performs the <unk> algorithm on the given section .
/ * private void <unk> ( <unk> [] <unk> ) { <unk> = new <unk> () ; }
<unk> least <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
writes the file to the file overwriting the existing file .
read preference .
creates and returns a copy of the values for the <code > <unk> / code > values .
converts a time string into a time object .
/ * ( non - javadoc )
escapes a file in a <unk> .
returns true if the given string is a supported format .
returns true if two lines are in the same line
returns the distance between two points . <p >
return the distance between two points .
<p > returns a copy of the specified poi by the specified coordinates . < / p >
returns the angle in degrees of the specified point vector .
adds a function to this pojo .
returns a { @link function } object for the given name .
returns a function for a given function name .
loads a new instance of the server .
returns the name of the first coordinate in a <unk> .
/ * ( non - javadoc )
get the level of a level .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
create a catalog catalog map .
this method is used to retrieve all the files in the given dataset .
get a grid parameter from a grid record .
returns the name of the distance between two nodes .
returns the description description of a given { @link <unk> } .
returns the level of the given {
returns the projection type for the given size .
returns true if the given { @link <unk> } is an { @link <unk> } .
/ * ( non - javadoc )
encode a coverage header
builds a {
encode a { @link <unk> } to a { @link java . util . date } .
vars doc line
encode the given { @link <unk> } into a { @link <unk> } .
build a { @link <unk> } from screen description .
/ * [ deutsch ] <p > <unk> { @link <unk> ( <unk> ) } < / p >
convert a { @link <unk> } to a { @link <unk> } .
create a { @link <unk> } from a json object .
{ @inheritdoc }
register a transform for a specific class .
set the name of the interface .
register a class by name .
create a <unk> .
make a dummy transform variable .
returns a { @link projection } for the given { @link <unk> } .
fire a property change event .
factory method for create a new { @link jdialog } object .
<p > main . < / p >
returns the descriptor corresponding to the specified coordinate .
gets the location of a request from a request .
/ * ( non - javadoc )
this method writes the values of an element to a { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
******************** initialization ************************************
creates a new { @link <unk> } object with the specified base time zone .
serialize an array of <unk> .
/ * ( non - javadoc )
write an atomic array .
/ * ( non - javadoc )
writes samples to the output stream .
/ * ( non - javadoc )
/ * perform an unescape of ce ce suffixes .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
read a table from a file .
finish initialization of the geometry .
scans the scene graph to see if it s a dataset or not .
determine the list of input files corresponding to the input .
/ * ( non - javadoc )
like { @link <unk> ( java . util . map ) } but with { @link <unk> ( string ) } .
/ * ( non - javadoc )
create a new instance of <unk>
load a mod instruction .
control the ps sun - <unk> shape
<p > returns a point from a point to a given point . < / p >
/ * ( non - javadoc )
substitutes dynamic values using the provided model .
adds text to the given text .
/ * ( non - javadoc )
/ * ( non - javadoc )
get an attribute from the given object .
checks if the file is full .
/ * ( non - javadoc )
set a knot position .
calculates the grid .
/ * ( non - javadoc )
<p > main . < / p >
/ * ( non - javadoc )
write the preamble into the given writer .
/ * ( non - javadoc )
attempts to parse the given url .
reads all files in the given directory .
/ * ( non - javadoc )
returns a byte grid reader for the given file .
initialize the navigation .
main method .
method used to determine the grid type of the grid
calls { @link <unk> ( string ) } on the grid .
reads a classification from raw data .
receives a parameter part of the polygon according to the specified number of decimal points .
/ * bufsize is based on <unk> and <unk> .
find the smaller number of fractional derivatives of the input .
corresponds to <unk> from <unk> and <unk> .
/ * ( non - javadoc )
read the frames from the file .
minioclient . <unk> ()
trainer only command .
prints an array of blocks to stdout .
<p > <unk> . < / p >
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
/ * ( non - javadoc )
reads the next token from the stream .
add a variable to this container .
prints the html code to the print writer .
prints a string to the print writer .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a clone of this object with the given key - value pairs .
/ * [ deutsch ] <p > erzeugt ein neues <unk> kalenderdatum . < / p >
obtains an instance of { @code java . util . offsetdatetime } from the given { @code date } .
returns the expires date for the given time .
<unk> > <unk>
parse an iso - 8601 { @code instant } .
<unk> > <unk>
parse a date unit .
gets the value of the field at the specified index .
/ * [ deutsch ] <p > addiert den angegebenen <unk> . < / p >
returns a { @code localtime } with the specified period subtracted . <p > this returns a { @code calendar } based on this one with the value of the specified field . if it is not possible to subtract the specified field . <p > the result is modified based on the value of the specified field . <p > the result is
<unk> method .
calculates difference between two fields .
create a map of user variables .
return a new allocationshape
this method will count all of the data on a data node .
create a new <unk> .
alter a <unk> .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
creates a temporary file with the given parameters .
escapes a string so that it can be used as a string .
/ * ( non - javadoc )
returns a { @link list } of { @link list } of { @link slices } of { @link list } s .
splits a byte array into a byte array .
returns true if the given slice is a whole slice .
returns true if a data set is on a data set .
performs the actual work of the <unk> task .
calculate whether or not a given set of dimensions intersect .
run a set of <unk> .
this method converts a resultset to a long .
this method is copied from org . <unk> .
convert a { @link <unk> } to a { @link <unk> } .
converts a byte array to a string .
given a set of indexes return a list of ranges .
convert the given value expressed in seconds to the given unit .
add minutes to a date
returns a copy of this monetary unit with the unit of this unit multiplied by the specified unit .
returns a copy of this monetary unit multiplied by the unit of the unit .
--------------------- interface biopaxelement ---------------------
raise a { @link javax . net . <unk> . <unk> } iteration .
/ * [ deutsch ] <p > addiert den angegebenen betrag der entsprechenden zeiteinheit zu <unk> . < / p >
converts a float array into a unit vector .
converts a { @code double } to a { @code double } .
returns the canonical string representation of this pixel .
<p > main . < / p >
returns the data witness data .
set the data .
returns the data in a <unk> .
creates a {
read the record information .
helper method to get the javadoc { @link <unk> } .
{ @inheritdoc }
flatten a { @link <unk> } into a flattened { @link <unk> } .
returns the service object associated with the given id .
/ * ( non - javadoc )
<unk> - <unk>
get the number of occurrences of a gate constant .
contribution to 0 .
returns the number of occurrences of the specified number in the constant pool of the specified type .
reads the data contained in the frame .
get an array of short shorts from a short short array of short short codes .
write this object to a stream .
make a variable substitution for the given variable .
make a new subset of the given subset of this subset .
returns the preferred size of the given container .
/ * package private
returns the k - value array in the queue .
get the <unk> corresponding to the indicated index .
/ * ( non - javadoc )
print the accuracy .
<unk> - <unk>
/ * package
/ * ( non - javadoc )
/ * package
get a synonym map from an input stream
returns the center of the device s center .
/ * package
<p > generates the <unk> for a given <unk> . < / p >
visible for testing
extract the global metadata from the given context .
write ifd data .
/ * [ deutsch ] <p > erzeugt ein neues <unk> kalenderdatum . < / p >
/ * [ deutsch ] <p > erzeugt ein neues <unk> . < / p >
/ * [ deutsch ] <p > erzeugt ein neues <unk> kalenderdatum . < / p >
create a new <unk> from a date .
returns a timestamp relative to this one by the given value .
the main method .
gen - last : <unk>
gen - last : <unk>
gets the { @link <unk> } from the given factors .
the main method .
returns true if the file doesn t exist .
read the log file .
read frames from the descriptor file .
<p > main . < / p >
this method is used to initialize the <unk> .
/ * <unk>
return the rigid body stream from the input stream .
reads a chunk of data from the input stream .
/ * ( non - javadoc )
increase the rotation of the axis .
get the current value of the unit step .
quadratic interpolation to compute the distance between two points .
<unk> <unk> <unk> <unk>
/ * package private
calculate the size of the <unk> constant .
makes a transformation to make vertical transforms .
remove a partition from the list of files .
/ * package
set the debug flags .
set whether or not the index is writable .
/ * ( non - javadoc )
/ * ( non - javadoc )
helper method to compute the <unk> for a general matrix .
/ * ( non - javadoc )
/ * --- private methods ---
returns the bounding box of the chart
estimates the motion between the two points .
method to get the bounding box of the bounding box
{ @inheritdoc }
<unk> the coordinate of the given batch method .
generate the structure of the given structure .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
foobarbaz → <unk>
returns a string representation of the specified { @code v } or { @code width } if it s not an { @code int } .
convert a long to a string
/ * public static string <unk> ( int value ) { int [] <unk> = 0 ; string <unk> = 0 ; string <unk> = 0 ; string <unk> = 0 ; string <unk> = 0 ; string <unk> = 0 ; string <unk> = 0 ;
format the size of the given size .
prints a code point to the console .
/ * public static void <unk> ( string description int description ) throws ioexception { string d = <unk> . <unk> () ;
creates a string representation of this xml document .
write this object to a stream .
helper method to create a { @link <unk> } from a { @link <unk> } .
creates a new { @link arraylist } of { @link table } s from the { @link <unk> } .
write a axis .
converts a string array to a string representation .
reads a { @link <unk> } object into a list of { @link element } s .
the main method .
retrieves the slice .
returns the total number of elements in this shape
returns a string representation of this decomposition .
compose a slice of a slice .
visible for testing
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the level of the given { @code name } .
get all <unk> for a <unk> .
updates the data column of a data table .
download the structure from the stream .
run the conversion data .
read the contents of the data store into memory .
parses the given url and returns a { @link arraylist } of { @link bean } s .
fixme : move to <unk>
this method reads the input stream from the given input stream .
/ * ( non - javadoc )
returns a {
helper method to write a { @link <unk> } to a { @link element } .
add a list of attributes to the queue .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the results as a list of <unk> .
/ * ( non - javadoc )
documentation inherited from interface
/ * ( non - javadoc )
creates an { @link com . <unk> . <unk> } for the given filename .
read a dataset from a file .
prints a classification tree .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > returns the value of { @code x } <sup > infinite < / p >
converts the given { @link projection } to a { @link <unk> } .
compute the shape of the given ndarray .
sets the value of the pointer field .
/ * find a standard date
parses a date string into a date object .
returns the {
converts this object to a date .
converts a double value to a date .
get the wait time for the given date .
@deprecated use { @link <unk> ( string ) } instead .
gets the length of the grid .
adds the dimensions to the <unk> record definition .
adds a new <unk> to a file
calculate the coordinate of a coordinate .
add a <unk> to the <unk>
helper method to run a projection on the given { @link <unk> } .
returns the index of the {
adds a variable declaration to the given type .
vars doc end
compute the sparse grid definition .
/ * make the loss of a slice of the grid .
print the statistics on the console .
/ * <unk>
/ * calculates the z - value of the grid record .
creates the <unk> axis .
read the read distance from a reader .
calculate the lat / lon records for a reader .
/ * ( non - javadoc )
reads a <unk> .
read a dataset scan .
returning a {
/ * <unk>
read a comment object .
write the bugcollection to a output stream .
method to write out <unk> .
sets the level of the trace .
removes the tag from the file .
<unk> a new <unk>
validate list attributes .
reads the data from the context of the given section .
writes <code > len< / code > bytes from the specified byte array starting at offset <code > off< / code > to this output stream .
prints a string to the print writer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
prints a string to the output stream .
print a debugging message .
print a help message .
print a list of nodes to the output stream .
creates a new <unk> .
/ * [ deutsch ] <p > interpretiert den angegebenen text . < / p >
get the coordinate name of a { @link <unk> } .
returns the name of the coordinate of the given { @link <unk> } .
----- private methods -----
build an exception from an xml file .
/ * set the value of the <unk> object
convert a <unk> to a dimension .
creates a new variables .
gets the z - coordinate from a <unk> .
returns the floating - point bit of the given { @code value } .
the main method .
parse the {
/ * <unk>
wrap a <unk> .
open a dataset enhancer .
opens a dataset from a location .
/ * ( non - javadoc )
enhance the {
cancels a {
method that acquires a dataset from the given file .
reads a {
open a {
acquires an empty { @link <unk> } .
acquire a named { @link <unk> } .
download or reuse a file .
acquires a named { @link <unk> } .
clears the coordinate system
find the coordinate of a coordinate .
returns true if the given name is null .
returns true if the given name is null .
gets the transform .
/ * ( non - javadoc )
this method initializes <unk>
convert a { @link <unk> } to a { @link <unk> } .
enhance the { @link <unk> } implementation .
adapted from graphics gems .
sets the values of the given parameters .
creates a new array condition with the given values .
/ * ( non - javadoc )
dump all of the atoms of the given object to the output writer .
dumps the contents of a {
main method .
get a { @link org . apache . http . http . <unk> } as a { @link org . apache . commons . httpclient . servlet . <unk> } .
send a {
get the coverage data from the request .
send a resource to a <unk> .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
generate a { @link <unk> } model from a { @link httpservletrequest } .
/ * ------------------------------------------------------------
evaluate the <unk> from the database .
returns the index of the index in the array .
read a file column .
returns the type of the specified service type .
returns the type of the given type .
set the data from database .
evaluates the {
/ * <unk>
write a list of beans to a file
convert a linestring to a list of { @link <unk> } objects .
<unk> the given <unk>
gson invokes this call - back method during deserialization .
used by <unk>
creates a new {
adds the given tokens to the documentation tree .
removes the documentation for the given type .
returns the index of the first occurrence of the specified element in this list .
gets the index of the maximum entry .
/ * [ deutsch ] <p > erzeugt eine <unk> dauer . < / p >
/ * ------------------------------------------------------------
deserialize a server .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an input stream for the given resource name .
checks if the given file is a case insensitive document .
creates a new { @link <unk> } with the given name and value .
performs the actual work of the task .
register a convention for convention .
set the name of the interface .
set the value of the <unk> convention .
build a genbank file for the given <unk> .
<p > factory to create a <unk> factory . < / p >
retrieves a description of all the coordinate systems of a given dataset .
find the coordinate axes of a <unk> .
find the coordinate system from a <unk> record .
formats a {
<p > <unk> . < / p >
make a coordinate system from a <unk> .
method to assign a <unk> to a <unk>
figure out the coordinate system of the <unk> .
make a <unk> .
checks if the given axis is a coordinate of the specified coordinate .
make a <unk> from a <unk> .
method to assign a <unk> .
adds a coordinate to the coordinate map .
$example from <unk>
find all services in this dataset
sets the filter to this site .
vr : inline
delete a dataset .
finishes the datasets .
get the time base job base factor .
parses the units of the given units .
/ * parse the n n - digit space n - n .
/ * converts a { @link gregoriancalendar } into a { @link gregoriancalendar } .
the main method .
executes the ant task .
/ * ( non - javadoc )
get the root url
gets a string containing all the bins .
open a new <unk> .
/ * ( non - javadoc )
returns the { @link counter } associated with the given name .
creates a new instance of <code > <unk> / code > .
add a new config item .
the main method .
compares two rows .
compare two {
returns a description of a group .
pull event back from map
returns a map of attributes that are reserved by the given request .
serialize a map event
/ * ( non - javadoc )
read an xml description file .
converts a string value to an object .
/ * ( non - javadoc )
returns true if the given string is equal to the start of the string .
/ * ( non - javadoc )
gets the attribute value .
returns true if the specified attribute is a valid double attribute .
/ * ( non - javadoc )
<p > <unk> . < / p >
creates a new { @code <unk> } from the given { @code <unk> } .
adds an attribute to the map of attributes .
/ * ( non - javadoc )
{ @link <unk> ( string object ) }
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a clone of an attribute .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
compares the bounding box with the specified latitude and longitude
return the largest prefix for the given path .
loads a class from a class loader .
registers all subclasses of the given class .
registers a new kryo instance .
find a trajectory
creates a new { @link <unk> } using the given parameters .
get the <unk> <unk> for a given <unk>
calculates the <unk> for the given <unk> <unk>
returns the time stamp for a solution
converts the given <unk> into a string .
starts the traversal .
finish a <unk> .
returns a list of beanspec for a given fully qualified class name .
this method sorts the entire indices into this class .
sort a metric aggregation .
compare two tables .
/ * package
/ * ( non - javadoc )
/ * ( non - javadoc )
read frames from the file .
reads a single data stream and returns it as a <code > <unk> / code > .
find the variable with the given name .
find a variable with the given name and value .
{ @link <unk> ( string list ) } .
find the variable with the given name .
get the offset of the <unk> for the specified <unk>
translates a { @link structure } into a { @link structure } object .
returns true if the specified <unk> is instance of <unk> .
get the value of a <unk> .
convert a { @link <unk> } to a feature type .
gets the variable name for a given type .
<unk> ( <unk> ) <unk>
gets the name of a dimension .
returns the squared l<sup > 2< / sup > norm between two points .
/ * ( non - javadoc )
sets the contents of a coordinate array .
create a geometry from a list of ranges .
don t use <unk>
create a <unk> from a point of a polygon
create an array of <unk> .
returns the number of numbers in the stream
returns the index of the first occurrence of the specified window .
returns the index of the first occurrence of the given symbol in the given symbol .
demonstrates how to log in a file .
sets the singleton instance of { @link <unk> } .
{ @inheritdoc }
unwraps a list of blocks .
add a menu item to the menu .
add an action to the list item .
add an action to the menu .
gen - last : <unk>
get the match for the given path .
find the method with the given name .
get the metadata for the given type .
/ * ( non - javadoc )
parses the <unk> and <unk> .
read the data from the specified {
converts a { @link structure } to a { @link <unk> } .
read the header data .
read the data of a data of an array .
/ * ( non - javadoc )
classify the field of a <unk> .
calculate center point points
read the data =====================================================================
adds a new segment
the main method .
/ * ( non - javadoc )
computes failure of failure .
classifies the given methods .
/ * ( non - javadoc )
adds the supplied url to the cache .
/ * ------------------------------------------------------------
deactivates all callback handlers .
/ * ------------------------------------------------------------
show a column visible to the table .
hide a column from the table .
moves the child column to the new one .
returns an enumeration of table columns for the table .
returns the column at the given index .
create the table from the model .
/ * <unk>
/ * ------------------------------------------------------------
/ * public
/ * ( non - javadoc )
generate a <unk> for the given <unk> .
deserialize an object .
returns the value of a <unk> .
returns the number of bytes that will be skipped .
/ * ( non - javadoc )
returns a list of {
reads the data range from the given section .
/ * ( non - javadoc )
returns the { @link <unk> } for the given { @link uri } .
reads the <unk> from the db .
parses a line of text into an integer .
creates a new writable channel .
lazy initialization .
/ * ( non - javadoc )
/ * <unk>
removes the data associated with the given variable name .
returns the shape for a given string .
check the scores for a table .
reads the example .
this method is called when the instance is transient .
set the number of colors .
returns the color at the given index .
sets the minimum and maximum values .
prints out details of the specified entries .
/ * ( non - javadoc )
sets the world bounds of this {
<editor - fold defaultstate = collapsed desc = visualization >
<editor - fold defaultstate = collapsed desc = visualization >
fills the line with the specified bounds .
check whether the given url is compatible .
sends an upgrade request to the server .
returns a {
/ * ( non - javadoc )
--------------------- interface biopaxelement ---------------------
convert a <unk> into a <unk> .
/ * ( non - javadoc )
prepare the request context for logging .
setup logging context for logging context
generate a string representation of this source .
/ * ( non - javadoc )
get the index of the next range .
/ * ( non - javadoc )
convert a dom element to a <unk> .
<unk> ( <unk> ) <unk>
/ * ( non - javadoc )
/ * <unk>
return the config
read a <unk>
private static final string <unk> = new <unk> () ;
read module filter elements .
reads the value of an attribute .
create <unk> element .
create a <unk> element
helper method to create a <unk> element
create a new { @link <unk> } element .
create a <unk> element .
returns true if the given key is set .
creates the menu .
adds the given menu to the menu .
documentation inherited from interface
/ * ( non - javadoc )
get the url parameter for the given parameter .
the main method .
reads a base64 encoded data from an input stream .
reads the entire contents of the input stream into a byte array .
gets the inputstream for the constructor .
<unk> - <unk>
gets the meters conversion factor .
<unk> . <unk>
starts the {
/ * ( non - javadoc )
make a copy of the array .
a helper to replace a file in a <unk> .
sets the <unk> .
@see <unk> ( <unk> )
adds a propertychangelistener to the listener list .
method to validate plain text .
replaces the value in the given buffer with the given buffer .
checks if the value is empty .
restore the value of the given ----------------------------------------------------------------------------------------------------------------------
sets the new value to the given value .
fire the change event .
method to display the format of the load implementations .
~ methoden ----------------------------------------------------------
creates a byte copy of the given file .
/ * ( non - javadoc )
find the field with the given name .
returns the type of the specified type .
<p > create a new { @link jaxbelement } { @link point } object . < / p >
reads a log file from the log .
given a subset of parameters return the boolean value of the <unk> .
print the query string to the specified printwriter .
set the debug flags .
<p > <unk> . < / p >
renames the request attributes .
re - group the group .
parses a metric name .
helper method to construct the top variables for a cancel call .
add a variable to the parent group .
checks if the given type is a group type .
add attributes to the plot
gets the <unk> attribute .
gets the shared dimension of the given component .
constructs a list of <unk> from a group of <unk> .
/ * <unk>
create a scalar nd array from the specified data type
returns the data type represented by the given data type as a <unk> .
converts a data type to a datatype
check if the data optype is an unsigned feature .
/ * --- public methods ---
{ @inheritdoc }
load an array of default values .
/ * ( non - javadoc )
create an icon image for the full icon
pull an image from the classpath .
creates a new cursor of the specified name .
returns the resource as a stream .
the main method .
read data from the data type
read data from a compressed file .
read data from an input stream .
read a data column from a layout .
read data from the layout
read the frames of the given layout .
copy the contents of the given subject to the given channel .
get a primitive array for a primitive vector .
creates a primitive array representation of a primitive array .
<p > <unk> . < / p >
<p > <unk> . < / p >
convert a string to a byte array .
generate code for a section .
/ * ( non - javadoc )
adds a field to the specified field
equivalent to { @link <unk> ( int ) }
get scalar scalar value .
generic method to process a series of members .
/ * ( non - javadoc )
get the pixel data of this raster object .
adds a method to a <unk> .
decodes float value .
add dimensions to the <unk>
the main method .
create a new instance of <unk> dataset .
returns the normalized path of the path .
get the bounding box of the image .
/ * package
adds a <unk> to the cache .
adds a service scan .
add a spec spec to the file .
cancels the {
make a {
protected for testing
make a dataset .
create a dataset from a dataset .
loads the templates from the database .
adds a point to the polygon
removes the next node from the list .
set the previous value in the list .
setup a new line .
convert a 2d array of points into an array of doubles .
return the centroid of the points .
validate the given string .
/ * ( non - javadoc )
perform a filter based on a set of filters .
adds all the points in a given point
gets the <unk> factory based on the <unk> .
evaluate javascript source .
parse result set .
redirects to a markdown file .
processes the clauses of a { @link <unk> } .
mark the values of the criteria to be <unk> .
prints the query string to the specified print writer .
convert a <unk> to an xml file .
recursive method .
set the shared dimensions for a given operation
relabels the dimension of the dimension .
look for components nested in the given parent group .
downloads data from the given url into a byte array .
/ * ( non - javadoc )
/ * ( non - javadoc )
parse the file .
returns an ===============================================================
load the property files .
print the template property
sets the name of the section .
creates the tab content .
returns a valid name for a js name .
writes the search entries .
adds the variable attributes to the given <unk> .
initialize the shape for the <unk>
/ * ( non - javadoc )
command to ask the container to finalize the upgrade .
removes a component from the table .
documentation inherited from interface
returns the minimum dimensions for the given layout .
/ * ( non - javadoc )
<p > checks if the region of the specified coordinate system matches the specified coordinate system . < / p >
retrieves the fault system for a fault .
start the daemon
/ * [ deutsch ] <p > liefert die <unk> <unk> . < / p >
the main method .
/ * [ deutsch ] <p > berechnet die position der position dieser instanz . < / p >
/ * <unk>
/ * ( non - javadoc )
closes the dashboard .
this function convert extended information to geographic wsg84 data .
this function convert wsg84 gps coordinate to <unk> .
converts the wgs84 position to cartesian coordinates .
elliptical arc curve to the given coordinates .
unproject the coordinates of the coordinates of the coordinates of the coordinates <code > ( x y z ) < / code > .
given a line of line x return the corresponding arrow coordinate .
elliptical arc curve to the given coordinates .
compute the values of the coordinate values of a axis .
gets the 3d probability of the x y and y coordinates .
scan a geometry to sweep counter .
compute the 3d area of the given angle .
sets the { @link <unk> } to { @link <unk> } .
this method is the same as {
write a {
attempts to create a cache file from a file .
write a feature collection to a file
sets the name of the field .
get scalar value for given member name .
get scalar scalar object .
sets the name of the scalar field . <p >
get the scalar member field .
get a scalar value .
sets the name of the array field .
sets the name of the field .
format a string using tostring () .
returns the qualified name of this module .
returns the unique id for this component .
get the { @link <unk> } for the given { @link <unk> } .
find the <unk> for the given url .
removes the tag .
<p > returns the viewport s parent for this viewport . < / p >
/ * ( non - javadoc )
find the command with the given name .
returns the source of the parent access box .
this method returns a list of {
creates a copy of the length of this { @link <unk> } .
todo add unit test
return a distance from the given coordinates to the coordinates of the given point .
adds radial distortion
return the angle in degrees of the circle
/ * <unk>
find the <unk> dataset in a dataset .
convert a string to a string .
returns a new array with all of the elements in the specified time index .
compute the <unk> mask of the values
returns a new {
calculates the x - coordinate of the array .
creates a copy of the projection source .
/ * this method calculates the whole <unk>
computes the position of the <unk> from the given line .
todo add unit test
returns the scale of the given latitude / longitude
calculates the destination of the given distance from the given shape .
return the angle in degrees of the given point .
return a view of the angle in degrees
rotates the image with the given latitude and longitude
/ * <unk>
<unk> method .
filter the contents of a dataset
main entry point for stand - alone code .
/ * ( non - javadoc )
removes the tag from the file .
returns a string representation of the version details .
returns <code > <unk> / code > for the given <code > <unk> / code > .
/ * ( non - javadoc )
write a set of pharmacophore variables to the <unk> .
write global attributes .
returns the index of the column with the given name .
creates a list of summary variables for the given list of <unk> .
/ * ( non - javadoc )
creates a { @link variable } for the { @link <unk> } .
/ * ( non - javadoc )
/ * --- private methods ---
/ * ------------------------------------------------------------
/ * package
/ * <unk>
/ * ------------------------------------------------------------
parse a constraint .
<p > <unk> . < / p >
{ @inheritdoc }
{ @inheritdoc }
returns a copy of an object from an input stream .
downloads the contents of an input stream to a stream .
/ * ( non - javadoc )
reads up to <code > len< / code > bytes of the specified <code > byte< / code > reading from the <code > blob< / code > value starting at <code > offset< / code > into this <code > blob< / code > value starting at the specified <code > offset< / code > .
receive a message from an input stream .
https : // github . com / <unk> / <unk> / blob / master / src / main / java / com / <unk> / src / main / java / com / <unk> / src / main / java / com / <unk> / src / main / java / com / <unk> / <unk> . https : // www . <unk> .
/ * [ deutsch ] <p > liefert das lokalisierte <unk> datum . < / p >
@deprecated use { @link <unk> ( string ) } instead .
/ * [ deutsch ] <p > erzeugt ein neues <unk> - objekt f&uuml ; r . < / p >
/ * [ deutsch ] <p > siehe { @link <unk> ( string ) } < / p >
calculates the <unk> of a point c
/ * ( non - javadoc )
reads a list of records from the classpath .
transfer a { @link object } to a { @link target } object .
transfer group to source
copies all attributes from the source element to the target variable .
copies all the attributes from the source group to the target group .
{ @link <unk> }
try to guess the manifest file .
/ * ( non - javadoc )
/ * ( non - javadoc )
make a subset of the given subset of the given <unk> .
returns the index of the first occurrence of the specified character in the specified byte array .
returns true if the character is a letter .
replace all characters in a string with another character .
parses a string from a string .
parses a string and converts it to a double .
parses the given string as a long .
converts the specified double to the specified number .
gets the primary number of nodes in the beginning of the beginning of the beginning of the expression .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
create a new { @link <unk> } .
this method executes multiple <unk> .
create all pages from a formatter .
/ * ( non - javadoc )
method to get the value for this fieldvalue .
set the value .
get the data type for the given data format
augments a dataset with a <unk> .
gets the angle between two points .
/ * [ deutsch ] <p > liefert eine <unk> <unk> - <unk> . < / p >
returns the julian day of the input { @code calendar } .
/ * datetime
<p > <unk> . < / p >
{ @code <unk> > }
returns an array with the sine and the specified x y and z . <p > if the edge is not in the <code > <unk> / code > described by the <code > <unk> / code > and <code > <unk> / code > this method produces an empty vector . <p > if the edge is not in the range <code >
adapted from graphics :
/ * [ deutsch ] <p > formatiert die angegebene dauer . < / p >
remove system properties from system properties .
this method is used to determine whether or not the supplied inherits or domain name matches the supplied names . this is equivalent to { @link <unk> ( string string string ) } .
converts a string to a long value .
scans the url for a given url .
creates a list of storage accounts from an xml document .
returns the shape of the path .
get the { @link <unk> } for the given path .
get the {
******************** initialization ************************************
creates a factory notes for a given <unk> .
gets the variable id for a given note .
/ * package
add the rule bindings to the given parent node .
/ * package
/ * initialize the data variables
<unk> das <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
find and return webcam driver for the given name .
create a directory context .
/ * ( non - javadoc )
adds a url to the command line .
get the coefficients of the given shape .
gets the { @link <unk> } of this { @link <unk> } .
get the node at the given index .
returns the index of the column with the given name .
$non - nls - 1$
returns the shape as a list of section objects .
returns a { @link collection } of this { @link <unk> } .
convert a subsection of this subsection to a subsection of the specified section .
returns the {
documentation inherited from interface
set the enum .
reads a section from the stream .
reads the array of ranges from the specified ranges .
<editor - fold defaultstate = collapsed desc = sections related >
read a scalar value .
/ * ( non - javadoc )
reads all members of a { @link <unk> } .
reads a { @link <unk> } from the { @link <unk> } .
reads the data from the { @link <unk> } .
writes the given section to the channel .
returns a string representation of this version and dimensions .
get the name and dimensions of the name and dimensions .
append the pdb representation of this dbref to a stringbuffer .
<p > <unk> . < / p >
get the name and dimensions of a name and dimensions .
<p > <unk> . < / p >
debugging support .
<strong > [ icu ] < / strong > sets the data type for the given data type .
sets the dimensions of the metric to be used .
reset the shape of this shape
set the dimensions of the { @link <unk> } .
trims the dimensions to reduce the size of the model .
set the dimensions of the dimensions of the specified shape
set the dimensions of the dimension .
returns true if the cache is caching .
sets the cached data .
returns the list of all the dimensions in this group .
returns true if the value of the {
set the bounding box arguments .
this method is used to find out all the assignment data in a portion of a portion of a variable .
sets the timestamp of the embed .
returns a list of <unk> .
checks if a path is a multimedia file .
/ * ( non - javadoc )
validate a <unk>
validate a <unk>
enter a symbol from a <unk>
validate a <unk>
delete all of the existing tables .
get all of the {
url parameter parse
dssat observation sequence ( s )
update metadata .
get a description of a specific node
try to retrieve the matching enum from the <unk>
tests if a breakpoint is authenticated .
/ * ( non - javadoc )
validate the given name .
/ * ( non - javadoc )
print a warning message .
create an instance of { @link <unk> } .
sets the length of the file to be included in the file .
<pre > https : // <unk> . <unk> . <unk> . edu / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> . <unk>
process sequence data from the mpp file .
returns the list of variables for the user .
write a {
this method rewrites the data to be stored in the given file .
/ * ( non - javadoc )
/ * ( non - javadoc )
get an iterator over the feature columns .
get the affine transform from a rectangular slot .
set the current resolution .
set the transform .
returns a {
convert 2d coordinates to screen coordinates
calculates the projection of the projection .
returns a <code > java . awt . <unk> / code > <code > <unk> / code > <code > <unk> / code > and <code > <unk> / code > .
change the pan area
zooms to the screen using the specified width and height .
read a bounding box from a bounding box
add a new connection listener .
add a listener to the list of listeners .
/ * ( non - javadoc )
/ * ( non - javadoc )
runs a script and returns the result .
helper method to print a script .
prints a xdata file to the specified output stream .
prints a line to the given writer .
print a single token .
/ * <unk>
/ * public static string <unk> ( string data string data ) { <unk> = <unk> . <unk> ( <unk> ) ; }
prints the structure of a structure to an {
prints instances of an array .
print a stack trace to a printwriter .
write the { @link <unk> } to the given { @link file } .
<unk> - <unk>
calculates the distance on the ground that is represented by a single pixel on the map .
build the double value .
creates an array of attribute values from the attribute data .
adds a parameter to the table .
return the <unk> radius of the poi .
entry point for the example .
obtains the list of operations available on this service .
check if view is a valid url .
resultset object .
formats a list of dataslices .
ensures that the <unk>
/ * ( non - javadoc )
******************** initialization ************************************
gen - last : <unk>
save the context menu .
gen - last : <unk>
tries to show the coverage data count .
******************** methods *******************************************
returns the {
returns true if the given record is positive up to false .
initializes a { @link <unk> } with the given { @link <unk> } .
this method initializes <unk>
shows the map select month .
converts an array of events to an array of double .
converts float [] to float array .
returns true if the specified unit is compatible with this instance .
<p > <unk> . < / p >
inits the monitoring point type .
get a list of all polygons with the given name .
returns a { @link list } of lines delimited by the specified delimiter .
get a list of the points in a certain region .
sets the current position of the file .
read a <unk> in the dwg format .
returns true if the bit is padded .
http : // tools . ietf . org / html / <unk> - 4 . 1
<unk> das <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
execute a command .
/ * --- private methods ---
{ @link <unk> ( string string ) }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
transforms the given tolerance from the <unk> .
/ * ( non - javadoc )
<p > clip a point using the <unk> < / p >
~ methods **************************************************************************************************************************************
compute the geo - location of a given point .
compute chessboard coordinates for a graph
returns the date as a reference to the date .
checks if the current octet is eof .
returns true if the resource type is <unk> .
transforms a grass <unk> string into a <unk>
get total time range .
creates a new instance of { @link <unk> } .
deletes a file .
parse a <unk> header .
handle file information .
handle processing of processing time
/ * ( non - javadoc )
handle the sensor information .
returns a string containing the header information of the current header .
parses the given xml resource and returns the root element .
iterates over the text and returns a string representation of it .
checks if the file is valid .
open a new task .
add the global attributes to the <unk> .
parses the bel file { @link <unk> } .
read all data from the file .
reads the data from the specified section .
convert a utf - 8 string to a string .
ensure that the string is a stray - escaped string .
unescapes the given <code > url< / code > in the given <code > url< / code > .
quote a string .
quote a string .
write a variable definition to the <unk> .
add a <unk> attribute to the <unk> .
/ * ------------------------------------------------------------
prints the options to the output stream .
prints out the values of the specified space in the given space .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link <unk> }
returns the seed value for the given dimension .
adds the specified table to the specified printwriter .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
<p > converts an array of bytes to a long . < / p >
writes a float value to the least significant byte .
atomically sets the double value to the given value .
convert a string to a byte array .
converts an integer to a byte array .
convert a long to a byte array .
reads the array of values from the provided { @link variable } .
/ * ( non - javadoc )
opens a url for the given url .
f743 - <unk>
/ * ( non - javadoc )
returns null if not found
<p > <unk> . < / p >
<unk> > <unk>
loads a <unk> from an xml file .
resets the state of this tag .
parses the next token .
parse a rename file .
/ * ( non - javadoc )
/ * ( non - javadoc )
calculates the <unk> of a given signal .
performs the <unk> computation .
/ * ( non - javadoc )
write features to the output
adds a list of levels to the current level .
/ * this method is used to determine if a list of service records can be matched .
add dimensions to the <unk> .
add a { @link group } to a { @link <unk> } .
find the coordinate of a coordinate .
returns the index of the given {
/ * ( non - javadoc )
returns the {
add a directory to the archive .
returns true if the file already exists .
create a file for the given directory .
tries to open a file to the output directory .
returns the file name of the file or <code > null< / code > if it doesn t exist .
creates a temporary file with the given prefix and suffix .
/ * @value <unk> @value <unk>
open a new file in the given directory .
<unk> - <unk>
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
this method is used to build a bearing from the given position .
this method is used to build a bearing from the given point .
returns bearing from ( lat1 lon1 ) to ( lat2 lon2 ) in degrees
calculates the bearing from spherical to a blank line .
runs the evaluation .
find the point at the specified location .
get a point in the side of an encrypted location .
compute the point cross - track distance between two points .
find the distance between two points .
load a url from the list of picture .
load the image from the given image url .
performs ocr operation .
/ * ( non - javadoc )
stops the loading rserve .
gets the size of the image .
start listening to events .
remove a listener .
/ * ( non - javadoc )
sets the buffered image to the source image .
return the uri of the uaa .
convolve with <unk> .
convert a list of { @link datapoints } to a list of { @link copier } s .
count the total number of bytes in this tp .
/ * ( non - javadoc )
gets the hash code for the given objects .
/ * ------------------------------------------------------------
loads the data from the input stream .
returns the type of the specified field .
get the double value of the specified type .
get the ids of the dependencies
get boolean value by name .
get the name of the field .
returns a string array containing all the values of this field .
main method .
returns the attributes of this tag .
set deep s attributes .
/ * ( non - javadoc )
$antlr start <unk>
returns a { @link org . <unk> . <unk> . datasource . <unk> () parent } .
check information about a particular type .
get the name of the escaped characters .
returns a list of nodes from the given path .
returns a list of all nodes in the tree .
returns a list of all of the ancestors of this resource .
converts a list of <unk> to a path .
returns a boolean indicating whether a particular top - level feature is a top level .
method used to check that this feature is a <unk> .
adds a local variable to the model .
/ * ( non - javadoc )
called by <unk>
/ * ( non - javadoc )
/ * <unk>
returns the bean associated with the given key .
add a new value to the map .
replaces the bean with the given key and new value .
replaces the current value with the given key .
get the key for the given key
/ * ( non - javadoc )
this method is called internally by clients
/ * ( non - javadoc )
calculates the { @link <unk> } spi based on the given node path .
add a node to the tree .
gets the value of the property with the given name .
adds the specified key / value pair to the map .
execute the node spi .
get the localized object for the given key .
reads the n - n gradients from the step n by reading the data from the mpp file .
reads the raw data from the file and converts it into a { @link <unk> } object .
reads a data warehouse entry from an open file .
reads the data from a file into a java { @link bufferedimage } .
gets the neighbors of the point .
prints a list of checksums for a given start .
prints the results of a compound instance .
/ * ( non - javadoc )
write the given statement to a string .
write a byte array to a file .
writes the given string to the given file .
write the xml to a writer .
create an element from a file .
returns an element that contains the enum constants .
reads the given dimension and dimension .
create a new element out of a variable .
creates a new instance of this class by setting the values in the given map .
make a coordinate .
retrieve an attribute value .
converts the given <unk> into a <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> <unk> <unk>
make a unit release .
create a new unit field .
returns a clone of the default unit factory .
returns a unit of <unk> .
creates a new instance of { @link <unk> } .
update hole data
{ @inheritdoc }
make a dataset .
create an instance of path element .
returns the 3d point of the given coordinate .
returns the index of the nearest point in target .
find the index of the point in the target interval .
calcs coefficients of ellipses
returns the index of the first occurrence of the specified element in the list .
get the isotope with the given target symbol .
@see <unk> ( int int )
returns a new { @link <unk> } that is { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
gen - last : <unk>
/ * ( non - javadoc )
/ * <unk>
prints the counters to stdout .
/ * ------------------------------------------------------------
check the existence of counters
this method is used to update the list of issues that match the given separator .
show the encoding of the specified weights .
<unk> : <unk>
open a dataset .
create a new { @link <unk> } .
open a dataset in to the benchmark .
open a dataset .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the { @link <unk> } of the given { @link <unk> } .
checks if the given type is compatible with the given service type .
authenticates a list of {
/ * ( non - javadoc )
/ * ( non - javadoc )
reads the data from the specified { @link <unk> } .
reads data from the file opened by the raf .
returns true if the file is valid .
reads the data from the file and returns the compressed data .
replies the string that corresponds to the given url .
/ * ( non - javadoc )
cleans up a string .
<unk> > <unk>
<unk> - <unk>
normalize duration .
make a coordinate axis from a <unk>
split a <unk> as a <unk> .
returns true if the given path is a subclass of <unk> .
returns a new <unk> object that can be used to close the connection .
converts an html description into a metric .
get the {
reads a description
execute the build task .
removes the mapping for the specified key from this map if it is present .
returns the value to which the specified key is mapped or { @code null } if this map contains no mapping for the key .
removes the mapping for the specified key from this map if present .
returns a new calendar object with the given time .
{ @inheritdoc }
dumps information about a particular logger .
this method is used to convert an <unk> description to human readable format
/ * [ deutsch ] <p > formatiert die kanonische form dieses intervalls im angegebenen <unk> . < / p >
check if the given attribute is excluded .
resolve a set of classes .
returns a string representation of the given stack trace .
initialize the input file points .
checks if the lexicon file is a valid file .
returns an array of records with the same rank as the specified section .
sets the constraint directory attributes .
set the type of block block attributes .
converts an ad definition to an ad type .
/ * ( non - javadoc )
/ * <unk>
/ * find the coordinate of the coordinate with the given predicate
returns the name of the coordinate of the given { @link axis } .
/ * private static void <unk> ( <unk> pointer ) { return <unk> . <unk> () ; }
builds a coordinate from a { @link <unk> } .
returns the dimension of the given { @link axis } for a given type .
determines the best coordinate system for the given { @link <unk> } .
find the weak reference data for the given criteria .
/ * ( non - javadoc )
compiles the row counts in the given equation .
returns a boolean representation of this property .
emits a set of all of the properties in the given space .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
add a variable to the template .
get the cookies with the given name .
gets the index of the specified column .
get the value of a named variable .
tell if the given resource name is a parent .
prints the <unk> .
<p > process . < / p >
fetch the data from the trace data .
run the algorithm
read the marker from the stream .
serializes the {
/ * ( non - javadoc )
returns the strict durations of this multi notes .
load a single xml document .
/ * ( non - javadoc )
/ * ( non - javadoc )
parses the given file .
creates a { @link timeseries } .
the main method .
get the missing data type .
creates a new array with the given array of integers .
this method creates the wcheckboxselect from a string .
defines if the chart should be drawn .
******************** methods *******************************************
renders the values of the <unk> .
set the <unk> .
returns the description of the given type .
returns the distance between two points .
returns the distance between two points .
/ * ( non - javadoc )
write this object to a stream .
method <unk> .
adds the supplied rectangle to the bounds of the given rectangle .
adds the supplied rectangle to the bounds of the supplied rectangle .
calculates the union of two rectangles .
replies if the specified point is inside the specified point .
reconstitute the {
save the state of the {
returns true if the two tiles are equal to this one .
adds the given { @link <unk> } to this { @link <unk> } .
add a unit to the unit .
adds an alias to the session .
add a symbol to the session .
adds an alias to the session .
adds an alias to the unit .
gets the assertions for the given id .
add a new unit to the unit .
----- private methods -----
----- private methods -----
finds all of the resources belonging to the given root directory .
initializes the menu .
returns true if the given name is a case - insensitive case .
produces a nice human - readable type name .
find a copy of a node in a tokenized file .
reads the next functional record from the file .
read an element from the raster .
perform the substitutions .
perform the substitutions .
/ * ( non - javadoc )
returns true if the address is in the compressed data .
creates a {
this method calculates the whole whole declination .
returns a projection that can be used to convert from lat / lon coordinates to a great circle
return the angle in degrees of a point in degrees .
/ * ( non - javadoc )
read a <unk> attribute .
<editor - fold defaultstate = collapsed desc = visualization >
/ * ( non - javadoc )
opens a dataset in the specified { @link <unk> } .
/ * ( non - javadoc )
opens a named { @link dataset } in the specified { @link <unk> } .
/ * ( non - javadoc )
creates a dataset from a dataset .
gets the instance of { @link <unk> } .
returns a string representation of the column type .
returns the { @link <unk> } for the given { @link <unk> } .
returns a list of all siblings of the given node .
adds a partition to the group .
returns an immutable list of all the files in this directory .
<p > calculates the <unk> for a given file . < / p >
get instance of <unk> from a <unk> file .
get a <unk> - <unk> <unk> from a reader .
copies the given uri string to the given file .
read an xml document read from the given stream .
/ * package
gets the root value .
/ * ( non - javadoc )
creates a bugcollection object .
/ * this method is used to convert a record to a uri .
set the projection for the shape .
get a cloned iterator that can be used to reset the query .
read a structure object .
/ * ( non - javadoc )
sets the buffered image to the specified values .
prepare the coordinates of the <unk> .
zoom to priority .
updates the image center of the view .
scroll content .
scroll the container .
scrolls the <unk> .
scroll the row .
/ * ( non - javadoc )
paints a component .
change the status of a picture .
compare two integers .
/ <returns > <unk> ( int ) | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk>
/ * <unk>
calculate the pbkdf2 hash of the <unk>
<p > <unk> . < / p >
/ * [ deutsch ] <p > <unk> die <unk> <unk> . < / p >
convert integer to byte array .
/ * ( non - javadoc )
<unk> ( <unk> )
sort an array of values into ascending order .
get the log level for the given level .
gets the fixed data type size .
reads the data from an input stream .
copy the contents of the given inputstream to the given outputstream .
prints the contents of the hashtable .
/ * ( non - javadoc )
get the tag value .
the main method .
/ * package
get the next buffered image .
returns the size of a particular type .
visible for testing
convert an ndarray to a vector
adds an error to the image .
set the overlap between two ranges .
clear the grid .
mark the specified rectangle to be reached .
find the intersection of the specified rectangle .
find the intersection of a point .
finds the closest point from the given point .
finds the intersection between the point and the given point .
returns the distance between the specified point and index .
set the {
returns the name of the given url . <p >
gets a block of bytes from the given url .
returns the array of the vertices in the specified time buffer .
compute the <unk> scores .
/ * [ deutsch ] <p > liefert die <unk> <unk> . < / p >
main method .
open a lock manager for a collection of <unk> .
add a new app setting .
returns a list of all urls of the specified url .
[ start <unk> ]
/ * ( non - javadoc )
creates a map of parameters for the given query string .
search for the uri of the given url .
/ * private static void <unk> ( string path string path string path string <unk> ) { <unk> > <unk> = <unk> . <unk> ( <unk> ) ; }
/ * ( non - javadoc )
try to start a new filelock
<p > <unk> . < / p >
http : // tools . ietf . org / html / <unk> - 4 . 1 . 2
/ * ( non - javadoc )
writes a 64 - bit 64 - bit integer to the output stream .
returns the fully qualified name of the fully qualified name of the given fully qualified name .
returns the fully qualified name of the given fully qualified name .
converts a pdf file to a string
{ @link <unk> ( string string ) } { @link <unk> ( string string ) } { @link <unk> ( string string ) } { @link <unk> ( string string ) } { @link <unk> ( string string ) } { @link <unk> ( string string ) } { @link <unk> ( string string ) } { @link <unk> ( string string ) }
normalizes a given path . <p >
creates a new byte array from a byte buffer .
gets a list of all of the <unk> of a graph .
encodes the given path and returns the result .
takes a list of json dimensions and returns a boolean representation of it .
joins the given array of strings using the specified separator .
returns true if the given path is a relative path .
process a set of protocols .
returns a { @link list } of { @link slices } of the given { @link <unk> } s .
returns a { @link list } of { @link <unk> } s from the given { @link org . apache . hadoop . hbase . <unk> } .
returns the index of the idx th entry in the array .
returns a list of all slices of the given indices .
returns true if all slices are contiguous .
checks to see if a set of slices is in a single epsilon transition
visible for testing
reads the bytes from an input stream .
adds a { @link <unk> } to this { @link <unk> } .
creates a new <unk> message .
create a new dom node .
<unk> : <unk>
splits the given list of numbers into a list of java objects .
produce a <unk> object from an iterator of values .
set the local station info .
set the names of the <unk> .
{ @link <unk> }
rewrite the given xmlfile
loads a dataset from a reader .
loads a { @link <unk> } from a { @link file } .
/ * <unk>
creates a list of <unk> from an xml document .
read a test configuration from catalog .
add the given <unk> to an object .
updates the { @link <unk> } of this { @link <unk> } .
returns the fully qualified name of the given fully qualified name .
returns true if the variable is a place holder variable .
compare two groups
check all attributes of the given lists .
/ * process the list of all registered { @link <unk> } s .
check that the two lists are all contained in the list .
<unk> <unk> <unk>
<unk> > <unk>
<p > <unk> . < / p >
gets the type of the operation type .
returns the { @link <unk> } for the given parameters
return true if the two bitmaps are the same .
clamp the minimum number of groups intervals .
returns a list of all the ranges of the columns in this range .
calculates the projection of the projected projection
get the bounding box of the poi s bounding box .
calculate a list of lat / lon points in the bounding box .
calculates the projection of projection points .
create a new lat / lon distance from the given lat / lon coordinates .
returns a string representation of the coordinates of the given 2d array of coordinates .
/ * ( non - javadoc )
set the global connection timeout .
/ * ( non - javadoc )
add authentication to the builder
sets the { @link <unk> } for this request .
removes the session id from the request .
set the maximum number of redirects that should be used by this client .
/ * ( non - javadoc )
add a new { @link <unk> } .
closes the pool .
add authentication to the set of credentials .
add authentication to the set of credentials .
/ * <unk>
returns an unmodifiable view of the properties of this object .
/ * package
<unk> method .
/ * ------------------------------------------------------------
resolve a zip file .
creates a new { @link <unk> } with global credentials .
/ * ( non - javadoc )
factory method to create a new { @link <unk> } object .
validates the given url string .
creates a new { @link <unk> } with the given shape .
compute the strides for this shape
creates a new index with the specified index .
computes and returns a new index section of the old index .
returns the edit data edit data .
creates a { @link <unk> } for the given { @link planar } { @link <unk> } .
returns a { @link planar } object that corresponds to the specified indices .
least squares solution of a * x = b
gets an iterator for the supplied iterators .
returns the current values of the current element in the given channel .
/ * ( non - javadoc )
sets the value of the specified index to this index .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
from interface <unk>
returns the value of the time interval represented by the current time .
/ * ( non - javadoc )
initialize the signature .
document insert and times . <p >
returns a list of datetime keys from the given locale .
populate data .
returns a list of supported parameters for the given part .
get the wait time list .
creates a <unk> .
adds a list of keys to the <unk> list .
validate the <unk>
get a list of all dates for the given date ranges .
print the failure stack .
prints the list of elements in the given list .
returns the index of the bond index for the given id .
/ * ( non - javadoc )
/ * ( non - javadoc )
set the <unk> flag .
/ * ( non - javadoc )
sets the projection for the search criteria .
parse a ce .
run a clause .
collects the components of a { @link <unk> } .
performs a depth - first search .
processes the image border .
parse a clause .
unquote a clause
translates { @code clause } to a { @code clause } .
set the storage variable .
documentation inherited from interface
create a new index in elasticsearch
<p > opens a new lock for the specified file . < / p >
creates a directory scan .
upgrade to the elasticsearch index
get the first value in the map .
sets the debug flags for the given debug flags .
adds a variable to the given variable .
/ * ( non - javadoc )
adds a record to the list of records .
/ * ( non - javadoc )
<p > <unk> . < / p >
creates a dom document from a kafdocument object .
the main method .
marshals the source data to the given output stream .
validates the given xml doc .
returns a string representation of this string .
get the { @link variable } s for the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
reads a <code > <unk> / code > from the <code > <unk> / code > .
returns true if object is needed .
/ * <unk>
converts a <unk> instance to a <unk> .
converts the members of a { @link <unk> } to the given { @link <unk> } .
returns the { @link <unk> } object for the given name .
returns true if the expression has a final variable .
applies the <unk> to the <unk> .
/ * ( non - javadoc )
this method is used to create a grid dataset from a request .
process the coverage data flow .
this method is used to determine if the request is ok or not .
register a { @link <unk> } .
prints the constraint .
/ * ( non - javadoc )
reads the data from the specified section .
returns a list of all the data in a section .
make an empty sequence .
construct a sequence of parameters from a sequence of bytes .
{ @link <unk> ( string ) }
builds a list of <unk> .
create a sequence from the given parent structure .
/ * ( non - javadoc )
<p > <unk> . < / p >
helper method for retrieving host catalog
read an xml description .
read an xml document read from the given results .
read an upload index file
read a dom element from a stream .
/ * ( non - javadoc )
serializes this object into a xml file .
copy the bugcollection to a file .
save the bugcollection to a string .
removes the property with the given key from this map .
/ * get the configuration of the specified configuration .
get the name of the unit id .
returns a copy of this duration with the specified unit .
/ * ( non - javadoc )
converts the given float array to an array of bytes .
/ * ( non - javadoc )
main method .
writes a { @link geometry } to the given { @link geometry } .
create an instance of {
this method is used to write the path to a string .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of a named attribute .
factory method to make a <unk> object from the given <unk>
returns a list of all child nodes of the given parent node .
/ * <unk>
recursive method to print a set of nodes .
returns true if the variable is a valid word .
create a new <unk> object
add a new member . <p >
create a new <unk> object from a structure object
reads a polygon given a name and index .
/ * ( non - javadoc )
gets the point with the specified name .
get the type of a geometry type .
make a { @link <unk> } feature .
/ * public static void <unk> ( <unk> > ast ) throws ioexception { <unk> <unk> = new <unk> ( <unk> ) ;
parse an expression .
converts a description to an object
creates an array factory with the data optype and populates the data type with the data type
returns a string representation of the compressed data .
creates a new { @link <unk> } instance .
produce a <unk> object from the xml elements of the jsonobject .
checks if the tile is equal to the other .
check if this longitude contains the given lat / lon distance .
returns true if the specified rectangle is within the bounds of the given rectangle .
extend the longitude .
extend the bounding box loss
determine the bounding box of this latitude and longitude
/ * ( non - javadoc )
assign two arrays .
compares two { @link java . util . vector } s .
scalar product .
return true if the shape is a valid delimiter
convert an object to an array type .
copy the given data iterator to the target index .
copies the { @link java . lang . object } of an array of { @link class } s into an array of { @link java . lang . object } .
copies the elements of the given { @code array } into a new { @code array } .
copies all of the elements in the specified collection into this one .
copies the elements of the given { @code array } into a new { @code array } .
copies the elements of the specified { @code array } into the specified { @code array } .
copies the elements of the given { @code array } into the specified { @code array } .
copies all of the elements in the specified array into this one .
copies all of the elements in the specified collection into this one .
copies the contents of the given { @code array } into this { @code array } .
copies the elements of the given { @code array } into this { @code array } .
get the min and max of a dataset .
sets the value of the given { @code double } to the given value .
returns the sum of all the edges in this cycle .
returns sum of missing values .
returns an optimal scaling for the optimal chunk offset .
compare two {
returns the selected date range .
$example off : <unk>
gets the attribute value .
returns the <code > <unk> / code > attribute of the <code > <unk> / code > attribute of this <code > <unk> / code > .
attempts to guess the length of the alias .
/ * ------------------------------------------------------------
resolve an alias .
<p > returns the attribute of an attribute . < / p >
adds a new {
create a <unk> factory .
gets the transition at the specified index .
/ * <unk>
sets the projection of the projection
returns a projection { @link projection } from the given { @link latitude }
return a view which projects the results of a point .
returns an iterator that iterates over the geometry features contained in the geometry .
unescapes the given instance of { @link <unk> } .
url - decode a string .
<unk> url <unk>
unquote string .
unescapes the given escaped string .
splits a string into a list of strings .
counts the number of occurrences of a character in the given string .
foobarbaz → <unk>
/ * perform an escape operation based on a string .
foobarbaz → <unk>
/ * flatten an <unk>
train the given <unk>
get the offset of a given font .
determines the size of the preference s preference vector .
visible for testing
returns a { @link list } of { @link <unk> } instances .
get a <unk>
saves the object to the given file .
/ * ( non - javadoc )
returns the { @link <unk> } represented by the given { @link container } .
returns a { @link <unk> } represented by the given { @link <unk> } .
returns a { @link <unk> } with the given name and value .
returns a { @link <unk> } represented by the given { @link <unk> } .
gets the component s component with the given component .
returns the name of the class that implements the given class .
/ * ( non - javadoc )
returns the string representation of the property .
returns a { @link map } of { @link java . util . map } s { @link java . util . map } s { @link java . util . map } s { @link java . util . map } s { @link java . util . map } s { @link java . util . map } s and { @link
returns the class of the given component .
compile an array of variable names .
this method returns a new <unk> object .
compile a structure based on a <unk> object .
this method returns a list of all weighted distance on a given object .
compile a sequence of precision
extracts the full checksum from a byte buffer .
join an array of bytes from the input stream .
/ * ( non - javadoc )
calculates the address mappings for the given byte array .
sets the label of the object to be used .
executes the {
this method is called from within the listener to add a listener to the list of listeners .
removes the listener from this listener .
commander which clicks on a popup .
returns the field descriptor for the given class .
returns the value of the field with the given name .
sets the value of the field with the given name .
adds a field to the table .
adds a field to the specified field .
add a date field to this field .
returns the value of the field with the specified name .
returns the value of the field with the specified name .
adds a password field to the database .
creates a new field for the given field .
retrieve the field with the specified name .
same as { @link <unk> ( java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang
add a row to the layout .
adds a constraint to the constraints list .
adds a new row to the layout .
/ * <unk>
returns the frames of the current frame .
read a <unk> .
/ * ( non - javadoc )
this method returns a { @code factors } that correspond to the { @code factors } .
note : copied from google guava under apache license v2 .
creates a { @link factor } from a power of { @code factors } .
returns true if the given {
returns true if the prefix is equal to the given prefix .
adapts a { @link <unk> } to a { @link <unk> } .
fire the event to all listeners .
fire the event to all listeners .
fire the event to all listeners .
opens the journal entry
persist the read index .
get the name of the cache name .
/ * package
create a <unk> factory for the given class path .
convert a dom element to a jdom element .
returns the list of parameter table for the given center assignment .
helper method to add a list of parameters to a parameter .
renvoie la valeur de la propriété <unk> .
comparable implementation of { @link <unk> ( long timeunit ) } .
returns a copy of this duration with the specified unit .
raise a { @link javax . validation . <unk> } .
converts a float array into a unit vector .
converts a float array into an array of bytes .
/ * ( non - javadoc )
removes the tag from the specified file .
create a {
reads a data point into an array .
******************* beginning of function ******************** //
creates a variable value from the box .
add the calibration parameters to the <unk>
/ * ( non - javadoc )
read a descriptor from a file .
copy the file name to a file .
returns true if the given file is a real file .
return a short based on the given byte array .
convert a byte array to an int .
deserialize a float from a byte array .
deserialize a double from a byte array .
returns the default descriptor for the given descriptor .
creates a new instance of <code > <unk> / code > .
return a value of a runtimeexception .
add a new unit to the parent unit .
registers a command with the given alias .
----- private methods -----
main method .
checks if the given location is absolute .
get absolute uri relative to the base uri .
converts from unit to converter
get the coordinate of the point .
adds a change listener to the listener list .
removes a change listener from the listener list .
write a structure object to a list .
set the feature data .
/ * ( non - javadoc )
is the same as { @link <unk> ( org . geometry . geometry . <unk> ) }
marshall the given {
figure out what we are doing .
figure out what we are doing .
get the double data for the given ndarray .
make lazy <unk> .
/ * ( non - javadoc )
loads a file from a file .
reads all bytes from the input stream .
read a buffer from the input stream .
{ @inheritdoc }
{ @inheritdoc }
/ * ------------------------------------------------------------
reads up to <code > len< / code > bytes of data from this input stream into the specified byte array starting at the specified absolute { @code offset } . if <code > len< / code > is zero then <code > - 1< / code > is returned .
/ * ( non - javadoc )
parses the given <unk> .
the main method .
returns the first frame in the queue for the given time index .
returns the <unk> of the two specified points .
/ * this method is used to determine the level of a list of <unk> .
add dimensions to the <unk> file .
add a precision to the <unk> file .
figure out the index of the history of a record .
/ * ( non - javadoc )
open the file
/ * ( non - javadoc )
/ * ------------------------------------------------------------
decompress one byte array .
set the data on a given dataset .
creates the variable .
get a cloned iterator that can be used to reset the query .
update the map area of map area .
run the optimization .
sets the location of the stream area .
set the map area .
set the projection of the projection
add a menu item to the menu .
performs the redraw .
marks the invocation of the first invocation of the first invocation of invocation .
sets the content of the box at the given position .
documentation inherited from interface
<editor - fold defaultstate = collapsed desc = image related >
sets the transformation .
set up the screen size .
documentation inherited from interface
perform the substitutions .
<p > <unk> . < / p >
get the double representation of an object
{ @inheritdoc }
get the value of the object property .
convert a string to a byte type .
returns the current symbol for the given atomic number .
/ * package
/ * package
base64 encode a byte array .
returns the first parameter with the specified name .
/ * ( non - javadoc )
returns the number of missing elements in this rank .
parses the <unk> .
swap byte order .
gets the number of steps per file .
returns the name of a file in the database .
/ * ( non - javadoc )
returns the short name of the given url .
checks if the given file is an absolute path .
add a new <unk> to the list of <unk> .
read the data from the bit of an object .
writes data to a data output stream .
convert a { @link datetime } to a { @link java . time . <unk> } object .
returns true ***********************************************************************************
produce a <unk> object from the given index .
returns true if the file is a valid file .
reads a long value from the file .
append the data to the <code > <unk> / code > .
this method is used to read frames from the file .
create a graph for a stylesheet .
convolve with <unk> .
reads the bytes from the file .
create a new set of medoids .
validate a <unk>
run the algorithm
renders a single - part table name .
/ * ( non - javadoc )
<p > check radial distortion . < / p >
parse the wrapped data structure .
parses the given data and returns a list of data objects .
parse a list of parameters .
adds the specified attribute pairs to the map .
read an converter from an <unk> character
/ * ( non - javadoc )
method to get the label contributions for the given data .
/ * compute multiline reordering array for a given level array .
initialize the reordering array for the given matrix .
get the matrix levels .
initialize the reordering array for the given matrix .
create a new { @link <unk> } with the specified parameters .
add a parameter to the <unk>
calculates the level of the product .
adds radial distortion
checksum of an array of bytes .
decodes a little - endian string into a byte array .
read the <unk> from the socket .
sorts a byte array in constant state .
symmetric householder reduction to tridiagonal form .
reads a base64 - encoded string
adapted from <unk> .
convert a byte array to an object .
returns the <unk> value of the given byte array .
converts a byte array to a hexadecimal string .
visible for testing
visualizes other code
used to traverse a type descriptor .
/ * package
/ * package
installs the {
----- private methods -----
/ * ------------------------------------------------------------
adds a <code > <unk> / code > to a <code > <unk> / code > .
this method is used to set the data of a <unk> .
/ * ------------------------------------------------------------
creates a new { @link requestcontext } for the request .
/ * ------------------------------------------------------------
create a datawriter object that represents the given <unk> .
parse a der - encoded extension
<p > returns <code > true< / code > if point <code > p< / code > is <code > null< / code > .
paint the specified point on the specified point .
paint the specified point .
clears an image .
get the bounds of a point .
returns the bounding box of a point .
parses a date / time string into a { @link date } object .
formats the given text as a date - time .
formats the given text as a date .
parses a date / time string into a date object .
/ * [ deutsch ] <p > interpretiert den angegebenen text als yyyy - mm - dd t hh : mm : ss . < / p >
converts the specified text to a long returning null .
converts a { @code date } to a { @code string } .
replace the result of an arc initialization .
<unk> { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk>
rounds a double to a given number .
/ * ( non - javadoc )
loads the bytes from the file .
loads an unsigned integer from the file .
loads a random number of bytes from the file .
loads a random number of bytes from the file .
loads a random number of bytes from the file .
loads the bytes in the file into a byte array .
<p > converts a string to a numeric value . < / p >
reads a 64 - bit long value from the stream .
count the number of bits in a byte array .
/ * ( non - javadoc )
initialize the whole variables .
<unk> . <unk>
returns the scale of the tile in the given zoom level .
computes the n<sup > th< / sup > root of the poi .
calculates the distance between two points .
return a view of the lat / lon coordinates of a poi .
projects the positions of the arc to a longitude
escape xml characters .
get the string representation of a string .
unquote a string .
splits a string into a list of strings .
remove all tags from a string .
handles diff request
opens a new <unk> with the given name .
create a <unk> for all files in the dump .
returns the service name for the given path .
/ * ( non - javadoc )
returns the number of elements in this collection .
add a new variable to this type .
gets the input variables for the given index .
checked vs . jan 11 2011
print a class file .
/ * ( non - javadoc )
returns the currently active remote forwarding listeners .
returns an {
clone a database object .
creates a copy of the matrix values .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the reference time is valid .
receive notification of cdata .
index a file .
stop profiler .
/ * ( non - javadoc )
{ @link <unk> ( string ) }
returns the file that matches the given regular expression .
method to check if the given <unk> is a <unk>
vars - end
returns the { @link <unk> } for the given { @link <unk> } .
open the file
reads the content of the specified section .
disable area without checking for check .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
gets a description of the specified catalog .
/ * ( non - javadoc )
find the field with the given name .
returns the type of the given type .
sets the value at the given index .
deserialize the message .
write external data to the output stream .
adds a transaction system to the coordinate system .
validate a polling point .
adds a new <unk> to this <unk> .
<unk> > 动态增删不会持久化到词典文件
this method is called from the <unk> () method .
create a <unk> resource .
reads a catalog from a file .
read catalog catalog from catalog .
process a list of datasets .
/ * ( non - javadoc )
serialize the debug actions .
check if lon is between lat / lon and longitude
creates a new lat / lon pair from the given coordinates .
convert a lat / lon pair to a string
convert a lat / lon pair to a string
/ * ( non - javadoc )
main accuracy .
gets the selected dataset .
$example off : <unk>
create a tree path from the given node .
opens the model
opens a new catalog command .
creates a new { @link <unk> } for a { @link catalog } .
tests if the given node is a leaf node .
show information about a <unk>
perform the substitutions .
find the <unk> of a given field .
/ * ( non - javadoc )
writes a { @code int } to an { @link outputstream } using { @link <unk> ( int ) } .
writes a long value out to the output stream .
write a string to the dom .
writes the utf - 8 encoded string to the utf - 8 encoded string .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
reads data from the file .
enable or disable the debug flags .
return the best value for the given feature .
returns the array between the specified time and the specified channel index .
hybrid composition .
add a member .
returns the index of the member with the given name .
gets the names of the members of this object .
find the member with the given name .
creates a new byte copy of the given file .
restores the weight of the given {
initialize the benchmark .
gen - last : <unk>
sets the selected row .
/ * ( non - javadoc )
scroll to the given table .
set the member data .
/ * ( non - javadoc )
get the scalar scalar value
get the java double array data .
get the index of the given members object .
get the index of the members array .
returns the index of the given members object .
get the byte array as byte array .
get scalar value .
get the row keys from the members array
get scalar value .
/ * public void call ( pagecontext pc string [] <unk> ) {
get the index of the given members object .
get the long array as long array .
get scalar value .
/ * ( non - javadoc )
get a list of scalar values for the task .
get the scalar structure for the members .
<unk> method .
save the content of a dataset .
<unk> . <unk>
adds a itemized list to the list of the specified relationships .
[ variable my_dataset_name ]
gets the metadata of a dataset .
call inherited from {
get the mdc metadata .
add a record to this <unk> .
add extra attributes to the grid definition .
/ * <unk>
this method is used to write a record to a specific location .
show the missing record .
returns the count of missing fields
finds the record with the given name and a level .
<unk> - <unk>
generates a string representation of this class .
register a new instance of the given class name .
register a factory for the given feature .
[ variable <unk> ]
creates a new instance of a { @link <unk> } .
creates an instance of { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
extracts the integer values from the given byte array .
execute a operation!
returns the coverage table for the given <unk> .
execute the basic <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the file is a valid file type .
/ * package private
print idn .
/ * write the given value to the output writer .
{ @link context }
parses an sparql document and returns the result .
/ * ( non - javadoc )
validate the given name .
<p > <unk> . < / p >
<p > <unk> . < / p >
af <unk> <unk> <unk>
parses a { @link date } object into a { @link date } using the given { @link date } .
<p > gets the date using the specified pattern string . < / p >
parses the given date string using the given pattern and returns true if matched .
vars doc end
return the nearest coordinates of the specified point .
convert a set of coordinates to a <unk> .
returns a boolean representation of the values contained in the given text .
open a new <unk>
reads an ndarray .
reads a compressed image from a byte array .
reads a line of data from the file .
set the <unk> polygons
******************** initialization ************************************
parses the path section of the given { @link <unk> } .
/ * parse a variable selector .
creates a string representation of the given range .
return if the file contains a new file .
check if lines intersect .
loads the distance in {
find the approximate eigen pairs of a symmetric area .
loads a { @link <unk> } .
/ * ( non - javadoc )
returns true if the status code is 200 or not
/ * <unk>
get the resource config for the given <unk> .
get the { @link <unk> } for the { @link <unk> } .
get the image configuration for the given <unk>
get the {
convert a <unk> to a <unk>
this method is used to determine if the encoding should be used .
this method is used to compute the indicators from the <unk> .
this method is used to create a new <unk> for a <unk> .
make a { @link <unk> } from a { @link <unk> } .
make sure that <unk> is <unk> contiguous
creates a table configuration for a table .
{ <unk> : <unk> }
calculate the descendants of a destructuring pattern .
compute the simplex noise .
/ * ( non - javadoc )
gen - last : <unk>
/ * ( non - javadoc )
returns a string representation of the given string .
replies the uri for the given uri .
returns null if string is null or empty .
concatenates the given prefix and suffix to the given suffix .
intent that can be used to convert an intent to a string .
returns the result of { @link <unk> ( string ) } .
returns true if the given uri is absolute .
get the name of the property .
checks if the given { @link <unk> } should be accepted .
<p > <unk> . < / p >
copy from <unk> to <unk> .
returns a list of the names of all words in this directory .
sets the tag s length .
update the index file .
/ * ( non - javadoc )
closes the index .
<unk> implementations of <unk> .
/ * ( non - javadoc )
create a new <unk>
create a buffered writer for this file .
add a clipping dimension to the given matrix .
add a new dimension .
rename a dimension
/ * ( non - javadoc )
adds a new namespace
adds a new namespace
delete a global attribute .
/ * ( non - javadoc )
adds a { @link variable } to the { @link <unk> } .
convert a variable name to a list of variable names .
associate the specified variable with the given name .
this method adds a variable to a variable vector .
/ * ( non - javadoc )
add a new variable to the document .
/ * ( non - javadoc )
/ * ( non - javadoc )
delete principal attribute .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
writes the specified array of values to the specified array .
parse a full - escaped string .
write a string condition .
reverse the time series data .
/ * ( non - javadoc )
returns a list of variable assignments for the given variable type .
gets an instance of the <unk> .
initializes the table .
parse the unit of unit patterns .
prints the covariance matrix .
the main method .
this method is used to write the preamble into the xml file .
/ * ( non - javadoc )
<p > <unk> . < / p >
<p > <unk> . < / p >
creates a list of <unk> .
extracts the soap <unk> from a pdf document .
/ * <unk>
define a description of a description
acquire a typedesc from an object .
parse the contents of the given byte array into a byte array .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a lat / lon pair to a { @link projection }
return the results of a world coordinate
create the <unk>
add an observer to the list of <unk> .
/ * ( non - javadoc )
returns { @code true } if this interval contains the given { @code i } .
<p > removes the specified range from the specified range . < / p >
returns true if the range is empty .
get the element at the specified position in the array .
returns the index of the first index in the array .
returns the intersection of the specified range .
/ * [ deutsch ] <p > allen - relation : // <unk> . < / p >
finds and returns a subset of the specified range .
returns a normalized version of this range .
returns the index of the first element in the array .
returns the value of an element at the given index .
produce a <unk> object from the xml elements of the jsonobject .
reads data from the specified layout .
read data from the layout
writes an array of data to the given layout .
returns a {
main entry point .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a primitive array to a subset of pixels .
returns a new <unk> distribution map .
<unk> <p > <unk>
returns a list of catalog methods for the given class .
/ * ( non - javadoc )
loads a file from a file .
{ @inheritdoc }
execute a cleanup on the remote file system .
see { @link <unk> ( float float float ) }
$non - nls - 1$
read grid .
this method writes a { @link <unk> } to a { @link bbox } .
interpolate the array of pixels
/ * returns true if the lat / lon pair contains the lat / lon pair .
returns a { @link iterator } that contains no filter entries .
convert a lat / lon pair to a { @link projection }
builds a polygon feature from a dwg solid .
/ * ( non - javadoc )
return a view of the projects from the positions of the from positions of the document .
checks if the given tolerance intersect .
converts an array of integer [] to an array of integers .
/ * inherited
create a dataset .
validate the coverage parameters .
validate the coverage parameters .
create a factory to create a new <unk> with the given rotation .
this function returns the scale factor for a given latitude / longitude .
returns a position of the surface from the given latitude and longitude
/ * ( non - javadoc )
<unk> ( <unk> )
return an array of <unk> from the lat / lon pair of the lat / lon pair .
get a { @link datasource } instance .
/ * ( non - javadoc )
this method is used to create the landmark definition for a grid definition .
this method is called by the <unk> to figure out the correct coordinate system from the network .
/ * ------------------------------------------------- [ <unk> ] ---------------------------------------------------
returns the index of the first header .
override this method to finish the <unk>
gen - last : <unk>
*********************************************************************** <unk> ( <unk> <unk> <unk> <unk> <unk> <unk> <unk> ) ;
copy the metadata from the <unk> .
retrieve the pedigree metadata for the given study .
this method is called by <unk> .
get a list of contributors from a list of contributors .
shuffle a dataset
remove a dataset from this dataset .
creates a dataset from a dataset
add the service to the set of services .
remove all { @link services } registered under this { @link <unk> } .
/ * ( non - javadoc )
remove a batch of local models .
returns the value of the user identified by the given key .
/ * ( non - javadoc )
validate the href attribute of the given dataset .
/ * ( non - javadoc )
concatenates this { @link <unk> } .
[ variable <unk> ]
returns a list of the names of all the descriptors of this property .
******************** initialization ************************************
/ * ( non - javadoc )
returns the server port for the given request .
returns the list of conformance calls .
/ * non - private methods
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
verifies that the given url matches the given url .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates the html code for the given definition .
gets the length of variation .
/ * ( non - javadoc )
gets the last modified timestamp of the object .
gets the thumbnail of an image .
returns true if the given path matches the pattern .
/ * ( non - javadoc )
binds the provided {
setup point .
normalizes the given directory path relative to the base directory .
opencms . xml . <p >
process a file .
return the content of a file .
handles a static <unk> .
sets the length of the response body to the response .
returns the server port for the given request .
/ * ( non - javadoc )
returns the server port for the given request .
/ * ------------------------------------------------------------
returns the full url of the request .
get the location of a request
returns the header of the first parameter in the request .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
get all threads in the root thread group .
check if a <unk> is a valid <unk>
gen - last : <unk>
factory method for create a new { @link jdialog } object .
/ * ( non - javadoc )
/ * ( non - javadoc )
produce a <unk> object from the xml elements of the jsonobject .
create an instance of { @link java . time . time } .
init method .
parse a yearly end position .
{ @inheritdoc }
add a <unk> filter to the document .
sets the bit offset of the given data descriptor .
creates a new {
returns the number of clique bits for a given start node .
converts a mmcif file to a map .
append a line to the end of the archive
/ * ( non - javadoc )
log a constraint .
the main method .
returns the { @link <unk> } for the given name .
make a list of <unk> .
get the capabilities of a document .
<! -- start generic documentation -- >
produce a <unk> object from a byte array .
returns the value at the specified index as a double .
convert a { @link <unk> } to a { @link record } .
get the coordinate associated with the specified index .
new attribute .
sets the selected item in the list .
/ * ( non - javadoc )
returns the k - value array in the queue .
/ * ( non - javadoc )
returns a slice of this range .
returns the total number of bytes in this torrent .
/ * ( non - javadoc )
returns the index of the first field in the tree .
/ * ( non - javadoc )
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
get the value of a level .
writes an index to a file .
write a sparse array to a list of grammaticalrelation
[ variable <unk> ]
read <unk> .
parses a sequence of <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * <unk>
/ * ( non - javadoc )
/ * initialize the marshall method .
create a watermark factory for the image .
/ * private static <unk> <unk> ( <unk> <unk> ) {
read all lines from an { @link inputstream } .
/ * ------------------------------------------------- [ reader ] ---------------------------------------------------
copies all bytes from an inputstream to an output stream .
read the contents of an inputstream into a string .
this method reads the contents of the other file into a byte array .
compress the contents of an inputstream into an outputstream .
copy a gzip file to a file .
copy a gzip file to a file .
unzip a file .
create a new file with the given data .
reads a file from the given file .
copy the given inputstream to the file at the given offset .
copy files from a directory to a directory .
this method reads the contents of a file into a byte array .
extracts a tileset from a file .
writes a file to a file .
write the contents of a file into a file .
write the contents of the given file to a file .
writes the contents of an { @link inputstream } to the given { @link file } .
copy a url to a url
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
adds a <unk> to the <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
prints the query status .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
updates the memory used by this instance .
/ * ( non - javadoc )
/ * ( non - javadoc )
inits a new entity .
/ * ( non - javadoc )
reads and populates the frame of the data table .
/ * ------------------------------------------------------------
parses a string to a string .
/ * <unk>
/ * <unk>
wrap a string into a pretty printed string .
decodes a string representation of a string .
/ * ------------------------------------------------- [ misc ] ---------------------------------------------------
converts a string to a string .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
returns the difference between two strings .
pad a string to a length .
convert a string to a hex string .
replace all occurrences of a string with another string .
returns a string with all spaces removed from the string .
removes all occurrences of the specified character from the end of the string .
<p > <unk> . < / p >
escape space characters .
replaces all characters in the string with the given string .
replaces all occurrences of the specified character in the given string with the given replacement character .
replaces system properties with system properties .
<p > <unk> . < / p >
replaces all occurrences of a string with another string .
/ * private static string <unk> ( string value ) { if ( <unk> == null ) { return null ; }
pre - processes a uri pattern .
/ * ( non - javadoc )
escapes a string so that it can be inserted into a string .
/ * package
append a string to a stringbuilder .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
remove the trailing whitespace from the given value .
classorinterfaceorenumdeclaration = modifiersopt ( classdeclaration | interfacedeclaration )
/ * ( non - javadoc )
show the stack trace fields .
sets the state of the { @link <unk> } .
sets the state of the session .
rewrite the name of an element .
make a catalog change .
$example off : <unk>
gets the {
get a {
replace the extension of the given filename .
/ * <unk>
/ <param name = <unk> > < / code >
/ * private void <unk> ( string msg ) {
/ * ( non - javadoc )
update js summary .
/ * private static string <unk> ( final <unk> property ) { if ( <unk> == null ) { timer . <unk> ( <unk> ) ; }
this method is used to format the contents of the tree into a tree .
this method is used to print the summary information about the selected files .
/ * 训练
/ * <unk>
<p > a list of datasets . < / p >
<p > the <code > <unk> / code > for the user import . < / p >
this method is used to read the contents of this catalog .
/ * ( non - javadoc )
this method returns a list of { @link <unk> } s for the current project .
gets the parameterisation of the zone .
adds a { @link <unk> } to a { @link <unk> } .
/ * <unk>
adds global attributes .
/ * ( non - javadoc )
get a deep copy of the structure of the given structure .
this method converts the parameters into a byte array .
this method converts the parameters into a byte array .
get the coordinate of an artifact .
cast a object to a <unk> object .
this function is the coordinate of the <unk> of the conversion .
/ * ( non - javadoc )
compute ranks of a range .
get the names of all the named objects .
/ * ( non - javadoc )
<p > <unk> . < / p >
factory method to create a table instance from the datasource .
returns <code > true< / code > for the first feature of the type <code > <unk> / code > .
performs the actual work of derby .
generate the evaluation for the tables .
show the type of nested tables .
create a new dom node .
/ * package
/ * ( non - javadoc )
opens the grid .
opens the index list .
loads the grid .
returns the element at the given index .
produce a <unk> object from the given index .
produce a json jsonarray from the given jsonarray .
returns the value at the specified index as a double .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
<unk> > <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
update the entity in the database .
load help library .
returns a constrained version of the specified property using the specified pad character if any .
/ * this methods
<p > converts an array of bytes to a long . < / p >
reads a 32 - bit unsigned integer from the byte array starting at the specified index .
/ * ------------------------------------------------------------
find the current coordinate axes .
/ * <unk>
returns the binding with the given name .
removes the variable with the given name .
find the group with the given name .
documentation inherited from interface
find an atom with the given name .
<p > the <code > <unk> / code > attributes . < / p >
finds the enumeration of the given {
returns the parent of this sketch with the specified other group .
returns true if this group is a parent group .
<unk> . <unk>
sets the parent node .
adds a new dimension to the given dimension .
adds a font to the given dimension .
adds a { @link group } to the { @link group } .
add a { @link <unk> } to this { @link <unk> } .
adds a variable to the set of variables .
sets the { @link dimension } of the { @link <unk> } .
add a template to the template .
/ * ( non - javadoc )
returns true if the given dimension is on the dimension of the given dimension .
removes a child from this scope .
gets an immutable view of an immutable set .
get the next group .
adds a new xml file attribute .
/ * package private
launches the { @link <unk> } with the given { @link <unk> } .
d366807 . 3
method <unk> <p >
set attribute table .
adds a <unk> to the specified printwriter .
remove the variable with the given name .
create a mapping from a base type to a base type vector .
sets a template variable .
finds the stack with the specified name and stack .
/ * ( non - javadoc )
/ * ( non - javadoc )
initialize the recordowner .
prints the path to a printwriter .
try to resolve the given aliases .
/ * ( non - javadoc )
helper method to resolve aliases from call .
/ * ( non - javadoc )
normalizes a byte array to a hex string .
splits the input field into a vector of tokens .
<unk> / <unk> / <unk>
adds a new <unk> attribute .
/ * ( non - javadoc )
sets the arguments for the <unk> .
iterate over the attributes table and putting it into the supplied base table .
find the .
<p > <unk> . < / p >
get the result as a string .
clone a <unk> .
writes a new file to a file .
factory method for creating a { @link <unk> } .
******************** methods *******************************************
writes grid .
replace missing values in <unk> .
replace missing column values in the given grid .
calculate the longitude center of the longitude
method to write a grid to the output
/ * ( non - javadoc )
/ * ( non - javadoc )
<! -- start generic documentation -- > retrieves the element at the specified position in the array . <! -- end generic documentation -- >
encodes the given index into an array of bytes .
produce a <unk> object from a java object .
returns the value at the specified index as a double .
/ * ( non - javadoc )
this method is used to create an immutable collection of { @link <unk> } s from a { @link executiongraph } .
gets the top index file from the config file .
/ * ( non - javadoc )
read buffer type .
create a new <unk> for the given index filename .
loads a <unk> from a file .
check a collection of puppet .
<unk> <unk> <unk>
<unk> update <unk> .
parses the puppet .
/ * ( non - javadoc )
update path partition
create a new <unk> for the given feature collection .
writes a {
this method is used to open the data file .
get an immutable collection of <unk> from a dataset .
invokes { @link <unk> ( java . io . <unk> java . util . list java . util . collection ) } .
/ * ( non - javadoc )
check whether the given uri can handle a url .
returns a string representation of this object with the given key and value .
/ * ( non - javadoc )
set the value of the <unk> property .
<unk> . <unk>
/ * ( non - javadoc )
prints the constraint names to the output stream .
[ target <unk> ( <unk> ... ) ]
$example off : <unk>
sets the next object in the directory .
process the map shapes .
add a shape to the list of shapes
this method is used to parse the time zone of a string .
gen - last : <unk>
this method is responsible for reading and parsing .
determines if a task needs to be updated
partitioned partitioned tables
/ * figure out the coordinate of a <unk>
full write index
$example off : <unk>
convert a { @link <unk> } to a { @link <unk> } .
write a variable reference to the <unk> .
create a new <unk> from a <unk> group .
create a <unk> from a collection of <unk>
checks to see if this dewey number is compatible with this dewey number .
find a domain coordinate .
this method is called when a { @link com . <unk> . domain . impl . model . impl . model . <unk> } is bound to a { @link <unk> } .
create a sparse array <unk>
make a { @link <unk> } from a { @link <unk> } .
convert a { @link group } to a { @link <unk> } .
vars :: <unk>
get the coordinate of the raster of the raster .
adds an coordinate to the coordinate of the raster .
get an {
set the members of a jsonarray .
extract the members of a member .
{ @inheritdoc }
get scalar scalar object .
convert scalar scalar to float array .
convert scalar scalar to double array
convert scalar values to primitive type
set the non - stroking color in the array .
get scalar scalar .
get scalar indices .
get scalar values .
get scalar scalar value .
get the scalar structure of a { @link <unk> } .
create an array structure from an image .
converts the given object to an array of { @link <unk> } s .
converts an array of members to an object .
/ * package
calculates the angle of phi ( theta ) .
returns true if the given tolerance intersect .
convert a value to a long .
given a { @link java . lang . integer } returns an { @code int } .
visible for testing
clamp the value to { @code min } .
extract the path from a data path .
returns the file name of a workflow definition .
calculate the <unk> arguments .
translate an expression .
returns the string representation of the constraint string .
moves the physical data to a physical record .
returns the references to the given <unk> .
runs a match on a source
return a boolean indicating whether or not an expression matches a conjunction .
returns the index of the given variable in the given variable .
update metadata .
returns a list of all registered {
filters out state of a particular link .
count the number of features in a structure
formats a list of {
refinement of <unk>
{ @link <unk> ( object ) }
{ @inheritdoc }
{ @link <unk> ( org . apache . beehive . netui . pageflow . lib . <unk> ) }
print the indentation of a line .
<unk> > <unk>
call this method to get nearest available format names .
cldr buffer is valid
gen - last : <unk>
initcomponents this initializes the action system .
/ * -----------------------------------------------
creates a new <code > <unk> / code > instance from the specified <code > <unk> / code > .
initializes the hash tree .
opens the graph .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
reads the keys of the specified <unk> keys .
reads the headers from the specified snapshot .
this method extracts the part of the parts from the stream .
the main method .
returns the key value associated with the given key .
returns the { @link classinfo } object for the given class name .
/ * ( non - javadoc )
prints a list of strings to the console .
gets the part of a java package part .
returns the part of the named part .
returns the data pointer to the given object .
/ * ( non - javadoc )
converts a number of bytes to a byte array .
/ * ( non - javadoc )
converts a byte array to a byte array .
reads the font from the table .
/ * functions
returns the expansion of the image .
<unk> > <unk>
returns a string representation of the pad bits of a bit string .
writes the data to the given channel .
writes <code > mlarrays< / code > into <code > <unk> / code > .
writes the supplied <unk> to the given channel .
parse the xml document .
/ * ( non - javadoc )
/ * ( non - javadoc )
parse array of elements
/ * ( non - javadoc )
parse grid .
writes the signature to the element .
/ * ( non - javadoc )
parse the base type .
parse the attributes of an element .
parse aliases .
escape xml characters .
create an instance of { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } .
dd - mmm - yy
replicate a batch of data to <unk> .
update the compound names for a given node .
flattens a list of indexed keys into a single value .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
print the resource .
/ * ( non - javadoc )
/ * ( non - javadoc )
reads data from an array of strings .
reads a standard data structure .
read data for a given section .
sets the location of the deployed wsdl location .
build the standard deviation for each station .
build a list of all the pushbutton from the input file .
compares two float values .
compares two doubles .
returns true if the two vectors are equal .
checks if two floating point numbers are equal .
compare two byte arrays
creates a copy of a dataset .
/ * package
/ * package
creates a proto builder proto proto .
builds a { @link <unk> } line .
convert a { @link coordinate } to a { @link <unk> } .
returns true if the given node is references to a loop .
parses a unit specification .
compute the sort vector
/ * ( non - javadoc )
<p > <unk> . < / p >
returns true if the variable is w .
make the best best - effort number .
returns a list of the coordinates of the point represented by the given string .
return the results of a { @link <unk> }
return a translation from the given <code > from< / code > and <code > to< / code > .
get a featurecollection from a latitude
<p > <unk> . < / p >
calculates the coordinates of a surface from a latitude / longitude coordinates
calculates the coordinates of the coordinates of the coordinate system .
executes the <unk> method .
this method is used to get the capabilities of a file .
internal subroutine for <unk> .
analyze the time series for the time series . this information will be logged and recorded with a screenshot for traceability and added debugging support .
create a map of attributes from a list of attributes .
split field values
extracts the value of the quoted string .
convert a numeric value to a numeric value .
iterate through the given formatter
converts a base64 encoded string to an array of bytes .
packs the values of a list of values into a { @link <unk> } .
returns the values of the array with the given value .
<p > scan . < / p >
/ * ( non - javadoc )
generate a unique id for a given dataset .
/ * ( non - javadoc )
converts a <unk> to a set of <unk> .
writes a point to the given output stream .
this method is called when the executor is initialized .
this is the same as fixup ( <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> )
/ * ( non - javadoc )
gen - last : <unk>
evaluate javascript source .
gen - last : <unk>
gen - last : <unk>
create the gui and show it in the gui .
creates the window .
create a skeleton catalog from a given <unk> .
expand the given dataset using the given { @link <unk> } .
converts a list of { @link coordinate } into a list of { @link <unk> } s .
returns the index of the first dimension of the second axis .
find the coordinate of a axis .
/ * ( non - javadoc )
query the projection of the bounding box
check if all columns are selected .
returns true if all islands have the same coordinate order .
determines whether a collection of dimensions is a subset of the given subset .
compiles a list of modules .
check to see if the group belongs to the specified group .
returns true if the table contains the given huffman dimensions .
returns true if the given list of types contains the given axis .
check if the axis contains the given axis type .
create a new <unk> .
/ * ( non - javadoc )
/ * <unk>
opens a <unk> for the given <unk>
extracts fields from a message from the message .
get the text of the tool tip .
adds a change listener to the listener list .
removes a change listener from the listener list .
returns the selected session .
get the list of selected beans .
returns a list of all the selected columns in the given view .
/ * ( non - javadoc )
définit la liste d objets <unk> .
définit la liste d objets <unk> .
/ * <unk>
{ @inheritdoc }
restore the state of the table .
returns the class of the given type .
cast a object to a java object
create an unknown unit .
/ * ( non - javadoc )
returns true if the specified variable is {
returns true if the specified {
returns the coordinate of the given coordinate .
adds the data variables to the html table .
configure the plugins .
/ * ( non - javadoc )
make a <unk> .
create a list of entities
ensures that all of the fields of the given structure are valid
format the results of a note .
finds a variable for a given network
find a field for a given id .
finds all notes on a particular node
/ * ( non - javadoc )
returns a string representation of a byte array .
get a system property .
returns a new instance of the first date using the given exception .
parse a tea unit .
<unk> > <unk>
<p > <unk> . < / p >
/ * ( non - javadoc )
create a day unit .
checks if the given unit string is a time unit .
convert the given string expressed in the given unit to the given unit .
converts the given { @link double } into a { @link double } .
returns true if the string is compatible with the given unit .
/ * *
returns the value of the next segment based on the current scale and scaled unit .
creates a new <unk> clause .
returns a { @link function } object for the given name .
returns a <unk> object for the given name .
/ * ( non - javadoc )
example usage :
creates a buffered image for a { @link <unk> } .
translate a <unk> to a <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
add a dataset to a dataset .
/ * ( non - javadoc )
attempt to get the file at the given location .
get the file name of the file or directory .
create a { @link note } initialize the position of the given { @link <unk> } .
returns the passwordauthentication for the requesting user .
returns the { @link credentials } for the given scope .
set true if false .
returns a list of all the files in the database .
/ * ( non - javadoc )
seeks to the given position .
returns the length of the file .
/ * ( non - javadoc )
reads the next byte from the file .
reads up to <code > len< / code > bytes from the specified byte array starting at offset <code > off< / code > . if <code > <unk> / code > is <code > 0< / code > then <code > 0< / code > will be returned .
copy the contents of the given inputstream to the given outputstream .
/ * ( non - javadoc )
reads length bytes from the input stream into the specified buffer starting at offset off .
writes a byte to the file .
/ * ( non - javadoc )
reads characters into a portion of an array .
reads a signed integer from the current stream starting at position <code > <unk> / code > . <code > <unk> / code > is <code > true< / code > if <code > pos< / code > is <code > b1< / code > <code > b2< / code > <code > <unk> / code > <code > <unk> / code > <code
reads an array of integers .
reads a long array from the stream .
reads a float array from the stream .
/ * ( non - javadoc )
reads a byte array from the input stream .
read a single line from the stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
writes <code > len< / code > bytes from the specified byte array starting at offset <code > off< / i > to this file .
/ * ( non - javadoc )
/ * ( non - javadoc )
writes a string to the output stream .
writes <code > len< / code > bytes from the specified byte array starting at offset <code > off< / code > to this output stream .
/ * ( non - javadoc )
writes utf - 8 encoded string to the output stream .
/ * ------------------------------------------------------------
<unk> - <unk>
/ * ( non - javadoc )
create a new instance of the { @link <unk> } .
/ * ( non - javadoc )
returns true if the directory is empty .
construct all the children of the given index reader .
adds all children of the given directory to the given directory .
read a list of objects from the index reader .
creates a {
opens a grid dataset .
gets a {
/ * private void <unk> () { if ( <unk> == null ) { throw new illegalstateexception ( <unk> ) ; }
/ * ( non - javadoc )
shuts down the timer .
acquires a { @code <unk> } from the specified { @code <unk> } .
acquires a { @link <unk> } from the cache .
load the cache from cache .
clears the redo log .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the info for a collection of files .
/ * ( non - javadoc )
renders the given { @link <unk> } into a { @link <unk> } .
/ * ( non - javadoc )
returns the int value of the int value .
/ * ( non - javadoc )
acquires a {
tries to retrieve the cache from cache .
try to update the cache .
adds a cache element to the cache .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
get the list of <unk> column values .
/ * ( non - javadoc )
method to determine if the <unk> is either <unk> or <unk> .
<unk> - <unk>
retrieves a { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds the coordinate to the coordinate space
adds the coordinate space .
generates the projection matrix for the given projection .
generates the projection matrix for the given projection .
<editor - fold defaultstate = collapsed desc = visualization >
{ @link <unk> }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the position of the cell .
this is the entry point method .
given a directory name and a directory name make sure it s a collection .
creates a { @link path } for the given { @link path } relative to the given directory .
prints a list of <unk> to the given directory .
http : // <unk> . <unk> . com / <unk> / <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the average point of the threshold that matches the filter criteria
/ * ( non - javadoc )
converts a period string into a { @link calendar } instance .
/ * [ deutsch ] <p > erzeugt eine <unk> <unk> . < / p >
/ * ( non - javadoc )
performs a subtract operation .
gets the value of the <unk> field .
get the value of the <unk> field .
gets the offset from the specified start and end date .
checks if the file is a valid file .
/ * ( non - javadoc )
opens the specified { @link <unk> } .
/ * ( non - javadoc )
demonstrates how to list all tables in the grid .
add the date root extension to the set of files .
signs the given request path .
find the h2 data directory .
gets the root key from the data root .
extract data from the catalog .
get a date range .
/ * ------------------------------------------------- [ helpers ] ---------------------------------------------------
/ * ( non - javadoc )
generates a bip - 44 compatible ethereum wallet on top of bip - 39 generated seed .
[ variable <unk> ]
[ variable <unk> ]
register a new dimension .
rename a dimension
replaces the group with the given name .
/ * ( non - javadoc )
add a { @link <unk> } to this { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
process a group variable with the specified arguments .
add a variable to the graph .
adds a java { @link structure } to a list of structures .
parses a source variable .
add a variable to the variable list .
renames the font .
/ * ( non - javadoc )
create the options .
sets the {
rewrite a file .
delete a record structure .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
write a string value .
/ * ( non - javadoc )
/ * ( non - javadoc )
closes this output stream .
writes the html properties to the given printwriter .
extract metadata from a dataset .
returns a {
/ * [ deutsch ] <p > siehe {
returns a list of variable names for the given <unk> .
make a replacement map name to the current map .
query the las timeseries .
multiplies this unit by another unit .
/ * ( non - javadoc )
subtracts one unit into another unit .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * <unk>
method to validate the top - level data of a variable
convert the given {
process user defined fields .
voltdb added method to get a primitive hsqldb object .
/ * create a <unk> buffer
convert a character array to a byte array .
close all the revisions
open the database .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a period of years to a period .
reads a table and returns it as a map .
check if the current coordinates are within the given coordinates .
return the bounding box of the coordinate
read a <unk> from an input stream .
adds the specified element to the end of the list .
increases the capacity of this <tt > arraylist< / tt > instance if necessary to ensure that it can hold at least the number of elements specified by the minimum capacity argument .
returns the element at the specified position in this list .
augments a dataset history file .
convert from latitude and longitude
a convenient function to return a view of the points p1 and p2 .
set the location of the scan location
translate a <unk> to a location .
get a path to a base directory .
<p > <unk> . < / p >
<p > <unk> . < / p >
get the coordinate type .
$antlr end <unk>
/ * ( non - javadoc )
constructs a date from the given index .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
resolve the href attribute of the given dataset .
adds a file to the local file system .
loads system properties from the input stream .
/ * <unk>
store a single concept .
writes the local disk to disk .
serialize a string to a file .
shows the local disk in local storage .
main entry point for the dumping of the { @link net . dv8tion . jda . core . api . <unk> } .
/ * ( non - javadoc )
notify registered assignments .
get a date from the given parameters .
/ * ( non - javadoc )
open binlog file .
/ * [ deutsch ] <p > interpretiert den angegebenen text als intervall mit hilfe eines lokalisierten intervallmusters . < / p >
prints the program to the specified output stream .
marshals the given bean into the given map .
get the { @link datasource } for the given { @link connection } .
returns the {
sets the <unk> value .
returns a { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
{ @inheritdoc }
<unk> ( <unk> ) <unk>
method to build a molecule from a dataset
loads a picture from a completed image .
loads a { @link <unk> } .
stops the { @link <unk> } with the given { @link url } .
change the status of the picture .
get the number of jobs that have been loaded .
creates a scaled picture based on the specified priority .
returns the scaled size of this bounding box .
/ * ( non - javadoc )
<unk> > <unk>
sets the status of the picture .
creates a new <unk> for the given file .
parse the incoming xml content .
returns a list of all the virtual files in this pipe .
prints the covariance matrix .
build the header query string .
vr : inline
/ * ( non - javadoc )
the main method .
sets the directory directory .
/ * public static void <unk> ( dir dir ) { if ( dir ! = null && dir ! = null ) { if ( dir ! = null ) { if ( dir ! = null ) { if ( dir ! = null ) { if ( dir ! = null ) { if ( dir ! = null ) {
deletes the specified file .
returns the last modified time of the file .
make sure that the path is a path
delete the given <unk> .
/ * ( non - javadoc )
/ * public static boolean <unk> ( string filename ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> ==
loads an icon for the given icon .
gets the extension of a resource .
creates a new offset curve .
creates a new { @link <unk> } with the given icon and class name .
make a menu item from the action .
adds a menu action to the menu .
add an action to the button .
adds the action to the container .
sets the action properties .
sets the action properties .
parses the given <unk> and returns a list of <unk> .
returns the closest great circle which is closest to the given position .
returns true if there is a <unk> table in the encoder
perform a glb for a list of <unk> .
returns a deep copy of this axis .
returns true if the data type is numeric .
returns information about all available bundles .
gets the type of the calendar attribute .
sort the rows in the table .
<unk> method .
/ * ( non - javadoc )
gets the height of the table .
prints the contents of the row .
increments the currently selected element .
/ * ( non - javadoc )
scroll the given table into the given table .
/ * [ deutsch ] <p > modify <unk> . < / p >
/ * ( non - javadoc )
set the selected index .
/ * converts a <unk> object into an object .
resumes the parse .
checks that one of the names of the features are valid .
/ * ( non - javadoc )
sort a subset of a subset of the specified subset of the specified subset of the specified subset of the elements in the specified array .
swap two elements .
convert a string to a string .
creates a new file from the given filename .
convert from latitude / longitude coordinates into a path
return a <unk> from the given front
this function convert wsg84 gps coordinate to a { @link <unk> } .
create a zip file .
static version of <unk> .
create a configuration reader from a resource .
generates the filename for the application data directory .
save the file to the temp directory .
writes the message to the specified output stream .
run the given <unk> .
this method writes the structure of a given structure as a local variable .
process an atom .
todo ( <unk> ) : <unk>
this method writes the frames to the given <unk> .
/ * convert a <unk> to a <unk> .
this method is used to fixup kernel performance .
<p > a list of job dependencies for the coverage . < / p >
loads the hash from a <unk> file .
gets the string representation of the <unk> .
print all parameters in the given space .
prints the given tree to the print writer .
/ * ( non - javadoc )
set the logo .
determines the rid of any sub - areas .
returns the description of the specified dimension .
creates a new { @link <unk> } with the given { @link <unk> } and { @link <unk> } .
compare tables .
entry point for the project .
serialize the given map to a sink .
set the projection of the dimension
<p > <unk> . < / p >
returns the size of the column .
<unk> > <unk>
reads the variable from the destructuring pattern .
returns the data contained in the {
<unk> <unk> <unk>
/ * private <unk> <unk> ( int <unk> int <unk> ) { try { <unk> <unk> = <unk> . <unk> ( <unk> ) ; }
/ * <unk>
get the <unk> of the <unk>
gets the number of bytes necessary to decode the file .
read a random number of bytes from the file .
/ * public <unk> <unk> ( int <unk> int <unk> ) {
computes the composited width and height of the file
scanning through the columns of the columns of the scanning matrix .
{ @inheritdoc }
formats a list of dataslices .
make a <unk> file .
convenience method for { @link <unk> ( <unk> <unk> <unk> ) }
create a new <unk>
calculate the map of transformation vars
get the wait time statistics for each station
sets the selected station .
interior and select a new <unk> .
pick the closest point in the ring to match the given pick point .
gets the currently selected range .
merge the element with the <unk> .
runs the example .
convert a {
set the parameters of the query .
~ methods **************************************************************************************************************************************
sends a message to the graphite server .
the main method .
renders content of a sheet .
converts the pdf to a <unk> .
called when the model is saved .
get the list of all the bounding boxes of the given projection
get the updater for the given parameter name .
get a { @link <unk> } from the passed { @link <unk> } .
creates a { @link java . util . iterator } based on a { @link <unk> } .
reads the data from a byte array .
counts the number of elements in the collection .
gets the local variable at the given index .
prints all the values of the given space .
deserialize the object .
/ * ( non - javadoc )
this function is used to fixup variables from qnames to stack frame indexes at stylesheet build time .
/ * ( non - javadoc )
returns the {
get the actual type of the given type .
call the <unk> using the <unk> algorithm .
/ * ( non - javadoc )
/ * ( non - javadoc )
computes the euclidean norm of the table .
trains the classifier with the given instance .
constructs a catalog - specific catalog .
creates a { @link <unk> } for the given { @link <unk> } .
read the contents of the given location .
/ * ( non - javadoc )
read access to a { @link <unk> } .
read a soap service .
read catalog catalog script .
outputs the rdf dataset found in the given json fragment .
read <unk> metadata group .
get the documentation url for the given root element .
/ * <unk>
creates a new instance of the { @link <unk> } .
/ * ( non - javadoc )
reads the variables from the given { @link <unk> } .
this method creates a new instance of hh : mm : ss or hh : mm : ss .
/ * ( non - javadoc )
/ * ( non - javadoc )
<strong > [ icu ] < / strong > gets the value of the parameter with the given name .
<strong > [ icu ] < / strong > returns the value of the given parameter belonging to the specified parameter .
read parameter table .
read parameter table .
read parameter table support .
/ * ( non - javadoc )
adds a config item .
add a new symbol handler .
find the prefix for the given group .
check if the given email is valid .
export a single connection to a csv file .
returns the next character in the stream .
reads a char from the input stream .
parse a hex literal .
consume a real number .
decode a string to a string .
returns a string representation of the action .
collect the collection .
process the parameter data
parses a shortcode
$antlr start <unk>
returns the value of the <code > name< / code > property as a <code > boolean< / code > . if no such property is specified or if the specified value is not a valid <code > boolean< / code > then <code > defaultvalue< / code > is returned .
<p > <unk> . < / p >
restore the crc value .
call this method to determine whether this file is a remote .
computes the lengths of the points in the line .
http : // www . w3 . org / tr / <unk> / <unk> . html
returns a description of a geometry .
returns the scheme for the given <unk> .
helper method to determine if the projection should be added to the projection
<unk> - <unk>
returns a string representation of the string representation of the given constraints .
append a fatal error message to the console .
returns the value of the given key as a string .
set the members of a members object .
removes the next node from the list .
removes the previous entry from the list .
build a polygon .
removes the property with the given name .
/ * ( non - javadoc )
adds a projection to the window menu .
/ * [ deutsch ] <p > ermittelt das <unk> <unk> <unk> . < / p >
creates a new instance of the class specified by classname .
register an spi class .
sends the rewrite class to the registered providers .
returns true if the given class is registered with the registered saslmechanism .
returns true if the specified class is registered with the given class .
set the debug flags for the given <unk> .
opens a new { @link <unk> } with the specified location .
opens a file with the specified location .
removes the tags from the file .
opens a new <unk> .
convert a <code > <unk> / code > to a <code > <unk> / code > .
open a new <unk>
creates a new { @link <unk> } with the given name and data .
opens a class file with the given key .
reads the contents of a file into a byte array .
/ * ( non - javadoc )
find the group with the given name .
/ * ------------------------------------------------------------
find the class of the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
find the attribute with the given name .
<p > <unk> . < / p >
write the url to a string .
dump out all the contents of the given output stream to the output stream .
print this value to the specified printwriter .
emit indentation of the comment .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the last modified timestamp of the file .
add an attribute to the list of children .
write an attribute .
adds a new { @link eventloopgroup } .
documentation inherited from interface
remove the dimension of the given dimension .
adds a variable to the target group .
add a variable with the specified name to the gradient of this variable .
add a variable to the gradient for a given font .
removes a variable from the graph .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an unmodifiable view of the child entries .
/ * ( non - javadoc )
/ * ( non - javadoc )
sends a { @link <unk> } to a { @link <unk> } .
/ * ( non - javadoc )
unwrap a section of the specified section to the channel .
<p > a list of <code > <unk> / code > objects . < / p >
parses a variable section of the form :
main method .
get a valid short object name for a given class name .
returns the input file name for the given node .
<unk> - <unk>
returns true if the event matches the filter criteria .
returns true if the event should be excluded .
returns true if the event should be accepted .
/ * [ deutsch ] <p > <unk> die <unk> <unk> <unk> <unk> . < / p >
documentation inherited from <unk>
documentation inherited from interface
returns the string representation of the type .
returns the value of the specified shaper type .
returns the value at the specified index .
returns the value at the specified index .
convenience wrapper for { @link <unk> ( string ) } .
sets the value of the given type to the given value .
read a string value .
checks if the given string is a valid byte value .
scans a string to see if it is a double .
checks if a string is a valid double .
check if the given string is a success value .
check if the given string is a float .
checks if a string is a double .
clone the given attribute
gets the data type for the given type .
returns the opcode of the data type .
returns the data type of the given data type .
get the data type for the given datatype
{ @inheritdoc }
checks if the given string is a valid line string .
normalize a path .
returns true if the given path is absolute .
returns true if the given id is a valid id string .
returns true if the given string is a valid <unk> value .
returns true if the string argument is on the command line .
returns true if the string argument is on the command line .
<p > <unk> . < / p >
checks if the given string is a valid numeric string .
returns true if the specified string is a valid target string .
<p > <unk> . < / p >
check if a string is a valid hexadecimal string .
converts a unicode code point to a hexadecimal string .
add a new param to the param list .
add an integer property .
put a key / value pair into the map .
returns the value associated with the given key or null if not found .
/ * ( non - javadoc )
reads all the bytes from the input stream .
reads a range of bytes from the input stream .
encode a single - style column in the stream
returns a {
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * package
removes simple quotes from a string .
/ * <unk>
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
process a record .
/ * package
/ * ------------------------------------------------------------
get the value for the given key
returns a logger with the specified name .
/ * ( non - javadoc )
returns the list of mappings for the given element . <p >
/ * ( non - javadoc )
reads jwk helper and returns a { @link privatekey } object .
{ @inheritdoc }
get the current {
/ * ------------------------------------------------------------
calculates the heading from two latlongs using the haversine formula .
return an array of <unk> from the lat / lon pair .
adds radial distortion to the specified destination .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the source points associated with the specified angles .
create a copy of the polygon formed from the <unk> geometry
returns the number of connections connected to a polygon .
translates { @code coalesce ( ... ) } to { @code float } .
<unk> <unk> graph coefficients
returns the quantiles associated with the first image .
get the { @link variable } s for the given { @link <unk> } .
returns the names of the given variable names .
adds a variable set to this set .
sets the {
removes a parameter with the given name .
adds a set of member variables to this variable .
/ * ( non - javadoc )
find the variable with the given name .
add members to the members of this variable .
calculates the sum of all the values in the specified {
read structure data from the request .
writes a scene object to an array of bits .
reads a structure from a stream .
returns a { @link iterator } of { @link <unk> } s .
<unk> - <unk>
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
get a comma - separated list of comma separated values .
<p > <unk> . < / p >
adds a parameter to the list of parameters .
computes the header of the intent .
return the projects attached to a given array
return the projects attached to a row .
return the tile coordinates for the tile at the given zoom level .
return a view of the coordinates of the specified type .
calculates the bounds of the box .
/ * ( non - javadoc )
creates a new bounding box from the world coordinates .
draw the coordinates
gets the angle between two points .
returns the value of the number of values in the matrix .
calculates the distance between two points . <p > reference : <a href = http : // en . wikipedia . org / wiki / <unk> > <unk> / a >
convert a gamma number to a double value .
/ * private methods
gets the version of the given package name .
{ @link <unk> }
helper method to format a double in a <unk> .
return the <unk> type of the given { @link <unk> } .
deletes the next file .
sets the coverage data state .
get read coordinates for a { @link <unk> } .
------------- <unk> -------------------------------
/ * ( non - javadoc )
<editor - fold defaultstate = collapsed desc = visualization >
draw the grid into the grid .
returns true if the specified label is a child of this parent .
get the value of a property .
reads the frames from the file .
method to display the compression method .
installs all columns in the given table .
adjust the widths of the columns in the given table .
/ * ( non - javadoc )
gets the parent object .
returns the { @link <unk> } object for the given relative path .
get a temporary file definition .
sets the api key to be used .
returns a {
creates a return value for the return value of a return node .
converts a { @code <unk> } into a { @code label } .
creates a return value for the return value of a return node .
converts markdown value to html format .
converts a string to a { @link label } .
<p > main . < / p >
connect to socket .
return { @link <unk> } { @link environment } { @link -------------------------------------------------------------------------- } { @link environment } { @link environment } { @link environment } { @link environment } { @link environment } { @link environment } { @link environment } { @link environment } { @link environment } { @link environment } { @link environment } { @link environment } { @link environment
creates a new instance of { @link socket } .
list of ip addresses . <p >
tries to obtain an instance of the <unk> for the given instance .
wait for a connection to the server .
clear softreferences to clear softreferences .
/ * ( non - javadoc )
compile a class .
adds a source code source to the compile source file .
reads next dot ( frame - control indicator ) from input stream .
reads a single block from the input stream .
gets next frame image .
/ * sets the frame image of the image .
read a block of work bytes .
displays a { @link <unk> } .
gets the property that contains the name of the &lt ; <unk> ; property .
/ * ( non - javadoc )
inject fields annotated with {
sets the clock to utc .
gets the validation message .
merges this resource bundle with the specified locale .
initialize the resource bundle from the list of resource bundles .
creates a new instance of the given class .
initialize the list of <unk> .
processes the given { @link <unk> } .
create a javafx { @link <unk> } .
create a javafx { @link <unk> } .
process the <unk> event .
get an {
returns a new set of { @link <unk> } s with the specified factory .
/ * ( non - javadoc )
clears the queue .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a message to the messages list .
remove a message from a list of validation messages .
looks for a memo message and remove it from the messages list .
binds the specified person id to the specified person .
inflates the view which is used to visualize a java view .
invokes a constructor with the given parameters .
set the resource bundle resource bundle .
binding for { @link java . lang . string }
scans the view hierarchy to see if the view is annotated with { @link <unk> } .
creates a { @link <unk> } for the given view .
sets the annotations of the view .
create and process view model .
creates a { @link view } for the given id .
initializes the { @link <unk> } with the given { @link <unk> } .
returns all methods of the given class that are annotated with the given class .
adds a { @link <unk> } to the list of registered { @link <unk> } s .
checks if the given view is an instance of { @link <unk> } .
/ * ( non - javadoc )
load the countries .
unloads the <unk> .
--- publish ---
dispatch a message to listeners .
/ * ( non - javadoc )
resets the state to the default state .
saves the values of the {
/ * ( non - javadoc )
reloads the model instance .
copies the values of the given configuration to this model .
<unk> > <unk>
returns an immutable field map describing the property names .
/ * ( non - javadoc )
<unk> > <unk>
returns an immutable field for the given identifier .
returns a { @link string } describing the property identified by the given identifier .
<unk> > <unk>
returns a {
returns a { @link java . util . accessor } describing the property .
return the field of the property .
returns a { @link <unk> } describing the property .
<p > <unk> . < / p >
returns a list of {
wrap hash set .
a lens that focuses on a property of a map .
adds the given { @link observable } to the given { @link observable } .
adds a new { @link <unk> } to the list of registered { @link <unk> } s .
creates a new { @link arraylist } of { @link <unk> } that can be used in a { @link <unk> } .
<p > java . < / p >
adds a { @link <unk> } to the view .
registers the given { @link observable } with the given { @link observable } .
create a new { @link <unk> } with the given { @link observable } .
adds an object to the invalidation map .
returns a {
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns all fields of the given class that are annotated with the given annotation .
returns a list of fields for the given class .
execute groovy script t .
sets a field in the given target object .
execute groovy script t .
load the fxml component from the fxml file .
create the fxml file .
attaches the { @link <unk> ( view view bundle ) } to the given { @link view } .
load the fxml view .
create a new row row row row for the given row
{ @inheritdoc }
get the coverage data value
get the coverage data value
/ * ( non - javadoc )
{ @inheritdoc }
validate the image type .
draw a coverage data image using the specified pixel values .
draw a coverage data image tile .
draw a coverage data image tile .
draw a coverage data image using the tile width and height
creates a new image of the specified tile .
set the pixel value of the raster .
set the pixel value of the raster .
create a tile table with metadata
set the tile data to the specified image format .
{ @link delete ( string string [] ... ) }
get the max number of rows
{ @inheritdoc }
query the sql for a single sql statement
query for single column results
query the sql results into a list of objects
runs the provided sql and returns a { @link cursor } over the result set .
runs the provided sql and returns a { @link cursor } over the result set .
{ @inheritdoc }
query for rows
query for all rows
query by the query
handle a cursor .
returns true if the table doesn t exist .
returns the index of the first row in the result set .
returns true if the geometry index is valid .
returns an iterator over the feature row values .
returns an <code > iterator< / code > over the ids contained in the <code > values< / code > object .
register a table
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the tile row with the specified tile and zoom level .
delete the gridded coverage data
delete coverage data coverage data
delete coverage data
create a tile table with metadata
get the tile bounding box from the request bounding box
get coverage data by the coverage data
get the coverage data tile results from the tile matrix
get the coverage data tile results from the tile matrix
get the coverage data tile results from the tile matrix
get the coverage data tile results from the tile matrix
get the tile matrix from the request bounding box
get the coverage data value
set the style for the geometry type
get the style for a geometry type
/ * ( non - javadoc )
create a geopackage
open a database connection to the database .
converts a byte array to a bitmap .
convert a bitmap to a byte array .
{ @inheritdoc }
delete the table
updates the last indexed indexed index .
update the last indexed tile .
update the last indexed table
get the user metadata for a table
get the table for the table
get or create a metadata table .
get the geopackage id of the geopackage
fetches the table metadata .
get the extension
get the feature row for the feature row .
perform a raw sql query .
get the max query string
get the number of rows
get the bounding box of the table
query the provided bounding box in the provided projection
query for the users of the envelope
query for the users of the envelope
perform a query with the specified minimum and maximum y values .
counts the number of rows within the specified bounds .
build a query with a minimum and maximum y values .
query for the results of a bounding box
query the provided bounding box in the provided projection
query for the results of a query
get the bounding box of the feature table
counts the number of elements in the specified bounds .
returns an iterator over the feature row values .
creates a downsampled bitmap from a byte array .
encodes a bitmap to a byte array .
sets the image to the given bitmap .
sets the { @link <unk> } configuration file .
get the zoom level for the zoom level
adjust the bounds of the bounding box in the bounding box
convert the bounding box to the bounding box
get the tile bounding box from the tile grid and zoom level
get the web mercator tile bounding box from the google maps api tile grid and zoom level
retrieve the bounding box results from the tile matrix
get the tile grid results from the tile matrix
query for tiles in the tiles in the row and zoom level
query for tiles at the zoom level
get the approximate zoom level for the provided width and height in the default units
get the approximate zoom level for the provided width and height in the default units
get the closest zoom level for the provided width and height in the default units
get the approximate zoom level for the provided width and height in the default units
query by tile grid
query by tile grid
get the count of tiles in the table
get the zoom level for the zoom level
get the coverage data value for the image
get the pixel value as a float .
get the pixel values of the image .
no - op .
get the coverage data value for the image
get the coverage data values
draw a tile with the specified tile values .
draw a coverage data image tile .
draw a coverage data image using the tile width and height
draw a coverage data image coverage data to the tile width and height
creates an image cache file .
set the pixel value of the image .
create a tile table with metadata
project a geometry index to the database .
get the cached geopackage or open the geopackage file with the specified name
/ * ( non - javadoc )
get the row by id .
get the row for the row
/ * ( non - javadoc )
sets the columns for the sheet .
moves the cursor to the next table
get the contents of the contents of the contents of the contents of the contents of the contents of the provided projection
returns a list of rows that match the given criteria .
query by id
query by tile grid type
get a rectangle with the specified bounding box in the bounding box
get a rectangle with rounded floating point rectangle with the specified width and height
returns true if the specified rectangle intersects with the specified rectangle .
returns <code > true< / code > if <code > rect / code > intersects with <code > <unk> / code > .
returns whether or not the specified rectangle intersects with the specified rectangle .
returns whether or not the specified rectangle intersects with the specified rectangle .
returns a sorted list of databases .
get a list of databases
/ * ( non - javadoc )
returns the list of databases .
returns a list of all the databases in the sorted order .
returns a sorted list of all external databases .
/ * ( non - javadoc )
returns a set of {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
deletes the database .
/ * ( non - javadoc )
create a geopackage
create a geopackage
create the extension for a geopackage
/ * ( non - javadoc )
create a geopackage
{ @inheritdoc }
copy the contents of the supplied input stream to the specified destination file .
/ * ( non - javadoc )
{ @inheritdoc }
get the geopackage with the given name and file name .
create a geopackage or update the geopackage extension
get the geopackage with the specified name .
export a geopackage
get the geopackage with the specified name
download a tile from the url
write a geopackage
open a geopackage
get the geopackage
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
connect to the database .
rename the repository
overrides the default implementation of {
/ * ( non - javadoc )
/ * ( non - javadoc )
validate the database and close the error .
validate the database and close the sqlite database .
creates a prepared statement for the given sqlite database .
connect to the sqlite database
returns true if the index is valid for the given sqlite file .
add a collection of databases .
converts a collection of strings to a list of external variables .
import geopackage geopackage
get the list of packages packages
open a geopackage
get the geo data at the specified path .
<p > open the database for the database . < / p >
create a query
create a new geometry index
create a new geometry index
populate a new geometry index from the given index and envelope
delete the metadata cascading
delete the where clause
delete the contents of the specified table
create or update the given { @link geometry } .
{ @inheritdoc }
/ * ( non - javadoc )
get the contents of the contents of the specified table
get geometry metadata
get the contents of the specified table
get the bounding box of the table
get the bounding box of the table
get a cursor
query for features within the bounding box
count the number of tiles within the bounding box
build an envelope based on the bounding box
get the extension for the geometry envelope
count the number of objects in the geometry envelope
build a query builder for a geometry envelope
count the number of objects in the geometry envelope
create a { @link map } from a { @link cursor } .
add a row to the row row
called by {
{ @inheritdoc }
draw a tile with the provided feature count
draw a tile at the specified tile width in the image .
draw a tile on the canvas
get a list of { @link <unk> } s for the given id .
get the bounding box of the bounding box of the bounding box
/ * ( non - javadoc )
get the feature table
get the feature dao
get a tile from the tile table
get the tile dao
get the attributes dao
set the contents of the user
{ @inheritdoc }
/ * ( non - javadoc )
reads the contents of the given { @link resultset } and returns a { @link cursor } object .
get the primary key column for the table
get a media mapping for a table
get a bo s simple attributes dao
get the list of unique mappings for the base table
adds a relationship between the related table and related related table .
judge has a mapping with the given id
{ @inheritdoc }
generate a tile from the contents of the tile table
count the number of ids in the result set .
adds the extension to the geopackage
read a table from the geopackage
get the tile from the request bounding box in the request projection
draw the tile from the tile results
reproject the tile to the requested projection
get the tile related to the tile bounding box
retrieve the tile results for the provided bounding box
******************** methods *******************************************
sets the scale of this polygon .
set the line paint .
sets the style of this polygon .
draw a tile width and zoom level into a tile image .
draw a tile image at the specified zoom level and zoom level .
draw a tile image around the tile x and zoom level
query for features in the tile matrix and zoom level
draw features for the feature bounding box
query for features in the x y and zoom level
query for features in the bounding box projected correctly
get the bounding box from the given projection
get the tile bounding box from the bounding box
draw a tile image from the tile x and zoom level
note : does not simplify any points .
set the feature row style into the polyline options
set the feature row style into the polyline options
draw the polygon
draw the line paint .
draw the { @link paint } with the given { @link feature } .
get the paint for the style .
get the feature paint color .
get the style paint for the style
check if the bitmap is a view .
get the document paint .
get the paint for this style .
set the style for the geometry type .
get the paint for this style .
puts a buffered image into a bufferedimage .
create a buffered image for the icon row
{ @inheritdoc }
create a new column
returns an iterator over the feature row values .
returns an <code > iterator< / code > over the unique ids of the geometry <code > <unk> / code > .
<unk> - <unk>
dispose of the bitmap layer .
dispose of the layered graphics .
returns the bitmap for the specified layer .
returns the canvas for the layer .
<editor - fold defaultstate = collapsed desc = image related >
get the style mapping for the feature table
delete the style dao
get the { @link <unk> } for the related table
get the feature table style for the feature table
get the id of the feature id
get the style for a geometry type
get the icons for the feature table
get the icon row for the feature row
get or create the extension for the feature table
create the feature styles for the feature table
set the feature row style into the feature table
set the feature row style into the feature options
get or create the extension for the feature table
create a feature row for the feature table
get the style for the feature table
set the style for the geometry table .
get the style of the feature shape for the given feature table id and feature id .
get the style for a geometry type
returns true if the feature table exists for the feature table
get or create the icons for the feature table
create a feature row for the feature table
get the icon row for the feature row
get the number of feature shape for the feature table
get the number of feature shapes for the feature table and feature id
/ * ( non - javadoc )
check if the feature table has the icon in the feature table
get the style mappings for the geometry type
get the icons for the provided feature id
set the style for the feature table
set the style defaults for the feature table .
set the style for the feature table
set the style for the feature table
sets the image icons .
set the icon relationship for the feature table
set the style for the feature table
get the icon relationship for the feature table
set the style for the feature table .
set the feature row style into the polyline options
set the feature row style into the polyline options
set the feature row style into the polyline options
set the feature style into the style table .
set the feature style into the marker table
get the style for the feature table
set the style defaults for the feature table .
set the style of the feature row .
set the style of the feature row .
get the default style for the feature table
create the style relationship for the feature table
set the style into the polyline options
get the icons for the feature row
caution : this option is used to set the icon to the icon .
set the icon relationship for the feature table
build the icon relationship for the feature table
set the icon relationship for the feature table
set the style for the feature table
set the icon relationship for the feature table
gets or creates a cell style .
get or create the icon or null if not found
get the style mappings for the related id
create the icon relationship for the feature table
create the icon relationship for the feature table
create the style mappings for the feature table
delete the style for the feature table
delete the rtree spatial index for the feature table
delete the icon relationship between the feature table and feature table
delete the rtree spatial index .
delete the icon relationship for the feature table
delete the geometry type
get a list of all mappings in the feature table
creates and returns a list of all mappings for the given base id .
get a list of all mappings in the feature table
get the list of all the mappings for the given base id .
returns the image as byte array .
/ * ( non - javadoc )
get the pixel from its coordinate
reads the pixel data from the input stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
draw the feature
draw the feature
draw the geometry
draw the line
draw the polygon
add a path to the bounding box
convert a { @link polygon } to a { @link polygonoptions }
draw the point
get the data for the given space .
get or create a feature table
resize the cache .
initialises the internal workbook .
/ * ( non - javadoc )
set the feature row style into the polyline options
get the feature style for the feature type
set the style for the geometry type
get the style for a geometry type
/ * ( non - javadoc )
get the icon
set the style for the geometry type .
set the icon icon for the feature row
set the feature row style into the polyline options
set the feature row style into the polygon options
set the style for the geometry type
set the style for the geometry type .
set the feature row style ( icon or style ) into the marker options
set the icon in the marker options
create a media table with the given column name and column list
create a new column
read a table from the database
execute sql .
sets the width and height of the column .
sets the height of the column .
get the derived width and height from the image .
returns the length of the tile at the given density .
draw the tile at the specified width and height
moves the cursor to the next position in the list .
{ @inheritdoc }
read a user value
{ @inheritdoc }
/ * ( non - javadoc )
moves to the next position in the stream .
create a media table with the provided table name and additional columns .
read a table from the table
set the default color
returns the percentage of the color or 0 if the color is null .
set the default fill color
validate the given color .
build a color from a gray color .
get the { @link <unk> } for the current thread .
recursive method that takes a collection of { @link <unk> } s .
get the last indexed query location .
sets the index order for the feature index .
set the order location for the feature index .
/ * ( non - javadoc )
returns the index of the first entry in the list .
get the last index for the feature index
returns { @code true } if { @code type } is { @code true } .
returns true if the feature table index is indexed
delete the index of the given tabular type .
delete segments from the log .
delete the geometry index for the given geometry id .
delete the feature index for the feature index
retains the index of the feature index
filters out the given collection of { @link <unk> } s .
returns true if the feature index is indexed .
returns a list of {
returns the last indexed indexed date .
query for the feature index results
get the number of features in the bounding box
get the number of features within the bounding box projected correctly
query for feature index results
returns true if the index of the feature index is indexed .
query for the tile x and zoom level
query for features in the tile matrix and zoom level
writes a file to a directory .
resolve topic path .
get the type of geometry type
set the geometry extension of the geometry .
get the bounding box from the url
replaces all the variables in the url with the given z value .
check if the given url contains the given url .
get the projected tile bounding box from the google maps api tile coordinates and zoom level
replace the bounding box with the bounding box
/ * ( non - javadoc )
returns the size of the feature row .
/ * ( non - javadoc )
get the index of the geometry
create a feature table
index a feature row index
returns the index of the first occurrence of the specified index in the database .
returns the index of the first row in the result set .
draw the geometry
update the last indexed table
delete the feature table
delete the geometry index from the table
returns true if the table is indexed
returns true if the last index exists .
query the feature table
query for geometry index
get the count for the feature bounding box
query the geometry envelope
get the index of the feature envelope
query for a bounding box within a bounding box
query for geometry features within a bounding box
project the bounding box of the provided bounding box and projection
given a { @link <unk> } return a { @link list } of { @link <unk> } objects .
get the feature row for the feature type
returns true if the geometry index is valid .
get the tile data for the feature table
get the feature tile links for the specified tile table
get the bounding box of the feature bounding box
get the tile grid for the given zoom level
get the linked features table .
/ * ( non - javadoc )
query by id and related id
the bounding ids of the table
the bounding related ids of the table
query by tile id
query by tile id
query by id and related id
query by id and related id
create a {
delete the database .
rename the contents of the specified table
rename the rows
get all the available geo data .
get the list of all the available events
get the geo data for the given database
get the geo data for the specified id .
get the geopackage or create a new one if needed
returns true if the given database is external .
get the { @link <unk> } for the specified path .
<unk> > <unk>
<unk> > <unk>
{ @inheritdoc }
creates a { @link <unk> } for the given { @link cursor } .
merges the {
find attributes of a table column .
returns an iterator over the feature row values .
returns an <code > iterator< / code > over the ids of ids contained in this <code > values< / code > object .
called when a view has been created .
attach a { @link <unk> } to a { @link <unk> } .
add a view to the view
/ * ( non - javadoc )
create a custom view .
called when the activity is first created .
/ * ( non - javadoc )
returns a { @link <unk> } for the given { @link outputstream } .
append an append event to the logger .
returns a { @link java . io . inputstream } from the given { @link <unk> } .
attempts to load a resource from the classpath .
sets the logback configuration to the platform .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the canonical address of the given header .
creates a new thread pool executor .
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
adds a new option to the configuration .
returns the value associated with the given key as a string .
/ * ( non - javadoc )
<p > escape . < / p >
escapes the characters in the given string .
<p > append to the <code > tostring< / code > cdata section of a <code > string< / code > . < / p >
removes all matching patterns that match the given regular expression .
removes all matches of the given pattern .
removes all matching patterns from the given collection .
removes all matches of the given pattern .
writes an int to the given byte array starting at the given offset .
reads a 32 - bit integer into a byte array .
converts the top - level { @link node } to a { @link converter } .
returns the node s value or <code > null< / code > if the node is null .
{ @inheritdoc }
returns a {
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a parameterized type to a string .
create a server socket for this connection .
<p > <unk> . < / p >
/ * ( non - javadoc )
initialize this trie .
creates a { @link <unk> } instance with the given context class name .
/ * ( non - javadoc )
check if the sd card is available .
get the directory to be used for backup files .
returns the database name of the database .
sets the name of the ca file .
/ * ( non - javadoc )
create a new file dependency
returns the absolute file path for the given filename .
/ * ( non - javadoc )
determine if the logging event is matched by the logging event .
method to construct { @link <unk> } if necessary .
returns the filter that should be used for filtering the filter .
/ * ( non - javadoc )
returns a newly - created {
<p > <unk> . < / p >
create a new {
creates an array of { @link keymanager } instances for the given { @link keystore } .
creates a { @link javax . net . ssl . trustmanager } for trust store .
create ssl key store from system properties .
/ * ------------------------------------------------------------
returns the url for the given resource location .
<p > starts a new {
/ * ( non - javadoc )
/ * ( non - javadoc )
stops the context .
<p > <unk> . < / p >
<p > <unk> . < / p >
creates a goro instance of { @link <unk> } .
this method will append a throwable to a stringbuilder .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
classify the first line of the specified {
returns the entry for the given key if it exists .
returns the value associated with the given key or null if not found .
returns the meta - data associated with the specified key .
/ * ( non - javadoc )
convert a string to a format object .
{ @link <unk> ( string string ) }
uninstalls if the source file is on the same physical volume .
returns true if the image is an image .
get the system property .
returns the value of a property from the system properties .
gets the system property .
returns the value of the system property .
returns the maximum element of this stream according to the provided key .
get boolean value .
{ @inheritdoc }
get the array of caller declared in the caller .
sets the context map for the logging context .
get query string .
loads the value of the specified property from the specified file .
/ * ( non - javadoc )
extracts the stack trace for the caller .
returns true if the given package is in the list of classes .
add a new status to the alluxio status .
adds a listener to the response .
returns the implicit action <unk>
obtains the list of actions applicable to the given element .
initialize client class loader .
get the value of the specified key .
gets the boolean value for the given key .
<p > <unk> . < / p >
returns an array of { @link method } s for the given class .
get the property descriptors for the given class .
starts the <unk> .
/ * ( non - javadoc )
called when a connection failed .
sets the value of the target property .
adds the xml description to the temporary file .
close the output stream .
sets the output stream to the given output stream .
append an event to the end of the channel .
resets the components of this { @link uicontainer } .
adds a listener to the console .
todo : javadoc
returns the value of the named parameter .
/ * ( non - javadoc )
calculates the severity level for the log event .
/ * ( non - javadoc )
/ * ( non - javadoc )
获取 { @link keyfactory }
closes the given { @link closeable } logging any exceptions that might occur .
attempts to close the given { @link socket } swallowing any exception .
closes a { @link serversocket } .
returns an instance of {
select the list of protocols supported by this client .
select cipher suites for cipher suite .
returns a string array containing the values of the given <code > <unk> / code > <code > <unk> / code > and <code > <unk> / code > .
creates a new { @code <unk> } instance .
convert a string to a scope .
similar to {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
removes the parent level from the logger .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a child logger .
filter the message
this method returns {
log a log4j event .
/ * ( non - javadoc )
create parent directories .
adds a filename to the given base directory .
/ * ( non - javadoc )
convert an int value to a java level .
convert a string to a level .
convert a { @link java . util . logging . <unk> } to logback .
/ * ( non - javadoc )
returns true if the given object is an instance of the given type .
<p > creates a new instance of { @link keystore } . < / p >
/ * private methods
returns a set of resource urls with the given base resource name .
loads a resource from the classpath .
returns the class loader of the specified object .
get the classloader for the specified class .
returns the class loader for the specified class .
loads a class from the specified class name .
/ * ( non - javadoc )
appends the logging event to the file .
returns an {
sets the logging context .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the index of the first occurrence of the given {
/ * ( non - javadoc )
creates an instance of { @link javax . net . ssl . ssl . ssl . trustmanager } .
/ * ( non - javadoc )
returns true if the source file is on the target file .
close the <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the logging value for the udf .
returns the filter that should be passed to the { @link org . slf4j . common . filter . <unk> }
/ * ( non - javadoc )
create a composite url converter for the given keyword .
get the compression type of the file
/ * ( non - javadoc )
<unk> mojo . <unk> ()
{ @inheritdoc }
builds the interpreter for the interpreter
<p > <unk> . < / p >
/ * ( non - javadoc )
returns the value of the property with the given name .
sets the name of this context .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds an element to the queue .
returns the type of the specified element .
returns the next element in this buffer .
removes the given number of bytes from the buffer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a { @link jndiconfigurationsource } .
{ @inheritdoc }
initialize the filter .
return the flag set of flags for the given flags string .
return a string representation of the flags for the given flags string .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
removes all clients .
/ * ( non - javadoc )
provision slave container and wait for it to finish .
initialize client .
removes the client from the registry .
/ * ( non - javadoc )
calls { @link <unk> ( java . util . map ) } and { @link <unk> ( java . util . map ) } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a string value to an object .
returns the { @link java . lang . reflect . method } object for the given { @link class } type .
return the filter that should be applied to the chain
/ * ( non - javadoc )
add events to the bean definition .
returns the list of { @link action } s that match the given path .
returns the string that matches the given path .
unpack bundled native libraries .
configure logback logging system .
this method copies a collection of logs into an array of <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates an { @link sslcontext } .
/ * ( non - javadoc )
returns the <unk> of the <unk> .
set the syslog facility .
push the edge of the given edge stack .
load the database file .
open sql .
/ * ( non - javadoc )
{ @inheritdoc }
<p > <unk> . < / p >
{ @inheritdoc }
inserts a new metadata object into the database .
helper method to extract a throwable from the table .
bind the logging event to the database .
bind the event to the database .
/ * ------------------------------------------------------------
returns true if the logging key exists .
get the map of render maps for the given event .
fetches the first column of the first row in the table .
fill the caller data .
update exception statement .
gets the length of the prefix token .
return the default pbkey for this connection .
introspects the javabean property of the bean .
sets the value of the given property to the given value .
sets the property .
checks if the given class is an interface or not .
gets the script property value .
/ * ( non - javadoc )
returns the next node in the set .
expression3 = <unk>
visits a node .
execute a scan .
/ * ( non - javadoc )
opens an input stream to the given url .
this method removes the head event from the beginning of the queue .
gets the name of the event name .
returns true if the given port is available .
closes the connection .
checks if the cause is an instance of { @link <unk> } .
set the default fallback hosts to the hosts .
this method provides access to { @link <unk> ( <unk> <unk> ) } .
search for the content of this index
update an index
this method adds a { @link <unk> } to a { @link <unk> } .
<p > <unk> . < / p >
sets the delay between delay between two operations .
ensures that the local index of the resource has been set .
save the plugin directory .
registers the { @link <unk> } object to be used .
get the last date and the last run date .
execute the build task .
same as {
performs a given { @link <unk> } for the given query .
this method is deprecated please use { @link <unk> ( query <unk> ) } instead .
compiles the given set of { @link <unk> } s into a single { @link <unk> } .
creates a request with the given set of query parameters .
creates a { @link paymentintent } with the given { @link strategy } and { @link <unk> } .
<p > performs a query on the given { @link <unk> } using the given { @link <unk> } . < / p >
get a list of multiple queries with multiple queries
todo : explain
loads and returns a { @link <unk> } instance with the given { @link <unk> } .
returns a { @link <unk> } object for a { @link <unk> } .
override to return an object
search for an object
this method is intended for internal use only . returns an empty object .
gets the events for the object with the given id .
this method is used to get an index from an index
this method is used to retrieve a specific object from an offline region .
get several objects from this index
get several objects from this index
get several objects from this index
gets the online information for a specific application . <p > this method is not affected by the operation .
get several objects from this index
cached version of { @link <unk> ( string <unk> ) } .
/ * ( non - javadoc )
initialise the online request for the given { @link <unk> } .
loads the data from the current facet .
/ * ( non - javadoc )
search for the content of this index
search for content
creates a new query with the specified set strategy .
browse all index content
returns a single page of results that can be sent to a single page .
search for disjunctive searches .
search for a single facet values .
search for the values of the given facet values .
search for an existing facet .
loads an object from the index .
adds an object to the request asynchronously with the given parameters .
add an object to a json object
adds a { @link <unk> } object to the request .
same as {
update partially typed object
update an object asynchronously
updates an existing one of the specified objects .
override this to update several records in one or more partially
search for an object
get an object from a list of attributes
cached version of {
this method is used to get several objects from this index
waits for a task to be added .
deletes an object from the server .
deletes an object from a list of objects
deletes several objects from this priority ( using { @link <unk> () } ) .
deletes several objects from this index
finds all records matching the given query and sorts them accordingly .
get the settings for the index
sets the settings of the request .
set the settings for this index
waits for a session to be completed .
browse all index content
clear the index of the index
add a new object
delete several objects
get an object from a jsonobject
get an object from a list of attributes
get several objects from this index
get several objects from this index
get an object from a list of attributes
delete several objects
add an object to a jsonobject
delete several objects
delete property values .
delete all items within a query
search in the facet values
search the content of this index
waits for a task to be sent .
get all settings
update a list of synonyms
delete all index entries
this method returns multiple queries for multiple queries
build query string .
parses the given query string and returns a { @link string } representation of it .
set an boolean value to the query parameter referenced by the given name .
region > locatable interface
starts a query around the given radius .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the map of facet members
creates new instance of { @link <unk> } .
writes a bounding box inside a given { @link <unk> } .
convert a { @link latlng } to a { @link list } .
add a { @link polygon } inside a { @link polygon } .
get a date value from a { @link <unk> } .
sets the target type .
register a stop words
converts { @code <unk> } to { @code list<string > } .
sets the query parameters to be used .
starts a search query .
search the number of disjunctive facets and returns them as a jsonobject which contains number of disjunctive facets .
search number of disjunctive facets .
search for disjunctive up facets and facets .
loads and executes a query .
search index content
this method is used to build multiple queries with multiple queries .
search for an object
this method is used to asynchronously get the index from the current position .
loads and returns the settings for the given { @link <unk> } .
browse all items asynchronously
creates a new { @link request } object from the given { @link <unk> } .
/ * ( non - javadoc )
search for the facet values
builds a { @link request } from the given { @link file } .
builds a { @link request } from raw resources .
search for disjunctive facets .
delete by query
converts a list of json objects to a { @link jsonobject }
save an object to a jsonobject
partially partially update
this method writes a string to a temp file
this method returns a list of items with the same name as the given index .
returns the index for the given index .
checks if the given file exists .
returns a {
/ * ( non - javadoc )
fetches an index from an index .
delete index offline from index offline
this method is used to move an index to another index .
/ * ( non - javadoc )
send a search task
recursively delete a file .
write the input stream to a temporary file .
set parameter value .
set a default header value .
add a user agent to the list of users .
minioclient . <unk>
reads the contents of an inputstream into a byte array .
get a list of objects from this index
retrieves the raw data for a method
reads a connection from the given connection .
get a list of hosts that are alive .
encodes a latlng into a { @link <unk> } .
takes a { @link radius } and stores it as a { @link <unk> } .
get the next radius of this facet . <p >
----- static methods -----
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a { @link <unk> } handler to the given { @link <unk> } .
use this method to perform a search on a { @link <unk> } .
blocking method to create a { @link token } for a particular facet values .
blocking method to create a new { @link token } from the given { @link <unk> } .
browse all index content in this index
deletes an index .
copy an existing index
copy an existing index
this method returns a snapshot of all the queries with the given set strategy .
submits a query for multiple index queries
asynchronously executes a batch of { @link <unk> }
schedules a batch of { @link io . micronaut . app . executor } with the given { @link <unk> } .
delete all settings
delete one object
search index values in facet values
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
removes the mapping for the given key from this cache .
/ * ( non - javadoc )
adds the performance statistic to this stats object .
/ * ( non - javadoc )
/ * ( non - javadoc )
compares two version strings .
/ * ( non - javadoc )
<unk> > <unk>
initialize the simulation .
<p > <unk> . < / p >
returns the value of the property with the specified name .
<unk> 直接读取对象属性值 不经过getter函数 .
<unk> > null< / code > <unk>
launch the {
get the pid of the jvm in the osgi framework .
returns a pseudo - random { @code <unk> } .
formats the given value as a percentage string .
formats a double .
returns a formatted version of the given { @code format } .
this method will create a { @link keystore } object for the { @link <unk> } .
read a json string from the given byte array .
converts a hexadecimal value to a hex value .
read a json string .
write a string to the stream .
<p > perform a java <strong > escape< / strong > operation on a <tt > string< / tt > input . < / p >
/ * ( non - javadoc )
reads non - escaped characters from the stream .
read a chunk of bytes from the stream .
read a float from the stream .
reads a base64 encoded data from the input stream .
creates a new messagebuffer instance .
/ * package
parses the header .
{ @link <unk> ( mutation ) } method .
replies the absolute path to the given location .
/ * ( non - javadoc )
replies the active part in the workbench .
replies the active part in the workbench .
/ * ( non - javadoc )
this method is used to report the <unk> of the <unk> .
/ * ( non - javadoc )
gets the byte array at the end of the pool .
writes a byte buffer to the pool .
create the context menu .
toggle the default handler view .
starts the viewer .
add a new server to the javac data .
gets an enumeration of the available resource values .
get whether the element is kept alive .
/ * ( non - javadoc )
get a parameter which is passed to the parent element .
sets the href attribute of the lock .
returns the dependency depth .
/ * ( non - javadoc )
returns the <code > owner - type< / code > element .
add a depth - first child to the tree .
set whether this element is shared
returns the owner of this element .
add a child to this node .
<p > gets the name of the specified preference . < / p >
creates a { @link <unk> } from a { @link document } .
checks if the element is a shared child .
/ * ( non - javadoc )
reads a sparse condition token .
{ @inheritdoc }
returns the activitycontext for the given entity .
this method gets called when a { @link <unk> } property is changed .
set the <unk> constraint .
/ * ( non - javadoc )
builds runtimes .
returns the java project specified by the given launch configuration or <code > null< / code > if none .
/ * ( non - javadoc )
replies the dirname of the given rule .
/ * ( non - javadoc )
read mappings from the input stream .
given a full name and a full name find the original name .
appends the given url to the end of the url .
replies the relative path of the given member .
protected static final int <unk> = new <unk> () ;
returns a vector of elements from a url .
returns the short name of the given url .
returns the parent url for the given url .
returns the host of the given url .
removes the asset from the url .
/ * get content from string
this method determines if the given url is contained in the stack .
registers a menu resource .
/ * ( non - javadoc )
get the content type .
returns an { @link inputstream } that can be used to read the contents of the document .
returns the html representation of this node .
add a response to the response .
add a { @link <unk> } to the { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
set the href attribute .
creates a { @link <unk> } from a { @link document } .
return an enumeration of the values of the specified href .
inserts the href into the url .
remove the given href .
/ * ( non - javadoc )
propfind helper method .
add a folder to the list of files .
siehe syntaxelement :: <unk> ()
propfind helper method .
/ * ( non - javadoc )
returns an enumeration of the available export elements .
returns an enumeration of all the property values in the batch .
{ @inheritdoc }
runs a breadth - first checks starting at the first node .
set the response description of the passed in element .
create a new { @link <unk> } .
add a value to the array .
sets the value of the given option to the given value .
creates an { @link icon icon } from a byte array .
reports a bound property change event to listeners .
/ * ( non - javadoc )
scans the swagger annotations of the given classes .
returns a { @link collection } of { @link <unk> } objects .
/ * <unk>
returns true if the proposals are contained .
returns an array of { @link <unk> } objects .
add a child element to a parent element .
add a child element .
returns a shallow copy of the given node .
creates a new { @code element } from the given { @code document } .
sets the namespace for the given element .
intercept the given message payload .
asserts that the { @link object } is not { @code null } .
asserts that the { @link object } is not { @code null } .
checks if the given node is a text node .
replies the element that corresponds to the specified element .
adds a node to the given node .
adds a child element to the current element .
finds the first child with the given name .
adds a child element to the current element .
gets the text of a child element .
returns the first child of the given parent node .
gets the first child element with the given name .
gets the first child element with the given name .
returns the first child of the given parent node .
returns the last child element of the given parent element .
get the parent of the given parent element .
set the namespaces for the given element .
get the next sibling of the given element .
returns the next sibling of the given element .
get the value of a child element .
returns the simple name of the given name .
adds the given { @link element } to the given { @link element } .
returns the string representation of the given element .
returns the simple name of the given name .
adds the given { @link element } to the given { @link element } .
register a { @link qualifiedname } with the given { @link element } .
----- interface <unk> -----
gets the text of a child element .
add a { @link element } from the given { @code element } .
----- public static methods -----
returns true if the node is a node .
replies if the given node is a <unk> element .
rewrite the given xmlfile
/ * --- private methods ---
extracts a child element from a parent element .
adds a new child element to the given parent element .
resets the zip file to the specified output stream .
creates the actions for a rule .
adds a connection to the source .
/ * ( non - javadoc )
remove a connection from the connection manager .
sets the location of the property .
sets the value of the specified property to the given value .
sets the size of the receiver .
inserts the given array of constraints into the given array .
set the zoom level for the zoom level
parse a listing .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
initialize the viewer .
returns true if this vertex intersects the specified vertex .
returns true if this frustum intersects the specified cuboid .
******************** methods *******************************************
/ * ( non - javadoc )
gets the resource as a string .
returns the resource bundle for the given key .
returns the screen builder for the rule builder .
/ * [ deutsch ] <p > formatiert die <unk> des angegebenen <unk> . < / p >
sets the date / time formatter for the given date and pattern .
returns the version of the default repositories .
/ * ( non - javadoc )
assert that the given exception is error .
logs an error message .
factory method for creating the repeatingview .
adjust the grid layout .
applies the font to all fields of this class .
/ * ( non - javadoc )
this method inapp
/ * ( non - javadoc )
/ * ( non - javadoc )
create the page editor .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the visibility of the field .
returns { @code true } if { @code name } is { @code null } .
reports a bound property change event to all listeners .
fire property change event .
add a value to the map .
sets the value of the specified preference overriding the values in the map .
/ * ( non - javadoc )
initialize the bars .
/ * ( non - javadoc )
<p > <unk> . < / p >
adds the applet .
builds the {
/ * ( non - javadoc )
returns the short name of the given url .
converts a string to a uuid .
encodes a byte array into base64 format .
create a new context .
create a file .
gets the http sessions table .
create the table .
<unk> > <unk>
<unk> file .
<unk> > <unk> { @link <unk> } <unk>
returns an enumeration of all of the keys contained in this {
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a value to the given field .
adds a token to the tree .
add a child to this node .
set the contents of a file in a compilation unit .
determine if this request can be imported .
/ * ( non - javadoc )
add the given { @link <unk> } to the given { @link <unk> } .
adds a condition to the set of conditions .
assert that an object is not null .
<p > validate that the argument condition is { @code true } ; otherwise throwing an exception with the specified message . this method is useful when validating according to an arbitrary boolean expression such as validating a primitive number or using your own custom validation expression . < / p >
returns a {
returns the textual representation of the node .
returns the value of { @link <unk> () } .
add a status mapping .
returns the last line in the csv file .
<unk> . <unk>
returns a list of {
binds the given { @code message } to the given { @code binding } .
bind the given message with the given substitution string .
bind the resource bundle to a string .
convert a string to a string .
convert a url to a uri .
create a stack based on the type of the given type .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the index of the first occurrence of the specified element in the array .
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is called when a new certificate is detected .
visit an object .
<p > <unk> . < / p >
creates a new { @link <unk> } instance .
creates a new instance of { @link <unk> } .
return an enumeration of all the sets of the xml nodes and those in the node .
/ * ( non - javadoc )
create the page area .
/ * ( non - javadoc )
sets the error message .
/ * ( non - javadoc )
creates a new locator element with the given locator .
start unmarshalling the report .
creates a <unk> .
returns true if the given object is the same as this one .
returns true if the condition is valid .
creates a sparse condition .
parse the arff file .
adds a { @link <unk> } element .
add a { @link <unk> } to the { @link <unk> } .
return an enumeration of the values of the specified separators .
return an enumeration of the property referred to by <code > <unk> / code > . if there are no such property <code > <unk> / code > returns <code > null< / code > .
creates a new instance of { @link <unk> } .
this method initializes <unk>
get the adapter documentation .
obtains the content of the url .
http : // stackoverflow . com / questions / <unk> / how - to - be - used - to - be - used - for http : // stackoverflow . com / questions / <unk> / how - to - be - used - to - be - used - for http : // stackoverflow . com / questions / <unk> / how
the status of this method .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the priority of the zoom interval .
add { @link <unk> } to the { @link <unk> } .
add a { @code <unk> } element to the { @code <unk> } .
/ * ( non - javadoc )
get the name of the child element .
/ * ( non - javadoc )
execute the query .
handle pull results .
sets the value at the specified index to the given value .
/ * ( non - javadoc )
/ * ( non - javadoc )
finds classpath items from a prefix .
reads the line and column from the given document .
calculates the fixed point rows for a given graph .
/ * ( non - javadoc )
creates a { @link <unk> } object for the given { @link <unk> } .
returns the container for the given node .
replies the image descriptor for the given image path .
registers an image with the given filename and filename .
/ * ( non - javadoc )
add a vertex to the tree .
returns the index of the first node in the list .
gets the row width .
prints the query .
optimize the optimize shape
get the value of the <unk> property .
build the context menu .
{ @inheritdoc }
/ * ( non - javadoc )
******************** initialization ************************************
compute and set the bounds of a circle .
/ * ( non - javadoc )
compilationunit = [ <unk> ]
$non - nls - 1$
/ * ( non - javadoc )
sets the <unk> from the given <unk> .
sets the href attribute of the entity .
extracts the member from the response .
/ * ( non - javadoc )
copy source file to destination .
/ * ( non - javadoc )
/ * ( non - javadoc )
propfind helper method .
gets the content from the server .
/ * ( non - javadoc )
--- private methods ---
webdav <unk> method implementation .
init method .
validate the properties of a resource .
return the version of the resource .
return the head of the response .
/ * ( non - javadoc )
read some attributes .
returns a { @link <unk> } instance .
write out the bitmap .
flush the lock .
retrieves the properties of a document .
returns the value of the property with the given name .
render the content of the response .
/ * ( non - javadoc )
set the properties .
/ * ( non - javadoc )
sets the given version of a document .
the method to get the version information from the server .
remove a tombstone .
examines the status code of a status code and a production .
returns true if the document exists .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds an error to the list of errors .
return the <code > <unk> / code > of the passed in <code > <unk> / code > .
creates an enumeration of the fields of the given { @link qualifiedname } .
/ * ( non - javadoc )
called when a bound property is changed .
get the content length of this request .
/ * ( non - javadoc )
convert a byte array to a hex string .
convert an array of bytes to a hex string
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the children of the given object .
creates a { @link <unk> } from the given { @link document } .
checks if all the nodes in the list are all child nodes .
/ * ( non - javadoc )
get the value of a property edit property .
get the value of a single property .
strips the levenshtein distance between two strings .
/ * <unk>
<p > <unk> . < / p >
gets the name of the property .
gets the name of a property .
<p > checks if a method is an accessor method . < / p >
<p > <unk> . < / p >
updates the viewer .
returns the length of the content .
transfer bytes from base64 to an output stream .
/ * ( non - javadoc )
main method .
this method is used to report the other errors .
pushes back a character to the front of the pushback buffer .
remove the next quoted string from the input string .
returns the index of the next token .
skip whitespace starting at the given position .
* * * * * * * * * * * project * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
get the content of a resource
create a new <unk>
prepare the classpath for the given resource
enumerates all properties in this hashtable .
returns the value associated with the given key as a string .
returns the age of the age in seconds .
get the content length of this object .
returns the current transaction isolation level .
returns true if the overwrite is true .
check if the button is collapsed .
parses the timeout .
returns an enumeration of all of the keys contained in this dictionary .
set a clip property .
/ * ( non - javadoc )
load users .
reads the contents of a file into a string .
/ * [ deutsch ] <p > <unk> . < / p >
normalizes a string .
gets the right part of the key .
add tokens to the {
splits the tokens in the specified array of tokens .
/ * ( non - javadoc )
get the children of this node .
creates a list of the children of this node .
vr : inline
adds a list of child nodes to the list .
/ * ( non - javadoc )
prints the given node as a dom node .
print count of spaces .
parses the given json string into a { @link document } object .
creates a jsonvalue from the given value .
/ * ( non - javadoc )
discovers children of a node .
returns the parent of this <code > <unk> / code > or <code > null< / code > if no such parent .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an image descriptor for the given id .
adds a pattern to the set of init parameters .
returns the context for the given { @code origin } .
/ * ( non - javadoc )
get the { @link url } for the given { @link url } .
/ * ( non - javadoc )
adds a new connection to this context .
adds a new connection url to the server .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of the field with the given name .
returns the name of the data field .
returns the value of the next field in the response .
<unk> 无视private / protected修饰符 不经过setter函数 .
get the codebase that will be used for the proxy server .
sets the value of the given field on the given object .
set the url of the resource url .
/ * ( non - javadoc )
creates the artifact sample launcher .
/ * ( non - javadoc )
creates the rule flow .
create the artifact flow .
/ * ( non - javadoc )
returns a list of all checked items in the list .
/ * ( non - javadoc )
{ @link <unk> ( bufferedimage ) }
enumerates all properties in this hashtable .
/ * ( non - javadoc )
returns an enumeration of all the values contained in this map .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the given sre .
starts the {
restart the project .
restart the server .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
$non - nls - 1$
download the files from the given project .
create a new {
returns the name of the field .
create a new <unk> .
<p > <unk> . < / p >
/ * <unk>
/ * ( non - javadoc )
/ * ------------------------------------------------------------
loads the context .
/ * ( non - javadoc )
/ * ( non - javadoc )
add resource properties to the <unk> .
/ * ( non - javadoc )
returns the contents of the given {
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is used to load a resource .
create a resource .
/ * ( non - javadoc )
/ * ( non - javadoc )
delete a resource .
/ * ( non - javadoc )
calculates the baseline control .
bind a table to the database .
bind a member to the server .
returns the value of the parent logger .
returns the set of members .
optimize edges .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
externalizes a { @link <unk> } to a { @link string } .
create a new instance of the { @link <unk> } .
sha - 256 hash
generates a md5 hash of a request .
remove the trailing whitespace from a string .
convert a well - formed <unk> to a list .
/ * ( non - javadoc )
<unk> method .
called when the ok button is pressed .
returns true if the resource is valid .
gets the settings section of the dialog .
convert a well - formed <unk> to a list of <unk> .
generates an image tag .
/ * ( non - javadoc )
returns the base vertex of this vertex .
generate a <unk> revocation key .
<p > <unk> . < / p >
initializes the private key from the given key string .
decodes the given { @link privatekey } into a { @link <unk> } .
get an asn . 1 signature from a certificate .
initializes the private key from the given key string .
reads a private key from the given private key bytes .
/ * convert the <unk> to bytes
initializes a public key from the given key string .
get the canonical offset from the given <unk> .
converts a byte array to a public key .
<p > <unk> . < / p >
generates a byte array for the public key .
<p > encrypt . < / p >
this method decrypts the given <unk>
/ * [ deutsch ] <p > <unk> innerhalb dieses intervalls . < / p >
shuts down the producer .
initialize the <unk> .
imports multiple documents into the document .
get the partition key from the given {
method to abort the authentication process .
/ * ( non - javadoc )
method to abort the user .
initialize the client .
login to the server .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
populate the javabeans properties of this delegate object .
/ * ( non - javadoc )
returns the username for the given filename .
this method writes the database properties to a file .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the select widget options .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
clear the password .
execute the verification request .
set the urls for the application .
converts a time string into a unique id .
returns true if the string needs to be quoted .
binds the specified object to the given node .
/ * ( non - javadoc )
returns the type of the converter .
<p > <unk> . < / p >
clear the cache .
checks to see if the jdk doesn t exist
/ * helper methods
returns the class name of an object .
returns the class name of the given class .
get the package name of an object .
get the package name of the given class .
<p > <unk> . < / p >
returns the string identifying the given object .
returns true if the given object is an instance of the specified class .
convert a list to an array of strings .
get the parameter types for a method .
/ * public static void <unk> ( final class<? > t > <unk> > <unk> > { return <unk> () ) { return <unk> ( <unk> ) ; }
get the parameter types from a constructor .
find the permission for the given method .
returns the boxed wrapper class for the given class .
checks if the given object is compatible with the given class .
returns { @code true } if and only if { @code <unk> } is { @code true } .
<p > <unk> . < / p >
/ * public static object <unk> ( string methodname object args ) throws pageexception { return <unk> . <unk> ( args ) ; }
calls a method .
returns the value of the specified property in the given target object .
sets the value of the given target object to the given value .
returns a clone of the parameter descriptors for the given class .
returns the { @link propertydescriptor } for the given property name .
returns a { @link propertydescriptor } for the given { @link class } .
returns an {
sets the cache for a cache .
<unk> > <unk>
converts a { @link <unk> } to a { @link <unk> } .
returns the value of the given child node child from the given root object .
returns the html source for the given source node .
print a non - printed stack trace to a print stream .
prints the stack trace to a print writer .
<p > invoke . < / p >
read characters .
/ * and for and && then equality
/ * assignment
/ * and for and && then equality
/ * and for and && then equality
/ * and for and && then equality
/ * and for and && then equality
/ * and for and && then equality
/ * equality
/ * compare for relational
/ * multiplication for equality
/ * math for + - then multiplication
/ * multiplication
/ * unary for unary
/ * multiplication for a bunch of them
/ * <unk> : <unk>
/ * <unk> : <unk>
/ * <unk> : <unk>
/ * <unk> : <unk>
/ * <unk>
<unk> <unk> obiekty <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
returns true if the given value is a boolean .
coerce to a long .
coerce to double .
register a bigdecimal value .
<unk> > 如果给定的值为空，或者转换失败，返回默认值<br > 转换失败不会报错
to boolean .
returns true if the given value is a primitive type .
converts the given value to the specified type .
convert the value to an array of the specified type .
converts a string value to an object .
cast an object to an integer .
returns the numeric type of the two given types of the given types .
returns the numeric type of an operation .
returns a string representation of the given type .
parse a real number .
cast a { @link throwable } to a runtimeexception .
add a class to the cache .
returns the current type .
get the previous type .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the previous evaluation of the current node .
<p > <unk> . < / p >
returns the type name of the given type .
{ @link <unk> } <unk>
returns true if the given expression is an instance of the specified class .
searches for a method in the list of methods .
compiles the instance of {
<p > generate the ognl getter method . < / p >
generates the default setter setter for the given class .
returns the {
creates a class loader for the given context classloader .
/ * ( non - javadoc )
dumps this node s children to the output .
/ * ( non - javadoc )
<p > <unk> . < / p >
evaluates the ognl stack to the given value .
add a new child to this node .
initializes this node with the given node .
/ * ------------------------------------------------------------
rehashes the contents of this map into a new size .
try to escape a character .
/ * ( non - javadoc )
<p > <unk> . < / p >
returns a loggercontext .
returns a context class for the given root class .
returns a {
create a value from the ognl stack .
/ * <unk>
create a new { @link map } with the given { @link <unk> } .
returns a {
<p > <unk> . < / p >
set the root context .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
gets the value from the ognl stack .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
sets a property value .
<unk> > <unk>
<p > <unk> . < / p >
returns { @code true } if the given { @code tree } is constant { @code false } otherwise .
returns true if the given expression is a constant .
returns <code > true< / code > if <code > <unk> / code > is <code > false< / code > otherwise .
this method will wait for the server to start the server .
{ @inheritdoc }
{ @inheritdoc }
reads the contents of a file into a byte array .
{ @inheritdoc }
reads the contents of a file into a string .
create a copy of the given source file .
processes the package name from the package name .
creates an archiver for the given archive format .
clean up the given archiver for the problems .
resolve artifacts for the given artifact id .
reads the contents of a file into a byte array .
returns a set of projects that are descendants of the given project .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates the project .
adds a system property .
adds a system property .
initialize the native libraries .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package
add a value to the bucket .
returns the sum of all cells in this cell .
hides the navigation icon .
create a new instance of { @link <unk> } .
show the password dialog .
changes the contents of the directory .
returns the activity s state .
----- private methods -----
return the {
creates and returns a new { @link <unk> } with the given { @link <unk> } .
checks if the given file is a valid cache directory .
called when the activity is first created .
returns true if the specified domain matches the specified domain .
returns true if the specified <code > string< / code > matches any of the specified <code > <unk> / code > matching the specified <code > <unk> / code > . leading dots are ignored if present .
returns true if the specified <code > string< / code > matches any iana - defined generic domain . leading dots are ignored if present .
returns true if the specified <code > string< / code > matches any iana - defined country code . returns <code > true< / code > if the specified <code > string< / code > matches any iana - defined country constants . returns <code > true< / code > if the specified <code > string< / code > matches any iana - defined
returns true if the specified <code > string< / code > matches any of the specified <code > string< / code > matching the specified <code > string< / code > . leading dots are ignored if present .
converts an object to idn .
/ * ( non - javadoc )
executes a command in the foreground .
executes the background job with the given title and task id .
start the start tag .
{ @inheritdoc }
sets the switch text to the current paragraph .
read a list of inline tags from the stream .
/ * <unk>
constructs a <code > <unk> / code > from the given <code > string< / code > .
returns the hit .
clips the corners in the image .
/ * visible for testing
paint the aspect ratio .
returns whether or not the specified rectangle intersects the specified rectangle .
computes the translation for the given view .
register a command factory with the given command .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the text of the object to be displayed .
get the <unk> for a phonebook
creates a { @link span } from a { @link charsequence } .
apply the given effect to the selection .
convert a { @link <unk> } to a { @link <unk> } .
convert the given { @link <unk> } to a { @link <unk> } .
/ * package
get a { @link view } for the specified view .
get a drop down view of the specified view .
convert a <unk> to a <unk>
/ * convert paragraphs of paragraphs
performs time between two explanations .
/ * private static string <unk> ( string content ) { stringbuilder sb = new stringbuffer () ; }
create a random file mime type .
returns a uri for the given path .
{ @link <unk> ( uri uri ) } .
returns the namespace contained in a namespace uri .
/ * ( non - javadoc )
add a new xml element .
normalizes a string .
add an attribute .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the name of the file as a byte array .
get the font name from assets .
returns a new {
writes <code > len< / code > bytes from the specified byte array starting at offset <code > off< / code > to this buffer .
/ * ( non - javadoc )
reads the next byte from the input stream .
writes all remaining bytes from the input stream to the given output stream .
reads the contents of an { @link inputstream } as a byte array .
returns a { @link byte [] } representation of this { @link <unk> } .
returns a copy of the data contained in this buffer .
/ * ( non - javadoc )
normalizes the given filename by removing leading and trailing separators from unix .
/ * ------------------------------------------------------------
converts separators to a unix unix path separator .
returns the index of the last windows extension .
returns a {
******************** private methods ***********************************
pan to the coordinate system
{ @link <unk> }
add a document locator to this label
scans the input string for a unicode scan .
returns <code > null< / code > if the specified value is <code > null< / code > .
check if the current selection is selected .
parses the next line .
returns the next element in the iteration .
evaluate an element type .
/ * ( non - javadoc )
sets the parent element to the front of the list .
convert a string to lower case .
gets the value of the field with the given name .
take a picture into a bitmap .
returns true if the authority is valid .
/ * ------------------------------------------------------------
cleanup all paragraphs
returns the absolute path to the given media path .
/ * ( non - javadoc )
this method is used to update the count of the whole span .
check if the given email is valid .
returns true if the authority is valid .
sets the position of the character at the specified position .
pops the undo stack from the redo stack .
pops the redo stack and replaces it with the redo stack .
pops the undo stack from the redo stack and clears the redo stack .
pushes a new operation onto the stack .
replaces all occurrences of $ in the given string with the given replacement string .
/ * package
/ * -------------------------------------------------------------------------------
cancel this task .
decodes a { @link <unk> } from a file descriptor .
wait for all the fonts in the bundle to load .
get a { @link typeface } object for the specified { @link <unk> } .
get the font files
returns a classloader for all files in the system .
allocates a mapped byte array .
reads from an { @link inputstream }
reads a byte array from an input stream .
reads a { @link inputstream } into a { @link inputstream } .
read the contents of a url into a byte array .
returns the response as a byte array .
reads the contents of the given { @link inputstream } as a byte array .
reads a java . io . inputstream <code > java . io . inputstream< / code > object from the given <code > inputstream< / code > .
parse a named {
reads the entire contents of the given { @link inputstream } into a { @link list } of strings .
reads the entire contents of the given { @link inputstream } into a { @link list } .
read a line from an input stream .
reads the entire contents of the given { @link string } into an { @link inputstream } .
write list of lines to output stream .
write string to output stream .
write string to outputstream .
writes the given string to the given output stream .
writes a string to the given writer .
writes a string to the given writer .
writes a string to an output stream .
write string to outputstream .
write list of lines to a stream .
write the lines in a list of lines to the given stream .
write list of lines to a file .
write the lines to the response .
copy the raw bytes from the input stream to the output stream .
<unk> > <unk> > <unk> > <unk> > <unk> > <unk> >
<unk> <unk> <unk>
translates a codepoint into a character stream .
parses an xml document .
/ * /////////////////////////////////////////////////// <unk> implementation ;
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * <unk>
/ * this method is used to find a copy of an ndarray .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the prefix of the domain name .
get the namespace for the given prefix .
this method is used to create a version of the detected version .
decodes a string into a single string .
splits a string into an array of strings .
remove this element from the dom .
creates a new logger name .
/ * ( non - javadoc )
unregisters the toolbar .
registers the editor with the clipping manager .
sets the button . <p >
add a toolbar to the toolbar .
removes the toolbar from the toolbar .
过滤<br > 过滤过程通过传入的editor实现来返回需要的元素内容，这个editor实现可以实现以下功能：
insert an image into the <unk>
called when the {
set the gallery thread .
/ * ( non - javadoc )
center the border bounds .
update the base matrix accordingly
computes the max zoom size .
returns true if the selection exists in the selection .
过滤<br > 过滤过程通过传入的editor实现来返回需要的元素内容，这个editor实现可以实现以下功能：
remove the given object from the selection .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package
builds a url string from the given parameters .
url - decode a url .
check if the given character sequence is alignment .
starts a new camera app for the given activity .
called when the activity is first created .
creates a bitmap from the given uri .
returns a bitmap with the specified parameters .
rotate image with given angle .
called when the activity is first created .
this method is called when the activity s onactivityresult () method is called .
sets the output writer .
sets the namespace uri prefix and uri .
receive notification of the beginning of the document .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ====================================================================== interface
receive notification of a processing instruction .
given a namespace uri return the current prefix .
/ * ( non - javadoc )
/ * ------------------------------------------------- [ xml ] ---------------------------------------------------
writes a string to the output stream .
add the attributes object to the list of attributes .
create a boolean value from a qualified name .
/ * ------------------------------------------------- [ misc ] ---------------------------------------------------
/ * ( non - javadoc )
write a end element .
/ * ( non - javadoc )
removes all items from the list .
set the style attributes .
creates an instance of { @link <unk> } for the given { @link properties } .
a utility function to create a kinesis stream stream .
this is the main method for creating a stream if it doesn t already exist .
todo ( <unk> ) : try to get a stream from a kinesis stream .
gets the default converter for the given type .
/ * documented <unk>
~ private methods
todo ( <unk> ) : consider using this method to get information about a kinesis stream .
wait for the current thread to wait for the specified delay .
get records from the given stream .
performs the specified action with retries .
try to get an action for the given action label .
creates an {
gets the region s accessible region .
<p > <unk> . < / p >
/ * ( non - javadoc )
copy files from source to the output stream .
create a { @link java . io . url } based on the specified { @link org . apache . commons . io . <unk> } .
opens a plugin context according to the given context .
check for wildcards .
replace all occurrences of a string with another string .
convert a collection to a delimited {
/ * <unk>
handles the processing of a resource .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
build the help script .
/ * ( non - javadoc )
updates the system property with the given configuration properties .
returns the { @link properties } object for this { @link properties } .
factory method to create a new { @link org . apache . hadoop . config . configuration . <unk> } .
<p > <unk> . < / p >
----- private methods -----
/ * ------------------------------------------------------------
factory method to create a new { @link <unk> } .
creates an instance of { @link inputstream } based on the given { @link configuration } .
{ @inheritdoc }
replaces all the namespaces in this string with the given path .
<p > <unk> . < / p >
----- private methods -----
creates a new { @link executorservice } that can be used to create a new { @link executorservice } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
copy the contents of an input stream into a writer .
/ * ( non - javadoc )
verifies that the given signature is valid .
/ * ( non - javadoc )
create a new { @link <unk> } for the { @link <unk> } .
{ @inheritdoc }
{ @link reader } implementation .
retrieves the url of the resource identified by the given resource type .
notifies all registered listeners that the cache has changed .
reload the value of a value change event .
provides a map of { @link <unk> } s to provide a { @link <unk> } .
creates a new { @link scheduler } for the given { @link logger } .
sets the stop criterion .
/ * ( non - javadoc )
returns an input stream for the specified location .
get the resource data for the given location .
adds a collection of { @link <unk> } s to the list of pre - processors .
adds a collection of { @link <unk> } s to the { @link <unk> } .
adds a post processor to the processor .
/ * ( non - javadoc )
factory method for creating a new instance of { @link <unk> } .
/ * ( non - javadoc )
load providers from provider s class loader .
{ @inheritdoc }
----- public methods -----
get the list of context layout for the context .
returns the name of the extension .
returns a { @link string } { @link <unk> } transformer for the given filename .
/ * ( non - javadoc )
get the content type from the given filename .
returns the content type of the given file .
attempts to load a resource from the classpath .
{ @inheritdoc }
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
transform a { @link <unk> } to a { @link <unk> } .
process a resource .
configures the base name for the given resource .
try to claim a pool for a given resource .
/ * ( non - javadoc )
validate uri .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a { @link <unk> } based on the configured { @link <unk> } .
create a { @link <unk> } based on the { @link <unk> } .
close all the jmx mbeans
register a { @link <unk> } based on the given { @link <unk> } .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
creates a { @link <unk> } from the given { @link <unk> } .
/ * ( non - javadoc )
this method checks if there is a duplicate group name .
prints the given { @link <unk> } to the { @link <unk> } .
{ @inheritdoc }
finds the location of the given uri .
/ * ------------------------------------------------------------
sends a post processors to the processor .
decorate the given { @link org . glassfish . common . processor . cache . <unk> } with the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
splits the given string into an array of strings .
/ * ( non - javadoc )
/ * ( non - javadoc )
loads properties from an input stream .
<p > parse . < / p >
create a standalone context for the final context .
get the { @link <unk> } for the { @link <unk> } .
get the { @link <unk> } for the { @link <unk> } .
factory method to create a new { @link <unk> } instance .
notify the { @link <unk> } for creating a new { @link <unk> } .
unregisters a { @link <unk> } from a { @link <unk> } .
<unk> <p > <unk> / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
get the { @link inputstream } of the specified { @link <unk> } .
converts a resource path to a resource .
returns a string representation of the given uri .
finds a post request to the given url .
/ * ( non - javadoc )
creates a { @link <unk> } for the given { @link <unk> } .
<p > <unk> . < / p >
/ * ( non - javadoc )
sets the list of { @link stubtransformer } s to be used .
transforms a { @link domdocument } to a { @link <unk> } .
{ @inheritdoc }
adds a translation to the operation .
checks if the url is needed for a resource .
process and merge tasks .
process and merge criteria .
----- private methods -----
decompiles all pre - processors and invokes { @link <unk> ( org . <unk> . <unk> . <unk> . <unk> org . <unk> . <unk> . charset . <unk> ) } .
decorate the pre - processing pre - pre - processor .
uploads the given { @link <unk> } to the given { @link <unk> } .
/ * ( non - javadoc )
deduplicates an object
checks if the given object is annotated with the given annotation .
returns an array of all fields of the given <code > <unk> / code > .
<p > <unk> . < / p >
fuzzily match an image against one of the following : <ul > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> /
compute the uri for the css
computes the location of the image template .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
/ * ( non - javadoc )
this method is called when the { @link <unk> } is changed .
/ * ( non - javadoc )
sets the { @link transformers } for the { @link <unk> } .
get the { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
helper method to parse the arguments into a map .
<p > process . < / p >
replace the given css properties with the given parameters .
/ * package
/ * ( non - javadoc )
{ @inheritdoc }
create a new base url base url .
/ * ( non - javadoc )
generates a pre - processor pre - processing callable .
determines whether the given { @code <unk> } is eligible for the given { @code <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
factory method for creating a new { @link set } of { @link <unk> } .
returns true if the url is a byte representation of the url .
open a { @link inputstream } with the given url .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
handle the gzip response .
<p > include the specified { @link <unk> } . < / p >
<p > <unk> . < / p >
{ @link <unk> ( string reader string ) }
creates a { @link <unk> } for the given { @link <unk> } .
get the { @link <unk> } for a { @link <unk> } .
imports the data from file to database .
add a resource assignment to the resource assignment .
gets the hash from an input stream .
convenience method for packaging query results .
过滤<br > 过滤过程通过传入的editor实现来返回需要的元素内容，这个editor实现可以实现以下功能：
returns the name of the embedded resource .
/ * ( non - javadoc )
construct a resource url url .
<p > <unk> . < / p >
/ * ( non - javadoc )
{ @inheritdoc }
<p > <unk> . < / p >
finds the imported resources from a zip file .
create a new resource .
computes the absolute url for the jasper resource .
returns true if the given request has been modified since the last modification date .
creates and returns a resource path to the given resource id .
convert an array of objects to a string .
returns a list of all tokens in the list .
creates the javascript object for the given initial scope .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
$non - nls - 1$
this method is used to encode the version into a string .
formats a resource .
destroy method .
destroy all registered {
get the number of cache cache entries .
checks if the request is a handler or not .
/ * ( non - javadoc )
renames the file .
computes the destination folder for the given resource type .
<p > <unk> . < / p >
wraps the given exception as a runtimeexception .
{ @inheritdoc }
/ * package
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * builder methods
/ * ( non - javadoc )
locates the { @link inputstream } for the given location .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a { @link <unk> } .
creates a new { @link <unk> } .
/ * ------------------------------------------------------------
write a reader to a filewriter
write a reader to a filewriter
/ * ( non - javadoc )
{ @inheritdoc }
opens a jar file with the given <code > <unk> / code > .
gets the inputstream for the given jar file .
extract a path from a uri .
generate cache key .
/ * ( non - javadoc )
prints the document to the given outputstream .
/ * ( non - javadoc )
adds a new locator to this handler .
decorate the { @link <unk> } for the given { @link <unk> } .
<p > process . < / p >
adds a new option to the validator .
<p > <unk> . < / p >
gets the hash from an input stream .
log the request .
/ * ( non - javadoc )
{ @inheritdoc }
returns a read lock for the given key .
get the path of a css { @link <unk> } .
execute the given command line .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a { @link <unk> } to the { @link <unk> } .
this method parses the contents of a { @link node } into a { @link list } of { @link feature } s .
get the property information for this task .
/ * ( non - javadoc )
removes the script tags from the input string .
creates a {
converts a { @link <unk> } into a { @link <unk> } .
parse header line .
add headers to the cache .
adds the headers to the request .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a string representation of the specified object .
create a new { @link org . apache . beehive . netui . pageflow . annotations . <unk> } from a { @link httpservletrequest } .
returns the package path of the given class .
<p > checks if the charsequence starts with the specified prefix . < / p >
get the struts module path for the given uri .
gets request headers .
convert a string to string format .
{ @link <unk> } <unk>
create a new instance of { @link <unk> } .
finds a manifest property with the specified key .
copies the content of the given reader to the given writer .
creates a temporary file in the filesystem .
checks if the given string is an absolute path .
clean the image .
returns the full path of the given path .
normalizes the given path .
initialize the <unk> attribute .
get the attribute value .
/ * ( non - javadoc )
returns the attribute value .
get the mime type of images
write the url to the url .
creates a new instance of { @code <unk> } .
creates a list of {
/ * ( non - javadoc )
creates a { @link node } from a { @link <unk> } .
replies the description of the issue element .
creates a new { @code <unk> } with the given { @code filter } .
sets the { @link <unk> } header .
sets the value of correlationid property .
returns a {
decorates a { @link <unk> } .
computes the cache value for the given content .
schedule a { @link <unk> } .
returns a new { @link <unk> } with the given { @link <unk> } .
logs an exception .
check if a resource is changed .
/ * ( non - javadoc )
sets the hash for the given hash .
check if the resource is of the correct type .
adds a resource to the graph .
adds a resource to the group .
sets the list of resources to be processed .
----- private methods -----
creates a process using the given command line and creates a new process using the given command line .
append the command line arguments to the given file .
/ * ( non - javadoc )
encodes a nio string to a byte array .
returns the base64 - encoded version of the object .
get the groups from a document .
runs the given { @link element } .
creates a new { @link string } for the given { @link element } .
parses the resource and adds it to the internal log .
creates a { @link resource } from the given { @link element } .
get the { @link <unk> } for the given { @link <unk> } .
liefert die einzelnen attribute einer <unk> als map .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a { @code collector } that accumulates elements into a { @code map } whose keys and values are the result of applying the provided mapping functions to the input elements .
executes the given { @link <unk> } and executes the given { @link <unk> } .
invokes { @link <unk> ( long timeunit ) } and { @link <unk> ( long timeunit ) } .
note : copied from google guava under apache license v2 . <br / >
note : copied from google guava under apache license v2 .
returns a { @link map } containing the specified keys and { @link waiting } values .
creates a new { @link timer } for the given name .
stop the timer .
returns the named timers associated with the given thread .
get a named timer .
returns a timer object for the given string name and todos flags .
returns the named timers associated with the given thread .
print the <code > <unk> / code > to the <code > <unk> / code > .
/ * ( non - javadoc )
this method is called when a batch of <unk> is received .
/ * ( non - javadoc )
attempts to increment the given atomicinteger with the given maximum value .
adds the given rule to the end of the chain .
updates the link for the given link .
updates the link with the given link .
/ * ( non - javadoc )
gets the sub property chains .
todo : explain
visible for testing
/ * ( non - javadoc )
adds properties to the model .
pauses the upgrade .
/ * ( non - javadoc )
checks whether the <unk> is a leaf of the classification .
restores the { @link <unk> } of the specified { @link <unk> } .
gets the classes that have been unsatisfiable .
gets a taxonomy for a taxonomy .
restore the specified instance taxonomy .
gets a specific instance of the specified instance taxonomy .
gets information about a named transition .
gets best object property taxonomy .
selects a taxonomy property taxonomy .
returns true if the specified class expression is the same as the specified class expression .
determines whether the specified class expression is the same as the specified class expression .
gets the { @link owlclass } for the specified class expression .
gets the direct super concepts of the specified class expression .
gets all the direct subclasses of the specified class expression .
query all classes in the specified class expression .
/ * ( non - javadoc )
gets the query result for the given axiom .
{ @link <unk> }
removes the body of the given { @link <unk> } from the given { @link <unk> } .
gets the evidence corresponding to the specified { @link <unk> } .
runs the benchmark using the specified <unk> .
determines the results of an ontology .
start a new task .
/ * ( non - javadoc )
/ * ( non - javadoc )
add a set of examples to the routing stage .
/ * ( non - javadoc )
removes the <unk> from the <unk> .
returns the automata .
removes the node from the linked list .
returns the collection of entries that have been removed from the cache .
/ * ( non - javadoc )
get the destination link with the given name .
/ * ( non - javadoc )
closes the reasoner .
computes the capacity of the backing array .
removes the element at the specified position in the list .
removes all keys and values from v at the specified position .
returns the index of the matrix in the list .
returns true if the given array contains a single element .
/ * documented <unk>
/ * ( non - javadoc )
converts the specified exception expression into a fresh data structure .
add a new timer to the statistics .
/ * ( non - javadoc )
adds the given { @link rule } to the given { @link <unk> } .
/ * ( non - javadoc )
read a stage from the project .
/ * ( non - javadoc )
normalizes and adds a class to the axiom <p > this method is used to add a property to the axiom s root ontology class .
removes the sub - classes from the ontology
映射键值（参考python的zip () <unk> > 例如：<br > keys = [ 1 2 3 4 ] <br > 则得到的map是 { a = 1 b = 1 } <br > 如果两个数组长度不同，则只对应最短部分
映射键值（参考python的zip () <unk> > 例如：<br > keys = [ 1 2 3 4 ] < / code >
enlarges the table .
shrink the table if necessary .
this method loads the configuration from the given configuration file .
returns the position of the next block in the data set .
/ clover : off
/ * package private
{ @link <unk> ( java . util . collection ) }
{ @link <unk> ( java . util . collection ) }
{ @link <unk> ( nodesequence . <unk> ) nodes }
returns a new { @link map } containing the results of applying the given function to each element of the given { @link map } .
remove stale entries from the table .
adds a new structural element to the list .
removes stale entries from the table .
/ * ( non - javadoc )
removes all of the mappings from this map .
/ * ( non - javadoc )
register the given factory with the given factory .
calculates the hash code for a given object .
mix of the hash codes of a hash codes .
returns an instance of { @code iterator } with the given { @code <unk> } and { @code <unk> } .
returns a hash set of all the elements in the iterator .
<unk> - <unk>
combine two {
returns the number of hash codes for a given set .
copy the contents of the given inputstream to the given outputstream .
create a list of { @link <unk> } instances for the given url .
<strong > [ icu ] < / strong > returns a link to the specified factory .
process the next input .
gets a { @link <unk> } that will be monitored .
{ @link <unk> ( object ) }
/ * ( non - javadoc )
remove all deleted rules .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a new conjunction to the given conjunction .
removes the given conjunction from the conjunction .
returns the index of the given <unk> in the given list of <unk> chains .
returns the { @link <unk> } represented by the given { @link <unk> } .
<p > invoke . < / p >
dumps a memento to a file .
----- static methods -----
exports an instance to a file .
sends a post request to the specified location .
an alternative to { @link <unk> ( <unk> ) } .
process a taxonomy node .
creates a set of <unk> that can be used in a call to { @link <unk> } .
this method calculates inferred vector for given class .
hash a taxonomy .
/ * ( non - javadoc )
returns true if submission is available .
append the text to the file .
/ * ( non - javadoc )
{ @inheritdoc }
enlarges the buffer
rehashes the contents of this map into a new smaller key .
returns a map of properties from the given properties object .
runs the task .
/ * ( non - javadoc )
/ * <unk>
returns the forward link to the given link factory .
/ * ( non - javadoc )
populates the {
creates a { @link <unk> } for the given visitor .
creates a new { @link <unk> } object for the given { @link <unk> } .
/ * package
returns the computed state for the given class .
matches an ast node that matches the given matcher .
register a class name .
returns true if the specified class expression is the same as the specified class expression .
get the { @link <unk> } for the given class .
get the {
finds all of the sub - classes of a taxonomy .
/ * ( non - javadoc )
/ * ( non - javadoc )
this method returns a set of <unk> that can be used for a given set of <unk> .
hash a taxonomy query .
add a direct type node to the tree .
returns a { @link <unk> } for the given { @link <unk> } .
creates a new chain of <unk> that can be used to select a chain of property values .
returns an { @code iterable } containing all the elements of the given { @code iterable } resulting from { @code iterables } .
returns an { @link java . util . stream } of { @link java . util . map . <unk> } elements from the given { @link iterable } .
returns a { @link collection } of { @link list } s containing the elements in the specified { @link collection } . the elements in the collection will be { @link list<string > } .
returns a { @link set } that contains all elements of the given { @code collection } .
creates a new { @link <unk> } instance containing the given { @link map } .
joins the elements of a collection into a writer .
returns a { @link set } containing all the elements of the given { @code set1 } containing the elements of { @code set1 } .
/ * package
/ * package private
enlarges the buffer
rehashes the contents of this map into a new one .
adds the specified element to this set .
removes the specified element from the list .
clears the capacity of the array .
/ * divides a list of { @link <unk> } into a list of { @link <unk> } s .
add a {
logs the occurance of an operation .
/ * ( non - javadoc )
logs the occurance of an operation .
logs an operation .
wait for the memory to exit .
update the configuration options .
shut down the client .
utility method to parse a taxonomy node class .
see documentation for { @link <unk> ( com . <unk> . <unk> . ads ) }
gets the { @link type } of the given instances class .
get object property of the given property .
determines whether the specified class expression is equivalent to the specified class expression .
get the { @link <unk> } for the specified class .
gets all the sub - classes of a class .
gets all the sub - classes ( sub - classes ) of the specified class .
gets all the subclasses of a class .
/ * ( non - javadoc )
gets the { @link <unk> } of a system property .
gets the set of super - object properties for the given property .
gets the instances belonging to the specified class .
/ * ( non - javadoc )
replies the list of all direct and indirect instances of the given type .
returns true if the specified class expression is the same as the specified class .
print the help for <code > options< / code > with the specified command line syntax .
encodes the given byte array into an array of bytes .
同 system . out . println () 方法，打印控制台日志
escapes a char in a string .
compares this owl : <unk>
main method .
loads explanations from the specified <unk> .
create an { @link <unk> } for the given { @link <unk> } .
removes all implementations from the classpath .
add a <unk> .
shuts down the thread and waits for it to finish .
returns the body of the request body .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
determine if the given class is a single value .
<p > checks if the given string is iso - 8859 - 1 . < / p >
sets the value of { @link <unk> attribute } .
set the type of this link .
<p > sets the contents of the { @link anchor } attribute to the { @link <unk> } . < / p >
sets the title parameter .
/ * ( non - javadoc )
set the media request link .
adds a revision attribute to the html anchor .
set the anchor attribute .
add a new init parameter .
set the link as a header .
/ * ( non - javadoc )
constructs a new { @link net . dv8tion . jda . core . entities . <unk> <unk> } with the given arguments .
create a new { @link link } object with the given arguments .
returns the service implementations of the specified service type .
returns the list of parameters for the given revision .
returns true if all parameters are required .
static method to --------------------------------------------
/ * ( non - javadoc )
gets the cell type .
/ * ( non - javadoc )
returns true if the specified <code > string< / code > matches the specified <code > <unk> / code > .
returns true if there are no property include value include .
/ * ( non - javadoc )
checks if the request is empty or not .
returns the default value .
returns the values of the given method .
/ * ( non - javadoc )
/ * public void <unk> () { return <unk> () ; }
adds a property name to the vocabulary .
this method can be called to ask the serializer of an object to be added to the serializer .
get the value of the property info .
get the property type .
convert a { @link object } into a { @link uberdata } .
convert a { @link <unk> } to a { @link <unk> } .
convert a { @link <unk> } to a { @link uberdata } .
recursively walk through the collection of bean creation parameters .
gets the action input parameters .
returns the value of the property with the given name or null if not found .
create a datasource
returns a { @link list } of { @link term terms } ordered by the specified { @link annotatedelement } .
finds all events matching the given criteria .
returns the { @link query } representation of the query .
appends the given action to the given action .
write a tag to the underlying writer .
recursively walk through the bean properties .
init input parameter .
/ * ( non - javadoc )
/ * ( non - javadoc )
build a { @link list } of { @link <unk> } .
add a link to the halrepresentation .
/ * ( non - javadoc )
add a list of { @link <unk> } to the { @link traverson } .
adds a bind variable value to the statement .
determines the request type .
returns the current request .
sets the { @link <unk> } of the { @link <unk> } .
sets the dynamic arguments .
/ * ( non - javadoc )
/ * ( non - javadoc )
appends the message template components to the given {
removes all the {
get child node by name .
get a { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * documented <unk>
returns an empty mutable { @link <unk> } with empty { @link <unk> } .
returns an empty <code > <unk> / code > .
pick a { @link tuple } from a { @link map } .
returns a { @code map } containing the results of applying the given { @code <unk> } to the given { @code <unk> } .
<unk> > <unk> > <unk>
/ * [ deutsch ] <p > <unk> < / p >
<unk> > <unk>
/ * documented <unk>
returns an empty map .
creates an empty { @code <unk> } with the given { @code comparator } .
<pre > { @code <unk> > q = reducers . <unk> () . foldmap ( stream . of ( 1 2 3 4 )) ;
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
associates the specified value with the given key in this map .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
associates the specified node with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
returns a map containing the intersection of both keys and values .
returns the first element of the given collection .
given an array of unary operations return the right - hand side .
sets the { @link action } of the current { @link action } to the { @link <unk> } object .
{ @link <unk> ( list ) } .
create a <code > <unk> / code > if the <code > <unk> / code > is <code > true< / code > .
gets a count of the features of a feature .
zip together the iterators until one of them runs out of values . each array of values is combined into a single value using the supplied zipfunction function .
creates a new mutable { @code treeset } instance containing the given elements .
returns a list of all the elements emitted by the supplied <code > <unk> / code > as a list of <code > <unk> / code > objects .
returns an immutable map containing the elements of the given iterable .
{ @inheritdoc }
returns an { @link <unk> } that iterates over the elements of this map .
returns the first option of this { @link option } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a {
{ @code function } is equivalent to { @code <unk> } .
static factory method for wrapping a value of type <code > a< / code > in a <code > a< / code > .
creates a new tuple from the given { @link map } .
/ * ( non - javadoc )
creates an array containing the elements of the given array .
/ * ( non - javadoc )
create a root {
returns a range of { @code s } .
{ @inheritdoc }
returns the index of the first occurrence of the specified object in this list or - 1 if the object is not found .
/ * ( non - javadoc )
returns a range of the portion of this list between fromindex inclusive and toindex exclusive .
converts the given class to a set of classes .
static factory method for wrapping a value of type <code > a< / code > in a { @link choice7 } .
returns an empty optional if the optional is empty .
creates an immutable map containing the given items .
/ * ( non - javadoc )
returns the element at the specified index .
replaces the element at the specified position in this list with the given value .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an array of nodes at the given level .
static factory method for wrapping a value of type <code > c< / code > in a { @link choice8 } .
returns the intersection of {
returns a mutable { @link java . util . map } containing the results of applying the given function to each entry in the map .
creates a new mutable { @link stream } containing the given elements .
creates a mutable { @link immutablemap } from the given { @link iterable } .
creates an immutable copy of the given items .
returns a flowable that emits the items in the specified array .
returns a flowable that emits the items in the given array .
sorted stream stream .
returns the top element of <code > <unk> / code > in the given <code > <unk> / code > as a list of <code > <unk> / code > objects .
sorts the elements of an iterable into a sorted list .
returns a flowable that emits the items in the specified array .
creates a map from the given elements .
returns an { @link java . util . iterator } of { @link java . util . entities . <unk> } { @link <unk> ( java . util . list ) } and { @link java . lang . string } .
/ * public static string <unk> ( string length int len ) { return str . length () ; }
以 conjunction 为分隔符将数组转换为字符串
以 conjunction 为分隔符将数组转换为字符串
creates an instance of { @link optional } with the given { @link <unk> } .
applies the producer to the producer .
<unk> > <unk>
inserts items into an array .
<p > append . < / p >
/ * ------------------------------------------------- [ 42 ] ---------------------------------------------------
<unk> > <unk>
/ * documented <unk>
inserts the given array into the given array .
/ * ( non - javadoc )
~ methods **************************************************************************************************************************************
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
delist the current current thread from the current thread .
/ * ( non - javadoc )
/ * ( non - javadoc )
tries to guess the state of an entity type .
/ * ( non - javadoc )
get a list of all the files in a directory .
throws an exception if the directory does not exist .
returns the boolean array of all interfaces implemented by this class .
create the defer constructor of a class .
sets the signature of the given method .
<p > <unk> . < / p >
translate the given primitive type name into a { @link string } .
copies all { @link ctclass } s into the given { @link ctclass } .
copies all the methods of the given class array to the given array .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
return a { @link <unk> } for the given plan .
converts a string representation of a plan string to an address .
creates a new timer with the given options .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the given notification is enabled .
/ * ( non - javadoc )
displays the category tree .
/ * ( non - javadoc )
/ * [ deutsch ] <p > implementierungsmethode des interface { @link externalizable } . < / p >
installs the neighbours from the deployment .
recovers the neighbours from the deployment .
get the object pool for the given moment .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
do and handle the <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
finds all the descriptors for the given class .
/ * ( non - javadoc )
returns true if the audit record is installed .
gets the number of available data mapped to the current data .
get the number of memory mapped by the given executor .
/ * ( non - javadoc )
get the average event routing time
/ * ( non - javadoc )
converts a <unk> event into an array of listeners .
create the event notifying all registered listeners .
returns the total number of executing tasks in the queue .
get the executor for execution
/ * ( non - javadoc )
get the number of idle tasks that should be idle .
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
get misc task for misc
returns the number of bytes in the routing table .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > the <code > <unk> / code > method is called for each object in the <code > <unk> / code > object . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
<p > this method is called by the {
online learning of naive bayes classifier .
/ * ( non - javadoc )
<unk> method .
ds method to deactivate this endpoint .
/ * ( non - javadoc )
<p > the <code > <unk> / code > of this <code > <unk> / code > object . < / p >
/ * ( non - javadoc )
resolve the given service component .
/ * ( non - javadoc )
/ * ( non - javadoc )
locks the event .
get the average time of all {
/ * ( non - javadoc )
the size of the event is overwritten .
/ * ( non - javadoc )
translates a tinylog 2 severity level into a severity level .
converts a string representation of a level to an alarm level .
returns true if the given level is higher than the given level .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * f743 - <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
handle registration parameters .
gets the value of the parameter with the specified name .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> > <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new event context object
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new { @link <unk> } instance for the given object .
creates a { @link <unk> } for the given { @link string } list .
/ * https : // github . com / apache / incubator - druid / issues / <unk>
f743 - <unk>
/ * ************************************************************************* java object serialization ***********************************************************************
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
returns the property value as a string .
compares this address to the specified object .
check if the given notification is enabled for the given notification .
clear all stale timers .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of the named property .
returns the name of the node as a map .
/ * ( non - javadoc )
/ * ( non - javadoc )
translates a tinylog 2 severity level into a severity level .
converts a string representation of a level to a trace level .
returns true if this level is higher than the given level .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the combination of { @link <unk> } and { @link <unk> } .
/ * ( non - javadoc )
/ * ----------------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
extract a file from a zip archive .
dump the jar file to the specified log directory .
copies a stream to the output stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
removes the given entity from the dom .
returns true if this node is attached to this node .
get an instance of the <unk> .
create a new timer with the given name .
removes the specified timer from the dom .
get the {
returns the names of all currently active ones .
adds a new child node to this node .
remove a child node with the given name .
returns true if the given node has a child .
returns the set of property names for this node .
/ * ( non - javadoc )
returns the value of the specified attribute .
returns a copy of the given { @link node } .
append an error message to the buffer .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates the notification for notification .
sends a notification notification with the given value .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
initializes the local retirejs repository
download the contents of the specified url into a temporary file .
/ * ( non - javadoc )
process the deployments .
/ * ( non - javadoc )
/ * ( non - javadoc )
execute action .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the logger for the specified log record .
/ * ( non - javadoc )
prints help menu .
/ * ( non - javadoc )
see { @link <unk> ( int ) } for { @link <unk> ( int ) }
see { @link <unk> ( string ) } for { @link <unk> ( string ) } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
writes this object to the output stream .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
----- private methods -----
load policy file .
get a reader for the given uri .
perform the url conversion .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is used to create a profile from a destination .
/ * ( non - javadoc )
this method is used to determine if the profile is active .
find a profile by attribute .
/ * ( non - javadoc )
filters all the attributes of the given attribute with the specified attributes .
returns a collection of all profiles for the given attribute .
/ * ( non - javadoc )
visit a profile id .
renames the {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
stops the component .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
informs the service that the service is active .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > register . < / p >
called by the mbean server .
/ * ( non - javadoc )
sets the context state of the trace context .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
find the best method in the resource chain context .
build the profile
/ * ( non - javadoc )
stop <unk> .
/ * ( non - javadoc )
returns projects that are tied on this node .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
parse the given input stream to a list of <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the volume parameter set .
/ * ( non - javadoc )
<p > invokes a named static method on the target server . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
initializes the query class .
create a new { @link <unk> } object .
get request parameters .
get the post parameters for this notification .
remove the <unk> parameter set from the model .
sets the post parameters .
/ * ( non - javadoc )
fires a <unk> event .
/ * ( non - javadoc )
/ * returns the active server active server summaries of the given url instantiating a new one .
f743 - <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
method to get the value for the given class or null if not found .
prints a java type to an object .
convert a primitive type to a primitive type .
unboxes the primitive type of the given type .
<p > <unk> . < / p >
adapted from { @link <unk> }
<p > <unk> . < / p >
overrides the visitor to look for classes that have a super class .
process the controller methods .
{ @inheritdoc }
/ * ( non - javadoc )
remove an object from the pool .
register the given mbean with the given mbean .
instructs the {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a { @link <unk> } that can be used to parse the given { @link int } value .
convert a string value to an iterator .
/ * ( non - javadoc )
counts the number of devices associated with the device .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > the <code > <unk> / code > object contains all of the alarms . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * [ deutsch ] <p > implementierungsmethode des interface { @link externalizable } . < / p >
/ * ( non - javadoc )
this method is called when a new graph is created .
returns the complete backbone for a given service .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds the given <code > <unk> / code > to the next <code > <unk> / code > .
/ * ( non - javadoc )
checks if the transaction is uncommitted .
commits the transaction .
/ * ( non - javadoc )
/ * ( non - javadoc )
~ methods **************************************************************************************************************************************
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the current transaction associated with the current transaction .
cancels the join actions .
call after commit priority .
cancels the leave timeout .
cancels the join actions .
cancels the join priority .
/ * ( non - javadoc )
get the names of all workspaces .
factory method to create a tracer for the given tracer name .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * methods
/ * <unk>
adds a failover data with failover to the deployment data .
/ * ( non - javadoc )
returns a list of replica addresses that are members of this cluster .
/ * ( non - javadoc )
removes a listener from the replicated data .
registers the property editor .
/ * ( non - javadoc )
/ * returns the algorithm name .
/ * <unk>
gets the object pool for the given class .
/ * ( non - javadoc )
remove the object from the database .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
convert the object to an object .
returns the store for the given alias .
adds a new entry to the cache .
/ * ( non - javadoc )
primes the cache with the given key .
removes the mapping for the given key .
add a notification to the notification model .
sets the profile property .
/ * ( non - javadoc )
add an event to the cache .
returns an array of all the events in the list .
{ @inheritdoc }
get a { @link state } from a { @link cloudtask } .
/ * ( non - javadoc )
removes leading and trailing whitespace from the beginning of the string .
check if the given notification is enabled .
clear stale indexes .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds all elements from the given collection to this set .
retains only the elements in this collection that are contained in the specified collection .
returns an array containing all of the elements in this list in proper sequence ( from first to last element ) .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a new {
<p > <unk> . < / p >
compares this { @link ldaprdn } with the specified { @link object } .
/ * ( non - javadoc )
set the value of the <code > <unk> / code > attribute .
set the value of the <unk> attribute .
set the value of the <code > <unk> / code > property .
set the value of the <code > <unk> / code > property .
sets the value of the specified attribute to the given value .
sets the value of the specified attribute to the given value .
set the value of the <code > <unk> / code > property .
set the value of the <unk> attribute .
set the timer threads
returns true if the given level is higher than the given level .
converts the given level to an integer .
loads a xml document from an input stream .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
commit profile .
delete a profile property .
/ * ( non - javadoc )
start the doclet .
check profile management methods
validates abstract class .
validate the descriptor .
validate key .
this method is used to parse a set of correlation identifiers ( e . g . <code > &lt ; <unk> ; element ) < / code > and <code > <unk> / code > .
/ * ( non - javadoc )
restarts a task from <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
generate concrete methods .
creates an instance of { @link <unk> } .
gets the path to the log4j template .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the default { @link properties } instance for the given { @link object } .
initialize the filter flags .
/ * ------------------------------------------------------------
adds a name binding to the internal cache .
/ * ( non - javadoc )
removes the feature with the given name from the internal map .
attaches a timer to the timer .
removes a timer from the cache .
removes all timers .
/ * ( non - javadoc )
this method removes all of the details of the given entity .
this method is used to return a set of <unk> objects .
inform the <code > <unk> / code > that the scheduler has changed .
/ * ( non - javadoc )
/ * ( non - javadoc )
add a {
/ * ( non - javadoc )
returns true if there are any dependencies satisfied .
returns true if the given component has duplicates .
gets the list of { @link <unk> } s .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * public static void <unk> ( string management ) { try { <unk> <unk> = new <unk> () ; }
gets the object name .
/ * ( non - javadoc )
this method truncate profile
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns <code > <unk> / code > for the video field .
<p > <unk> . < / p >
/ * utility methods
this method is called after a video method invocation .
callback from management service implementation .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
return true if there are none .
gets the entity name for the given entity .
/ * ( non - javadoc )
returns a string representation of the service .
/ * ( non - javadoc )
/ * ( non - javadoc )
deletes a file .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
create the proxy class .
sets the minimum free memory percentage to use .
sets minimum free memory to be evicted .
sets the pool size .
/ * ( non - javadoc )
/ * abstract methods for abstract methods .
add a constructor to the constructor .
creates the default constructor .
/ * check for a method of a class .
/ * ----------------------------------------------------------------------
/ * ( non - javadoc )
executes the method <code > <unk> / code > .
wraps the given class as a private method .
generate transaction .
/ * ( non - javadoc )
add the given expression to the list of expressions .
check if the given expression is a multi - indexed index .
adds a processor to the processor .
{ @link <unk> ( string ) }
{ @link <unk> ( string ) }
/ * ( non - javadoc )
/ * public void <unk> ( context name ) throws ioexception { <unk> <unk> = <unk> . <unk> () ;
/ * ( non - javadoc )
receives a single logger with the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a trace event for the given component .
/ * ------------------------------------------------------------
/ * [ deutsch ] <p > implementierungsmethode des interface { @link externalizable } . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > create a { @link <unk> } for the given { @link node } . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
creates the constructor .
sets the time for the given set of <code > <unk> / code > objects .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the fully qualified activity class name .
sets the name of the object to the target field .
sets the value of the field with the given name .
converts a field value to a primitive type .
/ * ( non - javadoc )
/ * ( non - javadoc )
~ methods **************************************************************************************************************************************
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
initializes the profile instance .
/ * ( non - javadoc )
gets the profile instance .
/ * [ deutsch ] <p > implementierungsmethode des interface { @link externalizable } . < / p >
/ * [ deutsch ] <p > implementierungsmethode des interface { @link externalizable } . < / p >
/ * ( non - javadoc )
create a class from a string classname
get the endpoint links for the given class .
/ * private static void <unk> ( <unk> <unk> ) { try { <unk> > <unk> = new <unk> ( <unk> ) ; }
adds a field to the class .
adds a field to the class .
adds a field to the class .
generates a getter for the given field .
generates the setter method .
generates the getter and setter fields .
adds annotation to the constant pool .
adds annotation values to the annotation .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
synchronizes the service to the <unk> if { @link <unk> } is { @link <unk> } .
/ * ( non - javadoc )
returns a string representation of this collator .
<p > <unk> . < / p >
replaces the last character in the source string with the given replacement string .
validates a generation parameter .
check if the given class is assignment to the specified interface .
get all methods of the given class .
finds the method with the given name and signature from the given class .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
copies a trace from the source file to the destination name .
/ * ( non - javadoc )
{ @link <unk> }
/ * ( non - javadoc )
check that a string is a valid tracer name .
register a new { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
loads all non - generated styles from the slee
/ * ejb
creates a temporary file in the specified directory .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
set the subject class loader .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
copied from <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a new { @link collection } of { @link profiles } .
returns a collection of profiles by dynamic query .
persists the given entity to the database .
retrieves a profile by profile .
renames a profile table .
installs the specified component .
/ * ( non - javadoc )
~ methods **************************************************************************************************************************************
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link <unk> ( object listener object ) }
check whether the given stream is valid .
/ * ( non - javadoc )
get the { @link classloader } for the { @link classloader } .
make a call to the proxy .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
saves the given { @link server } as a { @link org . jboss . as . controller . server . <unk> } .
parse a max - <unk> value .
returns true if the current thread s class is available .
/ * ( non - javadoc )
get the names of the logger names .
/ * ( non - javadoc )
clears all the loggers for the given name .
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
******************** methods *******************************************
reads a { @link net . sf . mmm . api . address . address } value from the given { @link integer } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the priority of the given priority .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
increments the current index and returns the index of the next index .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the level of the logger .
map to slf4j level .
/ * <unk>
/ * ( non - javadoc )
log a message at the trace level .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a message to the pointer .
log an exception .
/ * ( non - javadoc )
log a message at level info according to the info level .
/ * ( non - javadoc )
/ * ( non - javadoc )
log a message with a throwable .
adds a message to the pointer .
log a message at the trace level .
/ * ( non - javadoc )
parses a tracer name .
writes an object to an output stream .
reads the {
/ * ( non - javadoc )
returns a list of all the dependencies .
find a class by name .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * {
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > return the value of the specified profile . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
parse the set of {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a new component class to the digital object .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the url for the specified resource .
/ * ( non - javadoc )
~ methods **************************************************************************************************************************************
/ * ( non - javadoc )
/ * check that the given state transition is valid .
set the name of the column class .
returns the profile of the profile .
gets the profile name .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds the proxy class to the class .
wraps the given class as a private constructor .
/ * ( non - javadoc )
gets a unique result from the given { @link java . util . query } .
executes the given { @link java . sql . query } with the given { @link java . sql . query } .
executes the given { @link java . sql . query } with the given { @link java . sql . query } .
returns a boolean indicating that the database exists .
executes the given <code > <unk> / code > .
executes an update .
sets the value of the given field to the given value .
adds a query string parameter to the request .
add an object to the engine
create a new { @link <unk> } instance .
adds a custom converter for the given type .
<unk> > <unk>
adds a query string parameter to the request .
adds a field value to the database .
same as {
{ @inheritdoc }
{ @inheritdoc }
parses a string into a region request .
gets the region attribute .
gets the rectangle appearance .
/ * ( non - javadoc )
computes the canonical form of the image
/ * ( non - javadoc )
returns an {
zhongshu - comment <unk>
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
sets the value of the <unk> property .
添加命名的参数 : propertyname - > 命名的参数
merges two {
merge this image with another
obtains an instance of <code > <unk> / code > from a string .
converts a function to a { @link converter } .
添加命名的参数 : propertyname - > 命名的参数
adds the given resource to the end of the list .
returns the first value in the list .
converts a string to a size .
returns the canonical form of the pixels in the image .
returns the dimensions of the specified dimension .
sdk5 . 0 signature
/ * ( non - javadoc )
initializes the { @link <unk> } instance .
returns { @code true } if this { @link <unk> } contains the given { @code <unk> } .
/ * ( non - javadoc )
load a dom document from an input stream .
returns whether or not the device is rooted
<unk> - <unk>
pbs <unk> command .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
replace all occurrences of a macro with a given regular expression .
replaces all the occurrences of a pattern with the given pattern .
<unk> > <unk>
/ * ( non - javadoc )
gets a collection of all the tokens in the sentence .
converts the given markdown text into html .
this method is used to convert special characters to native text attributes .
returns a connection to the pool .
get a connection to the pool .
close the connection .
<unk> <unk> .
/ * ( non - javadoc )
adds the cause of the given exception .
returns a list of exceptions that are thrown by the pool .
execute the { @link <unk> } .
closes the configuration .
returns an array of explanations for the given class .
/ * ( non - javadoc )
gets the cached statement .
invokes the method with the specified arguments .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
setup default connection timeout .
<unk> > <unk>
creates a new <code > <unk> / code > object that can be used to create a new <code > resultset< / code > object as a <code > java . sql . <unk> / code > object .
gets the pool name .
removes all elements from the queue .
find the parent type of the given parent .
bindview annotated fields in the specified class names .
/ * ( non - javadoc )
generate style .
substitutes a comma - separated string with a comma - separated list of comma separated values .
write a bit { @link <unk> } to the stream .
/ * ( non - javadoc )
<p > <unk> . < / p >
read binary data from input stream .
create a new instance of { @link type }
returns a list of {
runs { @link <unk> ( string object ) } on the given counter .
/ * public static string <unk> ( string path ) { return <unk> ; }
get a list of all matching card names .
get a list of transitions from the given <unk>
get a list of all card files that are associated with the given path .
returns a list of all the elements of the given class that match the specified filters .
get a list of all { @link <unk> } s that contain a list of { @link <unk> } s .
set the <unk> report .
add a screen capture location to the current screen .
set system info .
/ * ( non - javadoc )
common method to call {
adds a new array to the end of this array .
/ * ( non - javadoc )
overloaded version of { @link <unk> ( int int ) } .
overloaded version of { @link <unk> ( int int ) } .
overloaded version of { @link <unk> ( int int ) } .
generate a gauge with the given name and value
find all the { @link selector } s from a { @link list } .
creates a { @link <unk> } from a list of { @link selector } s .
reads a list of { @link <unk> } objects .
filter a list of { @link <unk> } s .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
wait for the queue to be drained .
flush the upload blocks if necessary .
returns a list of {
returns an array of annotations on the given class .
process the properties of the property .
finds and returns the { @link propertydescriptor } for the given { @link class } .
returns a { @link list } of { @link <unk> } s .
lookup a method call expression on object .
performs the actual setting of the request .
<unk> > <unk>
returns a new object from the given list of arguments .
converts a list of { @link java . util . list } to a { @link list } .
<unk> > <unk>
creates a new instance of the given class .
<unk> <unk> .
returns an object from a value map .
<unk> > <unk>
transforms an object into a map .
<unk> <unk> <unk>
converts a { @link string } to a { @link map } .
get the values of an annotation .
override method to create a new instance of this class .
méthode de validation de <unk>
lookup a message validator
méthode de validation des <unk> <unk>
if the property is not null remove it from the map .
<p > <unk> . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
returns the total number of segments in this map .
computes the hash code for a given object .
returns the default options for this instance .
open a database .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an { @link java . util . concurrent . entry } that contains all the keys in the map .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > returns the index of the specified element in the array . < / p >
reduce the given object to a list of objects .
performs a reduction on the elements of an array .
<p > returns the minimum value in an array of values . < / p >
returns the average of the values in the given range .
<p > returns the index of the array sorted by the given buffer . < / p >
<p > returns the maximum value in an array of values . < / p >
<p > returns the minimum value in an array of values . < / p >
creates and returns a new array sized to fit the mean of an array of values .
computes the variance of pixel intensity values .
returns the mean of the values in the specified array of values .
gets the median value of an array of values .
process the request
/ * ------------------------------------------------------------
<p > invoke a named method on the target object . < / p >
computes the variance of a given array of values .
returns the sum of the values in the specified range .
returns the maximum value in an array of values .
returns the standard deviation of the values in the array .
/ * ( non - javadoc )
<unk> > <unk>
<unk> > <unk>
<p > test if two { @link object } s are equal . < / p >
creates a {
creates a { @link criteria } for the given { @link class } .
generates a criteria from a list of objects .
from json .
this method is used to create a value from a collection of properties
adds a new array to the array .
adds a new array to the end of this array .
adds a new array to the end of this array .
overloaded version of { @link <unk> ( int int ) } .
register a gauge that reports the value of the object .
searches the list using the binary search algorithm .
returns the index of the first occurrence of the specified { @code list } in the specified { @code list } .
gets a random position from an array .
returns a sublist of the given list of files .
returns the last element of the list or null if the list is empty .
<unk> > <unk>
returns the first element in the list .
returns the index of the first occurrence of the given array or null if the array is null .
/ * documented <unk>
returns the first element in the list .
returns the minimum element in the array .
picks the minimum value in the array .
/ * ( non - javadoc )
process array of maps .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
process an instance of the given object using reflection .
/ * ( non - javadoc )
/ * ( non - javadoc )
puts a key / value pair into the map .
/ * ( non - javadoc )
retrieve a label from a resource bundle .
retrieve a label from a resource bundle .
creates a localized string with the given key and default value .
<p > <unk> . < / p >
writes a string to the stream .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
returns an iterator over the entries of this map .
put a key / value pair into the store .
removes all the keys in the specified list .
executes the read batch read
multi - write operations
close the queue .
returns the idx th entry in the string at the specified index .
<p > <unk> . < / p >
<p > checks whether a string is in the target string otherwise false . < / p >
<p > append . < / p >
add the given string to the end of the string .
<p > <unk> . < / p >
splits a string in the given string .
<p > checks if a string is split by spaces . < / p >
<p > checks if a string is in the pipe . < / p >
converts a char array to an array of strings .
<unk> > <unk>
<p > <unk> . < / p >
returns true if the specified string is within the specified string .
write a string to a char sequence
find the median value of two strings .
foobarbaz → <unk>
builds a new {
sort the given list of { @link field } s with the given { @link list } of fields .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an { @link arraylist } of { @link list } s containing the specified { @link attachment } s .
sort the items in the array .
sets the {
returns a list of child nodes for the specified {
returns the first element of the given map or null if the navigable map is empty .
returns an unmodifiable view of the specified navigable map .
returns an unmodifiable view of the specified navigable map . the returned map is backed by the map so changes to the returned map are reflected in the returned map .
validates that the given { @code key } and { @code value } are not { @code null } .
checks if the expected number of ints is equal to the expected number of expected bytes .
checks if expected array matches expected array of expected bytes .
returns the sum of the values in the specified range .
returns the maximum value in an array of values .
<p > returns the minimum value in an array . < / p >
calculates the standard deviation for a collection of flat data collection .
create a median path .
/ * [ deutsch ] <p > konstruiert ein hilfsobjekt zum bauen eines divisor . < / p >
gets the localized message from the bundle .
sort the list of computers in the given groups according to the specified filter .
sort the given list of { @link field } s against the specified properties .
deletes the response from the data store .
{ @inheritdoc }
<p > <unk> . < / p >
/ * ( non - javadoc )
gets the pattern for the given expression .
/ * ( non - javadoc )
converts a list of bytes to a html page .
returns a deep copy of the given { @code list } .
returns the index of the first occurrence of the specified <code > list< / code > in <code > list< / code > . if <code > <unk> / code > is <code > null< / code > returns <code > null< / code > .
checks if the given object is a string or not .
returns true if class has a class field .
returns true if the class has a non - static field .
returns a list of all the fields of the given entity class or null if no such field exists .
<p > <unk> . < / p >
finds the field with the given name and throws an exception if not found .
gets the value of the {
returns the best candidate for the given cache entry .
compares two { @link <unk> } s .
sorts the specified list of {
gets the value of the specified { @code list } .
sort the collection of entries in the given collection .
sort a map by value .
sorts a { @link map } of key - value pairs into a { @link list } .
sort keys according to the specified comparator .
<unk> > <unk>
<unk> > <unk>
returns a { @link comparator } that compares { @link <unk> } s with { @link <unk> } s .
create a { @link comparator } for the given { @link <unk> } .
/ * ( non - javadoc )
returns the value associated with the given key or <code > null< / code > if no such key exists .
returns the value to which the specified key is mapped or { @code null } if this map contains no mapping for the key .
/ * ( non - javadoc )
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
attempts to increment the given order in the given atomicinteger .
removes the {
/ * ( non - javadoc )
initialize the cache .
/ * returns true if the value is an integer or an integer .
converts a { @link collection } to an array of { @link v } objects .
returns a new param with the given name and value .
/ * ( non - javadoc )
allocates a byte buffer from the given size .
determine whether or not to exit .
signal an input channel poll .
/ * package
waits for a data to be written to the pool .
starts the periodic {
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a random validator .
execute the given { @link <unk> } .
<p > <unk> . < / p >
apply the given set of criteria to a set of criteria .
wraps the given collection into a set .
convert a set of maps to a list of maps .
/ * ( non - javadoc )
create a new file in the given channel .
close a closeable .
write the next buffer to the given output stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
put a key / value pair into the store .
removes all of the mappings from the specified map .
checks the drift .
returns the value to which the specified key is mapped or { @code null } if the key does not exist .
converts a key to a byte array .
stores the given key / value pair in the cache .
removes all of the mappings from the specified collection .
returns the meta data for the specified property .
loads the { @link properties } from the { @link <unk> } .
/ * <unk>
/ * ( non - javadoc )
extract the meta data for a method .
returns a list of { @link <unk> } objects representing { @link <unk> } s .
converts a list of { @link <unk> } to a { @link <unk> } .
compiles the first regex pattern in the pattern .
splits the given string using the given indentation .
splits a string in the given string .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > split a string into an array of strings . < / p >
parse string .
parse string to string .
parse an int from a string .
parse a long from a byte buffer .
this is a helper method to convert a list of { @link string } s into a { @link java . util . list } .
adds a new array to the end of this array .
adds a new array to the end of this array .
sets the element at the specified position in this set .
this is a helper method to convert a list of properties to a java . util . list
adds a new array to the end of this array .
adds a new array to the end of this array .
overloaded version of { @link <unk> ( int int ) } .
overloaded version of { @link <unk> ( int int ) } .
generate a gauge that reports the value of the object .
processing messages from the server .
sets the field value .
get the value of the field
/ * ( non - javadoc )
returns true if the field is non - null .
get the value of a property of an object .
sets the value of a property on the given object .
gets an instance of { @link java . util . map } .
returns the value of the property with the given name .
returns the value of the given property in the given path .
get the value of a property of an object .
sets the value of the specified property to the specified value .
idx . properties
get the value of a stored property .
sets the value of a property on the given object .
sets the value of the specified property in the given properties object .
returns the integer value of the specified path .
returns the string representation of the value of the given value .
gets the value of a property of the given object .
sets the value of a property on the given object .
get the value of a property with the given properties .
returns the current context .
return a nested field access map for the given class .
/ * ( non - javadoc )
handle add sqlexception .
create and return a new message with the given key and arguments .
creates a new message with the given message .
converts a list of { @link configuration } s into an array of { @link object } s .
returns the credential validation context .
parse text from the given string .
/ * ( non - javadoc )
deprecated . please use {
create an index .
compacts the database connection .
returns a list of uuid matching the given count .
register interceptors .
converts json and key into jsonobject and returns it .
gets the contents of a directory .
triggers a replication request .
helper method to create the json representation of the json .
returns the { @link uri } of this { @link <unk> } .
finds and returns all documents in the replicator database .
performs an http query and returns the results as a map .
executes a query in an { @link jsonarray } and returns a { @link list } of { @link t } s where { @link <unk> () } is returned .
query page .
the reverse of this api .
/ * ( non - javadoc )
adds a design document to the database .
/ * ( non - javadoc )
removes a design document from the database .
creates a list of design document from a directory .
transforms a { @link <unk> } into a { @link designdocument } .
removes a document from the replicator database .
finds a document in the replicator database .
finds all documents in the replicator database .
removes a document from the replicator database .
finds a document in the database .
finds an input stream with the given id .
finds a document in the database .
finds all documents in the replicator database .
returns { @code true } if this database contains the given id .
performs a post request on the database .
performs a post request on the database .
removes a document from the database .
creates a list of response objects from a list of objects .
saves an attachment to the database .
saves an attachment to the database .
invokes the update handler with the given parameters .
executes the request and returns the result .
/ * ( non - javadoc )
/ * [ deutsch ] <p > liefert die <unk> zum angegebenen uri . < / p >
get the changes to the database .
performs a http put request and returns the response .
executes a http put request .
make a post request .
on delete .
upload the given http response .
sets the entity content .
gson invokes this call - back method during serialization when it encounters a field of the specified type .
adds an attachment to the database .
changes database changes ( changes sax events ) .
returns the changes .
reads the next row from the current row .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last : <unk>
gen - last : <unk>
gen - last : <unk>
gen - last : <unk>
gen - last : <unk>
gen - last : <unk>
gen - last : <unk>
this method is called from the swing component .
#func <unk> >
prints a balance to a string .
returns the difference between the two images .
/ * ( non - javadoc )
releases the lock .
create a new { @link observable } with the given { @link <unk> } .
publishes an array of bytes to a topic .
/ * ( non - javadoc )
example of how to create a query from the current time .
returns the metric id for the given namespace .
/ * ( non - javadoc )
sends a {
get the verb from the request
gets the data for the given method .
add the given { @link <unk> } to the { @link <unk> } .
add a failure to the pool .
initializes the { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link
called by {
process a scheduled job .
get a list of buckets from a collection of buckets .
submits a {
evaluate regular expression pattern .
prints the initial status of the channel .
sets the status of the response .
/ * [ deutsch ] <p > interpretiert den angegebenen iso - <unk> . < / p >
/ * ( non - javadoc )
apply <unk> to the <unk>
execute the given { @link call } on the { @link <unk> } .
creates a new { @code <unk> } from the given range of { @code start } and { @code end } .
factory method for { @link <unk> ( long long ) } .
send a message to the server .
sends a message to the client .
send a new delay to the given topic .
parse a filter string into a list of { @link <unk> } objects .
check if a certain pattern matches a pattern .
detect the environment .
get a container id from a set of environment variables .
set attribute value .
adds the given file to the zip file .
replaces all the entries in the given file with the given path .
creates a zip file .
generates a new {
generates a new instance of { @link metrics . <unk> } .
generate a new instance of { @link metrics . <unk> } for the given components .
create a list of metrics .
{ @inheritdoc }
{ @inheritdoc }
{ @inheritdoc }
generate metrics checksum for the file .
creates a temporary directory .
/ * ( non - javadoc )
transforms a template into a model .
creates a runtime runtime config for the given group .
register a renderer for the given group .
prepare the template for the given domain object .
/ * ( non - javadoc )
/ * ( non - javadoc )
add a { @link org . apache . hadoop . broker . configuration . <unk> } to the { @link org . apache . gobblin . configuration . <unk> } .
get the week of the given date .
converts a date string into a date object .
creates a file from the given directory .
calls { @link <unk> ( object method ) } for the { @link method } instance .
creates a new instance of { @link <unk> }
calls { @link <unk> ( method ) } for generating { @link <unk> } objects .
creates a new instance of the overloaded { @link <unk> } object .
calls a method on { @link <unk> () } .
calls { @link <unk> ( subroutine object ) } .
creates a new instance of { @link <unk> ( ... ) } for the caller identified by the given { @link <unk> } .
creates a new instance of { @link <unk> }
calls { @link <unk> ( method ) } for the caller identified by { @link <unk> () } .
creates a new instance of { @link <unk> } .
calls { @link <unk> ( method ) } for the caller identified by { @link <unk> () } .
calls { @link <unk> ( method ) } on the wrapped { @link <unk> } object .
creates a new instance of { @link <unk> }
copies the contents of an { @link inputstream } to the given { @link outputstream } using the given { @link outputstream } .
factory method to create a new instance of { @link documentbuilderfactory } .
parses the given file into a { @link document } object .
parses the given xml stream and returns a { @link document } object .
returns a stream of all child nodes of the given nodes .
returns a stream of nodes of the given parent element .
returns the child element of the given parent element .
returns the child elements of the given parent element .
validates an xml document .
returns a {
<strong > [ icu ] < / strong > creates a { @link archive } using the given { @link <unk> } and { @link <unk> } .
creates a date from the given string .
load properties from a yaml file .
the main method .
converts the specified inputstream content to a { @link <unk> } .
method to read the resource with the given name from the given resource .
parses the given { @link inputstream } to a { @link <unk> } .
encodes a string to a url - encoded string .
generates a digital signature for the given endpoint .
signs the given request content with the given secret key and access key .
generates a signature for the specified secret key .
<unk> <unk> <unk>
generate signature for a given secret key .
get the field mappings .
sets the signature of the given chunk .
/ * encodes binary data into a byte array .
decode an encoded string .
returns the size of the first non - whitespace character in the array .
checks if the given file or directory exists .
initializes the specified object with the specified size .
upload a file .
sign the request .
record the given object key .
completes a multi - part upload .
read xml file .
handles an alert system notices .
/ * ( non - javadoc )
set favorite attributes .
returns a list of { @link <unk> } s based on the given { @link httpservletrequest } .
/ * ( non - javadoc )
returns a list of categories for the given plugin .
/ * package
returns true if the session has expired .
/ * ( non - javadoc )
/ * ( non - javadoc )
validate the given notification entry .
add a list of entries to the list of entries .
gets the metadata for the specified request .
create a new token
gets a notification .
gets the list of groups for a given group
deletes an existing entity .
gets the <unk> .
gets a list of events for a given group
enables a custom response
deletes a notification .
/ * ------------------------------------------------------------
~ methods **************************************************************************************************************************************
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the { @link <unk> } for the { @link <unk> } .
init method .
removes all {
/ * ( non - javadoc )
generates a {
register authentication token .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * implementation
filter a list of { @link <unk> } s .
returns the number of registered {
returns a list of all the vertices in the given list of categories .
<p > clone . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new notification with the given error message .
maps the given { @link portlet } to a { @link <unk> } .
reads the notification entry specified by index .
/ * ( non - javadoc )
creates a url from markdown scheme .
----- private methods -----
/ * ( non - javadoc )
/ * implementation
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * implementation
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the primary key of the portlet .
extracts the user id from the response .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
inserts the given column into the normalized matrix .
<p > returns <code > true< / code > if the point <code > <unk> / code > is contained within <code > <unk> / code > . < / p >
<p > checks to see if a point is contained within a line . < / p >
computes the closest point in the polygon
computes the sign of the point on the plane .
computes the rigid body transform .
sets the canonical information in the quaternion matrix .
$antlr start <unk>
<p > renders a point in homogeneous coordinates . < / p >
<p > transforms a normalized image into a normalized image coordinate system . < / p >
<p > computes the essential matrix from a point vector . < / p >
<p > trifocal tensor with homogeneous coordinates . < / p >
scales the image along the image
rotates the polygon 90 degrees in the image .
converts a { @link dmatrix } into a { @link <unk> } .
<p > converts an axis into a histogram image . < / p >
tile the bounding box
draw the polygon inside the polygon
center the point in 2d coordinates .
adjusts the list of points in the polygon
calculates the average color for each pixel in the input image .
<p > checks to see if the two corners are identical . < / p >
computes <a href = http : // en . wikipedia . org / wiki / <unk> > kendall s <unk> / a > .
flip the position of the array .
<p > sets every element in the matrix to the specified value . <br > <br > a<sub > ij< / sub > = value <p >
<p > sets every element in the matrix to the specified value . <br > <br > a<sub > ij< / sub > = value <p >
selects the convex hull .
draw the polygon in the polygon
removes duplicates from the polygon .
returns true if the polygon contains duplicates .
returns the average point of each point in the polygon
converts a { @link dmatrixrmaj } into a { @link <unk> } using the provided { @link <unk> } .
converts a { @link <unk> } into a { @link <unk> } .
computes the energy of the edge
returns the number of edges in a polygon .
returns the anchor point for the specified line .
adjusts the polygon in the polygon
returns true if the polygon contains 2d coordinates
checks if the specified point contains a point in the graph .
checks to see if the point is inside the triangle
<p > returns the intersection of a line in pixels . < / p >
<p > returns the intersection of a <unk> . < / p >
<p > finds the intersection of two lines inside a line . < / p >
<p > computes the intersection of a < / p >
<p > returns the intersection of a point in the target line . < / p >
<p > finds the intersection of a line in the target line . < / p >
computes the intersection between two corners .
<p > checks if the point in the general plane contains the specified rectangle . < / p >
<p > checks to see if a point is inside a line . < / p >
computes whether two ellipses are contained within the contour
checks to see if a rectangle is intersect .
<p > determines whether the specified line is intersecting the specified rectangle . < / p >
sets the location of the intersection area .
computes the intersection of an ellipse .
converts a { @link dmatrixrmaj } into a matrix .
converts data to a rotation matrix .
converts euler angles to euler angles .
<p > converts a quaternion to a quaternion . < / p >
<p > converts a quaternion to a quaternion . < / p >
converts the quaternion to euler angles .
matrix conversion .
returns the least element in the matrix .
<p > <unk> : < / p >
<p > converts a matrix into a <unk> matrix . < / p >
<p > builds a rotation that is used by the rotation function . < / p >
<p > sets the rotation of a epipole to the rotation matrix . < / p >
<p > creates a rotation matrix that rotates the specified rotation by the specified amount . < / p >
<p > returns a matrix that rotations along the rotation of the rotation given by <code > <unk> / code > and the rotation axis . < / p >
<p > sets the vector of rotation to the given vector using the specified rotation angles . < / p >
converts a calibration matrix into an essential matrix .
<p > computes the rotation of the rotation matrix . < / p >
<p > computes a homography matrix from a projective camera matrix into a metric matrix . < / p > <p > x<sup > t< / sup > = <unk> > t< / sup > < / p >
set <code > this< / code > matrix to <code > t * r * s * m< / code > where <code > t< / code > is the given <code > translation< / code > and <code > r< / code > is a rotation and <code > r< / code > is a rotation - and possibly scaling - transformation specified
sets the rotation angle in radians .
returns the anchor point for the specified line .
converts a set of observations into a matrix .
/ * <unk>
/ * ( non - javadoc )
<p > given two observations of the frames frame the frames are assumed to be <unk> . < / p >
<p > sets the translation of motion transform . < / p >
interpolates the camera matrix into a rigid frame .
checks that the sequence contains the sequence
computes the 3d location of the polygon
<p > <unk> . < / p >
computes the mean and standard deviation of each point in the camera
<p > computes the first point of a point in the plane . < / p >
returns the <unk> of the polygon
finds the intersection of convex lines .
finds the intersection of the line inside the line .
returns a list of the polygons which are contained in the image .
precomputes likelihood for all <unk>
<p > converts a buffered image into a vector of values . <br > <br > dst is assumed to be in [ 1 2 3 ] . < / p >
<p > converts an array of elements into an array of objects . <br > <br > a<sub > ij< / sub > = 0 - <unk> > ij< / sub > < / p >
<p > performs an in - place conversion operation : <br > <br > <unk> > ij< / sub > * a<sub > ij< / sub > < / p >
converts a { @link dmatrixrmaj } into a { @link <unk> } .
performs a horizontal conversion of a general image .
create a <unk> object .
converts a general raster to a <unk> .
<p > creates a cross matrix that is in the first row of the second matrix . < / p >
<p > creates a cross - gaussian cross matrix . < / p >
extracts the cross product from the grid
cross product between 3 and 3 .
add a column to the matrix .
calcola la <unk> d 8
<p > computes the inner product of two matrices . < / p >
gets the column of the matrix .
rotates the problem around a epipole .
bend matrix multiplication .
creates a projection matrix from a matrix .
* multiply a submatrix .
<p > performs the following operation : <br > <br >
splits the results into a 3x3 matrix . <br > <br > b<sub > ij< / sub > = - b<sub > ij< / sub > <br > < / p >
<p > computes the result of a matrix : < / p >
&sum ; <sub > k = 1 : n< / sub > { |a<sub > ij< / sub > } for all i and j<br > < / p >
<p > computes the cross product of the results . < / p >
<p > computes the outer product of two camera matrices . < / p >
<p > computes the inner product of the two vectors . <br > <br > &sum ; <sub > k = 1 : n< / sub > { |a<sub > ij< / sub > } for all i and j<br > < / p >
inserts the given pixel by v .
extracts the column from the matrix .
/ * ( non - javadoc )
<p > converts an { @link vector } into a { @link dmatrixrmaj } . < / p >
extracts the column from the matrix .
sets the points vector .
<p > <unk> . < / p >
returns the offsets of the image represented by the specified amount of pixels
returns the offsets from the specified { @link <unk> } .
returns the angle theta from the specified angle theta .
returns the approximate half - coordinate of the specified angle theta .
computes the derivative between the latitude and x y and the specified amount .
convert the latitude component into the equirectangular coordinates
convert from latitude and longitude to equirectangular coordinates
convert from latitude and longitude components to equirectangular coordinates
/ * [ deutsch ] <p > bestimmt die <unk> - circle < / p >
/ * [ deutsch ] <p > subtrahiert die <unk> - <unk> - <unk> < / p >
computes the square of the distance between two regions .
<p > returns the value of the specified number in the specified value . < / p >
computes the intersection of two points .
computes the intersection of two lines on the plane .
computes the intersection of two lines .
<p > computes the intersection of a point in the plane . < / p >
<p > performs the following operation : <br > <br > c = a * b [ i ] = a * b < / p >
<p > computes the intersection of a point in the plane . < / p >
<p > computes the intersection of two points . < / p >
replies the intersection of the segment using the <unk> image .
returns <code > true< / code > if the specified <code > <unk> / code > is contained within <code > <unk> / code > .
returns true if the specified point is inside the box
computes the intersection of two points .
computes the tangent of the polygon
computes this quaternion from the quaternion described by q .
computes the elimination of a boundary .
returns true if the point is inside the plane .
sets the covariance matrix .
sets the solution to a normalized motion error .
applies a affine transform from the input image into the output image .
<p > converts a matrix into a point matrix . < / p >
converts a projective camera matrix into a rigid matrix .
<p > creates a trifocal tensor for the given matrix lines . < / p >
creates an lu decomposition of the given matrix .
replies the projection from the segment s segment .
******************** graphics ******************************************
<p > checks to see if the two rigid camera observations are identical . < / p >
<p > checks that the calibration matrix is known to be known to fit into a metric . < / p >
computes the energy of a line .
computes the energy of a line
convert a <unk> into a unit vector .
clip a circle with the center of the circle .
replies if the triangle intersects the sphere .
compute the arc cosine of a number .
computes the homography based on a point in the view
computes the homography based on the two points on the plane
returns the closest point on the line .
returns the closest point from the line .
computes the closest point on the plane .
<p > returns the closest point in point to point in the plane . < / p >
checks if the point is closest to the plane .
<p > computes the closest point in point to the closest point . < / p >
this method #string_id_map#
<p > extracts the closest point in homogeneous coordinates in homogeneous coordinates . < / p >
returns the closest point on the plane .
<p > performs a transform operation : <br > <br > a<sub > ij< / sub > = pose < / p >
computes the transform of two points .
applies the 2d matrix to the 2d image matrix .
computes the camera motion transform .
converts a list of { @link points } into a { @link list } .
transform a solution into a solution vector .
<p > computes the transform from the source motion to transform these observations . < / p >
<p > transforms a normalized image into a { @link <unk> } . < / p >
finds the first point in the list .
set the list of columns to be used .
checks to see if the function is equal to the other axis
<p > computes the roots of the two roots . < / p >
computes the approximate angle between two lines .
<p > converts a vector of <unk> to a line parameter . < / p >
<p > converts a linestring to a linestring geometry . < / p >
converts a { @link linestring } into a { @link linestring }
<p > converts a line - wise local line to a <unk> . < / p >
<p > converts a { @link statistics } to a { @link linestring } . < / p >
computes the dot product of a * x * b * x * b
<p > converts a list of <unk> into a list of <unk> . < / p >
<p > converts a line - wise local image into lines . < / p >
<p > converts a line - wise into a line by one of the lines . < / p >
converts a line into a <unk> .
converts a pair of { @link <unk> } into a plane .
converts a plane to a plane .
converts a plane into a plane .
converts a 2d motion estimate into a { @link <unk> } .
computes the signed form of the plane .
computes the signed distance between two points .
evaluates the distance between two points .
set this quaternion to be a representation of the supplied axis .
/ * ( non - javadoc )
/ * ( non - javadoc )
computes the homography based on the plane .
<p > checks to see if the matrix is identical to within tolerance of the skew . < / p >
<p > <unk> . < / p >
returns the average of the euclidean norm .
converts a list of lines into a line segment .
computes if the line is inside the segment .
performs sanity checks on invalid state .
checks to see if the coefficients of the two polynomials are identical .
calculates the average circle distance of a list of points .
returns the squared area of the area in this triangle .
<p > center the point specified by h < / p >
<p > computes the angle between two ellipses . < / p >
given a list of observations which can be <unk> in a polygon
creates an estimator for the pnp transform from the original observations .
<p > checks to see if a { @link <unk> } lies in a { @link <unk> } . < / p >
adds a random number of standard deviations from the observations .
<p > renders a 3d coordinate system . < / p >
transform a machine into a 3d model .
<p > computes the affine transform from a list of observations . < / p >
computes the angle between two vectors .
<p > computes the inner product of two vectors . < / p >
compute the arc cosine of a number .
sets the location of the location inside the image .
computes the subtraction of two points .
computes the dot product of the two vectors .
<p > computes the results of a matrix : <br > <br > a = a - b < / p >
convert an edge into an ellipse .
computes the euclidean distance between two ellipses
computes if the edge is visible inside the edge
<p > computes whether or not the edge of the image should be found on the edge of the image . if the edge is not in the image it will not be visible to the edge of the edge . if the edge is not in the image it will not be visible . < / p >
computes the angle of the edge from the edge
computes whether the edge of the ellipse should be connected to the edge of the edge
<p > returns true if the edge of the two ellipses are in the same direction as described in <a href = http : // tools . ietf . org / html / <unk> > <unk> / a >
computes the intersection of two ellipses
computes the tangent of two ellipses
computes the intersection of two ellipses
finds the intersection between the two points .
add the specified area to the box .
computes the euclidean distance squared between the two points .
<p > computes a homography matrix from a projective transform matrix . < / p >
returns the index of the polyline
computes the distance of two #string_id_map#
computes the distance between two points .
computes the distance between two points .
return the distance between the plane and plane .
returns the distance between the points <code > ( x y ) < / code > and <code > <unk> / code > .
sets the distance between the line and the width of the line .
computes the observations of the given point .
sets the point on line .
returns the point at line .
returns the distance between the line and the end point of the line .
calculates the euclidean distance between two sparse arrays .
returns a distance from the line segments of the line segments .
returns the distance between the line and the euclidean distance .
calculates the euclidean distance between two lines .
computes the euclidean distance squared from the contour lines and point .
calculates the euclidean distance between two points .
returns the distance between a segment and a segment .
returns the euclidean distance between the given point and the nearest point in the bounds of the nearest rectangle .
returns the euclidean distance squared between the two points .
returns the euclidean distance between the points in the line .
returns the distance between the two points .
returns the distance between the line and the given point .
returns the distance between the line and the given point .
calculates the distance between the line and line segment
computes the euclidean distance between two points .
computes whether the edge of the ellipse should be connected to the edge of the ellipse .
/ * ( non - javadoc )
returns the closest point in the contour
<p > returns the closest point on the line that points to a point in the line . < / p >
returns a line - wise distance from the line segments of the line segments .
sets this line to the closest point in the matrix .
<p > computes the closest point on the line in the specified line . < / p >
<p > computes the closest ellipse based on the image s contour coordinate and edge points . < / p >
<p > computes the mean of the polynomial using the specified offset and length . < / p >
/ * ( non - javadoc )
<p > creates a random hermitian matrix . < / p >
returns the normalized normalized vector between two vectors .
<p > checks to see if a point is equal to the given tolerance . < / p >
normalizes v1 and v2 .
converts a vector into a rotation matrix .
<p > converts a matrix into a projection matrix . < / p >
creates a distance between 2 and 3 .
extracts the column from the matrix .
<p > inserts the given column into the result . < / p >
/ * ( non - javadoc )
draws a bounding rectangle .
<p > computes the intersection between two points . < / p >
refines the polygon contain the convex hull .
adjusts the polygon
draws a square rectangle .
<p > checks to see if the specified rectangle contains the specified rectangle . < / p >
add another point matrix to the result .
returns the euclidean distance between the specified coordinate .
set the ellipse and foreground radius of the ellipse .
computes if the edge of the ellipse should be transformed to the edge
/ * ( non - javadoc )
<p > given a list of data points this function extracts the data from the camera matrix . < / p >
returns the parity of the triangle formed by the two points .
converts a { @link <unk> } to a { @link <unk> } .
estimates the motion of polygon .
<p > computes the mean of the point . < / p >
<p > computes the mean set of betas . < / p >
<p > computes the mean and b normalized image observations . < / p >
finds the bounding box inside the image and returns the bounding box
get the bounding box inside the image
converts a box into a list of labeled points .
computes the null - null bounding box .
returns the normalized image observations .
sets a value of this property to the specified value .
/ * ( non - javadoc )
computes the euclidean distance between two points .
ensures that the points inside the image are within the bounds of the image .
<pre > { a = 1 } < / pre >
normalize a polygon .
flip the elements in array [ 0 ] .
returns true if the polygon is convex .
<p > computes the euclidean distance squared between the two points . < / p >
checks if the matrix is symmetric .
finds the intersection of two lines .
calculates the average circle of a list of points .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
computes the jacobian for a matrix .
<p > checks to see if the two polynomials have been performed . < / p >
compute the jacobian matrix for the two polynomials together .
compute the pearson coordinates for two points .
returns the distance between the points <code > ( x1 y1 z1 ) < / code > and <code > ( x1 y1 z1 ) < / code > and <code > ( x1 y1 z1 ) < / code > .
returns the squared distance between two points .
/ * ( non - javadoc )
randomly generates a { @link list } of { @link point } { @link point } { @link <unk> } { @link point } { @link point } { @link point } { @link point } { @link point } { @link point } { @link <unk> } .
computes the mean and standard deviation of each point in the mean
computes the mean and standard deviation of each point in the list of points .
computes the mean and standard deviation of each point in the mean
compute the bounding box of the points <code > src< / code > and <code > <unk> / code > .
discards any cached principal in the cache .
discards any cached state for the given predicate .
convert a collection of strings to a set of strings .
get the server features configured for the given directory .
converts pdf to png format
/ * ( non - javadoc )
handle include tags .
/ * create a set of features for a table .
/ * ( non - javadoc )
download version from <unk> .
check if the features are known for the require feature .
returns a set of feature strings for the given list of files .
/ * ( non - javadoc )
returns true if the input string contains a case insensitive case sensitive case .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
extracts the manifest from a jar file .
installs a list of urls to a directory .
returns true if the version is equal to the version version .
extracts the version from the file name .
compare two attribute values .
validates the product info .
returns the command - line providers for the given file .
check if the specified jar file is a webjar .
returns a new map with key - value pairs .
/ * ( non - javadoc )
/ * ( non - javadoc )
shows a message box with the given title and message .
affiche une boîte de dialogue d une <unk> .
validate a resource .
<unk> method .
draw the shape
paint the picker class
/ * ( non - javadoc )
creates a qr code for the qr code .
converts a point to a completely square .
move the back to the center of the document .
determines whether two objects are equal or null .
write a dot file to a file .
returns the integer value of the property with the specified key .
returns a random integer within the specified range .
convert a <unk> to a <unk>
returns true if there are any artwork in the <unk> .
determines whether the given file should be accepted .
creates the color wheel .
/ * draws the <unk> turn into <unk> .
verifies that the given { @link x509certificate } is self - signed .
returns the distance between the start and end point .
runs a { @link <unk> } .
returns the distance between the current row and the current row .
set the sound data .
creates a sound instance from the audio data available .
prints a formatted string using the specified format .
prints a formatted string using the specified format and arguments .
the main method .
displays the given { @link <unk> } .
draws a line to the current plot .
helper function to get the map tile from a pixel .
draws a control point point
draws a circle
draw an ellipse .
computes the arc angle between two points .
draw a square image .
draws a rectangle with the given { @code <unk> } and { @code <unk> } .
draws a polygon to the list of coordinates .
draws the image at the specified location .
<p > picture . < / p >
给图片添加文字水印<br > 此方法并不关闭流
converts a cross - coordinate to a list of degrees .
save the given filename to a file .
/ * ------------------------------------------------------------
sets up the coordinate axes .
initialize the color wheel .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
/ * calculates the shape of the edge shape .
draws an arrow between two points .
/ * <unk>
computes the derivative of orig along the x .
adds an {
initialize the color palette .
adjusts the pen wheel .
/ clover : off
set the vacuums speed .
move the value to the <unk>
computes the variance of a plan point .
paint the background of the button .
scalarization values based on the radius of the solution .
draws a triangle with the given length .
returns the cumulative probability of uniform
returns the cumulative probability of a uniform distribution .
returns the log <unk> of the given probabilities .
/ * ( non - javadoc )
randomly computes the sum of all of the points in a vector . <p > reference : <a href = http : // en . wikipedia . org / wiki / <unk> > <unk> / a >
test method .
sets the asset id .
loads the contents of an inputstream into a byte array .
foobarbaz → foobarbaz
foobarbaz → foobarbaz
create a new user .
update user by id .
updates an existing user .
returns a { @link query } for the given { @link search } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of all elements in the list that match the given criteria .
gets all the aggregate results from a search model .
initialise the intersection of two counters .
returns the object associated with the given id .
normalize a path to a path .
/ * ( non - javadoc )
create a list of users .
update the chart dto .
resume the job by id .
/ * <unk>
<unk> <unk> <unk>
/ * ( non - javadoc )
extracts the cookie header from the cookie list .
register a { @link pair } of { @link injector } s .
authenticates a user .
logout method .
authenticates a user .
change the status of a password .
/ * ( non - javadoc )
<unk> <unk> <unk>
get a list of all the roles in the database .
get an entity by id .
returns a list of all the activity instances associated with the job .
schedules a new job .
authorizes the job to access the specified job .
resume the job .
/ * ------------------------------------------------------------
adds a projection to a relation
/ * ( non - javadoc )
create a menu .
/ * ( non - javadoc )
schedule the given <code > { @link org . quartz . triggers . trigger } < / code > with the given <code > <unk> / code >
sets the value of { @link <unk> } .
sets the start time of the given trigger .
deletes a mail item .
/ * ( non - javadoc )
builds the { @link dbi } .
initialize scheduler .
returns a list of all fields of the given class that are auto - attach .
returns a map of field names for the given class .
/ * ( non - javadoc )
{ @inheritdoc }
get permissions .
restful endpoint for creating a new role .
create a new service .
/ * ( non - javadoc )
/ * ( non - javadoc )
initializes the encryptor .
generates the hash code for the given attributes .
build a query string .
sends a message to the specified { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
resets the password for a strong password .
changes the password of the given user .
creates a { @link value } from the given { @link optional } .
computes the sha - 256 hash of the given password .
set the prefix strength .
validate the password strength .
/ * ( non - javadoc )
computes the md5 hash of the css content .
loads the asset from the file .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
creates a { @link reflections } instance for the given name .
finds and registers the given { @link <unk> } with the given { @link <unk> } .
<p > <unk> . < / p >
<p > <unk> . < / p >
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> > <unk>
forwards to the menu .
gets all the permission .
/ * ( non - javadoc )
/ * [ deutsch ] <p > <unk> die <unk> f&uuml ; r einen neuen <unk> . < / p >
/ * ( non - javadoc )
{ @inheritdoc }
checks whether the given configuration is valid .
create a system parameter .
get the system persisted parameters .
/ * ( non - javadoc )
gets the response to the server .
creates a new filter with the given name and value .
creates a query representing a field that equals to the given value .
the field is less than or equal to the given value .
creates a less than or equals expression for a given property name and value .
create a greater than or equal to expression
create a greater than or equals expression
creates a new { @link <unk> } instance representing the specified property .
creates a new query representing the in - expression which is in the form of a property name .
sets the namespace prefix for the namespace .
/ * ( non - javadoc )
returns the { @link <unk> } for the given { @link rel } .
add a link - relation type to this resource .
convenience method for creating a { @link resource } with a link - relation type .
convenience method for creating a { @link resource } with a link - relation type .
returns a list of { @link resource } s with the given { @link link } s .
/ * ( non - javadoc )
creates a new { @link resource } instance with the given { @link <unk> } .
returns a copy of the {
creates an immutable copy of the given map .
returns the root cause of the given throwable .
returns a { @link list } of { @link throwable cause } s of the given { @link throwable throwable } s that caused the throwable .
get the stack trace as a string .
get the stack trace of the given throwable .
propagates { @code throwable } to { @code runtimeexception } or { @code runtimeexception } .
<unk> > <unk>
deserialize a byte array .
<p > gets a substring of the specified portion of a string . < / p >
encodes a byte array into base64 notation .
encodes a string into a byte array .
<p > gets a substring of the specified portion of a string . < / p >
writes an int to the given byte array starting at the given offset in little - endian order .
/ * ------------------------------------------------------------
convert a byte array to an int .
decodes a signed long value from the given byte array at the given offset .
copy the contents of the given inputstream to the given writer .
copy the contents of the given string to the given output stream .
copy the contents of the given reader to the given output stream .
copy the contents of the given string to the given output stream .
returns { @code true } if and only if { @code lob } is equal to { @code true } otherwise .
copy the contents of the reader into a string .
read the contents of an input stream into a string .
copies the contents of the given { @link inputstream } into a { @link string } .
reads a csv file and returns a list of string .
reads the entire contents of the given { @link inputstream } into a { @link list } of strings .
reads the entire contents of the given { @link inputstream } into a { @link list } .
<unk> > <unk>
implementation of pbkdf2 ( <unk> ) .
implementation of pbkdf2 ( <unk> ) .
implementation of pbkdf2 ( <unk> ) .
copies a file from src to dst .
copies the contents of the specified file to the specified destination file .
copy the contents of the given inputstream to the given file .
writes all files from src to dst .
recursively delete a file .
sets the last modified time of the file to the given file .
copy the contents of an inputstream into a byte array .
reads the contents of a file into a byte array .
compare two files .
gets the name of the file .
/ * ( non - javadoc )
creates a {
parses a {
creates a new {
return the character set in {
adds a parameter to the task context .
returns a copy of this media type with the same quality value as the given media type .
returns a new media type with the given quality value removed .
creates a new { @link mediatype } object with the given quality value .
returns whether or not the given media type range is a subtype of range .
combines multiple iterables into a stream .
creates an infinite iterator that cycles indefinitely over the elements of the iterator .
returns an immutable list containing the elements in the given list .
returns { @code true } if the two elements are equal in the same order .
creates a new deferred drop iterable .
creates an iterable that drops elements from the given iterable .
creates a list from an iterable .
converts an { @link iterable } to a { @link set } .
convert an iterator to a list .
fills the buffer with the given value .
/ * documented <unk>
/ * documented <unk>
/ * documented <unk>
/ * documented <unk>
/ * documented <unk>
parse a { @link jsonarray } from a { @link file } .
parse a { @link jsonarray } from a { @link file } .
returns a list of lines from a file .
parse a { @link jsonarray } from a { @link file } .
returns a list of lines from a file .
create a buffered reader for this file using the specified charset .
creates a buffered writer for this file using the specified encoding .
create a buffered writer for a file using the specified encoding .
read lines from a file .
reads the entire contents of the given { @link inputstream } into a { @link list } .
convert a string to a uri .
try to find a resource by name .
load a resource .
copies the contents of the { @link inputstream } to the given { @link outputstream } .
writes the content of this url to the specified output stream .
writes this { @link inputstream } to the given { @link url } .
read string .
<unk> > <unk> / code > <unk>
<p > checks if two calendar objects represent the same instant in time . < / p >
determines whether the specified date is the same month with the specified <unk> .
<p > checks if two calendar objects represent the same local time . < / p >
<p > checks if two dates are different . < / p >
determines whether the specified <code > <unk> / code > is the same day in the specified calendar .
<unk> <unk> <unk> <unk> <unk> .
determines whether the specified <unk> is the same week with the specified <unk> .
determines whether the specified date is the same month with the specified <unk> .
determines whether the specified <unk> is the same month with the specified <unk> .
<p > checks if two date objects are the same instant . < / p >
determines whether the specified { @code <unk> } is the same day with the specified { @code <unk> } .
parse a string into a { @link java . util . date } .
<p > parses a date / time into a { @link date } object . < / p >
<unk> > 格式 hh : mm : ss
returns the given date as a calendar object .
combines multiple iterators into a single closeable iterator .
multiplexes an iterator of iterators into an iterator . iteration order of source iterators are not polled until necessary .
creates an infinite iterator that cycles indefinitely over the elements of the iterator .
creates an infinite { @link iterator } .
test if two iterators are equal .
creates an iterator yielding elements from the source iterator . the iterator will iterate over the elements of the iterator .
skips the given number of elements .
creates a <i > mutable< / i > { @code hashset } instance containing the given elements .
/ * documented <unk>
checks if the given string is a blank line .
<p > abbreviates a string using ellipses . < / p >
joins the given strings with the specified delimiter .
compare two strings .
creates a random string from the given array of characters .
returns a string representation of the given string .
shuffles a string in a string .
<p > strips whitespace from the start and end of the given string . < / p >
<unk> > <unk>
<p > <unk> . < / p >
counts the number of spaces in the string .
trim trailing spaces from the beginning of the string .
pad a string to a string .
pad a string to a string .
<p > <unk> . < / p >
unquote a string .
counts the number of occurrences of the given substring in the given string .
parses the given encoded url and returns a { @link url } object .
returns the { @link url } representation of the given url .
loads a url from the given base url and filename .
returns the name of the given class .
gets the short name of the given class .
returns the package name of the given class .
get the ancestors of the given class .
returns a list of all superclasses of the given classes .
verifies the given password using the given password .
read string .
add a byte .
write a portion of an array of bytes .
reads up to <code > len< / code > bytes of data from this <code > byte [] < / code > into a new byte array .
concatenate two arrays .
returns an array containing all of the elements in the given array that are contained in the given array .
creates a copy of an array of bytes .
copy the contents of a byte array into a new array .
creates a copy of an array .
<p > converts an array of primitive longs to objects . < / p >
concatenate two arrays .
rotate an array of doubles .
concatenate two arrays .
randomly shuffle the given array .
creates a copy of an array .
sorts the supplied array using the specified comparator .
sorts an array of doubles .
sort an array of doubles .
<p > converts an array of primitive shorts to objects . < / p >
<p > converts a character array into a primitive array . < / p >
returns a copy of the specified byte array .
<p > converts an array of primitive booleans to objects . < / p >
convert a float array to a double array .
convert a double array to a double array .
creates a copy of the array .
returns an array containing all of the elements in the specified array .
<p > converts an array of primitive shorts to objects . < / p >
converts a class array to an array of strings .
converts a byte array to a byte array .
<p > converts an array of object booleans to objects . < / p >
convert a float array to a double array
convert a double array to a double array .
decodes a <code > string< / code > into a <code > string< / code > .
returns true if the given string is a punctuation character .
<p > checks if a string is punctuation . < / p >
<unk> / br > <unk>
~ methoden ----------------------------------------------------------
encodes the given array of bytes into a string using the utf - 8 encoding .
decodes a string into a byte array .
decodes <code > len< / code > characters into a portion of an array .
creates a rational number of the specified value .
<p > creates a <code > fraction< / code > instance from a <code > string< / code > argument . < / p >
<p > divide this fraction by another . < / p >
<p > creates a fraction that is divided by the given fraction . < / p >
/ * [ deutsch ] <p > liefert eine kopie mit dem <unk> betrag . < / p >
<p > divide this fraction by another . < / p >
calculates the fraction of the specified exponent .
returns a { @code bigdecimal } whose value is <code > <unk> / code > .
<p > creates a reduced reduced reduced number . < / p >
/ * documented <unk>
/ * documented <unk>
/ * documented <unk>
/ * documented <unk>
/ * documented <unk>
/ * [ deutsch ] <p > interpretiert den angegebenen iso - 8601 - format . < / p >
/ * [ deutsch ] <p > addiert den angegebenen betrag der entsprechenden zeiteinheit zu diesem datum . < / p >
format a list of { @link duration } objects .
calculates the difference between two dates .
returns the maximum value in the array .
returns the minimum value in the array .
returns the arithmetic mean of the values in the given int array .
returns the sum of all values in the given long array .
safely convert a long to a int .
converts the given long to a { @link integer } .
safely subtracts the given { @code int } value from { @code b } and { @code b } .
safely multiply two longs .
safely computes the result of a floor ( a b ) = a * b ( b ) = a * b * b * b .
safely multiply two longs .
safely computes the result of a floor ( a b ) = a * b ( a * b ) = a * b ( a b ) = a * b ( a b ) = a * b ( a ) = a * b ( a b ) = a * b ( a b ) = a * b (
safely multiply the exponent of a { @code long } value .
returns the greatest common divisor of { @code a } and { @code b } .
returns the least common multiple of the two { @code lcm } values .
computes the least common multiple of 2 .
safely convert a long to an integer .
ensures that an object reference passed as a parameter to the calling method is not null .
throws an illegalargumentexception with the given message .
writes an object to the given type .
throws a {
returns true if the given boolean is a boolean .
determines whether the given boolean values are exclusive or not .
convert a string to a boolean value .
split the given { @link file } .
creates a splitter that returns { @code true } on the given pattern .
returns a splitter that implements {
<p > <unk> . < / p >
<p > wraps a { @code string } into a { @code string } . < / p > <p > this method is meant for <strong > internal< / strong > use only . < / p >
returns a copy of this { @code separator } with the given { @code trimmed } .
returns a copy of this { @code separator } with the given { @code trimmed } .
splits a string into a list of strings .
creates a mutable { @code comparator } with the given { @code comparator } and { @code comparator } .
returns a mutable { @code <unk> } containing the elements of { @code iterable } sorted by the given { @code comparator } .
returns a comparator that reverses the order of <code > o1 < / code > s .
<p > <unk> . < / p >
compare two objects with null values .
returns a copy of this { @code separator } with the given trimming .
returns a copy of this { @code separator } with the given trimming .
returns a copy of this { @code separator } with the given trimming .
returns a copy of this { @code separator } with the given trimming .
returns a copy of this { @code separator } with the given trimming .
returns a copy of this { @code separator } with the given trimming .
joins the given parts into a single string .
validate the parameters .
validates the hmac with the hmac .
/ * documented <unk>
/ * documented <unk>
/ * documented <unk>
/ * documented <unk>
/ * documented <unk>
gets the href href of this link .
try to handle the error request
save the response body as a json object .
{ @inheritdoc }
returns a {
unmarshalls the current token into a list of objects .
unmarshalls the current token .
resolve resource .
checks if a resource is allowed to access the given resource .
<p > invoke . < / p >
returns the value associated with the given key .
parse the current token as a { @link slice } .
unmarshalls the { @link <unk> } into a { @link list } .
unmarshalls the current token into a list of objects .
/ * ( non - javadoc )
{ @inheritdoc }
checks if the given value is assignable to the given backing type .
returns the generic type of the given interface or null if not found .
casts the given type to the specified type .
{ @inheritdoc }
unmarshalls the current token into a list of objects .
@param longitude @param representation
computes the sunrise for the accounts .
@param longitude @param <unk> @param <unk> @param <unk> @param <unk> @param <unk> @param <unk> @param <unk> @param <unk> @param <unk> @param <unk> @param <unk> @param <unk> @param <unk> @param <unk> @param <unk> @param <unk> @param <unk> @param <unk> @param <unk>
figure out the <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
figure out the next history query for the given date .
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
fetch query .
creates a composite long term forecast .
creates a long term forecast .
produce a geographypointvalue from a string .
/ * ------------------------------------------------------------
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
get the header name for the given points .
returns the <unk> level for the given points .
helper method to create a { @link uri } from a uri string .
<p > checks whether this date is a sun transition . < / p >
runs the example .
returns a set of points sampled on the given date .
returns the best history for the given date .
tbd expr idocumentquery<t > idocumentquerybase<t idocumentquery<t >> . <unk> > ( expression<func<t tvalue >> propertyselector double latitude latitude longitude )
@param longitude @param latitude @param latitude
get all file extensions for a decoder .
convert a string to a simple class name .
executes the <code > <unk> / code > <code > <unk> / code > to the <code > <unk> / code > <code > <unk> / code > .
evaluates the given input stream
invokes a method with the specified arguments .
/ * ( non - javadoc )
returns a reference to the given <unk> .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> > <unk>
authenticate a configuration file .
check if the {
create a { @link iterator } of { @link class } objects from the given { @link service stream } .
{ @inheritdoc }
creates an instance of the provided interface .
gets the service implementation .
uses the { @link serviceloader } to instantiate all spi implementations of the given class .
returns a list of all services of a given interface .
gets the module .
returns an { @link inputstream } that can be used to read the data from this { @link datasource } .
returns the size of the data source .
creates a { @link reader } object that represents the specified { @link java . util . data } .
returns the value at the given index .
returns the numeraire at the given index .
/ * ( non - javadoc )
$antlr start <unk>
try to locate an object node .
/ * ( non - javadoc )
returns true if the structure is shorter than the bounds of the argument .
returns a {
run the semantics of {
/ * ( non - javadoc )
copied from {
run the clustering .
/ * ( non - javadoc )
/ * <unk>
run the z - direction closure
/ * <unk>
sorts from <code > <unk> / code > to <code > <unk> / code > .
returns the successor of the given entry .
/ * <unk>
l - <unk> > <unk>
returns the successor of the specified region .
shutdowns remotely .
{ @inheritdoc }
expression3 = <unk>
parses a regular expression .
validate from computations computations .
/ * ( non - javadoc )
parse a segment expression .
parse a word .
/ * ------------------------------------------------------------
sparse lu factorization
this method is called by the <unk> operator .
process a charsequence .
/ * ( non - javadoc )
parse query .
formula : = ( x1 y1 ) ?
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
/ * matches <unk> .
/ * <unk>
compiles the given string with the given flags .
compiles the given script pattern into a <unk> .
sets the acls of an existing shared arc .
returns a {
/ * ( non - javadoc )
<unk> alignment by <unk> alignment
resolve a chain of afps
/ * ( non - javadoc )
return the alignment of the alignment
sets the layout of an arc .
gets the <unk> of an arc .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
write out the contents of the map .
/ * ( non - javadoc )
add the prefix to the prefixes .
replaces the next occurrence of the specified character with the specified character .
decodes the next regular expression .
write notes .
computes the final token for a character .
invoke the <unk> method .
retrieves a { @link com . google . gwt . user . client . <unk> } as a { @link com . google . gwt . user . client . <unk> } .
sets the internal state set .
calculate the miss .
/ * ( non - javadoc )
gets the <unk> of the state machine .
/ * package private
/ * package
runs a { @link <unk> } and returns the set of threads that can be used by the { @link <unk> } .
nonsymmetric feature from <unk> .
returns a string representation of this <code > <unk> / code > .
resets the state of the {
counts the state of the state machine .
removes the old state from the old state .
start a new region .
this method -----------------------------------------------------------------------------
/ * -----------------------------------------------------------------------------
/ * package
copy the contents of the given state to the given state .
/ * ***********************************************************************************
/ * package
get the <unk>
/ * ( non - javadoc )
compute the number of parent documents .
/ * <unk>
/ * <unk>
/ * ------------------------------------------------- [ <unk> ] ---------------------------------------------------
/ * package
/ * ------------------------------------------------------------
/ * ( non - javadoc )
selects the results of a query .
/ * ( non - javadoc )
this method is used to return true or false .
/ * package
method to allow derived classes to be re - used .
combines two factors together .
/ * package
add a state to the state machine .
serializes the state of {
reset all the <unk> of the worker .
check if an arc is complete .
gets the options from the given properties file .
get the store plugins .
gets the report plugins .
/ * ( non - javadoc )
main method .
parse command line arguments .
/ * package private
creates command line options .
builds the options .
merge tasks .
/ * ( non - javadoc )
interprets the command line .
parses command - line arguments and returns the command line arguments .
executes the task .
reads the properties from the given properties file .
prints usage information .
returns the home directory of this installation .
returns a list of <unk> files .
parses the given list of { @link string } s into a { @link map } .
convert the given geometry to a json string .
removes duplicated coordinates within a polygon .
returns the extent ids of the given {
returns the extent ids of the given { @link <unk> } .
returns true if the specified point is inside a polygon .
returns the route methods of the route .
reverse routing .
add a {
add a {
this method adds the given path pattern to the routes list .
remove a path pattern .
remove target from target
random number of routes .
this method is used to add routes to target path .
this method is used to add routes to target path .
this method adds the specified path pattern to the routes list .
remove a path pattern .
remove target router
returns true if any path token matches any of the supplied tokens .
/ * ( non - javadoc )
checks if the criterion is equal to the given value .
/ * ( non - javadoc )
loads a file definition from the given directory .
this method is used to get the bookmark set for this bookmark .
returns the sorted set of children .
compare two entries .
compare two entries .
compare two entries .
saves the owner of the current user to the given value .
/ * ( non - javadoc )
returns the description of the description of the description .
sets the last modified time of this servlet . <p >
<p > <unk> . < / p >
return the value of the tag .
<p > <unk> . < / p >
/ * ------------------------------------------------------------
compile a file .
add a filter to the xml file .
startelement method .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
report the start of dtd declarations if any .
executes the compilation .
/ * ( non - javadoc )
implementation of <unk> .
receive notification of a custom action .
adds taglib libraries to the list of taglib resources .
receive body of body tag .
compiles the include directive .
this method gets called when a start tag is encountered .
checks if the given uri is a prefix .
constructs a saxparser configured to a sax sax parser .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
loads the class data from the given file .
wraps the given callable in a { @link runtimeexception } .
wrap a { @link callable } to a { @link <unk> } .
extract the authorization header from the request .
gets the singleton instance of this { @link <unk> } .
map a function to a java class
<p > <unk> . < / p >
/ * ( non - javadoc )
sets the length of the stringvalue to the end of the array .
append the given string to the end of the string .
/ * ( non - javadoc )
/ * ( non - javadoc )
return an object from the given file
compile a file from a file .
<unk> du <unk> <unk>
scan the jar file and performs the actual jsp compilation .
@see <unk> ( string )
get the servlets page encoding .
determine the syntax of the syntax document
/ * ------------------------------------------------------------
gets the encoding of the given content - type .
/ * ( non - javadoc )
checks if the given reader is a line of the source file .
create a compiler .
return an input stream for the given resource
return the location of the controller .
/ * ( non - javadoc )
==================== compile ====================
<p > load . < / p >
reads a single character from the stream .
read a portion of an array of characters .
calculates the last mod .
computed the stack size
<p > <unk> . < / p >
starts the loading cycle .
reads the contents of an inputstream into a byte array .
/ * ( non - javadoc )
/ * ( non - javadoc )
closes the underlying output stream .
iterates over a list of objects and returns a list of all the elements in the list .
/ * ( non - javadoc )
create a key from a string .
/ * ( non - javadoc )
creates a { @link <unk> } .
returns an array of <code > <unk> / code > objects that can be used to import the <code > <unk> / code > objects .
create a new { @link <unk> } for the specified { @link <unk> } .
filter out the common web topics related to the specified path .
acquires a checksum from the pool .
gets the size of a property .
validate simon name .
skips over and discards <code > n< / code > bytes of the specified <code > n< / code > beginning at most <code > n< / code > bytes .
gets the dash - readable memory usage memory .
get the number of memory usage memory usage .
reads up to <code > len< / code > bytes of data from this input stream into the specified byte array starting at the specified absolute { @code offset } . if <code > len< / code > is <code > null< / code > then <code > - 1< / code > is returned .
/ * ( non - javadoc )
seeks to the specified position .
seek to the specified position .
seek to the next bam block .
locates the index of the specified layer at the given offset .
get the index entry for the given block number .
/ * initializes the block decoder for this block .
if the base object is a valid temporary variable then set the temporary variable .
output connectionfactory method
--- cos maven artifacts ---
checks to see if the file is a zip file .
set the value of opts .
/ * ( non - javadoc )
/ * convert a <unk> to a list of <unk>
/ * convert the <unk> to <unk> .
@param pos @param pos @param pos
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
reads a char from the input stream .
throws an exception for the expected byte .
throws an exception for invalid byte .
loads the mappings from the given uri .
==================== compile ====================
parse a jsp configuration .
/ * <unk>
scans the classpath for tlds recursively .
/ * ( non - javadoc )
/ * ( non - javadoc )
add resources to the manifest .
same as {
returns the parent class loader of the current thread .
sets the bytecode of a task .
<unk> - <unk>
write a bytecode to a file
start snippet : <unk>
{ @inheritdoc }
adjust the base url .
start the daemon thread .
stops the streams .
/ * ( non - javadoc )
find channel instance by building a channel instance by building a { @link io . channel . channel } instance .
returns the channel instance with the given name .
finds a channel instance by by id .
returns the list of deploys group for a server .
{ @inheritdoc }
/ * ( non - javadoc )
copy the contents of the given inputstream to the given outputstream .
copies all bytes from { @code from } to { @code to } .
parses a path to a node .
add location attributes .
create a new { @link attributes } from the given { @link <unk> } .
/ * package private
returns the name of the next token in the stream .
{ @inheritdoc }
/ * parse quoted string .
compiles the file ====================
this method gets called when a start tag is encountered .
parses the include directive .
writes the include directive to the xml file .
generates directives for taglib directives .
parses directives .
validate the tag directives .
this method gets called when a start tag is encountered .
this method checks if the attribute is annotated with an attribute .
parses a variable declaration .
/ * parse a comment and wait for it to finish .
parse and parse the declaration .
/ * ------------------------------------------------- [ <unk> ] ---------------------------------------------------
parse and wait for the expression .
encode the uri tag .
this is the main method that calls the <unk> method .
parses the xml selection attributes .
writes tags to the tag .
parse a lambda expression which is of the form :
----- private methods -----
get the property set property .
loads the body of an empty body tag .
parses the use bean tag .
parse body .
parse the body of a jsp tag .
try to parse the parameters of the tag .
/ * parse failed parts .
writes a plugin .
checks an l command .
parses the standard action .
liest einen tag des tag ein . <br / > ebnf : <br / > <code > # ; < / code >
/ * parse the text of a template .
parses a string .
/ * ////////////////////////// internal methods //////////////////////////
/ * parse the elements of the reader tag .
parse the text of the user identified by <code > <unk> / code > .
/ * <unk>
parse the body of the tag .
parse the body of the body tag .
/ * parse body tags .
parses the user preference .
returns the body of the tag body .
returns the value of the named attribute as a <code > string< / code > . if no such attribute exists returns <code > null< / code > .
/ * ( non - javadoc )
returns the value of the named attribute .
set the parent to this node .
gets the list of processor factories for the given class .
add a new attribute to the attributes map .
adds a child to this node .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the node with the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
restores the binding with the given name .
serializes object to byte array .
create a new byte array .
/ * ( non - javadoc )
<p > <unk> . < / p >
writes a string representation of a field to a writer .
creates a new element with the given name .
creates a new element with the given name .
get a map of child nodes of a node .
writes a single character .
write a portion of an array of characters .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
writes the contents of the stream to the output stream .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
loads properties from the properties file .
returns the closest node with the given key .
registers a { @link <unk> } with the given key .
stream resource .
summarize fields .
normalizes the given path .
/ * ------------------------------------------------------------
<p > <unk> . < / p >
read a single character from the stream .
/ * ( non - javadoc )
creates a new instance of {
returns the integer value of a signed integer .
returns true if this selector is non - null .
resolves a key / value pair to a string .
returns the value of a property .
splits the compound meta data .
writes the announce file to the database .
handle an error attribute .
this method creates and returns a new <unk> for the specified property using the specified parameters . if the property is not set then a runtime exception is thrown .
convert the value according the type of devicedata .
return a value of a property on the object .
this method allows the bean framework to set property values for the property referenced by <code > <unk> / code > .
convert a relative path to a relative path .
/ * ------------------------------------------------------------
adds a tag handler to this tag handler pool .
this method removes all available tag tags from the pool .
checks whether the specified resource is a resource .
/ * ( non - javadoc )
initializes data from the input stream .
returns the original exception .
proprietary method to evaluate el expressions .
returns a string representation of this port .
loads xml from the given path .
compile a command according to the specified path .
register a tag library .
saves the tag files .
this method removes all generated classes from the given class file .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
this method returns a list of all ====================
/ * ------------------------------------------------------------
copy files from a base directory to a list of files .
returns the next argument .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ------------------------------------------------------------
removes all of the nested entries from the cache .
returns the position of the highest root node in the list .
proprietary method to parse el expressions
set the length of the distance .
returns true if the string matches the given string .
check if the tree matches the given string .
unescapes the given string according to the given limit .
seek to the next character .
/ * ( non - javadoc )
returns the next token in the stream .
return true if the next character is a delimiter .
register source file .
unregister source file .
transforms the datasource object into an object required by the class .
open the next file .
{ @link <unk> ( string ) }
<p > <unk> . < / p >
/ * ( non - javadoc )
get the value of the default modules for the given compilation result .
<strong > [ icu ] < / strong > sets the preset preset in the default preset .
sets the maximum size of the array .
set the preset parameter value .
set the bars .
sets the transfer mode .
sets the <code > <unk> / code > for this <code > <unk> / code > .
sets the match number .
/ * ( non - javadoc )
/ * ( non - javadoc )
get template .
print error statements
/ * ( non - javadoc )
this method is used to report a fatal error .
this method is used to report a fatal error .
executes the compilation .
this method will be called to register a tag with the given error code and error code .
pass the file to the <unk>
parse the javac message and return an array of <unk> .
filters the given list of { @link predicate } s into a { @link list } of { @link <unk> } s .
removes the decision from the given <unk> .
sets the bundle resource path .
sets the bundle resource prefix .
encodes the given rule uri into a url - encoded string .
/ * ( non - javadoc )
load a xml document .
converts a dom node into a dom node description .
validate the xml schema for the wsdl .
get the schema from the schema .
create bindings manager .
/ * <unk>
add custom types to the binder .
initialize the binder .
load the aspect information from the <unk> .
/ * ( non - javadoc )
returns the file name of the given path .
/ * private static void <unk> ( string tag ) {
returns an instance of the {
creates a new instance of the {
gets the byte array with the specified size .
gets an int array from the array .
resolve the dependencies .
get a { @link org . apache . commons . codec . <unk> } instance .
processes a collection of { @link <unk> } s into a { @link set } of { @link file } s .
turns a list of { @link <unk> } s into a { @link <unk> } .
return the resource as a stream .
jsp2 . <unk>
this method scans the classpath for classes and returns the logging history .
<unk> start sentences
process the tag name .
method used to validate the <unk>
/ * ( non - javadoc )
get the current position of the stack .
get the encoding of the given input file .
initializes the initial reader for the initial connection to the initial stream of bytes .
returns the iana encoding name for the specified bytes .
/ * parse the input string .
checks whether the scanning text is a valid xml declaration .
scan surrogates for surrogates .
report a fatal error with the given message id .
gets the link to the specified channel .
fill a list of { @link <unk> } s with the given { @link channel } .
fill a list of { @link <unk> } s with the given { @link channel } .
returns the { @link <unk> } for the given path .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
log a message with a throwable .
generates code to add a servlet to the given parameters .
adds a filter to the list of init - targets .
update the filter s filters .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an instance of the specified size in the specified range .
returns an instance of <unk> .
creates an instance of this class .
<unk> > <unk>
moves the cursor to the end of the buffer .
fills the current window with the specified bytebuffer .
skips the specified number of bytes from the input stream .
get the number of bytes from the buffer .
get the number of bytes in the buffer
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * package
flush buffer .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
closes the underlying output stream .
writes <code > string< / code > to this <code > <unk> / code > .
writes a single character .
writes a portion of an array of characters .
/ * ( non - javadoc )
allocates a new buffer .
returns a lock executor that locks the lock .
/ * ( non - javadoc )
validate the error .
<p > <unk> . < / p >
resets all byte arrays to be a byte array .
get the error message as string .
<p > <unk> . < / p >
looks up the message described by the given key and the specified arguments .
gets the localized message for the given message and arguments .
<p > <unk> . < / p >
/ * ( non - javadoc )
generate class .
compiles the source file .
/ * package
/ * ( non - javadoc )
initialize the default java compiler .
scans the classpath for <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a string to a javascript compliant string .
rewrite the given xmlfile
compile a conditional tag .
<unk> <p > <unk> / p >
/ * ( non - javadoc )
generate the package name .
prints the environment variables to the system .
/ * generate a list of static initializers
generate the default class variable declarations .
this method appends the given text to the output .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
prints the constructor .
gen - last : <unk>
output transaction header
generate the java code for the compilation .
publish the package name .
generate tag handler attributes .
/ * ( non - javadoc )
/ * ( non - javadoc )
generate the scripting query variables .
/ * package
/ * documented <unk>
read properties from an xml file .
export tracks to a zip file
create a path from a reference stream .
<unk> <unk> <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
this method releases the <code > <unk> / code > available to this <code > <unk> / code > .
parse an expression .
/ * --- private methods ---
/ * --- private methods ---
returns the next token in the string .
/ * this method is similar to {
/ * ( non - javadoc )
fills the <unk> with the given uri .
print a list of characters .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the index of the first line in the string .
returns true if the given token is an expression .
******************* beginning of function ******************** //
set the scope scope .
checks the attributes of a node .
escapes special characters in a stringbuilder .
/ * ( non - javadoc )
loads a class from a string .
returns a string representation of a call call .
proprietary method to validate expressions
return the class name of the specified tag .
returns the canonical package name for the given path .
splits the given path into an array of strings .
convert a string to a valid java identifier .
returns a string representation of the given character .
returns true if the given key is a java identifier .
asserts that the given string is a valid java identifier .
returns the canonical name of the given class .
expand the classpath
creates a new random { @link string } .
puts the value into the map if it is not null .
write repository .
/ * ( non - javadoc )
gets a copy of this { @link <unk> } .
<unk> modifier .
returns a sorted map of key - value pairs .
/ * ( non - javadoc )
/ * <unk>
/ * ------------------------------------------------------------
this method will increment the count of the errors in the jsp page .
{ @inheritdoc }
checks if the specified key has the specified key .
gets the basename of the file .
/ * ( non - javadoc )
/ * ( non - javadoc )
closes the underlying output stream .
/ * ( non - javadoc )
gets the cardinality of the key
lookup a jndi locator string .
associates the specified value with the specified locator .
returns a map of key / value pairs in the cache .
{ @inheritdoc }
returns true if n represents a long .
/ * ( non - javadoc )
/ * ************************************************************************* java object serialization ***********************************************************************
/ * ( non - javadoc )
find the .
returns ttl for a given component .
convert a map of spectopics into a list of partition ids .
/ * ( non - javadoc )
/ * ( non - javadoc )
get bound statement for locator .
/ * ( non - javadoc )
track metric .
track metric .
reads a double value from the stream .
visible for testing
returns a map of properties to a map .
creates the container .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
update the number of eligible slots .
returns the next scheduled slot manager for the given task .
releases the blocks associated with the given { @link <unk> } .
returns the current state of the {
updates the metrics for a post .
~ methods **************************************************************************************************************************************
/ * ( non - javadoc )
this method is called when a batch of metrics is available in batch .
registers an event to the registered callbacks .
converts a { @link listenablefuture } to a { @link observable } .
this method is called when a message is received from the receive queue .
handler for pending callbacks .
get the list of listeners for the given event .
get the name of the send report .
writes the data to the output stream .
parses the given file name .
starts the {
returns a { @link org . <unk> . rollup . data . <unk> } for the specified { @link <unk> } .
kill the config
setup a task with ttl and length .
computes the <unk> from the websocket connection .
fetches the rollupinterval corresponding to the <unk> helper .
returns the data model for the given <code > <unk> / code > or <code > <unk> / code > if not null .
waits for a web element to be bound to the given vertex .
compute the error locations in the input array .
formats the given string so that it can be used for debugging purposes .
creates a string array representation of the specified arrays .
register a metric registry .
<unk> <unk> <unk>
make sure that there is no longer than <unk> .
wait for { @link <unk> () } to be interrupted .
checks if the given string is a valid wildcard string .
returns a collection of all the children of this component .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new thread pool with the specified name .
/ * ( non - javadoc )
adds the given metric index to the history .
returns a set of facebook metric names to be updated .
returns true if the granularity of the granularity of the granularity of the granularity of the granularity of the granularity of the granularity of the granularity of the granularity of the granularity of the granularity of the granularity of this segment .
a { @link list } of { @link token } s .
executes a {
searches for all matching components in the specified locator .
finds and returns the report that matches the given locator .
adds the specified data to the batch .
clean up unused components
/ * ( non - javadoc )
{ @inheritdoc }
returns a new range based on the given slot .
creates a { @link <unk> } object from the given points .
create a granularity of the granularity of the given granularity interval .
computes the granularity of the granularity of the specified granularity interval .
returns the granularity of the granularity of the specified granularity .
/ * ( non - javadoc )
set the current time in milliseconds .
adds a shard to the cluster .
removes a shard from the list of shards .
parses a list of {
returns a list of all the locators that rewrites to the input .
/ * ( non - javadoc )
instrument the thread pool information
get a set of dead hosts .
returns a set of binary hosts to power of two strings .
get the set of binary hosts from zookeeper .
sets the maximum number of hosts per host .
this method serializes the given data to the json format .
/ * documented <unk>
<p > converts a string to string . < / p >
/ * ------------------------------------------------------------
returns an iterator for { @link <unk> } s .
parse the options .
/ * ( non - javadoc )
/ * ( non - javadoc )
insert a single metric into the table .
~ methods **************************************************************************************************************************************
~ methods **************************************************************************************************************************************
/ * ( non - javadoc )
executes a <unk> immediately .
get bound statement for given metric .
collects locators which have already been committed or not .
get metric names .
retrieve the elasticsearch record names from the elasticsearch counter .
returns the next record in the current request .
/ * ( non - javadoc )
/ * ( non - javadoc )
computes the expected metric from the websocket connection .
fetches the rollupinterval corresponding to the provided {
check if file is at batch layers .
check if the current element is at the current layer .
returns true if the word is in the current dictionary .
check if a particular component is present in the graph .
adds a new locator to the list .
/ * ( non - javadoc )
@see org . <unk> . <unk> . <unk> . <unk> . <unk>
converts a range of ranges to a map .
returns a range of ranges
insert a new item in the batch .
add a metric locator to the metric datum .
<p > inserts a new element into the batch . < / p >
inserts the given component into the table .
insert a metric to the list of metrics .
/ * ( non - javadoc )
~ methods **************************************************************************************************************************************
returns the set of report for the report .
/ * ( non - javadoc )
creates a map of { @link <unk> } from the given { @link map } .
gets the object .
returns the initial value of the granularity of the metric .
insert a new metric datum into the queue if it is delayed .
get the bound statement for the given metric if any .
returns a list of metric names for the specified profile
returns the values for the given locator .
get a {
returns a { @link org . locationtech . jts . data . scanner } for the given locator .
{ @inheritdoc }
get a { @link org . apache . gobblin . data . query . <unk> } for a single { @link org . apache . gobblin . data . <unk> } .
{ @inheritdoc }
returns true if the content - type header is writable .
/ * ( non - javadoc )
insert all records in the batch .
parse dropwizard metrics .
waits for the duration of the object to be received .
wait for the file to be terminated .
/ * ( non - javadoc )
~ methods **************************************************************************************************************************************
/ * ( non - javadoc )
returns the number of free sockets .
gets the extractor .
creates a new environment for the given os version prefix .
get the system property .
/ * package private
gets the os version of the os .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
start time .
stop the running state .
sets the current state of the task .
suspend the current thread .
resume this task .
returns the time in nanoseconds .
joins the elements of a list into a single string .
checks to see if an exception is thrown .
/ * ( non - javadoc )
gson invokes this call - back method during deserialization .
returns a list of plugins .
enables the creation of a plugin
disable rsync plugin
copies bytes from the source url to a destination file .
copies bytes from the source url to a destination url .
copies the content of the given { @link inputstream } to the given { @link file } .
start the process .
creates a user from the given prefix .
validates up the default constructor params .
adds a list of ice servers to the list of ice servers .
adds a common constructor to the remote server .
/ * ( non - javadoc )
/ * ( non - javadoc )
cancels any ongoing signal .
sends a message to the remote endpoint .
send a { @link map } to a { @link jsonobject }
send a bridge message
transmits all the subscribers
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
reads the configuration from the system .
creates an ad type .
<unk> <unk> .
gen - last : <unk>
/ * ------------------------------------------------------------
create an instance of <unk> .
/ * <unk>
/ * ( non - javadoc )
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
the main method .
/ * create a list of <unk>
create <unk> record .
create <unk> .
write a list of records to a stream .
write the xml to the console .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the <unk> property .
checks if the given string is a numeric value .
parse a number from the specified locale and locale .
parse a number formatter and return a string representation of the number .
<p > returns a { @link string } representation of the specified number . < / p >
formats a number according to the specified number of fraction digits .
gets the value of the properties property .
creates a dom document from an xml document .
creates a { @link <unk> } from a { @link document } .
creates a xml object from the given encoding .
creates an instance of the unmarshaller with the given xml .
get the xml representation of a context .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
process the xml content .
read a xml document from an xml document .
<p > <unk> . < / p >
gets the value of the properties property .
gets the value of the <unk> property .
returns true if the document is readable .
creates a new { @link document } of { @link <unk> } .
creates an { @link <unk> } object from an input stream .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
/ * ( non - javadoc )
creates a svg graphic with the given dimensions .
gets the value of the properties property .
creates a new { @link document } object from the given { @link <unk> } .
creates an { @link <unk> } object from the given input stream .
gets the value of the properties property .
returns the locale for the given country .
convert a lat / lon pair to a list of strings .
format phone number in e123 national format .
extract locale from string .
returns the list of available locale names for the specified locale .
returns the list of available country suffixes .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the properties property .
gets the value of the properties property .
/ * ( non - javadoc )
load a csv file from a csv file .
load a csv file from an input stream .
prints the script to the console .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the properties property .
the main method .
create a <unk> from a <unk> .
gen - last : <unk>
gen - last : <unk>
parses the given xml document .
retrieve a string representation of the message .
adds multiple <unk> elements to the document .
main method .
gets the value of the properties property .
returns a list of field names for the given enum class .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
create an instance of { @link <unk> } .
gets the value of the jaxbelement property .
gets the value of the properties property .
gets the value of the properties property .
read xml from an xml document .
converts the given { @link <unk> } to a { @link <unk> } .
gets the value of the properties property .
/ * ( non - javadoc )
writes the header to the writer .
returns the value associated with the specified position in this string .
reads a set of values from the reader .
classify a list of data .
sets the value at the specified position in the map .
gets the value of the properties property .
read a xml document from an xml document .
prints the example .
gets the value of the properties property .
read a xml document from an xml document .
returns an array of {
gets the value of the properties property .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the <unk> property .
gen - last : <unk>
gen - last : <unk>
downgrades to the <unk> elements .
downgrades from child nodes .
/ * ( non - javadoc )
process inline elements in a dom tree .
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link byte } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
/ * ( non - javadoc )
create the platform .
create a random <unk> .
<p > <unk> . < / p >
the main method .
creates a database type .
open meta data .
creates the product .
creates a new list type .
creates a { @link <unk> } object for the given { @link number } .
default implementation .
replies the parameters for the given document .
read a xml document from an xml document .
/ * ( non - javadoc )
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the flows property .
gets the value of the properties property .
gets the value of the properties property .
gen - last : <unk>
/ * ( non - javadoc )
reads the configuration object from the object .
create a random person type
process the overview of the overview object .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the properties property .
gets the value of the properties property .
create a new { @link <unk> } from a { @link document } .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
/ * ( non - javadoc )
process the xml configuration file .
reads the { @link <unk> } from the given { @link inputstream } .
converts <code > <unk> / code > to the console .
performs the analysis .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
load an xml document from an xml document .
convert to an object .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
investigates the version of a target version and checks if the current version is greater than the current version .
updates the current version of the document .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
creates a { @link <unk> } from a { @link document } .
the main method .
/ * <unk>
write a list of files to a file .
gets the value of the properties property .
gets the value of the properties property .
parses the given csv file and returns the assembly data .
merges the properties from the specified file .
print a configuration record .
print a collection of records .
replaces system properties with the given value .
replies the parameters for the given document .
creates a { @link <unk> } from a { @link document } .
obtains an instance of { @code bigmoney } from a { @code bigdecimal } .
converts a string to a boolean .
parse a date value from a string .
parses the given string value into a { @link <unk> } .
parses the orientation of an orientation value .
creates a new { @link <unk> } instance for the given string value .
obtains an instance of { @code bigmoney } from a { @code bigdecimal } value . <p > this allows you to create a { @code price } based on the value of the specified currency value .
load a bigdecimal value from a string .
parse a rooms value .
returns the type value of the given type .
prints a boolean value to a csv string .
converts a string to a boolean .
converts a string to a qualified identifier .
formats the given { @link imageformat } .
obtains an instance of { @link bigmoney } from a { @link bigdecimal } .
prints the {
obtains an instance of { @code bigmoney } from a { @code bigdecimal } .
{ @link <unk> }
creates an instance of { @link type } .
converts the given { @code value } to a { @code string } .
gets the value of the properties property .
removes all child nodes of the given node .
count the number of nodes in the document .
<p > <unk> . < / p >
returns the first child element of the given parent .
creates a new dom document .
parses the given xml string into a dom document .
parse a xml document into a document .
parses the given xml document into a document .
creates a new dom document from an xml document .
parse the content of the given reader as a xml document .
creates a dom document from an xml document .
construct a builder from an existing xml document .
parse an xml document from an xml document .
<p > parse . < / p >
creates a new { @link xpathutils } instance .
constructs a new xpath object initialized with the xpath prefix and namespace prefix .
prints the children of a given { @link element } .
replaces the first occurrence of the given document in the xml file .
/ * ( non - javadoc )
read an xml document from an xml document .
report a cdata section of a document .
writes the xcal document to a file .
write the data to a file .
write the xcal document to an output stream .
write the xcal document to a writer .
write the <unk> document to the given stream .
calls { @link <unk> ( com . itextpdf . text . pdf . pdfwriter ) } and writes it to the given { @link writer } .
write this xml document to a stream .
writes the given wirefeed to the given xml feed .
creates a { @link <unk> } for the given { @link document } .
gen - last : <unk>
/ * ( non - javadoc )
retrieve a string representation of the message .
/ * ( non - javadoc )
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
/ * ( non - javadoc )
this method creates a new instance of the { @link <unk> } .
create a picture .
dummy reply .
/ * package
generates a random string .
generates a random letters of the given length .
generates a random string of the given length .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
create a dom document from a <unk> method .
creates a new dom document from an existing transfer object .
/ * ( non - javadoc )
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gen - last : <unk>
load the xml document from the previous version .
process <unk> elements .
load the given xml element .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the properties property .
the main method .
create a new <unk> object .
erzeugt <unk> <unk> <unk>
<unk> <unk> <unk>
get a list of projects branches from a file
<p > <unk> . < / p >
get a list of projects
<p > <unk> . < / p >
<p > <unk> . < / p >
gen - last : <unk>
gen - last : <unk>
/ * downgrades from <unk> to <unk> .
/ * ( non - javadoc )
/ * helper methods
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
the main method .
create a pseudo - random <unk> .
create <unk> .
gets the value of the <unk> property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the properties property .
gets the value of the <unk> property .
create a new dom layout document .
read xml from an xml document .
converts named { @link <unk> } to a { @link <unk> } .
gets the value of the properties property .
gets the value of the properties property .
gen - last : <unk>
gen - last : <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
this method creates a { @link <unk> } for the { @link <unk> } .
inline xml elements .
/ * ( non - javadoc )
gets the value of the <unk> property .
gets the value of the properties property .
creates a new { @link <unk> } for the given { @link <unk> } .
creates an instance of { @link <unk> } .
creates a dom document from an xml document .
creates an { @link root } object from an input stream .
gets the value of the properties property .
creates a { @link <unk> } from a { @link document } .
gets the value of the <unk> property .
gets the value of the properties property .
read the xml from an xml document .
performs the analysis .
gets the value of the properties property .
<unk> method .
gets the value of the properties property .
gets the value of the properties property .
parse an xml document from an input stream .
parses the given xml file into a { @link <unk> } .
parses the given xml string into a dom document .
creates a { @link <unk> } from a document .
this method creates a { @link element } from a { @link <unk> } .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the <unk> property .
process the xml configuration file .
reads the { @link <unk> } from the given { @link inputstream } .
converts a { @link <unk> } to a { @link <unk> } .
/ * ( non - javadoc )
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the properties property .
loads the object from the given xml document .
generuje <unk> <unk> <unk> <unk> .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the properties property .
<p > main . < / p >
creates an ad type .
<p > creates an ad for an item . < / p >
writes the given file to the given directory .
creates a new dom document builder .
gen - last : <unk>
gen - last : <unk>
get the soap build node .
/ * ( non - javadoc )
/ * ( non - javadoc )
remove unsupported language elements .
/ * ( non - javadoc )
create a { @link <unk> } object from a { @link document } .
prints the contents of the named { @link parser } to the console .
creates an xml document from an xml feed .
creates an { @link <unk> } object from the given input stream .
gen - last : <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the value of the properties property .
creates a { @link <unk> } from a { @link document } .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the <unk> property .
gets the value of the properties property .
gets the value of the properties property .
gets the value of the properties property .
set the value of the specified key to the given value .
factory method to create a new { @link <unk> } .
creates a new pool with the specified host and port .
returns a new instance of { @link <unk> } .
replication a slave .
replication a slave connection to a slave host .
writes a string to an output stream .
send a command to the specified output stream .
/ * <unk>
checks if a class implements an interface .
returns the generic type argument types for the given class .
returns the names of all the fields in the given class .
returns a list of all declared fields of the given class .
returns a list of { @link field } s for the given object .
gets the field name from a getter method .
create a new instance of the given class
<p > create a new instance of the specified class . < / p >
find the method with the given parameters .
/ * public static void <unk> ( object field ) { <unk> > <unk> = new <unk> ( <unk> ) ; }
<unk> <p > function : <unk> / p > <p > description : < / p >
<unk> <p > function : <unk> / p > <p > description : < / p >
returns true if the class is present in the superclass or super classes .
returns a string representation of the given class .
check if two objects are equal .
<p > <unk> . < / p >
parses the given url and returns a { @link java . io . bufferedreader } object .
read properties from a file .
unmarshals the provided { @link source } .
unmarshals the given { @link source } .
retrieves the { @link xmlstreamwriter } from the given { @link result } .
marshals the given graph into a { @link <unk> } .
creates a new rsa private key pair .
decodes data from base64 notation automatically detecting gzip - compressed data and decompressing it .
decodes data from base64 notation automatically detecting gzip - compressed data and decompressing it .
generate key pair .
decrypt keys .
f743 - <unk>
write object to file .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the bindings .
{ @inheritdoc }
given a prefix and a prefix return the default namespace uri .
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * public static void <unk> ( int methodname int methodname ) { return <unk> () ; }
parse the given string into a {
parse a mime - type string .
sorts the given list of {
create an { @link xpathfactory } for the given { @link inputstream } .
/ * ( non - javadoc )
checks if the given string is an opening tag .
extracts the comment tokens from the given line .
extracts the attribute value from a string .
returns the index of the first token in the string .
get the number of months between two dates .
<unk> - mm - dd hh : mm : ss
<unk> - mm - dd hh : mm : ss
<unk> > <unk>
generates a date from the current date and time string .
returns the date as a string .
<unk> - mm - dd hh : mm : ss
<unk> - mm - dd hh : mm : ss
<unk> - mm - dd hh : mm : ss
<unk> - mm - dd hh : mm : ss
<unk> - mm - dd hh : mm : ss
<unk> - mm - dd hh : mm : ss
get the number of months from the specified day .
/ * [ deutsch ] <p > liefert den <unk> . < / p >
parse a date string into a string .
<unk> : mm : ss : yyyy - mm - dd hh : mm : ss
converts the given { @link token } to a { @link date } .
take two lines into a string
<unk> ( <unk> )
<unk> ( <unk> ) <unk>
<unk> ( <unk> ) <unk>
<unk> ( <unk> ) <unk>
returns true if the given string is a leap year .
<p > <unk> . < / p >
checks the end date of the month .
determines whether the specified <unk> is the same week with the specified <unk> .
test to see if two dates are in the same week
gets the week number for the given calendar .
<unk> ( <unk> )
get the number of days between two <unk> .
/ * ( non - javadoc )
generates a random alphanumeric string
convert a date string to a sql date .
initializes the { @link <unk> } with the given { @link location } .
configure logging .
{ @inheritdoc }
/ * ( non - javadoc )
removes an edge from the graph .
/ * <unk>
pull inline images
validate mail attachments
returns the simple name of the given class .
add an interface to the code .
{ @inheritdoc }
iterate through all files in the exclude list .
deletes all the files in the queue .
create a handler for the given or annotation class .
<p > <unk> . < / p >
replace the given code condition with the given code condition .
add a condition to the group .
decodes a random number into a string .
returns a string representation of the given string .
encrypt a password identified by the given password .
encrypts the given plaintext password and returns true if it starts with the given password .
get all classes found in the given package .
get list of urlclassloader
returns all classes in the package that match the given package .
get all classes in the <unk> .
<unk> . <unk>
/ * ------------------------------------------------------------
<p > captures the given input stream . < / p >
<p > <unk> . < / p >
creates a stream pumper to copy the given input stream to the standard output stream .
creates a stream pumper to copy the given input stream to the standard output stream .
prints a stack trace to a stack trace .
this method gets the singleton instance of this { @link <unk> } .
adds an option to the option .
add a short form option .
add a long option to this option .
add a long option to this option .
returns a new option with the given long form .
add a short form option .
<p > parse . < / p >
opens a new bufferedreader .
this method prints the stack trace of the given throwable to the given { @link stack } .
builds a full stack trace string .
get the stack trace of the stack trace .
returns the caller of the caller .
/ * <unk>
gets the annotation of the given type .
finds all annotations of the given class that are annotated with the given annotation .
returns all fields of the given class that are annotated with the given annotation .
answers true if the two strings are removed from the same sequence
returns the hash code of the given credentials .
init method .
<unk> { @link <unk> } <unk>
returns a string representation of the text read from the given reader .
<p > newinstance . < / p >
<p > newinstance . < / p >
this method gets the singleton instance of this { @link <unk> } .
returns the { @link description } of the given { @link inputstream } .
<p > <unk> . < / p >
compares two dates based on the given date range .
convert a date to a string .
sets the value of this node .
processes the qr code .
add a package to the scanner
scan class files .
finds the classpath extension for the given paths .
generate a tar file for the profile .
<p > returns a <code > bufferedimage< / code > with the specified forecast . < / p >
loads an image from the given path .
this method is called by the {
/ * called by the <unk> to notify all listeners that the transfer is about to access .
/ * ------------------------------------------------------------
fire a probe event .
invokes the given method on the specified instance passing the given parameters to the given instance .
converts an object to a json string .
returns a json string representation of the given object .
<unk> > <unk>
deletes a file .
<unk> > <unk>
internal copy directory method .
merges the given collection into a collection of strings .
examines the properties of the given properties and adds them to the storable .
this method gets the property of the given { @code currentpath } from the { @code properties } .
<unk> { @link <unk> } <unk>
<unk> > <unk>
persistencedelegate . <unk>
returns the { @link <unk> } for the given { @link mediatype } .
<unk> > <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the class name of the given class .
finds a constructor with the given arguments .
<p > invoke . < / p >
get the type argument for the given parameter types .
converts a long to an unsigned 16 - bit string .
convert a byte array to a hexadecimal string
copy the source file to a file .
serializes an object to a byte array .
deserializes an array of bytes into an object .
create a full description of a throwable .
converts an object to a string .
read - ahead four bytes .
returns true if the given string is null or empty .
generates a list of name / value pairs from the given uri .
<p > <unk> . < / p >
<unk> > <unk>
<p > <unk> . < / p >
get the child element of a child element .
get child elements from a dom tree .
returns the text value of the element .
returns the class name of the given node .
extracts the node name from the given node .
returns true if the given node is null .
/ * ( non - javadoc )
paint the table model .
<p > <unk> . < / p >
append a string to the given buffer .
converts an array of objects to a string array .
answers a string representation of the given {
this method gets the singleton instance of this { @link <unk> } . <br > <b > attention : < / b > <br > please prefer dependency - injection instead of using this method .
checks if the given string is empty .
<p > <unk> . < / p >
returns the longest constructor of { @code view } .
converts a {
<p > <unk> . < / p >
设置一个header<br > <unk>
adds the encoded value to the url .
* convert a string to a short
returns the list of unique paths for the given package .
add a listener to the given listener .
adds a new reference to the result .
try to close the connection .
check if a file is equal to the size of the file .
find the mime type of a file .
returns a list of all the files in a folder .
/ * public static <unk> <unk> ( string url ) { if ( <unk> == null ) { return null ; }
this method is used to load the model from an input stream .
<p > <unk> . < / p >
writes the given resource to the given file .
encodes a byte array into a byte array .
moves the source file to a target location .
creates a byte array from an input stream .
reads the contents of a file into a byte array .
write a byte array to a file .
write a string to a string .
attempt to serialize the given object to the given file .
/ * ( non - javadoc )
returns the name of the given page in the content of the given page .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * private void <unk> ( string doc ) { if ( <unk> == null ) { return null ; }
returns the size of the physical file in bytes registry .
<unk> > <unk>
main method .
sorts a collection by field name .
<unk> > <unk>
formats the given transformer .
get the status of {
/ * ( non - javadoc )
/ * ( non - javadoc )
receive notification of the end of an element .
adds the given { @link listenablefuture } to the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
encodes the given message according to the given encoding .
calculate the md5 digest of the given string
this method parses a method uri into a { @link org . <unk> . <unk> . <unk> } .
<p > relativize . < / p >
cut a set of assignments .
returns the name of the custom legal filename .
this method gets the singleton instance of this { @link <unk> } . <br > <b > attention : < / b > <br > please prefer dependency - injection instead of using this method .
unpack long value from the input stream .
check if the given file is empty .
reads the contents of a file into an array of bytes .
removes servers from a file .
formats a file . <p >
encodes a byte array into base64 notation .
generates a random number of characters .
/ * [ deutsch ] <p > <unk> die angegebene <unk> . < / p >
compute compressed code
returns the index of a minimum value in the quad tree .
parses the tree character .
returns the search action .
returns a list of all available flags
returns a list of childs .
returns the list of files that match the filter criteria .
/ * <unk>
<pre > { @code < / pre >
registers a { @link set } of type { @link map } of { @link map } .
<p > <unk> . < / p >
<unk> > <unk>
<unk> <unk> <unk>
close the {
writes all entries in the given map to the given map .
adds the message digest to the message digest .
<p > <unk> . < / p >
<p > <unk> . < / p >
add tags to the superclasses .
determines whether the given file should be accepted .
create a new { @link <unk> } .
checks if the text is rtl .
get the color of the scroll view .
normalizes and sets the values of the given array of values .
helper method to create a color state list .
sets the size of the placeholder text .
get the x coordinate of the item .
/ * ------------------------------------------------------------
start the server .
get the response for the given authorization code .
/ * ( non - javadoc )
<p > <unk> . < / p >
query the sql for the given keyword and arguments .
get the command line arguments for the given keyword arguments .
returns the html for the keyword documentation .
main method .
puts a native library to this library .
/ * ( non - javadoc )
adds a library to the specified class .
/ * ------------------------------------------------------------
start the server .
configure logging factory .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
loads a file from the given { @link file } .
converts the input stream to json format .
convert a complete document to a json string .
converts a map of properties to a json string .
converts a map of key / value pairs into a json string .
converts a { @link map } to a { @link string } .
convert the given properties to a json string .
sets the color that will be used for the state change .
sets the tint colorstatelist
{ @inheritdoc }
returns the radius of the shadow window
returns an instance of {
returns a builder for an ocsp builder .
gets the crl entry for the specified certificate .
returns an instance of {
/ * ( non - javadoc )
process attributes .
find markdown files from the given input directory .
replaces all the tokens in the text with the given map .
process markdown response .
returns the title of the first line in the list .
create the html for the given html .
removes duplicate variables from the given map .
updates the html output for the given html .
copy all the files in the given directory to the given directory .
add multiple <unk> .
/ * ------------------------------------------------------------
internal helper method to wrap the content of a child view .
fade a view of the container
fade a view of the container
calculate the percentage of the percentage .
adapts the view s views .
creates an intent that will launch the activity with the given name and creator .
launch the soft keyboard activity .
get <unk> operation .
delete <unk> alert .
sets the connect timeout .
sets the date format for the api .
/ * ( non - javadoc )
deserializes the given response into an object of the specified type .
download a file from the api .
invoke api .
build the client .
create a list of saved searches list .
list alert recipients for recipients
create a list of <unk> <unk> .
delete <unk> alert .
/ * package
sets the docker host for the api client .
sets the credentials for the api client .
list alert recipients for recipients
/ * package
returns a list of alert recipients for the specified identifier .
bind an object
/ * ( non - javadoc )
computes the fixed point for the given graph .
sets the permissions of the given graph .
writes the permissions of the given graph to the specified graph .
setter for <unk>
closes the node and releases any system resources associated with it .
executes a query
adds a triple to the graph .
this method creates a { @link <unk> } for the given { @link <unk> } .
clean up by deleting the resource extension
{ @inheritdoc }
{ @link <unk> ( object ) }
/ * ( non - javadoc )
prepare to run
creates a new webtarget instance by appending the path to the given path .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
limits the number of threads to the tango process .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the value of this model node .
/ * ( non - javadoc )
sets the preconditions for creating a new { @link <unk> } .
draw a text binding .
returns the source file dimensions for the given file .
adds an image to the list of output files .
creates and returns a command - line quality .
adds a histogram to the histogram .
adds a request to the set of example requests .
tracks a { @link counter } .
<p > <unk> . < / p >
returns the bean descriptor for the given bean class .
convert a string to a duration .
<p > <unk> . < / p >
unzips a zip file to a directory .
launch the given url .
executes the given { @link reader } .
adds the given file to the classpath .
{ @link <unk> }
set up a slide index .
starts the concurrent classification process .
attempts to scroll to the specified target .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the toolbar supports distinguished name .
gen - last : <unk>
creates a new drag event .
executes the task .
sorts a list of rectangles in the given list .
creates a { @link <unk> } for the given { @link <unk> } .
{ @inheritdoc }
returns a string representation of this template .
create a file for the home directory .
checks if the mouse is in the range of a range .
check if the given element has the same overlap .
{ @inheritdoc }
/ * ( non - javadoc )
builds the xml schema builder .
get the { @link <unk> } of the parsed { @link <unk> } .
calls <code > <unk> / code > on <code > <unk> / code > .
send a message to sqs .
calls <code > <unk> () < / code > for each message in the queue .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the manifest version number from a file .
<p > <unk> . < / p >
create a temporary file channel .
find all classes in the given package .
compile string .
returns a { @link file } with the specified name .
loads the specified library from the specified path .
find a file .
copy a resource to a file .
finds a file .
creates a temporary directory .
{ @inheritdoc }
helper method for logging the <unk> and <unk> .
returns a {
returns a {
log a message .
log a trace message with a throwable .
log a message with a throwable .
log a trace message with a throwable .
log a message with level { @code data } .
logs a message at the trace level .
log a message with the specified arguments .
log a message with a consumer .
log a debug message with a throwable .
log a debug message with a throwable .
/ * ( non - javadoc )
this method is called by the { @link <unk> ( string map ) } method .
log a message with a formatted message .
log a message with a level of debug .
print info message .
log a info message with info level .
logs a message at debug level .
logs a message at the info level .
send an info message .
log a message with an array of { @link <unk> } s .
send an informational message .
log an informational message .
log a warning .
log a message with warn log level .
logs a message and stack trace if warn logging is enabled .
log a message at the warn level .
{ @link <unk> ( object map ) } .
send a warn message to the slf4j logger with the provided data .
logs a message with the { @link <unk> warn } .
create a warn message .
this method is called by the {
logs a message at the error level .
log a message at the warn level .
logs a message and stack trace if debug logging is enabled .
logs an error message .
logs an error message .
reports an error message .
logs an { @link throwable } with the specified { @link throwable message } .
logs an { @link org . slf4j . log4j . logging . log4j . <unk> } .
/ * package
returns an array containing all of the elements in the specified collection .
creates a new array with all the occurrences of the given keys .
<p > splits the given array into an array . < / p >
puts the given array of <code > int< / code > into the <code > <unk> / code > array .
returns an array of {
serialize an event to a json string .
adds the logging event to the provided { @link <unk> } .
add message to context line and method .
write a {
ends the { @link <unk> } with the given { @link <unk> } .
write a {
write a list of key - value pairs to the given jsongenerator .
writes a { @link <unk> } to a { @link <unk> } .
create a { @link <unk> } object .
create context .
checks if the given object is a string .
returns an instance of logger with the specified class .
creates a logger for the specified class .
returns a logger with the specified name .
returns a logger with the specified name .
creates a logger for the specified logger .
initialize the <unk> .
set { @link <unk> } for a { @link <unk> } .
create a set of context keys and values .
/ * ( non - javadoc )
defines the type of markers for the markers .
defines if the marker is json .
remove a marker from the shape map
remove the markers from the shape map
check if the passed marker is present in the marker .
defines the type of markers for the markers .
defines the type of markers for lists of markers .
/ * ( non - javadoc )
serialize a logging event to an event .
builds a string representation of the specified format .
encodes the given array of devicedata .
create a logging event for a logging event .
returns a copy of the raw { @link <unk> } .
{ @inheritdoc }
returns the formatted message .
method that can be called to ask implementation to serialize values of type {
serializes the logging event to the specified {
get the stack trace for the caller .
serialize a list of objects to a json string .
serializes the logging event to the provided {
creates a { @link map } of { @link <unk> } and { @link <unk> } .
create a { @link list } of { @link <unk> } objects .
encodes the given { @code object } to a { @code <unk> } .
<p > <unk> . < / p >
encodes the given { @link map } of { @link map } s into a { @link string } .
converts the given { @link list } of { @link <unk> } into a { @link string } .
encode an array of characters .
helper method to compare two maps .
/ * ( non - javadoc )
/ * ( non - javadoc )
remove a user profile from the database .
checks that the position of the item at position { @code position } is valid .
start the <unk> .
get the number of unique rows from the table .
<p > initialize . < / p >
<p > register . < / p >
registers the given { @link serializer } for the given type .
<unk> . <unk>
<unk> method .
<unk> <unk> <unk>
creates a new <unk> from the given string .
<unk> - <unk>
get saved attribute from source string .
returns the column index of the specified entity .
<unk> <p > <unk> / p >
<unk> <p > <unk> / p >
<unk> <unk> <unk>
<unk> { @link row }
rewrite markdown attributes .
<unk> - <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the length of the port .
<p > get the value of the field as string . < / p >
converts a double to a 16 - bit string .
<p > <unk> . < / p >
reconstitute the <tt > <unk> / tt > instance from a stream ( i . e . deserialize it ) .
<p > <unk> . < / p >
<unk> { @link <unk> } <unk>
获取 { @link com . github . <unk> . <unk> . <unk> . <unk> . <unk> . <unk> }
-------------------------- other methods --------------------------
/ * ( non - javadoc )
re - <unk>
load properties from web . xml file .
<unk> > <unk>
on tab change .
closes the sheet .
gets the class .
save the progress .
submit a submit fax .
/ * ( non - javadoc )
get the current sheet configuration .
/ * ------------------------------------------------------------
<p > get the value of the specified component as an <code > object< / code > . < / p >
<p > convert an object to a java object . < / p >
get the current { @link locale } .
gets the name of the dart content .
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
<p > <unk> . < / p >
utility method to construct a list of groups .
for a list of cell types .
for a list of groups .
utility method to convert a string to a list of <unk> .
utility method to construct a string list from a string .
get a list of expected rows from the current row .
helper method to assemble a list of <unk> .
for a row .
utility method for <unk> .
for a list of <unk> .
for a list of <unk> .
utility method to check for a list of strings .
get the location of a random fill color .
/ * ( non - javadoc )
get the automatic fill color .
returns a { @link bigdecimal } whose values are { @link <unk> } and { @link <unk> } .
returns the top - level color of the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * this method is used to extract data from http : // docs . oracle . com / javase / 6 / docs / api / java / util / <unk> . html
update the current tint from the index .
<unk> a <unk> .
returns the index of a specific theme .
<unk> - <unk>
copy a color to color
finds the class name from the given class .
/ * ( non - javadoc )
get method param names .
/ * ( non - javadoc )
<p > <unk> . < / p >
serialize the control attributes .
<unk> > <unk> { @link <unk> } <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * <unk>
获取 { @link <unk> }
returns the string value of the cell of the cell .
gen - last : <unk>
add a series of series .
<p > set a <unk> . < / p >
creates the chart .
creates a chart panel .
creates a <unk> chart .
creates a <unk> chart .
<unk> the <unk> .
creates a <unk> .
creates a trend chart .
gen - last : <unk>
process <unk> charts
creates a pathfileobject for a chart file .
获取 { @link <unk> }
returns the chart .
/ * ( non - javadoc )
returns the full name of a sheet .
creates a { @link <unk> } object from a { @link <unk> } .
sets up the upper level of the given <unk> .
for <unk> .
query the rows by full name
change index number in shift map .
changes the implementations of the query string .
<unk> <p > <unk>
set full name in a hidden column
gets the number of rows in a hidden row .
sets the number of cells in a cell .
vr : inline
read a list of rows from a file .
<unk> > <unk>
<unk> { @link <unk> } <unk>
fire the <unk> event .
returns true if the specified row is a static row reference .
removes the full modifier name from the full modifier name .
<p > <unk> . < / p >
<unk> > <unk>
returns a merged view of the skipped region .
/ * <unk>
<unk> { @link <unk> } <unk>
attempts to match the given list of <unk> .
initiates the processing of other sheets .
create sheet configuration .
builds a <unk> from a sheet config .
<unk> <p > <unk>
<p > <unk> . < / p >
<unk> { @link <unk> } <unk>
<unk> <p > <unk>
build cell list from a sheet .
copies the pictures from the given sheet to the specified sheet .
process a command .
this method parses the target command and adds the command to the clusters .
adds a command to the command list .
get the command object form from command - line .
<unk> <unk> <unk>
copy template annotation .
build a list of command line command line .
{ @inheritdoc }
process the command line .
move a comment to a map .
create config command .
build attribute map .
gets the sheet configuration .
set the footer of the sheet .
set the merge body of the sheet .
<unk> <unk> <unk>
add row .
delete row .
removes the ranges from the specified map .
get the full name of a row .
cli utility methods
/ * ( non - javadoc )
delete the object in a context .
sets the collection data in context .
index a command .
converts a { @link row } to a { @link <unk> } .
<unk> > <unk>
evaluate the column value based on the given cell .
evaluate the normal セルの値をフォーマットする。
determines if the given { @code cell } is a { @code <unk> } .
checks to see if the given string is a user formula
<p > evaluate . < / p >
create a new comment for the given cell .
execute groovy .
<unk> > <unk>
<unk> <p > <unk>
<unk> <p > <unk>
remove rows from <unk>
create a picture based on an existing uicomponent .
create a chart map from the current page
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * -----------------------------------------------------------------------
<unk> > <unk>
<unk> > <unk> { @link <unk> } <unk>
<unk> > <unk>
<unk> > <unk>
<unk> > <unk>
sets the value of the given cell to the given value .
converts a cell value to a boolean value .
<unk> <p > <unk> / p >
package private for unit test
copy a row from a sheet to another sheet
copy a sheet to another sheet
<unk> { @link cell } <unk>
copy a cell s value to another cell
copy a cell to another cell
copy a row from a sheet to another sheet
create a copy of a new { @link <unk> } .
<unk> <p > <unk> / p >
<unk> - <unk>
get the hyperlink s hyperlink .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
<unk> { @link <unk> }
returns the top - level value of the cell .
<unk> a1 <unk>
<unk> a1 <unk>
returns the key for the specified cell index .
/ * <unk>
gets the matrix col from the input stream .
get init rows from config .
<p > <unk> . < / p >
sets the value of the cell at the top of the cell .
<unk> > <unk>
<unk> . <unk>
<unk> { @link <unk> ( <unk> ) } { @link <unk> ( <unk> ) } { @link <unk> ( <unk> ) } { @link <unk> ( <unk> ) } { @link <unk> ( <unk> ) } { @link <unk> ( <unk> ) } { @link <unk> ( <unk> ) } { @link <unk> ( <unk> ) } { @link <unk> ( <unk> ) }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
{ @inheritdoc }
serialize object .
adds a coverage data row to the table .
<p > removes a row from the table . < / p >
merges the trackers in the given map into the base row .
{ @inheritdoc }
gets the type of a chart
<editor - fold defaultstate = collapsed desc = static methods >
******************** initialization ************************************
******************** initialization ************************************
<unk> missing <unk>
<unk> <unk> <unk>
returns the id of the parent node for the given style .
returns the id of the soap node .
/ * ************************************************************************* java object serialization ***********************************************************************
binding for { @link <unk> } .
/ * ( non - javadoc )
populate data structures .
<unk> method .
/ * ( non - javadoc )
sets the cell at the given index .
gets the cell at the specified index .
documentation inherited from interface
restore the data context data .
returns the address of the last node in the collection .
returns true if the current data context name is full .
start restore data context .
<p > <unk> . < / p >
set the value of the first row in the table .
sets the last row of the cell .
get the command object at the specified location .
infers cells in a cell .
builds the cells for a row .
<unk> { @link <unk> } <unk>
destroys the current command .
serializes the object to json .
deserializes the given resource .
build a list of merge regions .
build list .
build the chart series in the list .
/ * ( non - javadoc )
returns the { @link <unk> } of the specified { @link <unk> } type . <p > <b > note : < / b > this will return <code > null< / code > if there is no translator for the specified datapoint type .
sets the map of keys and values to be passed to the map .
<unk> > <unk>
获取 { @link <unk> }
applies dropout to the <unk> .
<unk> <unk> <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * returns the size of the specified cell .
convert cell value to value .
adds a new cell to the given cell .
returns true if the specified cell is changed .
returns { @code true } if { @code <unk> } is { @code null } .
gets the tag .
<p > handle request . < / p >
/ * ( non - javadoc )
serialize object .
<p > <unk> . < / p >
{ @link <unk> ( com . <unk> . <unk> . <unk> ) }
<unk> : <unk>
{ @link <unk> ( string ) }
returns the html for the specified {
copies { @code cell } to { @code cell } .
/ * ( non - javadoc )
/ * private static string <unk> ( <unk> value ) { <unk> <unk> = <unk> . <unk> ( <unk> ) ; }
/ * ( non - javadoc )
<p > <unk> . < / p >
calculates the total height of a sheet .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the input value for the given cell type .
returns the value of the decimal places of the specified cell .
sets the { @link cell } for the specified { @link cell } .
returns the value of the { @link <unk> } represented by this { @link cell } .
get the request parameter value from the request path .
replies the url that corresponds to the specified resource .
evaluates the expression with the given expression and returns the result of evaluating the expression .
normalizes a resource path to a normalized path .
parses the input string and returns the set of values
<p > <unk> . < / p >
<p > <unk> . < / p >
evaluates the expression with the given expression and returns the result of evaluating the expression .
<p > joins . < / p >
rounds the given value to the nearest integer value .
/ * ( non - javadoc )
gets the context style .
retourne la valeur de la propriété <unk> .
/ * ( non - javadoc )
returns a string representation of the type of the invoice as a currency separator .
set the value alias list .
<unk> <p > <unk>
groups the watches on the given cell .
adds a row to watch .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
checks if the given string is a quoted string .
returns true if the given string is a quoted string .
parse a {
returns the value of the key corresponding to the specified cell .
parse the attributes of a cell .
returns a string containing the substring between the begin and end tag .
locates the end of the word at the specified position .
convert a string to a map .
parse a list of { @link <unk> } s into an array of { @link <unk> } s .
/ * parse <unk> attributes
extract validation attributes .
/ * package private
parse the attributes cache attributes .
puts the value into the map if the key is null .
on counter column .
gather special attributes from the xml attributes .
visible for testing
checks if a string is a non - alphanumeric character .
escapes all the characters in a string from a given string .
encodes the given { @link integer } into a { @link string } .
<unk> <p > <unk>
returns the name of the merged region of the cell .
gets the name of the modifier name .
returns the name of the package name of a cell .
convert a column name to an index .
<unk> > <unk>
<p > <unk> . < / p >
reproject the width of an excel sheet
compute height of height
<unk> > <unk>
parse a sequence of terms .
<unk> > <unk>
read feature parameters .
/ * ( non - javadoc )
<unk> a1 <unk>
returns { @code true } if { @code <unk> } is { @code <unk> } .
<unk> ( <unk> )
clear the hidden columns from the given sheet .
<p > <unk> . < / p >
removes the cell at the specified position in the row at the specified index .
get the right column from the specified <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<pre > { <unk> } < / pre >
validate the row col in the current row .
<unk> ( <unk> )
creates a { @link <unk> } object from the given { @link cell } .
validate all cells in the cell
get the value of a <unk> .
returns true if the current row is valid . <p >
finds the height of the current page .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
fetches the children of a table .
returns the horizontal cells for a cell .
<p > <unk> . < / p >
tries to restore the field data .
clear the tree .
<unk> ( <unk> )
loads a { @link cell } from a { @link <unk> } .
adjust the max widths of each column .
<unk> <p > <unk>
gets the style for the given col width .
build a list of { @link cell } s for the given { @link <unk> } .
updates the cell width .
clears the internal data structures .
<p > <unk> . < / p >
/ * ( non - javadoc )
set the visibility of the tabs .
load the data .
refresh report data .
refresh the data for a row for a row .
refresh data for the cell
returns the index of the tab with the given name .
loads the form of a jar file .
prepare the data for the { @link <unk> } .
sets the rows of the data table .
/ * ( non - javadoc )
<unk> > <unk>
/ * <unk>
build cell .
/ * ( non - javadoc )
/ * ( non - javadoc )
----- private methods -----
add a list of instances to the <unk> .
<unk> ( <unk> )
add the transfer status .
<p > <unk> . < / p >
<p > <unk> . < / p >
parses the common event .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
returns true if the dependency type is compatible with this type .
returns an array of {
/ * ( non - javadoc )
registers an event class with the specified event .
adds the given binding to the given binding .
get the macros with the given macro .
creates a new parser for the given macro type .
applies the given { @code binding } to the given { @code binding } .
<p > <unk> . < / p >
permutes an array of doubles .
<p > performs the following operation : <br > <br > a = a + b <br > a<sub > ij< / sub > = &alpha ; * a<sub > ij< / sub > < / p >
returns the { @link method } of the specified { @link class } .
returns true if the specified key is an enum key .
returns true if the class needs to be instantiated .
a { @link parser } that is a { @link parser } that is neither { @link <unk> } or { @link <unk> } .
create a new instance of the given class .
compares two strings ignoring case .
returns the enum value for the given { @code supplier } .
returns the name of the parent resource .
creates a new instance of the given type .
write the input { @link inputstream } to the given { @link outputstream } .
writes the given value to the writer .
writes a string to the given writer .
returns the column width compatible with the android version .
writes <code > len< / code > bytes from this <code > byte [] < / code > to the specified byte array starting at the specified <code > offset< / code > .
/ * ( non - javadoc )
set up the <unk> tag tag .
adds a binary content to the upload file .
build a { @link <unk> } from a { @link uri } .
creates a { @link bitmap } with the specified name and file name .
creates a file named { @link <unk> } for the given file .
removes the parameter with the given name .
add a header to the request .
clears the content of this object .
call this method to play a play event .
pause the playback .
binds the {
unbind the {
drop the connection .
/ * ( non - javadoc )
adds a request to the request .
requests that the specified <code > <unk> / code > and <code > <unk> / code > is <code > <unk> / code > .
/ * ( non - javadoc )
reads the contents of the given { @link inputstream } into a { @link string } .
reads the contents of the given { @link inputstream } into a { @link string } .
copy the contents of the given inputstream to the given output stream .
reads the contents of the given { @link inputstream } into the given { @link buffers } .
returns an input stream for the given url .
returns an input stream of the given encoding .
checks that the given object is a valid bean type .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
resets the stringreader .
/ * ( non - javadoc )
generate the body of the request .
send a disposition header to the output stream .
/ * ( non - javadoc )
send transfer encoding header .
/ * ( non - javadoc )
/ * ( non - javadoc )
copies the contents of the given data stream to the output stream .
/ * ( non - javadoc )
@see <unk> ( string [] )
encodes part of a byte array .
/ * ------------------------------------------------------------
send a 304 not 304 response .
sets the date header for the response .
sets the date and cache headers for the http response .
sets the content type header for the response .
closes the given channel .
/ * ( non - javadoc )
/ * ( non - javadoc )
installs a new { @link <unk> } .
create a temporary file if it does not exist .
gets the value of the cache entry .
/ * ( non - javadoc )
creates a bitmap with the specified width and height .
returns a new { @link sslcontext } instance .
<p > <unk> . < / p >
sets the scale type .
sets the scale type .
start listening to the current location .
stop listening to a new location .
gets a pending intent that will be sent to the pending intent .
opens a connection to the server .
bind service to goro service .
/ * ( non - javadoc )
this method is called when a { @link android . support . v4 . view . <unk> } is thrown .
/ * ( non - javadoc )
method that generates a { @link org . <unk> . future . network . <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
wait for the loader to be used .
adds an image to the imageview .
removes the { @link <unk> } from the list of { @link <unk> } s .
/ * ( non - javadoc )
/ * ( non - javadoc )
applies a typeface to a textview .
sets the text color of the textview to the given color .
hides the soft keyboard from the window .
shows the soft keyboard of the given view .
hides the soft keyboard from the window .
convert the pixels to pixels .
returns the { @link view } for the given id .
tries to find a view by id .
/ * ( non - javadoc )
returns the number of bytes that should be read from the current position .
resets the limit .
seeks to the specified position .
skips the specified number of bytes from the input stream .
/ * package
get the image from the given view .
/ * ( non - javadoc )
register a { @link <unk> } .
sets the result of the { @link <unk> } .
sets the drawable bounds .
{ @inheritdoc }
cache memory cache image .
gets the model type .
increases the capacity of the given byte array .
execute a put request .
creates a connection type connection .
add a parameter to the request .
check if the column width is compatible .
returns the md5 hash of a string .
waits for a specific intent to launch .
generates a random multipart boundary .
returns the string identifying the given <unk>
returns the string identifying the given <unk>
checks the correctness of the given result .
description of a * x = b
description of a * x = b
lu decomposition .
lu decomposition .
set the value of a double matrix
set the value of a double matrix
lu decomposition .
lu decomposition .
description of a sparse matrix
description of a sparse matrix
description of a sparse matrix
description of a sparse matrix
computes the dot product of a sparse vector x = alpha * y
description of a sparse matrix
description of a sparse matrix
description of a sparse matrix
description of a sparse matrix
description of a sparse matrix
description of a * x = b
description of a sparse matrix
description of a sparse matrix
description of a sparse matrix
description of a sparse matrix
description of a sparse matrix
description of a sparse matrix
description of a sparse matrix
description of a sparse matrix
description of a sparse matrix
description of a sparse matrix
description of a sparse matrix
description of a * x = b
description of a * x = b
description of a * x = b
description of a * x = b
description of a * x = b
description of a * x = b
description : this routine converts a sparse vector to a sparse matrix in csc storage format .
description : this routine converts a sparse vector to a sparse matrix in csc storage format .
description : this routine converts a sparse vector to a sparse matrix in csc storage format .
description : this routine converts a sparse vector to a sparse matrix in csc storage format .
description of a * x = b
description of a * x = b
function to transform two <unk> .
function to transform two <unk> .
description : this routine converts a sparse matrix in csc storage format to a dense matrix .
checks if the given result is enabled .
allocates a new host memory on the device .
get a vector vector from a vector vector .
converts a vector element to a vector
<p > performs a cursor decomposition of the given matrix . < / p >
computes the cholesky decomposition of the given matrix .
converts a buffered vector to a vector vector .
calculates the vector of a polygon in a polygon .
this method is equivalent to {
calculates the <unk> matrix .
computes the product of a double vector
/ * computes the l - l l - l reference vector of a l - d 4x4 vector .
computes the product of a double vector
replies the intersection of the l - d l - l l - d l - d l - factor relationship .
computes the euclidean norm of a double vector .
computes the euclidean norm of a double vector .
computes the euclidean norm of a double vector .
computes the product of a double vector by a scalar .
computes the dot product of a double vector .
computes the y - coordinate of a double vector
computes the dot product of a double vector
computes the product of a double vector
host : host : port
computes the product of a double vector by a scalar .
computes the dot product of a double vector .
computes the product of a double vector by a scalar .
computes the dot product of a double vector .
computes the dot product of a double vector .
computes the product of a double vector by a scalar .
<pre > this is a convenience wrapper around { @link <unk> ( int java . net . pointer ) } ) < / p >
computes the dot product of a double vector .
computes the product of a double vector
computes the product of a double vector by a scalar .
computes the dot product of a double vector .
computes the dot product of a double vector .
description of a * x = b
description of a * x = b
computes the euclidean norm of a double vector .
computes the euclidean norm of a double vector .
computes the euclidean norm of a double vector .
computes the dot product of a double vector
computes the product of a double vector by a scalar .
computes the dot product of a vector by a vector .
computes the dot product of a vector by a vector .
computes the product of a double vector by a scalar .
computes the product of a double vector by a scalar .
computes the dot product of a double vector
sets the { @link <unk> } for the { @link <unk> } .
computes the product of a double vector
computes the product of a double vector
computes the euclidean norm of a double vector .
computes the euclidean norm of a double vector .
computes the euclidean norm of a double vector .
description : this routine converts a sparse matrix in csc storage format to a dense matrix .
description : this routine converts a sparse matrix in csc storage format to a dense matrix .
description : this routine converts a sparse matrix in csc storage format to a dense matrix
description of a dense matrix a * x = alpha * x + beta * y
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
generate a qr factorization
description : a * x = lambda * b
description of a dense matrix a * x = alpha * x + beta * y
a l - d block of qr factorization
a l - d block of qr factorization
generate a qr factorization
generate a qr factorization
solves a symmetric matrix a * x = b
solves a symmetric matrix a * x = b
generate a qr factorization
generate a qr factorization
generate a qr factorization
description : this routine converts a sparse matrix in csc storage format to a dense matrix and a dense matrix .
generate a qr factorization
generate a qr factorization
description : this routine converts a sparse matrix in csc storage format to a dense matrix
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
description : this routine converts a sparse matrix in csc storage format to a dense matrix .
solves a symmetric matrix a * x = b
solves a symmetric matrix a * x = b
description : this routine converts a sparse matrix in csc storage format to a dense matrix .
description : this routine converts a sparse matrix in csc storage format to a dense matrix .
description : this routine converts a sparse matrix in csc storage format to a dense matrix
description : this routine converts a sparse matrix in csc storage format to a dense matrix
generate a qr factorization
generate a qr factorization
solves a symmetric matrix a * x = b
generate a qr factorization
generate a qr factorization
solves a symmetric matrix a * x = b
description : this routine converts a sparse matrix in csc storage format to a dense matrix .
description : this routine converts a sparse matrix in csc storage format to a dense matrix .
a l - d block of qr factorization
generate a qr factorization
description : a * x = lambda * b
a l - d block of qr factorization
description : this routine converts a sparse matrix in csc storage format to a dense matrix .
generate a qr factorization
generate a qr factorization
tridiagonal form of <unk>
tridiagonal form of <unk>
tridiagonal form of <unk>
description : this routine converts a sparse matrix in csc storage format to a dense matrix .
compute generalized eigenvalue solver by qr factorization
compute generalized eigenvalue solver by qr factorization
generate a qr factorization
generate a qr factorization
<pre > q = a * b * b + c * b * c * a * b + beta * y * c * c * a * b * c
l * <unk> * <unk>
tridiagonal form of <unk> - <unk>
tridiagonal form of <unk> - <unk>
computes the euclidean norm of a double vector .
computes the product of a double vector by a scalar .
computes the dot product of a double vector .
computes the dot product of a double vector .
computes the euclidean norm of a double vector .
computes the y - coordinate of a double transform .
host : host : port
computes the product of a double vector by a scalar .
computes the dot product of a double vector .
computes the euclidean norm of a double vector .
computes the euclidean norm of a double vector .
description : this routine converts a sparse matrix in csc storage format to a dense matrix .
description : this routine converts a sparse matrix in csc storage format to a dense matrix
a l - d matrix a * x = b
a l - d block of qr factorization
generate a qr factorization
description : a * x = lambda * b
generate a qr factorization
generate a qr factorization
generate a qr factorization
solves a symmetric matrix a * x = b
solves a symmetric matrix a * x = b
generate a qr factorization
description of a dense matrix a * x = alpha * x + beta * y
description of a dense matrix a * x = alpha * x + beta * y
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
tridiagonal form of <unk>
tridiagonal form of <unk> - <unk>
tridiagonal form of <unk>
generate a qr factorization
compute generalized eigenvalue solver by qr factorization
generate a qr factorization
generate a qr factorization
l * <unk> * <unk> * <unk> * <unk> * <unk>
l * <unk> * <unk> * <unk> * <unk>
a l - d matrix a * x = b
generate a qr factorization
description : a * x = lambda * b
a l - d block of qr factorization
l * <unk> * <unk>
description : this routine converts a sparse matrix in csc storage format to a dense matrix .
tridiagonal form of <unk> - <unk>
description : this routine converts a sparse matrix in csc storage format to a dense matrix
description : this routine converts a sparse matrix in csc storage format to a dense matrix
generate a qr factorization
compute generalized eigenvalue solver by qr factorization
generate a qr factorization
description : this routine converts a sparse matrix in csc storage format to a dense matrix
<p > <unk> . < / p >
get the ending <unk> <unk>
adds a new column .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the estimate of the features of the given { @link <unk> } .
<unk> > <unk>
find the first letter of a chunk in the given locale .
{ @link <unk> ( string string ) }
creates a list of {
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a value to the <unk> .
<p > <unk> . < / p >
/ * <unk>
adds an attribute to the <unk> attribute .
removes all occurences of markup for a given tag .
gets the attribute values .
join a string to a string
<p > <unk> . < / p >
deserialize a querycriterion .
create a document from zanata .
get query parameters
creates a list of data from a json object .
parses the given json string and returns a { @link map } of { @link string } s .
processes one metric .
gets the client connection config .
/ * [ deutsch ] <p > wandelt diese instanz in den angegebenen <unk> . < / p >
get the string representation of the metric time series .
get a { @link function } that returns a { @link <unk> } type .
factory method to create a { @link <unk> } from a { @link <unk> } .
factory method to create a <unk> reader .
creates a new instance of { @link <unk> } .
unmarshals the given { @link inputstream } into a { @link <unk> } .
return a { @link list } of { @link <unk> } s .
get the reference to the reference types .
get the value of <code > multipart / form - data< / code > column .
get a list of all columns contained in the passed node as a list .
get all columns of a column
convert the passed input stream to a list of <unk> .
get all the column names of a column
get the column identified by the passed id
get a list of all keys contained in the passed node as a list .
get all the keys contained in the passed set set .
load a collection of key - value pairs from the passed entity set .
get the enum value with the given name .
remove all functions with the specified name .
create a <code > short< / code > from the passed value .
create a new long value .
create a css expression from the passed string .
create a new { @link <unk> } .
create a digest digest .
create a new value in the cache .
set the number of lines that should be shown in the message .
add a media query at the specified index .
create a writer builder for <unk> .
creates a { @link <unk> } by given elements .
factory method to create a { @link <unk> } from the given { @link <unk> } .
unmarshals the given { @link <unk> } into a { @link <unk> } .
creates a { @link <unk> } for the given elements .
create a { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link
create a new { @link <unk> }
factory method for creating a { @link <unk> } .
creates a new { @link <unk> } with the specified { @link <unk> } .
create a new { @link <unk> }
} for <unk> .
} for <unk>
get the last value from the pair
send logs to server .
configure the { @link <unk> } .
set the current { @link <unk> } .
set the task log level .
get the authorization level .
pumps through all the logs from the current thread .
returns a {
this method is called by the {
returns a {
reset the maximum log store size .
sends the given { @link <unk> } to the server .
sends the given { @link <unk> } to the server .
download the current { @link <unk> } with the given { @link <unk> } .
start logging .
af <unk> <unk>
append the given {
sets the plugin properties .
liest <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
download a { @link jsonobject } into a { @link <unk> } .
initializes the {
/ * ( non - javadoc )
update the location of the request content .
/ * ( non - javadoc )
initializes the { @link <unk> } .
<unk> > <unk>
called when the location of location is updated .
registers the given region for the given region .
tests this region for the specified region .
/ * ( non - javadoc )
gets locators by type .
returns the list of urls that match the specified locator .
/ * ( non - javadoc )
creates a new { @link org . apache . hadoop . client . transport . spi . <unk> } instance .
returns the list of all registered { @link <unk> } s .
reads a snapshot record .
/ * ( non - javadoc )
writes the csv file to the given { @link environment } .
generate random time stamps from the current time upto the time upto the second .
get the list of timestamps of the idx th entry in the list
converts the authorities to a { @link <unk> } .
/ * <unk>
computes the statistics for the current stats .
returns true if the given locale is a replicated field .
attempt to create an instance of a { @link <unk> } object .
gets the pool for a given server .
gets the pool for the specified <unk> .
returns a list of { @link shard } s for the given { @link region } .
returns a list of { @link region } s that match the given pattern .
gets the client cache .
checks if the region of the region data is known .
returns the object name for the given region name .
get a { @link <unk> } for the given class name .
entry point for creating jmx beans .
register a list of metrics .
register a list of metrics .
loads the host from the given host .
runs the example .
<p > <unk> . < / p >
creates a { @link collection } of { @link java . util . collection } of { @link java . util . collection } results from the given { @link function } .
flattens a collection of objects into a single collection .
/ * ( non - javadoc )
execute a query
creates a bridge function if exist .
creates a bridge if exist .
update the consumer with the given event .
deliver the given event to the listeners .
create an affiliation
delete a region
create a affiliation
/ * ( non - javadoc )
closes the relation .
gets a copy of the <unk> property <p >
/ * ( non - javadoc )
read the content of the file .
find user details by username .
<p > compare . < / p >
returns the size of the specified region .
/ * ( non - javadoc )
return a list of all the hosts of a jmx object .
register the given object with the given parameters .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the application name from the given array of resources .
construct the base listener .
create a new instance of the given class .
/ * ( non - javadoc )
clear all messages in the page .
creates a region from the given region name .
returns a region of the specified region .
retrieves the region of the specified region .
register a collection of { @link <unk> } .
registers a { @link <unk> } with the given { @link <unk> } .
method to register a { @link <unk> } after delete .
deeply fills the source map into the target map .
process log files
creates a { @link <unk> } for the specified { @link function } .
export a region id
sets the region parameter values for the region .
decrypt password .
extracts the user name from the configuration .
determine if the next entry represents a random time stamps .
visible for testing
returns the total amount of memory used by this object .
adds the value sample to the end of the list .
/ * ( non - javadoc )
get a stat with the given name .
update the current token .
close the connection .
unzip the given directory to the given directory .
main entry usages
{ @inheritdoc }
create a new jmx agent .
attempt to register a jmx object to be exposed via jmx
stops the response on a given host .
entry point for the <unk> bean .
register a new { @link <unk> } with the given parameters .
attempt to connect to a jmx server .
converts a { @link objectname } to a { @link <unk> } .
<p > <unk> . < / p >
store pagination keys to the page .
converts a string to a string .
get all terms in a list of objects .
映射键值（参考python的zip () <unk> > 例如：<br > keys = [ startindex ] < / code >
execute the method .
build region producers from the given region .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
parse locator string .
/ * ( non - javadoc )
loads a class name from the given class name .
returns the number of bytes used by the given byte array .
returns the k - 1 values of the given set of samples .
increases the current size of the array by the given number of intervals .
/ * ( non - javadoc )
exports the region of the region specified by { @code <unk> } to { @code <unk> } .
process the contents of a directory
export the region by argument
save the results in a collection of results
display search results by page criteria .
<unk> { @link <unk> } <unk>
execute the log processing
invokes { @link <unk> ( java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . object ) }
imports a region node .
/ * ------------------------------------------------------------
director method to construct the <unk> director .
wait for a member of the given entity to be started .
/ * ( non - javadoc )
new filtered changed key value .
/ * ( non - javadoc )
/ * ( non - javadoc )
deeply compare two models .
set a new bootstrap theme .
returns a {
/ * ( non - javadoc )
sets the value of the given field to the given value .
returns true if the given type or supertype ( or interface ) or supertype ( or interface ) or supertype ( or interface ) or supertype ( or interface ) or supertype ( or a supertype ) .
serializes an object to a byte array .
deserialize cookie string .
create a new instance of the provided class . if the given class is an interface it will be returned .
sets the nullability of the given table .
/ * ( non - javadoc )
checks if the given type is a super type .
returns a string representation of the schema .
emit the contents of the database .
/ * package private
exporte une jtable dans un fichier au format <unk> .
emits html to drop table .
map model object properties to db .
for each column of the column .
emits the number of rows in the table .
export delete entity .
/ * ( non - javadoc )
generate execute method .
emits the query by id .
<p > <unk> . < / p >
returns the field name for the given column name .
<p > <unk> . < / p >
capitalizes the first letter of a string .
returns true if the given type is an interface or not .
create a new <unk>
reads a temperature value from the file .
/ * <unk>
logs a message with the given message .
logs a message with the given message .
log a message with error log message .
/ * ( non - javadoc )
returns all <code > icon< / code > elements
returns the next point in the equation
adds a data point to the end of the <code > <unk> / code > .
iteratively improve the subscript operator with a float .
create view panel .
generates the background style layers showing the layers layers .
computes the logarithm of { @code x } &times ; 2<sup > { @code <unk> / sup > } rounded to the nearest power of { @code x } .
copies all the rows from this matrix to another .
set the values in the array .
compute the euclidean norm .
prints the matrix .
power of a { @link bigdecimal } value .
calculates the fraction root of the specified { @link bigdecimal } value .
calculates the exp ( { @code bigdecimal } ) of this { @code bigdecimal } .
calculates the { @link bigdecimal } value of a { @link bigdecimal } x .
returns the { @link bigdecimal } value of { @link bigdecimal } x .
calculates { @link bigdecimal } according to { @link <unk> } .
returns the { @link bigdecimal } value for the given { @link bigdecimal } value .
calculates the { @link bigdecimal } value of a { @link bigdecimal } x .
calculates the fraction of the given value .
/ * ------------------------------------------------------------
add the default storage file provider .
sets the limits .
computes the gradient for the given item .
2 - d gaussian kernel .
/ * ( non - javadoc )
returns a new complex number with the same value as this complex number .
magnitude of complex number .
2 - d complex gabor function .
copies all the elements in this matrix to another .
set the matrix .
compute the euclidean norm .
prints the matrix .
checked vs . jan 11 2011
returns a row of this matrix .
returns the column of the matrix .
copies all the rows from this matrix to another .
sets the value of the matrix element .
set the values in the array .
/ * ( non - javadoc )
sets the column of the matrix .
returns the transpose of this matrix .
create a new matrix from this matrix .
subtract the given matrix from this matrix .
creates a new matrix by subtracting the matrix by k .
multiply this matrix by another matrix .
multiply this matrix by another matrix .
multiply this matrix by another matrix .
this method is used to print out the contents of the print stream .
/ * ( non - javadoc )
{ @link <unk> }
creates a new dom image with the specified resource .
adds a data point to the batch .
validate the coefficients .
/ * ( non - javadoc )
clear the stream .
get the style of a sld file .
get the style from a file .
validate the given excel format .
check to make sure the input is valid .
get a style layer from a file .
returns the next point in the equation
returns the approximate rotation of two intervals .
/ * ( non - javadoc )
set the matrix .
set the householder vectors .
fires a <unk> event on all registered handlers in the handler manager . if no such handlers exist this method will do nothing .
fires a <unk> event on all registered handlers in the handler manager . if no such handlers exist this method will do nothing .
returns the inverse of this matrix .
compute the determinant .
computes the euclidean norm of the matrix .
/ * ( non - javadoc )
{ @inheritdoc }
sets the column of the matrix .
solve a * x = b
prints an image to the given print stream .
lu decomposition .
forward elimination algorithm .
forward substitution .
computes the back substitution matrix .
iteratively improve the solution to improve accuracy .
converts a square matrix into a square matrix .
returns the next character in the next pos - vector .
returns the next point equation in the equation system .
returns the index of the regularized gamma function . <p >
/ * ( non - javadoc )
{ @link <unk> }
compute the next position .
checks if the current interval is valid .
/ * ( non - javadoc )
adapted from graphics gems article .
raise a power of 2 .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the optional create a <unk> .
convert a string to a hex string .
/ * ( non - javadoc )
print the help for <code > options< / code > with the specified <code > <unk> / code > to the specified <code > <unk> / code > .
validates the given { @code <unk> } and { @code <unk> } .
<p > extract the exponent of the given float . < / p >
validates the given { @code <unk> } and { @code <unk> } .
set the exponent of the given double exponent .
creates an instance of the gallery service . <p >
returns the uniformly distributed random value of this random uniformly distributed { @code <unk> } .
returns the next random value in [ 0 - <unk> ] .
compute the next random number .
<p > <unk> . < / p >
method to calculate the prime factors in the given range .
returns the regularized <unk> q .
/ * ( non - javadoc )
{ @link <unk> }
invokes runnable and waits for it to complete .
/ * ( non - javadoc )
sets the default configuration for the { @link <unk> }
determine the converter for the given value .
load a fxml component .
load a fxml component .
load the given fxml file .
gets the settings for the event definition .
create the key request params
adds a {
get the type of data in the database .
returns the server address pair .
creates an attribute definition for the given attribute definition .
evaluate attribute .
creates a new action for the given feature .
process event .
poll and process events .
truncate string .
gets the default state of the resource .
creates a builder for a {
sets the address of the server to use . <p / > example : <pre > { @code client . <unk> ( address ) ; } } < / pre > <p / > <p / > <p / > <p / > <p / > <p / > <p / > <p / > <p / > <p / > <p / >
get query clauses .
convert a { @link <unk> } to a { @link <unk> } .
formats a service .
get the names of all available services .
return a list of service instances for the given name .
gets the state of the state definition .
gets the route map .
processes a list of {
{ @inheritdoc }
/ * ( non - javadoc )
create a { @link collaboration } with the given { @link <unk> } .
produce a { @link <unk> } .
create a { @link <unk> } object with the form <code > <unk> / code > .
sets the value of the collection field .
{ @link <unk> ( object ) }
/ * ( non - javadoc )
{ @inheritdoc }
/ * <unk>
create a user .
update user .
attempts to activate a user .
activate a user .
increment the user for a given user .
change password for logged in user .
delete user .
/ * ( non - javadoc )
get user where username and password for a user .
/ * ( non - javadoc )
/ * ( non - javadoc )
get all users .
create a new { @link <unk> } .
create a new { @link org . junit . client . listing . <unk> } .
/ * ( non - javadoc )
get user fields by user .
get the content of a url
download a user from s3 .
method to check if user has user access to user role .
method to check if user has a role .
/ * ( non - javadoc )
<unk> > <unk>
get the value of the field with the given name .
get the json representation of this object .
get the field value as string .
returns the value associated with the given key as a number .
returns the value associated with the given key as a number .
returns the value associated with the given key as a number .
returns the value associated with the given key as a number .
returns the value associated with the given key as a boolean .
get a date value as a date .
attempts to get the value of the <code > <unk> / code > field as a <code > <unk> / code > .
[ variable <unk> ]
set the value of the field .
sets the model type .
return the value of this field as an enum .
converts a { @link <unk> } to a { @link java . util . map } .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a { @link <unk> } from an elastic { @link jsonobject } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the given field has already been used .
verify idtoken .
set the style property .
calls <code > <unk> / code > for the <code > <unk> / code > property .
{ @link <unk> ( <unk> ) }
{ @inheritdoc }
create a flow step .
update flow step .
get flow step by id .
get flow step by step .
get a {
get the standard job view by name .
get ticket views .
get a listing object listing .
get a listing of projects by user .
get ticket views .
produce a ticket configuration listing .
deletes a flow step .
force delete flow step .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the list of beans with the given ids .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a list of form fields for the table records .
check if an index exists
evict a connection from the pool .
returns true if the specified element is supported .
{ @inheritdoc }
get a list of forms for a given param .
get the descendants of this form .
returns a {
validate form fields .
<unk> - <unk>
parse a <unk> from a string .
extract the latitude from an elastic search text .
extract the longitude steps from a string .
/ * ( non - javadoc )
splits a string into an array of strings .
decodes a base64 encoded string .
generates a string representation of the given byte array .
convert a string to a byte array .
encodes a byte array into base64 notation .
<p > <unk> . < / p >
this method converts a message parameter to a json object .
/ * ( non - javadoc )
closes the connection .
adds a jvm argument to the command .
returns a list of the echo messages from the return value .
/ * ( non - javadoc )
unzips a zip file to a byte array .
/ * ( non - javadoc )
validate the given service ticket .
{ @inheritdoc }
creates the form container .
create a new table .
updates the form form in form of a form .
execute a custom action .
create a new <unk> ticket .
delete the form container .
/ * ( non - javadoc )
gets the form data for the form parameter
gets the most recent form data .
returns the form comment by id .
returns the {
create a new { @link form } from a { @link <unk> } .
<unk> - <unk>
<unk> . <unk>
modifies the specified user - group .
create and return a new { @link form } object .
get the form form columns .
/ * ( non - javadoc )
/ * get the absolute form of the form
<p > <unk> . < / p >
render the state of the form .
<p > <unk> . < / p >
{ @inheritdoc }
creates a new form object .
updates an existing form .
returns the form information for a comment
posts a comment to the server .
get a human - readable form listing .
/ * ( non - javadoc )
produce a form ticket .
this method is used to retrieve a cached object value from the given form .
/ * ( non - javadoc )
returns the { @link method } represented by the given { @code name } in the given { @code parameter } .
{ @link <unk> ( object object ) } .
get the debug key from the given itemstack .
/ * ( non - javadoc )
shutdown the memcached client .
{ @inheritdoc }
get the list of descendants for a given form .
returns the value of the property with the specified key in the properties object . if the property is not found in the properties or if the value is null or empty this method returns null .
returns the integer value of the property with the specified key or - 1 if it doesn t exist .
returns the track number or - 1 if not found .
/ * ( non - javadoc )
{ @inheritdoc }
generates a string representation of the verification providers .
/ * ( non - javadoc )
<unk> > <unk>
returns a { @link form } for the given parameter .
/ * ( non - javadoc )
get a list of forms for <unk>
returns a list of form fields for the form fields .
/ * ( non - javadoc )
get a list of field selections from the cache .
/ * ( non - javadoc )
{ @inheritdoc }
create a json representation of this instance .
/ * ( non - javadoc )
method <unk> .
/ * ( non - javadoc )
create a { @link <unk> } instance .
create flow step .
create a { @link <unk> } rule .
update ticket .
update flow step .
update ticket .
produce a { @link <unk> } rule .
get ticket .
produce a { @link <unk> } .
produce a { @link <unk> } .
selects a { @link <unk> } .
produce a { @link <unk> } instance .
produce ticket to move .
delete flow step .
delete flow step .
delete flow step .
/ * ( non - javadoc )
authenticates a user and returns a token .
connects to the current user .
<unk> - <unk>
/ * private void <unk> ( string payload ) { return <unk> . <unk> () ; }
retrieve custom field value .
/ * ( non - javadoc )
siehe { @link <unk> ( string string ) combining ( string ) } and { @link <unk> ( string string ) } .
creates a { @link list } of { @link user } .
update user query
delete user query
get user query by id
create a listing of service queries .
retrieve a user s query .
validate user .
gets the -------------------------------------------------------------
returns the form id mapping for the given id .
returns the server id for the given id .
get target fields .
gets the form field value .
extract a <unk> from a <unk> .
create a role role .
update ticket .
delete role .
retrieve a role for a specific role .
create a new service ticket listing .
/ * ( non - javadoc )
/ * ( non - javadoc )
executes the given command and returns the result .
marshall the given parameter object .
/ * ( non - javadoc )
{ @inheritdoc }
get the value of the field with the given name .
get the value of the field with the given name .
get the actual value of the field with the given name .
gets the value of the field with the given name .
returns the actual value of the field with the given name .
get the value of the field with the given name .
get the value of the field with the given name .
get the value of the field with the given name .
get the value of the field with the given name .
get the value of the field with the given name .
set the value of a form field .
set the value of a form field .
returns true if the given element type is supported .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
convenient method to send a { @link completablefuture } to a { @link <unk> } .
get service ticket .
convert a byte array to a hex string .
converts this instance to a jsonobject .
create a new field of the form <code > <unk> / code > .
sets the barcode .
generic method to create a new { @link <unk> } object .
create a { @link <unk> } .
returns a {
create a new { @link <unk> } .
sets a field mask to the form .
<unk> <p > <unk> . < / p >
sets a plain text field to the form .
/ * ( non - javadoc )
updates the value of the specified form field .
create or update a slider .
sets the value of the <unk> field .
<unk> method .
get the answer for a form .
get the answer for a form .
addmasterlisteners method .
force delete field .
helper method to create a <unk> from a <unk> .
/ * ( non - javadoc )
create a field .
called when a field is submitted to a form field .
returns the { @link field } represented by this { @link field } .
update field .
create a new <unk> ticket .
called to update the field .
update field value .
<p > <unk> . < / p >
delete field .
force delete field .
/ * ( non - javadoc )
sets the value of {
create a new index in the index .
/ * ( non - javadoc )
{ @inheritdoc }
method <unk> .
create or create a new flow .
update flowconfig locally .
create a flow by id .
create a flow by name .
deletes a flow .
this function initializes the flow .
update field value .
<p > <unk> . < / p >
get the value of the given field .
~ methods ------------------------------------------------------------------------------------------------------------------
returns the absolute form of an absolute form .
/ * ( non - javadoc )
returns a copy of the form that match the given <unk> .
gets the form form form .
returns a server - group mapping for the given id .
{ @inheritdoc }
set the data to a json object
/ * ( non - javadoc )
search for synonyms
checks if the expiration date is expired .
create a new user notification
produce a new user notification .
create a new user notification .
delete user notifications .
validate user by id .
/ * ( non - javadoc )
/ * ( non - javadoc )
populates a list of { @link <unk> } and { @link <unk> } s .
generates a random aes key .
/ * private static <unk> <unk> ( byte [] byte [] data ) { hmac . hmac () ;
<unk> - <unk>
<unk> - <unk>
/ * xor ( xor ) : xor ( xor ) * xor ( xor ) * ( xor ) * ( xor ) * ( xor ( xor ) * )
computes the decrypted data from the encrypted data parameter .
decrypts data .
encrypt the payload .
creates a private key from a byte array .
send a message to the client .
clean - up the connection .
/ * ( non - javadoc )
scheme : // www . apache . org / jira / browse / <unk> - <unk>
sets the echo to the specified value .
get the reason for the exception message .
create admin user .
{ @inheritdoc }
/ * ( non - javadoc )
returns a token for the given client id .
get user profile information .
returns a copy of the form fields .
gets the json object for the given session .
deserialize a http request .
default implementation returns a json object .
parse a json - encoded json string .
sends a post request to the endpoint .
post a post request .
perform a post request
delete a json object
delete a json object
/ * ( non - javadoc )
put a {
issues a put request to the {
/ * ( non - javadoc )
execute form http method .
sends a string to the server .
<unk> <unk> .
create a map of parameters from the given name and value .
<unk> > <unk>
url encode a string .
check whether a connection is valid .
tell if the given <unk> is an error .
returns a {
creates a { @link <unk> } from a { @link keystore } .
method to close connection
closes the connection .
retrieves the name of the database product .
closes the given prepared statement .
closes the { @link preparedstatement } .
posts a <unk> to a <unk> .
create a { @link <unk> } from a { @link <unk> } .
create a <unk> for a service ticket .
send a { @link <unk> } to a { @link <unk> } .
validate a flow ticket .
called when a close button has been closed .
entrance method for { @link <unk> ( string object ) } .
send a message to the server .
upload a message to the remote server .
/ * ( non - javadoc )
gen - last : <unk>
get a list of form fields for a given param .
{ @inheritdoc }
get the list of unique ids of the stored connection .
this method gets the singleton instance of this { @link <unk> } . <br > <b > attention : < / b > <br > please prefer dependency - injection instead of using this method .
extract a <unk> for a <unk>
{ @inheritdoc }
checks if the given string is a plain text challenge .
returns true if the parameter is not null .
{ @inheritdoc }
{ name : { name : { name : value } : { name : value1 key2 : value2 }
<unk> method .
produce a license request .
maps the { @link jsonobject } to a { @link jsonobject } .
creates an instance of { @link <unk> } .
creates an instance of { @link <unk> } .
creates an instance of { @link <unk> } .
produce ticket .
creates a new { @link <unk> } with the given parameters .
create an empty { @link <unk> } .
creates an instance of { @link <unk> } .
convert a { @link <unk> } to an { @link <unk> } .
creates an instance of { @link <unk> } .
convert a plain { @link <unk> } to an { @link <unk> } .
update ticket field .
convert a plain { @link <unk> } to a { @link <unk> } .
produce an instance of { @link <unk> } .
produce a new <unk> ticket .
update field fields .
update the field .
/ * ( non - javadoc )
update field value .
creates an { @link <unk> } .
<unk> method .
get ticket field values .
delete field .
force delete field .
method <unk> .
/ * <unk>
get configuration information for a given configuration key .
/ * ( non - javadoc )
{ @inheritdoc }
creates a new { @link form } with the given { @link <unk> } .
get the list of providers that have been created .
create a soap attachment .
updates an attachment by its id .
get attachments from a form .
delete attachment .
delete attachment .
encode a {
generates the attributes for the <unk> attribute .
/ * ( non - javadoc )
parses the validators .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
returns true if the node is a schema .
returns the title of the disallowed elements .
renders the presenter settings .
register a reference to the <unk> .
sets the location of the schema .
{ @inheritdoc }
/ * ( non - javadoc )
compare two {
get the {
creates a {
update an <unk> based on an rdf restriction .
checks if a {
checks if the given attribute is valid .
/ * ( non - javadoc )
reconfigure logging .
get the root element of the given file .
validate that the {
loads the xsd schema from the front of the xsd .
/ * ( non - javadoc )
parses a {
converts a { @link map } to a { @link map } .
replace the access elements of the given select elements .
returns a string representation of this node .
a helper method to check if a {
create a new { @link <unk> } for the given { @link <unk> } .
evaluates if the given element is a valid maxoccurs value .
/ * ( non - javadoc )
assert that the given element name is non - trimmed .
validate that the given string is a valid positive integer value .
/ * ( non - javadoc )
validate a required child element .
returns the default value for the {
returns the default value for a {
returns the default value for {
creates a {
{ @inheritdoc }
<p > convert . < / p >
returns an { @link iterable } of { @link <unk> } s for the given class .
<p > <unk> . < / p >
<p > <unk> . < / p >
creates a new instance of { @link <unk> } .
validate arguments .
parses the date and converts it into a string .
adds a path segment to the endpoint .
add a new view to the list
remove a footer view . <p >
sets the position of the entry .
set the curve .
returns the length of the specified sequence length .
get the value of the basis property .
compute the length of the two given points .
run the <unk> algorithm
returns the noise value that is noise to 0 .
calculates the length of a vector .
/ * ( non - javadoc )
returns the value of the matrix with the specified latitude / longitude coordinates .
find a minimizer of an interpolated cubic function .
<p > returns the value of the element in the vector that is a value . < / p >
recalculate the scale factor
returns the intersection of this range with the specified lower and upper bound .
processes a list of { @link <unk> } s .
starts the { @link <unk> } .
/ * ( non - javadoc )
retrieves the account id from the cloudtrail log .
{ @link <unk> ( string ) }
<p > find . < / p >
{ @inheritdoc }
determines the ceylon module name .
gets the event serializer .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
checkstyle : off
returns a random object of the specified type .
creates a copy of the given file .
creates a temporary directory .
deletes all the files in the directory .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
get a { @link <unk> } from the given { @link extension } .
returns the namespace context for the given class .
{ @inheritdoc }
/ * ( non - javadoc )
returns a list of { @link <unk> } s for the given { @link annotatedelement } .
restores the property with the given name .
this method reads the contents of a { @link java . io . inputstream } into a { @link java . io . inputstream } based on the given { @link <unk> } .
convenience method to get a set of dependencies for a class .
fires an { @link <unk> } on all registered { @link <unk> } s .
expand a { @link observable } to a { @link observable } .
creates a new { @link <unk> } with the given { @link <unk> } and { @link <unk> } .
animate the background color of the view .
creates a new { @link <unk> } instance .
/ * ( non - javadoc )
/ * <unk>
sets a property value .
get the value of a system property .
get the value of a property as a string .
get the next state transition .
waits for a thread to be executed .
get the raw class for the given type .
{ @inheritdoc }
returns the parameterized type as a parameterized type .
gets the index of the given type variable .
<p > <unk> . < / p >
puts the given result into the cache .
creates new instance of fixture .
<p > compile . < / p >
puts the given result into the cache .
creates a new cache with the specified names .
print a stack trace to the print stream .
print a stack trace .
returns the set of classes in this context .
deserializes the remote object into the remote object .
closes the timer .
/ * ( non - javadoc )
/ * ( non - javadoc )
run the deadlock .
upgrade lock entry .
called when the task is completed .
stops the given task .
put a new task .
removes the specified job from the list of locks .
deletes the job .
gets the fetch mode for the specified mode .
/ * ( non - javadoc )
<p > get . < / p >
returns all the members in the given directory that match the specified ids .
list files in the given directory
/ * ( non - javadoc )
set up a single { @link <unk> } .
add a reader to the <unk> .
copy the contents of the reader into the given catalog .
creates a catalog .
loads the catalog catalogs from a list of catalog files .
parse the catalog file .
/ * ( non - javadoc )
<p > <unk> . < / p >
parse the catalog files .
parse the catalog file .
/ * ( non - javadoc )
/ * ( non - javadoc )
parses all catalogs .
resolve an entity instance by name .
resolves the ip address in the catalog .
get the schema for a public key .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
<unk> - <unk>
decodes data from base64 .
convert a byte array to a hex string .
/ * ( non - javadoc )
/ * ( non - javadoc )
convert string to string array
creates a new value ref .
/ * ( non - javadoc )
fires an { @link event } on all registered listeners .
adds a factory to the console .
creates and returns a list of child objects .
/ * ( non - javadoc )
returns a { @link <unk> } for the specified { @link serversocket } .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the value of the property .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds an entry type to the map .
returns the type of the given entry type .
returns the class name of the given type .
returns the { @link integer } value of the receiver .
/ * ( non - javadoc )
extracts the nodes from the list .
/ * ( non - javadoc )
set the thread context class loader .
locates the component at a given index in the queue .
swaps the values of the specified queue and base queue .
removes a node from the queue .
cleanup timeout .
checks if the heap is valid .
/ * ------------------------------------------------------------
calls { @link <unk> ( java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . object ) } and { @link <unk> ( java . lang . string java . lang . string java . lang . string java . lang . string ) }
documentation inherited from interface
this method is called to process query parameters .
loads a class from the current thread .
create a new set of <unk> .
close the input stream .
creates a new counter with the given counter .
creates a new { @link <unk> } instance .
returns true if the namespace is in the namespace namespace .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
processes the given { @link chunk } .
put a value in the context .
lookup a value from the map .
<p > <unk> . < / p >
binds the specified value to the target object under the specified name .
binds the specified value to the specified <code > value< / code > .
gets the object instance of the given object .
substitute sub - range of a substring .
splits a string into an array of strings .
returns a byte array representation of the given chars .
<p > <unk> . < / p >
trim all occurrences of the supplied leading character from the given string .
trim all occurrences of the supplied leading character from the given string .
gets the value of the <unk> property .
returns true if the given file is a directory .
creates the map .
returns the value associated with the given key .
returns the value to which the specified key is mapped or { @code null } if this map contains no mapping for the key .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
removes the mapping for the specified key from this map if it is present .
remove all entries from the map .
/ * ( non - javadoc )
starts the animation .
returns the value associated with the given key .
gets the child elements of a given parent element .
gets the unique child element with the given tag name .
returns the child element of the given parent element .
get the content of the given element .
returns the unique element of the given element .
get the value of a child element .
/ * ( non - javadoc )
sets the maximum number of concurrent threads .
sets the blocking mode .
sets the name of the blocking mode .
executes the task .
startelement method .
schedules the specified task to be fixed .
removes the { @link <unk> } from the queue .
/ * ( non - javadoc )
adds a new entry to the catalog .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
resolve an external entity .
resolve an external entity .
/ * ( non - javadoc )
appends the given vector to the end of the vector .
/ * ( non - javadoc )
resolve the system .
run the resolution process .
returns true if the system property exists .
resolves all catalogs in the database .
set the namespace parser .
returns the node that is associated with the given root element .
downloads the catalog from the catalog .
delete the given catalog .
receive notification of the beginning of an element .
receive notification of the start of an element .
receive notification of the end of an element .
receive notification of a processing instruction .
/ * ( non - javadoc )
/ * ( non - javadoc )
close the pool .
acquires the lock for the given lock .
connects to the given file .
/ * ( non - javadoc )
/ * ( non - javadoc )
compareandset next node .
/ * package
/ * ( non - javadoc )
returns an immutable snapshot of the map .
compareandset right field .
/ * ( non - javadoc )
get or create the logger .
writes the given object to the given buffer .
returns the short name of this component .
returns a string representation of the subject implementation of the subject .
returns a new instance of { @link <unk> } . <br > <br > <b > attention : < / b > <br > please prefer dependency - injection instead of using this method .
<p > <unk> . < / p >
set the packages .
sets the name of the packages .
sets the name of the packages .
set the packages .
set the packages .
returns the value of a property .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
returns the packages associated with the specified packages .
get compatible constructor for the given type .
serialize an object to a java object .
/ * ( non - javadoc )
cast a object to a optional
converts the given object to an array .
initialize basic properties .
create a new instance of ldap cache .
/ * ( non - javadoc )
removes the property with the specified name from the property map . <p > if the value is null this method returns null . < / p >
/ * ( non - javadoc )
creates a new { @code <unk> } with the given { @code <unk> } .
adds a listener to the list of listeners that will be notified when the bound data is registered .
<p > <unk> . < / p >
remove a propertychangelistener from the list of listeners .
sets the status of the job .
notifies the listeners that the source has been updated .
fire property change event .
fire the event to all listeners .
returns the name of the property that is prefixed with the given prefix .
add parameters to a map .
reads the dictionary from the properties file .
loads the filereaderwriterfactory specified by classname .
set a connection property .
sets the value of an array property .
get a property group value .
registers a new scanner with the given id .
/ * ( non - javadoc )
returns true if the selected type is selected .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
replies the dirname of the specified classpath resource .
/ * ------------------------------------------------------------
sets the value of the document as text .
normalizes a space .
build a new {
returns the id for the given urn .
replace all occurrences of a string with another string .
/ * ( non - javadoc )
stop the stopwatch .
******************** initialization ************************************
<p > compare . < / p >
convert a byte array to a long .
returns an { @link java . lang . object } of an array of objects .
initializes the internal map . <p >
sets the value of the field .
read the property with the given name from the map .
downloads the catalog from the given catalog .
<unk> - <unk>
zip array iterator .
this method initializes this
/ * ( non - javadoc )
registers a new vertex with the given name .
set the root groups .
adds a new edge to the graph .
adds an edge to the graph .
removes the given vertex from the graph .
removes an edge from the graph .
visit the graph .
performs a depth - first search on the outgoing graph .
performs a depth - first search on the graph .
depth - first search spanning variables .
removes the vertex from the graph .
create the accessor for { @link <unk> } .
xmlfilter methods -------------------------------------------------------
/ * ( non - javadoc )
normalizes a string so that it can be used for normalization purposes .
parses the given xml string and returns a { @link element } .
parse an xml document from an xml document .
parses the given input source into a dom element .
create an element from a local part .
endelement method .
helper method to get the value of an attribute
get attribute value .
removes all unused attributes from the given element .
returns true if the node has a child element .
returns the child elements of the given element .
gets the text content of a node .
gets the child elements of the given node .
returns the parent node of the given node .
add a resource to the waiting list .
read the catalog from the catalog .
download file .
get the host name from the server .
/ * ( non - javadoc )
gets the singleton instance of the { @link <unk> } .
sets the system property .
<p > <unk> . < / p >
display the class of the given class .
get the url of the user s classpath
returns a string representation of the given object .
<p > <unk> . < / p >
<p > prints a <code > <unk> / code > to the specified <code > <unk> / code > . < / p >
extract the package name from the given classname .
extract the package name from the given classname .
/ * ------------------------------------------------------------
convert the primitive wrapper class to a primitive wrapper class .
get all interfaces implemented by the given target class .
returns an array of {
returns true if the given type is a number .
creates a new instance of the specified class using the specified default class loader .
loads a class by name .
acquire a typedesc from a class name .
converts the given iterator to an array of java classes .
returns the value of the specified attribute .
gets the attribute value .
convert a class name to a java class .
get a system property .
/ * ( non - javadoc )
gets the names of the named property in the given property name .
returns true if the given file is a directory .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the { @link <unk> } of the given class .
checks if a file should be accepted or not .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds an argument to the given object .
gets the names of the specified property .
removes the given object from this object .
/ * ( non - javadoc )
add a propertychangelistener to the bound list .
remove a propertychangelistener for a specific bound property .
binds the specified property to the specified property .
binds the specified property to the specified property .
read a catalog .
returns the object associated with the given class or null if not found .
gets the cache for the given name .
returns <code > true< / code > if <code > value< / code > is <code > null< / code > .
converts a string value to a java object .
finds the property editor for the given type .
converts a string value to a java object .
converts the given { @link string } to a { @link java . util . concurrent . <unk> } .
<p > <unk> . < / p >
map bean properties to bean properties .
map bean properties to java bean .
create a server socket for the specified port .
set the thread context class loader .
/ * ( non - javadoc )
schedule timeout in milliseconds .
/ * ( non - javadoc )
helper method to bind an object to the named directory
unbinds a binding .
looks up the class with the given name .
<p > <unk> . < / p >
looks up a class by name .
create a link to the named link .
binds the given object to the given object .
removes the link with the given name .
unbinds a link from the specified context .
<p > <unk> . < / p >
<p > <unk> . < / p >
signals that a transition with the given name exists .
the main method .
evaluate javascript source .
/ * ------------------------------------------------------------
/ * <unk>
<p > <unk> . < / p >
/ * ( non - javadoc )
returns true if the property is not set .
load a catalog .
invokes { @link <unk> ( java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang .
/ * ( non - javadoc )
creates a new <unk> .
/ * ( non - javadoc )
resolve a url .
get the absolute uri of a url .
/ * ( non - javadoc )
returns the propertydescriptor for the given bean property .
sets the value of the property on the target object .
read the property with the given name from the map .
extracts the package name from a typeelement .
returns the class name of an object .
returns the namespace for the given node .
create a { @link element } from the given { @link qname } .
/ * ( non - javadoc )
returns an { @link arraylist } of { @link list } s containing the elements of the given enumeration .
returns an input stream for reading the contents of the specified file .
loads the properties from the properties file .
/ * ( non - javadoc )
adds an edge to the graph .
adds a new edge to the graph .
adds an edge to the graph .
{ @inheritdoc }
removes an edge from the graph .
return the edge of the node
returns true if the graph contains the edge .
returns the cost of the actual type depth .
zip the contents of a file into a zip file .
zip the contents of a file into a zip file .
<p > jar . < / p >
unzips a jar file .
utility method to extract a jar file from a jar file
returns <tt > true< / tt > if this iterator has more than one iterator .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is called to process a task queue .
installs the jvm type provider for the given resource set .
installs the jvm type provider for the given resource set .
installs a { @link classloader } for the given { @link <unk> } .
iterate over the parent folder of the given parent folder and return true if they are deleted .
run the task into the javafx application thread .
retries the action of a specific type .
returns the absolute path of the resource .
sets the action for each key / value pair in the map .
returns a {
<p > <unk> . < / p >
get the { @link logger } for the supplied name creating one if it doesn t exist .
log a message at the info level .
log a message at the error level .
log a message at the trace level .
deprecated . please use slf4j { @link <unk> ( string throwable ) } instead .
log a message at the info level .
log a message at the error level .
delegate to the { @link <unk> ( string object ... ) } method .
log a message at the error level .
log a message at the info level .
log a message at the info level .
log a info message with a throwable .
deprecated . please use slf4j { @link <unk> ( string throwable ) } instead .
log a formatted message at level warn according to the format outlined above .
log a message at the warn level .
log a formatted message at the warn level .
log a message at the warn level .
<p > error< / p >
log a message at the error level .
<p > error< / p >
log a message with error level .
gets a stream of records to one of the specified rights .
this method is equivalent to { @link <unk> ( collection iterable ) } .
convert a stream of <unk> to a stream of values
zip together this stream into a stream of values using the supplied combiner function .
returns a stream consisting of the results of applying the specified function to each of the supplied functions .
/ * ( non - javadoc )
bootstrap the logger for the specified host and port .
bootstrap the environment for the specified host and port .
configures a { @link <unk> } to be used in a { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
executes a <unk> command .
find the document by name or index .
load training data .
the main method .
list the files in the given <unk> .
read a config file .
<p > copies a <code > string< / code > to a <code > string< / code > . < / p >
adds a file to the set of files .
{ @inheritdoc }
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
compute the number of characters read from the input stream .
<p > <unk> . < / p >
returns the numeric code represented by the given { @code int } value .
the main method .
returns the length of the given word .
returns the number of elements in the list .
returns the standard deviation of the values in the samplegroup .
/ * ( non - javadoc )
print a list of chunks .
/ * <unk>
search for the specified subarray using the specified <code > <unk> / code > .
generates the maximum match for the given entry
decodes the given string
the main method .
creates a mode with the specified api key and value .
creates a new instance of { @code mode } with the specified api key .
create a { @link mode } with the given parameters .
creates a new { @link mode } with the specified api key .
returns a map of the key / value pairs from the given map of arguments .
calls the {
creates a new { @link <unk> } instance .
/ * ( non - javadoc )
init data source .
/ * ( non - javadoc )
calls { @link <unk> ( string tokenizer ) } with the given { @link <unk> } .
get data source .
get data source for a jndi name .
create a datasource
create an instance of { @link t } .
converts a { @link class } into a { @link array } .
returns a constructor of the given type .
create an object from a list of { @link <unk> } s .
gets the set of { @link credential } s of the given type .
create a set of elements from a collection of objects .
shortcut for {
shortcut for {
create a deque from the given class .
create a new { @code deque } from the specified { @code <unk> } .
gets a sorted set of elements from the given class .
create a new { @code sortedset } with the specified { @code type } and { @code values } .
gets a { @link class } that is sorted by the specified { @link class } .
map a { @link map } between { @link class } and { @link class } .
returns an { @code optional } with the specified { @code value } .
create a list from a collection of objects .
generate a fresh value for the given type .
creates a new { @link arraylist } of { @link t } objects .
returns an array containing all of the elements in the given collection .
creates a new { @link hashset } instance containing the given elements .
converts an { @link iterator } to a { @link <unk> } .
creates a { @link set } of { @link t } objects .
creates a { @link sortedset } containing the elements of the given { @link iterable } .
returns a { @link hashmap } that maps the given { @link class key class } and { @code value } to the given { @code value } .
map this map to a { @link map } .
returns an {
filters the given { @link collection } of { @link option } s with the given { @link collection } .
<p > <unk> . < / p >
create a flink { @link typeinformation } from { @link <unk> } and { @link <unk> } .
ensures that a given type is an instance of the given type .
assert that the given { @code type } is { @code success } .
try to try to execute the given { @link <unk> } .
creates and returns a { @link <unk> } instance with the given { @link <unk> } .
<p > <unk> . < / p >
try to load a database in the database .
as boolean array .
<p > query . < / p >
<unk> > <unk>
this method is called after { @link <unk> ( long int int int int int ) } is called .
/ * ( non - javadoc )
create a new sql table .
gets the blob value for the given column .
sets the empty text .
utility method to dump the elements of a file to a csv file .
add a constructor to the query .
/ * ( non - javadoc )
add a property to the query .
add the given expressions to the list of expressions .
<p > escapes all the characters in the given string . < / p >
<p > unescapes the csv output . < / p >
get the values of a csv file .
reads the next value from the input stream .
splits the given query string into a map of parameters .
converts a map of key - value pairs into a string .
converts a list of strings to a string .
converts an array of objects to a string .
/ * ( non - javadoc )
reads the database from the given { @link bufferedreader } .
write messages .
/ * <unk>
returns the hint of the control interface if it wasn t present .
get the base dao class for the given entity .
returns the binding type name .
capitalizes the first letter of the first character .
<unk> / <unk>
imports the contents of a { @link <unk> } into a { @link <unk> } .
loads the value from the csv file .
called when the table is created .
this is called when the database is upgraded to the database .
this method is called when the database has been upgraded to the database . this method should be called only once .
create and restore all tables from the database .
backup all rows of a table .
restore all tables from the current table
reads a {
writes the given { @link <unk> } to the specified { @link <unk> } .
get the converter for the given converter .
/ * ( non - javadoc )
create a typed query for the specified type .
/ * ( non - javadoc )
/ * ( non - javadoc )
set a parameter with the given name and value .
adds a parameter to the request .
add a collection of parent ids to the query .
/ * ( non - javadoc )
deletes the bean with the given id .
returns the dynamic value for the given id .
inserts a new object into the table .
inserts orphaned events into the database .
/ * ( non - javadoc )
updates the bean with the given job id . <p >
count the number of rows in the table
perform a query on the current database .
returns a copy of the given { @link cursor } in the cursor .
returns the first element in the list .
{ @inheritdoc }
similar to {
and where clause .
add a where clause to the where clause .
add a collection of values to the target collection .
add an in clause to the list .
add a not column to the database .
add a constraint to the list using the specified expression .
add a subquery to the query plan .
/ * [ deutsch ] <p > <unk> . < / p >
/ * package
returns the next active stack .
/ * package
add a plan to the probation tree .
select a list of plan plans .
convert a string to a random plan .
add information to the bayesian network to reason with it .
/ * ( non - javadoc )
returns a copy of the parents .
returns the names of the children of this buffer .
writes the given byte array to the given byte array .
create a new logger appender .
/ * ( non - javadoc )
/ * public void <unk> () { return <unk> () ; }
add a new goal .
the main method .
/ * ( non - javadoc )
gen - last : <unk>
/ * package private
gen - last : <unk>
returns true if the extension is loaded
register an extension factory .
the start of the search process .
parses the arguments .
/ * ------------------------------------------------------------
method to load the agent from a class .
registers the plans to be used for the plans .
creates a {
/ * ( non - javadoc )
/ * <unk>
/ * public static <unk> <unk> ( <unk> <unk> ) { return <unk> . <unk> ( <unk> ) ; }
get goals from the supplied provider .
loads a class from the given class name .
returns an instance of the { @link <unk> } class for the given class name .
returns true if the given object is equal to the right .
prints usage information .
parses the command line arguments .
parse command - line arguments .
convert a string to a resource .
/ * ( non - javadoc )
----- private methods -----
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
return the {
shrink the array .
get a new id from the <unk>
/ * ( non - javadoc )
get object value .
/ * ( non - javadoc )
/ * ( non - javadoc )
reorder the array .
/ * ( non - javadoc )
defines a belief
determines the cpt of the aux node .
{ @inheritdoc }
returns the set of instructions given a jsonpath expression .
coerces an object to a string .
returns true if the given <unk> is compatible with the given <unk>
main method .
modifies the field name according to the constraints .
convert a string to a byte array .
execute a new goal .
send a message to the mailbox
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a copy of the data .
add goals to the block
this method changes the value of an agent s belief
adds the specified belief to the runtime .
executes the given query .
{ @inheritdoc }
<unk> implementation .
find the field with the given name .
returns the index of the first occurrence of the specified field .
/ * ( non - javadoc )
parses the command line arguments .
executes the <unk> belief
adds the specified number of neighbours to the specified buckets .
/ * <unk>
parses command - line arguments .
/ * ( non - javadoc )
initializes the {
{ @inheritdoc }
determines the preference to be used for a goal .
undeploys an agent .
try to remove the inactive listener .
deactivates the agent .
wait for external message to be inactive .
shuts down the {
/ * ( non - javadoc )
move forward down onto the heap .
the main method .
initializes the {
starts the agent .
wait until all pools are idle .
<p > finish . < / p >
returns true if all of the free threads are idle .
/ * ( non - javadoc )
cancel a network call
returns an instance of { @link <unk> } with the given <code > v< / code > value .
create a new <unk> expression
set the expression .
returns an expression that evaluates to the specified <code > <unk> / code > .
joins the given sets of properties and joins them to a single join .
copy joins from from to to join
/ * ( non - javadoc )
returns true if the current interval is empty .
{ @inheritdoc }
create a single upload request .
gets the object name from the temporary object .
/ * ( non - javadoc )
/ * ( non - javadoc )
removes the extension from the given path .
/ * ( non - javadoc )
returns the content type represented by this { @link <unk> } .
returns true if this map contains an attribute with the given name and value .
/ * ( non - javadoc )
convert a comma - separated string into a map of parameters .
/ * ( non - javadoc )
creates a writer for a single folder .
writes the given artifact to the given directory .
/ * ( non - javadoc )
find all methods annotated with {
initializes the query class .
returns an array of {
/ * ( non - javadoc )
get the instance type .
gets the properties for the given entity .
finds a constructor for the given class .
copies all fields of the given source class into a list of { @link field } s .
configure static fields .
returns a string representation of the string representation of the method .
returns the annotation of the given class or <code > null< / code > if no annotation is found .
checks if the given class is annotated with the given annotation .
returns the annotation of the given type .
returns the long value of an object .
returns the serializable interceptor class for the given class or null if not found .
returns the { @link <unk> } associated with the specified { @link method } .
creates a { @link <unk> } for the given { @link class } .
creates a { @link collection } of type { @link <unk> } .
add a { @link <unk> } to the { @link <unk> } .
<p > main . < / p >
--- ping loop ---
<p > <unk> . < / p >
returns the dependency value for the specified {
replies if the given <unk> is required .
/ * ( non - javadoc )
register an { @link inputstream } to the { @link scheduler } .
sets the { @link uri } of the given { @link uri } to the given { @link uri } .
adds a link to the halrepresentation .
executes the request and returns the response .
******************** methods *******************************************
log a response .
perform a synchronous processing of the response .
invokes the {
analyse the links for the given response .
/ * --- public methods ---
/ * ( non - javadoc )
add a key / value pair to the map .
calculates the names of the cookies in the response .
returns true if the min range is empty .
returns a list of all objects in the database .
generate abbreviated exception message .
/ * ( non - javadoc )
/ * ( non - javadoc )
registers the instance processor .
register a scope factory .
registers a new instance factory .
register found instance processor .
register a { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
destroy this instance .
/ * ( non - javadoc )
creates a new instance of the { @link <unk> } .
configure hibernate converter configuration .
get the value of this configuration section .
adds the argument to the list of arguments .
returns a list of target files .
marshals the object to a file .
marshals this object to a string .
<p > write . < / p >
initialize the template .
returns the name of the application in the template or null if not found .
creates a type object from a reader .
creates a <unk> from a file .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
<p > invoke . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
converts the specified { @link <unk> } to a { @link org . apache . commons . codec . <unk> } .
returns the content type for the given content type .
/ * ( non - javadoc )
<p > <unk> . < / p >
decode an { @link <unk> } to a { @link <unk> } .
/ * ( non - javadoc )
parse a string from a string .
sets the value of the given field to the given value .
<p > close . < / p >
/ * ( non - javadoc )
get the capture appender .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
parses the given { @link parameter } .
this method is used to initialize the index .
{ @inheritdoc }
executes the given directory parsing .
returns true if {
returns the set of known top - level types .
sets the model files .
sets the file extensions .
add a model resource .
/ * ( non - javadoc )
figure out if a list of values is a comment .
groups the ties and their values together .
compares the values in the given list .
compares the fields of the source object to the target object .
builds a map from a list of strings .
{ @inheritdoc }
{ @link <unk> ( object object [] ) }
get the log analyzer events for the specified cell .
/ * ( non - javadoc )
returns a map whose keys are the same as the key and the elements in the given sequence .
sets the value of the designated parameter to the given value .
set the value of a feature .
identical to {
/ * ------------------------------------------------------------
gets the argument value from the arguments .
{ @inheritdoc }
processes a velocity template .
{ @inheritdoc }
this method converts the input stream into a { @link java . io . closeable } object .
inits the model .
returns the canonical { @link file } directory .
write a calendar to a string .
/ * ( non - javadoc )
/ * ( non - javadoc )
starts the browser .
configure the application .
renders the web . <p >
print a printable view .
/ * ( non - javadoc )
copy the contents of an inputstream into an outputstream .
opens the window .
/ * ( non - javadoc )
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
destroy method .
returns the array of cookies in the request .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
<p > <unk> . < / p >
liberty change end
config config .
{ @inheritdoc }
/ * ( non - javadoc )
build the remote host hash .
stores the next event in the queue .
sets the value of the given property to the given value .
encrypt event .
removes the given prefix from the given path .
checks if the given file is a symbolic link .
gets all the files in the given directory .
returns the most common base directory for the given name .
<p > <unk> . < / p >
returns a path to the base path .
returns the name of the parent directory .
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> <unk> <unk>
process unauthorized request .
/ * ( non - javadoc )
/ * ( non - javadoc )
send an error to the client .
executes the given {
sends a json object to the client .
add a list of parameter templates to the request .
sets the set of template resolvers .
initializes the template with the given parameters .
<unk> obiekt template .
returns <code > true< / code > if the specified <code > b< / code > are equal to <code > b< / code > .
/ * ( non - javadoc )
set the value of the save button .
launch the <unk> dialog .
prints the help message .
capture variables .
opens a buffered reader for the given encoding .
/ * ( non - javadoc )
creates a new instance of the { @link <unk> } .
formats the given logrecord as a pem formatted string .
returns the names of all nodes in the collection .
{ @inheritdoc }
{ @inheritdoc }
returns the number of times the given file is in .
returns a list of all the files in this folder .
<p > <unk> . < / p >
format node label .
render the summary row for the plugins .
/ * ( non - javadoc )
returns the hash of the report file .
/ * ( non - javadoc )
creates a new instance of the given interface with the given arguments .
creates a new instance of the given class with the given arguments .
creates an instance of the given interface with the given arguments .
returns an instance of the remote interface of the given interface .
get the { @link <unk> } instance for this { @link <unk> } .
adds a filter row to the grid . <p >
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of { @link resource } s for the given { @link org . jboss . as . controller . <unk> } .
returns a list of { @link <unk> } s where the { @link <unk> } is set to { @link <unk> } .
adds a row to the cell .
sets the search candidates .
copy the contents of a file to a file .
decompiles the given directory .
builds the configuration .
sends a notification to the notification .
decoded parameters to map .
given an array of formal parameters return an array of formal parameters .
converts a string value to an object .
replies if the given type contains any of the formal parameters .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
pre process arguments .
resolves the formal type arguments for the member variables .
<unk> { @link <unk> } <unk>
use { @link <unk> ( java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string
adds a document to the buffer .
/ * ( non - javadoc )
<p > <unk> . < / p >
loads fixture by given name .
sets the {
/ * ( non - javadoc )
check if the request is a keep - alive request .
returns true if the given request is an xhr request .
/ * ( non - javadoc )
{ @inheritdoc }
removes the cell at the specified index .
insert elements into the table
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
returns a mutable list of { @link propertydescriptor } s for the given { @link bean } class .
returns a list of properties with the specified annotation type .
returns the annotation of the specified type .
<unk> : <unk>
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
execute <unk> on the provided domain .
build a { @link <unk> } for a { @link <unk> } .
/ * ( non - javadoc )
find webcam driver .
/ * this method attempts to obtain a managed principal from the given realm .
~ methods **************************************************************************************************************************************
<p > <unk> . < / p >
this method is used to process not in the form of a { @link org . apache . beehive . controls . support . <unk> } .
{ @inheritdoc }
/ * ( non - javadoc )
<p > init . < / p >
configure the http response .
returns the value of the cookie with the specified name .
add a cookie to the response .
put a metadata object into the registry .
<p > <unk> . < / p >
returns the list of allowed values for this node .
/ * ( non - javadoc )
returns a new generator instance .
add a class .
creates a new instance of the specified class .
returns true if the given token matches the given token .
normalizes the given file name .
add end point .
blocking method to generate properties .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the current request .
/ * ( non - javadoc )
executes a method on the given { @link <unk> } .
/ * public void <unk> ( <unk> <unk> ) { if ( <unk> == null ) { return null ; }
processes a throwable and returns the original exception .
finds files in a directory and returns them as a list of files .
returns an array of all the files in this directory .
finds files in a directory and returns them as an array of files .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the extension of the given filename .
saves the dialog .
shuts down the driver drivers . <p >
parse the extension element .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > checks if the specified path is simple case sensitive . < / p >
returns a list of { @link org . jboss . as . controller . factory . <unk> } for the given { @link bundlecontext } .
parses the given string as a string using the given format .
<p > parses a string using the specified locale . < / p >
initializes the window content .
/ * ( non - javadoc )
/ * ( non - javadoc )
execute a http request .
/ * ( non - javadoc )
reads the rows from the model .
/ * ( non - javadoc )
get the receiver for the given model object .
prints the metadata .
/ * ************************************************************************* java object serialization ***********************************************************************
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the string representation of the resource method .
retrieve the range of properties from the request .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
<p > compares two <code > <unk> / code > and <code > <unk> / code > . < / p >
/ * ( non - javadoc )
returns the result set .
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> implementation .
merges the properties of the specified {
upload a listener to the gerrit server .
remove a user from the ftp server .
retrieves the value of the designated column as a java . sql . timestamp value .
returns the value of the first occurrence of the specified argument . if no arguments are specified the default value will be returned .
implements the {
/ * ( non - javadoc )
<p > <unk> . < / p >
gets the names of the facet names .
<unk> > <unk>
schedules the specified task to be executed .
/ * ( non - javadoc )
helper method to clean up the task .
/ * ( non - javadoc )
create a new view .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
loads the { @link semanticspace } from the provided { @link row } .
<p > <unk> . < / p >
save the user s password .
creates a new connection string .
{ @inheritdoc }
gets the challenge .
/ * ( non - javadoc )
retrieves delegated credentials from the myproxy server .
handles authentication challenges .
configures the application .
prints logo .
prints the usage banner .
<p > <unk> . < / p >
get file name from command line arguments .
registers the shutdown hook .
determines if the command line arguments are enabled .
{ @inheritdoc }
reads and starts a new instance of the class .
reads the action method .
the exponential increase sleep time .
transforms and enter the actor .
triggers a notification to the notification .
prints the help message .
/ * ( non - javadoc )
insert rows into the table
<p > <unk> . < / p >
<unk> method .
check if the provided string is a valid date manager .
setter for language - sets
getter for redirects - gets list of redirects pointing to a wikipedia page .
setter for answer - sets
getter for <unk> - gets
setter for question - sets
register a single service factory .
getter for values - gets
getter for pos - gets
setter for <unk> - sets
getter for <unk> - gets
setter for <unk> - sets
getter for filename - gets
setter for pos - sets
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for <unk> - sets
getter for pos - gets
setter for <unk> - sets
getter for entities - gets
setter for entities - sets
indexed getter for beginnings - gets an indexed value -
indexed setter for beginnings - sets an indexed value -
getter for entities - gets
setter for entities - sets
indexed getter for beginnings - gets an indexed value -
indexed setter for beginnings - sets an indexed value -
indexed getter for categories - gets an indexed value - list of wikipedia categories associated with a wikipedia page .
indexed getter for redirects - gets an indexed value - list of redirects pointing to a wikipedia page .
setter for token - sets
indexed getter for mentions - gets an indexed value -
setter for values - sets
indexed getter for mentions - gets an indexed value -
setter for token - sets
getter for values - gets
setter for values - sets
getter for answer - gets
setter for answer - sets
getter for <unk> - gets
setter for <unk> - sets
getter for component - gets
setter for <unk> - sets
getter for <unk> - gets
setter for postag - sets
indexed getter for mentions - gets an indexed value -
indexed setter for mentions - sets an indexed value -
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for values - sets
indexed getter for itemlist - gets an indexed value - annotations to be chained .
indexed setter for itemlist - sets an indexed value - annotations to be chained .
getter for entities - gets
setter for token - sets
getter for component - gets
setter for component - sets
setter for doctype - sets the component type of the document
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for value - sets the value of the lemma as text
getter for component - gets
setter for <unk> - sets
getter for component - gets
setter for component - sets
getter for entities - gets
setter for head - sets
getter for <unk> - gets
setter for head - sets the head step of the relation
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for pos - sets
getter for component - gets
setter for objecttype - sets
getter for <unk> - gets
setter for <unk> - sets
getter for entities - gets
setter for probability - sets
getter for <unk> - gets
setter for entities - sets
checks if a class can be instantiated .
checks if the given biopax class can be instantiated .
getter for resourceentrylist - gets
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
getter for answer - gets
setter for <unk> - sets
getter for <unk> - gets
setter for <unk> - sets
getter for component - gets
setter for component - sets
getter for component - gets
getter for component - gets
setter for <unk> - sets
setter for ref - sets
getter for answer - gets
setter for answer - sets
getter for <unk> - gets
setter for entities - sets
getter for tense - gets
setter for component - sets
registers a servlet deployment .
getter for head - gets
setter for answer - sets
setter for names - sets
getter for doctype - gets the type of the document o
getter for entities - gets
setter for entities - sets
getter for component - gets
setter for <unk> - sets
getter for arguments - gets
setter for values - sets
getter for component - gets
setter for component - sets
returns the index of the first set bit starting at the specified index .
sets the bit at the given index .
<p > <unk> . < / p >
execute transaction .
unmap a buffer .
/ * ( non - javadoc )
populates a method with the given parameters .
associates the given node with the given name .
/ * ( non - javadoc )
converts a { @link record } into a { @link map } of parameters .
/ * ( non - javadoc )
{ @inheritdoc }
writes this buffer to the specified output stream .
/ * documented <unk>
/ * [ deutsch ] <p > <unk> . < / p >
join the array of strings using the specified delimiter .
convert a collection of strings to a delimited string .
/ * documented <unk>
/ * documented <unk>
/ * documented <unk>
/ * documented <unk>
/ * documented <unk>
<unk> > <unk>
removes all of the elements in the specified array from the specified array .
converts a list of { @link java . util . list } into a { @link list } .
splits a collection of strings into a list of strings .
rehashes the contents of the array into a new array .
returns the index of the first object in the array with the given separator .
find the next separator .
/ * ( non - javadoc )
method to generate a canonical helm connection section
method to generate a canonical helm string
{ @inheritdoc }
generates a string representation of this section .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
generates a string representation of the class .
this method adds a new element to the group
{ @inheritdoc }
method to add the phosphate to the last nucleotide
the main method .
method to add the phosphate to the last nucleotide
checks if the given file name is a valid id .
parse a <unk> event .
checks whether or not the provided <unk> is alive .
/ * ( non - javadoc )
parse a multimedia file .
checks if the given string is a valid minute .
checks if the <unk> is <unk> or <unk>
method to generate a json representation of the helm2notation
method to change the molecule .
/ * ( non - javadoc )
/ * ( non - javadoc )
method to add a list of polymernotation objects to the existent polymer
method to get the valid grouping for this grouping section .
generates a string representation of this section .
method to generate the natural analogue sequence
method to generate a list of connections
/ * ( non - javadoc )
/ * ( non - javadoc )
method to get all rna polymers given a list of polymernotation objects
method to get all rna polymers given a list of polymernotation objects
method to validate all the buffers of the helm2notation
/ * method to get a list of polymernotation objects belonging to a given polymer
method to set the fasta of all existent elements .
/ * ( non - javadoc )
generates a string representation of the grouping section .
/ * ( non - javadoc )
add an annotation to the table .
******************* beginning of function ******************** //
this method will process every monomernotation
method to check all the monomernotation
calculate the mass of an rfc3339 entity
/ * ( non - javadoc )
/ * ( non - javadoc )
~ methods ------------------------------------------------------------------------------------------------------------------
sets the test name .
/ * ( non - javadoc )
/ * ( non - javadoc )
method to parse the contents of a monomernotation
/ * ( non - javadoc )
/ * ( non - javadoc )
generates a string representation of the confusion matrix .
method to initialize the {
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last : <unk>
check that a string is a valid pattern .
starts the cache .
returns the approximate sub - queue size for two nodes .
pushes the given task to the caller .
convert a list of edges to a list of nodes .
create a new { @link <unk> } .
/ * ( non - javadoc )
returns a sorted list of all the nodes in the list .
wraps the given stream to a printwriter .
adds a route to this router .
subscribe the specified method to the given class .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
send message to the stream .
sends a sync message .
read a cookie from the remote node .
see { @link <unk> ( string byte [] ) }
implementation of liststreams rest api .
/ * ( non - javadoc )
implementation of liststreams rest api .
/ * ( non - javadoc )
receive a { @link <unk> } from the specified timeout .
receive an array of bytes from the receive response .
{ @inheritdoc }
receive a blocking call .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the exception is caused by a non - fatal non - fatal exception .
checks the given exception stack to see if it is null .
tries to lock the state machine .
blocks until either interruptible or interrupted .
tries to terminate the run of the run - time worker thread .
create a worker from a worker if it is a spare .
tries to add worker pool and tries to maintain number of worker threads .
register a { @link <unk> } .
tries to terminate tasks and returns termination .
signals a worker to be executed .
tries to release a worker if it has been released .
/ * this method is called by forkjoinworkerthread . <unk> () and should be called from forkjoinworkerthread . <unk> ()
scans the given task queue and returns the index of the first child of the task .
returns true if a work queue is dt .
tries to find a non - empty steal queue for the given task queue .
try and catch contention among them .
returns the number of currently queued tasks for the current thread .
tries to terminate tasks and returns termination .
handles the external submit task .
scans the current working task queue for a new task .
returns the common queue queue for the given thread .
scans the current thread and returns a { @link <unk> } .
returns the number of non - non - non - non - non - collected tasks .
invokes the specified { @link task } on the specified { @link fork } .
submits a task to execution .
returns the total number of tasks stolen from the pool .
loads and returns a fork pool .
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . stream . stream< / code > is preferred for multiple phases operation .
frees the task .
waits for a task to be executed in the pool .
utility method to create an empty array .
builds a new { @link <unk> } with the given { @link <unk> } .
returns a { @link collector } that completes and completes the result of { @link <unk> } .
prints a {
/ * ( non - javadoc )
{ @inheritdoc }
selects all elements of the given type .
creates a list from the given list .
creates a map from the given elements .
closes this queue and returns the result .
/ * ( non - javadoc )
creates a set from an iterator .
returns an unmodifiable view of the specified elements .
creates a new { @code hashset } containing all elements of the given { @code iterator } .
iterates over the collection of elements and creates a new { @link java . util . set } with the given elements .
converts an array of objects to a delimited string .
returns a { @code true } if all of the elements in the collection are { @code null } .
/ * documented <unk>
/ * documented <unk>
{ @link <unk> ( iterable ) }
{ @code null } 元素
a convenience method for { @link <unk> ( parser iterable ) } .
converts a { @link iterable } to a { @link list } .
converts a { @link iterable } to a { @link list } .
converts an iterable of objects into a set .
distinct by applying the specified predicate to each element of the collection .
distinct by applying the <code > <unk> / code > to <code > <unk> / code > .
distinct by applying the specified predicate to each element of the collection .
returns a { @code list } of elements that satisfy the given { @code filter } .
returns a { @code list } containing all elements that are contained in the specified { @code source } collection .
/ * documented <unk>
groups the elements of this stream by applying the provided mapping function to each element of the iterable .
/ * documented <unk>
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . stream . stream< / code > is preferred for multiple phases operation .
returns a { @code list } containing the results of applying the given { @code filter } to each element of the list .
新建一个arraylist<br > 提供的参数为null时返回空 { @link arraylist }
create a new { @link id } from the given { @link collection } .
duplicate a collection .
returns a new array containing all of the elements of the given array .
returns the last element of the iterable as a list . <pre class = groovytestcase > def list = [ 1 2 3 ] def list = [ 1 2 3 ] < / pre >
convert an iterable to a collection .
convert an iterator to a list .
returns a deep copy of the given map as a java . util . map .
returns a map containing the inverse of the given map .
将键列表和值列表转换为map<br > 以键为准，值与键位置需对应。如果键元素数多于值元素，多余部分值用null代替。<br > 如果值多于键，忽略多余的值。
returns a { @code collector } that accumulates elements into a { @code map } .
returns a map whose keys are the elements of the given { @code f } and { @code f } as the elements in the given { @code values } . if the iterator is empty the returned map will be { @code null } .
<unk> ( <unk> <unk> <unk> <unk> <unk> <unk> ) - <unk> ( <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
/ * ( non - javadoc )
pushes a task to the caller .
frees the object .
pops the shift off of the segment at the specified level .
returns an {
returns a map whose keys are the keys of the keys in the given iterable of keys and the values in the given values .
returns a map whose keys are the elements of the given { @code f } and { @code f } as the elements of the given { @code values } . if the iterator is empty the returned map will be { @code null } .
<unk> ( <unk> ) <unk> <unk> ( <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
returns an immutable empty map if the specified size is <code > null< / code > .
将键列表和值列表转换为map<br > 以键为准，值与键位置需对应。如果键元素数多于值元素，多余部分值用null代替。<br > 如果值多于键，忽略多余的值。
returns a { @link <unk> } that contains the elements in the given { @link iterable } s that are equal to the given elements .
returns a map whose keys are the keys of the keys in the keys in the given sequence values . the iterators are not polled until necessary .
append the invariants
/ * ( non - javadoc )
create a new { @link <unk> } with the given elements .
/ * ( non - javadoc )
returns a subset of the raml file .
collects the name of a resource .
/ * ( non - javadoc )
get dom from string .
/ * ( non - javadoc )
/ * ( non - javadoc )
reads characters into a portion of an array .
returns a copy of the input array .
returns the value at the given index .
return a substring of this sequence between the start and end of the input sequence .
fills the buffer with the given string .
/ * documented <unk>
/ * documented <unk>
returns the index of the first occurrence of the specified slot or - 1 if not found .
serializes an expandable element to a json element .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
add a method to the list of converters .
liberty change for cxf begin
replaces all the patterns with the specified pattern with the specified pattern .
schedule a job immediately .
schedule a job immediately .
binds the { @link <unk> } to the given { @link <unk> } .
d367572 . lang . util . <unk>
check if the response has been modified since the last modification request .
check if the condition is satisfied .
sets the file download header to the response .
/ * <unk>
encodes the given parameter map into a query string .
encodes http basic http basic authentication .
checks if the subject contains any of the given roles .
returns the application configuration .
<p > <unk> . < / p >
creates a writer instance .
<p > <unk> . < / p >
get an int value from a string .
get the name of the file or <code > null< / code > if not found .
returns the filename extension of the given path .
apply a relative path to a relative path .
remove leading and trailing slashes from the given path .
<p > converts an array of strings to objects . < / p >
remove duplicate strings .
splits a string into a delimited list of strings .
joins the given collection of {
<p > <unk> . < / p >
<p > color . < / p >
<p > <unk> . < / p >
<unk> > <unk>
converts a number to a hex string .
<unk> > <unk>
<unk> > <unk>
<p > <unk> . < / p >
check if a string array is contained in the array .
/ * ( non - javadoc )
formats the size of the file .
return a substring of the form <code > <unk> / code > or <code > <unk> / code > if <code > <unk> / code > is <code > null< / code > .
/ * ( non - javadoc )
/ * ( non - javadoc )
login to a user
removes the session from the list of session attributes .
helper method to get the login user from the request .
gets the login request attribute .
set up the user json .
hashes the given password using the sha - 256 algorithm .
delete user in a cookie .
utility method to prepare a provider key .
returns the value of the cookie with the specified name or null if the cookie doesn t exist .
encode a string to a base64 encoded string .
constructs a user - defined { @link <unk> } from the given string .
decodes a base64 encoded string .
methode d des <unk> d une des <unk> d un <unk> d un <unk>
returns a { @link response } with the given message .
returns an { @link java . util . response } with the data received in the given { @link object } .
static factory method for creating a { @link response } from a { @link string } .
returns an { @link <unk> } for the given { @code data } .
returns a new { @link <unk> } instance for the given index .
returns a new { @code <unk> } with the given message id .
if the given message is a string an exception is thrown .
creates a new { @link <unk> } with the given message .
creates an { @link <unk> } with the given message .
returns a { @link response } with the given message .
generates a string representation of the specified log file .
encodes the given password using the given password .
/ * ( non - javadoc )
returns a list of all methods declared on this controller .
create a new {
initialize the resource bundles
create the action key for the given controller method .
returns the annotations of the given method .
returns the annotations of the given controller class .
process the shiro shiro shiro annotation .
authenticate the user .
login to the specified user .
/ * ( non - javadoc )
<p > <unk> . < / p >
configure the browser info .
/ * package
get the ip address of the given request .
checks if the given request is robot .
gets the cookie with the given name .
add a cookie to the httpservletresponse .
returns the domain name of the given host .
<unk> > <unk>
returns the url of the http request .
returns a request parameter as integer .
returns the value of the parameter with the given name or the default value if the parameter is empty .
returns a request parameter as long .
returns true if the header is null or empty .
<p > <unk> . < / p >
log a message at debug level .
prints { @link <unk> } to the caller .
sets the error correction level .
set the background color of the ground card
obtains the text of the back button from the activity s theme .
gets a map of the hint values of the hint .
get the history of a cadmium site .
sets the transaction validator .
<unk> - <unk>
<unk> - <unk>
<unk> <unk> .
convert a string to a string .
convert a journal id into a byte array .
convert a string to a byte array .
converts a byte array to a byte array .
pack a byte array into a byte array .
converts a charsequence to a byte array .
tells whether or not the given character is a sub - delimiter character .
returns true if the specified character is a well - formed uri character .
returns the index of the first occurrence of the specified character in the specified string .
returns the index of the first occurrence of the specified character in the specified string .
/ * ( non - javadoc )
<p > <unk> . < / p >
returns a currency data object for the given locale .
returns the { @link locale } for the specified locale .
gets the currency symbol for the given locale .
translate a base name to a string .
returns a string representation of the specified locale .
returns a relativedatetimeformatter for a number with the specified locale and locale . <p >
/ * ------------------------------------------------------------
adds an extension point to the cache .
renders the given template by freemarker template .
submits the current { @link channel } to the { @link channel } .
schedule all of the {
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the media type of the request .
resize the image to the output file .
calculate the optimal width and height of the original image
generate qr image .
encodes the given image into a base64 encoded string .
add a { @link file } to the { @link file }
creates a new { @link variableresolver } .
{ @inheritdoc }
creates a new { @link future } that will be run on the specified { @link java . util . concurrent . scheduledexecutorservice } .
wait for an invocation of a { @link <unk> } .
sets the authentication token .
initializes the resttemplate .
<p > <unk> . < / p >
renders the given message center with the given message .
get a velocity context .
/ * ------------------------------------------------------------
renders the data tables .
renders the data tables .
renders query data .
/ * ( non - javadoc )
/ * ( non - javadoc )
renders a { @link <unk> } object .
renders the response .
/ * ( non - javadoc )
renders an object with the given parameters .
retrieve the current request context .
gets the user data .
returns the value mapped by {
returns the value mapped by {
<p > <unk> . < / p >
send static response to the response
apply sparql 1 .
creates a new instance of { @link <unk> } .
{ @link <unk> ( string ) }
returns a verifier string that can be converted to a verifier string .
url - encodes a part .
url - decode a string .
returns a list of all bindings in the given scope .
returns the current method name .
compact the byte array .
start sinks .
get an instance of { @link <unk> } from the given { @link metrics } .
checks if the given string is a valid request vector .
encodes a string into a string .
wraps the given {
get the stack trace as a string .
<unk> > <unk>
iterates over records by following mode .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
<unk> . <unk>
function for {
returns the charset for the specified {
/ * ( non - javadoc )
/ * ( non - javadoc )
find and remove data for a collection .
closes the given outputstream .
closes the given <code > writer< / code > .
copy all the bytes from the input stream to the output stream .
copies all bytes from an inputstream to an output stream .
copies the input stream to the given output stream .
copy the contents of the given reader to the given output stream .
copy the contents of the given reader to the given writer .
copy the contents of the given inputstream to the given outputstream .
copy the contents of the given reader to the given output stream .
read a byte array from the input stream .
check if two streams are equal . if the input stream is not a { @link bufferedinputstream } this method returns <code > true< / code > if the input stream is <code > null< / code > .
<unk> > <unk> > <unk> > <unk> > <unk> > <unk> >
applies the {
returns a copy of this tuple with the given function .
register a gauge that reports the value of the object at the given index .
register a gauge that reports the value of the object .
sets the list of elements in the pipeline .
returns a set of all resources that match the given predicate .
returns a sequential ordered { @code intstreamex } whose elements are the indices of the first element that satisfies the given predicate .
returns a set of all resources that match the given predicate .
register a new { @link <unk> } .
removes the element at the specified index .
<p > sql . < / p >
unmarshals xml into an object .
this method is used to invoke the <unk> method .
returns the url for the given resource location .
determines if the jar url of the url has the jar - scheme header .
creates a {
compress a file .
<p > unzip . < / p >
/ * ( non - javadoc )
initialize <unk> .
creates an instance of { @link android . app . imageview . <unk> } .
this method initializes the window manager .
returns true if the given string matches any of the given pattern .
returns true if the given type is a built - in type .
returns { @code true } if { @code type } is { @code null } .
returns true if the type is a parameterized type .
returns { @code true } if { @code t } is a { @link genericarraytype } .
get the raw type of the given type .
returns the type name for the given type .
returns true if the given type is a property type .
returns whether the given type is compatible with the given type .
sets the type converter for the given class .
returns the raw class for the given type .
checks if the given value matches the given regular expression .
/ * documented <unk>
returns true if the given value is a mobile value .
checks if the given value is a sip address .
check if the given string is a phone number .
<unk> > <unk>
checks if the given value is a valid identity value .
checks if the given value is a valid zip value .
checks if the given string is a valid currency .
<p > <unk> . < / p >
checks if the given string is a valid url .
checks if the given value is a date .
checks if the given value is null or empty .
<unk> - <unk>
<p > returns a <code > bufferedimage< / code > with the specified forecast . < / p >
loads a uri from a uri .
convert an input file to an bgr spectrum image
convert an input stream to an bgr spectrum image
<unk> - <unk>
/ * ( non - javadoc )
<unk> { @linkplain <unk> <unk> }
根据指定宽高和压缩质量进行压缩，当isforcewh为false时 如果指定宽或者高大于源图片则按照源图片大小宽高压缩 当isforcewh为true时 不论怎样均按照指定宽高压缩
/ * ( non - javadoc )
/ * ( non - javadoc )
deserializes a user defined value type .
initializes the { @link <unk> } instance .
/ * ( non - javadoc )
get the { @link configuration } for the given { @link servletcontext } .
get the current version of the <unk> .
load template file .
decodes a base64 encoded string .
decodes a base64 encoded string .
converts a hex string to a byte array .
loads properties from a properties file .
/ * ( non - javadoc )
writes the content of a file to a file .
<unk> > <unk>
read the contents of an inputstream into a byte array .
writes the content to a file .
writes the given { @link inputstream } to the given { @link outputstream } .
copy the contents of an inputstream to an outputstream .
copies a directory to a target .
called when the storage permission is granted .
cancels the location of the { @link <unk> } permission on the location of the { @link net . dv8tion . jda . core . entities . <unk> } permission .
/ * [ deutsch ] <p > definiert eine nat&uuml ; <unk> ordnung . < / p >
compares this money to another . <p > this instance is immutable and unaffected by this method call .
returns a copy of this money with the specified amounts subtracted . <p > this instance is immutable and unaffected by this method .
returns a { @link money } representing the specified { @link bigdecimal } value .
returns a copy of this monetary value multiplied by the specified number of decimal places . <p > this instance is immutable and unaffected by this method call .
/ * ( non - javadoc )
/ * [ deutsch ] <p > <unk> die <unk> zum angegebenen <unk> . < / p >
returns an instance of { @code money } with the same currency .
creates a new security handler .
loads a list of { @link <unk> } s from the spring { @link <unk> } .
serialize a document to a string .
creates a document from a xml file .
creates a { @link document } from a string .
parses an xml document from an input stream .
verifies if the specified document is valid according to the following rules :
sign saml element .
returns the class loader for the current thread .
load a class by name .
gets the user class of the given object .
checks if a class is cache - safe .
gets the class file name .
returns the package name of the given class .
returns the package name of a fully qualified class name .
returns the qualified name for the given class .
gets the qualified method name of the given method .
returns the constructor if the given class is a non - null constructor .
循环向上转型 <unk> 并强制设置为可访问 .
checks if a method is a user level method .
checks if the given class is a primitive or wrapper .
checks if the given class is a primitive array .
returns { @code true } if the given { @code class } is a primitive wrapper type .
resolves a primitive type if necessary .
checks if the right - hand side type can be assigned to the given class type .
checks if the given value is assignable to the given type .
convert a resource path to a class name .
converts a class name to a resource path .
add resource path to package path .
returns an array of all interfaces implemented by the given instance .
get all interfaces as set as set .
returns all interfaces of the given class as a set of interfaces .
create a composite interface for the given interfaces .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
add a key / value pair to the map .
f743 - <unk>
get the pid from the current process .
acquire the pid from the given file .
returns a map of variables encoded in the given uri .
liberty change end
creates a new { @link <unk> } object for the given version .
returns true if the specified class is a subclass of the specified class .
checks if the given class is an instance of the specified interface .
get a map of field names to the object .
<unk> <unk> <unk>
execute the query asynchronously
creates an instance of the {
get the extension point for the given class .
determine if two objects are equal .
/ * ( non - javadoc )
produce a maker object for the given type .
returns the default value for the given primitive type .
<unk> <p > function : <unk> / p > <p > description : < / p >
convert an object to a json string .
converts an object into an object of the specified type .
gets the parameter values .
add a cookie to the oauth 2 . 0 oauth 2 . 0
/ * ------------------------------------------------------------
computes the md5 digest of the input using the algorithm specified by the iterations .
initializes datasource configuration .
creates a new {
sets the value of the given field to the given value .
sets the value of the given field to the given value .
returns a { @link stream } of { @link model } s .
creates a success response .
parse the given string into a <unk> object .
creates a success response .
replace the <unk> <unk>
<unk> <br > <unk>
<unk> - <unk>
return true if we have a <unk>
<unk> > <unk>
<unk> > <unk>
<unk> > <unk>
returns the sum of the elements in the array .
returns the sum of all the elements in the array .
returns the check date for the given day
returns the age of the <unk>
get the <unk>
return the no - id
shows a { @link <unk> } with the { @link <unk> }
shows the <unk>
constructs a { @link <unk> } for the given date .
get a string value from a map of key - value pairs .
returns the value of the parameter with the given key in the given map .
get template body
<p > sets the body of the body to the body of the body . < / p >
<p > <unk> . < / p >
sets the permission to use for the given <unk> .
proceed to completion .
checks if the given permission is required .
shows the dialog fragment .
this method is called when the user has granted permissions .
/ * ( non - javadoc )
determines if all of the { @link <unk> } s are all of the { @link permission } s .
returns true if any of the given values are denied .
get the object invocation handler .
<unk> ( <unk> ) <unk>
<unk> <unk> .
create a { @link list } of { @link record } s from the given { @link list } .
find the first record in the select list .
{ @inheritdoc }
create a {
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
prepare the application mode .
determine whether a given method with the given exception type and exception type can be propagated .
process a soft - process queue .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
constructs and initializes a new { @link <unk> } with the given { @link throwable cause } and { @link throwable cause } .
get method param names
<p > make prepare beans for full import . < / p >
check if candidate string matches pattern .
initializes the gui .
main method .
documentation inherited from interface
/ * ( non - javadoc )
converts a { @link object } to a { @link object } .
move the controls to the properties file .
move the properties file to the file .
returns an instance of the { @link <unk> } for the given interface .
executes the given method on the given interface .
copy the contents of the stream to the given stream .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
/ * ( non - javadoc )
convert an object to an object .
gets the protobuf entity table .
checks if the given class is a <unk> entity .
<unk> { @link <unk> } <unk>
process annotated fields .
run getter method .
{ @link java . util . <unk> ( java . lang . reflect . <unk> ) }
this method gets the field of the given { @code <unk> } .
get the singleton instance of the { @link <unk> } .
<p > calculate total rows for pagination . < / p >
/ * ( non - javadoc )
setupsfields method .
<unk> > <unk>
returns the { @link mapper } for the given type .
/ * package private
converts a { @link <unk> } to a { @link typeinformation } .
<unk> bean .
decode json .
decode json .
decode json .
decode json .
decode json .
<unk> bean .
<unk> > <unk>
converts a { @link jsonobject } to a { @link object } .
<unk> > <unk>
读取整个excel文件 <unk> 全部返回
<unk> > <unk>
load a model object from a file .
convert pojo to json string
close connection .
close a prepared statement .
close the resultset .
/ * ( non - javadoc )
<p > fill . < / p >
sets the padding between the left and right padding .
checks if the given class has no default constructor .
returns the current access token .
creates a new { @link org . apache . commons . httpclient . client . <unk> } instance .
sends a post request to the specified url .
/ * public static void <unk> ( string url string params ) throws ioexception { string params = <unk> . <unk> () ;
sends a http request to the given url .
sends an http request to the given { @link httpresponse } using the given { @link <unk> } .
sends an http request to the server using the given credentials .
sends a http request to the given { @link <unk> } .
sends a http request to the given { @code proxy } using the specified { @code charset } .
sends a http request to the given { @link java . util . stream } .
sends a http request to the given target server .
sends an http post request to the specified { @link org . apache . host . authentication . <unk> } .
sends a post request to the server using the given credentials .
sends an http request to the server using the given credentials .
creates an http get request for the given method and uri .
executes the http get request and returns the http response .
returns a { @link org . apache . http . client . client . <unk> . http . client . <unk> } for the specified http client .
returns the content of the response as a string .
returns a credentials object for the given credentials .
zwraca <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
returns the full url of the given network host .
/ * <unk>
returns a list of elements from the given collection that are contained in the given collection .
returns a list view of the specified elements .
creates a new set that contains all elements of the given iterable set .
{ @inheritdoc }
authenticate username and password .
returns the group record for the given domain .
gets a connection to the pool .
fix amount .
fix amount .
fix amount .
fix amount .
multiply the value of two v1 .
提供 ( 相对 ) 精确的除法运算 当发生除不尽的情况时 由scale指定精确度
提供 ( 相对 ) 精确的除法运算 当发生除不尽的情况时 由scale指定精确度
保留固定位数小数<br > 例如保留四位小数：123 . 456789 = 》 123 . 4567
提供 ( 相对 ) 精确的除法运算 当发生除不尽的情况时 由scale指定精确度
convert a double to a float .
float constructor .
/ * ( non - javadoc )
convert a string to a date .
parses a date pattern using the specified masks .
copy attributes from a target object to a list of attributes .
copy the attributes of the target object into the target object .
<p > <unk> . < / p >
generate a visitor for a type declaration .
<p > fill . < / p >
add the given file to the given directory .
/ * ( non - javadoc )
returns an array containing all of the items in the collection as an array .
/ * documented <unk>
creates a new list that contains all elements of the given iterable that are contained in the given iterable .
returns a new { @code hashset } whose elements are the given elements .
copy the contents of the given inputstream to the given outputstream .
copy bytes from the input stream to the output stream .
get the object from the class name .
convert a string to a date .
convert a date to a string .
add this filter to the remote message filter .
returns the value of the property with the specified name or null if the property does not exist .
set a new property .
initialize the contents of the frame .
{ @inheritdoc }
/ * ( non - javadoc )
print the help for <code > options< / code > with the specified command line syntax .
parse a command line options .
initializes the file engine .
returns the value of this property .
get the next directory .
use this method to save a token .
activates the access token for a given resource .
initialize this file .
initialize the <unk> .
move the physical binary data to this file .
main visualizer setup .
/ * ( non - javadoc )
add all the properties to this screen .
returns a collection of urls for the given classloader
returns a list of all the classes in the given package .
get a singleton instance of { @link <unk> } .
returns the current thread s context class loader .
gets the class of the given class name .
<p > returns the class of the specified class or <code > null< / code > if no such class exists . < / p >
returns the canonical name of the given class name .
creates a new { @link url } for the given resource .
locates the resource with the given name and classloader .
load properties from a file .
returns the class name of the given class .
initialize the uri with the other uri .
initialize the uri for validating a uri for this uri .
initialize the scheme for this uri .
initialize the scheme for this uri from a uri string spec .
initialize the path for this uri from a uri string spec .
initialize the suffix string .
set the scheme for this uri . the scheme is converted to lowercase before it is set .
initialize the path for this uri from a uri string spec .
set the host for this uri . if this is a well - formed url this method will throw a { @link <unk> } if the host is null .
set the port for this uri . if the port is null then this method will throw a { @link illegalargumentexception } if the port is invalid .
set the fragment for this uri .
append a path string to the end of the path .
set the query string for this uri . if the fragment is null or invalid this method will throw a null .
set the fragment for this uri .
set the scheme for this uri .
returns true if the given string is a well - formed scheme address .
encodes a string into a byte array .
encodes a string to a base64 - encoded string .
<p > <unk> . < / p >
<p > <unk> . < / p >
create a {
initialize the service .
get the resource url .
gen - last : <unk>
returns the singleton instance of {
sets the clipboard contents of the clipboard .
returns true if the specified action has the specified action .
wait for a file to be opened .
this method is used to load services by type .
<unk> > <unk>
returns a map of parameters to a map .
returns the <unk> for the given id .
get the service associated with the specified type .
get the debug url for this entity .
parses the given response and returns the result as a { @link <unk> } .
extract device nodes .
download thumbnail with specified path .
/ * ------------------------------------------------------------
append a new buffer to the trie .
/ * ------------------------------------------------- [ <unk> ] ---------------------------------------------------
returns an array containing all of the elements in this array in proper sequence ( from first to last element ) .
/ * ( non - javadoc )
decode a xml - string value into a url .
rounds a string to a certain number of digits .
decode a string into a url .
rounds a string to a certain format
<p > <unk> . < / p >
gets the encoding of the given text .
get an object from an object .
convert an object to an xml string .
create a bean from an xml string .
creates a bean from an xml string .
parse an dbase file .
serializes an xstream object into the given xstream array .
extracts the driver class name from the given url .
{ @inheritdoc }
converts a { @code string } to a { @code map } .
accessor method used to retrieve a date instance representing the contents of an individual field . if the field does not exist in the record null is returned .
delivers a connection to the pool .
{ @inheritdoc }
<p > insert entity . < / p >
checks if the given class name is available for the given class name .
tells whether or not the given class is assignable to the given class .
creates new instance of { @link <unk> } .
/ * ( non - javadoc )
creates a new { @link preparedstatement } .
returns the entry at the specified position in this list .
<p > retrieve entity . < / p >
<p > singleton . < / p >
<p > retrieve user . < / p >
build the { @link <unk> } interface for the given { @link <unk> } .
visit a type declaration .
visit a class declaration .
visit a list of formal type parameters .
this method is called from the constructor to initialize the controls .
add all the screen listeners .
set this object to the selected properties .
get this property value . <p >
documentation inherited from interface
build connection properties .
returns the value associated with the given key in the properties map .
<p > synchronize entity . < / p >
checks if a class has a public modifier .
returns a {
filters and returns the subset of {
converts a {
gets the list of unvisited positions .
returns a list of {
compute the cas id .
sets the value of the specified field to the given value .
<p > <unk> . < / p >
get the generic type arguments for the given class .
<p > <unk> . < / p >
<unk> 找出脚本类 > null< / code > <unk> > <unk> / code > <unk> > <unk> / code > <unk> > <unk> / code > <unk> > <unk> / code > <unk> > <unk> > <unk> / code > <unk> > <unk> > <unk> / code > <unk> > <unk> > <unk> / code > <unk> > <unk> > <unk> / code > <unk>
decodes a byte array into a single byte array .
<p > <unk> . < / p >
<unk> 找出脚本类 > null< / code > <unk> > <unk> > null< / code > <unk> > <unk> / code > <unk> > <unk> / code > <unk> > <unk> / code > <unk> > <unk> / code > <unk> > <unk> / code > <unk> > <unk> > <unk> / code > <unk> > <unk> > <unk> / code > <unk> > <unk>
canonicalize an instance of the given map .
main visualizer setup .
move the current status to the properties file .
setupsfields method .
/ * ( non - javadoc )
init method .
add this record to the xml file .
/ * ( non - javadoc )
sets the date and time for this date .
/ * ( non - javadoc )
returns true if the file should be skipped .
main visualizer setup .
convert this record to properties .
set the value of this property .
returns a {
<unk> > <unk>
<unk> > <unk>
build connection .
creates a deep copy of the specified map .
init method .
init method .
<unk> method .
add this file to the archive .
get the backup filename .
/ * ( non - javadoc )
/ * ( non - javadoc )
iterates over the given path matcher and returns true if the path matches the given argument .
gets audit .
the main method .
run method .
copy files from source to destination file .
prepare a <unk>
<p > <unk> . < / p >
converts a byte array to a hexadecimal string .
<p > process entity request . < / p >
<p > read . < / p >
returns the list of indexes with the given name .
this method is similar to { @link <unk> ( string string ) } but returns null .
returns the model object for the given class .
get the user - defined model for this component .
returns the set of tags for the given area .
<p > load filter . < / p >
/ * ( non - javadoc )
authenticate the user .
<p > process entity request . < / p >
loads the jnlp file .
create an html file .
<unk> method .
/ * ( non - javadoc )
check whether the given schema supports the given schema .
/ * ( non - javadoc )
determines the sql type of a given type .
<p > <unk> . < / p >
<p > <unk> . < / p >
chooses a single executable with the given name .
returns true if the two byte arrays are compatible with the given byte array .
write a portion of an array of characters .
--- string utilities ---
merge two child nodes .
apply a relative path to a relative path .
converts separators to a unix path separator .
converts the given separators to a windows system path .
converts separators to a system separator string .
returns the {
finds a constructor matching the given parameter types .
finds a constructor with the given parameter types .
get a method from a class or method .
<p > <unk> . < / p >
try to generate a proper {
/ * ( non - javadoc )
returns the value of the {
serialize the protobuf entity .
materializes a protobuf message .
converts a collection of objects to a collection .
/ * ( non - javadoc )
<p > <unk> . < / p >
this method is used to load the message files .
/ * ( non - javadoc )
<p > retrieve start data . < / p >
creates a new instance of { @link resultset } .
search for labels .
extract values from a map of objects .
<p > retrieve user . < / p >
get the raw type of the given type .
resolves a type variable for a given type variable .
<p > <unk> . < / p >
get the generic type argument for the given class .
<p > fill . < / p >
returns the last modified timestamp of the bundle .
<unk> method .
/ * ( non - javadoc )
close the transfer .
<unk> method .
change the directory .
closes the connection .
polls the <unk> of the given { @link <unk> } .
creates a new instance of the given class .
create a new instance of the given class .
循环向上转型 <unk> 并强制设置为可访问 .
returns all declared methods of a class that are declared on the given class .
find the method with the given name and parameter types .
get all constructors in the given class .
get the accessible method of the given class .
returns all methods annotated with {
get the annotated constructors in the given class .
rolls back the transaction associated with this transaction .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a { @link preparedstatement } for the given { @link preparedstatement } .
execute the query asynchronously
main visualizer setup .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the sql statement is empty or not .
add a filename to the filename .
init method .
<unk> method .
<unk> method .
get the next ratio file .
/ * ( non - javadoc )
<p > process entity request . < / p >
sends a request to the server .
<p > <unk> . < / p >
dumps a byte to stdout .
returns the java class name for the given type .
/ * ( non - javadoc )
<p > setter for <unk> . < / p >
reads the contents of a data input a data input stream .
resolve a constant pool entry .
<p > trims a string to null . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
determines if two strings are equal ignoring case - sensitivity .
returns { @code true } if { @code str } is { @code null } .
<p > checks if a string ends with the specified suffix . < / p >
returns the index of the first occurrence of the specified character in the specified string .
returns the index of the last occurrence of the specified string .
returns the index of the first occurrence of the specified character at the given index .
returns the index of the first occurrence of the specified character starting at the given index .
returns the index of the last occurrence of the specified string .
returns the index of the last occurrence of the specified substring .
returns the index of the last occurrence of the specified character in the specified string ignoring case .
returns the index of the last occurrence of the given string .
returns the index of the first occurrence of the specified element in the string .
<p > <unk> . < / p >
<p > gets a substring of the specified string . < / p >
<p > gets the substring before the given separator . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
gets the substring between <code > string< / code > and <code > tag . <unk> / code > .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > repeat a <code > string< / code > to a string . < / p >
<p > repeat a <code > string< / code > into a <code > string< / code > . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
removes the end of a string from the beginning of the string .
<p > normalize . < / p >
<p > removes a substring from the string . < / p >
produce a comma - separated list of characters from the specified string .
convert a string to an array of strings .
method to initialize this method .
login to the logged in user .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
recycle the state machine .
/ * ------------------------------------------------------------
this method is used to initialize the message queue .
<unk> > <unk>
initialize the authenticator .
<p > synchronize entity . < / p >
extract the value of the secure property from the superclass type .
check if the { @link <unk> } { @link <unk> } is a { @link <unk> } .
main visualizer setup .
/ * ( non - javadoc )
get the value of this field .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
calculate the filenames for the given locale .
<p > <unk> . < / p >
<p > <unk> . < / p >
returns the cached dateformatsymbols for the given locale .
returns a relativedatetimeformatter for a number format using the specified locale . <p > the format is specified by using the specified locale . <p > the number format is used to determine the format used for the specified locale . <p > the default format is used for the specified locale .
<p > <unk> . < / p >
creates a new instance of a { @link statement } .
get the values from the list
return the <unk> element
removes the element from the stack and replaces it with the previous element .
returns an input stream for the input file .
returns a { @link <unk> } instance for the given { @link charset } .
read properties from a file .
write properties to file .
convert the arguments to a properties object .
process the command .
add an action to the url .
gets the value of the named property .
init method .
prompts the popup of the combo box .
prompts the user of a combo box .
creates a panel with the given components .
/ * ------------------------------------------------------------
encodes http basic http basic authentication .
checks if the given request is an ajax request .
checks if the given request is a robot .
sets a parameter to the given value .
/ * ( non - javadoc )
/ * ( non - javadoc )
build connection properties .
return true if the path matches a pattern .
returns the index of the matched pattern .
checks if the given tokens match the given <unk> .
applies the given curve to the given <unk> .
checks if this grid intersects the bounds of the other grid .
checks if the specified point is inside the bounds of the image .
returns the number of rectangular lines in the specified line .
gets the union of two points .
counts the number of rectangular areas in the specified region .
counts the number of areas in the grid .
returns the intersection of the rectangular region of this triangle .
returns the rectangular area of this rectangular grid in the grid .
get the name of the file or <code > null< / code > if not found .
returns the filename extension of the given path .
move the controls to the properties file .
setupsfields method .
/ * ( non - javadoc )
puts a row into the internal buffer .
returns the bounds of the cell .
returns the bounds of the minecraft area .
replies the squared distance between the specified area .
returns the sum of all cells in this matrix .
returns the index of the first occurrence of the specified cell .
calculates the triangles for all primitives
calculates the triangles for all primitives
replaces all the parameters in the source string with the given source string .
creates an instance of message .
get the singleton instance of the { @link <unk> } .
<p > synchronize entity . < / p >
add controls to the view panel .
<p > unwraps a <code > <unk> / code > instance if it is wrapped in a { @link <unk> } . < / p >
append a new byte .
/ * ------------------------------------------------- [ <unk> ] ---------------------------------------------------
returns a sha - 256 hash of the current state of the buffer .
convert a byte array to a hex string .
parses the request .
parses the given request and returns a { @link <unk> } object .
add a { @link <unk> } to this { @link <unk> } .
add a { @link <unk> } to the list of fields .
add a bean to the list of bean properties .
registers a new bean with the given name .
sets the bean properties .
<unk> <unk> .
get the bean for the given type .
/ * ( non - javadoc )
/ * ( non - javadoc )
main method .
this method is used to export instructions from a set of instructions .
copy the contents of the buffer to the buffer .
generates the instructions {
add a topic to this symbol table .
evaluates the symbol table for the given symbol table .
/ * ( non - javadoc )
try to get the value of a number .
<p > init . < / p >
{ @inheritdoc }
returns a copy of <code > <unk> / code > that matches the specified <code > <unk> / code > .
/ * ( non - javadoc )
removes all children of this node .
/ * ( non - javadoc )
returns the next element in the iteration .
adds instructions to the body of the instructions .
adds instructions to the instructions .
rounds a numeric value to a numeric value .
gen - last : <unk>
registers the given {
process a runner .
add a componenthandler with the specified componenttype and constraints .
remove a component from the map .
returns the preferred size of the screen .
documentation inherited from interface
/ * ( non - javadoc )
opens a url with the specified url .
creates a new type .
visit a type .
builds a new password post request .
returns { @code true } if { @code <unk> } is { @code true } .
apply the specified <code > <unk> / code > to the given <code > <unk> / code > .
gets the fillers of the given instructions .
compares two collections .
/ * ( non - javadoc )
analyzes the <unk> .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
------------------------ exception exception handling
/ * ------------------------------------------------------------
render the page .
renders a button header .
create a functor without creating a new one .
deploys a task to the assigned state .
reset the state of the shard .
initialize the example .
returns the value associated with the given key .
returns the index of the specified key in the set .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
replaces the element at the specified position in this list with the specified value .
removes the mapping for the specified key from this map if present .
removes the element at the specified position in this list .
returns the type of the specified property .
sets the property .
calls <code > <unk> / code > for class <code > <unk> / code > and <code > <unk> / code > .
returns true if the given value is a primitive type .
gets the getter ( s ) of the given class .
gen - last : <unk>
converts a { @link net . dv8tion . jda . core . entities . argument } to a { @link <unk> } .
returns the decision of the given state .
initialize the decision tree
returns a list of {
writes the given document to the given document .
creates a new variable for the given terminals .
end a scope
/ * ( non - javadoc )
compiles the clause .
compiles the query .
find the number of arguments in the clause .
/ * compile the head of the tree .
/ * <unk>
generated code .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
evaluates the compiled predicate .
generates a compiled query string .
puts the given number of bytes into the buffer .
convert a string to a string .
set the relative id of the attribute .
returns the value type of the attribute .
/ * ( non - javadoc )
/ * [ deutsch ] <p > interpretiert den angegebenen term als term . < / p >
/ * ( non - javadoc )
get the items of the given type .
checks if the given class exists .
checks if the given object is an instance of the specified class .
checks if the given class is a subtype of the given class .
checks if the given object is a subclass of the given class .
returns the class of the specified property .
<p > newinstance . < / p >
<p > newinstance . < / p >
invokes the given method with the given parameters .
get a method from the given object .
invoke a static method on the target object .
calls the given constructor with the given arguments .
<p > find all { @link class } s of the specified { @link class } . < / p >
adjusts the maximum number of columns in the table .
gets media .
<p > <unk> . < / p >
<p > <unk> . < / p >
/ * public void <unk> ( queue queue ) { return new <unk> () ; }
returns a dynamically typesafe view of the specified queue that takes elements of the specified queue .
returns a dynamically typesafe view of the specified queue .
/ * <unk>
/ * ( non - javadoc )
returns an instance of { @link attribute } .
resets the state machine to the beginning of the queue .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
returns true if the specified resolution is more specific to the given state .
creates a new collection type .
<unk> > <unk> > <unk> > <unk> > <unk> > <unk> / code > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> > <unk> >
/ * ( non - javadoc )
returns the numeric type of the plan .
this method is used to determine whether a given {
returns the remainder states for the given conjunction .
{ @inheritdoc }
returns the {
{ @inheritdoc }
returns the { @link <unk> } for the given { @link <unk> } .
{ @inheritdoc }
{ @link <unk> ( string string ) }
/ * ( non - javadoc )
returns the dimensions of the dimensions of the specified column .
sets the timezone .
/ * label : <unk>
adds a new dimension to the given table .
builds a list of errors .
{ @inheritdoc }
returns a set of {
finds a free variable with the given query .
<unk> - <unk>
high - level implementation .
converts a term into an clause .
/ * ( non - javadoc )
reads the contents of a file into a string .
reads the contents of a file into a string .
write object to a file .
reads the contents of a reader into a string .
adds an element to the list
/ * ( non - javadoc )
inserts the specified element at the specified position in this list .
/ * ( non - javadoc )
adds all of the elements in the specified collection to this set .
searches for empty leafs .
removes all instructions that satisfy the given predicate .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
compile the arguments for the given <unk> and body .
allocate the argument tile .
repeat the given term
{ @link <unk> } is a { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link
computes whether the given body is a body .
the main <unk>
gets the extinction coefficient for the given property .
/ * ( non - javadoc )
this is the best way to determine the best property for each example .
create a functor with a name .
create a provider with the given name .
returns the variable with the given name .
execute the action .
adds the element at the given index to the original list .
override this method to paint the foreground .
paint the thumb s border .
returns the minimum borders of this image .
sets the texture at the specified paint .
documentation inherited from interface
draws the specified image with the specified hotspot .
returns a buffered image of the specified type .
<editor - fold defaultstate = collapsed desc = visualization >
<p > creates a buffered image using the specified grayu8 . < / p >
get the buffered image as a bufferedimage
overrides the visitor to initialize the opcode table
/ * ( non - javadoc )
returns true if the supplied string is a valid organisasjonsnummer .
process a collection of objects .
process a single request .
creates a new { @link responseentity } .
creates a new { @link entity } with the given { @link <unk> } .
creates a new { @link entity } .
splits a key into an array of strings .
returns a list of { @link <unk> } s for the given { @link <unk> } .
pops the last command found in the redo stack .
returns true if the table contains the specified property .
enters a { @link clause } object from the given { @link clause } .
helper method to enter a predicate .
run the algorithm
performs a search for the first occurrence of the specified { @link <unk> } .
opens the grid .
changes the password of a link .
configure the message route workflow .
configure the message route workflow .
exception handler .
returns a { @link <unk> } for the given { @link <unk> } .
resets the state of the scanner to the jcas object .
the main method .
/ * ( non - javadoc )
a clause .
<unk> - <unk>
expression3 terms .
create a new term from a token .
create a functor for a call to {
returns a list of {
returns a list of {
returns the name of the name .
$non - nls - 1$
returns the {
returns the {
reads the next token from the token stream .
starts a {
split an operator using binary - encoding .
creates the <unk> for the built <unk> .
consumes a token and returns the next token .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds all elements from the given iterator to the given collection .
implements the given compiled code point .
adds a new call point to the page .
obtains a { @code internationalfixeddate } representing a date in ticks .
obtains a { @code internationalfixeddate } representing a date in ticks .
/ * [ deutsch ] <p > erzeugt ein <unk> - <unk> . < / p >
/ * [ deutsch ] <p > liefert die <unk> <unk> zur angegebenen <unk> . < / p >
obtains the { @link java . util . date } as a { @link java . util . date } .
returns a human - readable representation of the specified number of milliseconds . <p > this instance is immutable and unaffected by this method call .
returns a new string with the specified number of ticks . <p > this instance is immutable and unaffected by this method call .
returns a new instance with the specified number of seconds . <p > this instance is immutable and unaffected by this method call .
returns the number of days changed to the given value .
obtains a { @code long } representing a date in the pax calendar system from the proleptic - year month - of - year and day - of - month fields . <p > this returns a { @code long } with the specified ticks . the day must be valid for the year and month otherwise an exception will be thrown .
returns the number of months in the given <code > java . util . date< / code > object .
<unk> : https : // github . com / <unk> / simpledateformat / <unk> - 01 / 01 / 01 / 01 / 01 / 01 / 01 / 01 / 01 / 01 / 01 / 01 / 01 / 01 / 01 / 01 / 01 / 01 / 01 / 01 / 01 / 01 / 01 / 01 / 01
allocates a { @link java . nio . bytebuffer } .
writes the given { @link java . nio . bytebuffer } as a { @link java . nio . bytebuffer } .
returns the month of the given year .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the {
/ * ( non - javadoc )
reset the hash table .
/ * ------------------------------------------------------------
returns the entry for the given key or null if present .
/ * ------------------------------------------------------------
resizes the hash table to the new size .
<p > <unk> . < / p >
<p > <unk> . < / p >
<unk> ( <unk> )
documentation inherited from interface
/ * ( non - javadoc )
set the antialiasing setting for this property .
set the list of available property changes .
/ * ( non - javadoc )
get an instance of the native platform
returns a set of {
returns the entropy of the given probabilities .
returns the power of two arrays .
returns an array of probabilities from the buckets .
sorts the given array of doubles .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the elapsed time filter .
/ * ( non - javadoc )
forward to the given form .
returns the total number of seconds elapsed from the current thread s current thread s current thread .
parses the given encoded url and returns a { @code url } object .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
get the cookie map for the current request .
/ * ------------------------------------------------------------
get the current request scope .
/ * ( non - javadoc )
get session attributes map .
get the context for the application .
<unk> <unk> <unk>
/ * ( non - javadoc )
builds a string representation of a map .
returns a string representation of the given object .
performs a bulk search .
set the current screen state .
returns true if the given term is a lucene term .
/ * ( non - javadoc )
updates the <tt > <unk> / tt > of the <tt > <unk> / tt > .
/ * ( non - javadoc )
notifies all registered listeners of a progress event .
insert a character at the specified position .
returns a string representation of this column .
create a {
creates a new table with the specified coordinates .
adds a clause to the solver .
enter a functor to the element body .
adds all widgets to the given clause .
returns true if at least one top level in the stack is top - level below .
returns the name of the top level in the given context .
appends all of the elements in the specified collection to the end of the list .
/ * ( non - javadoc )
returns an array containing all of the elements in this list in proper sequence ( from first to last element ) .
/ * ( non - javadoc )
returns true if the parent is last .
sends a rest request to the given url .
/ * ( non - javadoc )
applies the functor to this provider .
throws an { @link illegalargumentexception } if the argument is null .
/ * ( non - javadoc )
returns true if the current binary - encoding is unix - binary .
/ * ( non - javadoc )
/ * ( non - javadoc )
update the buttons for the button .
update the state of the cancel button .
creates a { @link <unk> } with the given { @link <unk> } .
this method produces a new { @link <unk> } with the given { @link state } .
creates a new builder for the given class .
change the color of the map .
<p > newinstance . < / p >
gets the { @link <unk> } for the given { @link variable } .
returns true if the binding is bound .
returns the attribute at the specified position .
sets the column attributes .
sets the row attributes for the given attribute set .
get the column attribute or null .
returns the last row in the stack .
/ * ( non - javadoc )
returns the numeric type of the arguments .
this method is called from { @link <unk> ( <unk> ) } and { @link <unk> ( <unk> ) }
create viewport panel .
creates and returns a panel that can be used to move the viewport up to the screen .
creates a new proxy channel type .
creates a random time bounded by this time interval .
visit a type .
creates a new type with the given name and pattern .
checks if the given string is an instance of the given string .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
get the term as a { @link term } .
returns the position of the next node in this context .
get the parent context .
creates a {
creates the body of the body .
creates a { @link <unk> } for the given argument .
creates a {
creates the initial context .
this method will create a new <unk>
returns a list of {
returns the value of the given parent scope .
/ * --- public methods ---
join both the two paths .
get a variable from the local variable stack .
returns the value of the block evictable .
allocates a new block .
/ * ------------------------------------------------------------
do the scaling .
/ * ( non - javadoc )
/ * ( non - javadoc )
read a number of bytes from the input stream .
<unk> the body of the body of the <unk> .
compiles the body of the body of the expression .
gathers all expressions of the given conflicting condition .
/ * --- private methods ---
/ * ( non - javadoc )
called to initialize the biopax object .
returns an iterator for the keys in this map .
removes the next value from the map .
reads an int from a byte array .
write integer to byte array .
extract the big endian byte from the given byte array .
reads an int from a byte array .
convert a byte array to a long .
big - endian or motorola format .
generates a list of dependencies for the given instruction .
/ * ( non - javadoc )
gets the state of the given operator .
returns a list of all children of the tree .
returns the id of the attribute at the given index .
returns the value of the attribute .
adds an attribute to the log .
splits a string into an array of strings .
prints an array of ints .
replies the lowercase parts of the given string .
converts a regular expression into a string .
/ * ( non - javadoc )
/ * ( non - javadoc )
writes the current configuration to the current configuration
determine the handlers .
sets the value type to be displayed .
build the content of the exception .
/ * ( non - javadoc )
returns the provider 前序递归列出所有文件 .
helper method to add the given variable to the document .
sets the intersection of the given predicate to the given predicate .
clean up the clause .
execute the visitor visit a <unk>
if the literal is a template literal it is created .
resolve a call point .
replaces the reference to the given label .
adds a new label to the table .
creates a new { @link <unk> } instance .
set the internal member address .
returns true if the path is a sub - path .
returns the neighborhood id for the given category .
/ * ( non - javadoc )
get the value of the selectors at the given level .
returns the last element in the list .
/ * ************************************************************************* java object serialization ***********************************************************************
/ * ------------------------------------------------------------
figure out h .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced by the specified value .
returns { @code true } if the specified point { @code x } and { @link <unk> } are { @code true } .
{ @inheritdoc }
removes the specified element from this map if it is present .
initialize the mod .
gen - last : <unk>
handle generic error message .
/ * ------------------------------------------------------------
this method is used by the <unk> handshake
this method is used to read the handshake data from the socket
this method is used to encrypt or decrypt data
/ * ( non - javadoc )
close the outbound ssl engine .
applies { @code <unk> } to this { @code <unk> } .
/ * <unk>
returns an array of {
documentation inherited from interface
belstatement . <unk> ()
adds an attribute to the grid . <p >
send a beat grid update announcement to all registered listeners .
creates a new fastadapter
turns a changeset into a composite write attribute .
change the password of the server .
generates a {
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
if not already created a new <code > <unk> / code > element will be created and returned . otherwise a new <code > <unk> / code > element will be returned .
/ * <unk>
returns <tt > <unk> / tt > over <tt > <unk> / tt > <tt > <unk> / tt > and <tt > <unk> / tt > .
{ @inheritdoc }
implements the visitor to look for a {
/ * ( non - javadoc )
/ * ( non - javadoc )
implements the visitor to create a functor for the shared symbol table .
/ * ( non - javadoc )
/ * ( non - javadoc )
decodes the number of bytes from the given value .
computes the base64 log of the log .
getter for bitrate
returns the number of digits in the log .
returns the size of an integer .
returns the number of non - numeric characters .
converts a long value to an integer .
returns the number of digits in the given long value .
returns the number of digits in the given long value .
get the number of digits in the <unk>
helper method to create a gradation .
change the color of the grid .
calc the gradients based on the current query .
sets the instructions that will be added to the head of the list .
sets the stack sizes of the given instructions .
/ * ( non - javadoc )
sets the dimension of the <unk> .
saves the work flow .
read work flow .
sets the current screen menu .
returns true if any of the predicate evaluates to true .
get the stack trace for the given key .
/ * ( non - javadoc )
unregisters a component property .
get the value of the named property .
looks up the properties specified by the key specified by the key .
generate permutations query string .
generate key iterator .
/ * <unk>
returns a newly - created term instance .
starts the timer .
this method will wait for the current thread to sleep for the current thread . if the current thread is interrupted the current thread is interrupted .
returns the current time in milliseconds since the last time this method is called .
/ * ( non - javadoc )
method to construct the numeric expression for boolean .
/ * ( non - javadoc )
get the { @link properties } object for the specified { @link environment } .
reads properties from the classpath .
convert the properties to a properties object .
iterates over the parameters of a functor .
returns the inferred value for this assignment .
add a sub - term to the list .
{ @inheritdoc }
execute a { @link <unk> } .
{ @inheritdoc }
returns a sub - sequence of the portion of this sequence .
compares this { @code <unk> } array to the specified { @code comparator } .
converts a byte array into an array of strings .
/ * ( non - javadoc )
if not already created a new <code > <unk> / code > element will be created and returned . otherwise a new <code > <unk> / code > element will be returned .
clean up the socket .
/ * ( non - javadoc )
connect to socket .
this method is used to fire a connector .
variant of {
called by {
applies a functor to a functor operation .
called by {
main visualizer setup .
prints the column widths .
request a list of items .
change the link to the server .
calls { @link <unk> ( java . lang . string ) } { @link <unk> ( string ) } { @link <unk> ( string ) } and { @link <unk> ( string ) } .
fails if the {
request post method
/ * ( non - javadoc )
requests that the value of the control value sets value .
build control group
receives a sequence of inputs and returns a { @link <unk> } .
returns the result of {
method called to turn a functor to the trace window .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the checked value of the specified control .
get the full body of the token .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the job isolation level for the given transaction .
adds an operation to the cache .
acquires a global block from the free space .
clears the global write lock .
create a new session .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
inserts the specified element at the tail of this queue .
/ * ( non - javadoc )
returns the next element in this queue . if the queue is full returns { @code null } .
inserts the given element into this queue waiting if necessary .
inserts the specified element at the tail of this queue waiting up to the specified element . if the queue does not contain the element it is put into the queue .
inserts the specified element at the tail of the queue waiting if necessary until the queue is full .
/ * ( non - javadoc )
removes all of the elements in the given collection and adds them to the given collection .
/ * ( non - javadoc )
/ * ( non - javadoc )
inserts the specified element at the end of the buffer .
/ * ( non - javadoc )
parse a system property as a boolean .
returns the value of an attribute as a short if the value is <code > null< / code > .
check the size of the input configuration if the value is null .
合并系统变量 ( <unk> ) ，环境变量 和默认值，以系统变量优先
check to see if the input value is <code > null< / code > .
validate double .
returns the value of the system property .
returns the boolean value of the given property as a boolean .
sets the value of the given property to the provided value .
sets the value of an integer property .
gets the value of the specified attribute in the namespace specified by <code > value< / code >
get a float property .
returns the value of the <code > name< / code > property as a <code > double< / code > if it is not <code > null< / code > .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get a float property value .
set the value of the property as a long .
get a float property .
sets the value of the specified property as a double .
returns the value of the property with the given name .
returns the value of the property belonging to the given property as integer .
returns the value of the property belonging to the given property as double .
load arguments .
add javadoc - visitors .
this method clones the given node .
this method is used to create a connection to the url .
acknowledges a { @link org . apache . gobblin . search . <unk> } .
******************************************************************** private methods
<p > the quantifier of the entry point . < / p >
decode a <unk> query .
/ * ( non - javadoc )
copy the contents of the given { @link bytebuffer } into a { @link bytebuffer } .
execute the select function .
get the heap for a heap .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of the specified key in the specified object . if the attribute does not exist or is empty this method will return null .
add a value to the map .
/ * ( non - javadoc )
creates a new instance of { @link <unk> } .
the main entry point .
<p > <unk> . < / p >
sets up to the specified number of bytes .
returns the value associated with the specified key .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
inserts all of the elements in the specified collection into the end of this list level .
retrieves and returns the index of the first occurrence of the specified element in this list .
returns a { @link org . apache . gobblin . runtime . iterator . <unk> } instance for the given { @link filter } .
creates a new { @link <unk> } with the fields of this { @link <unk> } .
main visualizer setup .
{ @inheritdoc }
producing a { @link <unk> } from a { @link <unk> } .
todo : explain
<unk> <unk> <unk>
todo : explain
this method is used to add a query to a list of <unk> operations .
set the query .
todo : explain
resets the state to the initial state .
search for a goal .
returns an iterator over all the variables in the given set of variables .
loads properties from an input stream .
load properties from a file .
loads properties from a url .
get a { @link properties } object for the given path .
get a properties object from a properties object .
return true if the given string is a valid character .
<editor - fold defaultstate = collapsed desc = visualization >
performs the actual generation of rendering .
set the preferred width of the font .
add a propertychangelistener to the listener list .
add a propertychangelistener to the listener list .
remove a propertychangelistener for a specific property .
{ @inheritdoc }
creates a new { @link type } with the given { @link schema } and { @link <unk> } .
returns the list of tags for the given body .
documentation inherited from interface
fade the <unk> .
creates a {
/ * ( non - javadoc )
initialize the contents of the frame .
creates and shows a <code > <unk> / code > in the gui .
creates a jframe with a { @link <unk> } and { @link <unk> } .
creates a jframe with the given title and component .
creates a jframe with the given title and component .
installs the given action action .
build the layout .
build the left bar options .
build the right bar options .
/ * ( non - javadoc )
this method is equivalent to { @link <unk> ( string list ) } .
/ * ( non - javadoc )
sanitize the input form .
sanitizes the list of {
wait for the current thread to wait for the current thread to wait for the current thread to wait for the current thread to wait for the current thread to wait for the current thread to wait for the current thread to wait for the current thread to wait for the current thread to wait for the current thread to complete .
waits for the termination of the current thread to wait for the current thread to terminate .
execute the mojo .
<p > <unk> . < / p >
creates a new collection type .
visit a type .
free all bindings
/ * ( non - javadoc )
{ @inheritdoc }
prints the version of the command .
initializes the console .
adds the scripts to the jcas object .
/ * ( non - javadoc )
get the raw type of the given type .
get a data type from a byte array .
get the allocation data for a given character .
get a multi - encoded data type from a string .
get a data type from an integer
get a data type from a long
get a parameter data from a float .
get the allocation data for the given double type
get a string representation of a percent - encoded string .
get the allocation data for the given object .
convert a generic type to an object .
parse the given { @link <unk> } into a { @link class } .
store an object in the page context .
returns true if the given {
generate a functor to separate threads .
/ * ( non - javadoc )
returns <tt > true< / tt > if this map contains a mapping for the specified key .
returns the value associated with the given key .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
removes the entry at the specified position in the array .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
inserts a string into the array .
returns the character at the specified position .
create a {
creates a {
fire the selection event .
internal method that inserts a character into the internal buffer .
/ * ( non - javadoc )
generate a new repository step .
/ * ( non - javadoc )
/ * ( non - javadoc )
determine if there are no more compound operators .
/ * ( non - javadoc )
get the operator with a given measure by looking up by looking up by looking up by looking at the probability that it has a probability that has a probability of <unk>
/ * ( non - javadoc )
expands a list of { @link <unk> } into a list of { @link <unk> } s .
creates a new { @link <unk> } with the given { @link <unk> } .
/ * ( non - javadoc )
writes <code > len< / code > bytes from the specified byte array starting at offset <code > off< / code > to this stream .
/ * private static string <unk> ( string methodname ) { return <unk> ; }
/ * ( non - javadoc )
returns the value of the manifest property .
returns the {
parse command line arguments .
sets the output properties .
adds properties to properties .
add a command line option .
take a list of properties from a properties object .
parse file format .
returns a map that maps the elements of the given { @code iterator } to each element of the given { @code iterator } .
/ * ( non - javadoc )
<p > sets the current page options . < / p >
returns the options for this lexicon .
sets the value of { @link <unk> } .
gets the actual query instance .
{ @link <unk> ( string ) }
the main method .
returns the result of evaluating a numeric line expression .
creates a new collection type .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the current memory layout .
execute the <unk> .
/ * ( non - javadoc )
returns true if {
decodes a tag value .
creates a { @link boofcv . alg . distort . imagedistort } for the given parameters .
returns true if the call to {
resolves the macros .
prepare the call to make the call .
returns true if at least one stack frame was detected .
reads a line from the current position .
binds the 32 - bit values to the given value .
/ * ( non - javadoc )
/ * <unk>
/ * ----------------------------------------------------------------------------
compute the similarity of two nodes .
<p > acquire a constant - time constant . < / p >
pdf of gpd distribution
get a random start state .
check if k is of the form .
creates a deep - copy of { @link iatomcontainer } .
produces valid move operators .
/ * ( non - javadoc )
scrolls a tile in the location of the tile .
<p > update . < / p >
swaps the specified number of times ( x1 y1 ) and ( x2 y2 ) to the other .
generates a sequence of characters from a string .
create a { @link <unk> } instance .
publish a log record to the log4j logger .
log a message to the logger .
converts a java logging level to a log4j logger .
/ * ( non - javadoc )
retrieves and removes the head of this queue waiting if necessary .
/ * ( non - javadoc )
queue an element from the queue .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
inserts the specified element at the tail of this queue waiting if necessary up to the specified wait time .
sets the contents of the queue .
returns the number of remaining capacity elements in the queue .
/ * <unk>
populate the {
increment the size of the given record
decrease the size of the cache .
gets the value of the cache threshold .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
composes a name with a composite name .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
------------------------------------------------------------------------- stack : end
/ * ( non - javadoc )
similar to {
************* smarts ****************
/ * ( non - javadoc )
term :: = convex ;
/ * package
************* tables ****************
************* selector ****************
************* tables ****************
p2 :: = <unk> ;
/ * ( non - javadoc )
function :: = * ( ident | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> ) ;
************* tables ****************
<unk> :: = ident | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
<unk> :: = ( <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> |
belscript . filter ()
key - def :: = <div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i
url :: = %5b . <unk> . %3a * wsp / rules / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> . html
************* smarts ****************
rule :: = <unk> . <unk> () ;
************* smarts ****************
************* smarts ****************
<unk> :: = [ - | - ] [ - ] [ - ] [ - ] [ - ] [ - ] [ - ] [ - ] [ - ] [ - ] [ - ] [ - ] [ - ] [ - ] [ - ] [ - ] [
<unk> :: = <unk> . <unk> () ;
gracing - comment :: = userdef - symbol .
gracing :: = color
/ * ( non - javadoc )
literal :: = ( letter | digit ) * digit \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk> \ <unk>
turns a named { @link <unk> } into a { @link <unk> } .
opens a new scope with the given name .
capture stack trace message .
sets the maximum size of the bucket .
unlocks the given column .
returns the value of the specified row in this matrix .
remove the given row from the proxied column .
returns the maximum column size for the given column .
adds a new row to the table
sends the appropriate { @link <unk> } to all registered { @link org . bff . javampd . playlist . <unk> } .
attempts to update the max widths of the column with the given width .
internal method that saves the given action into the request .
parses the given { @code expression } into a { @code <unk> } .
returns a provider for the given functor .
/ * ( non - javadoc )
execute the action .
this method is called when a { @link expression } is compiled .
/ * <unk> <unk> <unk> <unk> <unk> <unk> <unk>
<unk> - <unk>
/ * <unk>
compile the body of the body of the given code point call .
returns a string representation of the call to {
removes all of the entries from the map .
commits the specified { @link <unk> } .
overloaded version of { @link map#put ( object object ) } .
commits the specified { @link <unk> } .
creates a new { @code <unk> } with the given { @code key } and { @code expected } values .
returns the symbol key for the given key .
returns the value associated with the given field or null if not found .
overloaded version of { @link map#put ( object object ) } .
sets up a combo to low mark .
/ * ( non - javadoc )
open the breakpoint options
method to construct the in expression for boolean
this method is called when the connection is loaded . this method is called by the {
called when the connection is terminated .
/ * ( non - javadoc )
blocks until the given timeout is reached .
add a listener to the list of listeners .
add a listener to the list of listeners .
create states states for a given state .
inserts the specified element at the specified position in this list . shifts the element currently at that position ( if any ) and any subsequent elements to the right ( increases their indices ) . the new elements will appear in the list in the order that they are returned by the <tt > <unk> / tt > of the <tt > <unk>
retrieves and removes the head of the tree .
returns the {
returns the minimum root node of the given node .
compares two nodes .
inserts a new node into the tree .
stops the current thread and waits for it to finish .
this method is called when a cleanup fails .
returns the object associated with the specified key .
associates the specified value with the specified key in the cache .
removes the mapping for the specified key from this cache .
puts all the values in the given map into the cache .
removes all of the watched files from the cache .
build name post name
restore controls subreports for a context .
returns an iterator that iterates over the elements of the given method .
returns the intersection of an { @link iterable } .
examines the list of nested lists into a list of lists .
returns an { @link iterator } iterating over all possible { @link <unk> } s .
mostly it s designed for one - step operation .
gen - last : <unk>
returns <tt > true< / tt > if there are no more elements .
returns the short form of the given byte array .
compile index arguments .
/ * ( non - javadoc )
gets the values for the given value .
returns the value of the property with the specified name .
sets the value of the specified property as a { @link <unk> } .
/ * ( non - javadoc )
this method creates a new instance of the {
main method .
documentation inherited from interface
******************** private methods ***********************************
calls { @link <unk> ( string string ) } on the server .
returns the { @link link } of the specified { @link link } .
removes and returns the last element from the list .
try to close the given element .
called when the activity is reset .
process a text update .
format the table as a string .
get the key stroke for the given key .
/ * ( non - javadoc )
/ * ( non - javadoc )
~ methoden ----------------------------------------------------------
adds an attribute to the grid . <p >
fire the attribute change event .
parse a string to an integer .
converts a string to a date .
converts a string to a date .
converts a string to a <code > java . util . date< / code > .
converts a string to a <code > java . util . date< / code > .
creates a token source for the given string .
<p > <unk> . < / p >
creates a pgm token from an input stream .
returns the next token in the list .
returns the next token in this stream .
/ * ( non - javadoc )
returns true if the instruction is a constant .
checks if the given instruction is permanent or not .
checks if the given instruction is a non - arg boolean .
create a instance of { @link <unk> } .
render the contents of the table .
converts a list of {
query the score for this score in the query .
/ * ( non - javadoc )
applies a { @link clause } to the clause .
returns an { @link java . util . list } of { @link java . util . list } of { @link list } of { @link java . util . concurrent . states . <unk> states } that can be applied to the given { @link java . util . function . grouping } .
returns { @code true } if all values have the same identity .
returns the value at the given index .
returns true if the given {
vr : inline
returns the score of this query in a sorted manner .
/ * ( non - javadoc )
create a { @link <unk> } from a { @link <unk> } .
returns the string representation of the command line arguments .
retrieve the summary of the given query .
retrieve the named { @link <unk> } .
execute the query .
called when the activity is reset .
get a new instance of the dpi implementation .
this method is called when the <unk> is executed .
<unk> the <unk>
method to create a new <unk> for the given instructions .
this method implements the { @link <unk> ( bytebuffer ) } method .
returns the default instance of the default constructor .
calculates random instance key .
get the basic type .
invites the input stream to a compiled { @link <unk> } .
print the import declaration .
flatten a map of variables into a map .
/ * ( non - javadoc )
gets the map of variable names from a collection of variables .
sets the operator .
splits the body of the body part of a body .
/ * ( non - javadoc )
$non - nls - 1$
/ * <unk>
<p > <unk> . < / p >
/ * ( non - javadoc )
ends the current time in milliseconds .
/ * ( non - javadoc )
update the playlist .
marshall the playlist .
sets the volume of the current volume .
starts the music with the specified playlist .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
handle the request .
/ * ( non - javadoc )
handle event request .
fire the <unk> event .
roll back to the default one .
this method is called when the connection is ready to connect to the client .
start batch insert .
shuts down the connection manager .
creates a new version of the xmlpullparser .
/ * ( non - javadoc )
process packet .
set the { @link <unk> parameters } of this { @link <unk> } .
creates and returns a new { @link chat } with the given name . returns null .
tries to find the user chat with the given jid .
returns a list of { @link <unk> } s for the given domain .
/ * package
destructively reset the input map .
sets the value of a property .
add a filter to this image .
process the request .
removes all of the mappings from this map .
generate a base64 encoded hmac signature .
/ * -------------------------------------------------------------------
adds the callback to acl .
rollback acl .
*********************************************************************** <unk> () filter acl .
gets the alias of the principal key .
sets the permissions for this { @link net . dv8tion . jda . core . entities . permission permissions } .
returns a synchronized ( thread - safe ) copy of the specified sorted map .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the next packet in the queue .
this method adds comment to output stream .
sends a schema to the server .
get the list of <unk> schema .
creates a new http client with the specified settings .
returns an { @link optional } of the specified type . if no such method is found { @link optional#empty () } is returned .
returns an { @link optional } with the given name and argument types .
/ * ( non - javadoc )
creates a new { @link event } instance with the given descriptor .
/ * ( non - javadoc )
add a lifecycle listener .
<unk> the <unk> of the <unk>
starts a new { @link <unk> } .
/ * ( non - javadoc )
creates a new set containing the elements of the specified collection .
distinct by the calling { @link <unk> } .
/ * ( non - javadoc )
unmap a byte buffer .
cleans up all entries in the map .
remove entries from the cache .
casts a null value to null .
computes the hash code for a given object .
tells whether the given { @code object } is equal to the specified { @code y } .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
returns the entry associated with the specified key in this map .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
rehashes the contents of this table into a new size .
copies all of the mappings from the specified map to this map .
/ * ( non - javadoc )
removes the mapping for the specified element from this map if it is present .
remove the mapping for the specified element from this map if it is present .
removes all of the mappings from this map .
adds a new entry to the table .
/ * ( non - javadoc )
returns an immutable map containing the keys and values of the given keys . the { @code map } is created using the { @link <unk> ( map iterable ) } method .
parse a date string into a date .
convert a date value to a date .
returns the simple name of the given name .
fixup server authority information .
parses the given zookeeper connection string .
strips the host from the given uri .
returns true if the specified journal id is valid .
encode a string to a string .
acquire a typedesc from a string .
escapes special characters in a string according to the following rules : <ul > <li > xml : < / li > <li > <code > &amp ; amp ; < / code > < / li > <li > <code > &amp ; lt ; < / code > < / li > <li > <code > &amp ;
returns the sha - 1 hash of the given string .
converts a byte array to a hex string .
encodes the given string using the utf - 8 encoding .
encodes a byte array into base64 notation .
decodes a base64 encoded string .
creates a random string with a random number of characters .
{ @inheritdoc }
<p > <unk> . < / p >
sets the track selector
removes the next node from the list .
sets the current edit controller on the server .
set the current name of the first monitor to be used .
<p > information about the volume of the stack . < / p >
<p > broadcast a playlist . < / p >
handle command resources .
converts a volume model to a { @link <unk> } .
handle an fx task
handle the track .
gets the cache for the given scope .
return { @link java . util . concurrent . <unk> } for a given key .
get an instance of { @link <unk> } with the given name .
rolls back a topic .
collect all the topics in the specified zone .
returns the value of a given field .
returns a string representation of the given string .
returns the {
given a map of field names return a map of filtered properties .
<unk> uuid <unk>
replaces all occurences of the characters in the string with \ n .
replaces all occurences of the characters in the string with \ n .
<p > <unk> . < / p >
/ * ( non - javadoc )
verify that the given path is valid .
checkstyle : off
/ * ( non - javadoc )
returns the <unk> for the given connection .
enable or disable the scheduled executor service .
visible for testing
/ * ( non - javadoc )
sets the ping interval .
schedule a recovery task .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
removes the mapping for the specified key from this map if present .
/ * ( non - javadoc )
removes the page with the given key .
adds an argument to the command line .
adds an option to the list of options .
add an option to the list of arguments .
returns true if the given option has an option .
parse command - line arguments .
prints the help message .
/ * package
initializes the connection .
initializes the connection .
establishes a connection to the server connection .
/ * ( non - javadoc )
returns the compression implementation based on the compression method
enable compression for compression .
this method writes the given line to the stream .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
notifies the connection that a connection error has occurred .
notifies all registered listeners of a connection .
adds the annotation to the given class .
returns a list of all subclasses of this class .
attempts to authenticate the server .
attempts to authenticate the server with the given username and password .
performs sasl authentication .
get the value for a field
/ * ( non - javadoc )
pass the output to the output .
/ * ( non - javadoc )
execute mojo .
parse the command line arguments .
log an info message .
log an error message .
log a warning message .
creates a { @link serializationformat } .
returns the start event for the given {
notifies all listeners that a writer has been registered .
generates a { @link <unk> } for the given resource .
/ * ( non - javadoc )
unregisters all resourceids for the resourcebuilders
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an immutable copy of the specified sorted map .
{ @inheritdoc }
get the key for a particular key .
--- remove ---
execute a cached attribute attempt .
sets the filter .
get a list of all the components in the classpath
/ * ------------------------------------------------------------
/ * ( non - javadoc )
adds the { @link <unk> } to the list of { @link <unk> } .
creates a list of sasl <unk> plugins .
handle debug .
/ * ( non - javadoc )
execute a call .
/ * ( non - javadoc )
registers an event listener with the event listener .
copy stats to a file .
acquires a file lock on the given channel .
remove the event from the event properties file
/ * ( non - javadoc )
creates a { @link <unk> } from a { @link string } .
creates a player for reading an existing one .
creates a { @link <unk> } for the given { @link <unk> } .
creates a { @link <unk> } for the track .
create a new instance of { @link <unk> } .
returns an instance of { @link <unk> } .
factory method to create a new { @link jediscluster } .
creates a new { @link jediscluster } .
create a <unk> from a <unk> .
creates a { @link <unk> } with the given file and error .
start the track of an identification .
this method is called when an identification is stopped
/ * ( non - javadoc )
create a playlist request .
create a <unk> .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
checks whether the specified log level is enabled .
gets the full url .
adds a parameter to the url .
adds a parameter to the url .
adds a query param to the request .
url - encodes a query string .
get a playlist .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last : <unk>
checks if the device has been started .
checks if the given url exists .
gen - last : <unk>
returns an imageicon or null if the path was invalid .
/ * ( non - javadoc )
main method .
sets the maximum value in the array .
exports the payload to a map .
gets the presence of the given resource model .
get the value at the given index .
get the int value associated with a key .
returns the value associated with the given key as an integer .
returns the value associated with the given { @code key } or { @code defaultvalue } if no such value exists .
encodes json value into a json object .
creates a new { @link <unk> } for the specified { @link <unk> } .
verifies that the given command is equal to the given prefix .
connect capabilities .
{ @link <unk> ( string ) }
create a cluster .
creates a destination destination .
evaluate a single clustering .
create a new { @link jediscluster } with specified username and ports
create a new { @link session } instance .
checks if a session is already in use .
/ * ------------------------------------------------------------
binds the values of the given prepared statement to the given { @link preparedstatement } .
{ @inheritdoc }
executes the given cql query .
execute a prepared statement .
/ * ( non - javadoc )
execute the {
execute the given {
execute the given {
wrap the given object with the given callback .
updates the application settings .
/ * ( non - javadoc )
opens a callback for the given callback .
asynchronously executes a single async query .
executes a batch of statements .
executes a batch update .
asynchronously delete a batch of statements .
sets the filter that will be used to build the jar .
find all subclasses of a given class .
returns all subclasses of the given class .
creates a new { @link set } of { @link class } s from the given { @link uri } .
searches through the directory and adds it to the given directory .
returns a list of classes from the given package .
set a resource on this manager .
creates a new resource based on the resource manager .
set a resource on this manager .
returns a list of resource objects that can be used as resources .
returns the number of keys assigned to this key .
registers all the events in the page builder
/ * ( non - javadoc )
wait for the next request to complete .
process a stanza to process .
<p > decorates . < / p >
get the volume of an event .
creates a new iq exception with the given error message .
an error reporting an error .
create an instance of a { @link <unk> } instance .
convenience method to create an error response from an iq packet .
fired whenever an identifiable event occurs .
returns a synchronized ( thread - safe ) sorted map backed by the specified sorted map .
returns a { @link comparator } that is backed by the { @link java . util . stream . <unk> () } method .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a set containing all of the elements in the given set .
sets the name of the roster entry .
/ * private void <unk> ( string name string name ) { <unk> > <unk> = new <unk> ( <unk> ) ; }
returns a list of all the groups in this group .
returns true if the given object equals the result of this method .
/ * ( non - javadoc )
/ * ( non - javadoc )
remove all keys from the cache .
returns a list of all values in the cache .
add a { @link <unk> } to the lifecycle .
creates a { @link <unk> } for the given { @link element } .
creates a {
/ * ( non - javadoc )
create a { @link <unk> } for the given identification .
reloads the packet .
creates a new roster group .
creates a new roster item with the given name and group name .
removes an entry from the packet .
returns all entries in the roster .
returns the roster entry for a given xmpp entry .
returns the presence information for a given user or unavailable presence if no presence information is available for the given user . <p > if the user s presence is unavailable then the presence of presence information is unavailable . < / p > <p > if the user s presence is unavailable the presence of presence information will be unavailable . < /
returns the presence information for a given user .
retrieves a list of presence information for a user from a user s presence map . if no presence information is available the user s presence updates are not unavailable .
returns the key for the given user name .
sets the presence of offline presence information .
fires the roster change event for all registered listeners .
performs an xauth authentication .
generates a { @link <unk> } for the given { @link resource }
sets the value of this object .
{ @inheritdoc }
/ * ( non - javadoc )
creates a { @link presence } for the presence of the presence of the presence of the presence of the presence of the presence of the presence of the presence of the presence of the presence of the presence of the presence of the presence specified by the presence of the presence of the presence
creates a { @link presence } object for the presence of a { @link <unk> } .
returns a synchronized ( thread - safe ) map backed by the specified map .
registers the given {
<p > attempts to set the volume of the specified player . < / p >
returns a list of { @link <unk> } s for the current { @link <unk> } .
ask the specified player for an player s playlist .
creates a { @link <unk> } for the specified track .
create a { @link <unk> } with the specified { @link <unk> }
create a { @link <unk> } from a playlist .
returns the set event for the given event .
add a listener to the set of listeners .
initializes the properties file .
reload the properties from the properties file .
pulls a stream of error packets .
returns a list of all available sasl mechanisms found .
parses the compression methods .
parse an xml feed .
decodes the given value .
inspect the given {
create a permanent request for the given identification .
creates a { @link <unk> } for the given rest request .
creates the start http request .
create a start http request .
verifies that the specified {
same as {
creates a new filter based on the given filter .
/ * documented <unk>
returns a combined filter that accepts records which are less than or equal to the given filter .
gets the playback state from a resource .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value to which the specified key is mapped or { @code null } if this map contains no mapping for the key .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
/ * ( non - javadoc )
returns a { @link set } view of the mappings contained in this map .
returns a set view of the keys contained in this map .
returns a new collection containing the values contained in this set .
purge all of the entries in the queue .
removes an entry from the map .
returns the value to which the specified key is mapped or { @code null } if this map contains no mapping for the key .
returns the index of the first occurrence of the specified key in this map .
creates a new entry entry and adds it to the hash map .
/ * ************************************************************************* java object serialization ***********************************************************************
reconstitute the <tt > <unk> / tt > instance from a stream ( i . e . deserialize it ) .
/ * ( non - javadoc )
/ * ( non - javadoc )
implementation of {
sends a message to the chat manager .
dispatch a message to listeners .
renders a single script .
initialize the configuration .
this method initializes the target conversion .
parse the application directory .
initializes the property files .
creates workspace directory .
loads the properties file from the classpath .
write a document to a file
gets the progress event for the given { @link <unk> } .
/ * documented <unk>
returns true if the specified file exists .
returns a list of inetsocketaddress matching the number of keys in the given list of services .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the attributes of this element .
adds attributes to the given map .
get the thread pool
returns the stop token for the given identification .
attempt to verify the presence of the event .
create a <unk> from a <unk> .
create a <unk> from a token .
/ * ( non - javadoc )
create a new { @link jediscluster } with specified username and ports
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
build a new session
adds a connection listener to the set of listeners .
/ * <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
notifies all registered { @link <unk> } s registered with this { @link <unk> } .
adds a new interceptor chain to the list of interceptors .
fire packet interceptors .
initializes the debugger .
<unk> > <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
called when a session is complete
/ * ( non - javadoc )
returns the current thread id .
add a node to the cache .
adds a value to the cache .
this is a convenience method for creating a new <code > <unk> / code > .
/ * ( non - javadoc )
/ * ( non - javadoc )
execute a remove operation .
get the value of a leaf node .
<p > validates that the index is within the bounds of the argument collection . < / p >
/ * ( non - javadoc )
<p > <unk> . < / p >
translate an array of nodes .
find the leaf node with the specified index .
returns the node that is greater or equal to the given key .
returns the next node in the tree .
returns the leaf node of the given node .
remove an element from the tree .
copies all of the mappings from <code > from< / code > to <code > to< / code > .
/ * documented <unk>
returns true if the node is black .
<unk> > <unk>
<unk> <p > <unk> / p >
factory method for creating a new instance of the given class .
factory method for { @link <unk> ( node int ) } .
package - private for testing
returns the left child of the given node or null if the node is null .
<unk> > <unk>
applies the given { @code procedure } to each entry in the tree .
cancels the right child of this node .
removes the node from the left and right of the parent .
<editor - fold defaultstate = collapsed desc = <unk> >
associates the specified node with the specified key .
<unk> - <unk>
/ * ( non - javadoc )
checks if the given object is not null .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an empty view of the thread - local tree .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a new <code > set< / code > that contains all of the <code > entry< / code > s of this <code > <unk> / code > .
try to copy all the entries in the map .
returns the least entry for the given key or <code > null< / code > if no such entry exists .
removes the mapping for the given key from the cache .
remove expired entries from the list .
removes all entries from the cache .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
generates a list of resources for the specified playlist .
link a player to a playlist .
this method is equivalent to { @link <unk> ( <unk> ) } below .
initializes the roster store .
opens a roster store .
get or put the key - value pair if one exists .
returns a { @link list } of { @link inetaddress } of { @link inetaddress } suitable for use with a network interface .
returns a list of local inetaddresses for this network interface .
coerces a range of ip addresses to an ip address .
returns a synchronized ( thread - safe ) copy of the specified sorted map .
/ * ( non - javadoc )
{ @inheritdoc }
read a pid from a file .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * [ deutsch ] <p > interpretiert den angegebenen text ab . < / p >
returns a synchronized ( thread - safe ) copy of the specified { @code map } .
returns a new { @link list } of { @link <unk> } s that satisfy the given { @link filter } .
check if the album is new .
create an album
update file .
exports a message to a { @link map } .
generate the provider documentation .
returns the { @link <unk> } for the given { @link class } .
returns a new mapbuilder with the specified key and value .
set the <unk> attribute .
adds a job to the set of constructors .
gets all { @link <unk> } s of the given { @link set } .
/ * ( non - javadoc )
executes the given {
prints a { @link list } of { @link <unk> } s .
prints the program usage .
the main method .
finds the <unk> of a <unk>
reset the <unk> of a <unk>
performs the analysis .
returns the cached schema for the given schema .
write a text file to a file .
returns the build version of the jar file .
adds an option to the selected option .
gets the schema for this schema .
returns the field with the given name or null if none found .
<p > <unk> . < / p >
gets the response body as an input stream .
helper method for {
closes all the subservices .
returns an immutable map containing the results of applying the given function to each entry in the map .
gets a { @link org . apache . ojb . client . client . client . <unk> } for the given { @link org . apache . ojb . broker . pbkey } .
releases the client .
creates an instance of { @link <unk> } .
sets the state of this {
{ @inheritdoc }
<unk> iterator .
gets the track information for the given event .
returns a string representation of the data contained in this group .
update the progress of the intent .
renders an image
download an image from a url .
loads a json object from a json file .
gets the post request info .
returns the acl for the specified object .
/ * ( non - javadoc )
replaces all values of the given source map with the given values .
convert a collection of objects to a collection .
performs multiplication .
/ * ( non - javadoc )
execute the given runnable in the given <unk> .
/ * ( non - javadoc )
disconnects from the pool .
creates a copy of the given map .
register an ended event .
returns the queue entry at the specified position .
returns the qualified name of the {
gets the { @link optional } value of { @link <unk> } .
update the current track .
shuffles the tracks in the queue .
verifies that the playback is valid .
exports all the playback data to the message store .
inits the .
decodes four bytes from array <var > source< / var > and writes the resulting bytes ( up to three of them ) to <var > destination< / var > . the source and destination arrays can be manipulated anywhere along their length by specifying <var > srcoffset< / var > and <var > destoffset< / var > to <var > destination< / var
write a javascript request to the given json object .
authenticate session .
returns the stop event for the given identification .
create stop event handler .
fixup a name name into a string .
escape a string .
gets the md5 hash of the avatar
converts a byte array to a hex string .
creates a new { @link <unk> } .
logs the stanza to authenticate .
creates a new { @link <unk> }
/ * ( non - javadoc )
converts this object to a json string .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the velocity property .
remove a property .
add a principal to the set of principals .
removes the given principal from the set of principals .
wait for the { @link runnable } to finish .
{ @link <unk> ( <unk> <unk> ) }
notification that the root window is closing . <p / > <p > this method is meant to be called when a { @link <unk> ( window ) } method is called . < / p >
returns a synchronized ( thread - safe ) copy of the specified { @code map } .
process the template .
change the user s password .
create a new instance of { @link <unk> } .
this method is used to execute a user in your <unk>
******************** methods *******************************************
/ * ( non - javadoc )
rename a directory
/ * ( non - javadoc )
returns an input stream for the version .
download the current version of the file .
/ * ( non - javadoc )
/ * ( non - javadoc )
fired whenever an event is permanent
check if a resource model is permanent
sets the name of the roster entry .
returns the roster entry for the given user .
adds a roster entry to the workgroup .
returns the value to which the specified key is mapped or { @code null } if this map contains no mapping for the key .
returns <tt > true< / tt > if this map contains a mapping for the specified key .
returns <tt > true< / tt > if this map maps one or more keys to the specified value .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
copies all of the mappings from the specified map to this map .
removes the mapping for the specified key from this map if it is present .
removes all of the elements from this list .
generates a hash code for a given object .
compares two keys .
returns <code > true< / code > if <code > <unk> / code > is equal to <code > <unk> / code > .
returns the entry for the given key or <code > null< / code > if no such entry exists .
associates the specified entry with the specified entry .
/ * ( non - javadoc )
adds an entry to the hash table .
removes an entry from the map .
adds a new entry to the pool .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
increases the capacity of this <tt > arraylist< / tt > instance if necessary to ensure that it can hold at least the number of elements specified by the <tt > <unk> / tt > .
increases the capacity of the pool if necessary .
calculate the new capacity of the new map .
{ @inheritdoc }
returns an iterator over the elements of this map .
this method returns an { @link java . util . set } of { @link <unk> } instances .
returns a set view of the keys contained in this map .
/ * ************************************************************************* java object serialization ***********************************************************************
reconstitute the <tt > <unk> / tt > instance from a stream ( i . e . deserialize it ) .
loads a key from an input stream .
create a byte array from a failure scope .
casts a map to a stream
{ @inheritdoc }
/ * ( non - javadoc )
<unk> <unk> .
notifies all registered listeners about the connection .
notifies all registered listeners that a state is closed .
