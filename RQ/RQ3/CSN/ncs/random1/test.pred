emit the path to the given delay .
returns an observable that subscribes into an observable that emits the specified sources . <p > <img width = 640 height = 640 height = 640 height = 305 src = https : // raw src . github . github . com / wiki / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators
returns an observable that emits the given observable . <p > <img width = 640 height = 640 height = 640 height = observable = 640 height = 305 = 640 height src = null = 640 height = 640 height = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx . png
returns an observable that emits } into an { @code sources } s sources into an observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = font = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
returns an observable that emits } into an observable that emits the specified { @code sources } . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font = observable = 640 = font - size : wiki ;
returns an observable that concatenates into an observable of the source array into a single observable that emits the resulting / tt > . <p > <img width = 640 height = 640 height = 640 height = 640 src = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators
returns an observable into a single array into a single items that each element s delay . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
returns an observable that combines the given sources . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font ; < / b > < / b > < / b > < / b > < / b > < / dt > <dd > { @link observable (
concatenate an observable that combines } into a single observable into a single delay of the given function . <p > <img width = 640 height = 640 height = observable src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators /
concatenate an observable that concatenates } into an error } that emits the provided { @code sources . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / rx - operators /
concatenate an observable into an observable into a single observable that emits the given observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = font = 640 height = font = 640 src = 305 src = https : // raw . github . com / wiki / rxjava / images / rx - operators
concatenate an observable that subscribes } to an observable that emits the specified { @code sources to the source source observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable . github . com / wiki / reactivex / reactivex / rxjava / images / rx - operators / rx - operators / rx
returns an observable that combines the specified observable into a single observable that emits the given observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font = font = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx
returns an observable into an observable to a single observable that emits the provided by applying the specified iterable . each element width of the provided { @link iterable . <p > . <p > note : < / dt > <dd > { @code sources } or { @code false } < / dt > { @code sources } is equivalent to the
returns an observable that emits the given observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 305 = 640 height = 640 height ;
returns an observable that emits the specified { @code callable } emitted by the { @code callable } . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . com / reactivex / rxjava / images / rx - operators / rx - operators / rx
returns an observable that subscribes into an array . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font - size src = >
returns an observable that subscribes the specified source items into an observable by default the source iterable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <b > <b > <i > <b > <i >
returns an observable that emits the specified publisher emitted by the specified publisher . <p > <img width = 640 height = 640 height = 640 height = https : // raw . github . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / images = > <dl > <dt > <b >
returns an observable that emits the specified generator from the source generator into an observable > <img width = 640 height = 640 height = 640 height = 640 height = 305 &lt ;
returns a { @link callable } that emits the specified initial state . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx - operators / rx - operators / rx
returns an observable that subscribes into an observable into an observable that emits delay . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators / rx
returns an observable that emits the specified period in the specified period . <p > <img width = 640 height = 640 src = https : // raw src = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators
returns an observable that emits the specified period emitted by the period that emits the specified width = 640 height = 640 height = 640 height = observable src = https : 18px ;
returns an observable that returns an observable into an interval into an observable ) that emits the specified period . <p > <img width = 640 height = 640 height = 640 height = 640 src = 640 src = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx - operators / rx
returns an observable that removes } that returns an observable that emits the specified period . <p > <img width = 640 height = 640 height = https : // raw . github . github . com / wiki / reactivex / rxjava / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators /
returns an observable that emits the items emitted by the specified { @code item . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx -
returns a new observable } into a single observable } that emits the source into a single element } . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
returns an observable that subscribes } into a { @code sources } objects from { @code observable } . <p > <img width = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns an observable that combines the source observable that emits the supplied observable . <p > <img width = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns a { @code sources } into a single observable into a single array into a single items . <p > <img width = 640 height = 640 height = 640 height = 640 src = https : // raw src / wiki src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns an observable that combines the source into an observable that emits the source source observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable ;
returns an observable that emits the specified { @link observable } emitted by the supplied observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . github . com / wiki / reactivex / rxjava / images / rx - operators / rx
returns an observable that subscribes the specified range of the specified range . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 src = https : 18px ;
returns an observable that emits into an observable that emits the specified range . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height ; < / wiki = 640 height = 640 height = 640 height = https : // raw = > <dt > <dt > <dt > <dt > <dt > <dt
returns a single sequence that emits the items into a single sequence of items . <p > <img width = 640 height = 640 height = 640 height = 640 height = single . github : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
returns a single sequence that emits the specified observable into an observable that emits the specified observable . <p > <img width = 640 height = 640 height = 640 height = observable src = https : // raw src = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx - operators /
returns a sequential sequence into a single observable of the specified by the source into a single sequence that sequence . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <dt > <b > <i > <b > <i >
returns an observable that subscribes the specified observable into an observable . <p > that emits the specified { @code observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 ;
returns an observable that subscribes all items from the source observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators
returns an observable that emits an observable from an observable that emits the specified observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = observable = 305 src = https : 24px ;
returns an observable that emits the source resource supplier . <p > that emits the supplied resource supplier . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 = >
returns an observable that emits the specified source function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font = https : red > <dt > <dt > <b > <b > <b >
returns an observable that emits the specified source observable into an observable that emits the specified source observable . <p > consisting of the specified source source . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height ;
returns an observable that subscribes into a single observable into a single observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - &gt ;
returns an observable that subscribes into a single { @code sources into an observable of items . each item is combined by applying the supplied by applying the supplied separator } . <p > <b > note : < / b > this method appends the values to the existing { @link observable } . <p > <img width = 640 height = 640
returns an observable that combines the given function items into a single observable into a single function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <b > note : < / b > this method
returns a single predicate that emits all items of the items from this predicate . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw . github . com / wiki / rxjava / rxjava / images / rx - operators / dd >
returns an observable that emits the source source items have been emitted by the source observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / rxjava / images / rx - operators
returns a single predicate that emits the predicate . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns an observer that subscribes the specified observer . <p > view . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = null src ; < / reactivex >
calls {
returns an iterable that emits the source iterable . <p > <img items to the source buffer . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : red > <b > note : < / b > this method appends the values :
returns an observer that subscribes the last observer . <p > element . <p > <img width = 640 height = 640 height = 640 height = blocking src = https : // raw . github . com / wiki / rxjava ;
returns an observable that emits the items from the source value . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a single element that emits the specified single element . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 ; &lt ;
returns a single item that emits the specified item to the specified default item . <p > <img width = 640 height = 640 height = 640 height = 640 height = blocking src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx -
returns a future that subscribes into a future that emits the specified { @code future } to { @code future . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx -
subscribes to the specified consumer . <p > <img width = 640 height = 640 height = 640 height = empty src = https : // raw . github . com / wiki / rxjava ; < / p > <p > <img width = 640 height / rx ; color : red > <dl > <dl > <dt > <b > <b >
subscribes to the specified consumer . <p > <img width = 640 height = 640 height = 640 height = empty ;
subscribes to the specified consumer . <p > <img width = 640 height = 640 height = 640 height = blocking ; action ;
subscribes the specified observer to the specified observer : observer / b = 640 height = 640 height = 640 height = https : red > <b > note : < / b > < / dt > <dd > <b > note : < / b > < / b > < / b > <dt > <dt > <dt > <dt >
returns an observable that emits the items that have been emitted by applying the specified list . <p > . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . github . com / reactivex = 640 height = 640 height = 640 height = font -
returns an observable that emits the items emitted by applying the given list . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 ;
returns an observable that subscribes the specified by applying the specified collection . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 ; color = 640 height = 305 &lt ; p&gt . &lt ; color : red > <dt ; p&gt : < / b > <b >
returns an observable that emits the specified collection of items into a collection . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font = 640 height ; color = font - size : 18px ; color : red > <dt > <dt > <dt > <dt > <b >
returns an observable that emits the specified list . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 24px ; color : red > <b > <i > <b > used for finding src = 640 height = 640 } < / i > < / b > <
returns an observable that emits the specified collection into a single buffer that emits the specified timespan . <p > collection . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src = >
returns an observable that emits the specified list of the specified list . <p > <img width = 640 height = 640 height = 640 height = 640 height = font ; // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx
returns an observable that emits the items that emits the specified time . <p > <img width = 640 height = 640 height = 305 src = https : // raw . github . github . com / a&gt ;
returns an observable that emits the specified collection of { @link collection } that emits the specified collection . <p > <img width = 640 height = 640 height = 640 height = 640 height = 305 ; // raw . github = 640 height ;
returns an observable that emits the specified observable . <p > { the supplied by applying the given function call { @code function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ;
returns an observable that subscribes the specified by applying a collection of items into a } . observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 305 = 640 height = 640 height ; workers ; } src = https : // raw . github . com / wiki / reactivex / rxjava /
returns an observable that subscribes into a list . <p > <img width = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw . png . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns an array that emits items into a list of the specified boundary . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font ; color = 640 height = font - size : 18px ;
returns an observable that subscribes the specified boundary into a collection of items . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = observable = 640 height = font = 640 height = 640 height = 640 height ;
returns an observable that emits the source items that emits the supplied list . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = observable ;
returns an observable the cache that emits items that emits the initial capacity . <p > <img width = 640 height = 640 height = 640 height = https : // raw . github = new src = > note : < / reactivex > <dt > this method appends the values : < / b > <dt > <b > note : <
returns a single single value } that collects the result into a stream } that emits the resulting / sup > function call through { @code collector } function to each element that emits the resulting / sup > <img width = 640 height = 640 ; < / p > <img width = 640 height = 640 height = 640 height = 640
returns a single items into a single value into a single item emitted by applying the provided value . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 ; color = 640 height = https : red style = font - size . com / wiki = 305 / reactivex / b
returns an observable that subscribes } into an observable that emits the supplied observable . <p > view to each element width = 640 height = 640 height = 640 height = 640 height = 640 height = observable ;
returns an observable that combines the items emitted by applying the supplied by applying the given function is combined by applying the provided by applying the supplied function } to each item > <img width ; otherwise returns a { @link observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640
returns an observable that combines all of items into a single single by applying the specified function to each item . <p > <img width = 640 height = 640 height src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx -
concatenate an observable that combines the delay of items into a single observable that emits the supplied delay . <p > <img width = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
concatenate an observable that combines the source function to each element of items . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / rxjava / rxjava ;
returns an observable that combines } to a single observable that emits the specified by applying the specified by applying the given function to each element of the source observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 = 640 src = https : // raw .
concatenate an observable that emits an observable into an observable that emits the given function to the provided function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
returns a copy of { @code completable function } s function . <p > consisting of the supplied } . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 = 640 height = 640 height = 640 height = font - size : red > <b > <i > <b > <i
returns an observable that subscribes the source items into a single completable that emits the supplied function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx -
returns a copy of this completable with the provided by applying the provided function to each element of this view . <p > <img width = 640 height = 640 height = 640 height = 640 height = font - size : red style = font - size : red style = font - size : red > <b > <i > <b >
returns a copy of this completable items into a single sequence . <p > <img width . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = observable ;
returns an observable that combines the items emitted by applying the given function to the given function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / rx - operators / rx - operators /
returns an observable that combines the items of the source function into a single observable . <p > function returns a new observable that emits the resulting by applying the specified by applying the specified function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640
returns an observable that combines the maybe items into a single maybe that emits the supplied maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : red style = font - size : red style = font - size : < / i > < / b >
concatenate an observable that emits a single maybe into an observable that emits the supplied by applying the given function . <p > maybe . <p > note : < / p >
returns an observable that combines the given maybe into a single sequence . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font = 640 height = 640 src = https : // raw . github . com / wiki / rxjava / rxjava / rx - operators / b : < /
concatenate an observable that subscribes into a maybe by applying the supplied maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = observable ;
returns a view of items that emits the source into a single function that emits the specified function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 ; color = 640 height = font = font = font = 640 height = font - operators = observable / b = 640
concatenate a single function that combines the items of this function emits the resulting by applying the supplied function . <p > element of this function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src = 305 src = https :
concatenate a single delay into a single items that emits the provided by applying the provided function to each element of this stream . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <b > note : < / b > <dd >
returns a single single items that emits items to each item that emits the supplied function to each item . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
returns an observable that combines the other items into this observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = font = 640 height ; color ;
returns an observable that combines all items that emits the source observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = observable ;
returns an observable that combines the other items into the source maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height height ;
returns an observable that emits the other items that emits the source observable . <p > <img width = 640 height = 640 height = 640 height = > github . com / reactivex / rxjava / images / rx - operators / toasync / rx - operators / rx - operators / rx - > <dl > <dt > <dl > <p >
returns a single element that emits the specified element . <p > <img width = 640 height = 640 height = 640 height = 640 height = any src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx
returns an observable that emits the items emitted by applying the specified function function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 305 ;
returns an observable that emits the specified timeout . <p > <img width = 640 height = 640 height = 640 src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns an observable that emits the specified { @code timeout . <p > <img width = 640 height = 640 src = https : // raw . github . com / wiki ;
returns an observable that emits the items items . <p > <img width = 640 height = 640 height = empty src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators /
returns an observable that removes all items from the source observable that emits the delay . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font / rxjava ;
returns a custom delay that emits the specified delay with the specified delay . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 . github . com / rxjava = >
returns an observable that emits the specified delay to the specified delay . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = https : src = font = 640 height = > <dl > <dt > <dt > <dt > <dt > <dt > <b > <dt
returns an observable that subscribes the delay of the specified delay . <p > <img width = 640 height = 640 height = 640 height = 640 height = font - size = 305 = 305 = 640 src = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx - operators / rx
returns an observable that subscribes the source delay from the source subscription . <p > <img width = 640 height = 640 height = 640 height = observable ;
returns a delay that emits the specified delay to the specified delay . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font - operators = https : // raw . < / i > < / reactivex / i > <b > <i > <dt > <b > jcypher< / b :
returns an observable that emits all items that emits the source source into an observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = this ;
returns an observable that emits the source items into an observable that emits function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ;
returns a distinct observable into a distinct items that emits the distinct items . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font ; < / wiki / reactivex / wiki ;
returns a hash of the specified by applying the specified function that emits the specified key . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font ; < / wiki ;
returns an observable that emits the specified key that emits the collection that emits the specified key . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <b > <b > <i > <b > <i >
returns a distinct distinct that emits the specified items from the distinct items . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / rxjava ;
returns an observable that subscribes into a distinct items that emits the specified key . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx
returns an observable that emits the items that emits the specified predicate . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <b > <b > <i > <b > <i >
returns an observable that subscribes that have the next observable to the observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = rx src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx -
returns an observable that emits the specified action . <p > <b > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height src = 640 height = 640 height = font - operators / reactivex / rxjava / rx - operators / rx - operators / terminate
subscribes to an observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / images / rx - operators / images / rx - operators / images / rx - operators / rx - operators /
returns an observable that subscribes the specified action . <p > <img width = 640 height = 640 height = empty src = https : // raw src = https : // raw . github . com / rxjava / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators /
returns an observable that subscribes the observable . <p > <img width = 640 height = 640 height = 640 height = empty src = https : // raw src = https : // raw . github . com / wiki / rxjava / images / rx - complete . png alt = > <dl / rx - operators / rx - operators /
returns an action } . <p > <img width = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / images / rx - operators / images = font - size / rx - operators / rx - operators / rx - operators / images = font -
returns an observable that subscribes the specified notification to the notification . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns an observable that subscribes the specified observer . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 . github . com / wiki / reactivex / rxjava / wiki / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators /
returns an error that calls the specified { @link throwable () on each of the specified error . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = empty src = https : // raw src = https : // raw . github . com / wiki / reactivex / rx - operators /
subscribes to an observable that subscribes the specified action . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators
returns an observable that calls the next action . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font = 640 height ;
subscribes to the specified observable that subscribes the specified observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx - operators / images / rx - operators / rx - operators /
subscribes to all items from the specified action . <p > <img width = 640 height = 640 height = 640 height = 640 height = < / b > <b > <dt > <p > <b > note : < / b > < / dt > < / b > <dt > <dt > <b > < / b : red >
returns an observable that subscribes the specified element . <p > <img width = 640 height = 640 height = 640 height = 640 height = rx ;
returns a single item that emits the specified item at the specified index . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font = 640 height ;
returns a single observable that emits the specified element . <p > <img width = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - plugins / rxjava / reactivex / rxjava / images = > <dt > <dt >
returns an observable that subscribes the predicate that match the given predicate . <p > <img width = 640 height = 640 height = 640 height = font - size : src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images / b > < / dt > <dd >
returns the first item that emits the specified item emitted by the items . <p > <img width = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / images / rx - operators / rx - operators / rx - operators
returns an observable that subscribes all of the specified by applying the provided function . <p > <img width = 640 height = 640 height = 640 height = 640 height = font ; color = 640 = font = 640 height = font ; color : red style = font - size : red > <b > <i > <b > <i >
returns an observable that subscribes all items from this buffer and returns an observable that emits the source function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . github . com / wiki / reactivex / rxjava / rx - operators /
returns an observable that removes all items of the source into an observable by applying the source function to the source function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 / rx - operators / rxjava / images
returns a { @code function } into an observable that emits the supplied by applying the supplied function call through the resulting by applying the provided function call through the provided by applying the provided function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640
returns a completable that returns a function that maps the provided function to the provided by applying the provided function . <p > <b > note : < / tt > to > <dd > <b > note : < / b > this method appends the values to the existing { @link completable ( java . util . collection ) } if you
returns an observable that subscribes the specified by applying the provided by applying the specified by applying the provided { @code function . <p > <img width = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki src = https : // raw / b > <i > note : <
returns an observable that subscribes the maybe items emitted by the supplied maybe function . <p > <img width = 640 height = 640 height = 640 height = 640 height = font = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
returns an observable that removes all items from the supplied by applying the supplied maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 / wiki / rxjava / images / rx - operators / rx - operators / rx - operators
returns an observable into a single function into a single function that emits the source source function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <b > <b > <i > <b > <i >
returns an observable that subscribes the source source by applying the specified function . <p > function to each element . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color / reactivex / rxjava / images = > <dl > <dt > <b
returns a { @code predicate } that emits the specified { @code each element of the specified predicate . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns a group that subscribes the specified key emitted by the provided by applying the provided key . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <b > note : < / b : < /
returns a group that subscribes the specified key emitted by applying the source function to the resulting function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font ; color : red > <dt > <dt > <dt > <b > <i >
returns an observable that subscribes the specified key into a single key that emits the specified by applying the specified key . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 ;
returns an observable that removes } into a single observable . <p > <img items from the observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 ;
returns an observable that removes all elements of this completable . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / rxjava / rxjava ; color / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a single boolean that emits all items in the single single boolean . <p > <img width = 640 height = 640 height = 640 height = 640 height = false src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx
returns an observable that subscribes } into a single observable that subscribes } into a single function . <p > <img width = 640 height = 640 height = 640 height = 640 height = >
returns an observable that emits the last element of this maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a single item that emits the items emitted by the source item . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 = 640 height = 640 height = 640 height = 640 height = 640 height ;
returns a single observable to the last items . <p > <img width = 640 height = 640 height = 305 ;
returns an observable that removes all items emitted by applying the source function to each item . <p > <img width = 640 height = 640 height = 640 height = 640 height src = 640 height ; color = 640 height = 640 height = 640 height = font - operators = 640 height = observable ;
returns an observable that emits the items emitted by the user . <p > <img width = 640 height = 640 height = 640 height = 640 height = 305 . github . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators
returns an observable that emits the items into the source of the observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / reactivex / reactivex / images / rx - operators / rx - operators / rx - operators / reactivex
returns an observable that emits the source source source into the source observable . <p > observable . <p > <img width = 640 height = 640 height = 640 height = observable ;
returns an observable that emits the other items from the source maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators /
returns an observable that emits the items that emits the other items . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable . github . com / wiki = 640 height = 640 height = font - size : 18px ;
returns an observable that emits the specified custom observable into a custom observable . <p > <img width = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns an observable that emits the specified delay . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw . github . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators
returns an error that emits the next observable that emits the specified function . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable src = observable src = https : // raw . github . com / wiki / reactivex / rxjava / rxjava . png alt = > <dl > <dl > <dt >
subscribes the next observable into an observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 ;
returns an observable that removes all items from the specified function items . <p > <img . <p > <img / code > . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <dt > <dt > <b > note : < /
subscribes an observable that emits the specified by calling { @code source } . <p > <img width = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns an observable that emits the items from the observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / reactivex . github . github . com / wiki / rxjava / images / rx - operators / rx - operators /
returns an observable that emits a function that emits the supplied selector function . <p > function . <p > <img width = 640 height = 640 height = 640 height = 640 ;
returns a maybe that emits the specified reducer by applying the specified reducer function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <b > <b > <i > <b > <i >
returns a single function that emits the items . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font = 640 height ;
returns a single function that emits the items into a single function emits the source publisher that emits the source function call to the source function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 ;
returns an observable that subscribes } to the source observable } . <p > function . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx
returns an observable that subscribes the specified times the specified times . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = empty src = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx - operators /
returns an observable that emits an observable that have been emitted by the supplier . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable = observable src = https : 18px ; workers ;
returns an observable that emits the specified handler emitted by applying the specified by the resulting observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 ;
returns an observable that emits the specified selector that emits the specified selector function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - operators = 305 = > github . github . com / wiki / reactivex / rxjava / images / rx - operators / images
returns an observable that emits the specified selector into the specified function . <p > function width and time . <p > <img width = 640 height = 640 height = 640 height = 640 ; < / wiki >
returns an observable that emits the specified { @code selector by applying the specified { @code selector } . <p > <img width = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki ; workers ;
returns an observable that emits the items emitted by applying the specified buffer . <p > . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
returns a {
returns an observable that emits the specified time to the specified buffer . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = this ;
returns an observable that emits the buffer that emits the specified scheduler . <p > <img width = 640 height = 640 height = 640 height = observable ;
returns an observable that emits all items from the specified scheduler . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable . github ;
returns an observable that emits the observable that emits the specified { @link observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = true src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns an observable that emits the specified predicate that emits the predicate . <p > <img width = 640 height = 640 height = 305 = 640 height = 640 height = 640 height ;
returns a times that emits the specified times until the specified times the specified times . <p > <img width = 640 height = 640 height = 640 height = 640 height = true src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns an observable that emits the specified predicate to the specified predicate . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height ;
returns an observable that emits the predicate } that emits the predicate . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx
returns an observable that emits the specified function that emits the specified handler . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height ; color = font = 640 height ; workers ;
returns a { @link period } into a { @code period } with the specified period . <p > <img width = 640 height = 640 src / p = 640 height = 640 height = 640 ; color = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava /
returns an observable that emits the specified period with the specified period . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src / rxjava / images / reactivex / rxjava / images / rx - operators / rx - operators / images = 305 src = > <dl > <dt >
returns an observable that emits the items emitted by the source source observable into an observable that emits the source source source . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height ;
returns an observable that subscribes the items emitted by applying the given function to the given function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height ; < / wiki >
returns an observable that subscribes the items emitted by the initial function to perform an observable / sup > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px = 640 height = observable src = https : //
returns an observable that subscribes all items emitted by applying the seed . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height ;
returns an observable that subscribes } into an observable of the } . <p > <img width = 640 height = 640 src src = https : // raw src = https : // raw . github . com / wiki / rxjava / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns a single element that emits that emits items . <p > <img width = 640 height = 640 height = 640 height = 640 height = 310
returns a single single items into a single single item . <p > <img items . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx
returns a single single observable that emits the source observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height ;
returns an observable that subscribes the specified count of the specified observable . <p > <img width = 640 height = 640 height = 640 height = observable src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns an observable that removes the specified time . <p > <img width = 640 height = 640 height = 640 height = 640 height height ;
returns an observable that emits the specified time items . <p > <img width = 640 height = 640 height = time src = https : // raw src = https : red style = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx -
returns an observable that subscribes the specified count of the specified count of this observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx
returns an observable that subscribes } into an observable of the last time } . <p > <img width = 640 height = 640 height = 640 height = 640 height = false src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns an observable that emits the last time that subscribes until the last time . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns an observable that emits the specified { @code time . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable = observable src = this = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / images . png alt
returns an observable that subscribes into an observable that emits the source source observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / images = >
returns an observable that subscribes the given predicate from the specified predicate . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw . com / reactivex / rxjava / images / rx - operators / rx - operators / images = > <dl > <dl > <dt > <dt > <b >
returns an observable that removes all items from the source observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = font - size : 18px ;
returns an observable that returns the result of this observable order according to the specified comparator . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
returns an observable that subscribes into an observable that emits the specified items . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable ;
returns an observable that emits the source source by applying the given observable . <p > <img width = 640 height = 640 height = 640 height = observable ;
returns an observable that emits the items emitted by applying the items emitted by the source observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images /
returns an array that subscribes into an array into an array of items . <p > <img items . github . <p > <img width = 640 height = 640 height = 640 = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
subscribes to the next item that emits the specified consumer . <p > <img width = 640 height = 640 height = empty ;
subscribes to an error that emits the specified error . <p > <img width = 640 height = 640 height = 640 height = 640 height = empty = empty ) } . <p > <img width = 640 height = 640 height = font - operators = 640 height = 305 src = https : // raw . github . com / wiki
subscribes to an error that subscribes } to a { @link consumer } . <p > <img width = 640 height = 640 height = 640 height = 640 height = action src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / images
returns an observable that emits the observable that emits the specified scheduler . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images / rx - operators / rx - operators /
returns an observable that emits the source observable that emits the source observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / images = 640 height / images . png alt = > <dl >
returns a map into a function call into an observable that emits the specified function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki ;
returns a completable that subscribes into a function that emits the completable that emits the source function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <b > <b > <i > <b > <i >
returns a completable that maps to a completable by applying the supplied by applying the specified function to each element width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw . github
returns an observable that subscribes the maybe items from the source maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 305 = > <dt > <b > note : < / reactivex >
returns an observable that removes all items emitted by applying the given function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font = font = 640 height = 640 height = 640 height = 305 src = 305 - operators = 305 - style src / i >
returns a single { @code observable to each item emitted by applying the specified function to each item emitted by applying the provided mapper . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw
returns an observable that subscribes into a single by applying the provided by applying the specified mapper . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height ;
returns an observable that subscribes the specified delay by applying the delay to each item in the source source by applying the provided mapper . <p > function call { @code mapper . <p > <img width = 640 ; color = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640
returns an observable that emits the specified count of this observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx -
returns an observable that subscribes the specified time in the specified time time . <p > null< / > <img > <br > <img width = 640 height = 640 height = 640 height = > <p > <img width = 640 height = 640 height = observable ;
returns an observable that emits the specified time emitted by the specified time time . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx -
returns an observable that subscribes the specified elements from the last item . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable ;
returns an observable that emits the last time from this function returns a new observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 305 ;
returns an observable that removes all items emitted by the source observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images
returns an observable that removes all items from the predicate . <p > <img width = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx - operators / images / rx - operators / rx - operators /
returns an observable that emits the specified by applying the window . <p > <img width = 640 height = 640 height = 640 height = 640 height = font ;
returns an observable that emits the specified duration of this observable emitted by the specified duration . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
returns an observable that emits the specified duration in the specified by applying the specified in order . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx
returns a custom observable into } that emits the last duration that emits the specified duration . <p > . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
returns an observable that emits the specified timeout . <p > observable . <p > <img width = 640 height = 640 src = https : // raw . github . com / wiki / rxjava . com / wiki / reactivex / rxjava / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators
returns an observable that emits the specified timeout to the specified timeout . <p > <img width = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / images = > <dl > <dt > <dt >
returns an observable that subscribes into an observable that emits the specified time items . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height > <img src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx
returns an observable that subscribes into an observable that emits the specified time items . <p > <img width = 640 height = 640 height = 640 height = 640 height = this . com / wiki / reactivex src = > <dl > <dt > <dt > <dt > <dt > <dt > <b > <dt > <b > <b > <dt >
returns an observable that subscribes the timeout into an observable of the specified function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 = 640 height ;
returns an observable that subscribes the specified observable that emits the specified timeout . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font / reactivex / rxjava / images = >
returns an observable that emits the specified timeout . <p > <img width = 640 height = 640 height = observable ;
returns an observable that emits the specified timeout . <p > <img width = 640 height = 640 height = 640 src = https : // raw . github . com / reactivex ;
returns an observable that emits the specified timeout . <p > function that emits the specified by applying the specified { @code timeout = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns an observable that emits the specified timeout to the specified timeout . <p > <img width = 640 height = 640 src = 640 height ;
returns an observable that subscribes until the items from the specified time . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns an observable that subscribes until the items are emitted by the specified time . <p > <img width = 640 height = 640 height = 640 height = 640 = 640 height = 640 height = 640 height = font = > <b > note : < / wiki / reactivex = 640 height = 305 src = https : // raw .
returns a list of items that emits the items of the specified capacity . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / rxjava ;
returns a list of items that emits the items of this collection . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 310 ; p&gt &lt ; src = https : src = font - size : 18px ; color : red > <b > <b > <i > <b > <i >
returns a single map into a } that emits the elements of this map to each element of the specified function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 = font - size : red > <dt > <b > <i
returns a flowable that emits the items emitted by the specified strategy . <p > <img width = 640 height = 640 height = 640 height = 640 height = observable ;
returns a single { @code list into a { @link list } . <p > in the list } . <p > <img width = 640 height = 640 height = 640 height = order src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns an observable that emits the observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns an observable that emits the window . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images = > <dt > <dl > <dt >
returns an observable that subscribes all items that emits the specified buffer . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 305 = 640 ;
returns an observable that emits the specified window that emits the specified time . <p > <img width = 640 height = 640 src = https : // raw . window . < / reactivex / rxjava ;
returns an observable that emits the specified window . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font ;
returns an observable that emits the specified observable that emits the specified timespan window . <p > <img width = 640 height = 640 height = 640 = computation src = https : // raw . github . com / wiki / reactivex / rxjava ;
returns an observable that emits the source items have the specified by the specified timespan . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / rxjava ;
returns an observable that emits the specified timespan to the specified window . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 ;
returns an observable that subscribes the window emitted by the window . <p > <dt > <img width = 640 . < / tt >
returns an observable that emits the items that emits the specified indicator that emits the window / var > and returns the result of this observable } . <p > <img width = 640 height = 640 height = 640 height = 640 height = font = 640 height ;
returns an observable that subscribes into an observable that emits the supplied function . <p > indicator . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font . github . com / wiki / reactivex / rxjava / rx - operators / rx - operators /
returns an observable that subscribes all items into an observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx -
returns an observable that combines the source function items into a single observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 = 640 height ;
returns a zip transformation that combines the source observable into a single observable that emits the source function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height ;
{
returns an observable that emits the items emitted by the observable into an observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / wiki src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators
returns an observable that subscribes the items from the source source source observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators
returns an observable that emits the specified number of this observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = font - operators = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx
returns an observable that emits the specified timeout into an observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 / images = 640 height = 305 = 640 height ;
creates a new { @link observable } . connect . observable () } .
validates that the given subscriber is valid .
creates a new { @link flowable into a { @link flowable into a { @link publisher } .
creates a new { @link flowable } from the given { @link publisher } .
creates a new { @link flowable } that contains the specified by the specified { @code publisher .
returns a view view to be used to convert this flowable } .
returns a { @code function to a mapping of this stream .
maps a { @code function } to a { @code mapper } .
returns a view that filters } that filters .
returns a new { @code flowable } that filters the given { @code predicate . flowable .
starts a flowable that starts the given { @code scheduler } s . <p > <img width = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators
starts a parallel flowable that starts with the specified scheduler . <p > on / sup > .
returns a new { @code flowable } to each element of the result . flowable () } .
returns a { @code flowable } that applies the given { @code reducer } to each element of this { @code reducer } .
returns a flowable that emits a flowable that emits the flowable that emits the flowable = 640 height = 640 height = 640 height = 640 height = sequential src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns a flowable that emits the items emitted by the source publisher . <p > function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava /
returns a flowable that emits the items emitted by the flowable that emits the specified flowable . <p > delay . <p > error . <p > <img manager . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = flowable src = https : // raw .
returns a flowable that emits the items emitted by the specified flowable that emits the specified flowable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = true src = true src = https : // raw . github . com / wiki /
returns a { @code flowable } that is { @code comparator s { @link comparator } .
returns a { @code flowable } which is { @code flowable of the elements .
returns a { @code flowable } that generates a sorted { @code flowable that { @link flowable } that { @link flowable } .
performs a {
called when a parallel } on the next flowable } .
performs a { @link flowable } on the next element .
called when a { @link flowable .
performs a { @link flowable when the action .
performs the specified { @link flowable } that { @link action .
performs a {
performs a request on the request .
performs a parallel action } on the { @code action .
collects the elements of this stream into a new { @code flowable } .
creates a new { @link flowable } from a parallel array .
returns a {
returns a { @code flowable } that applies { @code composer } to the { @code composer } .
returns a parallel flowable } to a { @link flowable } with the given { @link publisher } with the given { @link publisher } .
returns a parallel flowable } to a { @code function to the { @link publisher } .
concatenates this publisher into a parallel by applying the given function .
concatenates this publisher into a new { @code publisher } that concatenates the result of this stream .
concatenates this { @code function into } into a new flowable } that concatenates the given { @code function } .
concatenates this { @code function } into a { @code function } into a { @code function } .
returns an observable selector that combines the given multicast .
returns an observable that calls the given { @link observable } . <p > function . <p > in an observable . <p > <img width = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
creates a new { @link observable .
creates a new { @link observable .
creates a new { @link connectable } with the given source unit } .
creates a new { @link observable } with the given source size .
creates a new { @link observable } . observable . buffer .
set a resource at the specified index .
replaces the resource at the specified index .
creates a new { @link processor } .
creates a new { @link processor } .
creates a new {
checks if the given { @link publisher .
creates a new { @link flowable from a { @link publisher } to a { @code value .
creates a new instance of { @link disposable } instance from a runnable .
creates a new { @link disposable to a { @link action .
creates a new {
creates a new {
creates a new { @link disposable .
returns the value of the blocking .
creates a new {
creates a { @link scheduler } that emits the given { @link callable } . <p > <img width = 640 height = 640 height = 640 height = 640 height = null = null } . < / reactivex = > <dl > < / dt >
creates a new {
initializes a single scheduler that emits the specified scheduler . <p > <img width = 640 height = 640 height = 640 height = scheduler src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / initialization - operators / init . png alt = >
returns a { @link scheduler } to be called when a { @link scheduler } . <p > <img width = 640 height = 640 height = scheduler src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx
called when an error .
returns a new { @link scheduler } is called when a { @code scheduler } .
returns a new { @link scheduler } that returns a new { @link thread } to the given { @link scheduler } .
creates a new { @link runnable } on the given { @link runnable } . runnable () .
returns a single { @link scheduler } to be called when the scheduler } is called .
resets the state of this scheduler .
sets the { @link scheduler scheduler .
sets the { @link callable handler .
sets the { @link scheduler } to use for the given { @link scheduler } .
sets the new {
sets the single { @link callable } .
sets the { @link scheduler () } .
sets the new {
sets the schedule handler for the given runnable .
sets the single scheduler handler .
sets the {
sets the {
sets the {
sets the {
sets the {
sets the {
sets the {
sets the observable assembly on the observable .
sets the { @link observable .
sets the { @link observable } on the given {
sets the {
sets the {
returns a new { @link flowable } s { @code source } that fills { @code null } .
returns a { @code observer } that combines the given { @code source } .
creates a new { @code observer to the given { @code source } .
creates a new {
returns a {
returns a { @link maybe } to the given { @link maybe } .
returns a {
returns a { @link flowable } to the { @link flowable } .
returns an observable that applies the given { @link observable () } to an observable .
returns an observable that applies the given source function to the given source observable } .
returns a single { @link single } that applies the given { @link single } .
applies an { @code assembly } .
sets the { @link flowable assembly .
returns a { @link flowable that contains the given { @link flowable } .
returns true if the {
creates a new {
applies the given function to a { @code function } .
applies a function to the } to the result .
calls {
returns a {
returns a maybe that emits the maybe } that emits the specified maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font - size = 640 height = 640 height = font - size : 18px ; color : red style = > <b > <b > <b > <i >
returns an array that emits the specified maybe maybe into a single maybe . <p > <img width = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators
returns a publisher into a single flowable into a publisher into a single publisher into a single publisher that emits the specified publisher . <p > <img width = 640 height = 640 height = 640 height = 305 src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / rxjava /
returns a flowable that concatenates into a single maybe . <p > that emits the given maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <b > <dl > <b > <b > <i >
returns a flowable that emits the source maybe that emits the source maybe . <p > <img width = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx
returns a flowable that concatenates into a single maybe . <p > maybe . <p > <img width = 640 height = 640 height = 640 height = maybe src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns a maybe that emits a maybe that emits the specified maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = maybe ;
returns a { @link maybe } into a { @code maybe } . <p > <b > note : < / sup > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <b > note : < / dt / b >
returns an empty {
returns an error that emits the specified { @code maybe } emitted by the specified by the { @link maybe } . <p > <img width = 640 height = 640 height = 640 height = 640 height = maybe src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / rxjava
returns a {
returns a maybe that emits the specified maybe that emits the specified source completable . <p > <img width = 640 height = 640 height = 640 height = 640 height = maybe src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a single { @link maybe } into a single maybe } . <p > <img items from the source source maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a { @code callable } that emits the specified by the specified callable . <p > <img width = 640 height = 640 height = 640 height = 640 height = font - operators / rxjava / images src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx -
returns a maybe that subscribes into a { @code maybe } to a { @link maybe } that emits the specified { @code maybe } . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / wiki src = https : // raw . github . com /
returns a maybe that emits the specified { @code timeout that emits a { @code maybe . <p > <img width = 640 height = 640 height = 640 height = https : // raw . github . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx -
returns a maybe that emits the given runnable . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators / rx
returns a maybe that emits the specified item that emits the specified maybe . <p > } . <p > <img width = 640 height = 640 height = 640 height = maybe ;
returns a flowable that emits the specified sources into a new flowable that emits the given publisher . <p > <img width = 640 height = 640 height = 640 height = flowable src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx -
returns a flowable that emits the given sources of sources } into a { @code maybe } . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = true src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx -
returns a flowable that emits all of the sources } into a single flowable . <p > that emits the supplied { @code sources > <img width = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw src = https : red style = > <dt > <dt ;
returns a {
returns a single sequence of { @link maybe maybe } into a { @link maybe } objects of ( s maybe . <p > { @code source2 } ) . <p > <img width = 640 height = 640 height = 640 height = 640 height = single src = https : // raw . github . com / wiki / reactivex / rxjava
returns a single maybe that emits the specified maybe maybe into a single maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = maybe ;
returns a { @link delay } to a { @link time . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 . github . github . < / b > < / b > < / b > < / dt / dt > <dd >
returns a maybe that emits the specified { @code delay } that emits the specified by the specified delay . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns a maybe that emits the given maybe into a new { @link maybe } that emits the specified maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / reactivex / rxjava / images / rx - operators / rx - operators /
returns a { @code maybe } that emits the source source source maybe . <p > <img width = 640 height = 640 height = 640 height = https : red style = 640 height . github ; color : red >
returns a { @link maybe } into a resource that emits the specified { @code maybe . <p > <img width = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx
returns a { @link maybe } that wraps the specified maybe maybe . <p > <img width = 640 height = 640 height = 640 height = maybe src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators = 640 height = > <dl > <dl > <dl
returns a maybe view of each element of the provided by applying the maybe function to each element into a single element . each item is combined into a single value using the provided . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - operators / reactivex /
returns a zip publisher into a single function that emits the maybe . each element is combined item is combined into a single value . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font ; color : red > <b > note : < / b > this method
returns a maybe that emits the maybe that emits the source maybe maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = maybe src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images = > <dl > <dl > <dt >
returns an observer that subscribes the specified observer . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = blocking src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators
returns a multi - value that emits the specified value . <p > <img width = 640 height = 640 height = 640 height = 640 height = blocking src = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx - operators / images = 640 height = > <dl > <dt >
returns a cache that emits the cache items into the cache . <p > <img width = 640 height = 640 height = 640 height = 640 height = font - size src = maybe ;
returns a { @code maybe } into a { @link maybe function } that source maybe . <p > function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 305 ;
concatenate a maybe that emits a function items emitted by applying the resulting by applying the supplied maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = maybe = 640 height = 640 height = maybe ;
returns a flowable that emits the items emitted by applying the source maybe to the source maybe . <p > <img width = 640 height = 640 height = 640 height = 305 ;
returns a single maybe that emits the items emitted by the specified item . <p > <img width = 640 height = 640 height = 640 height = 640 height = 310 . github . com / wiki src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
returns a single single item that emits the supplied single single items . <p > <img width = 640 height = 640 height = 640 height = https : < / b > this src = > <b > note : red style ) . github . com / wiki to } < / dt > <dt ;
returns a delay to a } that emits the specified delay to a delay . <p > <img width = 640 height = 640 height = 640 height = 640 height = computation ;
returns a custom maybe that emits the specified delay to the specified delay . <p > <img width = 640 height = 640 height = 640 height = https : // raw . github . github . com / wiki / reactivex / rxjava / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators
returns a publisher that emits the items emitted by the specified publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = maybe src / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns a custom delay that emits the specified delay to the specified delay . <p > <img width = 640 height = 640 height = 640 height = https : // raw . github . github . flowable ;
calls {
subscribes to the specified maybe } that emits the specified { @link maybe } on the specified { @link maybe } . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height . github : // raw raw - operators src = https : // raw
emits the specified action from the specified maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = maybe src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators
returns a maybe that emits the source into a function that emits the result . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <b > <dl > <b > note : < /
returns a flowable that emits the items emitted by the specified function . <p > function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 305 = 640 ;
returns a maybe that removes all items that emits . <p > <img width = 640 height = 640 height = 640 height = this / b > this method . < / p >
returns a completable that emits the specified element . <p > <img width = 640 height = 640 height = 640 height = 640 height = maybe ;
returns a single item that emits the specified single plugins . <p > <img width = 640 height = 640 height = 640 height = 640 height = empty src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns a maybe that emits the items into a maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 305 &lt ;
returns a maybe that maps to each item emitted by the specified function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font = 640 ;
returns an instance of {
returns a { @code maybe } that emits the specified { @code function } to each element that emits the specified { @code maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height ;
returns an observable that emits the specified observable to the observable that emits the observable of the observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx
returns a single maybe that emits the specified single maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = this = 640 . com / wiki wiki wiki / reactivex / b > < / b > < / dt > <dd > <b > note : < / dt > <dd > <b >
subscribes to an error that emits the given maybe that emits the error . <p > <img width = 640 height = 640 height = 640 height = https : src = true = > <dt > <dt > <dt > <dt > < / dt > < / dt > <b > <dt > note : < / b > < / dt
subscribes the next maybe to the specified maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height ;
returns a maybe function that emits the specified by applying the specified function . <p > <img width = 640 height = 640 height = 640 height = maybe src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns a maybe that emits the specified value into an error that emits the specified maybe . <p > <img width = 640 height = 640 height = 640 height = maybe ;
returns a maybe that emits the maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = rx src = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx - operators / images / rx - operators / rx - operators /
returns a flowable that emits the items emitted by the specified flowable . <p > function . <p > <img width = 640 height = 640 height = 640 height = 640 height = repeat src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx -
returns a flowable that emits the items that emits the specified function to each item emitted publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ;
returns a flowable to a } that emits the given predicate . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = integer src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a new { @link maybe } emits the specified count of functions . <p > <img width = 640 height = 640 height = 640 height ; < / reactivex / rxjava ; < / reactivex = 640 ;
returns a flowable that emits the specified by the given predicate . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = maybe src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a {
returns a new scheduler ---
subscribes to a consumer that emits the specified error . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 ;
returns a maybe that emits the specified maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = empty src = https : // raw . github . com / wiki / rxjava ;
returns a single maybe that emits the specified single source function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = empty src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a maybe that emits the source maybe from the maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = maybe src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a { @link maybe } that emits the specified { @link maybe } . <p > <img width = 640 height = 640 height = 640 height = 640 height = timeout src = https : // raw . github . com / wiki / reactivex / rxjava / rx ;
returns a { @link maybe } that emits the specified { @link maybe } to the result in the specified { @link maybe } . <p > <img width = 640 height = 640 height = 640 height = 640 ;
returns a maybe that emits a synchronous maybe . <p > maybe . <p > <b > note : < / b > this method automatically automatically automatically automatically automatically automatically automatically automatically automatically automatically automatically automatically automatically automatically automatically automatically automatically automatically automatically automatically automatically subscribes ( if any ) . <p > <img width = 640 height = 640 height = 640
returns a publisher that emits the specified timeout until the specified timeout . <p > <img width = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx -
removes the maybe items that emits the maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height src = https : // raw . github . com / wiki / reactivex / rxjava / images / rxjava ;
creates a new { @link flowable } .
creates a new { @link observer } .
assert that the given object is non - null .
returns a {
add an error when the error .
called when the subscriber is complete .
called when the given observer .
called when a given observer .
returns a {
creates a new {
creates a new {
creates a new {
prints the stack trace .
returns the root cause of the given throwable .
creates a new {
creates a new {
creates a new {
creates a new {
inserts the specified array to the list .
/ * ( non - javadoc )
{
throws an error .
returns the number of the transitive boundary in the queue .
returns the error .
returns the error for the given timeout .
blocks until the specified timeout is completed .
creates a new {
creates a new {
create a new {
creates a new {
{
throws an {
returns the number of the specified mode .
creates a new { @link subject } .
returns the value of the notification .
returns an array of all values .
returns an array of values in - memory array ) of the given array .
returns true if this notification has a value ) .
drain the maximum loop from the queue .
creates a new {
request a request .
completes a request to complete the given {
returns true if the queue is cancelled .
completes the given {
creates a new {
creates a new {
creates a new {
completes the request .
gets the values
returns an array of values in the array .
returns the value associated with this object .
get the error .
creates a new {
creates a { @link notification } .
validates the given observer against the given observer .
sets the given observer .
checks if the given a subscription .
sets the next subscription to the given subscription .
adds a new consumer to the given cache .
removes the given consumer from the list .
replay the given a consumer .
adds the number of times to the given value .
returns the number of bytes in the given { @code b
adds the given number of elements to the given value .
adds a new { @code n to } < / sup .
returns the number of plugins in the given number of plugins .
subscribes the specified {
subscribes the specified observable to the specified observable .
subscribes the specified {
concatenates the given completable into a single completable into a single completable . <p > <img width = 640 height = 640 height = 640 height = completable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx
returns a completable into a single completable into a single completable that emits the supplied by applying } . <p > <img width = 640 height = 640 height = 640 height = completable = https : // raw . github . github . github . github . com / wiki / rxjava / images / rx - operators / rx - operators /
returns a publisher into a single completable that emits all of the provided by applying the provided publisher . <p > <img width = 640 height = 640 height = https : // raw . github = https : // raw . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
concatenate a publisher that emits a publisher into a single completable that emits the publisher . <p > <img width = 640 height = 640 height = 640 height = completable src = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns a completable that emits the specified source source source source source source . <p > <img width = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images . png alt = > <dl > <dl > <dt > <b > <dt
returns an error that subscribes the specified error emitted by the specified error . <p > <img width = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images = > <dl > <dl > <dl > <dl > <dt > <dt >
returns a completable that emits the specified action . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators
returns a completable that subscribes } into a {
returns a { @code future } into a single future that emits the specified future . <p > <img width = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns a completable that emits the specified maybe maybe to the specified maybe . <p > <b > <b > note : < / dt > <dd > this method appends the result = 640 height height = 640 height = 640 height = font - size : 18px ; color : red > <dt > <b > <i > <b > <i >
returns a completable that emits the given a runnable . <p > that emits the specified runnable . <p > <img width = 640 height = 640 height = 640 height = completable src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx -
returns a single completable that emits the specified single single source } that emits the specified single source } . <p > <b > note : < / b > this method appends the values to the existing single completable = 640 height = font - size : 18px ; color : red > <dt > <b > note : < / b >
returns a new completable } into a new completable . <p > completable . <p > <img width = 640 height = 640 height = 640 height = 640 height = completable = assembly src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns a new { @code sources } of the source into { @code sources } function } . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ;
returns a new { @code sources } with the given { @code sources . <p > <img width = 640 height = 640 height = 640 height = completable src = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx -
returns a completable that combines into } of { @code sources of the given publisher . <p > <img width = 640 height = 640 height = false src = false src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx -
returns a completable that emits the specified } into a completable the given { @code publisher } . <p > <img width = 640 height = 640 height = 640 height = true src = https : // raw . github . com / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns a completable that combines } into a single delay } . <p > <img width = 640 height = 640 height = 640 height = 640 height = true src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators
returns a completable that subscribes all of the specified assembly . <p > <img width = 640 height = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / wiki / rx - operators / rx - operators
returns a timer that emits the specified time into a delay . <p > <img width . < / returns a timer ) . <p > <img width = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx - operators / rx - operators
converts the given throwable to a npe } .
returns a completable that emits the specified by applying the specified resource supplier . <p > that emits the supplied function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 . github . github = font - operators / wiki src = https : // raw . github
returns a completable that emits the specified source source to a completable that emits the specified source source source . <p > null< / tt > . <p > <img width = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <i > <dl > <dt > <b > <i >
returns a completable that emits the source source by the source source source completable . <p > = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / rxjava / rxjava / images / rx - operators / rx - operators /
returns an observable that subscribes the specified observable by applying the observable to each observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns a flowable that emits the items emitted by the specified publisher . <p > publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx
returns a single single delay that emits the source items . <p > element . <p > <img width = 640 height = 640 height = 640 height = 640 height = this src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx -
returns a maybe that emits the items that emits the specified maybe maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 . github . github . maybe > <dd . github . com / wiki / reactivex / reactivex / rxjava / images / rx - operators / rx - operators / rx
returns a completable to a completable . <p > this / var > . <p > <img width = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns a converter that emits the source items into a converter to } function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images /
subscribes to the observer . <p > <img width = 640 height = 640 .
returns a completable that emits the items emitted by applying the specified completable . <p > . <p > <img width = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images = > <dl > <dl > <dl >
returns a copy of this completable into a completable . <p > <img width of this function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx -
returns a copy of { @code delay that emits the specified delay . <p > <img width = 640 height = 640 src src = https : // raw . github . com / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators /
returns a completable that emits the specified delay to the specified delay . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators
returns a copy of the specified } that emits the specified delay . <p > <img width = 640 height = 640 height = 640 height = computation src = https : // raw . github . com / wiki / reactivex / rxjava / rxjava / b > < / dt > <dd >
returns a new { @link completable } that emits the specified { @code delay } emitted delay . <p > <img width = 640 height = 640 height = 640 height = 640 height = this . github . com . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx
calls { @link completable () } s emitted by the user } . <p > <img width = 640 height = 640 height = 640 height = empty = 640 height = empty . github ; < / reactivex / rxjava / wiki / rxjava / images = empty . com / wiki / reactivex / rx - operators / rx - operators /
calls {
calls {
subscribes to the specified consumer . <p > <img width = 640 height = 640 height = 640 height = completable src = https : // raw . github . com / wiki / reactivex / rxjava / images / images / rx - operators / rx = completable = completable . github . github . com / wiki / reactivex . png alt
subscribes to the specified action that emits the specified consumer . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = empty ;
removes the specified action from the lifecycle lifecycle . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = empty src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images > <dl > <dt > < / a > <
returns an action to the lifecycle . <p > . <p > <img width = 640 height = 640 height = 640 height = empty src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images = empty src = > <dl > <dt > <dt > <dt > <dl >
returns a completable that emits the specified scheduler . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / images = > <dl > <dl >
returns an error that emits the specified predicate . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 &lt ;
returns a completable that emits the specified error . <p > <img width = 640 height = 640 height = 640 height = 640 .
returns a completable that emits the specified times the specified times . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = repeat src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a flowable that removes all items that have been emitted by { @link completable . <p > <img width = 640 height = 640 height = 640 height ; < / reactivex / rxjava ; < / reactivex >
returns a flowable that emits the source publisher into a single publisher that emits the specified publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <dt > <b > <dl > <dt > <b >
returns a { @code predicate } that calls { @code predicate . <p > when the specified by calling { @code predicate } . <p > <img width = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx -
returns a flowable that emits the specified times the specified times . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a { @code predicate } that emits the specified { @code predicate . <p > <img width = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx
returns a flowable that subscribes } that emits the given publisher . <p > <img width = 640 height = 640 height = 640 height = https : // raw . github . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators
returns an observable that emits the source into an observable that emits the source observable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 305 = 640 height ;
returns a new { @link scheduler } with the observer . <p > <img width = 640 height = 640 height = 640 height = font = >
subscribes the observer that subscribes the specified observer . <p > <img width = 640 height = 640 height = observer src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators /
returns a new { @code completable that emits the specified scheduler to the specified scheduler . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images
returns a completable that emits items from the source source source to the source . <p > <img width = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / images / rx -
returns a { @link completable } that emits the specified { @code timeout . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / toasync . png alt = >
returns a completable that emits the specified timeout to the specified timeout . <p > <img width = 640 height = 640 height = 640 height = 640 height = > <dl / b = 640 ( if any ) < / b > < / b > < / dt > <dd > <i > } < / dt > <dd > <dd
returns a custom { @link completable that emits the specified timeout . <p > . <p > <b > note : < / b > this method = 640 height = timeout0 / reactivex / reactivex = font - operators = 640 height = font - operators / timeout = font - operators = font - operators = font - operators = font -
returns a custom completable that emits the specified timeout to the specified timeout . <p > <img width = 640 height = 640 src = https : // raw . github . com / wiki ;
returns a {
returns a flowable that emits the items emitted by the source scheduler that emits the items . <p > <img width = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx -
returns a maybe that emits the specified { @code maybe to the maybe maybe . <p > <b > note : < / b > this method appends the values to the existing value = https : // raw . github = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx
tries to try to call to the given { @link function } .
tries to try to call } on a {
adds an object to the list .
shuts down the pools .
creates a new instance of scheduled
sets the subscription to the subscription .
emit the loop .
{
throws an exception if the given {
wraps a { @link throwable } .
flatten the given {
throws an exception if the exception } is thrown . throwable .
adds a new consumer to the list .
removes the specified consumer from the list .
replay the consumer .
/ * in1 on the input stream of the same as a flowable .
{
adds all the elements to this set .
{
{
clears all the resources .
returns the number of resources .
subscribe the specified publisher to the specified publisher .
subscribes the publisher ---
subscribes the specified publisher to the specified publisher .
subscribes the specified {
adds a resource to the list .
returns true if the observer } on the given { @link observable .
returns an observable that returns } to an { @link scalarxmapobservable } . observable } .
creates a new { @link observer .
creates a new {
shuts down the scheduler .
adds a new value to the list .
iterate over all elements to each element .
returns true if the first element .
--------------------------------------------------------------------------------------------
iterate over all elements of this stream .
returns a single single { @code iterable } that emits a single { @code sources . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 . github . github . png = https : // raw . github . com / reactivex / rxjava / images / rx - operators / rx - operators /
returns a single single array } that emits } into a single { @link single element . <p > <img width = 640 height = 640 height = empty src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns a flowable that emits all items that emits the source source source sources . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = flowable src = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx - operators /
returns a single { @code single supplier } that emits the given { @code single } to each element } . <p > <img width = 640 height = 640 height of this single supplier } . < / b > < / reactivex >
returns a single {
returns a single {
returns a single { @code future } into a single single { @code future } that emits the given { @code future } . <p > <img width = 640 height = 640 height = 640 height = https : // raw . github . github . com / reactivex / rxjava / images / rx - operators / reactivex / rx - operators
returns a single future that subscribes } into a { @code timeout } into a { @code timeout . <p > <img width = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns a single future } into a { @code future } that emits } that emits the specified { @code future } . <p > <img width = 640 height = 640 height = 640 src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a single { @code single single } that emits the given source source source } into a single single } . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 / wiki / reactivex / images / rx - operators / rx - operators / rx - operators
returns a flowable that emits the items into a publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = true src = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx -
returns a single {
returns a single timer that emits the specified delay to the specified by the specified delay . <p > <img width = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / b = > <dt > <b > <dt > <dt > <dt > <dt > <dt > <b > <dt > <dt
returns a single { @code single } that emits the given { @link single } . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 305 = 640 height = 640 height height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns a single single function into } into a single resource supplier . <p > <img width = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns a single converter that emits the source } that emits function returns the result . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex /
returns a single single item from this single single item . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 ; color : red > <b > <b > this method = font - size : 18px ; < / b > <dl > <b > <b > <dl > <dt >
returns a single function that emits emits the source function that emits the source function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns a single single cache that emits the supplied by the cache . <p > item . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . com / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns a single flowable into a single flowable . <p > function . <p > by applying the source function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - operators / reactivex / reactivex src = https : // raw . github . com
returns a single delay that emits the specified time in the specified time time . <p > <img width and time . <p > <img width = 640 height = 640 ; color = 640 height = 640 ; < / p > <p > <img width = 640 height = 640 height = font - size : red > <b > <i >
returns a single delay that emits the specified time with the specified delay . <p > <img width = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - time . png alt = > <dl > <dt > <dt
returns a single delay that emits the specified { @code time . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . com / rxjava src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx
returns a single delay that emits the source completable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = > <dt ;
returns a single { @link single } that emits the specified time . <p > <img into a { @link delay . <p > <img width = 640 height = 640 height = 640 ;
returns a single delay that emits the given { @link delay } with the result . <p > <img width = 640 height = 640 height = 640 height = 305 ;
returns a single notification that emits the specified selector that emits the specified selector . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <b > <b > <i > <b > <i >
calls { @code single } that emits the result of items . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a single action from the single single action . <p > <img width = 640 height = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / images = > <dl > <dt > <dl > <dt > <dl > <dt > <b > <dl
returns a single item that emits the single action . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 310 ;
subscribes to the specified single consumer that subscribes the specified consumer . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
removes the specified action from the specified single action . <p > <img width = 640 height = 640 height = 640 height = 640 height = action src = https : // raw . github . com / wiki / rxjava / p >
returns a single item that emits the specified by calling { @code consumer . <p > <img width = 640 height = 640 height = 640 height = 640 height = assembly src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images = https : // raw . github .
calls { @code consumer } . <p > <b > note : < / b > this method appends the values . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font = 640 height = 640 . github = 305 src = https : // raw . github . com / wiki
subscribes to the specified action . <p > { / sup > note : < / tt > <dt > <b > note : < / p >
returns a single single single function } that emits the source function that emits the supplied { @code mapper . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - operators / reactivex / rxjava / rxjava / reactivex = > <b >
returns a maybe function that maps to a single item emitted by applying the maybe to each item . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns an observable that removes all items emitted by applying the specified function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 / reactivex / rxjava / images / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / images
returns a single { @code single items that emits the specified { @code single } that emits the specified by applying the specified { @code lift } . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = single src = https : // raw
returns a single { @code map } that emits the items emitted by applying the specified function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <dt > <dt > <dt > <dt > <b >
returns a single materialize that emits the specified notification to the specified notification . <p > that emits the specified by calling { @link notification } < / p >
returns a single value that emits the given value . <p > <img width = 640 height = 640 height = 640 height = boolean ;
returns a flowable that emits all items into a single by applying the source source function to the other items . <p > function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw src = https : // raw . github . com / wiki
returns a publisher that emits that emits the specified scheduler . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images / rx - operators / rx - operators / rx - operators / images
returns a single single function that emits the specified function that emits the specified by calling { @code function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = rx src = https : // raw . github . com / wiki / reactivex / rxjava / images / rxjava
returns a single single item from the single single single item . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a flowable that emits the items emitted by the source publisher that emits the specified flowable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = repeat ;
returns a single {
returns a single predicate that emits the specified predicate . <p > <img width = 640 height = 640 height = 640 height = 305 src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a single predicate that emits the specified by the given { @code predicate . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 ;
returns a publisher to a single publisher that emits the provided handler that emits the specified publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 = https : 18px ;
returns a source that emits the source consumer . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = error src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators
subscribes to a single consumer that emits the specified consumer . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = observer src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / images
returns a single observer that subscribes the specified observer . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = single ;
returns a single {
returns a single completable that emits the specified source items from this completable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = single ;
returns a single {
returns a single {
returns a completable that emits the specified completable that emits } . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = this = 640 height = 640 ; color = 640 height ;
returns a single future that emits the specified future . <p > a< / sup > to the specified future . <p > <img width = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / rxjava / rxjava / rxjava / images / rx - operators / rx - operators / rx -
removes the specified scheduler from the single scheduler . <p > <img width = 640 height = 640 height = 640 height = this src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators
returns a single single function into a single function that emits the source function to each item . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 ;
creates a new {
creates a new {
starts the buffer .
starts the unbounded .
inserts the specified object to this queue .
{
{
{
returns the {
creates a { @link connectable } .
completes the specified value .
sets the error .
completes the downstream .
returns a publisher into a single publisher that emits the specified sources . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw . com / wiki / rxjava / images / rx - operators . png alt / images / rxjava . png alt = > <dl > <dt > <b >
returns a publisher into a single publisher into a publisher into a single flowable that emits the publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns a flowable that emits all items that emits the specified publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns a publisher that emits a single delay into a single flowable of the source publisher . <p > <img width = 640 height = 640 height = 640 height = array src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx
returns a publisher into a single publisher into a publisher into a single publisher that emits the given publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = font - size : red style = font - size : 24px . github . com / wiki / reactivex / b : < / b >
concatenate a publisher into a single publisher that emits all of items that emits the source into a publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
returns a flowable that emits a flowable that emits the specified source flowable that emits into a flowable = 640 height = 640 height = 640 height = 640 height = assembly src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx
returns a flowable that emits all items emitted by the specified by calling { @link flowable } . flowable () } . <p > <img width = 640 height = 640 height = 640 height = empty src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns a flowable that emits the items emitted by applying the specified supplier . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx -
returns a flowable that emits items that emits the source source iterable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = flowable src = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx alt = >
returns a flowable that emits a flowable of the initial state } that emits the initial state . <p > <b > <dt > note : < / dt > <dd > <dt > <dt > <dt > <dt > <dt > <dt > <dt > <dt > <dt > <dt > <dt > <dt > <dt > <dt > <dt / b :
returns a flowable that emits the specified period emitted by the specified period . <p > <img width = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx
returns a flowable that emits the specified period into a specified period . <p > <img width = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators
returns a flowable that emits the specified period emitted by the specified period . <p > <img width = 640 height = 640 height = 640 height = https : // raw . github . com / wiki ;
returns a flowable that emits the specified error that emits the specified error . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src = 640 ;
returns a flowable that emits the specified number into a flowable that emits the specified period . <p > <img width = 640 height = 640 height = 640 height = custom src = https : // raw . github . com / wiki / rxjava ;
returns a flowable that emits all items into a flowable that emits items . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx -
returns a flowable that emits the items into a publisher that emits a single publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = false ; color = 640 height ; color : red > <b > <i > <b > jcypher< / i > < / b >
returns a flowable that emits the items into a publisher into a publisher . <p > <img width of the publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex /
returns a flowable that emits all items into a publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns a flowable that emits the specified pass into a flowable that emits the specified flowable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = assembly src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx
returns a flowable that emits the specified range of items into a single flowable that emits the specified by the specified range = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = - src = https : // raw . github . com / wiki / reactivex / rxjava
returns a flowable that subscribes into a flowable that emits the specified range . <p > <img width = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx
returns a single sequence that emits the sequence of the specified publisher that emits the specified publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = single src = single ;
returns a single sequence that emits the specified publisher the specified publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx
returns a sequence of items into a publisher of the specified publisher by applying the specified publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 = 640 height ; color : red > <b > <i > <b > <dl > <dt > <b > <i >
returns a flowable that emits the source publisher into a publisher that emits the specified by applying the specified by calling { @link publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font = 640 height = 640 height = flowable src = https : // raw .
returns a flowable that emits the source publisher into a publisher that emits the specified publisher . <p > <img width = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx -
returns a flowable that emits the specified error into a delay . <p > backpressure } with the result . <p > <img width = 640 height = 640 height = 640 height = 640 height . com / wiki / reactivex / rxjava / images / images . com / images / rx - operators / rx - operators / rx - operators
returns a flowable that emits a publisher that emits the specified publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . png alt = font - size : 18px ;
returns a flowable that emits the source resource supplier into a publisher that emits the source publisher that emits the specified by applying the specified function . <p > <img width = 640 height = 640 height = https : // raw . github . github . github . com / wiki / reactivex / rxjava / reactivex / rxjava / images / rx
displays a publisher items into a single items into a publisher to each item emitted by applying the specified publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <b > note : < / b > this method
returns a flowable that emits items into a publisher of the source publisher into a single publisher that is combined into a single publisher . each element is combined into a publisher is combined publisher into a single value . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font - size :
returns a flowable that emits the items emitted by the specified converter . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 = 640 height = 640 height height = 640 height = this src = https : // raw . github . com / wiki / reactivex /
returns a publisher that emits the items emitted by applying the specified scheduler . <p > <img width = 640 height ;
returns an iterable that emits the items emitted by the specified buffer . <p > items emitted by the buffer . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = blocking src = blocking src = https : // raw . github . com / wiki /
returns an iterable that emits the items emitted by applying the source buffer . <p > items into an iterable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height ; color : red > <b > <dl > <dt > <b > <i >
returns a new subscriber that emits the specified items from this list . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images
returns a flowable that emits the items emitted by the source items emitted by the source item . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = new src = https : // raw . github . com / wiki /
returns a flowable that emits the items emitted by the items . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = blocking src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx -
returns a single single items that emits the items emitted by the specified scheduler . <p > <img width = 640 height = 640 height = 640 height = 640 height = blocking src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a single item that emits the items emitted by the specified item . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = blocking ;
returns a future that emits all items emitted by the specified future . <p > function . <p > <img width = 640 height = 640 height = 640 height = 640 height = in ;
subscribes the specified consumer that emits the specified consumer . <p > <img width = 640 height = 640 height = 640 height = 640 height = empty src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images / rxjava / images / rx - operators / rx - operators
subscribes to a consumer . <p > item to the specified consumer . <p > <img width = 640 height = 640 height = 640 height = 640 height = action src = https : // raw . github . com / wiki / rxjava . github . com / wiki / rxjava / images / rx - operators / rx - operators /
subscribes to the specified subscriber that emits the specified by calling { @code subscriber . <p > <img width = 640 height = 640 height = 640 height = 640 height = blocking src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a flowable that emits all items emitted by the specified list . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns a flowable that emits items into a list items emitted items . <p > <img items . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ;
returns a flowable that emits the items emitted by the specified collection . <p > <img width = 640 height = 640 height = 640 height = 640 height = 305 . github ;
returns a flowable that emits all items into a collection into a collection of items . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 305 ; // raw . github = 305 src = https : // raw . github . com / wiki / rxjava / images / rx - operators
returns a flowable that emits the specified list . <p > list . <p > <img width = 640 height = 640 height = 640 height = 640 height = timeskip = 640 height = 640 height ; color = 640 ;
returns a flowable that emits the specified collection into a publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = false src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a flowable that emits the specified error into a specified by calling {
returns a flowable that emits the specified error items emitted by the specified timespan . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx -
returns a flowable that emits the specified timespan the specified timespan the specified collection . <p > <img width = 640 height = 640 height = 640 height = 640 height = this . com / wiki / reactivex src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx -
returns a flowable that emits the specified by a publisher emitted by applying the supplied function . <p > <img width = 640 height = 640 height = 640 height = 640 height = topening ;
returns a flowable that emits the specified publisher into a flowable that emits the specified collection of the specified by applying the specified function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = topening src = https : // raw
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns a flowable that emits items that emits the specified boundary . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height ;
returns a flowable that emits all items into a publisher that emits the specified collection . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . github . github . com / wiki ;
returns a flowable that emits the items emitted by the cache . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = cache src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a flowable that emits the items emitted by the cache . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = this src = this src = rx ;
collects a publisher items that emits the items into a single publisher into a single item that emits that emits the resulting publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 ;
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns a completable that maps the items that have been emitted by applying the provided function . <p > <img width width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font . github . com / wiki / reactivex / rxjava / rx - operators / rx - operators /
returns a completable that maps the source into a single completable that emits the specified function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . github : // raw . github . com / wiki / reactivex / rxjava / wiki
returns a completable that emits the items that emits the source by applying the source function . <p > <img width = 640 height = 640 height = 640 height = 640 height = this ; &lt ; p&gt = 640 ;
concatenate a flowable that emits a publisher of each item emitted by applying the source function . <p > element of this publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ;
concatenate a publisher into a single publisher items that emits the items into a function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 = 640 height = 640 ;
returns a flowable that emits all items into a single flowable into a function that emits the resulting > element = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font = 640 height = 640 height ; color : red > <b > <b > <b > <b > note :
returns a flowable that emits the items emitted by applying the source maybe function returns a function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 = 640 height = 640 height = 640 height ; color = 640 height = font = 305 = 305 src = https : // raw . github
concatenate a publisher items that emits the items that emits the items emitted by applying the source function } to each item . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = flowable / rx - operators /
concatenate a single delay into a single delay of the source publisher by applying the source function . <p > <dt > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 ;
returns a flowable that emits all items into a single single item . <p > item into a single item to the source into a single flowable = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : //
returns a flowable that emits all items into a flowable by applying the source maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height ;
returns a flowable that emits all items that emits the other items are emitted by applying the other items . <p > function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font . github . com / wiki src = https : // raw . github . com / wiki /
returns a single item that emits the items emitted by the specified item . < / p > <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a single flowable that emits the items emitted by the single single item that emits the source publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com /
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx
returns a flowable that emits a flowable that emits the specified timeout . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 ;
returns a flowable that emits the specified delay . <p > <img width = 640 height = 640 height = computation . github . com / wiki ;
returns a flowable that emits the specified delay emitted by the specified delay . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . flowable . com / wiki / a >
returns a flowable that emits the items emitted by applying the specified function that emits the specified publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw . com / wiki / reactivex src = >
returns a flowable that emits the items emitted by this flowable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a flowable that emits the items emitted by the specified selector . <p > height . <img > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 = 640 height = font = 305 = 305 src = https : // raw . github
returns a flowable that emits the items that emits the specified function to each item . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 305 = 640 ;
returns a flowable that emits the specified key emitted by the specified key . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / wiki = > <dl > <dt > <dt > <dt > <i > <dl > <dt > <b > <b >
returns a flowable that emits the items into a function emits a collection that emits the specified key . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 ; color : red style ; color : red > <dt ;
returns a flowable that emits the items emitted by the specified scheduler . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = flowable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns a flowable that emits the specified key emitted by the specified key that emits the source function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 = 640 height ; color : red > <b > <dl > <b > note : < /
returns a flowable that emits the items emitted by the specified predicate . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 &lt ;
returns a flowable that emits the flowable that emits the specified action . <p > <img width = 640 height = 640 height = 640 height = action src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns a flowable that emits all items have been emitted by this flowable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx -
returns a flowable that emits the given action to the specified flowable by the specified flowable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / rxjava / images / rx - operators
returns a flowable that emits the specified action . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = action src = https : // raw . github . com / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns a flowable that emits the specified flowable by applying } function . <p > <img width = 640 height = 640 height = 640 height = 640 height = empty . github . com / wiki / reactivex / reactivex / rxjava / images / rx - operators / rx - operators / images / rx - operators / rx - operators /
subscribes to a flowable function on the specified { @code items } on each item . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = action src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images
returns a flowable that emits the specified notification that have been emitted by the specified in order . <p > notification is called . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = action src = 640 height = 640 height = https : // raw . github . com
returns a flowable that emits the items are emitted by the specified subscriber . <p > <img width = 640 height = 640 height = 640 height = 640 height = empty src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images / rx - operators / rx - operators
calls {
returns a flowable that emits the specified flowable to each item emitted by the next . <p > <img width = 640 height = 640 height = 640 height = 640 height = empty ;
returns a flowable to a flowable that emits the request . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / images = 640 height ;
subscribes to {
returns a flowable that emits the specified flowable . <p > <img width = 640 height = 640 height = 640 height = 640 height = empty src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a flowable that emits the specified element that emits the specified maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = maybe src = https : // raw . github . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns a single flowable that emits the specified index . <p > item . <p > <img width = 640 height = 640 height = 640 height = 640 height = assembly src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
returns a flowable that emits the items emitted by the specified predicate . <p > <img width . <p > <img width = 640 height = 640 height = 640 height = 305 = 640 height = 640 height = font = 640 height = 640 height >
returns the first element that emits the items emitted by the specified special element . <p > function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = maybe src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns a single item that emits the items emitted by the items emitted item . <p > function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 . github . com / wiki / reactivex / rxjava / images / rx - operators / images
returns a single single item that emits the first item emitted by the specified single item . <p > null< = 640 item = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 = 640 height = 640 height ; color : red > <dl > <dt > <b > note : < /
returns a flowable that emits the specified by applying the specified function to each item in the source publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . github . com / wiki / reactivex / rxjava / a >
returns a flowable that emits the items that emits the specified by applying the supplied function to each item . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . com / reactivex / rxjava / images / rx - operators / rx - operators /
returns a flowable that emits the items that emits the items that emits publisher . <p > <img width . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki src = https : // raw . github . com / wiki / reactivex
returns a completable that maps the specified completable that emits the specified function to each item emitted by applying the specified function . <p > <img width = 640 height = 640 height = 640 height = 640 height src = 640 height = 640 height = 640 . github . github . com / wiki / reactivex = 640 src = https :
returns a completable that emits the items that emits the specified completable that emits the specified delay . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . github . png alt = font -
returns a flowable that emits the items emitted by the source function . <p > <img items emitted by the supplied maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / wiki src = https : // raw . github . com /
returns a single flowable that emits the specified by applying the source function emitted by applying the source function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = false src = https : //
returns a flowable that emits the items emitted by the specified function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 305 . github . com / wiki / reactivex / reactivex = 640 height = > <dl > <b > <i > note : < / b > < / b
returns a value that emits the items emitted by the source consumer . <p > <img width = 640 height = 640 height = 640 height = 640 height = on src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images / rx - operators / rx - operators /
returns a publisher that emits all items that emits the specified predicate . <p > <img width = 640 height = 640 height = 640 height = empty src = https : // raw . github . com / wiki / reactivex / rxjava / images / images src = https : red > <dt > <dl > <dl > <dl > <dl >
returns a publisher that emits the specified by applying the specified { @code predicate . <p > <img width = 640 height = 640 height = 640 height = 640 height = empty src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a predicate to each item that emits the specified predicate . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = action src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a flowable that emits the items into a flowable that emits the specified function emits the key emitted by applying the specified key . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . github . github = > <dt ;
returns a flowable that emits the source function into a flowable that emits the source function that emits the source function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font = 640 height = 305 src = https :
returns a flowable that emits the specified by applying the specified function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font = 640 height = 640 height = font - size : 18px ; color : red > <b > <dl > <dt > <dt > <b >
returns a flowable that emits the specified flowable from the flowable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a flowable that emits the items emitted items emitted by the user . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
returns a single boolean items that emits the items emitted by the items . <p > <img width = 640 height = 640 height = 640 height = false src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns a flowable that emits the last element of the last item emitted by the last maybe . <p > <img width = 640 height = 640 height = 640 height = maybe src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx -
returns a single flowable that emits the items emitted by the source single item . <p > <img width = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a flowable that emits all items that emits the specified count of items . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ; color : red > <b > <b > note : < / b >
returns a flowable that emits the items emitted by the specified notification . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height ;
returns a flowable that emits the items into the source publisher . <p > function . <p > . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = this ;
returns a flowable that emits the source items that emits the other than the source publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = flowable src = https : // raw . github . com /
returns a flowable that emits the items emitted by the source maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height ;
returns a flowable that emits the items emitted by applying the specified scheduler . <p > function call . <p > backpressure / code > . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height ;
returns a flowable that emits the items that have been emitted buffer . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 src = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images
returns a flowable that emits the items that emits the specified by the specified by the specified capacity . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns a flowable that emits the items emitted by the specified flowable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns a flowable that emits the items emitted by the specified consumer . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns a flowable that emits the specified function that emits emits the specified by applying the specified by calling { @link flowable / sup > <img width = 640 height . < / reactivex . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height =
returns a flowable that emits the items emitted by the specified flowable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns a flowable that emits all items emitted by the source flowable . <p > <img width = 640 height = 640 height = 640 height = 640 height = this src = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images / rx -
returns a flowable that emits the specified parallelism to the flowable that emits the specified by the specified parallelism . <p > <img width = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki src = https : // raw . github . com / wiki / reactivex / rxjava /
returns a flowable that emits the items emitted by the provided buffer . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / rxjava ;
returns a flowable that emits all items emitted by applying the provided by applying the specified selector . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 ; color : 18px ; color : red > <b > <b > <dt > <b > <i >
returns a flowable that emits the items emitted by applying the buffer . <p > <img width = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns a flowable that emits all items emitted by applying the specified scheduler . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = > <dt ;
returns a publisher that emits the items emitted by the source function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 305 . github . com / wiki ;
returns a publisher that emits the items emitted by applying the specified seed function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw . github . com / wiki ;
returns a publisher that emits the items that emits the items emitted by applying the specified seed . <p > function emits the source function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height =
returns a flowable that emits the items emitted by the source flowable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = long src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns a flowable that emits a flowable that emits the specified times into a flowable that emits . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 ;
returns a flowable that emits the items emitted by the replay emits the items . <p > <img width = 640 height = 640 height = 640 height = 640 height = 305 . github ; < / wiki > <dt > <b > note : < / b > this method appends the values to the existing flowable . < / b >
returns a flowable that emits the specified publisher that emits publisher into a flowable to the resulting publisher . <p > function . <p > <dt > <dt > <dt = 640 height = 640 ; < / tt >
returns a flowable that emits the items emitted by applying the specified selector function to each publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src = 640 ;
returns a flowable that emits the items emitted by the buffer . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a flowable that emits the specified buffer into a flowable } that emits the specified { @code time . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a flowable that emits the specified buffer to the specified time . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 ;
returns a flowable that emits the specified buffer to the specified scheduler . <p > function . <p > <img width = 640 height = 640 height = 640 height = replay src = https : red style = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx
returns a flowable that emits the items that are emitted by the specified flowable } . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx
returns a flowable that emits the specified count into a { @code count . <p > <img width = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / images / rx - operators / rx - operators
returns a flowable that emits the given predicate . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators
returns a subscriber that emits the specified by applying the specified subscriber } . <p > <img width = 640 height ;
returns a {
returns a flowable that emits the items that emits the specified period . <p > <img width = 640 height = 640 height = 640 height = https : // raw . github . com / reactivex / rxjava / images / rxjava / rx - operators / rx - operators / rx - operators / rx - operators / rx - operators /
returns a flowable that emits the items emitted by the specified sampler publisher . <p > <img width = 640 height = 640 height = 640 height = https : // raw . github . github . com / wiki / reactivex / rxjava src = 640 height = > <dl > <dt > <dl > <dl > <dt > <b > <b >
returns a flowable that emits the items emitted by the seed items emitted by the source function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = flowable src = 305 = 305 src =
returns a flowable that emits the specified { @link flowable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx
returns a flowable that emits the items emitted by the specified share . <p > <img width = 640 height = 640 height = 640 height = flowable src = https : // raw . github . com / wiki / rxjava . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns a single maybe that emits the items that have been emitted by the specified maybe maybe . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = maybe src = https : // raw . github . com / wiki /
returns a single flowable that emits the specified single flowable into a single items . <p > <img width = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / images = https : // raw . github . png alt =
returns a flowable that emits the specified count of the specified count of the specified count . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = flowable ;
returns a flowable that emits the specified time items into a flowable that emits the specified by the specified time . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // raw . github . github . github = https : // raw . github . png alt = > <dl > <dt >
returns a flowable that emits a flowable that emits the specified time time . <p > <img width = 640 height = 640 height = 640 height = https : src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators
returns a flowable that emits the specified count of this stream . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a flowable that subscribes into a flowable } emitted by the specified time . <p > <img width = 640 height = 640 height = 640 height = 640 height = false = false src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx -
returns a flowable that emits the specified time emitted by the specified time function emitted by the specified time . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = custom src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx
returns a flowable that emits all items emitted by the specified predicate emitted predicate . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 src = 305 src = https : // raw . github . com / wiki /
returns a flowable that emits all items that emits the natural items . <p > <img width = 640 height = 640 height = 640 height = flowable ; &lt ;
returns a flowable that filters into a comparator into a flowable that emits the given comparator . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
returns a flowable that emits the items emitted by the source iterable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 = 640 height = 640 height = 640 height = font - size : 18px / reactivex / rxjava / images / rx - operators / rx - operators /
returns a flowable that emits the array into a flowable that emits array . <p > backpressure / tt > items . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 . github ;
returns a flowable to a flowable . <p > backpressure / var > . <p > <img width = 640 height = 640 height = 640 height = 640 height = empty src = https : // raw . github . com / wiki / reactivex / rxjava / images / images / rx - operators / rx - operators / rx - operators
subscribes the specified { @link consumer } that emits a { @link consumer } that emits the specified consumer . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . github . com / wiki / reactivex / rxjava /
subscribes the specified scheduler to the specified scheduler . <p > <img width = 640 height = 640 height = 640 height = 640 height = https : // gen - end : initcomponents
returns a subscriber that subscribes all items emitted by the specified subscriber = 640 . <p > <img width = 640 height = 640 height = 640 height = 640 height = 305 = { = { ;
returns a flowable that emits the items that emits the specified flowable to the specified scheduler . <p > <img width = 640 height = 640 height = https : // raw . github . com / reactivex / reactivex / rxjava / images / reactivex src = https : // raw . github . com / rxjava / images / rx - operators
returns a flowable that emits the other publisher that emits the other publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / rxjava ;
returns a completable that emits the items emitted by the specified function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . com / wiki / reactivex / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns a flowable that emits all items emitted by applying the provided by applying the specified function that emits the resulting flowable = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 ;
returns a flowable that emits all items that emits the specified count of items . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font - size : 18px ;
returns a flowable that emits the specified { @code time to the specified { @code time . <p > = 640 by the specified { @code flowable } . <p > <img width = 640 height = https : // raw . github . com / reactivex / rxjava / rxjava / reactivex / reactivex / reactivex / rx - operators / rx -
returns a flowable that emits the specified time emitted by the specified time time . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font = https : // raw . github ;
returns a flowable that emits the items from this flowable that <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = rx src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a flowable that emits the items from the specified by the specified count . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 = > <b > <dt > <dl > <dt > <dt > <dt > <b > <dt ; workers / a } < / dt > <dt > <dd > <dt
returns a flowable that emits the specified time items to the specified time . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = flowable ;
returns a flowable that emits a flowable } that have been emitted until the specified { @code time . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = custom src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx
returns a flowable that emits all items emitted by applying the specified predicate . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height ; < / p > <p > <img width width = 640 height = 305 ; color = 640 height = 305 = https : // raw . github . com
returns a flowable that emits the items emitted by this publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators /
returns a flowable that emits all items emitted by the item emitted by the predicate emitted by applying the specified predicate . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns a flowable that emits the specified error into a flowable } to the specified in the first } . <p > <img width = 640 height = 640 height = 640 height = computation src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx -
returns a {
returns a flowable that emits the specified interval into a specified duration . <p > <img . < / > <p > duration of the specified width = 640 height = 640 height = 640 height = 640 height = 640 ;
returns a flowable that emits the specified error into the } that emits the specified timeout . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators
returns a flowable that emits the items emitted by the specified { @link flowable } to a { @code time } . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = timed src = https : // raw . github . com / wiki / reactivex /
returns a flowable that emits the items emitted by the specified time items emitted by the specified by the specified time . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = timed src = https : // raw . github .
returns a flowable that emits the items emitted by applying the specified function emits the specified publisher emitted by the source publisher publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = font - operators . github . com / wiki / reactivex / rx - operators / rx - operators /
returns a {
returns a flowable that emits the specified timeout to the specified timeout emitted by the specified timeout . <p > <img width = 640 height = 640 height = 640 ;
returns a flowable that emits the items into a publisher that emits the specified timeout . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 305 = 640 height = 640 height = 305 src = https : // raw . github . com
returns a flowable that emits the items emitted by applying the specified time function to each item emitted time emitted by the resulting flowable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = timed src = https : // raw
returns a flowable that emits all items emitted by applying the specified function . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 ;
returns a list items into a publisher that emits items emitted by the specified list . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex /
returns a list of items that emits items items that emits the specified list of this list . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height ; color : src src = > = https : wiki . github . github
returns a publisher that emits the items emitted by the source collection . <p > <img width = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / rxjava . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators /
returns a single map that emits the items that emits the result . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = font = 640 height = font - size : 18px ; color : red > <dt > <dt > <dt > <b > <b >
returns an observable that emits the items emitted by the user . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = observable src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators /
returns a single list that emits all items emitted by the specified list . <p > <img width of the source comparator . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = single src = https : // raw . github . com /
returns a flowable that emits the flowable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators /
returns a flowable that emits the items into a flowable the specified count of the window . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height ; < / wiki ;
returns a flowable that emits the items emitted by the window . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = this src = https : // raw . github . com / wiki / rxjava / images / rx - operators / rx - operators /
returns a flowable that emits the specified window . <p > window . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 ;
returns a flowable that emits the specified window } emitted by the window . <p > <img width = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx
returns a flowable that emits the specified flowable } emitted by the specified timespan . <p > <img width = 640 height = 640 height = 640 height = 640 height = false ;
returns a flowable that emits all items into a publisher that emits the supplied publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 = 640 height ;
returns a flowable that emits the items emitted by applying the given publisher to each item . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = flowable ;
returns a flowable that emits the items emitted by the specified error supplier . <p > <img width = 640 height = 640 height = 640 height = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / images
returns a flowable that emits the items emitted by the specified error supplier . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = https : // raw . github . github . provided . com / wiki / reactivex / rxjava / rx - operators / rx - operators /
returns a flowable that emits the items emitted by applying the source function emits the source function to each item . <p > <dt > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height =
returns a flowable that emits the source publisher items into a single publisher that emits the source publisher is combined into a flowable = 640 by applying the source publisher . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640
{
{
schedules a { @link runnable . scheduled () .
blocks until the consumer has been completed .
completes the request .
creates a new {
inserts the specified array into this list .
{
verifies that the thread is non - blocking .
returns a flowable that emits the items emitted by this flowable of items . <p > <img width = 640 height = 640 height = 640 height = https : // raw src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx
returns a flowable that emits all items emitted by the specified flowable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = schedulers src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators
returns a flowable that emits the specified number of this flowable . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 = 640 height = computation src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx -
returns a flowable that emits the specified timeout emitted by the specified timeout . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 . com / wiki / reactivex / rxjava / images / rx - operators / rx - operators / rx - operators / rx - operators
returns a flowable that emits the specified { @link flowable } that emits the specified { @code timeout . <p > <img width = 640 height = 640 height = 640 height = 640 height = 640 height = 640 height = 640 = > <dt ;
connects to a new flowable .
request a request to the request .
sets the resource at the specified index .
replaces a resource at the specified index .
returns the value of this subscription .
adds a new disposable to the list .
removes the specified publish from the list .
creates a { @link flowable from a { @link callable } that wraps the given { @link flowable } .
returns a new { @link flowable } s { @link flowable of the given } .
creates a new { @link flowable } from the given { @link flowable } .
creates a new {
creates a new {
creates a new { @link flowable } with the given { @link flowable } .
creates a new {
create a new instance .
creates a new {
creates a new instance of {
returns the generic supertype of the given type .
returns a new {
creates a new {
calls {
calls {
creates a { @link converter the specified { @link { @link type } .
returns the next request body . request .
response
returns the next response body .
returns a converter instance of the given {
creates a new jaxb .
creates a new {
creates a new {
creates a new instance of {
parses the given {
creates a new network behavior .
sets the amount of the delay .
sets the error factory .
creates an error response .
calculates the delay of a given time unit .
creates a new {
creates a new { @link {
creates a new {
creates a { @link response } .
process
identify a char type of a char .
return the given char in the given char .
loads a list of a list .
/ * ( non - lexeme .
resets the input reader } .
process
return
forward
removes the given option .
{
fill the next buffer from the reader .
initializes the cursor .
adds a lexeme to the path .
writes the path to the result .
adds a single character to the given index .
returns the next lexeme .
resets the state of this object .
compound
adds a cross lexeme .
adds the given {
removes the tail from the list .
checks if the given {
returns the number of this product in the cell .
returns the weight of the weight .
schedule
disables all the words .
matches the given array of a char array .
matches a char array with the array .
matches a char in the given index .
is
loads the main dict file .
loads all the files from the file .
loads the remote words from the remote location .
get
load
load the quantifier dict dict from the quantifier
this method .
runs the unprivileged .
adds a new lexeme to the list .
returns the first element from the list .
returns the last element from the list .
--------------------------------------------------------------------------------------------
processes the count of hits .
returns true if the scan is need to see if it s count .
adds a lexeme
matches a char array of occurrences of the given array . < / p >
fills a segment in the given array .
creates a new {
returns a map of children .
migrate the given segment .
compares this lexeme to another .
returns the string representation of the lexeme .
appends the given lexeme to the end of this lexeme .
sets the error converter .
sets the error parameters .
logs the token .
sets the skew skew .
sets the jwt granted converter . authorities .
sets the port mappings .
creates the sample data .
sets the algorithm of the secret .
handles the password .
returns the value of the } of the given method .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
encodes the given password .
returns true if the given password matches } .
checks if the version of the version of the version .
disables checks if the spring version is null .
gets the spring version of the spring security version .
returns the id of the given the client .
returns true if the given class supports the given class .
set
sets the subject regex regex .
builds a new instance .
gets the attributes of the given object .
returns the authorization requests for the given request .
logs the audit entry if the audit is needed .
adds a exchange attribute exchange .
gets the consumer .
returns the list of openidattribute to a { @link ax .
gets the authentication user details .
initializes the default login filter .
returns a {
{
/ * ( non - javadoc )
get the configurer server .
returns a {
adds a filter to the list of after the given filter } .
adds a filter to the list of {
adds a filter to the list .
adds a filter at the end of the given filter .
matches a new { @link security } that matches the specified mvc .
gets the default config .
sets the matchers matchers } .
{
retrieves an distinguished .
search for a set of a single attribute .
search for multiple attribute names of the given attribute values .
/ * attribute values from a string .
{
search for a single entry .
builds a { @link search } from a { @link search } is used to create a { @link search } object .
computes the repeating sql sql sql sql sql sql .
lookup the primary keys in the database .
read acls by id .
looks up all the identities for the given identities .
converts the given { @link map } into a { @link acl } .
creates a sid sid .
returns the user roles of the roles .
builds the details of the authentication } . authorities .
sets the { @link oauth2tokenvalidator .
set the { @link client } .
creates a root server definition .
/ * ( non - javadoc )
creates the servlet api filter .
creates the jaas api filter .
parses the intercept urls from the channel .
/ * ( non - javadoc )
selects the imports of the given annotation .
{
/ * ( non - javadoc )
returns a list of sids for the authentication .
creates a new {
/ * ( non - javadoc )
insert the spring security security filter .
registers all filters in the given {
registers a filter for the given filter .
gets the web application context .
returns a set of security dispatcher types .
gets the token for the given series .
registers the public permissions for the given class .
/ * ( non - javadoc )
returns a list of granted authorities .
returns the granted authority .
initializes the default login filter .
{
sets the { @link session } to use { @link session } .
sets the {
returns the invalid session strategy .
returns the {
check if the session is allow to see if the session is a session .
gets the session authentication strategy .
{
handles the authentication .
successful the authentication authentication .
/ * when the authentication authentication .
/ * ( non - denied handler .
creates a new {
creates a new { @link secret } .
create a new { @link secret } .
factory method to create a new { @link cipher cipher .
returns a { @link cipher } .
initializes the cipher with the cipher } .
initializes the cipher cipher .
initializes the cipher .
--------------------------------------------------------------------------------------------
/ * ( non - javadoc )
{
checks if the principal is changed .
authenticate the authentication .
called when the authentication is successful .
this method to unsuccessful the authentication .
/ * ( non - javadoc )
checks if the content of the content length .
gets the parser .
sets the allowed http http http http request .
sets if the url should be encoded .
returns a set of {
sets the default success url .
login
sets the authentication url .
login
updates the authentication defaults .
updates the access defaults .
{
{
creates a { @link oauth2loginconfigurer } to use for the {
--------------------------------------------------------------------------------------------
{
registers the bean definitions .
/ * ( non - javadoc )
maps the password to the password .
creates a new {
sets the jwt validator .
sets the { @link rest .
resolve the argument } .
finds the method annotation for the given annotation .
resolves the given {
creates a default { @link oauth2tokenvalidator } with the given issuer .
{
/ * ( non - javadoc )
extracts the remember me from the request .
creates a successful authentication authentication .
decodes a cookie into a cookie .
encodes a cookie into a string .
{
check if the parameter is requested .
cancels the cookie .
sets the cookie .
/ * ( non - javadoc )
generate a converter from the input stream .
returns a { @link converter } .
{
loads all users from the database .
loads the authorities authorities .
loads the authorities authorities from the given username .
creates a new {
/ * ( non - javadoc )
decide if the given authentication .
/ * ( non - javadoc )
sets the error page .
/ * ( non - javadoc )
resolves the security context .
gets the query string .
create an artifact pattern .
gets the port port port .
returns the principal principal .
resolves an argument .
called when an application event .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new {
creates a new {
creates the authentication manager .
/ * ( non - javadoc )
returns an instance of {
sets the import metadata .
/ * ( non - javadoc )
{
creates a new { @link jwt } with the given { @link map } .
{
/ * ( non - javadoc )
{
sets the exception mappings .
adds a filter to the list of {
builds a new {
/ * ( { .
{
{
{
handles the logout event .
publishes the failure event .
creates a new {
get all config attributes .
sets the authorities as a string .
creates a consumer token that contains the specified { @link consumer } .
builds the provider url .
{
sets the context environment properties .
returns the state of the state of the given exchange .
check if the request match the request .
/ * ( non - javadoc )
sets the claim set .
sets the request entity converter .
resolves the given {
creates a jwt decoder } from a { @link oidc .
/ * ( non - javadoc )
creates a { @link bean .
creates the authentication manager .
{
starts the tag []
/ * ( non - javadoc )
{
adds a user to the user .
adds a user details .
returns a new {
validates that the given url is valid .
generates a digest digest .
splits the given array into a map .
splits a string into a string .
{
finally the finally invocation .
this method .
initializes the authentication .
credentials that the given reason is not found authentication .
gets the user details .
adds the pkce parameters .
{
check if the authentication is authentication .
determines if the request is ticket .
check if the proxy is ticket .
checks if the authentication is authenticated .
check if the request is receptor .
checks if the proxy is configured .
loads users by username by username
finds the required web application context .
find the web application context .
create a new {
creates a security expression that } .
{
gets the mono mono .
returns the id of the given jwk .
sends a redirect to the client .
authenticate the given authentication .
creates a successful authentication .
vote
/ * ( non - javadoc )
/ * ( non - javadoc )
builds a string representation of the given request .
returns the username from the request .
encodes the given string into a string .
returns the user details associated with the specified username .
gets the authentication .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the ldap authorities populator .
get the authorities mapper .
creates a new {
creates a new {
sets the { @link org .
sets the request entity converter .
{
/ * ( non - javadoc )
sets the { @link oauth2accesstokenresponse .
sets the token parameters .
returns the collection of granted groups .
returns a control instance of the control .
asserts that the user has been set .
gets the service url .
load user details .
{
{
creates a { @link oauth2clientconfigurer } to use for the {
gets the url of the mock server .
returns the pre - authenticated principal principal .
loads a user by username
loads the user details from a user .
creates a default request .
removes a new client from the given oauth2authorizedclient .
creates a consumer registration id .
creates a map of the given authentication .
returns a consumer request for the given request .
returns a consumer that returns the given http : put } .
checks if the given authentication has the permission .
/ * ( non - javadoc )
generates a token signature for a token .
concatenate
creates a sub - array of bytes in - memory array .
returns a list of granted authorities .
returns a map .
returns a collection of granted authority .
adds the given value to the collection .
returns the pre - authenticated principal of the given request .
/ * ( non - null value .
adds a security adapter to the list .
{
sets the shared object .
gets the shared object .
adds the given configurer .
gets a list of configurers for a given class .
removes a list of configurers from the list .
removes the configurer from the list of the security .
sets the {
{
returns the object object instance .
{
process the request .
builds the https redirect url for the request .
{
{
checks if the given the role .
returns the roles of the given roles .
sets the subject dn .
{
process the auto - login cookie .
called when the login .
{
attempt to attempt to the user .
attempt to attempt to attempt to attempt to attempt to attempt to attempt to attempt to call .
creates a new {
gets the source authentication .
sets the exit user url .
sets the switch url .
set the switch url .
display the public index
returns a list of contacts contacts .
removes the path from the path .
returns a new bean )
sets the filter
sets the import metadata .
creates a {
{
{
check if the given class supports the given class .
/ * ( non - javadoc )
checks if the url is authorized .
tries to see { @link access } using the access expression .
creates a {
authorize the url authorize using the current url .
get the expression handler .
{
initializes the default login filter .
returns a {
creates a new {
create a new {
creates a persistent {
gets the user details for the user .
sets the authentication converter .
{
sets the mappable to the mappable .
{
gets the { @link j2ee instance .
creates a new { @link j2ee . authentication . authentication . authentication . authentication
writes the request headers
adds a header writer .
disables the frame .
creates a new { @link filter } .
returns the list of writers .
registers the given filter with the given filter .
registers the given filter at the given filter .
registers the given {
returns the order of the given class .
{
returns a collection of a jwt .
sets the parent manager } .
creates a new {
applies the given { @link user to the given configurer .
/ * ( non - javadoc )
{
display
adds a permission page to a contact
adds a permission to the user .
deletes a permission .
returns the default role with the given role .
/ * ( non - javadoc )
creates a new {
creates a new { @link builder } .
{
create a { from a { .
creates a reactive .
creates a new reactive
{
creates the default { @link affirmative } instance .
gets the access decision manager .
creates a { @link filter .
creates a new { @link user object } object .
creates a new { @link user } instance .
creates a new { @link user from a { @link string .
creates a new { @link simp matcher .
creates a { @link { @link simp } that matches the given { @link simp } .
returns the attribute values .
returns the first attribute value associated with the given name .
handles a callback . authentication ) .
encodes a string into a string .
decodes a byte array into a string .
gets cas authentication token .
finds the parameter names of a method .
finds the parameter names of the given parameter name .
finds the parameter name for the given parameter .
adds a contact to the contact .
/ * ( non - javadoc )
sets the pins header .
adds the given pins .
/ * ( non - report .
/ * ( non - javadoc )
adds a secure method .
adds a secure method to the list of registered methods .
adds a secure method .
adds a secure method .
/ * ( non - javadoc )
checks if the given method is a match .
gets the port mapper .
saves the token .
loads the token from the request .
creates a { @link reactive } instance .
{
creates a new { @link manager } for the given { @link string } .
creates a {
creates a new { @link manager } for the specified { @link role } .
/ * ( non - javadoc )
sets the request .
returns the ant matchers .
create a list of mvc matchers } . matcher } for the given the method .
specifies the matchers that the specified by the request .
returns a {
resolves an argument } .
{
authenticate the authentication .
handles an exception .
{
/ * ( non - javadoc )
/ * when the authentication is called .
returns a list of user dns dns .
sets the user dn patterns .
called when an application event .
creates a { @link map .
/ * when the logout is logout .
checks if the given uri is allowed .
checks if the given authentication is allowed .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the pre - authenticated principal for the request .
{
{
returns the random contact .
removes the given pk from the cache .
post
handles the authentication success .
clears the authentication attributes .
get a field from the given class .
get
{
create the service url .
create the redirect url .
sets the hierarchy hierarchy
add reachable to the authority .
gets the set of roles reachable in the authority .
builds the roles map from the roles map .
builds the list of the roles .
generates a byte array .
adds a { @link configurer .
specify the logout success handler .
specify the default logout success } that will be called when the {
returns the logout logout logout .
creates a new { @link filter . filter .
returns the collection of the given target ) .
combine the hash of the given hash and salt the result .
encodes the given { @link byte } into a { @link string } .
checks if the given raw password } .
extracts the prefix of a string .
authenticate
login
logout
/ *
/ * ( non - javadoc )
decide if the specified object from the given object .
checks if the given path is a normalized path .
checks if the filter is valid .
checks if the login page is protected .
registers a { @link throwable } for the given { @link class } .
returns an array of registered types .
determine the cause of the given throwable .
extracts the cause of the given throwable .
returns the first throwable of the given type .
verifies that the given throwable is a } .
returns the list of proxy imports .
registers the access manager .
sets the policy directives .
sets the request entity converter .
sets the additional exception mappings .
create a map of server web exchange .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a collection of {
checks if the given byte array matches the given byte array .
/ * ( non - javadoc )
builds the form parameters .
set the authorization uri for the authorization request .
{
called when a authentication .
saves the exception exception } .
sets the default failure url .
{
sets the hidden inputs for the hidden .
{
loads the user details from the given token .
creates a user details .
creates a new { @link oauth2tokenvalidatorresult instance .
returns the request cache .
builds a full request url .
builds the full request url .
builds the request url .
builds the request url .
checks if the given url is absolute .
creates a list of attribute names .
{
prints a binary permission to a string .
{
converts an identifier to a long .
creates a new {
creates a new { @link builder } instance } instance .
build a run as a run .
{
access
sets the default access handler for the given matcher the given { @link access } .
sets the default authentication entry point } .
gets the access denied handler .
gets the authentication entry point point .
gets the request cache .
creates a map of { @link map } .
create a new { @link acl } .
creates the entries in the database .
creates the object identity .
create or creates or null if it exists .
creates the primary key for the primary to the given sid .
creates the primary key for a given sid .
returns the primary key identity from the given identity .
updates the acl of the given acl .
updates the object identity .
saves the request .
create a new {
sets the list of logout .
creates a new { @link server that matches the given patterns .
matches a {
creates a new {
creates a new {
creates a new {
creates a new {
creates a new {
sets the {
returns the { @link evaluator .
/ * ( non - javadoc )
creates a new { @link password } instance .
/ * ( non - javadoc )
/ * headers .
/ * ( non - javadoc )
obtains the subject from the request .
{
sets the {
creates a new { @link csrf .
ignoring the request matchers .
returns a { @link request matcher .
gets the default access denied handler } .
returns the invalid session strategy .
creates an instance of {
handles the request .
determines the target url .
determines the target url of the target url .
sets the default target url .
sets the target url .
gets the directory with the given id .
gets the pre - authenticated principal principal .
invokes the contact manager .
builds a new dn .
creates a new { @link builder .
/ * ( non - introspection )
get the http security event .
configure the authentication manager .
{
creates a new {
creates the shared shared objects .
/ * ( non - javadoc )
configures the jaas using the configuration .
{
create a new {
resolves a service entry .
resolves the ip address of the service ip address .
resolves the ip address of the given hostname .
resolves the service entry .
prepare the connection .
returns a mono context .
post
destroys all beans .
sets the value of the user .
set the { @link oauth2userservice .
returns a date in a date .
returns the current date as a string .
parses a date from a string .
parses a date in the given value as a long .
update
creates a new instance of the given object .
creates a new method invocation .
create a new instance of a { @link java .
attempt to attempt to attempt to attempt to attempt to attempt the authentication .
set the details of the authentication } .
matches a message types that matches the given message type .
creates a constraint for a given message .
sets the {
returns a { @link constraint } that matches the given matchers .
add a {
creates a {
creates the success authentication .
sets the realm name .
{
sets the authorities authorities by username .
sets the key store .
additional authentication checks if the additional authentication .
sets the { @link password .
{
initialize the subject .
{
{
creates a new { @link user from a user .
creates a new { @link user instance .
creates a new { @link user } instance from a string .
/ * ( non - javadoc )
/ * ( non - javadoc )
finds the annotation of the given method .
returns the security name of the subject .
returns a list of web sphere groups for a user .
changes the password .
creates a new {
sets the name of the group member .
{
<p > decide object .
called when the user .
called when a list of the sessions .
{
{
builds the form parameters .
{
copies the details of the given authentication .
{
called when a session change .
{
returns the list of the given request .
returns a list of filters for the specified url .
tag :: = tag
get the context context .
creates the successful authentication authentication .
called when the change is security .
registers the bean definitions .
closes the given context .
returns the relative name of the given dn .
returns the full dn name for the given distinguished .
sets the jwt granted converter . authorities .
/ * ( non - javadoc )
sets the session attributes of the mock .
sets a session specification .
creates a new {
creates a new { @link form } with the additional configuration .
creates a new { @link form } instance .
returns a new {
returns a new {
create an authentication scheme scheme .
adds the given list of the given list of filters .
adds the given filter to the given filter .
replaces all filters with the given filters .
replaces all filters with the given filter .
object
returns an unmodifiable list of arguments to the list } .
performs a get request .
get
performs a post request .
performs http post request .
performs a put request .
performs a delete request .
performs http delete .
performs a http head .
performs a http head on the given path .
performs a patch request .
performs a patch request .
options
given
returns a http request .
request
performs a http request .
request
creates an authentication scheme .
creates a new {
creates a new {
create a new {
creates a new { @link authentication } instance .
creates a new authentication scheme } for the given { @link authentication } . authentication .
creates a new { @link authentication . authentication . authentication object .
creates a new {
creates an instance of {
creates a new authentication .
resets the state of this object .
sets the ssl ssl ssl .
enable the logging of the request .
store
trust
create a new {
store
trust a trust store to the given a { @link jks } .
proxy
proxy
create a proxy .
prints the specified response .
redirect the given {
returns the default charset for the given content type .
returns the default charset for the given content type .
returns the default charset for the given content type .
returns the default { @link encoder instance } as { @link encoder } .
{
adds the default content charset to the content type .
encodes the given content type as encoder ) .
creates a new { @link jackson1object instance } instance } instance .
creates a new {
creates a new { @link jackson1object instance } that uses a { @link jackson1object } .
creates a new { @link jackson2object instance } that uses a { @link jackson2object } .
{
mock a new { @link rest . assured .
mock a new {
creates a { @link rest .
configures the mvc config .
mock the configuration configuration for the configuration .
create a new {
mock the configuration configuration for the configuration .
construct a configuration configuration .
create a new {
create a new {
create a new {
construct a {
decodes the given content .
clones the given response .
returns a new {
creates a new { @link certificate } that allows to be used to create a new { @link certificate } .
create a new { @link x509hostname } for the given { @link x509hostname } will be used to create a { @link certificate } .
creates a new { @link xml } instance with the specified features .
creates a new { @link xml } instance } instance with the specified in the uri .
creates a new { @link xml } instance .
creates a new { @link xml } instance with the given configuration .
disables the loading configuration .
{
declare
return
returns the object from the client .
get the configuration .
<p >
executes a patch request .
executes the request .
executes the http request .
executes a http request .
override this method to perform a request .
parses the response .
builds the default response handlers .
default implementation of {
set the uri
sets the default headers .
sets the proxy proxy .
sets the {
sets the specified header .
sets the headers to use for the part of the part of this method .
sets the content of the builder .
set the { @link charset } .
returns the default encoders .
sets the interceptors interceptors .
basic
basic
ntlm
ntlm
sets the certificate on the specified key and port .
remove a oauth interceptor to the server .
adds a request to the client .
finds the content type of the given http response .
creates a new { @link headers .
creates a new {
resets the request .
gets a new { @link mock with the given path .
get
post
mock
put
creates a delete request .
delete
head
mock
applies a patch request with the given path and path .
performs a patch request .
creates a new mock mvc .
mock
creates a new { @link mock } for the given uri .
given
creates a new { @link mock } with the given { @link uri } . mvc .
given
creates a { @link mock .
creates a new { @link mock } .
creates a new { @link mock } with credentials .
creates a new { @link mock } .
creates a new { @link mock } with the given processor .
enables the logging of the request .
creates a { @link matcher that matches the given { @link path } .
matches a matcher that matches } with the given path .
matches a matcher that matches } that matches the given path .
creates a { @link matcher } that matches the given path .
sets the content type .
sets the content type .
sets the header header .
builds the {
creates a { @link cookie } that matches the given { @link matcher .
creates a {
creates a {
creates a { @link matcher } .
creates a { @link cookie } .
matches a {
matches the given { @link cookie } that the given { @link matcher } .
creates a { @link detailed } that matches the given { @link matcher } .
returns a {
validates that a header to the expected header .
validates that the given a header .
validates that a cookie is a cookie .
validates that the cookie to the same as a cookie .
validates that a cookie is a cookie is a cookie .
validates that the response is a response .
sets the root path .
append the root path to the response .
validates that the specified matcher .
validates that a body to the given matcher matches the given path .
adds a {
logs a log message .
registers a new parser .
creates a new {
returns a json schema schema } in the given json schema .
creates a {
creates a new {
creates a { @link matcher .
creates a { @link matcher } that matches the given { @link response } .
creates a new { @link matcher } .
returns the entity with the given name .
gets the value of the entity name .
gets the list of entities .
gets the list of the given entity .
creates a new {
creates a new { @link proxy } with the given { @link string .
creates a new { @link proxy } with the given { @link port } .
creates a new { @link proxy } .
creates a new { @link path } that can be used to create } .
creates a {
default
creates a { @link json instance } instance .
creates a new { @link jackson1object } instance } that can be used to create a { @link jackson1object } .
creates a new { @link jackson2object } instance } that can be used to create a { @link jackson2object } .
check if the given uri is a uri .
prints the default {
enables the logging of the log .
find the content type of the request .
creates a http request base } .
creates a new { @link mock } instance .
creates a new {
returns a new { @link control } instance with the specified { @link part } .
returns a default { @link file } with the default configuration configuration .
creates a new {
{
creates a new instance of { @link charset } with the configuration configuration .
creates a new {
sets the { @link mock } .
sets the body of the request .
adds a new session .
adds a mock attribute .
adds a header header .
adds a multi - part part of the mock part .
adds a multi - part part of a multi - part of the request .
adds a multi - part part of the mock part .
adds a multi - part part of the mock part .
sets the session id .
sets the {
adds a result handler to the list of result handlers .
configures the log mvc .
sets the http client config .
creates a new { @link client } instance with the given parameters .
adds a new http request .
creates a new { @link http } instance .
creates a new instance of { @link multipart } instance .
get
gets an int value associated with the given path .
returns the byte value associated with the given path .
gets a short as a short .
gets the float as float .
returns the double value associated with the specified path .
returns the long value associated with the given path .
gets a list of objects .
gets a map by path .
gets the object associated with the given type .
gets an object by path .
return
prints the html code .
creates a new xml configuration } instance } instance with the given configuration configuration .
creates a new instance of this } .
creates a new xml configuration } instance with the specified uri .
create a new xml config } instance } instance with the configuration name .
declare
declare
disables the xml configuration .
create a new instance of {
returns a new {
creates a new {
returns the default charset for the given content type .
returns the default charset for the given content type .
returns the default charset for the given content type .
creates a new { @link decoder } .
returns the default { @link decoder } instance .
{
gets the value of a parameter .
gets a list .
gets a map by path .
gets the object at the given path .
gets the int value associated with the given path .
returns the boolean value as boolean .
returns the char value of the given path .
returns the byte value as a byte value .
gets a short value associated with the given path .
gets a float value associated with the path .
returns the double value associated with the given path .
returns the long value associated with the given path .
gets the string value of the given path .
getuuid
return
renders the xml path .
pretty
sets the body of the request .
sets the body of the request .
adds a cookie .
adds a parameter to the request .
adds a parameter to the request .
adds a query param .
adds a query param .
adds a form param .
adds a form param .
adds a path param .
adds a path params .
sets the key store .
sets the trust store .
adds a header .
adds a multi - part part of a multi - part part of the request .
adds a multi - part part of the multi - part of the request .
sets the session id .
adds a {
configures the log .
sets the proxy .
update a new { @link mock } .
creates a { @link matcher } with the given path .
matches a matcher that matches the given path .
matches a response that matches the given path .
returns a matcher that matches the given path .
creates a { @link filter } that matches the given { @link inputstream } .
creates a new { @link sslconfig } with the given password } .
creates a new { @link sslconfig .
{
creates a new { @link sslconfig .
{
get a cookie by name .
returns the value of the cookie .
creates a new { @link cookies .
create a new { @link provider } instance .
removes all the keys from the list .
index the binding .
{
gets the binding for the given key .
returns a binding of the given { @link binding .
returns true if the given key is injector .
create a new {
converts the given key to a binding .
removes the given binding .
removes a failed jit from the given binding .
returns an immutable set of the internal dependencies .
creates a {
creates a { @link binding } .
create a new { @link binding } for the given key } .
creates a new {
creates a new {
creates a new {
returns a list of parameters from the given list .
/ * ( non - javadoc )
returns all the parameters of all the arguments .
generates the label label for the node . <p >
creates a new {
create a new { @link multibinder } .
creates a new {
build
builds a new { @link module } instance .
binds the given {
binds a logger to the given { @link injector .
creates a new {
returns a new injection point for the given constructor .
returns an instance of {
returns the injection point for the given type of the given the given type .
creates a new injection point for a given method .
returns a set of errors that matches the given a { @link interface () .
returns a set of errors for the given in { @link instance () .
checks if the given member binding } .
returns a set of injection points .
returns true if the given method is eligible .
check if the given method is a method .
initializes the delegate .
{
creates a new { @link provider } instance .
returns a { @link provider } of the given { @link provider } .
generates a new { @link provider } for the given { @link throwable } .
returns a {
returns the type of the given subclass .
returns the provider type of } .
returns a new { @link type .
resolves all types of the given type .
returns the supertype of the given class .
returns the type of the field .
returns the parameter types .
returns a list of the given member of the given method .
returns the return type of the given method .
returns the key of the given key .
returns a { @link type } for the given { @link type .
returns true if the given type is fully qualified .
returns the type to a type of the given type .
returns the class of the given type .
collects all servlet definitions from the given injector .
prepares the built - in converters .
returns the {
creates a new { @link net } .
creates a new {
returns true if the given class has the same version .
checks if the given member is a member is publicly .
create a new {
returns the value of the given injector .
fix the annotations of the given key .
returns the binding annotation for the given annotation .
request a new { @link initializable
validate all the errors .
inject all pending all the errors
create a new instance of this class . < / p >
collects all filter definitions .
/ * ------------------------------------------------------------ request for the request .
resolves the aliases of the given {
returns true if the stage is eager .
creates a new { @link factory } instance that contains a {
creates a new {
normalizes the given path .
decodes the given string .
checks if the given binding is okay .
generates an { @link annotation } for the given annotation .
returns true if the given annotation is equals .
returns the annotation code for the given type .
converts an annotation to a string .
returns true if the given annotation is a retained .
finds the annotation annotation of the given implementation .
finds the annotation annotation of the given annotation .
checks if the given type is a } .
returns the key of the given type .
finds the binding annotation for the given annotation .
returns the {
canonicalize
returns the name of the given key .
initializes the delegate .
returns a { @link provider .
returns the type of a member } .
create a new { @link map } .
create a new { @link map } .
create a new { @link map } .
adds the direct type binding .
get a constructor for the given constructor .
checks if the given interceptor has a scope .
factory method to create a new { @link map } .
returns a { @link map } of { @link map } s .
returns a { @link provider } of the given provider } .
create a new { @link map } for the given { @link binder } .
returns a key for a given key .
creates a new { @link dynamic } object } .
on the given dependency .
adds a source to the list .
{
/ *
sets the { @link binding } annotated { @link binding annotation .
returns a {
returns a message
returns a new { @link module .
/ * ( non - javadoc )
checks if the given type is not not specified .
finds the injection point for a given implementation .
checks if the given constructor has the given constructor .
returns a set of {
removes all assisted from the given set of {
checks if the given implementation is valid .
returns true if the given dependency is injector .
initializes the {
get the binding for the given method .
/ * ( non - javadoc )
checks if the given method can be rethrow to the given exception .
checks that the given reference is not null .
checks if the given condition is valid .
returns a copy of this object .
returns a { @link implementation } with the given key and injector } s } s .
returns a string representation of the given message format and arguments .
convert a object to a object .
create a new {
gets the key for the new item .
find the next filter in the request .
returns true if the given constructor has the given constructor .
gets the internal constructor .
returns a set of { @link dependency dependencies .
/ * ( non - javadoc )
{
returns a set of injection points .
gets the system option .
returns the system option .
/ * ( non - javadoc )
creates a new parameterized type .
creates a new parameterized type } instance } instance with the given { @link type } .
returns a new { @link parameterized } instance } for the given { @link type } .
returns a new { @link type } .
returns a { @link module for the given module .
returns the annotation of a given binder .
binds all properties of the properties file .
binds all properties of the given binder .
creates a new { @link injector .
creates a new {
returns a list of positions in - in - in the stack positions .
returns the stack trace of the stack trace .
returns the line number .
initializes the errors .
creates a new {
transfers a callable to a callable .
creates a callable that wraps request to the given callable .
validates that the given key is null .
{
creates a new { @link encounter } with the given { @link type .
returns a list of all errors .
sets the pipeline pipeline .
creates a new instance of the given type .
returns a new instance .
creates a new instance of the given its type .
creates a new instance of the given type .
returns a { @link key .
creates a key from the given annotation .
returns a new instance .
creates a new { @link key .
creates a new { @link key .
creates a new { @link key .
create a new {
creates a new { @link annotation } for the given annotation .
creates a { @link annotation } for the given { @link annotation } .
returns a list of elements from the given modules .
returns a list of elements that match the given modules .
returns all elements of the given stage .
prune all the stacktrace .
returns a listener for the given binding .
creates a new {
returns the binding source .
returns an { @link list of the aspects .
returns an {
merges the given { @link message () .
returns a string representation of the given message .
formats the given message .
creates a new {
creates a new { @link message } .
creates a new { @link message } .
convert a object to a object
gets the only cause of the given message .
returns a list of module names .
returns the stack trace trace . trace ) .
creates a given {
check if the given class should be skipped .
converts a list of strings to a list of strings .
returns an array of stack .
gets the source object from the given module names .
manage
manage the given domain .
*************************************************************************
converts the given stack trace to an array of elements .
converts the given { @link in into a { @link stack .
pushes a dependency .
pushes the state of the state .
<code > optional .
creates a new { @link initializable } instance .
/ * ------------------------------------------------------------
/ * ( non - context } .
called when the event ) event .
adds a connection event processor .
get the future result of a task .
throws an {
registers a new processor .
registers the default processor for the given processor .
gets the default processor for the given command code .
try to get the url for the given url .
decode a protocol code from the protocol .
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
{
creates a connection pool for the given pool .
removes a task from the pool .
this method .
creates a new executor .
initializes the executor .
shuts down the connection .
/ * ( non - javadoc )
sets the rpc a connection .
{
invokes a sync request .
invokes a request .
invokes a sync .
invokes the specified url .
invokes a connection .
invokes the specified request .
invokes the specified request with the specified request .
invokes the specified url with the specified url .
invokes a connection to the specified callback .
invokes a callback with the specified callback .
create
create
get a connection .
create a new connection .
check if the connection is a connection .
close a connection .
enables the heartbeat .
enable the conn heartbeat .
disables the conn .
disables the given url .
initialize the channel .
closes the connection .
closes the connection .
sets an attribute if the attribute is absent .
/ * ( non - javadoc )
/ *
registers a user processor .
registers a user processor .
sends a response to the client .
dispatches a user processor to the user .
deserializes the request command .
pre - process remoting context .
sends a timeout to the timeout .
logs a debug log message .
/ * ( non - javadoc )
invoke a sync command .
invoke a callback to the given connection .
send a connection to the server .
creates a new {
creates a new {
convert a bit to a byte array .
sets the given { @code int } into a { @code value .
get
adds a reconnect task to the url .
stops the connection .
/ * address .
{
invokes the specified url .
invokes a sync .
invokes a request on the given request .
invokes a callback with the specified request .
invokes a request with the specified callback .
/ * command to remoting command .
{
/ * ( non - javadoc )
close the fresh select connections .
handles a task .
process an exception for a single command .
returns the value associated with the specified key .
deserializes the given mask .
gets the custom serializer .
sets the connection event listener .
logs an info message .
returns true if the request is a request timeout .
gets the user processor .
returns the random connection .
gets the custom serializer .
gets the value associated with the given key .
gets the value associated with the given key .
returns the property associated with the specified key .
calculates the crc32 of the given byte array .
resolves a response object .
converts the given response to a response to a response .
converts a response to a throwable .
detail
creates a new {
prints a connection trace .
factory method to create a new { @link event } .
enables the triggered mode .
starts the service .
parses a remote address of a channel .
returns the local address as a string .
returns the remote address of the given channel .
parse the remote host name .
returns the address of the given channel .
returns the remote port of the given channel .
returns the local port of the given channel .
parses a socket address as a string .
parse a socket address to a string representation .
parses a string .
adds a connection to the connection .
removes the given connection from the connection .
gets the connection .
registers a custom serializer .
returns the custom serializer .
registers a custom serializer .
returns the { @link serializer . serializer .
starts the monitor .
{
/ * ( non - javadoc )
this method to see if the specified url .
/ * ( non - javadoc )
invokes the specified request with the given timeout .
invokes the given request with the given request .
invokes the specified url with the specified url .
invokes the given url with the specified url .
invokes the given request .
invokes a callback with the specified callback .
check if the address is connected to the given url .
check if the given url is connected to the given url .
initializes the water buffer mark .
checks if the given byte array is a byte array .
returns a { @link framedata } instance .
send a batch of draft .
sets the code of the frame .
validates that the given payload .
updates the payload .
check if the handshake is requested .
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
translate a single frame size to a single frame .
generates a final key .
processes the frame continuous and non - fin frame .
processes the binary frame .
logs the runtime exception .
processes the frame text .
processes a frame is fin .
processes the frame is fin .
process the frame closing the frame .
checks if the buffer is valid .
returns the payload from the buffer .
returns the size of the total number of bytes in the buffer .
@throws pageexception
creates a new {
handles the buffer .
translate a handshake http handshake .
translates the handshake handshake .
decode the given {
decode the handshake handshake .
closes the connection due to the wrong handshake .
closes the connection due to the server .
generates a http response .
closes the connection .
{
{
writes the list of the given list of bufs .
resets the connection .
connect to the server .
connects to the server .
returns the port port .
sends a handshake to the handshake .
{
/ * ( non - javadoc )
sets the connection lost .
stops the connection lost .
starts the connection lost .
restart the connection lost .
sends a connection lost .
cancels the connection lost .
*************************************************************************
{
{
*************************************************************************
processes the handshake .
unwrap the handshake .
reads a byte []
reads the remaining remaining data from the input stream .
stops the server .
/ * ( non - null port .
run
reads the additional read from the queue .
accept
this method to the given iterator .
write the given key .
do the server thread and start the server .
checks if the current thread is a single thread .
shuts down the server .
removes a connection from the socket .
returns the socket associated with the given socket . io .
broadcast a collection of bytes .
broadcast a text ---
broadcast
fills the frames to the draft .
transfers bytes from the source buffer to the destination buffer .
*************************************************************************
starts the configuration .
/ *
sets the block to the block .
adds a new {
with
adds a transaction to the block .
adds a transaction to be used to the transaction .
runs the given block .
adds a transaction to the block .
converts the given { @link object } to a { @link seq } .
wraps a list of args into a list of arguments .
<p > get property .
<p > get the value of the <code > java / code > property . < / p >
checks if the <code > { / code > is defined in <code > { / code > .
<pre > preferred ; < / pre >
/ * ( non - javadoc )
<pre > * ( lang ) < / code > { / code > property . < / pre >
configures the configuration .
configures the configuration .
configures the specified key with the specified key with the specified key .
returns a new {
return a bindings that will be used to return a module .
returns a { @link binding } for the { @link play } .
returns a new { @link guiceable } for the given modules .
return a self - overrides with the given modules .
return a { @link self } that the given { @code bindings .
disables the given {
call this request .
calls {
gets the existing file for the given relative path .
returns a binding of { @link annotation of the given scope .
returns a new tuple .
returns a { @link java .
convert the given execution context } to a {
decode a cookie .
returns a copy of this {
returns a list of class names to a list of strings .
returns the stack trace .
/ * [ deutsch ] <p > erzeugt ein } with the given name and unit name . < / p >
/ * [ deutsch ] <p > erzeugt eine .
creates a new {
returns a flow flow into a string .
creates a flow that contains the given callback .
creates a new {
creates a new instance of {
send a trace message .
send a trace message .
send a trace message .
logs a message .
logs a debug .
send a debug message .
send an info message .
send an info message .
send an info message .
send a warn message .
logs a formatted message .
send an error message .
send an error message .
send an error message .
send an error message .
adds a validator validator for the given key .
creates a new instance of the given key .
displays the given id with the given id . <p >
video
returns the accessible method of the given method .
returns the accessible method from the superclass .
returns the matching accessible method for the given name .
/ * ( non - javadoc )
renders a bad request .
handles the forbidden forbidden .
=========
{
logs the error error .
converts a { @link throwable } .
===================================================================
handles a prod .
creates a new { @link file from a list of resources .
builds a new { @link build } instance of the given directory .
creates a new { @link build } from the given { @link jar .
creates a new {
builds a new {
request the marker marker .
handles an index of the request .
consume the data from the given materializer
creates an instance of { @link http } from the given content .
creates a new { @link strict } from a string .
creates a new { @link chunked } .
{
{
creates a new { @link result object } with the given { @link content .
creates a new { @link result } instance } with the given status .
returns the status of the given content into a result .
sends the given status .
returns the status of { @link result as an array of bytes .
sends a { @link inputstream } to the given input } .
returns the status of the given file .
returns the status of the given file .
sends a file to the given file .
returns the status of the given status .
sends a status of { @link file . path } .
returns the status of the given file with the file .
ok
returns an { @link result as a result .
writes the given content to the given file .
ok
creates a result of the given path .
creates a result in the given content .
ok the given result .
created
returns the created { @link result } as a { @link result } .
checks if the given content is created .
created
checks if the given content is created .
created
checks if the given path is created .
bad
encodes a { @link json } .
bad the given content of the given content .
bad a request to a request .
bad
bad a request to a request .
creates a request to a file .
unauthorized
unauthorized
unauthorized
returns the unauthorized result of the given content .
unauthorized
returns the unauthorized result of the given path .
returns the unauthorized file .
payment
sets the required { @link result as a { @link result } .
sets the result of the given content .
returns a result of the given content .
returns a payment required for the given content .
return the required payment for the given content .
return a payment required for the given content .
forbidden
returns a new { @link result } with the content } .
creates a new { @link result with the given { @link file .
creates a result of the given file .
copies the given { @link file } to the given { @link file } .
creates a result of the given content .
performs a new forbidden .
not
checks if the given content is not found .
checks if the given content is not found .
checks if the given content is not found .
checks if the given content is not found .
checks if the given content is not found .
checks if the given path is found } .
not
checks if the given content is not acceptable .
checks if the given file is not acceptable .
checks if the given content is not acceptable .
checks if a file is not acceptable .
checks if the given content is not acceptable .
checks if the given content is not acceptable .
unsupported
unsupported
unsupported
unsupported
unsupported
creates a media type .
unsupported
return
returns a required { @link result } that represents a required { @link json } .
returns the required {
returns a result of the given file .
return the required required file and returns the specified content .
returns a result of the given { @link file .
returns the required result in a file .
too
returns a new { @link result } that wraps the specified encoding .
returns a result in a file .
many requests to many requests that the given a file is too the given filename .
many the given content of the given file .
returns a result in the given content .
many requests to see if the given content of the given path .
request
request
returns a request fields .
request
request
request the header fields .
request the header header .
internal
creates a new { @link result } .
creates a new {
creates a new { @link result .
creates a new { @link result .
creates a new { @link result .
creates a new { @link server .
authentication
creates a { @link result .
returns the required authentication authentication .
returns the authentication authentication authentication .
returns the authentication authentication authentication .
returns the required authentication authentication with the given content .
creates a required authentication with the given content .
moved
creates a new {
creates a new { @link result } instance } contains the given url .
creates a new {
returns a new result that matches the given url .
redirect the given url to the given url .
creates a call to a result .
creates a url to the given url .
creates a new {
creates a url to the given url .
creates a new {
{
finds a user by id .
<code > map&lt ; < / pre >
returns a new {
creates a new {
secure
secure
{
returns a new { @link function1 } with the given connection .
shows the page .
creates a new { @link server } for the given block .
creates a new { @link server .
creates a new {
sets the javascript javascript javascript javascript javascript javascript javascript javascript javascript javascript javascript .
converts the given object to a json node .
creates a json object to a { @link value } .
parses the given string into a json object .
parses the given { @link java .
/ * ( non - javadoc )
create
creates a new {
creates a new {
unwraps the annotations .
gets the list of indirectly present in the given annotation .
creates a relative path to the given path .
returns a canonical url of the given url .
renders the given html name .
returns a list of { @link tuple the given constraints .
returns a list of displayable of the given set of the given annotation .
returns a tuple of the given constraint .
executes the current transaction with the transaction .
schedules a runnable with the transaction .
{
{
{
{
checks if the given class is assignable to the given class .
create a new cron expression from a date .
returns the cron interval of the given date .
creates a new ahcwsclient
creates a new routing dsl
configures the {
overrides the {
renders the given {
adds a session to the session .
flash
pass
creates a new { @link annotation } to the given instance .
returns a { @link binding } for the specified annotation .
converts the given implementation to a binding } .
returns a provider to a binding } .
returns a binding that contains } to a binding } .
converts the given { @link binding to a { @link binding } .
converts the given provider to a {
creates a new instance of {
use {
play
creates a list of the application .
creates a new { @link play } instance from the given { @link classloader } .
creates a new {
create a new { @link play } instance from the given { @link map } .
creates a new {
applies the evolutions to the database .
applies the evolutions to the database .
cleans up the evolutions from the database .
creates a new {
creates a new {
loads the {
loads the guice application .
loads the { @link play .
loads the { @link play } .
creates a new { @link builder } .
encodes the given cookie .
encodes the given cookie into a string .
encodes the given cookies into a string .
returns the entity manager } .
/ *
pushes the current entity to the thread .
parses the json representation of the json object .
say
parses the body of the specified body .
creates a new { @link flow } with the given { @link flow } .
creates a new { @link flow } that applies the given { @link flow .
answers a {
binds the specified request to the request .
binds the specified request to the specified request .
binds the given request to a request .
binds the given request to the request .
binds the given {
binds the specified {
gets the message for the given violation .
binds the specified data to the specified form .
binds the given form } to the given { @link object } .
binds the given { @link form .
converts an array of arguments .
fills the specified value with the specified value .
returns a list of global errors .
returns a list of the errors .
returns the value of the <code > property .
set
creates a new {
sets the given a {
returns the value associated with the given key .
gets a multipart form of a multipart form .
{
fills a dynamic form with the specified value .
returns the key to a dynamic key .
parse
parse
print a string representation of a string .
prints a field in a field .
prints a type of a string .
registers an optional converter .
<p > register .
{
encodes the given cookie } .
encodes a cookie into a list of cookies .
encodes a collection of cookies .
encodes the given cookie into a list of cookies .
decodes the given header .
returns a result of the given } object } .
creates a new { @link inputstream } from the given { @link stream } .
returns the result of the specified request .
returns the result of the specified path .
returns the result of the specified } .
returns the result of the given path .
returns a result of the given file .
returns a result of the specified file .
returns the result of the specified file .
returns the result of the given entity in } .
returns the result of the given request in the } .
selects the list of a list .
returns an immutable {
returns an immutable { @link array } to an array .
returns an immutable seq that } into an { @code seq } .
creates a new { @link acceptor } from the given { @link class .
--------------------------------------------------------------------------------------------
checks if the given member is accessible .
sets whether the given object is accessible .
compare the given constructor .
fit a method to the given method with the method .
compares two parameter types .
returns the primitive promotion cost of the primitive .
returns the total transformation cost of the transformation .
returns the cost transformation cost of the object .
creates the explicit api messages .
returns a string representation of the given key .
returns a string representation of the given keys .
creates a new { @link database .
creates a new { @link database . database } instance .
creates a new { @link database .
creates a new database instance } object } object } instance with the given url .
creates a new database for the given url .
creates a new database in the given name .
returns a database instance } from the database .
returns a copy of { @link database } with the given { @link string } .
returns a copy of {
create
returns a new { @link set } .
creates a new sorter .
sorts a sorted sorted sorted sort order of the array .
merges the sort sort of the given comparator into the sort .
emit the index by signature .
generates a list of methods .
creates a new mixin .
creates a new mixin .
creates a new mixin .
returns the route route for the given route .
creates a new { @link method } .
finds a proxy for a given signature .
/ * ( non - null
/ *
/ * ( non - numeric ) .
loads the state of the given state .
loads the args from the given array } .
emits a field .
generates a signature of this type .
/ * to convert a type .
creates a new {
adds the given type to the type .
transforms the given type to the given type .
/ * process
asserts that the specified type is not equal to be equal to be equal .
/ * nullcmp of a label .
wrap a throwable to the given type .
resolves all the frames in this map .
sets the superclass of this class .
sets the callbacks of the callback .
sets the callback types .
creates a new object .
get all methods for a given class .
filters all constructors that match .
checks if the given class is enhanced .
creates a new {
creates a new {
creates a new {
creates a new instance .
sets the superclass .
loads a field from the provider .
adds a method to the signature .
adds a class to the list of methods .
returns the cardinality of the cardinality .
sets the naming policy .
sets the strategy to use .
creates a new { @link entry
finds all methods in the given method .
resolves the given path to a path .
reads a string from the given path .
sets the http request .
sets the http request .
creates a http request .
creates a http request .
creates a new http request .
creates a post request .
creates a put request .
creates a new http request .
creates a new http request .
creates a head request .
creates a new http request .
creates a new http request .
parse
sets the cookie cookies .
adds an http request .
add a query query .
add a query query .
query
returns the query string .
returns the url url .
returns the url of the url .
sets the authentication authentication .
sets the host header .
opens the given http request .
opens the request .
send a keep alive alive .
send the ---
{
send and receive a response .
creates a new session .
sets the properties of this object .
sets a property .
adds an error .
removes a range from the given label .
returns the length of the exception in the first exception .
puts an exception table into the output stream .
collects all interceptors interceptors .
collects all the filters .
collect all action results .
collects all action runtimes .
resolves the nested properties .
/ * ( non - javadoc )
sets the simple property .
checks if the given property has a index .
returns the index of the index .
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
resets the soft - column .
sets the object reference .
gets the object reference .
looks up an object .
returns the table descriptor .
finds the table descriptor by column ref .
returns the table alias for the given table .
registers a table reference .
adds a parameter .
looks up the entity by name .
lookup the table ref .
defines a parameter .
registers a new hint .
{
{
inject attributes of the request .
/ * (
inject the uploaded files of the request .
{
converts a property name to a column name .
converts a column name to a string .
apply the property name to a column name
converts the given value to a boolean array .
{
prepare the value of the given destination type .
returns a set of all the wrappers in this set .
resolves the given wrapper class . wrapper .
resolves all classes in the given class .
expands the given action .
creates a new wrapper instance .
concatenates the given base path to a file .
convert the separators .
returns the index of the last separator of the given filename .
returns the path of a filename .
splits the given filename into a string .
resolve the home home path .
returns a relative path of the given path .
{
registers a new component .
registers a component .
sets the action that will be used by the action .
adds a component that will be registered with the given component .
start the madvoc
configure the defaults .
registers the madvoc components .
exclude all jars of the class jars . < / p >
sets the jars of the class .
sets the class entries .
exclude all entries from the class .
checks if the given jar file is jars .
scans a jar file .
scans the class path .
prepares the entry name .
scans the given entry in the given class .
returns the signature of the given class .
scans the given url .
scans the given path .
start the jar file .
gets the chars of the specified string .
{
{
returns the default scope type .
get or creates a scope .
sets the given scope for a scope .
parse a message .
process the part of the part .
processes the multipart multipart .
adds a string content to the content .
parse the content id .
parse the given part of the given part .
adds an attachment to the email .
adds an attachment .
adds the attachment info .
encodes a byte array into a char array .
decode a char array to a byte array .
encodes a byte array into a byte array .
encodes a string to a string .
generates a csrf token .
removes the size of the given set .
checks if the given token is valid .
checks if the given token is a valid .
copy
copy
copy
{
{
/ * ( non - javadoc )
resolves a scope .
create a new instance of the given type .
registers a scope for the given scope .
looks up a bean definition .
looks up the bean definition .
lookup an existing bean definition definition for the given name .
creates a new { @link bean .
creates a new { @link beand } .
registers a petite for the given type .
registers a petite for the given type .
registers a bean definition .
registers a bean bean .
removes a bean from the set .
removes a bean from the list .
resolves the bean names for the given type .
registers an array of the given bean .
registers a petite for a given bean .
registers a petite with the given property .
registers a method injection point .
registers a petite methods for the given bean .
registers petite methods methods for the given bean .
registers a petite with the given bean .
registers a petite with the given provider .
iterate over all the names of the given bean .
iterate over all the bean type of the given type .
defines the list of the given map .
define the parameters for the given props .
returns the value of the context .
sets the value of the context .
{ inheritdoc } .
{
{ inheritdoc } .
{
/ * ( non - javadoc )
prints the specified request .
prints an action to the request .
returns the java version of the java version .
pushes a method to the stack .
checks that the given argument is valid .
returns the name of the field name .
returns the name of a method name .
loads a method argument from the given visitor .
loads the special method arguments .
loads the static method arguments from the given visitor .
loads the virtual method arguments .
loads a method argument .
stores a method argument .
checks if the given opcode is a store .
visits a method info .
prepares the return value of the given method .
creates a method signatures for a method name .
visits an element value .
new
stores the given class to the given type .
check if the given method is a method .
looks up the content of a file .
resolves the decorator .
extracts the mime type from the content type .
extracts the encoding of the given content .
extracts the encoding from a content type .
resolves the file name of the given part .
returns true if the given flags is empty .
converts the given value to an array of strings .
checks if the request is a multipart .
resolves the auth username .
resolves the auth bearer token .
sends an authentication authentication .
prepare the download response .
prepare the response .
gets all cookies of a request .
reads a request body from a request .
reads the request body from the stream .
gets the context path .
returns the context path .
stores a context path .
stores the context path .
returns the attribute value associated with the specified name .
returns the value of the given attribute .
returns the value of the request .
sets a scope attribute .
removes a scope attribute from the scope .
check if the given url is a absolute url .
removes the session id from the url .
returns the request parameter .
/ * ( non - get parameter is a get parameter .
prepare the parameters .
checks if the request is a json .
copies params to attributes .
invokes the given body .
renders the given fragment .
renders a body of a string .
sets the scope attribute .
remove a scope attribute from the given scope .
invoke
calls {
creates a new instance of this bean .
inject
rewrite the http request .
{
{
adds a header .
{
{
puts the given profile in the map .
puts a base property .
counts the number of all the number of the profile .
puts a profile property .
returns the profile property .
looks up a value from the given key .
resolves a macros template .
<p > extract .
converts a byte array into a word
decodes a base64 encoded salt string to a base64 encoded string .
checks if the given plaintext string is a valid .
reads the data header .
copies all bytes from this stream to the output stream .
copies the contents of this stream to the specified outputstream .
parse an action definition .
parse an action .
resolves the { @link action .
detect and register the alias .
reads the action interceptors from an action .
reads the action filters .
read the package action path .
read
read method .
parse the method alias .
reads the http method http method .
creates an action runtime action runtime .
{
{
{
convert a value to a boolean .
cast a value to a boolean
cast a value to a boolean
converts an integer to an integer .
cast a value to an integer .
converts the given value to an integer .
convert the given object to a long .
converts the given object to a long .
converts the given value to a long .
convert the given value to a float .
converts the given object to a float .
cast a value to a float .
convert the given value to a double .
cast a value to a double .
cast the given value to a double
convert the given value to a short .
cast a value to a short
cast the given value to a short
converts the given object to a character .
converts the specified value to a character .
cast a value to a char .
converts the given object to a byte array .
converts the given object to a byte array .
converts the given value to a byte array .
converts an array to a long array .
converts the given value to a string .
converts the given object to a class .
convert an integer to an integer .
converts the specified object to an integer .
convert the given object to a bigdecimal .
casts the specified bigdecimal to a bigdecimal .
{
configures the classpath .
registers the given scanner as a consumer .
apply
inject the target object into the proxy object .
visits an annotation .
resolves the real name of the given json name .
resolves the json name of the given real name .
finds the type data for the type of the given class .
lookup the type data data for the given class .
finds the subclass type of the given type .
resolve a json name of the given class .
resolves the real name of the given class .
scan the type for a given class .
check if the file extension matches the file extension .
/ * ( non - javadoc )
copies all bootstrap methods from the given class .
sets the major version name and class name .
puts the constant pool into the constant pool .
puts the bootstrap methods into the output vector .
puts the entry in - memory .
adds an entry to the entry .
adds a constant fieldref .
adds a constant methodref .
adds a constant member reference .
adds a constant member reference .
adds an integer to add an integer or float .
adds a constant integer .
adds a new symbol to the long pool .
adds a long value at the given index .
adds a constant name and type name to the constant .
adds a constant name and type name .
adds the constant utf8 value .
adds the constant utf8 entry .
adds a constant method handle .
adds a constant method handle .
adds a dynamic constant .
adds a dynamic constant .
adds a dynamic reference .
adds a dynamic reference to the constant .
adds a constant utf8reference .
adds a constant utf8reference .
adds a bootstrap method to the list of the bootstrap .
adds a bootstrap method .
adds a merged type to the table .
adds a type of the given entry .
converts the given value to an array of strings .
returns the hash of the given name .
check if the given string is a valid name1 .
clears all the entries from this map .
sets the map of key .
removes the specified index .
get the value associated with the specified name .
returns the entry associated with the specified name .
returns a list of all the values in the map .
{
returns a list of all entries in this map .
increases the number of elements .
{
appends a char to the end of this buffer .
{
{
visit
create the first chain start of the first chain .
create the first chain continue for the given target method .
create a proxy method .
parse
pushes the given field .
register a servlet context .
create the joy .
configure the servlet context .
returns the value at the given index as an integer .
gets a boolean value at the specified index .
reads a byte at the given index at the given index .
returns the value at the given index .
returns the value at the specified index .
returns the string value of the string .
returns the value at the given index as a long .
execute the method .
returns a map of fields that are accessible to the given class .
returns all the field descriptors .
{
{
{
converts a transaction mode to a } .
{
{
{
on serializable property .
read a property from the given property .
checks if the given object contains an element .
compose
compose the email message to the email .
appends a double to this buffer .
/ *
inserts the specified value in the map .
{
{
appends the given buffer to this buffer .
returns an array of primitive ) to an array .
appends a string to the buffer .
appends the given uploadable to this buffer .
appends the given buffer to this buffer .
writes the content to the given writer .
writes the content of this {
writes the progress } to the output stream .
encodes the given text into a string .
gets a string value associated with the given key .
returns the integer associated with the given key .
returns the long value associated with a long .
gets a double as a double .
gets a float value as a float .
gets the value associated with the given key .
gets the value associated with the given key .
returns the binary encoded byte array .
gets the value associated with the given key .
gets a string value associated with the given key .
gets an integer value associated with the given key .
gets a long value associated with the given key .
gets the value associated with the given key .
returns the value associated with the specified key .
gets a boolean value associated with the given key .
gets the value associated with the given key .
returns the value associated with the given key .
returns the binary value associated with the given key .
gets the value associated with the given key .
puts a key / value pair .
inserts a value into the mapping under the mapping of this map replacing any existing key . either key or value may be null .
inserts a key / value pair into the cache .
inserts a null value into the cache .
puts a byte value into the cache .
returns all the folders of the folder .
opens a folder .
get a folder from the folder .
receive an array of messages .
adds the email filter to the filter .
receive email email filter .
receive all messages from the given filter .
updates the email flags .
closes the given folder .
looks up a parameter with the given name .
returns the size of the batch parameter .
parses the given sql string .
returns the alias for the given target pool .
returns the alias of the given object .
validates the action .
add a violation violation .
check if the given tag sequence of the tag name .
gets the raw data as a raw data .
gets the mime data as a download .
sets the target stream .
sets the target class .
sets the target class .
resolves the class name of the class name .
this method to process .
creates a byte array of the class )
define the class loader .
creates a new instance of this class .
dumps the class in the debug folder .
create a new email address } instance .
appends the given { @link email } .
creates a new { @link address } object .
sets the reply to the given {
creates a new email address } .
sets the { @link reply .
appends the given email address .
creates an email address .
cc
{
create a new { @link message } with the given encoding .
creates a new email message } with the given { @link string encoding .
creates a new html message with the given encoding .
adds a new header .
sets the map of headers .
sets the headers of this enumeration .
adds a list of attachments .
sets the attachments of the given list of attachments .
{
sets the embedded attachment .
sets the embedded attachment .
creates an array of email address .
returns the value of a system property .
returns the value of a property as a boolean .
gets the int as an integer .
returns the value as a long .
parses the given content .
parses the given string .
appends the given element to the buffer .
appends the given array at the end of this array to the end of the array .
appends a float buffer to this buffer .
checks if the given type is equal to the given type .
get the resolved parameters .
serializes a key / value to the given path .
looks up the alias .
resolves the given alias .
resolve a result of a result in the path .
resolves the result path string .
returns the last index of the last index in the string .
returns the last index of the first index in the slash .
returns the index of the first occurrence of the string .
removes the last camel camel word from the name .
returns the name of the given name .
encodes the given { @link sim } .
decode the given token .
resolves the table name .
resolves the schema name for the given type .
resolves the given type of the given type .
resolves a column descriptors .
resolve the mapped types of the given class .
check if the given name if required .
/ * ( .
encrypts a block .
/ * mix of a point .
decrypt a block .
/ * demix
schedule
initializes the key with the given key .
{
converts a byte array into a long array .
parse a digit of a digit digit .
/ * ( non - javadoc )
/ * ( non - javadoc )
parses the given email string .
parses a string representation of the given email .
parses an email address from the email address .
builds the patterns for the patterns .
pull the given a internet address .
returns the first comment of the given text .
removes all occurrences of the given string from the given string .
wrap a target to a target class .
returns the path of the method .
reads the contents of a file into a file .
reads the contents of a file .
create a file from a file .
create a zip file .
lists the entries of a zip file .
unzip
adds a file to the zip file .
adds a byte array to the zip file .
returns the field descriptor .
gets the method descriptor .
gets the property descriptor .
returns the default ctor descriptor .
returns the ctor descriptor for the ctor .
sets the request bundle name .
sets the session locale .
returns the session locale .
/ * ( non - javadoc )
filter
{
compute the size of the given attribute .
puts the annotations of the annotation .
computes the size of the parameter annotations .
puts parameter annotations .
adds the given profile .
little - endian or motorola format from byte array .
create a hash to a hash value .
reads the contents of the given input stream .
returns the interfaces of the interfaces .
--------------------------------------------------------------------------------------------
reads the module attributes .
reads a field from a field .
reads a method from the given visitor .
reads the code from the given visitor .
read a label .
creates a label .
creates the debug label .
reads the type of a method annotations .
gets the type of the type of the given type .
reads the type of the target type .
reads the parameter annotations .
reads the values of an element .
reads an element value of an element .
computes the implicit frame of the implicit frame .
reads the stack map .
reads the verification type info .
returns the first attribute offset in - memory .
reads the bootstrap methods from a bootstrap attribute .
reads a attribute from the attribute .
read an int from the stream .
reads a long from the stream .
reads a utf - 8 encoded constant .
reads a utf - 8 encoded string from the pool .
reads a utf - 8 encoded string into a utf - 8 string .
reads a dynamic constant from the given index .
reads an object } from the symbol .
{
{
{
/ * ( non - javadoc )
{
{
returns a list of the class constructors .
returns the ctor descriptor for the given class .
gets the request map .
creates a request map .
returns the current http request .
converts the given value to an array of strings .
converts the given value to an array of strings .
converts the given value to an array of long objects .
/ * ( non - javadoc )
find a file on the file .
find the search path in the path .
find the path to the file .
find the search path in the given url .
finds a file include the given patterns .
finds the file that matches the given patterns .
check if the file is a file .
gets the matching file path .
adds a path to the list .
resets the state of the path .
returns the next file in the list .
finds all the files in the file .
initialize the rules .
{
{
{
resolves the bean wiring for the given a given class type .
resolves the bean type type } .
resolves a bean name .
checks if the given class has a class name .
returns the writer as a writer .
returns the output stream .
returns the type of a class .
returns a type type .
returns the type of a method type .
returns the argument types of the given method descriptor .
returns the return type of a method .
returns the type of the given descriptor .
returns the class name .
returns a constructor descriptor .
gets the descriptor descriptor .
returns the method descriptor .
appends the descriptor to the given string .
returns the size of this field as an integer .
returns the size of the given method and returns the arguments .
returns the opcode opcode opcode opcode .
sets the status of the transaction is rollback .
commits the transaction to the transaction .
commits all the resources that transaction .
rollback all resources that have been resources .
request a resource .
looks up the resource type .
pushes a name of the pushed .
pop the name of the pushed .
write a name .
writes a string to the pool .
writes a character to the given character .
writes a json representation of this character .
sets the { @link lagarto .
converts a string to a hexadecimal } .
check if the given tag is matched .
starts the region .
checks if the given tag is inside the other tag .
check if the given string is containing the given value .
register a pseudo function to the given pseudo function .
looks up the pseudo function for the given name .
{
/ * ( non - javadoc )
{
{
generates the static init block .
generates the proxy constructor .
processes the super methods .
apply a proxy to the given method .
match the given list of method .
finds the index of the specified element in the specified range .
finds the first element in the first element .
finds the last element in the list .
starts a sequence .
returns a formatted string .
/ * ( non - javadoc )
returns a { @link class into a byte [] into a byte array .
replaces the asm instructions of the given class .
returns the attribute prototypes .
adds a new handle .
adds a dynamic constant .
adds a dynamic dynamic method .
adds a new field .
adds a new method .
returns the common super class for the given class .
registers the sql type of this class .
registers the given class with the given type .
finds the sql type of the given class .
looks up the sql type of sql type .
create a new { @link proxy object .
create a new { @link proxy .
create a new { @link proxy } .
returns the number of the transactions .
returns the count of transactions transactions transactions with the number of the given status .
checks if the given thread is associated with the given thread .
removes a transaction from the list .
get the transaction
associate a transaction .
create a new { @link jtx } .
/ * ( non - null .
check if the current scope is new .
/ *
creates a new {
factory method to create a new { @link jtx .
create a new { @link jtx .
checks if the transaction .
creates a new { @link jtx transaction .
create a new {
register a resource manager .
looks up the resource manager .
closes all resource managers .
creates a proxy object .
appends the given method to the given path .
continue
encodes the given {
<p > and pad the given size .
returns the number of the human readable byte array .
convert a value to a pretty string .
convert a string to a string into a string .
converts a string to a camel case .
<p > formats a paragraph in a string . < / p >
converts the tabs to a string
escapes all occurrences of the given string .
unescapes all occurrences of a string . lang .
creates a { @link transaction } object } object } for the given annotation } . parser .
lookup the mixing for a given bean .
returns the bean name .
returns the bean associated with the given bean .
get a bean with the given name .
initializes the bean definition .
registers the bean and registers the bean and registers the bean .
registers the given bean .
invokes a method on the given bean .
creates a new bean .
invoke the given { @link provider > invoke / code > .
registers a bean with the given bean .
sets the bean property .
returns the bean associated with the given name .
shuts down all beans .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > logging level of the logging level .
{ inheritdoc } .
{
resolves the parameters of the given method .
{
gets the value of the macros .
{
{
creates the element node .
{
removes the last child node from the list .
finds a node open tag for the given tag .
fix the tags to matching the given tag } .
{
{
returns the index of the argument argument .
implements the visitor to visit the visitor .
counts the number of arguments that match .
loads the argument type from the given method .
load the argument argument .
create the arguments array .
create the arguments for the arguments .
loads the type of the given method .
target class .
generate an info method .
target method annotation .
target class annotation .
returns a string representation of this object .
saves the given object to the given object .
gets the class name .
calculates the number of bytes in the given size .
iterate over the collection of the given collection .
/ *
join the given array .
replaces all occurrences of the given string with the given sub - string .
replaces all occurrences of the given string with the given sub - substring .
replaces all occurrences of all occurrences of the given string with the given string .
replaces all occurrences of the occurrences of the given string with the given sub - string .
replaces all occurrences of the first occurrence of the string .
replaces all occurrences of the occurrences of the string with the given string .
replaces all occurrences of the occurrences of occurrences of the string .
removes all occurrences of a string .
removes all occurrences of a string .
return
return
true
true
converts a value to a string .
changes the first character of the first character in the first character .
<p > a title of the string .
returns the substring of a string .
checks if the given string is a substring of the given string .
splits a string into a string .
converts a string to a string .
compress the given { @code null } .
<p > returns the index of the first character in the first character in the first .
<p > returns the index of the specified string in the specified string . < / p >
<p > returns the first occurrence of the given string .
returns the last index of the first occurrence of the first index .
returns the index of the last index of the first occurrence of the first occurrence in the array .
returns the last index of the first occurrence of - string in the string .
<p > returns the last index within the specified string .
check if the given string starts with the specified string .
checks if the given string ends with the given char .
counts the number of case in case the number of case is case insensitive .
returns the last index of the given string .
check if two strings are equal .
replaces all occurrences of the given string with the given sub - string .
replaces all occurrences of the given string with the given sub - case .
returns the number of <code > null< / p >
returns the number of the first occurrence of the given string .
<p > checks if the string starts with the given string .
checks if the given string starts with the given string .
<p > if the string < / p >
checks if the given string ends with the specified in case of dest < / p >
returns the index of the first character in the first .
remove all occurrences of the given string .
remove all occurrences of the given string from the given string .
remove all occurrences of the given string .
<p > removes all occurrences of a string .
strips all occurrences of the given char from the given string .
removes all occurrences of the given string .
removes all occurrences of the given strings .
trims the given string .
crop
trims all occurrences of the given string .
trims all occurrences of the given string .
returns the index of a region in the given string .
/ * documented index
joins the given collection of strings using the given separator .
joins the given array of strings .
convert
<p > checks if the specified string is within the specified index .
returns a string representation of a string .
returns the prefix of the given string .
returns the suffix of the given string .
convert the given string to index .
cut the given substring from the given string .
<p > cut prefix .
cut the given a string .
<p > returns a string with the given prefix . < / p >
<p > cut between two strings .
<p > checks if the specified string is a char .
inserts the given string into the string .
concatenates the given string with the given count .
reverses the given string .
returns the common .
finds the common prefix of a string .
return
converts a string to a upper case .
removes all quotes from a string .
converts a byte array to a hex string .
<p > returns the result of the given input { @code null .
returns a byte array as a byte array .
<p > detect a character in a string .
{
appends the given buffer to this buffer .
visit a value .
visits an enum enum .
visit an annotation .
looks up the type of the given type .
registers a type descriptor .
registers an entity descriptor .
registers an entity descriptor .
removes an entity from the database .
create a new entity descriptor .
creates an entity instance of the given class .
sets the target interface .
{
inject the target object into the target object into the target object .
looks up all properties of a given type .
detect the database and configure the database .
try to detect a database .
{
{
/ * ( non - javadoc )
/ * bytes to the response .
/ * ( non - javadoc )
check if the request is isrequestedsessionidfromurl .
returns the encoded encoded name .
returns a byte array representation of this byte array as a byte array .
writes the content of a file .
writes the content of the outputstream .
{ inheritdoc } .
{
implements the visitor to look for a method that implements the class .
appends an argument to the string .
prepend an argument to the given type .
changes the return type of the return type .
/ * ( non - javadoc )
registers the defaults .
registers the given type .
looks up the type of the given type .
convert the given value to the given destination type .
convert the given value to a collection .
selects a list of {
selects a list of selectors from the given collection of selectors .
process all the selected selectors .
selects the first node in the list .
returns a list of nodes that match the given filter .
selects the first node in the list .
walk the given nodes .
walk all descendants of a list of the given result .
walk all the given a css nodes .
select the given node to the list of nodes .
check if the given node .
converts a map into a map .
returns {
read an consistency
sort
page
removes the given sql select select from the sql .
removes the given sql from the sql string .
removes the last order from the sql order .
decode the given html string into a string .
detect the name of the input name in the name of the given entity .
{
{
{
{
resolve all columns in the given class .
finds the column descriptor with the given name .
finds the column descriptor by name .
returns the property name .
returns the name of a column name .
{
{
returns the key value associated with the given object .
appends the given string to the given string to the end of the string .
sets the index of the specified index .
returns the character at the given pos .
expands the capacity of the array .
calculates the length of the array in bytes .
looks up the value of the given bean .
creates a mixing for the given bean definition .
creates the scoped proxy bean .
prepares the step direction .
/ *
initialize all files in - memory files .
checks if the given file is a file .
use
starts the timer .
called when a change is change .
adds an enumeration to the enumeration .
check if the enumeration )
converts the given value to an array of strings .
computes the size of the field info .
puts the field info .
check if the given expression matches the given expression .
appends the given buffer to this } .
create a new { @link target } .
creates a new target object } instance .
<p > creates a new { @link target } .
write a value .
{
parses the decorator of the given content .
parses the given page .
writes a decorated page .
writes the region .
returns true if this node is blank .
{
converts the given value to an array of strings .
runs the process .
{
check if the given path matches the given path .
creates a new output stream .
{
{
{
{
{
append the alias data for the alias .
append column name of the column .
adds a new rule .
checks if the given value matches the given value .
applies the given value to the given value .
processes the includes includes the given rules .
processes the given value .
{
returns the name of the pseudo - class .
{
{
finds the insertion point in the specified insertion .
convert the logging level level to use .
returns true if the given node .
registers an annotation for the given annotation .
binds the annotation config config } to the specified annotation } .
registers new { @link action .
lookup the action config .
sets the action on the action type of the action .
checks if the given element has an action .
sets the system mail properties .
validates that the given value is valid .
checks if the given element is one of the given element .
checks if the given node is a table element .
check if the node is one of the parent node .
finds the last table in the table .
find the foster nodes of a node that the tree .
fix all elements in the tree .
{
registers a session beans .
returns the session map for the given session .
gets the current http session .
/ * ( non - null proxy .
adds a advice clinit .
adds a advice init method .
{
{
process a link .
registers the bundle .
replaces the bundle id of a bundle with the given content id .
convert the given { @link properties } . < / p >
convert the given properties to a writer } object to a writer .
parses the given string .
adds a new <code > section / b .
extracts the profiles from the profiles to the given operator .
adds the given key to the list of profiles .
{
returns the class name to a class .
<p > name / p >
convert a string to a signature .
convert a class to a typeref type .
visits the value of an int .
visits a long value .
visits a float value . < / code .
visits the double value .
visits the value of a byte array .
visits a short value .
visits a boolean value .
visits a char value of the given signature .
adds a list of consumers to the list .
--------------------------------------------------------------------------------------------
creates a new instance of objects .
converts the given value to a single collection .
convert
converts the given collection of objects .
converts the given value to a collection of primitive array .
{
adds a line number .
--------------------------------------------------------------------------------------------
{
adds a forward reference .
resolves the given byte array to the given code .
mark the subroutine to the process .
adds a list of the subroutine .
pushes the successors to the process .
compares two digits .
returns the accent of the given char .
returns the character at the given ndx .
puts a byte array into the buffer .
return a byte array of bytes .
puts a short - bit short .
{
{
puts an int into the buffer .
{
puts a long into the given buffer .
puts a byte array into the buffer .
/ * enlarge
authenticate user via http session .
authenticate the user via the given token .
authenticate the user via the basic user .
{
{
calculates the index of the index .
finds a message with the specified bundle .
finds the default message associated with the specified key .
returns the message associated with the specified key .
finds a resource bundle for the specified bundle ) with the specified locale .
get a bundle bundle .
gets the element at the specified index .
checks if the entity is persistent .
sets the entity id .
stores the entity .
save the database .
update the given entity .
update a property .
update a property with the given name .
finds the entity type .
finds the entities matching the given property and value .
finds the first criteria .
finds the entities .
finds a list of entities in the database .
delete by id
delete an entity from the given id
counts the number of entities in the database .
increase a property .
decrease a property .
finds the related entities in the database .
query all entities in the database .
check if the given node is a new .
check if the given node name is a parent tag .
check if the given node is a lower case .
{
/ * ( non - javadoc )
{
{
gets the current stack trace .
get the stack trace of a given throwable .
returns an array of all the stacks trace .
returns an array of all the exception } objects .
returns the stack trace to a string representation .
convert a throwable to a string .
builds a message .
returns the root cause of the given throwable .
finds a cause of the given cause .
creates a collection of exceptions .
return
wraps the given { @link throwable .
unwraps a { @link throwable .
create a new { @link jsonannotationvalues } object .
registers the given scanner as consumer .
checks if the given class is an anonymous class .
accepts the given action class .
registers the given component .
returns the default class loader .
gets the system class loader .
get the manifest item from the classpath .
gets the classpath item base directory .
get the default classpath for the given class .
get the url of the resource .
get a resource as a stream .
get a resource as a stream .
get the class from the class .
get the input stream from the class .
loads a class from the classpath .
loads a class from the classpath .
adds a new {
finds a child chunk .
check if the given value matches the given value .
gets a multipart request .
parses the request .
converts the given value to the given type .
converts the given value to the given collection } .
invokes the given setter .
returns the value at the specified index .
sets the value of the given index .
returns the index of the specified dot in the specified dot .
extracts the index of the bean .
creates a new instance of the given bean .
extracts the generic component type from the given getter .
converts the given getter to a map .
extracts the type of the given bean .
returns the user session .
stops the http session .
starts the request .
converts a { @link date } to a date .
converts a local date to a { @link calendar } .
formats the given http date .
parses the given http time as a long .
defines a proxy .
adds a new check .
resolves a validation context for the given class .
adds a list of properties .
collects the property checks .
collect all annotation checks .
factory method for creating a new constraint .
copies the default check properties from the annotation .
returns a {
{ inheritdoc } .
{
encodes the given uri .
encodes a byte array into a byte array .
encodes the given string into a string .
encodes the given scheme .
encodes the given string .
encodes the given port into a string .
encodes a string representation of a uri .
encodes the given query .
encodes the given query parameter .
encodes the given fragment .
encodes the given uri .
encodes the http url .
builds a builder .
inspect the map of properties that have been accessible .
adds a property .
creates a new { @link property } .
creates a new { @link descriptor } .
returns all property descriptors .
returns the location of the location .
returns a list of cookies in - memory .
unzip
{
reads the http response from an input stream .
closes the response .
{
{
prints the routes of the routes .
encrypts the given byte array .
decrypt the given encrypted content .
loads a json object from the given map .
generify
sets the value of the given property .
converts a map of key .
execute the method .
convert the given value to an array .
{
sets the default header .
sends a request to the request .
sends a request to the client .
adds the default headers .
reads all cookies from the response .
adds the cookies to the given request .
sends a mail message .
creates a new { @link mime } .
sets the subject subject .
sets the sent date .
sets the email headers .
sets the email address
sets the recipients of the email .
adds the body to the email .
get the base body part .
sets the content of the email .
creates an attachment part of the attachment .
filters the embedded embedded attachments .
adds the list of the email attachments .
{
returns the data field value .
gets the content type .
saves the result set .
initializes the session .
initialize the jdbc jdbc
close the query sets .
close all result sets .
close the query .
{
close the result set .
sets the size of the database .
sets the max rows .
execute
executes the update .
executes the count of time .
{
{
{
get the generated columns .
returns the number of generated by this database .
returns the query string string .
creates an instance of the given address .
returns a { @link internet } to a internet } .
creates an array of email address } s address .
converts an array of {
creates a new instance of the given target class .
creates a new instance of the given aspect .
parses a string representation of a template .
/ * documented enumeration
returns an iterator that removes all elements of the enumeration .
returns a collection of elements from the given iterator .
returns a stream of elements from the given iterator .
returns a stream of elements from the given iterator .
creates a new stream that contains all elements of the given iterable .
{
{
adds a content of the zip file .
adds a folder to the zip .
sets the default wiring .
resolves the wiring mode for the given { @link wiring . wiring () .
prints a message .
get the caller name .
returns the class name of the given class .
sets the serializer to the given path .
adds a serializer to the given class .
exclude the given path to the given excludes .
sets the types of the given type .
<p > exclude types .
{
serialize the given object to a string .
serializes the given object to a char .
clones the given object to a new object .
writes the given object to the given file .
reads the object from a file .
serializes an object to a byte array .
reads a byte array into an object .
{
resolves the db entity descriptors for the given class .
resolves the table names of the table types .
resolve the names of the mapped types of the given class .
creates the names of the table names .
read a column value .
/ * ( non - javadoc )
sets the entities in the cache .
resolves the given class definition .
converts an entity name to a table name .
converts a table name to a table name .
apply the table name .
{
{
checks if the given connection is valid .
{
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the content of the buffer as a char array .
writes the content of the given content .
writes the content of the buffer .
{
{
{
/ * ( non - memory format .
logs the request .
returns the given { @link auth } into a { @link json } .
login
login
logout the user .
returns a set of elements in the given array .
replace
convert a url to a file .
convert the given url to a file .
convert the given url to a container .
create a new directory .
creates a new directory .
touch
copy a file to the given file .
copies the contents of a file .
copies the contents of the given file .
copies all files from the given directory to the destination directory .
moves the file to the file .
moves a file to a directory .
move a directory to the destination directory .
deletes all files in the directory .
reads a file in the given file .
reads the contents of a file .
writes the content of a file to the given file .
out
reads the contents of the given file .
reads the contents of the input stream .
reads a string from a file .
writes a string to a file .
append a string to a file .
writes a string to the given file .
writes the contents of the given input stream to the given output stream .
reads all lines from a file . < / p >
reads the bytes from the given file .
writes a byte array of bytes to the given file .
append a byte array to the given file .
writes the contents of bytes to the given file .
compares the given file1 / sup > to the given file .
check if the given the file .
checks if the given file is newer .
checks if the given file is older .
copies all files from the file to the destination destination .
moves the given file to the destination .
deletes the given file .
check if the given file is ancestor .
returns the parent file of the given file .
check if the given file is a file .
creates a temp directory .
create a temp file .
creates a temporary file .
checks if the given file is binary .
returns an input stream of the given file .
detect the encoding of the given input stream .
checks if the given file exists .
check if the given file .
checks if the given directory is a valid .
checks if the given file is a file .
appends the given buffer to this buffer .
prints a command line .
resolves an action method method .
registers an action action .
registers an action action .
registers an action runtime .
looks up an action .
registers a path alias .
gets the next iteration )
creates a new { @code charsequence } from the given char array .
appends the given short buffer to the buffer .
{
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
replaces the content of the given content .
wraps the given { @link callable () .
runs the given callable and wrap () } .
finds the index of the first occurrence of the first character .
finds the index in the first occurrence of the specified range in the array .
check if the given char array matches the given array .
<p > checks if upper case is upper case .
<p > returns a charsequence that is within the specified charsequence .
returns the position of the given position .
/ *
/ * ( non - commit transaction .
marks a transaction to the given cause .
returns the url of the given class .
encodes the apache - base32 into a string .
/ * ( non - javadoc )
create a new { @link email } .
/ * ( non - javadoc )
{
registers the defaults in - memory .
registers the given type } .
looks up the serializer for the given class .
puts a file in the request .
parses the request stream .
returns the parameter value associated with the given name .
returns the parameter values .
gets a file with the specified name .
gets a list of the request .
/ * ( non - javadoc )
parses the given sql string into the template .
finds the end of a macro in the template .
counts the number of occurrences within the specified macro .
on
builds a query query .
parses the given query .
prepare the header parameter name .
extracts the media type from the content type .
extracts the header parameter from the header .
sets a prepared statement to the given value .
/ * ( non - javadoc )
{
process the action .
converts a node to a string representation .
converts a node to a inner html html html .
/ * ( non - javadoc )
{
{
{
{
{
/ * ( madvoc .
start the web application .
stops the web application .
creates a new {
loads the madvoc params
resolve the madvoc class .
define
resets the path .
/ * ( non - javadoc )
sets the given class to the given class .
replace the type of the given target type .
adds a value to the parser .
adds a class to the list .
parses the given input string into a { @link object .
parses the given string as a list .
parses the given string as a map .
parses the given char array into an array of { @link char array .
parse a value of the given class .
resolves a lazy value of the given value .
skips the next object .
parses a string .
parse the given string .
grows the text in the text .
parses the unicode unicode character .
parses the unquoted string .
parses the number of bytes .
parse the array of array .
parse the object content of the given a class type .
consume a one of the given char .
check if the given target char matches the given character .
syntax
/ * ( non - javadoc )
creates the empty {
/ * ( non - null method .
create the simple method wrapper for the given method .
/ * ( non - javadoc )
resolves the raw type name of the given type .
resolves a reference from the given value .
resolves a reference to the given parameter .
reads a reference from the given annotation .
reads all references from the annotation .
read the annotation value .
builds the default references for the given executable .
build a default reference references for a property .
removes all duplicate names from the bean .
converts the given string to a bean array .
converts a string representation of string array .
runs the joy .
starts the rw .
finds a method with the specified name .
finds a constructor that matches the given class .
checks if all types of the given in the given class .
returns an array of classes from the given an array of objects .
returns true if the given class is a type .
<p > checks if the specified object is an instance of the specified object . < / p >
resolves all interfaces in the given class .
resolve all superclasses of the given class .
get all accessible methods of a class .
returns all supported methods that are supported by the given class .
compares two declarations .
compares two signatures .
compares two parameters .
tries to force the given object .
checks if the given member is public .
creates a new instance of the given class . < / p >
creates a new instance of the given type .
returns true if the given member is assignable } .
gets the superclasses of a class .
checks if the given method is a bean .
get
get
gets the type of a component type .
get the component types of the given type .
convert a type to a string .
read an annotation value .
returns the caller class from the given the stack .
get the caller class .
finds the first enum of the given class .
returns the child class of the given instance .
get a jar file from the given class .
convert
checks if the given class is kotlin .
checks if the given type is an integer type .
sleep the current thread .
sleep the current thread .
waits for the specified object .
join the given thread .
create a new { @link thread } instance .
/ * ( non - javadoc )
visits a parameter .
visits an annotation .
visits a type annotation .
visits a parameter annotation .
visits a frame at the specified type .
visits a field .
visits a method .
invokes a dynamic method .
visits a jump .
sets the specified number of dimensions to the specified descriptor .
visit a catch block .
visits a local variable annotation .
convert the given properties to a writer .
/ * ( non - javadoc )
{
{
moves the next element to the next element .
join the given array of the given array .
joins the given arrays into a new array .
joins the given arrays into a single array .
resizes the given buffer to the given buffer .
resize the given buffer to the given buffer .
appends the given element to the end of the buffer .
removes the given buffer from the given buffer .
removes a boolean array from the given array .
returns an array of all the given buffer into a new buffer .
creates a new array with the given buffer .
returns a string to a string array .
inserts the given array into a string into the array .
inserts the given array into the array at the given offset .
inserts the given array into the array at the end of array .
returns a byte array of bytes to a byte array into a byte array .
returns an array of byte array into a byte array .
/ * ( non - null array of the array .
<p > a character array of the given array into an array .
/ * documented values
/ * documented documented documented values in - endian order .
/ * documented integer
creates an array of an array of the given array .
/ * ( non - long array of long )
returns an array of all the values in the array .
/ * ( non - null values in an array .
returns an array of all the values in the array .
returns the values in an array .
returns an array of all the values in the array .
/ * ( non - null values .
returns an array of values in an array .
returns the index of the first occurrence of the given byte array starting at the specified index .
returns the index of the first occurrence of the given array .
returns the index in the array in the array .
<p > returns the first occurrence in the array .
returns the index in the array in the array .
finds the index in the index .
returns the index of the first occurrence of the array .
returns the index of the first occurrence of the given byte array in the given index .
returns the index of the first occurrence of the first element .
convert an array of strings .
converts the given array into a string .
enables the xhtml mode .
{
parses the given { @link lagarto } .
{
compute all frames of all frames that are not been used to be used by default .
computes the max stack and local edges .
adds a successor to the current basic basic basic basic block .
compute the current basic basic basic basic basic basic basic basic basic basic basic block .
returns the number of the frame in the frame .
visits the end of the frame .
puts the frame in - memory .
puts the abstract types of the frame .
puts a frame type .
check if the method can be used to the same as { @link class () method .
compute the size of the method info .
puts the method info .
collect the prototypes .
{
/ * ( non - specific ) .
returns the list of the lexer .
parse a list of queries from a string
registers the given pseudo class .
looks up the pseudo class for the pseudo - class class .
{
{
closes the given closeable .
copies the contents of the contents of the given reader to the given writer .
copies all bytes from the given input stream to the given output stream .
reads all available bytes from the input stream .
copies the contents of the given input stream to the given output stream .
copies the content of the given input stream to the given input stream .
copies the contents of the given { @link reader } .
copies the contents of the given input stream to the given input stream .
copies the contents of the given reader to the given reader .
creates an input stream that reads .
creates a new { @link writer } .
gets all bean names of the given class .
resolves the properties of a bean .
visit
{
{
resolves a method injection .
read filter config config .
creates the bundle manager .
send a bundle file .
configure the classpath .
registers the given scanner as a consumer .
sets the random digest chars .
creates a bundle file .
looks up a bundle file .
looks up the gzip file .
registers a bundle with the given path .
creates a digest string .
creates a bundle from the bundle } file .
resets the file .
fix the css relative to the given content .
fix the relative url .
update
update
updates a column .
update a column in the database .
deletes an entity .
delete by all the entity .
delete by id .
delete by id .
finds a sql builder for the given entity .
finds a builder for the database .
finds all the entity in the database .
finds a builder .
finds the foreign builder .
find all the builder in the database .
finds by id .
find by id .
count the number of sql .
counts the number of the database .
counts all the number of an object .
adds a column to the database .
creates a table ref name .
/ * ( non - javadoc )
returns the string representation of the given object .
returns the name of the instance .
{
converts the given value to a single array .
converts the given value to an array .
converts the given value to a primitive array .
parses the signature for the given signature .
resolves a set of {
pushes a value to the stack .
{
/ * ( non - javadoc )
serializes the given object to the given object .
checks if the given property type matches the given type .
closes the session .
open the connection for the query .
opens the database .
{
{
{
replaces the action name macros
creates an action definition .
checks if the given path is absolute .
create a properties object from a file .
loads a file from a file .
loads the content of the given properties from the given file .
writes a properties to a file .
writes a properties file to a file .
writes a properties to a file .
writes a properties to a file .
create a new properties object from a string .
loads the properties from the given properties file .
subset
create a new properties object .
loads the properties from the classpath .
gets a property value .
gets a property as a string .
resolves all variables in the given properties .
resolves a property by key .
resolves the scope of the given name .
returns the tx mode for a given method .
registers the given annotations .
reads the transaction annotation from the given method .
adds a selector selector .
{
check if the given node is an element .
check if the given list of results .
/ * perform an unescape operation based on the specified string .
builds a string representation of the packages .
detect the version number of the java version of a java .
clones the given attributes of this node .
removes the parent nodes from the parent .
adds a child node .
adds a child node to the node .
inserts a child node into the specified index .
inserts the given child node into the tree tree .
inserts the given node into the list .
inserts a new child node into the tree .
inserts the given node into the tree tree .
removes a child from the list .
removes all childs from this list .
returns the attribute at the specified index .
checks if the given attribute has the given attribute .
returns the value of the named attribute .
sets the attribute attribute .
returns true if the attribute is containing the specified attribute .
finds a child node with the given name .
returns the child node at the specified index .
gets the child node .
returns the child element at the given index .
returns the first child of this node .
returns the last child of this node .
returns the last child element with the given element .
checks if the child node } .
removes all the children .
initializes the child element nodes .
initializes the sibling names .
initialize the child nodes .
change the owner of a node .
returns the next sibling in the tree .
returns the next sibling element in this node .
gets the next sibling name .
gets the previous sibling .
gets the previous sibling element .
gets the previous sibling name .
returns the content of the text .
append a text content to the node .
returns the html renderer .
returns the inner html html .
visits all children of the given visitor .
gets the css path .
called when the tag .
called when the tag .
define the decora .
{
{
maps the current object to a map .
{
{
gets the mime type .
finds all extensions in the mime types that match the given mime type .
{ inheritdoc } .
{
adds the root package .
adds a root package of the given action .
finds the root package for the given action path .
finds the package path for the given action package .
/ * ( non - javadoc )
commits the transaction .
{
creates a json string representation of the given request .
resolves a validation message .
removes all duplicate names from this list .
{
starts the server .
creates a new props .
applies the given target consumer to the given target consumer .
iterate over all target targets of the given scope .
iterate over all target and out of the target scope .
extracts the values of the parameters .
creates a new targets .
creates an action method .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the string at the given pos .
returns the integer value associated with the given pos .
gets a long value associated with the given number .
returns the double as a double .
gets a float value associated position .
gets a json object at the given pos at position .
gets the json array as a json array .
gets the binary value as byte array .
gets the value associated with the given pos .
adds an enum value to the list .
adds a value to the list .
adds the given array to this array .
removes the element at the specified position .
{
resolves the target request .
checks if the action .
{
process the input start tag .
converts the given value to a string .
resolves the { @link action .
sets the interceptor interceptor interceptor .
resolves the router filter .
check if the given expression matches the given expression .
returns the pseudo function name .
creates the action string .
{ inheritdoc } .
{
resolve a list of {
create a new socks4proxy .
reads the attribute from the attribute .
{
returns the count of the number .
computes the size of the attributes of the symbol .
compute the size of the given symbol .
puts the attributes of the given symbol .
{
returns all action results .
registers the given action .
looks up the given action if it exists .
lookup the action .
creates a new { @link action instance .
<p > checks if the charsequence matches the specified match . < / p >
finds the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the index .
finds the first occurrence of the first occurrence of the first occurrence of the array .
adds a command line .
adds a new command line .
runs the process .
invokes the given listener .
copies the contents of the given frame to the frame .
returns the abstract type of the given object .
returns the abstract type from the descriptor .
sets the input frame from the descriptor .
sets the input frame of the input format .
returns the local type of the output index .
sets the local locals .
pushes the output type to the output stack .
pushes a symbol .
pops elements from the output stack .
pops the given descriptor from the stack .
adds the initialized type .
returns the initialized type of the symbol .
execute a symbol
merges the given symbol into the given table .
--------------------------------------------------------------------------------------------
puts the abstract type of the given symbol .
{
schedules a timer .
visit a module .
visit the host host .
visits a outer class .
visits an annotation .
visits a nest member .
visits an inner class .
visits a field with the specified signature .
/ * ( non - javadoc )
get the thread session .
closes the thread session .
creates the execution array .
invokes the action method .
returns the request body .
calculates the index of the first item in the page .
calculates the index of the first item in the page .
parse a string to an integer .
check if the given value matches the given value .
convert a char array to a byte array .
finds the first occurrence of the first occurrence of the array .
resolves a node name .
resolves the attribute name of the given attribute .
renders an attribute .
loads the file from the file .
loads the content from the given file .
loads the content of the given input stream .
loads the given map from a map .
loads the given map with a map .
loads the system properties .
loads the environment .
loads the classpath from a classpath .
returns the value associated with the specified key .
returns the double value associated with the given key .
returns the value associated with the given key .
sets the value of a profile .
extracts the props from the given map .
extracts the props from the specified map .
extract the sub - props from the given map .
initialize the inner data .
adds an inner map .
resolves the active profiles .
returns a string representation of the profile .
returns a list of the given key .
adds the injection injection point .
adds the set of sip injection to the list of sip point .
adds the injection injection point to the list of methods .
adds the init method points .
adds a destroy method points to the list of methods .
resolves a target class .
inject the given a target object .
inject the target object into the target object .
gets the target wrapper type .
{
finds a field descriptor .
returns the type of the field .
returns the getter for a getter .
creates a getter for the given read .
returns the setter for the setter .
creates a setter for a setter .
resolves the key type .
resolves the component type .
returns the string representation of a string .
serializes an object to a json .
creates a json representation of the given exception .
resolves the http method name from the method name .
<p > checks if the charsequence matches the specified pattern . < / p >
check if the given string matches the given pattern .
<p > returns the first occurrence of the first occurrence of the specified string .
check if the given path matches the given path .
checks if the given rule is matching the given name .
resolves the given class .
resolves the resource loading .
{
/ * ( non - javadoc )
blocks until the thread to wait .
finds the annotation type of the given annotation .
inspect a method parameter .
build the injection point .
gets the given class scopes .
visits the class .
called when a property is transient .
creates a url of the given class loader .
sets the bean .
updates the bean .
loads the property descriptor .
returns the getter for the given property .
returns the setter for the given property .
connect to the database .
adds the given iterator to this iterator .
{
{
{
starts the joy
prints the logo logo .
stops the server .
{
create a new socket .
connects to the server .
returns the sslsocketfactory for the given trust .
get the socket factory for the given connection .
returns a random string with the specified count .
returns a random string with the specified range .
returns a random string with the specified ranges .
parses the given string as a string .
parse a received email content .
parses the given eml from the given file .
parses the given {
factory method to create a new array .
factory method to create a new instance of the given target type .
inject the value of the given object .
convert the given value to a json object .
visits a service .
{ inheritdoc } .
{
/ * ( non - javadoc )
creates a new { @link cache } .
puts the given value into the map .
gets the value of the given key .
{ inheritdoc } .
{
returns the map of methods that are accessible to the given class .
get the method descriptor with the given name .
returns the method descriptor for the given name .
returns all method descriptors .
resolves the ip address of the given hostname .
returns the ip address as an int .
check if the given string is a valid hit .
resolves the host name of the given ip address .
download
download a string from the given url .
download a file from a file .
/ * ( non - javadoc )
checks if the action path .
{
/ * ( non - javadoc )
inject the given action .
called when the request .
connects a new connection .
connects to the server .
prepare
returns the index of the class name .
{
loads the class from the given class .
loads the array of the array .
{
searches the array in the given array .
searches the array in the given comparator in the array .
finds the first element in the element .
removes all the elements of the list .
sets the specified includes .
include
starts the tag .
{
ensures that the length of the length .
appends the given appendable to the given appendable .
registers a component .
registers a component .
registers a component instance .
registers a component instance .
fire an event to all registered existing existing existing listeners .
looks up a component .
/ * ( non - existing component .
request a component .
resolves the base component name .
{
resolves the column db type .
preprocess
resolves the row results .
creates a new { @link mapper mapper .
finds a generated key in the given type .
populate all generated keys .
{
clears all parameters from the database .
sets the null value at the given index .
sets an integer value at the value .
sets an integer at the specified index .
sets a boolean value at the specified index .
sets a long value at the specified index .
sets a byte at the specified index .
sets a double value at the given index .
sets a double value at the specified index .
sets a float at the specified index .
sets a short value at the specified index .
sets the value of the value of the <code > property in the database .
sets a date at the given index .
sets the time at the specified index .
sets the value at the specified timestamp .
sets the bigdecimal value to the database .
sets an integer at the specified value of the specified index .
sets the value at the given index .
sets the value at the given blob .
sets the clob value at the value .
sets the value at the given index .
sets the value at the specified index .
sets the ascii stream to the given input stream .
<p > sets a bean . < / p >
<p > set of parameters .
sets the value of the given object at the given index .
sets the value in the value of the object .
{
sets an object in the database .
sets the objects in the objects .
sets the objects in the array of values .
sets a batch of the specified array .
sets a batch of the specified array .
inserts the given chunk into the chunk .
looks up the entity by name .
lookup the type of the given entity .
finds the column ref .
resolves the table name .
define a parameter .
resolves the given class .
checks if the given value is empty .
appends a missing space to the end of the string .
check if the given value is a } .
{
returns an enumeration of the file parameter names .
get
{
include the given request .
check if the given resource .
check if the given page is named .
check if the absolute absolute absolute absolute .
check if the absolute absolute absolute .
forward the absolute absolute absolute absolute request .
forward the absolute absolute absolute request .
redirect the given request .
redirect the url to the url .
gets the full url .
gets the url of the request .
checks if the request is included in the request .
returns the base request uri .
gets the request uri .
resolves the names of the given method ) of the given method ) .
builds the macros path macros .
create a new {
{
{
prints the beans in the given bean .
{
filter a subject .
filter a message id .
filter the email filter .
filter to filter to the given address .
method allow to filter .
method allow to filter .
filters the flags .
filters the given { @link email .
adds the given { @link date } to the given operator .
adds the given { @link date } to the given operator .
filters the given pattern .
filter a header .
creates a new size with the given size .
filters all email filters .
filters all email filters .
filters the email filter .
concatenates the given {
and
or
encodes a byte array into a string .
decodes a string into a byte array .
converts the given value to a byte array .
/ * ( non - javadoc )
/ * ( non - javadoc )
check if the request is gzip eligible .
adds a violation to the list .
validates the given target object .
validates the given object } is valid .
adds a profile . < / p .
adds the enabled profiles .
checks if the given profiles matches the given profiles .
parse request body body .
returns a {
adds a new date to this date .
returns the sub - date - date ]
sets the value of the fraction .
returns the number of days in - place day .
returns the standard sequence at the given index .
create a new rgb sequence at a sequence .
resets the standard sequence of the given index .
sets the rgb rgb sequence of the sequence .
returns the index at the specified index .
/ * ( non - javadoc )
parses the given tag .
emits a comment .
error
check if the tag name is a appropriate .
generates the hash of the hash .
generates a byte array for the given password .
convert a string to a byte array .
resolves the provider definitions for the given class .
sets the name of the attachment .
sets the data source .
{
sets the content of the attachment .
builds a byte array from the email attachment .
build a file data source .
sets the content id .
resolves the content type .
makes sure that the given signature .
parses a type of a signature .
compute the size of the constant table .
{
decodes the given string .
decodes the given string .
{
checks if the connection provider is valid .
prints the entities in the database .
lookup a method signature for a method signature .
/ * ( non - javadoc )
/ * ( non - javadoc )
implements the visitor to look for all interfaces that have been used .
creates a method signature for a method signature .
convert a string representation of a csv object .
convert a string to a string .
resolves the injection point of the given class .
creates a class reader reader } .
get the cached advice class .
reads the advice data .
encrypts the given string using the given string .
decrypt
sets the logger provider .
gets the logger .
sets the name of the name .
/ * ( action
renders the given action .
create a new action .
creates an action request .
{
check if the bean is destroyable .
registers the given bean .
destroys the bean .
{
creates the session properties .
/ * ( non - email messages .
returns a copy of the buffers of the buffers .
main method .
allocates a new { @link counter } .
main method .
creates a new { @link fragment } with the given { @link buffer } .
prints an error message .
prints the rate rate .
maps the given { @link file } to the given { @link file } .
closes the archive .
blocks until the current work .
returns the number of work .
computes the position of the current term .
inserts the specified number of this buffer at the buffer .
{
adds a new position to the buffer } . offer .
adds the specified number of bytes to the buffer } .
{
tries to claim the given number of the buffer .
appends a padding to the buffer .
sets the given channel .
closes the archive .
connects to the server .
connects to a connection .
returns the error response .
checks if the error response is complete .
adds a recorded publication publication .
adds a recorded exclusive publication publication .
starts the recording recording .
stops the given stream .
stops the session .
stops the archive .
starts the archive .
stops the archive .
send a subscription to the subscription .
returns the number of descriptors in the specified record .
returns the number of recordings for a uri .
returns the list of the specified by the given recording id .
returns the recording position of the archive .
finds the last matching matching the given channel .
blocks until the recording to the given position .
lists all recording subscriptions for a given channel .
dumps the contents of the given buffer .
event
event
creates a new { @link fragment } from the given { @link fragment } .
returns a new { @link status } for a { @code status } .
sends a channel indicator } to the given channel .
creates a new { @link status } from a { @link counters the { @link status .
limit the number of bytes to the buffer .
appends the contents of bytes to this buffer .
returns the number of assembler ) associated with the given fragment .
maps the given aeron to a { @link aeron } to the given { @link aeron } .
called when the fragment is received a fragment .
returns a map of all streams } .
prints a snapshot of the given key .
generates a new optimal delay .
called when the status )
/ * ( non - javadoc )
resets the record .
reads the number of bytes from the buffer .
creates a new { @link buffer } object .
puts a key / key } into the counter to the given buffer .
puts a { @link counter } .
returns the number of images from the fragment .
returns the number of the specified fragment .
returns the number of images in the block .
returns the number of bytes from the given block .
returns an image by id .
applies the given image to each image .
launch a media driver .
checks if the original channel contains the original channel .
refresh the catalog of the catalog .
claim the given frame ) to } to the given { @link buffer } .
appends a unfragmented to the buffer .
appends a message to the buffer .
appends a message to the buffer .
connect to a response .
connects to connect to the response .
closes a session .
starts the recording recording .
stops the recording recording .
stops the recording recording .
send a replay request to the given { @link channel .
stops the replay .
returns true if the correlation id .
checks if a list of a uri is recordings .
list the recording the recording is recording .
this method to the specified channel .
gets the recording position of the given recording .
truncate the recording of the given recording .
get the stop position of the given recording .
finds the last matching matching the given stream .
lists all recording subscriptions .
parses the given { @link string .
returns a remote address of a remote address .
check if the given udp matches the given tag .
returns a new { @link socket } .
returns the description of the multicast .
closes all subscriptions .
adds a subscriber to the subscription .
removes the subscriber from the subscription .
called when the gap .
adds a destination .
/ * rebuild the position in the loss ) .
inserts a packet in the given buffer .
checks if the given activity has the end of the given image .
sends the pending status message to the change .
process the pending loss .
initiates the number of the image .
called when a measurement .
called when a time event .
creates a new { @link counters } that reads the counters from the counters .
finds the toggle counter that matches the specified counters .
puts a key / value .
returns the channel tag .
returns the entity tag .
compute the initial position of the given term .
parses the given channel } into } into a { @code uri } .
adds a session id .
gets the tag value .
/ * ( non - null .
appends a padding to the end of this buffer .
appends a message to the buffer .
appends a message to the buffer .
updates the limit of the publisher .
filter by subnet by subnet prefix .
allocate a new { @link bytebuffer } with the given { @link byte .
allocates a new { @link buffer } .
returns the label name for the name .
scans the number of availability for the given availability .
clears the channel .
validates the channel is valid .
sets the prefix prefix .
sets the media uri .
sets the control mode .
sets the ttl ttl .
sets the uri to use for the given mtu .
sets the term length of the channel .
sets the term offset .
adds the linger to the given linger .
sets the initial position of the given term .
builds a string representation of this object . <p >
sends an error to the client .
opens the datagram channel .
closes the datagram .
checks if the given frame is valid .
/ * ( non - javadoc )
called when the delay
called when a retransmit .
/ * (
resets the given correlation .
called when the fragment is received a fragment .
returns the status of the given status .
allocates a new { @link counter } with the given { @link channel } .
called when a fragment ) .
resets the vector } to a new buffer .
{
computes the length of the given vectors .
returns the length of the producer window in the number of bytes .
creates a new { @link idle } instance for the given strategy .
send a { @link channel } to the { @link channel } .
creates a new { @link receive } that contains the same as a { @link receive () } .
returns a {
returns a {
creates a {
validates that the given number of the mtu .
returns a new {
validates that the socket buffer .
validates that the page size is valid .
validates that the session id is valid .
validates that the unblock timeout is valid .
sets the error code .
returns a set of enabled cluster event codes for a cluster .
returns a set of enabled archive event codes .
returns a set of enabled driver codes .
resets the state of this object .
parses a string array of the given string .
encodes the given cluster into a string .
adds a member status of the member .
closes all the publications .
adds a member status of a member .
adds all cluster members of the cluster .
checks if the given cluster has active .
computes the quorum position of the cluster .
resets all log positions of the cluster .
checks if the given cluster have the given position .
fires a candidate candidate .
returns true if the cluster has won t been won t have a full count .
returns true if the given cluster has the given a canvass .
checks if the given cluster has the majority .
determines the member of the member .
validates that the given a member is valid .
returns true if the given member are same as the same endpoint .
checks if the given cluster is unanimous .
checks if the given cluster is a quorum candidate is quorum } is a cluster .
compares two log .
compares two {
checks if the given member is not not duplicate .
finds the index of the member in the cluster .
finds the member of the given id .
adds a new member .
removes a member from the given cluster .
returns the high member id of the given cluster .
returns a string representation of the given cluster .
called when a receiver .
unblock the given { @link status } .
map the existing cnc file to the file .
checks if the given directory is active .
checks if the driver is active .
checks if the driver is active .
request a driver the given directory .
save
save the error log to the error .
returns the length of the frame length of a frame .
calculates the length of the given buffer is ordered by the given term .
writes the frame type in the given term .
puts the flags in the given buffer .
writes the offset of the offset to the term .
puts a frame id to the given buffer .
registers the given { @link network .
sends a datagram to the buffer .
finds the counter id by recording recording id in the id .
finds the counter id by session id .
returns the recording id from the recording id .
returns the source identity identity from the given counter .
checks if the given counter is active .
parses an ip address sequence } into a { @link address } . address .
called when the status of the status of a status .
scans the gap for a gap for a gap .
launch a new { @link consensus } .
returns a long representation of this receiver .
create a receiver
returns the specific application specific feedback .
sets the specific application specific feedback .
reloads the file .
returns the last term id in the list .
finds the last term in the list .
returns the term entry for the given term .
creates a new {
creates a new { @link recovery .
appends a term to the cluster .
appends a snapshot of a snapshot .
commits the log position at the given position .
moves the specified entry at the entry .
connects to a aeron .
connects to a connection .
closes the session .
returns the specified number of the specified offset .
{
sends the keep alive to the cluster .
called when a leader .
unblock the given buffers to the given term .
returns a channel channel .
sets the channel to the image .
checks that the given term length is valid .
checks if the given page size is valid .
cas active term count .
computes the position of the given term id .
computes the log length of the given a file size .
stores the default frame header .
apply the default header to the buffer .
rotate the given term at the given id .
initialise the tail of term id .
returns the number of the specified { @code tail .
puts the raw tail of the given { @link buffer .
calculates the given tail of - tail of the given } .
get the number of the number of the given metadata .
cas the raw tail .
main method .
registers a new token buffer to the buffer .
allocate a new { @link counter } .
finds the counter id for the counter .
returns the log position of the given counter .
check if the given counter has the given counter .
returns the id of the snapshot recording for the given counter .
converts a short array to a char array .
creates a new {
inserts the specified number of bytes to the buffer .
add a channel to the buffer .
tries to fill the gap of the gap .
reads the contents of bytes from a buffer .
writes the contents of bytes to the given buffer .
increments the number of this buffer .
wraps the given {
puts the given buffer into this buffer } .
{
abort the frame .
main method .
launch a new { @link media } .
closes the resolution .
reads the number of bytes from the fragment .
returns the controlled number of bytes ) .
returns the number of bytes ) from the number of the given position .
returns the number of bytes from the block .
returns the number of bytes from the given { @code limit } .
returns the position of the frame in the frame .
sets the given channel .
create a new { @link publication } .
create a new { @link log } .
allocates a new { @link counter } .
finds the counter id in the given service id .
returns a map of all the publisher .
prints a stream to a stream .
scans the given number of the given { @code position } and returns the result in the given buffer .
adds the specified number of the given buffer to the given buffer .
computes the given number of bytes to the given buffer .
tries to claim the given number of bytes .
scans the frame in the specified buffer .
main method .
allocates a new { @link counter } .
connects to a aeron .
prints all the counters in the counters .
adds a subscription to the subscription .
adds a new counter to the specified type .
create a new {
close this method .
dispatches a descriptor to a } .
inserts the given packet into the given buffer .
creates a new { @link capacity } with the number of { @code slabs } and { @code target } .
adds a slab to the list .
writes the {
resets the state of this slab .
set a byte at the specified index .
adds a new statistics to the list of pages .
checks if the given comparator is descending .
initializes the page from the page .
initializes the page from the page .
/ * ------------------------------------------------------------
sets the requested projection to the given schema .
sets the avro read schema .
sets the avro data supplier .
/ * ( non - javadoc )
calculates the row ranges for a given filter .
sets the thrift class .
converts an array of { @link group to a { @link group } .
converts struct type of struct into a group .
converts a map of {
expands the given glob pattern with the given glob pattern .
creates a single { @link row } .
creates a new {
returns a union of the ranges .
computes the intersection of the intersection between two ranges .
adds the given range to the range .
convert a long value to an int .
parses a string representation of a string .
annotate a message .
ends the end of the previous bit .
/ * ( non - javadoc )
returns a filter that matches the given predicate .
returns a filter that matches the given predicate .
reads all footers in a parallel file .
reads all footers files from the given configuration file .
reads all the list of the given configuration file .
reads all footers in a parallel file .
reads all footers in the given configuration file .
reads a list of { @link configuration } .
reads all footers from the given configuration file .
read the list of the summary } .
read a { @link footer .
read a { @link parquet } from a { @link configuration file .
read a { @link parquet } from the given { @link configuration } .
reads a footer from the given input file .
open a new { @link parquet } .
open a new { @link parquet } .
reads the next row group .
reads the next filtered row .
gets the next dictionary reader .
reads a dictionary from a column .
adds a writer .
removes the given writer .
update the allocation allocation .
registers a scale call to the given call .
starts the {
starts the block .
start a column .
writes the dictionary page .
writes the data page .
writes a {
{
writes a {
ends the end column .
ends the end of the block .
copies the contents of the input stream to the given output stream .
serialize the end of the file .
merges the metadata files in a list of the given list of files into } into a new one .
writes the given { @link list } .
writes the metadata of a } .
writes the given {
merges the given {
merges the given {
merges the given { @link message with the { @link message } .
reads the value of the page .
checks if the given schema is null .
merges the given schemas into a new schema .
merges two {
merges the given {
returns a schema of the given schema .
merge two only only .
returns the { @link schema } .
creates a new { @link schema } instance .
return
{
/ * ( non - javadoc )
make a string to a string .
create a new instance of thrift meta meta - meta - meta - data .
creates a new instance of {
returns the thrift class to a map .
/ * ( non - javadoc )
{
{
finalize the column chunk .
writes the page .
parses the given list of a list of columns .
check if the given path matches the given path .
ends the end message .
starts a field in the specified index .
end
start
ends the end group .
adds a binary value .
/ * ( non - javadoc )
returns a { @link comparator .
{
------------------------------------------------------------------------
unpack a mini block from the mini block .
merge
creates a { @link logical } to a { @link logical } .
{
{
checks that the given argument is valid .
checks that the given object is a valid .
/ * ( non - javadoc )
checks if the enum type is an enum type .
gets the schema for the given message .
initialize the context .
initialize the context .
{
calculates the bit widths for a delta buffer .
filters the given { @link record } and returns a given { @link unbound .
/ * ( non - javadoc )
creates a new { @link column } instance from a { @link column .
creates a { @link unbound } that filters the given { @link filter } .
throws a {
returns an stats based on a primitive type of a primitive } .
creates a { @link statistics .
returns a { @link builder .
merges the statistics of the given {
returns the non - null schema of the given a { @link schema .
checks if the given type is an element type .
factory method to create a new { @link configuration } .
factory method to create a new { @link task with } .
returns the configuration for the given configuration .
invoke a method on the given method .
displays a string representation of a string .
/ * ( non - javadoc )
merges all fields of the given { @code strict } .
initializes the counter from the reporter .
{
closes the given closeable .
returns a filter instance .
{
{
{
returns a list of footers for a given configuration .
generates a list of parquet splits } objects from the given a list of { @link file .
returns a new {
creates a new { @link column } instance with the given { @code column } .
returns a {
returns a new {
creates a new { @link gt } instance .
returns a new {
returns a new { @link predicate that evaluates to the given {
returns a new {
logs an object at the level level . <p >
log a debug message .
log an info message . <p >
{
log an object .
{
logs an error . <p >
delegates to {
filters a new record that filters } .
{
validated
serialize the given class .
creates a new { @link codec } .
filters a schema of the given the given field .
get all required list of missing events for the given in the given struct .
checks if the given event is valid .
reads a file meta data from the input stream .
{
sets the { @link job } .
adds a primitive type to the list of classes .
asserts that the given column is valid .
joins the given string into a string .
joins the given iterator into a string .
joins the given string with the given string .
expands a list of glob pattern to wild paths .
--------------------------------------------------------------------------------------------
creates a new {
create a new {
writes the meta - data to the given output file .
write a byte array into the given byte array at the given position .
writes a byte array of bytes to the given byte array .
creates a {
creates a {
returns a {
returns a list of {
creates a set of { @link encoding } objects into a { @link org objects .
creates a { @link org } instance .
returns true if the given primitive type is signed .
returns the type of the primitive type .
returns the logical type annotation annotation } for the given type } .
creates a list of all the groups in the groups of the given filter .
creates a new { @link file } containing all the groups of the given file .
returns the offset of the dictionary from the dictionary
builds a { @link schema } instance } .
writes a data page to write )
{
skips the current state of the record .
serializes an object to a base64 conf .
reads an object from a configuration object .
adds a new row to the list .
{
builds a new { @link offset .
removes the specified key from the cache .
puts a new value to the cache .
returns the current value associated with the given key .
writes the value of the given {
sets the glob of the given glob .
{
create a new qualified path .
returns the uri of the given filename .
opens the given filename .
creates a class loader for the specified list of paths } objects .
returns the class loader for the given jars .
returns the class loader for the given paths .
/ * ( non - javadoc )
/ * ( non - javadoc )
filters a new { @link unbound } that filters the given { @link predicate .
returns a new { @code index } containing the given { @link row .
converts the given { @link struct } into a { @link message } .
converts the given { @link struct } to a projection } .
checks if the given field is a list of repeated element .
returns a {
returns a {
{
{
/ * ( non - javadoc )
returns a map of merged key - meta data value .
get the split split for the given job .
/ * ( non - javadoc )
skips the next number of bytes from the stream .
reads an unsigned unsigned short } .
reads a long from the stream .
creates a { @link parquet } from a { @link file } .
creates a { @link parquet } instance } instance of { @link parquet } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a builder for {
creates a new {
creates a new {
creates a new { @link builder } .
creates a new { @link builder } .
creates a new {
returns an iterator over the current slab .
checks if the given column should be ignore in the given primitive type .
creates a new {
returns the map of the given record .
checks if the given element is an element type .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
resolves the schema access to the given configuration .
{
{
{
returns a list of the input directory .
check if the input files are parquet .
get all input files from a directory
{
filters a new { @link unbound } .
reads bytes from the input stream .
reads a heap buffer from the input stream .
reads the contents of the {
reads a direct buffer from the input stream .
reads the contents of bytes from the stream .
creates a list of elements from } from the given { @link tfieldidenum } .
initialize the partition .
{
converts the given {
filters the message type that filters } .
{
creates a new {
set the record converter for } .
sets the record converter class .
merges the given tuple with the given tuple .
sum of summary of the given schema
{
generate the data generator .
read a struct a struct .
reads the content of a struct .
reads the content of this set .
reads the content of the map .
reads a map from the map .
reads the list of the list .
writes a int value } .
reads a little - endian little - endian integer from the stream .
writes a little - endian little - bit integer to the output stream .
reads a zig from an input stream .
reads a zig from an input stream .
{
/ * ( non - javadoc )
sets the schema schema .
{
wraps an instance of { @link inputstream } .
converts a collection of strings to a string .
/ * ( non - javadoc )
creates a new redaction from a json file .
convert a json string from a json string .
creates a new {
creates a new { @link pipeline . pipeline . pipeline () .
creates a stage bean for a given execution .
creates a list of { @link interceptor } objects .
creates a new {
parses a schema from a string .
converts the number of days to a number of days in milliseconds . < / p >
returns the specified number of days in milliseconds . <p > .
returns the avro schema from a header .
convert a byte array from a byte array .
upgrade v1to v2 .
returns the number of bytes from the stream .
copies all the files from the given pipeline to the given pipeline .
resets this table .
reports a health health to the thread .
registers a thread to the gauge .
store the properties file configs into a file file
{
gets the ldap entry with the given username .
gets the list of user s roles .
builds a filter for the given filter .
{
checks if the current user is authenticated .
binding to the given user .
move all the names from the list of names to the specified list .
move all names of the list of names .
get a config with the specified name .
logs the login .
upgrade the given {
upgrade the given {
upgrade the given {
upgrade the configuration is needed for a given a stage of the issues .
upgrade the given a given { @link service .
upgrade a stage if the given stage .
{
returns the list of matching the fields are null .
checks if the given package is a system class .
get the check point path .
{
adds a new element to the list .
returns the value associated with the given key .
adds all reported errors to the list of reported errors .
get the descriptor for the given proto .
get all file descriptors of the dependencies .
populates defaults to extensions and extensions .
get the descriptor of the given descriptor .
convert a { @link record to a sdc . protobuf }
creates a { @link field .
convert a {
convert a field to protobuf extension .
convert a list of configs to jersey to a list of config .
checks if the connection is valid .
convert a { @link field } .
creates a {
intercept a list of the given interceptor .
returns the text in the buffer .
checks if the configuration is active .
resolves the stage alias alias .
resolves the library aliases for the given stage .
adds the missing stage to the stage .
checks if the stage of the stage .
{
/ * ( non - javadoc )
process a response .
parse the record from the given input stream .
add the response headers .
writes the response header to the field .
writes the response header header to the record .
saves the metadata of the metadata .
{
configures the client .
/ * ( non - javadoc )
resolve the next page url .
sets the page offset .
make a request request .
returns true if the request should be completed .
parse the response from the given batch .
parses a batch of a batch .
increments the source offset of the source offset .
closes the response .
returns the current page of the variable .
parse the paginated result .
adds response headers .
resolves all the headers .
process a response .
checks if the given property is defined .
converts a {
converts the given { @link streamsets } to a { @link streamsets } .
returns an optional {
get the credentials for the given path .
preview preview preview of a pipeline
copies the contents of the string to a buffer .
finds all application package package names of a class .
removes all logical duplicates from the set .
{
{
finds the next main line in the chunk .
resolves a chunk of the given chunk .
{
closes the connection .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
escape the given string into a string .
returns the flow control settings .
returns a { @link instantiating .
generates a hive type } for a given metadata .
generates a hive type info from the metadata .
generates a column type definition for a column .
puts the given offset into } .
compiles an expression .
digest
adds a dictionary to the input stream .
adds a dictionary to the compilation .
stop all the stopped .
returns a map of {
returns the aggregator of the aggregator .
serialize an object to a string .
deserializes a string into a java object .
deserializes a file to a file .
/ * ( non - javadoc )
/ * ( non - javadoc )
writes the record .
evaluate the given string .
extract inner method extracts field
generates the inner field from a list of the inner type .
returns the qualified table name .
get column name of the column name .
returns a map of partition name .
returns a map of partition name from the given record .
checks if the given record is a schema change .
validates that the tbl is valid .
gets the table name .
returns the database name of the database .
returns true if the internal field .
returns the location of the given metadata .
get the custom location of the given record .
returns the avro schema .
gets the data format .
creates a new { @link field } instance .
create a new { @link field } .
resolve a scale or precision expression .
create
generates the avro schema for the given qualified type .
validates the partition information .
generates a partition path .
generate the avro schema to the given schema .
get the cache info for the given cache .
sets the parameters of the record .
handles a batch update update .
gets the configuration .
builds the read context cache } .
initialize the gauge if needed .
generates the batch and commit the offset offset .
called when a batch as needed .
init
blocks until the gauge is needed .
get
{
parses the given string into a string .
parses a string representation of a string .
blocks until the given thread is interrupted .
returns a string representation of a template .
serialize a string representation of this object to a json object .
deserializes a json file as a live file .
tries to the file .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
creates a new { @link http } from a { @link string } .
initialize the stage .
checks if the record contains solr fields of the record .
returns a list of field names .
checks if the list of the missing .
handles an error .
handles an error .
sends a record to the handler .
parse a jar name of a jar file .
returns the jar name from the given url .
creates a new instance of {
closes the cluster .
validates that the config .
/ * ( non - javadoc )
returns the label from a string representation .
verify that the dependency exists .
detect the cycle is a dependency .
create a new {
create a new {
creates a new {
creates a new {
calculates the user id of the given id .
read a string from the vault .
get the operation from header .
writes a json file .
writes the subdoc .
builds the subdoc mutation .
performs the given action on the given subject .
performs the given action on the given subject .
{
/ * ( non - javadoc )
decode the given channel into a } into a { @link object .
extracts a frame from the buffer .
{
logs the login login .
checks if the worker service is valid .
this method takes a {
commits the specified offset .
delegates to {
returns the ratio of a string .
closes the file .
creates a new { @link detached . detached
creates a new detached stage } .
registers the given function definition .
inject a stage for the given stage .
{
{
{
{
{
returns the value of the specified qualified table .
get the cache for the given qualified table .
puts the given qualified type into the cache .
get the definitions of a json object .
returns the lineage for the given name .
returns the name of the given column .
returns a string representation of a string .
get a pipeline configuration .
create a new draft fragment
get a list
imports a pipeline fragment into a pipeline
{
gets the file path of the record .
{
issue all the events .
get the operation from the given record .
/ * ( non - record .
returns a map of columns from the record .
get
returns a set of vertices .
/ * ( non - javadoc )
get the map of memory memory mb from the given configuration .
tar a folder in a tar file .
get the current runner .
returns the idle runner for the given item .
return
destroy the queue .
validates that the queue is not destroyed .
checks if the given stream exists .
returns the last shard id for the given stream .
processes the queue .
handles the sql exception .
get the column hash of the given record .
get
redirect to the self to the server .
/ * ( non - javadoc )
validates that the given list of schema and validates the schema .
compares two files of the given file system .
creates a parser for a given file .
truncate the glob pattern .
returns the pid of the process .
validate and validates all fields .
creates a proxy user group .
/ * ( non - javadoc )
creates a snapshot of this snapshot } . stats . active ) } .
ensures that the given path exists .
{
formats a sqlexception exception .
gets the catalog of the given schema .
{
{
{
retrieves the primary keys of a table .
retrieves the set of referred tables for a table .
writes a batch of partitions .
write the record in the table to the table .
writes the given record to the given iterator .
generate no data event event .
detect a new partition for the given partition .
returns a map of partition values from the record .
generates a new { @link partition . partition .
sets the avro schema .
processes the specified value .
checks if the given class is a same version of the given class .
*************************************************************************
force the quit .
configures the auth client and build the auth client .
check if the request contains the request .
resolves the headers in the given record .
/ * ( non - javadoc )
fill the null types .
get
returns the typed field from the script .
get a date stamp from the value .
loads a schema from a schema .
registers a schema with the given subject .
loads a schema from a registry .
{
loads a schema from the registry .
write the schema id ) schema id .
returns the schema id of the given byte array .
returns the default values for the given schema .
parse all the records from the given message .
logs the details of the dependency .
returns the field name of a field name .
initialize the stage
process a response .
return
returns a list of bad records .
compares this version with the given version .
initialize the stage .
get the outward of the given vertex .
{
adds a directed edge .
serializes the given map to a string .
deserialize the offset map from a string .
report a queue to the server .
/ * ( non - blocking )
checks if the file exists in the file .
writes the offsets to the main offset .
reads the cluster offset from a cluster .
creates a new {
deletes the blob ] .
copies the given {
handles an error .
handles a archive .
returns a reader for the file .
releases the reader .
sets the authentication client .
adds a default header .
parses the given date as a date .
select
returns the content content type content type .
encodes the given string .
serialize an object to a json string
deserializes the given response as a json object .
returns the client .
initialize the connection .
get the metadata of the table
create a bulk inserter .
creates a new { @link event } .
builds a { @link schema .
returns the operation to an int code .
adds the jars to the given klasses
adds the jars to the job .
/ * ( non - javadoc )
/ * records .
{
/ * ( non - javadoc )
check whether the field order is a field order .
checks if the given field is a condition .
{
/ * ( non - javadoc )
gets the offset of the file lag from the file offset .
sets the instrumentation instrumentation .
get a set of white files from a file system .
get a list of all the jars in a stage .
gets all the urls of a class .
returns the number of the parallelism ) of the kafka .
bring
runs a query on the query .
<pre > {
converts a list of fields to a map of fields .
builds a list of repeated repeated } into a list of repeated fields .
returns the table description .
validates the table accepts the table is valid .
get the column type of a jsonobject .
check if the given field is nullable .
gets the table schema .
get the properties .
returns the class for the given type .
{
/ * ( non - javadoc )
convert a date format to a string .
translates a command .
initialize the s3 .
upgrade v5to
evaluates a list of matching the given field expression .
checks if the given field matches the given field .
releases the file .
get the input stream .
get the output stream .
commits the file to the output stream .
{
/ * ( non - javadoc )
parses the given string into a { @link string .
validates the stage of required libraries .
validate all services of services are available .
creates a new {
returns a aggregator unit of the given class .
creates a new aggregator data } instance .
creates a new group with the specified aggregator .
starts the data window .
stops the aggregator .
returns a map of { @link aggregator window } objects ) to the given { @link aggregator } .
resolves a scale or precision or precision .
acquires a login manager .
release the login manager .
closes all the instances .
convert a string into a regex .
/ * buffer .
list all objects in the given s3 in the given s3client .
returns a list of objects that match the given .
/ * ( non - javadoc )
{
{
stops the snapshot .
produce the number of empty batches for the specified in the given time } .
creates the batch of the failure .
convert a record to a bound statement .
{
/ * ( non - javadoc )
sets the configuration .
/ * ( non - javadoc )
generate a lookup key .
gets the kafka properties .
handles the partitioning of the partitioning partitions of the table .
acquires a table as needed to acquire the table from the table .
partition the first shared shared queue .
returns the next table in the queue .
report the data set of the data set .
returns true if the table ) should be used in the table .
reads the ahead from the log file .
reads a line from the stream .
returns a new {
retrieve the user s user .
retrieve the user from the given organization .
registers the given organization .
returns the url of the given url .
retrieve the user token from the user .
logs the user .
/ * update
this method .
{
pull the map of a reader .
return the unauthorized unauthorized .
creates a {
creates a complex schema for the given the given type .
creates a {
get the decimal scale scale or precision .
returns the default value for the given schema .
init
compares the file } objects . compare } .
returns the index of the specified group in the specified group .
returns a list of group names .
checks if the given string is a escaped char .
checks if the given string is a slash escaped number .
check if the given string is a escaped .
check if the given string is a char class class .
checks if the given string is a noncapturing .
counts the number of parens in the given string .
extracts the group info from the group .
replaces all occurrences of the occurrences of the given regular expression .
replaces the group name in the group name .
builds a standard pattern for a pattern .
/ * ( non - javadoc )
writes all the beans .
refresh the given schema .
gets the list of schemas of the given list .
checks if the given {
{
reads the next channel is read from the buffer .
initialize the rabbit .
create a new roles
extract the contents of the given input stream from the input stream .
{
converts a string to a appropriate appropriate appropriate number .
parses the part of a part of the record .
parse the values of the record from the given { @link byte .
gets the unsigned short field from the given byte array .
{
returns the name of the sql type of the given type .
gets the qualified table name .
returns the quoted qualified table name of the table name
populate the initial offset of the partition .
list all tables for the tables .
looks up the primary keys .
creates the default field mappings .
creates the custom field mappings .
convert a field to a string .
returns the table name .
sets the primary keys in the database .
handle
returns the operation code for the given record .
classify the given schema .
processes the specified offsets .
{
finish the batch of metrics .
flatten the entire record .
create
executes the given record .
{
/ * ( non - javadoc )
build and return the pair of the given table .
returns the condition for a partition column .
returns a map containing the columns from the given offset .
returns the offset format from the table .
returns a map of offsets from the source key representation .
validates the stored stored in the given offset is stored in the table .
generates a new { @link bundle bundle .
generates a new { @link bundle } from the given { @link inputstream } .
uploads a new bundle .
uploads a new bundle from a list of the instances .
uploads the new bundle on the server .
reads bytes from the bytes .
returns a list of requested generators definitions .
returns a map of the query parameters .
/ * ( non - javadoc )
gets the non - empty list of the given app .
get the operation .
converts a double format to a display format .
scans the file } and return the current file .
returns the pending files in the file .
checks if the given name is whitelisted .
check if the expected versions of the given set of a set of versions .
initialize the stage .
checks if the given list of stages is output .
*************************************************************************
{
{
propagate the runtime configuration .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
validates that the report .
escapes the value in a string .
create a jdbc .
create a jdbc .
upgrade v1to
extracts the named groups from the raw groups .
commits a consumer .
creates a new instance .
fast
sets the fields in the record .
{
creates a new { @link remote } that uses the given { @link future .
/ * ( non - javadoc )
creates a new { @link gauge .
removes the given metric from the list of metrics .
{
/ * ( non - javadoc )
generates a map of header attrs .
validates the given record .
get the temp file path .
handle the old temp files .
gets the avro input stream .
reads the file reader from a file .
write the avro record .
/ * ( non - javadoc )
validates that the given class is valid .
validates that the given resource is valid .
encrypt the given field .
{
checks if the given record is valid .
checks if the given field is valid .
prepare a encrypt field .
decrypt
generate a batch of record .
initialize the gauge if it is needed .
handles an error error .
returns true if the graph is cyclic .
sets the pattern that matches the given .
appends a replacement to the matcher .
{
replaces all occurrences of the given replacement with the given replacement .
get the kafka properties .
gets the last field name from the path .
escapes the quotes in the given path and back the given path .
unescapes all quotes in - back to a single slash .
returns the standardize path to use for the given path .
ensure that the given list of avro schema exists .
returns the global variable from the database .
wraps the given { @link pipeline } .
creates the start event .
creates a { @link record } .
get all references for the given connection .
fix the offset of the given offset .
extracts the value of the field .
execute a partition query .
execute alter table set .
{
execute a table is used to extract a table .
execute a database .
{
executes the given query .
executes a query .
/ * ( non - javadoc )
execute a batch of metric .
registers all the given consumer .
gets the offset of the offset .
on
--------------------------------------------------------------------------------------------
get the insert id for a record .
converts the given record to a map .
gets the value of a field from the field .
checks if the http ports is valid .
handles an error .
handles an error .
sets the fragment in the record .
sets the document in the record .
this method that handles a n1ql record .
returns the number of converttojdbccode in the crud
handles the whole file data format .
init
checks if the incomplete transactions is incomplete transactions .
creates a { @link classloader } instance } with the given { @link classloader } .
creates a new instance of the given class loader .
returns a new { @link classloader with the given supplier .
creates a new instance of the given class loader .
creates a new {
sets the stage creator .
returns a map of user attributes .
sets the user attributes .
logs the login .
{
sets the exceptions for the given configuration .
replaces all variables in the given path .
ensures that the given path is proper .
generates a { @link field .
generates a jdbc type info for the given metadata .
generates a column type definition definition for the column .
creates a pipeline .
main method .
get the path of the given record .
renames a file to the given path .
issue cached events .
/ * existing files .
{
{
{
sets the path separator .
tokenize the given pattern .
converts a collection of strings to a string .
check if the given pattern matches the given pattern .
sets the offsets of the file .
returns a map of the file .
returns the remaining wait time for the remaining wait until the wait time .
{
returns a map of the offsets of the file .
create a new {
creates a new {
creates a new { @link stage instance } .
configures the configuration .
gets the access token .
returns the metric value of the given metric .
gets the time time from the runner .
*************************************************************************
serve a file in the file .
decode the header .
decode the multipart form of the multipart form .
/ * parms
finds the end of the header in the header .
returns the boundary positions of the boundary .
returns the number of the body .
save the tmp file to a file .
creates a new { @link sslserversocketfactory object } from a { @link key } .
creates a new { @link sslserversocketfactory } from a { @link sslserversocketfactory .
loads a sslserversocketfactory from a keystore file .
gets the mime type for the given uri .
handles a session .
creates a new { @link response } .
stops the server .
adds the mappings to the router .
sends the message
sends the body of the stream .
creates a new { @link response } .
creates a new { @link response } instance .
creates a new { @link response } .
creates a new { @link response } .
returns true if the gzip should be accepted .
reads the websocket frame .
encodes a byte array into a base64 encoded string .
gets the text payload .
read the payload from the input stream .
writes the payload to the output stream ) .
set a cookie .
unload
remove a session
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a base64 encoded string into a base64 encoded string .
encodes a string into a string .
sets the domain name .
sets the table name .
/ * ( non - javadoc )
returns a {
registers the {
/ * ( non - javadoc )
returns the geo location of the geo .
{
{
{
checks if the given parameter is requested .
returns the name of the given principal .
insert a session repository filter .
returns a set of session dispatcher types .
resolves the principal name .
/ * ( non - javadoc )
gets the session for the given id .
gets the session bound for the session id .
{
get the jndi name of the given model .
returns the canonical parameter types .
registers a interposed } ) . interposed () .
/ * ( non - javadoc )
init
get the current transaction .
returns the raw attribute of a attribute value .
/ * ( non - javadoc )
{
returns an array of contained entries .
/ * ( non - javadoc )
get the list of server config dependencies .
validates the incoming credential } .
assert that the given class is mdb .
initialize the naming .
constructor .
binds the specified object to this object .
resolves the given object as a corba object .
removes all contexts .
returns the given object into a string
checks if the given object is dead .
--------------------------------------------------------------------------------------------
writes the state of this stream .
checks if the loopback is loopback .
removes the number of the lock
inc
add a bean deployment module module .
add all the deployment modules to the deployment deployment .
adds a service to the deployment .
returns the policy for the given policy .
{
{
/ * calculation .
get the timeout method from the given timeout .
/ * ( non - javadoc )
authenticate the security identity .
loads a persistence adapter from the given adapter .
loads the persistence adapter from the given platform .
{
returns the timer for this method .
calculate the accessibility graph of the given archives .
make the top - level bdas from the top - level archive .
load a bean archive for the given bean .
creates a new {
sets the config name and file name .
get the list of security meta meta data .
gets the servlet url patterns .
gets the servlet class mappings .
resolves the view .
{
returns a set of the operation .
get resource value .
parses a core environment element .
parses the process id of a process .
creates a {
returns true if the class manager is supported .
returns the { @link path } of the given operation .
sets the path of the given operation .
returns the value of the attribute } .
checks if the given operation is a include the given operation .
creates a composite operation .
creates a new { @link model } .
creates a new { @link model with the given index .
creates a new { @link model .
create a write attribute operation .
creates an operation operation .
{
adds a url context factory .
removes a url context factory .
{
loads all providers from the given class loader .
{
{
returns the canonicaluri
get the list of message destination refs .
modify the given deployment .
configure endpoints
modify the context root .
gets the transport class name .
/ * ( non - javadoc )
get
check if the activation config .
returns the endpoint for the given resource name .
create a security context .
sets the security
returns the security context .
clears the security context .
returns a { @link security } as a { @link security } objects } .
pops the identity from the given the identity of identity .
processes the management management management .
get the security domain string .
returns a description of this description .
installs the binder service .
installs a binder service .
{
{
check if the given property type matches the given property type .
finds a method that matches the given class .
finds a field with the specified class .
/ * invocation .
{
escapes a string .
initialize the options .
returns a description of this description .
{
returns the useful for testing .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
registers a resource adapter .
unregister a resource adapter .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
builds the app context context .
builds the message info .
gets the authenticated subject .
read the name of an attribute from the given reader .
read a required value from the given reader .
read required attributes from a reader .
{
adds all the given a collection of the list of components .
registers the given subsystem .
creates a new { @link stub . strategy . method . method . method
writes this method to the output stream .
reads an exception from the input stream .
returns true if the given exception ) is declared .
converts the given object to a local object .
/ * ( non - javadoc )
{
returns a set of potential interfaces of the given bean .
returns a set of potential view of the given a bean .
puts an entity manager in the transaction registry .
writes a filter to the writer .
resolves the order of the given list .
creates a security context .
sets the security context on the association .
writes the content of the xml element .
add a param param .
adds a resource to this resource .
returns the owner of the given transaction .
releases the given instance .
releases a lock .
adds a zip file to the stream .
adds a virtual file to the given file .
adds a content to the product .
adds the given input stream to the given input stream .
adds a log log .
creates a new { @link thread .
adds a jsf filter .
addcdiflag
returns the component view .
{
gets the component view of the given view .
checks if the given method matches the given method .
creates a resource statistics for the given deployment .
/ * ( non - javadoc )
returns a { @link injected } for the given { @link credential } .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
returns the security domain .
check if the given endpoint is access to see if it is secure .
gets the transport guarantee .
gets the ejb security meta meta meta meta data .
gets the next domain .
ensure that the same domains is a security .
{
{
/ * ( non - javadoc )
returns the absolute name .
creates a new { @link jndi } .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the transaction is in the transaction
returns the transaction synchronization registry .
returns the connection
returns the last component of the given name .
checks if the given name is empty .
checks if the passed exception name is not found .
constructs a new { @link naming with the given message .
create a naming exception .
proceed an exception with the specified in the specified name .
/ * documented naming that contains all elements from the supplied collection .
check if the xml object is a string .
unbind the given context .
{
{
{
parse the connection attributes .
parse the connection definitions .
parses the connection definitions .
parses the xa pool .
creates a new instance of { @link object .
constructs a new instance .
construct a component instance of the } .
stops the interceptor .
merges the given { @link interceptor } with the given interceptor .
loads the resteasy from the resteasy .
resolves the runtime name of the given path .
{
checks if the given class is abstract .
creates a new listener .
initialize the extension .
/ * ( non - javadoc )
returns the primitive analysis for a class .
shuts down the value .
creates a {
returns a list of url patterns .
gets the servlets object .
returns a list of servlet mappings .
returns a list of security constraints .
get the login config .
returns a list of parameters .
gets the web resource collections .
gets the list of servlet init init parameters .
creates a new { @link security } .
creates a new { @link web } instance .
creates a new {
create a new {
create a new { @link auth } .
creates a new { @link user } instance .
new
new
/ * ( non - javadoc )
{
reads the interceptor binding .
registers the session bean interceptors .
creates a copy of { @link component .
creates a new { @link component } object .
creates a new { @link component .
creates a new { @link compound . compound . iorsecurityconfigmetadata . iorsecurityconfigmetadata . iorsecurityconfigmetadata
creates a new {
creates a new { @link iorsecurityconfigmetadata } from the given metadata .
creates a new { @link component } .
creates a transport address address .
create the target value from the given iortransportconfigmetadata .
returns the target supports the given iortransportconfigmetadata .
returns a byte array to a byte array .
converts a byte array into a byte array .
encodes the initial context token .
decodes a initial context token from a byte array .
decodes a byte array from a byte array .
returns the security mech for a given codec .
/ * ( non - javadoc )
process the descriptor entries .
process injection targets .
{
get the jndi name of the given jndi .
{
resolves the given attribute .
{
parses the xml file from an xml file .
/ * ( non - javadoc )
returns the pattern type of a url .
creates a map of security constraints to a list of pattern .
/ * ( non - javadoc )
check if a connection factory is a connection factory .
returns true if the given resource adapter is external connection .
gets the properties of a server .
finds the persistence unit within the given persistence unit .
returns the default persistence unit name .
{
checks if the given class contains the given annotation .
{
{
/ * ( non - javadoc )
{
{
called when the invocation is complete .
/ * ( non - javadoc )
done when the deployment is suspended .
release the service .
{
{
returns the service name of a capability .
creates a list of resource classes } for the given the given { @link deployment .
{
/ * ( non - javadoc )
detaches the non - non - tx .
detaches the non - query } from the given {
get the reference to the reference .
{
{
process the view annotations .
{
gets all the set of the deployment loaders .
checks if the class file file file transformer .
checks if the given { @link persistence } to see if it is two phase .
returns true if the default data source is default .
detaches the entity from the entity .
determines whether the mixed synchronization type is mixed .
checks if the given entity is a persistence context .
{
tries to a remote object
get a orb for a given server .
creates a orb from the given applet .
initialize the method handles the method handles the stub of the stub .
sets the active naming store .
initialize the naming manager .
{
binds the specified object to the specified object .
{
/ * ( name .
{
{
renames the specified name / sub > .
{
{
{
lookup a link .
returns a name of a name of the name ) with the name ) name .
/ * ( non - null name .
adds a property to the environment .
{
add a naming listener .
{
{
validates that the default values are valid .
get all the list of the given index .
get the list of a list .
check if the given method is a primitive type .
returns the default value of the given annotation .
validates that the base type is valid .
/ * ( non - javadoc )
/ * ( non - javadoc )
registers the persistence context .
gets the deferred entity managers .
returns the status of the given status .
checks if the given attribute is defined .
creates a {
creates the given { @link classification } after the given entity } .
starts the cache .
adds the cache dependencies to the cache .
stops the given listeners .
/ * ( non - javadoc )
extracts all the dialects from the database .
/ * investigate
identify the dialect of a dialect .
check if the database is valid .
convert a date to a scheduler .
sets the node name .
marks the given deployment .
checks if the given unit is a part of the given weld deployment .
reads an array of params .
writes the object to the output stream .
writes the exception to the output stream .
gets the reference to be used for this reference .
returns a description of this description .
/ * ( non - javadoc )
looks up the indexes of the given lookup .
/ * ( non - javadoc )
begin
end
returns a map of the extended entity .
pushes the call to the entity .
removes the call from the stack .
gets the current call .
{
process the xml beans .
processes the phase listeners .
returns a string representation of a class .
checks if the given class is a primitive type .
inserts a primitive object into a primitive object .
returns a name of the given name .
generates a string representation of a class .
check if the given string is a valid .
returns true if the character is a valid character .
returns the hash hash of the class .
returns the signature of the class .
returns the signature of the method .
converts a class to a string .
{
create a batch of { @link batch } with the specified name .
binds the services to the target service .
/ * ( non - javadoc )
creates an injection target target } .
{
gets the entity scoped entity manager .
/ * ( non - javadoc )
check if the given value contains the given value .
puts the specified key / value .
puts the specified map into the map .
converts a security role node to a model .
/ * consider in the given index .
returns the name of the given class .
returns the most recent recent entity version of the given timer .
loads the timers of the given timer .
gets the directory name for the given object .
{
creates a new {
/ * ( non - javadoc )
checks if the given application is an application exception .
adds a listener to the target scope .
removes a listener from the target scope .
fires an event on the handler .
closes the {
creates a new subject .
creates a new subject .
creates a new subject .
returns the current service container .
adds a private credential .
creates a new { @link agroal } for a { @link agroal .
returns the {
/ * ( invocation .
creates an object factory for the given object .
get an instance of the specified environment .
implements the visitor to find the class )
adds the given view for the given view .
loads a class from the classpath .
displayable
subst
/ * ( non - javadoc )
{
read the transport configuration from the server .
adds the ear prefix if it .
gets the root deployment unit .
returns the service name .
creates a new { @link view } .
create an injection source source } for the given service name } .
returns the reference to the reference .
returns a list of view interceptors that match .
adds a view interceptor to the view .
adds a view interceptor to the interceptor .
returns a list of client interceptors for the method interceptors } .
adds a client interceptor .
adds a client interceptor .
adds a private data for the given type .
creates a new { @link classloader classloader } for a { @link module .
throws an exception if the xml xml element .
removes the given resource from the current step .
creates a connection factory .
returns a list of jaxws for a given deployment .
returns a list of jaxws for a given deployment .
gets the endpoint name .
gets the endpoint class name .
returns the servlet for a servlet .
gets the required attachment .
gets an optional attachment .
get the optional attachment for the given unit .
gets the jbossportcomponentmetadata for the given name .
get the ejb ejb endpoint for the given class name .
gets the root context root .
{
{
get the configuration of the given model .
sets up the orb .
check if the given properties are configured .
{
{
{
{
/ * ( non - javadoc )
{
returns a list of files in the given path .
{
removes all entity from the entity .
gets the entity manager .
registers a transaction up to the given instance .
/ * ( non - javadoc )
{
process annotations
update the server config .
{
/ * ( non - javadoc )
process the given a ) invocation .
starts a queue .
checks if the given method is a remote .
checks if the given class is public .
gets the reference to the reference .
lookup a contained contained in the specified search .
returns an array of all interfaces in the interface .
returns the { @link type .
describe the description of this interface .
decode a string .
decodes a string into a string .
encodes a string into base64 encoded string .
create a new { @link deployment } .
factory method for creating a new http endpoint .
create a new { @link archive } .
create a new uri for a client .
create the initial context token .
returns true if the deployment is jaxrs is jaxrs .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the next timeout .
/ * ( non - javadoc )
returns true if the timer is active .
asserts that the timer is expired .
sets the timer state .
merges all the given a list with the given deployment .
returns the set of method roles as principals .
gets the reference reference )
returns a description of this module .
{
configure the login mechanism .
sets the authorization policy .
returns the list of the auth method .
adds the remote transactions .
add the transaction manager .
{
add the server security manager .
returns true if the bean has security metadata .
gets the set of the container interceptors .
sets the specified attribute .
sets the specified attribute .
sets the specified attribute .
returns true if the given method is a method .
{
{
get the service name for the given module name .
returns a string representation of the given class .
creates a cdrstreamreader from the given string representation .
creates a new { @link cdrstreamwriter instance .
returns a reader for the specified class .
creates a new instance of the given class .
merges the injections for the given class .
checks if the given element is only one of the elements of the given element .
refresh all children of the job .
forward the given {
define a connection factory .
get
returns the temp bean info .
get the type from the given class .
returns the type of a component type .
returns a { @link resource .
creates a { @link resource .
returns a { @link resource .
creates a { @link resource .
parses the given name .
convert a name to a cos name .
converts a name of a string into a string .
convert a name to a name .
convert a string to a vector .
parse a string representation of - component .
escapes the given string .
{
shuts down the poa .
converts a servant to a servant } . omg } .
cleans up the service .
authenticate the security identity .
returns true if the given class is matched .
{
/ * ( non - javadoc )
instantiate a bean instance .
configures the given bean with the bean .
dispatches a lifecycle joinpoint .
adds a remoting receiver receiver .
creates a new {
{
returns the current { @link namespace .
converts a bean name to a bean name .
returns the given class name to a instances .
returns a list of annotated with the given instances .
returns the class by name .
/ * ( non - javadoc )
checks if the given class is a session validity .
{
{
parses the persistence steps .
normalizes the given a persistence .
creates the bean name .
creates a connection factory .
/ * (
validates the given descriptor .
{
returns the reference to the managed view .
creates a new {
create the web app descriptor .
sets the server instance .
creates the servlets .
creates the servlet mappings .
create the security constraints .
create the login config .
create the security roles .
gets the auth method .
{
/ * stateless session bean .
creates a stub class for the given class .
<p > looks for the specified search id .
returns an array of the anonymous object id .
returns the scoped name .
{
{
/ * ( non - javadoc )
/ * ( start ) .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
removes all cached deployment providers from the set of deployment loaders .
adds a deployment provider to the persistence provider .
finds the parent module cl .
reads an element 1 . 1 . 1 . 1 . 2 . 2 . 3 . 4 . 3 . 3 . 2 . 3 . 3 . 4 . 4 . 3 . 4 . 3 . 3 . 3 . 3 . 4 . 3 . 3 . 3 . 3 . 4 . 3 . 2 . 4 . 3
reads an element 1 .
/ * this method is used to parse the attribute is 0 .
this method to parse the given attribute .
this method to the given xmlextendedstreamreader .
/ * this method is used to parse the xml element .
/ * attributes in the given reader .
this method to a xml queue .
parses the naming config .
parse the interop config .
parse the security config config .
parse the security config .
parses the properties from the given namespace .
parse the generic property 1 . 1 . 1 . 1 . 1 . 4 . 4 . 4 . 4 . 3 . 1 . 4 . 4 . 4 . 4 . 4 . 4 . 4 . 4 . 3 . 4 . 4 . 3 . 4 . 4 . 4 . 3 . 4 . 4 . 4 .
parse a generic property .
parses the attributes of the given reader .
writes the xml element .
writes the xml element .
writes the naming config .
writes the interop config .
writes the security config .
writes the generic properties of a node .
writes all attributes of the given {
checks if the given node is writable .
{
returns a list of the persistence unit .
get the list of the persistence context .
{
runs the work .
/ * ( non - javadoc )
{
reject the incoming incoming context .
adds a pu to the list of pu .
deploys a persistence unit .
deploys the persistence unit phase for a persistence unit .
sets the annotation indexes .
get the persistence provider adaptor for a persistence .
save the adaptor the adaptor to the given deployment provider .
looks up the persistence provider .
get the next phase depends on the deployment .
adds the management console .
creates a resource .
{
create a new ejbarchivemetadata )
build the webservices meta data .
build enterprise bean meta data .
validates the given model .
refresh a participant .
gets the application name .
gets the ear name .
returns the reference to be used for this object .
/ *
/ * ( non - javadoc )
parse the given a reader .
convert a virtual string to a string .
handle an exception .
binds a service .
{
get the analysis for the given class .
lookup the container from the container .
creates a new { @link container } .
returns the idl module name .
converts a int to a hex string .
converts a long to a hex string .
checks if the given method is accessor .
checks if the given method is mutator .
checks if the given method is non - app exceptions .
analyze fields
analyze all interfaces
analyze all the methods .
reads the name of the name .
returns the name of the attribute .
this method is used to analyze the constants ) .
analyze the attributes .
this function is used to fixup the operation names of the overloaded operation .
/ * this function is used to fixup case .
calculates the class hash code .
returns a string representation of the given name .
calculate the repository id .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the attributes of the given attribute .
parses the default context element .
processes all attributes in the attribute .
loads a list of persistence by name from the module name .
main method .
gets the reference to be used reference .
/ *
creates a new { @link activemqreloadrequiredhandlers } .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
write an attribute to the writer .
{
{
invoke the given {
{
authenticate the security identity .
returns the { @link method .
/ * setupjndibindings
/ * ( non - rejected .
infer the destination name from the address .
{
{
{
{
called when the end of the end transaction .
set the rollback only if the given transaction .
check if the metric is enabled .
registers the endpoint handlers for the given endpoint .
registers the { @link passivation .
creates an array of the given poa .
generates the method code for the given superclass .
generates a class file .
create a new {
compiles a class file .
create a new { @link wild } instance .
returns the set of job names of the given job name .
initialize the job .
returns the uri of the request .
resolve the given url and return a url .
initialize the orb and root context .
initialize the url using the iiop .
initialize the corbaname
/ * ( non - javadoc )
looks up the object )
/ * ( non - javadoc )
/ * bind the given name of the object .
binds the given object to the given object .
binds an object to the specified object .
call the given path .
{
renames the specified name } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * destroy .
destroy the subcontext } ) .
binds a new { @link javax } .
create a new { @link javax } with the given name .
/ * ( non - javadoc )
adds a value to the requested property .
removes an object from the environment .
adds the transformations to the builder .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
writes the xml instance to the xml pool .
writes the entity bean .
writes the cluster passivation stores the given model .
writes the stores of a file passivation .
get the audit manager for the given security domain .
gets the authentication manager .
get the authorization manager for the given security domain .
get the identity manager for the given security domain .
get the mapping for a security domain .
/ * ( non - javadoc )
remove a security domain .
looks up a jaas context .
{
creates a new {
creates a new authentication manager .
creates a new authorization manager .
creates a new audit manager .
create an identity manager manager .
creates a new {
sets the deep copy of the authentication .
returns the type of the given string .
create a new { @link modular } .
creates a new { @link modular } .
create a new instance .
start the lifecycle .
{
*************************************************************************
parse the remoting receiver .
returns a new instance of the given repository .
waits for a service to wait .
computes the masked password .
initializes the security vault .
start the vault
adds a secured attribute .
adds a secured attribute with the specified name .
checks if the given attribute exists .
remove a secured attribute .
retrieves the secured attribute of the specified vault .
checks if the attribute is created .
displays the vault configuration .
returns the vault configuration for the vault .
{
checks that the given value is not null .
returns the name of the deployment .
registers a resource adapter identifier .
inserts a primitive value into the argument .
{
checks if the given { @link jndi .
checks if the given action implies the same as { @link action } .
returns a string representation of the action .
returns a new {
check if the jndi permission name is a jndi .
returns the name of the log .
{
sends a notification change to the notification .
{
/ * ( non - javadoc )
gets the transactional
{
checks if the given webdata is boot classes .
invokes the given interceptor ) method .
/ * ( non - javadoc )
{
{
returns all the interceptors .
returns the interceptor interceptor interceptor .
adds a method interceptor .
sets the method interceptors .
{
sets the naming mode .
adds a dependency .
returns all the list of the given method .
returns a list of around the given method .
adds a component interceptor .
adds a list of component interceptors .
adds a component interceptor .
adds a component interceptors .
adds a timeout view .
returns a list of all around } .
adds a new interceptor interceptor .
returns a list of { @link interceptor } s factories .
adds a post interceptor .
returns a list of pre - destroy factories .
adds a pre - destroy interceptor to the list of pre - destroy } .
returns a list of all the pre - passivate .
adds a pre - passivate interceptor .
returns a list of all the activate .
adds a post interceptor .
sets the service factory .
returns the value of the component . ) . )
gets the module for the original class .
returns the protection domain domain .
finds the exported resources in the given dependency .
removes all the entries from the context .
sets the transaction synchronization registry .
accept the given { @link ejbclientcontext } .
create a new { @link service } to the given module .
create a new { @link service } for the given module and module } .
bind the given module to the given module .
binds a module to the given module .
binds the given jndi name to the jndi .
registers an entity manager ) in ) .
returns the raw attribute of the given attribute name } .
{
binds the given object to the given context .
returns a map of domain objects .
gets the reference to this reference .
returns the type of this type .
returns a description of this description .
returns the value of the value of the vmdi .
returns the value of the value .
{
creates the {
parses the given model .
/ * ( non - javadoc )
{
{
{
/ * ( non - javadoc )
{
creates a service operator for a service name .
adds a component to the view .
adds a message destination .
gets all components of the components for the view of a view .
gets the set of a component .
get all components of the components .
resolve a set of message .
builds the {
builds the transformers1 4 4 .
builds the transformers1 3 0 .
helper method to the default value of the default attribute .
renames the attribute .
gets the connection principals .
pushes a new identity .
removes the identity from the cache .
returns a proxy reference . reference } .
{
looks up the security domain .
loads the ids of the ids .
checks if the version of the version is integrity .
computes the slot of the given jsf .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the instance .
returns the interceptor interceptor .
destroys the interceptor .
configures the credential .
{
populates the given model .
returns the constant type of the given class .
get the type of the given class .
adds the type code to the given class .
<code > map&lt ; object ; < / code >
<code > map&lt ; string string ; < / code >
returns a value of the value .
checks if the given package exists .
adds the constants to the container .
adds all attributes to the analysis .
add all the operations to the analysis .
adds the interfaces of the interfaces .
adds the abstract valuetypes to - valuetypes
adds a class .
adds an array of array of array
adds an interface to the interface .
add the value to add the value to the analysis .
adds an exception to the exception .
returns the injection level type of the given annotation .
registers the config mapping .
checks if the jts is enabled .
{
{
{
{
configures the token providers .
configures all the handlers .
checks if the given method type is allowed to be allowed .
checks if the given method is sync .
throws an {
throws an {
get the security domain domain .
gets all component classes from the deployment .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
{
{
{
{
{
{
{
/ * ( non - javadoc )
creates a timer .
creates a calendar timer .
get the timer
attempts to the timer of the given a timer .
suspend all timers of the timer .
restores all timers of the given list of timers .
start a timer .
check if the current invocation is lifecycle .
schedules a timeout for the given timer .
cancels the timeout .
returns a map of the waiting resource .
set the rollback of the rollback .
returns true if the given timer should be run .
check if the given bean is no interface .
returns the default view of the given class .
returns a list of the given list of interfaces .
processes the acceptors .
returns a map of the extra parameters .
get the parameters of the given model .
processes the connectors .
list all the children of a map of the given operation .
create a new { @link service } for a given server .
convert a type to a class .
converts the given value to a string .
returns a list of types of a value .
finds a method in the given index .
locate a method with the given name .
checks if the given type is a type names .
this method to create a persistence unit from a property .
/ * ( non - javadoc )
get
/ * binding binding .
adds the properties of the given property .
add the properties of properties to the list of properties .
adds the resources to the list of resources .
adds the given deployment to the deployment .
closes all instances of the given {
{
handles a {
receive notification of the object .
/ * ( non - javadoc )
{
converts an enum value of the given node .
returns the value of the given value .
returns the value of the given value as an { @code optional } .
returns the value of the given value .
returns the value of the given value .
returns the value of the given node as an { @code long } .
returns the value of the given node as an optional string .
returns the value of the given value .
returns the value of the given node as an optional list .
returns the value of { @link model .
returns the value of the given enum value .
create a resource root for the given file .
creates a new {
creates a new {
returns a list of the given security identity identity .
skips the next amount of bytes from the input stream .
{
checks if the given element is not both elements .
invokes the given operation .
{
{
{
{
{
{
{
{
creates a new {
gets the local class description .
adds a component to the list .
adds a class loaders to the given set of class loaders .
{
{
binds the specified object to the specified object .
{
{
{
looks up the given name .
returns a list of class names of the given name .
returns a list of the given name .
adds a naming listener .
removes a naming listener .
returns the principal associated with the given subject .
reads the xml element 1 .
{
{
adds a factory to the factory .
creates a new context .
{
adds the archives archives archives .
checks if the given archive is accessible .
creates a security realm for the given webssldefinition .
creates the io subsystem .
creates the welcome content handler .
get the default resource adapter .
returns the bean .
releases the pool .
returns an array of contained entries .
analyze the operations .
calculates the operation analysis map .
calculates the type ids of all type ids .
collects the metrics of {
this method to prepare .
deploys the given target .
{
stops the web app .
{
{
returns the bean . < / p >
adds a weld service .
registers an endpoint config .
adds the set of {
{
{
called when the timer is active .
/ *
{
gets the declared methods of the given class .
gets the declared fields of a class .
sets the accessible object .
get a constructor from the given class .
get a method from the given class .
fix the addresses of the given domain address .
adds the given {
check if the given parameter is allowed to be allowed .
adds the generic transport to the factory .
sets the attribute definition .
/ * ( non - javadoc )
{
{
cancels the flag .
runs the state of the state .
sets the type of the database .
get the page data from the page .
get a log sequence from a byte array .
clones the given object to the given object .
{
parses the input graph from the input stream .
create an index definition for the given class names .
extracts the field name from a field definition .
checks if the given index can be indexed } .
counts the number of conditions in the given threshold .
finds all classes in the given directory .
returns a list of classes that match the interface .
gets the generic type of the given class .
gets the generic type of the given field .
checks if the given class is a java type .
{
{
derive a field type .
execute the given resource .
update the record .
finds a record in the cache .
execute the database .
{
{
{
{
/ * ( non - javadoc )
begin begin
creates a new edge .
calculate the sharding strategy for the given query .
returns a map of minimal clusters of the given in sharded .
returns a set of the cluster that are that are all the servers that have been that have been that are that cluster .
calculates the target clusters .
translates a distinct distinct projection to translate the given projection .
checks if the given item is distinct .
returns true if the query is minimal .
splits the given a query .
move the left - equality of the given list of expressions .
adds the order of the order
calculate the additional order by projections .
splits the given a group into a group .
adds a group by expressions .
extracts all sub - queries from the query .
checks if the given database is from the given filter .
handle the class with the given a sort query .
checks if the given oclass is a diamond
returns true if the order of the query .
returns true if the given key is a multiple index .
finds the best index for the given indexes .
finds the prefixes in the given index .
checks if the given item is a prefix .
builds the index search descriptor .
builds the index search descriptor for the given index .
returns the common factor of the given index .
creates a new { @link odocumentfieldhandlingstrategy } .
create a new object from the given stream .
converts the given object into a stream .
{
allow a new role .
checks if the given resource is defined .
returns the status of the server .
initialize the system database .
loads the local databases .
/ * ( non - javadoc )
/ * ( non - javadoc )
------------------------------------------------------------------------
{
{
{
{
/ * ( non - javadoc )
commits the transaction .
/ * ( rollback .
updates the identity after the record after the commit .
updates the record cache cache cache after the record is rollback .
prepare the given operation for the given operation .
moves the given path to the given target path .
returns a list of disjoint patterns .
execute the given node only if there are any of the same as the locally } .
/ * ( non - javadoc )
convert a date to a date
returns true if the socket is connected .
execute the database .
merge a short into a short into a short into a short buffer .
merges the buffers into a byte array of bytes .
merges the given { @code long } into a long } .
split a short into a short buffer .
splits a byte array into a bytebuffer .
splits a long into a long .
execute the database .
executes the given cluster .
{
{
runs the command .
/ *
returns the value at the specified index .
/ * ------------------------------------------------------------
create the current version .
checks if the given offset is valid .
opens the file .
closes the file .
deletes the file .
replace the content of the given content in the file .
get a command .
end a request to the network .
this method to the server to the url
adds a host to the host .
sends a request .
{
{
gets the database .
get a string representation of the given index .
initialize the configuration .
connect to the server .
connects to the server .
returns the connection with the given id .
returns the connection associated with the given address .
kill the connection .
interrupt the connection .
disconnects the connection from the channel .
pushes the distrib to the distrib .
swap the elements of the given index at the specified index .
{
handles the update edge .
change the vertex edge pointer .
check if the record is a record of record .
{
generates a schema of the given package .
generate the schema for the given class .
synchronize the schema of the database .
updates the metadata metadata .
returns the next record in the list .
{
{
{
{
{
reads the next char from the stream .
execute the given record .
create a new {
create a new {
parses the given string as a { @link ocommandcontext } .
{
registers the given class .
get the open files in the open library .
returns the limit of the memory limit .
gets the physical memory size .
returns true if the given {
execute the vertex .
sets the bytes in the given container .
moves the buffer at the buffer .
returns a byte array as a byte array .
set the content of bytes ) to the given byte array .
fills the specified byte array at the specified position .
executes the step until the steps of the step .
executes the full step .
convert the given object to a stream .
returns an array of an array of an object .
{
execute the database .
{
{
writes the given channel to the given channel .
loads the configuration from the given configuration file .
serializes the contents of the network to a stream .
check if the array contains the given int array .
check if the given array contains only contains the given array .
/ * ( non - javadoc )
this method .
assigns the default aliases to the list .
{
{
updates the schedule starting from the schedule .
returns a list of topological sorted schedule sorted by the given pattern .
adds a single result to the request .
builds a select statement .
{
{
adds an index definition .
returns a list of all fields .
returns the value of the given document .
{
returns the list of all the types of the index .
{
generate a string representation of the given index .
execute the record .
splits the given {
determine the type of the source type .
returns true if this is a field chain .
/ * ( non - null schema .
returns the value of the string .
sets the string value .
returns the number of the probe .
{
execute the given cluster .
builds a json odocument from a file .
executes the given map .
/ *
parses the return return string .
checks if the given password is valid .
creates a new hash for the given algorithm .
checks if the given algorithm is supported .
creates a new { @link oindexinternal } . oindexinternal .
rebuilds the index of the specified index .
generate a query order .
{
{
{
/ * ( non - javadoc )
returns a string representation of the given index .
serializes the contents of a stream to a stream .
/ * ( non - javadoc )
removes the given edge .
execute the database .
checks if the given page is filled .
{
parses the given timeout .
returns the lock .
{
execute the given map .
/ * ( non - null graph .
{
merges the given { @link oindexsearchresult } into this one .
execute the schema .
returns a list of values for the given entry .
create a cluster .
free the cluster .
startup the hook .
shuts down the hook .
create a new {
grant the specified operation . < / p >
revokes a resource .
{
{
/ * ( non - javadoc )
converts the given plan to the modifiable result
{
{
binds the parameters to the given map .
convert the given index into the list .
traverses the edge edge from a command .
convert an object to the given index .
get the type of a string .
returns the type of a string .
returns the type of a string .
{
increments the number of elements in the given table .
resets the table .
returns the index of the specified item .
spread a random number of the given number of bits .
creates a new index .
attempts to the indexes .
returns the index of the schema .
<p > get . < / p >
execute the command .
adds a key to the list .
creates a new index .
{
sets the server role .
adds a new node to the list of partitions .
sets the server owner .
removes a list of partitions from the cluster .
sets the offline server offline .
configures the cluster .
configures the configuration .
remove a listener .
register a database with the given database .
dispatches a response to the thread .
removes a message from the request .
/ * ( non - existing {
returns a copy of this database .
execute a delete record .
execute a read record .
{
notifies that the collection is saved pointer of the collection .
try to merge the other value with the given other value .
removes all listeners from the tree .
transforms an object to a result .
executes the given cluster .
closes all eviction pools .
removes all unregistered
returns a set of function names of all the names .
returns a set of collate names of all collate .
returns a set of command names .
returns a tuple size of the given current position .
writes the status of the response .
write headers to the headers .
write records to the plan .
write a record .
sends a content to the response .
sends a stream to the response .
{
returns the next record in the list .
{
{
opens a new odatabaseobject .
create a new orientdb .
sets the value of the specified value .
closes the owner .
{
process a request .
start a component operation .
completes the component operation .
returns the read speed speed from the cache .
gets the read speed from the file in - memory .
returns the amount of pages of a component is read from the cache .
/ * ( non - javadoc of a component of component is read )
returns the write speed speed in cache ) in cache .
returns the amount of pages of a component is written to the cache .
returns the cache hits for a component
returns the amount of pages in ) of the given component .
pushes the counters counters .
push the cache counters .
pushes a storage counters to the storage .
/ * ( non - javadoc )
pushes a component counters .
converts this {
increments the page access access to the cache .
stops the write cache .
stops the fuzzy checkpoint .
stops the page read from the cache .
stops the full checkpoint .
stops the page write .
stops the commit timer .
/ * ( non - javadoc )
/ * ( non - javadoc )
make a snapshot of the snapshot is needed .
{
returns the ostatement from the given statement .
returns a statement from the map .
parse a ostatement object from a ostatement object .
starts the network .
initialize the receive messages .
init
called when the timer .
initialize the leader leader .
serialize the given message to a byte array .
encrypts a byte array .
removes the record from the graph .
sets the properties of this element .
{
{
/ * ( non - javadoc )
saves the given cluster .
{
{
/ * ( non - javadoc )
detaches the record from this element .
attaches this element to this graph .
returns the graph graph .
validates that the given element is valid element .
checks if the given class name is a valid schema .
sets the properties of this object .
gets the value of the enum type .
wraps the given {
{
{
{
{
{
{
define a vertex attribute strategy .
define an edge attribute strategy .
{
{
{
creates a new {
creates a new { @link ographmlreader } from the given { @link inputstream } .
creates a new { @link ographmlreader } .
{
{
{
returns a list of record entries by class belongs to the given class .
returns a list of record entries by cluster ids .
adds an index entry .
merges the given set into a set of source .
authenticate the server .
config the configuration of a configuration .
returns the user .
checks if the given resource is authorized .
result
handles the update edge .
parses the return value .
gets the indexed function ) the given operator .
/ * indexed function to estimate indexed function ) of the given operator .
checks if the given operator can be indexed in the given index .
{
{
{
{
/ * ( non - javadoc )
opens a new odatabasesession .
opens a new database .
create a new database .
create a database .
create
creates a new database if it exists .
creates a collection of { @link ochainedindexproxy .
finds the best index of the given iterable .
{
{
creates a set of keys for the given index .
updates the statistic .
writes a page to the cache .
reads the page from the page .
/ * ( non - empty .
reads a page buffer .
/ * ------------------------------------------------------------ .
closes the file .
opens the page .
{
checks if the cluster is active .
returns a new { @link node } instance .
checks if the given cluster is synchronous mode .
checks if the given cluster is read .
returns a map of all the servers of the cluster .
returns a list of clusters by server names are defined in the cluster .
returns a set of partitions .
check if the server clusters is all clusters .
checks if the given server is containing the given cluster .
returns a list of all servers .
returns a list of master servers .
returns all configured set of configured servers .
gets a set of a server .
returns a set of a node .
returns the owner of the cluster .
gets the owner of the configured cluster .
returns a list of configured servers .
get the server role .
returns a set of servers .
returns a set of data centers .
get the data center of the data center .
checks if the cluster is sharded .
returns a list of servers .
gets the data center of a server .
gets the global read quorum .
returns the read quorum of the given cluster .
returns the write quorum of a cluster .
gets the cluster configuration .
returns the data center .
get the quorum quorum .
clears the init stack .
encodes a class names .
get the names of the names of the edge .
encodes a class name .
decode a class name .
configures the graph .
{
drop the index .
{
adds a vertex vertex .
adds a vertex vertex .
adds a temporary vertex vertex .
{
returns the orient vertex for the given id .
returns an iterable of all vertices of the given class .
returns an iterable of all vertices of the given key .
returns the vertex by key .
returns an iterable of all vertices of the given label .
returns an iterable of all edges of the given class .
gets an iterable of the given edges .
gets the edge edge .
reuse the database .
shuts down the database .
returns a {
gets the vertex type of the given type .
creates a vertex type type .
create a vertex type type .
creates a new { @link orient . vertex .
drops a vertex type .
gets the edge type .
creates an edge type .
create an edge type .
creates a new { @link orient .
returns the element associated with the given id .
drop a key index .
{
{
returns a set of indexed keys of the given element .
removes all edges from the graph .
removes the inverse edge from the graph .
deletes the edge if it exists .
{
fire the background exception listeners .
check if the space of the page .
reads the name of the name of the name of the file .
/ * ( non - property matches the specified property name .
execute the given cluster .
start the thread monitoring .
starts the monitoring .
stops all the threads .
registermbean
unregistermbean
returns the amount of pages of the specified component is associated with the given name .
returns the cache hits for the given component .
fetch all the counters .
fetch all system counters from the counters .
fetch all the threads from the component .
updates the dead threads .
returns the value at the given index .
compress a json string into a string .
returns the property .
create a new instance of an instance } .
detaches the pojo from the pojo .
detaches all items from the pojo .
saves the current record .
saves the given cluster to the given cluster .
saves the given object to the given cluster .
get the version of the record .
registers the field mapping .
create a new { @link ocommandrequest command .
converts the given object to the given object .
sets the dirty record .
unset
converts the given parameter to a map .
returns a set of index types .
returns a set of all engines .
creates an index based on the specified by default index .
collects a response .
sets the local result of the local node .
waits until the current node to wait until the node is completed .
returns a list of missing nodes .
returns the list of conflict responses .
returns the best responses of the best responses .
computes the quorum response of the given quorum .
gets the list of received responses .
get the oexecutionplan object from the database .
get the internal internal use only )
returns a list of the match aliases .
{
returns the library of the given db .
acquires a database engine .
release a database engine .
registers the given script .
returns the next position from the given operation .
updates the size of the tree .
removes the given identifiable from the new counter .
processes and processes the index and processes the index .
unboxoresult
{
checks if the given index can be used to check if the filter .
returns the index the index of the first character in - place .
<p > checks that the number of the first character in - place .
/ * perform the jump of the specified text .
checks if the given string starts with the given string .
sets the fetch plan .
{
{
{
execute the database .
returns a map of dependencies that match .
sorts the list of the edges .
assigns the default aliases to the list of expressions .
creates a new instance of the given class .
deregister the entity classes for the same as an entity .
registers all entity classes for the given class loader .
registers all entity classes for the given class .
sets the class handler .
acquires a user from the database .
returns the available connections for a given user .
acquires a user from the database .
executes the database .
dumps the current magic to the log .
looks up an iterator of the given orient class .
returns the maximum number of memory memory .
checks if the cache memory is valid .
fix the common configuration problems .
creates a { @link vertex } .
creates a vertex vertex vertex } .
parses a json edge into a json edge } object .
parses the given json edge into a { @link edge .
creates a json edge from a json object .
serializes an element to a json element .
creates a new { @link object } object .
creates a new { @link vertex } object .
creates a new { @link edge } from a { @link jsonobject .
creates a new { @link jsonobject .
creates a new { @link ographsonutility } instance from the given element .
execute the given import .
returns a list of {
{
{
{
gets the comparator of the given class .
returns the active cluster map of the active cluster map .
returns a map of active data center .
/ * ( non - javadoc )
returns the id of the index .
returns the algorithm into a string .
creates a new { @link osymmetrickeyconfig } .
creates a new { @link osymmetrickey . osymmetrickey .
creates a osymmetrickey from a stream } .
creates a new { @link osymmetrickey } from a keystore file .
creates a new { @link osymmetrickey instance of the given keystore .
encrypt the given string .
encrypts the given byte array with the given bytes .
decrypt the given string as a string .
decrypts the given string .
saves the contents of this outputstream to the stream .
save the key to a keystore .
{
{
{
sets the child of this context .
adds a new object to the list .
{
{
{
{
/ * ( non - javadoc )
returns the value of the object or null if it exists .
authenticate the database .
returns the map of a map of the value .
checks if the current content has the same content .
returns true if the given odocument has the same content .
returns the remote address .
get the record .
reads the current record .
imports a delta from the specified database .
compute the gcdist gcdist )
returns the simple heuristic cost of a heuristic .
returns the cost cost of the cost .
returns the diagonal heuristic cost of a diagonal .
returns the euclidean heuristic cost of a heuristic .
returns the tie cost of the cost .
gets the tx graph .
returns the no - op graph .
get the database .
checks if the database exists .
sets the pool pool with the pool .
get the property .
{
parses a ostatement object .
gets the next token .
gets the token at the specified index .
/ * parse exception .
returns the name of the connection field .
returns the inverse field name .
replaces all links of the given vertex with the given name .
get the edge for a given field .
{
{
{
{
moves the specified cluster to the specified cluster .
{
adds an edge to the given vertex .
adds a new edge .
counts the number of edges in the given direction .
{
returns an iterable of all edges of the given direction .
/ * ( non - javadoc )
{
gets the connection class name .
returns the connection for the given direction .
returns a list of connection fields .
processes the broken rids .
execute the database .
returns a map of console .
{
{
{
installs the database from the network .
{
create a new role .
execute the command .
returns the object that is used to use .
waits until the next retry .
gets the argument argument .
returns the number of parameters defined in the request .
connects to the server .
returns a list of the network .
get the server info .
creates a new {
creates a database .
checks if the specified database exists .
drop a database .
get the freeze .
release a database .
returns the cluster status .
executes the given index .
returns the graph of the graph .
parses the retry .
resets the work .
save the record in the cluster .
delete a record .
config
returns the authentication header .
sets the configuration .
authenticate the user .
checks if the given resource is authorized .
returns the user .
{
/ * ------------------------------------------------------------
initializes this object .
/ * ( non - javadoc )
initializes the inputstream from the input stream .
/ * ( non - javadoc )
initializes the re .
/ * adjust a line column column .
{
{
{
sets the bucket pointer .
returns the bucket pointer for the given offset .
{
starts an atomic operation .
/ *
acquires an exclusive lock from the given lock .
acquires the exclusive lock till the exclusive lock .
change the maximum amount of pages ) of memory ) of the memory .
/ * ( non - javadoc .
{
store the queue state of the given in the cache .
listen to the server .
read the parameters from the configuration file .
applies the storage filter to the cache .
shuts down the log .
adds a key / value pair .
removes the specified key from the cache .
acquires an entry from the cache .
checks if there is open files are open .
returns the value associated with the specified key .
clears all the buffers from this list .
closes the given key .
poll the empty buffer .
/ * read - read from the list of buffers .
add a task to the write .
this method to the next .
puts an entry in the buffer .
returns the number of the number of the specified value .
{
{
called when an event .
/ * ( non - null ocommandrequesttext instance ) .
converts the given object to stream .
creates a new instance of {
returns a string representation of this object .
convert the given key to a string .
convert
returns the object serializer .
process a request .
adds a shutdown handler .
initialize the shutdown queue .
registers all the engines .
returns the engine with the given name .
returns the engine with the engine name .
returns the running engine .
{
{
removes the given state from the state .
adds a new readers .
adds a shared lock .
this method should be called when the entry .
/ *
returns true if this entry is shared .
returns true if the given entry .
returns true if the current readers .
returns true if the given timeout lock .
authenticate the user .
creates the metadata for the database .
execute the list of objects
dumps a heap to a heap .
acquires a read lock from the queue .
checks if the given edge is labeled .
gets the record label .
removes the lightweight from the vertex .
{
returns the out of the current graph .
returns the oidentifiable .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
{
{
{
{
convert this {
gets the class name .
executes the database .
{
{
{
execute the database .
{
{
this method to begin .
end all threads .
creates a vertex vertex .
creates a new edge .
execute the database .
/ * ( non - javadoc )
parses the given request .
parse a strategy .
{
{
{
/ * ( non - javadoc )
returns a list of positions from the given embedded collection .
{
fix the given field .
initialize the transaction type type .
execute the database .
intercept the given a ) .
fills the given record with the specified version .
sets the identity of the cluster .
sets the identity of the record .
sets the version of the record .
returns the record type of a record .
initialize the database instance .
handles a message .
prints an exception message .
prints an exception trace .
execute the given index .
convert the given key to the link2record .
{
{
registers a command instance with the server .
sets the configuration configuration .
creates a server user .
authenticate the user . < / p >
checks if the given resource is authorized .
gets the user .
analyze the given condition .
creates a new { @link oindexsearchresult ()
detaches the given object from the given object .
detaches all objects from the specified object from the specified object .
attaches the given object to the given object .
calculates the properties of a property .
gets the index of the index .
calculate the metadata of the given ocommandcontext .
returns the next value in the cache .
returns an iterable of all the elements of this iterable .
execute the given object .
{
truncate the database .
check if the given class is a sub class .
check if the given class is a sub - class .
adds the base class to the list of subclasses .
adds the polymorphic cluster ids .
{
convert the given object to a stream .
builds a sort field .
reads the input stream .
{
acquires a direct pointer from the pool .
releases the given pointer .
check if the memory leaks is valid .
clears all pointers .
convert a byte array to - bit integer to a byte array .
finds the persistence unit with the specified unit .
parses the persistence unit from the given xml url } .
receive notification of the start of an element .
writes an unsigned long value into the given container .
read a signed long from a long value .
reads an unsigned unsigned long value from a variable .
{
installs the database from the network .
installs the clusters of the database .
executes a database in the given database .
dumps the servers status .
returns the index of the first occurrence of the specified list .
<p > returns the first occurrence of the array .
returns the index of the first occurrence of the array .
parses the given request .
{
/ * ( non - javadoc )
returns the number of the query .
apply the partial order to the partial order to the partial .
reports a tip to the context .
parses the given string .
check if the cache is no cache .
optimize the sort sort sort .
/ * to the target .
notifies the status of this listener .
executes the command .
creates a new link .
sets the error .
creates a new {
returns a set of records that have been changed .
starts the gathering statistic .
complete the gathering statistic .
preallocate all the clusters in the clusters .
commits the given transaction .
/ * ( non - null value .
rollback the transaction .
renames a cluster .
{
registers a cluster .
checks if the low disk is only valid .
sets a property .
execute the database .
{
executes the database .
create a new command .
loads a record from the database .
deletes the given record .
{
{
executes the given command .
counts the number of the cluster elements of the cluster .
{
checks if the given resource is security .
checks if the given resource is specific .
checks if the given resource is security .
sets the status of a } .
sets the user s user .
registers a hook hook .
register a new { @link odatabase } .
unregister a hook .
callback method .
enable or disable validation should be enabled .
deletes the record .
loads a record from the database .
execute the record .
/ * ( non - javadoc )
browse a class .
{
{
{
{
{
counts the view of a view in the view .
counts the count of the number of the schema in the number .
{
registers an oencryption } .
reads a byte array of bytes into a byte array .
returns the index of the relative chunk in the given chunk .
parses the current word .
parses a required word .
parses the next chars in the list .
check if the parser is optional .
checks if the given character is a valid separator .
returns a list of the destination .
execute the database .
clears the configuration files .
convert the given record to the record .
returns the offset in bytes as a byte array .
extracts the token from the token .
returns the access token .
acquires an access token .
copies the current token from the authentication .
registers a bean definition .
parses a node .
parse a date from a date .
processes the given parameter .
{
completes a task with the given operator .
completes a task .
creates a new {
takes a task with the specified operator .
==============
adds a task to the task .
removes a task from the task .
creates a new task for a given task .
creates a new task .
assigns the task to the actor .
creates a new task .
returns the task model for the given id .
creates a new task .
creates a new task .
saves a task to a task .
returns the task actors of a task .
returns a string representation of actors .
checks if the given task is allowed .
opens the given resource .
copies the contents of the given input stream to the given output stream .
copies all bytes from the input stream to the given output stream .
initialize the session .
initialize the data .
get
checks if the given operator is allowed .
parses the given element .
initialize the configuration .
gets the data source .
returns a connection from the database .
returns the required result in the given collection .
lookup a column name in the database .
retrieves the value of a result in the given set of the value .
retrieves the value of a result in the specified by index .
returns the database type of the database .
returns the dialect for a dialect object .
is
returns the arguments .
configures the {
set the list of the service .
start an instance of an instance with the specified id .
start a process instance of the process with the given id .
create an order by name } with the specified name and version .
starts an instance with the specified name of the given version .
start a new instance of an execution .
executes an execution .
executes a task .
executes a task .
executes the given task and returns a list of tasks .
creates a free task .
executes a task .
handles the specified execution .
{
runs a script .
get
sets the order of the order .
returns a list of elements of the given element .
get a string representation of the given string . < / p >
textxml
build
checks that the given string is not null .
this method to the execution of the task .
creates a new task .
finds the fork task names of the given node .
finds the active nodes in the model .
creates a new {
gets the engine engine .
puts an object into the given context .
puts a class with the given class .
finds the given class .
finds a list of {
finds the named named class name .
handle the given execution .
execute the given process .
callback
initialize the configuration .
casts the given object to a long .
loads a class from the classpath .
instantiate
instantiates the given class .
returns a list of work models .
returns a list of task models .
returns a list of all models .
gets the start of the start of this node .
returns the node with the specified name .
checks if the given node contains the given node names .
finds the first matching matching the given class .
finds a list of all the given class .
finds a named class by name .
puts the given class .
builds the snaker engine .
parser
parses the xml document .
returns the field value .
sets a field value .
invokes the given method on the given arguments .
finds a method with the specified name .
schedules the given entity .
starts the configuration .
sets the model for this process .
intercept the given execution .
called when the given execution .
parse a node .
returns the scheduler that ischeduler .
{
initializes the mapped class .
returns the underscore name of the given name .
returns the property descriptors of a given class .
updates the type of the process .
gets the process by id .
get the process by version .
deploys an input stream into a string .
removes the given entity from the given input stream .
undeploys the process .
removes the specified history .
get a list of processs that match the given filter .
returns a list of processs that match the given filter .
cache
clears the entity from the cache .
parses the given byte array into a process .
parses a model model .
parses the given node .
gets the next task models .
{
{
runs the given execution .
intercept a list of the given a list of the given execution .
checks if the given node can be rejected .
saves the process to the database .
{
{
creates a proxy object .
/ * ( non - javadoc )
checks if the given method is match .
creates an order .
creates a new order .
adds a variable to the order .
create
saves the order of the given order .
sets the order of the specified order .
this method to the given order .
completes the order .
terminates the specified order .
resume an order .
removes all active history .
build
build
returns the dialect associated with the dialect .
saves the process .
updates the process .
runs the script .
converts a json string to a json string .
returns the property associated with the given key .
returns the numer property .
loads the properties file .
checks if the buffer is more characters .
read a line from the stream .
reads a line from the stream .
reads a line from the stream .
/ * ( non - javadoc )
skips the number of bytes .
{
ensures that an array < / code > not< / code >
ensures that the given array is not { @code offset .
merges the given two lists of the elements in the place .
returns the lower bound between the lower bound .
returns the number of bound bound to the upper bound .
merge the sort sort of the specified by the given comparator .
swap two elements of two matrices .
sorts the quick sort sort .
sorts a sort the given the range .
returns the number of bits in a int
returns the number of the number of a long .
clears the file .
{
truncate the file to the given file .
{
{
/ * ( non - javadoc )
refresh the end of the end of the end of the consumer .
waits until all tasks have been successful .
creates a new {
finds all matches of the given query .
compact all the compaction .
finds all compaction targets of the compaction .
get
returns the matching ordinal of the specified object .
sets the value at the specified index .
removes all files from the list .
returns the hash code for the given field .
checks if two fields are equal to see if they are equal .
adds all transitive schema matches the given state of state .
removes all referenced schemas from the given map from the given map
adds a referencing closure to the list of schemas to the given {
updates the current version of the plan .
{
called when the announcement )
{
reads the tags from the header .
adds an object to this method .
writes the given object to the given object .
extract the primary key from the object .
initializes the type of the type } .
removes all the segments from this thread .
returns a copy of this thread } with the same size } .
creates a new { @link thread } that contains all segments in the specified in } .
gets the segment for the given segment .
updates the cycle metrics .
updates the cycle metrics .
*************************************************************************
reads all listeners from the input stream .
{
returns the number of bits in the number .
reads the snapshot from the input stream .
updates the delta state )
returns the value of the field value .
sets the value at the given index .
copies all bytes from the source byte array .
copies the contents of the given byte array to the given byte array .
checks if the given range of the same range of this range .
copies all bytes from the given array } to the given destination array .
copies all bytes from the given byte array to the given byte array .
/ * bytes from the input stream .
writes the contents of this stream to the given } .
ensures that the given segment is capacity .
returns the position of the field .
calculates the total number of the select number of buckets .
*************************************************************************
checks if the given dataset has a collections in data set .
generates the files for the files in the given directory .
generate the files for the hollow .
checks if the specified key matches the specified keys .
returns the record key for the given ordinal .
initializes the data model .
initializes the data model .
restores the state from the { @link hollow } from the given { @link hollow .
enables the primary producer .
publishes the given listener to the listeners .
checks if the given {
adds a type listener .
creates a field path } for a primary key .
creates a { @link path } for a given hash } .
creates a field path for a { @link hollow } .
creates a new { @link field } from { @link {
puts an object into the cache .
updates the plan plan .
include the next delta in the plan .
this method initializes .
returns a string representation of the given ordinal .
finds the keys with the given prefix is a prefix .
checks if the specified key contains the given key .
returns the change of the change in the change .
adds a type recursive .
adds a type to the list of schemas .
adds a field to the configuration .
adds a field recursive .
adds a field to the schema .
create a hollow from a string .
adds a listener to the list of listeners .
returns a list of hollow ordered } that are ordered {
initialize the class with the next major version .
sets the value at the specified index .
returns the value at the specified index .
finds all records of the given field with the given field value .
finds a map of the given field name .
sets the element match .
sets the element key paths .
calculates the number of threads .
adds a diff to the list .
adds all results of this field to this field .
{
triggers the refresh version .
triggers the given delay with the delay .
triggers the refresh to the given version .
returns a new {
--------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------
round the trip to the given engine .
creates a new { @link hollow } instance .
creates a {
creates a new { @link hollow } from the given { @link hollow } .
restores the data model from the latest state .
runs the cycle .
executes the given description of the given callback .
exclude the given a )
this method .
writes the header to the output stream .
returns the number of bits in the schema .
calculates the type of the type of the type .
sets the primary key to the primary key .
combine all the threads to the primary key .
writes the data buffer
returns the field buffer .
writes a fixed length of a fixed length .
writes a long length of the number of bytes .
returns a stream consisting of the number of the current stream .
return the ordinal of the given ordinal .
sorts the given array .
hash
hash
adds an element to the list .
returns a list of elements in the specified node .
resizes the storage of the storage .
process a file .
/ * ( non - null representation of the given ordinal .
assigns the ordinal to the given {
find the free ordinal of the given ordinal .
prepares the write
compact the given keys .
compares the given {
resizes the given size .
grows the key array .
rehash
returns an empty {
returns true if this field is equal to the given match .
returns the number of a field name .
finds the first matching the given key .
creates a new {
swap the current {
parses a list of schemas from a list of schemas .
parses a schema schema from a string .
returns the default type name of the given type .
returns the number of elements in the number of elements in the number of elements .
{
runs the compaction cycle .
writes the snapshot of this stream .
writes the delta to the output stream .
adds the given set of schema to the schema is not primitive .
/ * [ deutsch ] ) version .
adds all validators for a schema to the schema .
generates a accessort method name .
normalize a field path to a param name .
reindex
finds the index of the given query .
triggers a random delay with the specified delay .
triggers the given delay with the delay .
adds a diff type to the diff .
calculates the diffs of the diffs .
updates the delta
calculates the occurred occurred for a snapshot .
removes the historical historical states from the historical states
writes a byte array to the buffer .
writes a long to the output stream .
writes a byte array to the buffer .
writes a byte array to the output stream .
reads a 32 - bit from the given byte array .
convert a byte array to an int .
reads a byte from the stream .
reads a long value to a long .
returns the length of a byte array from the specified position .
reads a long from the input stream .
convert a long value to an integer .
counts the number of bytes in the range of a range .
{
adds a view to the view .
creates the loading layout .
called when the layout .
called when the layout . <p >
refresh the size of the loading views . <p >
sets the header scroll .
shows the footer .
pull the event .
{
{
{
{
{
{
documentation inherited by view .
scrolls the scroll by the specified view .
{
sets the empty view of this view .
adds a new { @link predicate } to the returned { @link predicate } .
{
{
{
gets the value associated with the given name .
gets the value associated with the specified name .
gets the dbl property .
sets a value for the specified value .
{
adds a new {
adds a new facts .
adds a new { @link builder } with the given names .
creates a new {
creates a new {
adds a new {
creates a new {
adds a new {
adds a new { @link rule } to the given { @link rule } .
adds a new { @link rule .
create a new { @code builder } with the given { @link rule } .
adds a new { @link rule } .
maps the facts to the properties of the given facts .
returns a new rule .
run the rule .
adds the given facts to the list } .
adds a new { @link rule
adds a rule to the list .
returns a list of annotated with the given annotation .
returns the annotated field annotated with the given annotation .
returns a list of annotated with the given annotation .
returns the annotated method annotated with the given annotation .
gets the annotation of the given annotation .
create a new {
{
{
{
{
{
{
{
register a new rule .
updates the status of the rule .
returns a map of rule status .
creates a new {
adds a new { @link rule .
adds a new { @link rule .
{
{
{
{
{
/ * ( non - javadoc )
adds a new rule .
adds an action to the rule .
adds an action to the builder .
sets the specified {
resets the value .
{
{
adds a new { @link rule .
adds a { @link rule } .
adds a new {
returns the list of pojo rules that are annotated with the given package .
combines two arrays .
combines two elements of the given array into a new array .
reads an empty line or end table .
skip all columns until the table is found .
creates a {
adds the services to the builder .
converts a list of services to an array of services .
extracts the labels from the labels .
extracts the list of a list of a list of the image .
gets the list of the build configuration .
extracts the list of ports from the config .
parses the port mapping .
adds the port if it exists .
removes a list of ports from the list of ports .
gets the default service name .
adds the missing service parts .
append an image stream to the file .
get the service from the service name .
check if the ports match is match .
returns the service name to use for the given service .
returns the service host and port for the port .
puts the given value in the given map .
merge all the given map into the given map .
/ * maps of the given map into a map .
put
ensures that the template is a template .
updates the containers of the template .
merges the image configuration with the given containers .
waits until the pod is ready to wait .
returns the image name for the given image name .
bc
validates that the kubernetes id is valid .
convert the given entity to a list of metadata
gets the resource version of the resource .
creates a string representation of an int .
convert an int to a string .
checks if the given pod is ready to see if it is ready .
get the current context from the config .
checks if the given route has a route .
replaces all properties in the given text .
adds a shutdown hook .
blocks until the pod to the pod .
creates a class loader from the given classpath .
returns true if the given artifact has the specified artifact .
gets the dependency version of the artifact .
returns a plugin with the given artifact .
checks if the given resource has a resource .
gets the version of the given artifact .
returns true if the image is open .
reads a list of resource fragments fragments from the given platform .
returns the metadata of a file .
reads and reads file and enrich .
returns a map of the fragment .
converts a map of {
merges all simple fields of the target object into the given target object .
merges the given a {
merge
checks if the pod spec is a local customisation .
read a map from a file .
flatten
converts the given a map of the map .
adds a port if the port is valid .
gets the url of the url .
gets the docker json config string .
gets the plugin configuration .
returns the secret configuration .
downloads the given url from the given url .
returns a random random port .
compares two strings .
finds a profile in the profile .
creates a { @link processor } instance } with the { @link processor .
looks up a profile .
reads the profile
read all profile from a classpath .
finds the profile yaml for the given a directory .
returns a list of profile paths for the profile .
reads a list of { @link profile .
finds the main classes in the given directory .
adds the git service url .
gets the image pull policy .
returns true if the shift is open .
returns the count of the given resource .
returns the first child element in the given element of the first .
returns the text content of the node .
applies the given dto to the given source object .
applies the entity to the entity .
apply
installs the template .
apply the given service account to the service .
removes the tag from the tag .
applies the given entity to the given entity .
applies the project to the project .
apply the project request to the project .
gets the namespace .
called when the error is called .
returns the stroke for the stroke .
===============================================================
{
/ * ( non - javadoc )
extract the element from the xpp3dom .
returns a map of main configuration .
returns the number of seconds of a duration .
returns a duration of a duration in a duration .
scans the given directory and returns the directory .
check if the given service id is a service .
disable the process the process .
checks if the given service has a ingress .
returns the root project folder .
gets the root project .
{
parses the given mapping from the properties file .
{
returns the generator context .
extracts the generator config from the configuration file .
returns a {
extracts the enricher from the blend .
extracts the icon ref .
gets the default icon ref .
copies all app config files from the app directory .
returns the embedded icons for the given icon . <p >
get the spring boot application boot application .
loads the properties from the given url .
gets the spring boot version of the maven project .
creates a list of service objects for a { @link descriptor .
enrich
logs the enrichers enrichers .
get the thorntail properties from a yaml file .
gets the raw config .
gets the configuration property .
sets up the validation rules .
{
get the flattened map from the flattened .
returns the sanitized id .
extract the watcher config from the watcher .
returns the singleton template .
get the resolved list of resolved images .
loads the build reference from the build file .
check if two objects are equal .
return
combine all parameters of the given list .
returns the configuration property .
gets the configuration associated with the specified key .
returns a map of a map .
creates a list of processors .
merges a { @link processor } into a { @link processor .
removes all dups from the list .
adds the image to the image .
returns the default string from the mode .
returns the image name .
gets the registry .
gets the absolute path from the given url .
returns true if the configuration is online .
connect
unfold
returns the value of the property property as a boolean .
returns the kubernetes namespace .
create a new { @link jest } instance .
creates the internal node .
scans all the plugins .
extracts the distance between the distance
adds a single field mapping .
adds a multi - field mapping .
parses a json object from a json object .
gets the client metadata id .
gets the metadata of the client id .
converts a json object from a json string .
creates a new { @link venmo } object .
fetch capabilities of the specified card .
send the union of a union .
tokenize a union of { @link braintree .
converts a json string into a { @link local object .
/ * ( non - javadoc )
opens the venmo app page in the google play .
authorize the account account .
create a new { @link card } instance from a { @link jsonobject } .
sends a rewards balance .
converts a json string to a json string .
/ * ( non - javadoc )
{
post
construct a new venmo from a json object .
construct a threedsecureauthenticationresponse from a json string .
collects device data .
collects device data .
collects pay pal data .
returns the metadata of the client metadata .
checks if the certificate is valid .
sends a payment method to the given fragment .
deletes a payment method .
get the start intent .
parses the given request . response .
gets the client metadata id .
perform a verification verification on the given fragment .
perform a verification of the given nonce .
executes the verification of the given request .
creates a new kount object from json object .
tokenize the given { @link braintree } . braintree } . braintree } .
returns the value mapped by {
parse a list of payment methods from a json string .
parses a payment method method to a json string .
parses a payment method from a jsonobject .
returns the endpoint for a given environment . <p >
cancels the url .
sets the success url .
returns the checkout checkout config .
returns the browser billing config .
creates a json object from a json object .
parses the json object to a json object .
creates a new analytics configuration object .
tokenize the given fragment .
get
submits a callback to the specified path .
post
creates a json string from a json string .
starts a payment .
approve the payment payment .
creates an instance of { @link authorization from a string .
returns the error error for the given field .
creates a json object from a json string
/ * ( non - javadoc )
create a new instance of an activity } .
adds a listener to the list .
removes a listener from the list .
gets the google api client .
creates a new { @link google } object .
request
creates a payment resource .
called when the activity is sent to the activity .
parses the given {
parses a json object from a json string .
create a json object from a json object to a pay object .
adds a list of nouns to the dictionary .
removes a word from the dictionary .
converts a list of tokens to a list of tokens .
convert a list of tokens to a list of tokens .
extracts a list of the phrases into a korean
convert a list of tokens to a string .
sets the unmodifiable set of the given { @link char .
reads bytes from the given { @link byte [] } into the given { @link bytebuffer } .
calculates the q div between two - dimensional q .
calculates the q div2 of a q .
convert a {
reads a byte array of bytes from a bytebuffer .
sets the avc to the avc
creates a new {
/ * nal to a bytebuffer .
/ * bytes to the given result .
/ * bytes from the given buffer . sps } . sps into the {
reads a collection of the given { @code in } into a { @link sps } .
calculates a new { @link sample .
creates a new {
creates a byte array of nal into a {
writes a list of units to the specified {
/ * get the luma of a block .
/ * get the luma00unsafe of a byte array
/ * get round of a luma20no .
/ * get the number of a byte array
/ * get the number of a byte array
/ * get the luma10 of a byte array
/ * get luma03 into a byte array of bytes
/ * get the luma21 ) of bytes of the specified number of bytes .
/ * get the luma22 luma22 ) of a byte array of luma22 )
/ * get a byte array of a byte array of bytes in a byte array .
/ * get the luma23unsafe of a byte array
/ * get the luma12 of a byte array .
/ * get the luma12unsafe of a byte array
/ * get the luma11unsafe of a byte array
/ * get the luma13 ) of a byte array of a byte array .
/ * get the luma31 of a byte array
/ * get the luma31unsafe of a byte arrays
/ * get the chroma00 of a byte array
/ * get the chroma0x of a byte array
/ * get the chroma of a byte array
/ * getchromaxx
decodes the channel map .
returns the profile for the given int .
generate a fixed precision of a fixed precision .
computes the plane in the plane into the plane .
returns the start of the start of the given sample .
calculate the number of a channel .
returns the number of bands in the master table .
finds the number of the specified range of bands .
compute the master frequency of a master table .
returns the derived frequency of the given a table .
reads the next marker from the stream .
reads the next marker from the stream .
reads a tree3 from the tree .
returns the max frame of available available frame .
/ * this method into a pass2 .
prepare the range of range limit .
modify the given file .
copies the contents of the given file to the given file .
calculates the prediction of the prediction .
calculates the chirp factors .
decode the window .
returns the edited duration of the given track .
convert a frame to a timevalue
convert a trak to a frame
converts a media box to a edited edited
converts a trak to a media box
computes the qt of a movie frame .
returns the qt time of a movie .
convert a movie timecode to a string
returns the qt timecode of a player of the given a movie track .
convert a timecode to a timecode frame
formats a timecode in a timecode track .
returns the number of an integer in an integer
sets a list of the given list .
check if the given input matches the given color .
returns the size of the given size .
returns the native frame with the native metadata .
get the native frame .
returns a picture at the given file .
creates a frame from a channel .
get a picture from a file .
creates a new { @link channel } object } from the given { @link channel } .
returns a native frame at the given frame .
returns the native frame at the given vt .
get the native picture of a native frame .
get the native frame at the given sec .
creates a new {
/ * processltp
/ * ( non - javadoc )
reads a cache from the stream .
{
{
{
{
{
{
returns a copy of the current frame .
/ * fft of a fft .
/ * dct4 kernel
creates a { @link wav from the given format } .
calculates the wav channel into a multi - memory channel .
returns the number of bytes in an integer at the specified offset .
/ * ( false ) is a byte
peak
reads the side - info from a mpa .
reads the next frame from the input stream .
get the next frame .
read a byte array from a byte array .
/ * ( non - javadoc )
reads the pic from the decoder from the decoder .
shows the frame .
splits a movie into a list of { @link edit .
decode a frame .
/ * ( non - endian endian endian .
/ * deblockmbgeneric - border
compute the strength strength for a given strength
encodes the native frame into the given { @link picture .
encodes a long value into a byte array .
computes the length of a byte array .
returns the ebml
/ * compute long value from an array of - long value .
/ * dst .
/ * imdct12 matrix to - dst matrix
/ *
/ * header from the ld .
returns the number of data in the channel .
reads a single channel element from a single channel .
reads a channel pair from the element .
reads a number of a frame .
/ * dtdf from a ibitstream
/ * mode .
adds a coding coding .
/ * sbr : envelope
/ * read - noise - noise
return the number of bytes to an integer .
adds a packet to the list .
reads a ebml from a byte array .
check if the reposition from the payload .
/ * convert a short buffer to a short buffer
/ * this buffer .
decode a bin .
decodes a bin bypass from the number .
read a marker into a byte buffer .
compute the envelope of a border in a border .
/ * filter2 for a channel
/ * filter4 for a channel .
/ * filter8
/ * filter12
/ * huff data in - huff data
reads a bit from the ld .
returns the delta between the delta .
decode the delta .
/ * decode the modulo of the modulo .
decode
computes the decorrelate of decorrelate of the decorrelate .
computes the group of a group .
returns a sample of the given int .
/ * ( non - javadoc )
clones this instance of this picture .
/ * spectral - spectral
start the given block .
coeff
/ *
creates a h264decoder from a codec .
gets the parent of the given mkvtype .
concatenate all bits of this stream into a buffer .
/ * [ deutsch ] <p > konstruiert einen reverse32 reverse32 .
/ * [ deutsch ] <p > konstruiert einen rewind .
decode the gain
schedules the task .
get a bitmap from a file .
get a bitmap from a file .
returns a copy of this bitmap with the specified metadata .
get
returns a copy of the frame with the specified metadata .
get a bitmap from a file .
get a bitmap from a file .
get a bitmap from the given frame .
get a bitmap from the given track .
get a bitmap of a frame
returns a bitmap of the frame .
seek the number of bytes
returns the pixel buffer for the given frame .
/ * this method .
split the given a picture in - place .
calculates the window of a window
calculates the function data for a function .
compute the calculatefmd of the level
returns the number of getgainchangepointid
compute the gain of the gain .
returns an array of bytes from byte array .
converts an array of bytes to a byte array .
converts the given { @link audio into a { @link byte array into a { @link byte } .
converts a { @link bytebuffer } into a { @link bytebuffer .
/ * audio format into the audio into the given format .
writes the given number of bytes into a sample of the given buffer .
/ * ( non - sample ) .
builds a map of dispersed from the given number of groups .
builds an array of a map .
builds an array of the wipe map .
reads a number of bytes from a byte array .
reads a byte array from a byte array .
returns a buffered frame from a file .
returns a buffered image from the given file .
returns the native image .
reads a frame from a frame .
get a buffered image from a file .
returns a buffered image from a frame .
returns a buffered image from a frame .
returns a buffered image of a { @code seekable .
returns a buffered image of the frame .
calculates the number of bytes from the given buffer .
returns the number of two vectors .
encodes a coeffs into a coeffs .
reads a list of scaling from a reader .
reads a scaling list of a list of the scaling .
encode a frame into a frame .
/ * ( non - null frame into a byte array .
encodes the given frame into a byte array .
returns the meta - meta - property .
returns the meta - meta - property )
set a property .
set a property .
returns the value of the rational ) .
sets the property value .
<p > returns a list of codec .
<p > a list of tags .
returns the supported codec id for a .
returns the number of pinned pinned pinned order .
dumps the memory log .
adds a reference to the list .
gc the internal queue .
start the collection of collection .
flushes all the survivors .
/ * ( non - zero bytes .
adds a new picture to this picture .
loads a library from the library .
unpack a library from the specified path .
deletes all temporary files in the directory .
returns the default { @link audio for the given channels } .
returns the index of the channel in the layout of the layout .
returns a { @link audio } instance of the given { @link videojni .
returns the format of the given name .
returns the installed format descriptor for the given format .
swap two {
returns the size of the pixel size of the specified in the given width .
creates a new {
create a new {
create a new { @link media .
create a new {
/ * ( non - javadoc )
get the side data ) side data in this packet .
returns the side data type of the specified packet .
finds a filter type by name .
opens the given url .
reads the contents of bytes from the input stream .
seek to the specified by the specified offset .
writes a byte array to the output stream .
check if the given url is streamed .
returns the component descriptor for the given component .
returns the version info .
returns the default time of the videojni .
returns the flag constant at a specific position .
returns the flag constant .
creates a new {
/ * ( non - javadoc )
opens the given { @link demuxer } .
closes the <code > )
/ * ( non - javadoc )
/ *
/ * ( non - null )
sets whether the container .
/ * ( non - meta data ) meta data .
/ * ( i .
/ *
<p > <b >
returns a copy of this {
compares two rational .
compares two {
computes the number of times the given number of times .
compute the number of {
/ * ( this argument with the result .
returns a new { @link rational } that is equal to a { @link rational } .
divide a rational function with the given argument .
returns a { @link bigdecimal } with a } .
subtracts a argument from the argument .
returns a rational - b } that } with the specified { @link rational .
adds a argument to the argument .
adds a rational to a rational .
/ * [ deutsch ] <p > liefert den angegebenen rescale .
calculates the number of a rational value .
create a new {
create a new {
create a new {
creates a new {
/ * [ deutsch ] ) swig ; .
returns a {
calculates the signed signed signed signed signed signed - bit - bit in - bit - bit - bit integer values .
play a video .
display video and returns a given start time .
returns a list of all the installed bit types are installed bit types .
create a new { @link converter } .
creates a new {
create a new { @link encoder .
create a new {
opens the given key .
encodes the given { @link video } .
encodes the given {
encodes the specified media packet } into the given output packet } .
{
{
create a new { @link codec } .
prints the configuration of the given stream .
prints a property to a stream .
configures the configuration configuration .
loads the configuration file .
sets the time base time .
finds the descriptor of the given image .
creates a new {
creates a new { @link converter } .
creates a new { @link converter } .
creates a new {
creates a { @link converter .
convert
/ * ( non - payload ) .
closes the stream .
opens the given url .
reads bytes from the underlying stream .
writes a byte array to the file .
registers a factory with the given protocol .
generates a unique name for a given object .
maps the url
maps the given input input to a { @link input } .
maps the given url to the url
maps the given data output } to a { @link string } .
maps the given url to the given url .
map
map
maps the given {
maps the given url to the given url .
maps the given {
maps the given url to the given url .
maps the given {
maps the given url to the given url .
maps the input stream to a string .
maps the given url to the given url .
returns a map of the output stream to the output stream .
maps the given url to the given url .
maps the given url to the given url .
maps the given url to the given url .
maps the given url to the given url .
maps the given url to the given url .
create a new {
removes a iurlprotocolhandler from the given url from the url .
returns the handler for the given url .
returns a new logger .
returns a static logger .
logs a message at the given level .
creates a new {
/ * ( non - javadoc )
returns the base time of this time .
sets the base time of this time .
returns the index of the index of the index .
returns the rate rate .
returns the base time ) time base time .
returns the sample aspect ratio .
returns the container container .
returns the meta - meta - meta - encoded key .
finds the time stamp )
returns the index of the specified position at the index .
/ * ( non - javadoc )
returns a collection of installed codecs that are installed in the codec .
<p > a list of the supported video . < / p >
<p > a list of the video formats .
<p > a list of supported audio rates . < / p >
<p > a list of the audio format . < / p >
<p > a list of supported audio layouts .
finds a codec for the given id .
create a new {
finds a codec codec by name .
finds a decoding codec for a given codec .
create a new {
finds a decoding codec by name .
creates a new { @link codec } for the given { @link muxer .
returns the installed codec for the specified index .
returns the supported video frame rate for a given index .
returns the supported video format for the given index .
returns the supported audio format for the given index .
returns the supported audio channel layout } for the given index .
returns the supported profile for the specified index .
return
resample
creates a new {
opens the given url .
reads a byte array from the stream .
writes a byte array to the output stream .
<p > returns a list of keys that are associated with .
returns the value associated with the given key .
sets a value of the property .
create a new { @link key } instance .
sets the value in the given key .
opens the given key .
returns the codec codec )
/ * [ - bit
set the time base time .
sets whether this flag should be used to the given { @link coder .
sets whether the flag2 should be used to set the flag2 .
returns the decoder decoder ) .
/ * ( non - javadoc )
<p > returns a list of all the muxer .
creates a new {
returns the supported codec id for a .
returns a muxer at the format
create a new {
adds a filter to this filter .
adds a filter source to the } .
adds a picture source source to this filter .
adds a new { @link filter .
adds a picture sink to the given picture .
queue a command .
create a new { @link index } with the given { @link time } .
creates a new { @link bit } that returns a { @link bit } instance .
creates a new { @link bit } that returns a { @link inputstream .
returns the type of this filter .
returns a copy of this {
filters the swig
puts a byte array ) into the buffer .
returns a copy of this { @link bytebuffer } with the specified offset .
returns a copy the )
create a new {
creates a new {
create a new {
create a new {
create a new { @link audio } instance .
play the raw audio buffer .
creates a new { @link media } into a { @link media } .
validates that the image .
validates that the picture of the picture .
{
{
get the filter graph .
returns the time base link .
inserts a filter into this filter .
returns the time base ) time of this time .
returns the meta - meta - meta - value pair .
sets the time base time
registers a factory for the given protocol .
get a handler from the given url .
returns the url of the url .
return the given url to a url .
returns the given cpuarch object .
returns the native string representation of a native cpu string to a cpuarch object .
creates a new { @link osfamily . osfamily } .
convert a string to a osfamily .
returns a string representation of the given format .
/ * base time of this time .
play a sound .
*************************************************************************
delete this object from the object .
loads the library from the specified library .
loads the library0 from the library .
sets the loaded library .
loads the candidate library from the given library .
returns a list of library candidates .
initializes the search paths .
check if the library is loaded from the library .
create a new {
create a new {
decodes a {
decodes a video video into a video .
decodes the given {
record a screen .
deletes the swig .
adds a new { @link swigcptr
return
returns a {
gets the alternate sample format .
gets the packed format } for the given { @link audio } .
returns the planar sample } for the given audio format .
returns the size of the number of audio format .
returns the size of the number of channels in the given number of channels .
creates a new {
/ * ( non - javadoc )
opens the given {
adds a new {
/ * ( non - javadoc )
writes a packet to the given media packet .
creates a new {
returns the supported codec id for a .
finds a { @link demuxer } for a given } .
returns the demuxer
use {
/ * ( coder )
/ * ( non - javadoc )
creates a new {
decode a string into a byte array .
generates a seed string .
get a transaction
{
get a list of address transactions
get a list of block header .
get a block of a block
sends a transaction .
sets the script to the given script .
compiles the given script .
/ * ( non - javadoc )
{
{
reads a byte array of bytes from the stream .
/ *
writes a byte array to the stream .
/ * ( non - javadoc )
/ * to the output stream .
/ * ( non - javadoc )
writes the given object to the given class .
{
serializes the given object to a byte array .
{
{
returns the package name from the class .
setmmfdata
returns the specificity of the given class .
get the lineage for the given class .
resizes the store to the given file .
returns the binary source source as a byte array .
removes the given key from the cache .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
writes a byte array of the array .
write a string .
{
/ * ( non - javadoc )
creates a new {
creates a struct pointer pointer .
creates a new { @link fstconfiguration .
prints a json representation of a object .
registers a serializer for the given class .
creates a new {
adds an object to the cache .
write an object to the ou .
clears all caches of the cache .
get the object input ) input stream .
get the input object from the object input .
copies the contents of an array of the given object .
get the object output output stream .
register a cross platform class mapping .
registers a cross map with the given short name .
returns the name of a class .
converts a byte array into an object to an object .
converts the given object to a byte array .
converts an object to a shared byte array .
returns a object as a json string .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the ser ser .
writes an int to the output stream .
writes a number of bytes to the stream .
write a number of bytes to the stream .
writes a primitive array .
writes a raw byte array to the buffer .
reads an array of bytes from the given array .
/ * ( non - javadoc )
returns the fstclazzinfo for the given class .
calls {
object
writes the object to the object .
get the fst info for the given class .
writes the fields of a map .
writes the given array of objects .
resets the state of this stream .
returns a copy of the written as a buffer .
/ * object from the given class .
sets the string representation of the string .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
detaches the pointer from the specified pointer .
creates a new {
finish the tracking change .
returns the temporary buffer as a { @link bytebuffer
creates a new { @link array .
create a new { @link array } with the given size of the given size .
/ * (
registers an object for a given object .
returns an iterator over all the values of this {
/ * ( non - javadoc )
/ * ( non - javadoc )
coerce
adds a byte array of bytes .
returns the number of bytes from the destination .
reads a byte array from the stream .
reads an int from the stream .
{
registers a class with the given class .
enables / disables the thread pool should be enabled .
starts the embedded cassandra cassandra .
clean the data from the given keyspace .
copies the contents of a path .
prints the thread info .
gets the class .
connect
returns a {
performs a gemm of a b
/ * symm
computes the data matrix of - i - i - x = c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c -
/ * ( c = c = b
/ * ( b of a * x - b
performs a a * x = b
performs a symm of ) of a * b
performs a a * x = b
/ * ( c ) = a * b
{
/ * ( i = a * b
returns a map of descriptors descriptors .
returns the { @link data from a { @link string . context . context () .
sets the allocation mode for the context .
{
calculates the output shape .
computes the cumulative probability of the cumulative value .
{
returns true if the given {
returns true if all elements } or equal to see if the same as a boolean .
returns true if the specified element is equal to the specified condition .
computes the and dimension of the given condition
computes the or equal to be an array
applies the given function to each element in the given condition of the given condition .
applies the given number of where the given number of the given number of elements .
choose the output from the given condition
choose an {
applies the given function to the given { @code function .
applies the given function to the given function } to the given condition .
returns the first index in the given array
convert the flat properties } representation } object as a { @code builder } .
creates a new { @link function } from a { @link function } object .
returns a {
sets the value of the given throwable .
sets the first element in the list .
normalizes the given value .
merges the given list into a list .
splits a vector into a list .
returns a list of lists from the given chunk .
splits a vector into a list of vector .
convert a {
shuts down the transport .
returns the title of the title .
returns the values of the values .
returns the current device architecture .
{
updates the flags of the view
generate a col2im - wise from a * b
compute a pooling2d - wise pooling2d of a vector
compute a uninitialized - wise indarray to an array of a uninitialized .
creates a new { @link icomplexndarray } from the given input kernel .
creates a { @link compression } instance } from a { @link byte } .
returns a byte representation ) to a {
get a list of batches into a list of partitions .
/ * ( updater
validates that the given dimension is in - place
{
create a scalar - wise vector
{
create a bilinear products to be used products
{
{
{
{
{
/ * ( non - javadoc )
{
{
{
{
create a new complex buffer .
{
{
{
creates a new complex array with the given shape .
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a complex number of complex numbers from the given array of components .
creates a complex number of complex numbers .
creates a new { @link icomplexnumber with the number } .
creates a new { @code icomplexnumber } .
creates a new icomplexnumber with the specified by the specified number of matrices .
creates a new { @link icomplexnumber } .
creates a new { @link icomplexnumber } .
returns a new icomplexnumber instance .
creates a new { @link icomplexdouble } .
creates a new icomplexfloat ] with a } .
get the context context .
this method frees the device .
{
merges the given list of features with the given data set .
{
{
{
randomly randomly randomly randomly randomly randomly randomly randomly randomly sample
{
stringify
returns the simple hostname of the given hostname .
<p > formats the given { @link string } as a string representation .
convert a string to a string .
converts a byte array to a hex string .
returns a string representation of a diff .
get
get
returns a collection of strings from a string .
returns a collection of trimmed strings from the given string .
get
splits a string into a string .
splits a string into a string .
finds the next character in the string .
escapes the specified string in the specified string .
escapes the specified string in the specified string .
convert a string to a string .
joins the given separator into a string .
convert a string to a string .
replaces all occurrences of a template with the given pattern .
returns the stack trace of the stack .
returns true if the given string equals .
<p > checks if the given string is alpha .
computes the inverse of a matrix
gets the number of an integer in this vector .
check if the host is actual .
check if the device is actual .
{
{
returns true if the shape is a vector
create a new { @link indarray
get the order of an element
returns the offset of the given indexes
converts an array of indices to an array of indexes .
returns the shape of the given buffer .
unzip a file to a file .
returns the short value of the data type .
/ * ( non - javadoc )
execute the custom custom custom custom
copies the contents of the given { @link bytebuffer } to the given { @link buffer } .
start a server
{
/ * ( non - javadoc )
{
execute the given indexes .
returns the kafka uri of the kafka topic .
returns the cosine similarity of - wise similarity
element - wise wise atan2
create an element in place into an element
element - wise sin function
create a vector of a vector to a vector
create a vector of a vector to a vector
element - wise tanh function
element - wise derivative derivative
=========
element - wise wise function
element - wise less than or equal to first element
element - wise greater than greater than or equal to be greater than equal to the first element
element - wise eps function
element - wise wise wise wise function .
element - wise wise wise wise function
element - wise element in an element
element - wise function function .
element - wise function function
element - wise wise function to an element
element - wise wise function
element - wise expm1 to an element
element - wise identity function
element - wise function
element - wise tanh to an element
element - wise log function
element - wise log1p to an element
create a scalar number into an indarray
transforms a function to a transform
computes the number of a matrix
prepare a bounds of a vector
adjust scheme to bounds of bounds
{
/ * ( non - javadoc )
/ * ( non - javadoc )
performs a vector vector
build a allocation shape shape .
builds a {
check if the given path exists in the given path .
deserialize this object from the input stream .
sweep
{
{
shuffle the specified dimensions
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
applies the given gradient to the given gradient
/ * ( non - javadoc )
{
returns true if the server is started .
{
{
{
retrieves the device address of the buffer .
retrieves a pointer pointer from a device .
{
get the input stream from the file .
{
{
returns the next device .
loads a library .
loads the temp file from the classpath .
loads the binary file from the given class .
loads a java cpp file from the classpath .
returns the os name .
creates the lib name .
calculates the archtype .
publish a template to the specified producer
starts the instrumentation .
{
intercept the data type .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
read the unknown data from the input stream .
{
=========
returns a new {
returns a new {
see {
returns the max - wise pooling2d of inputs )
see {
returns a max - wise = max - wise = pooling3dconfig )
=========
see {
returns a new {
computes the covariance matrix of a matrix
computes the principal components of an array of principal components
resets the internal state of this object .
returns a string representation of the given op .
{
allocate a new array and allocate a new array .
returns the array of the variable
returns the shape of the shape .
=========
{
convert a icomplexndarray to a icomplexndarray
computes the center of a shape
creates a new icomplexndarray from the given dimension .
creates a complex shape with the given shape .
element - wise element to an array
this method .
{
calculates the pi .
calculates the gamma gamma of the gamma of the given context .
returns the bigdecimal of { @link bigdecimal } .
returns a bigdecimal to a bigdecimal .
returns a number of the given { @code x } .
calculates the bigdecimal of a { @code bigdecimal .
returns a bigdecimal bigdecimal of the specified number of the specified } .
returns the bigdecimal bigdecimal of the given { @link bigdecimal } .
returns the exp .
returns the bigdecimal bigdecimal of the given bigdecimal .
returns the log log of the given context .
returns the bigdecimal of the given rational .
returns the given { @link bigdecimal .
returns the specified number of the given { @code bigdecimal } .
returns the bigdecimal from a { @link bigdecimal .
returns the bigdecimal bigdecimal of the given bigdecimal .
returns the bigdecimal bigdecimal to a bigdecimal .
<p > atan
returns the bigdecimal bigdecimal of a { @link bigdecimal bigdecimal .
convert a bigdecimal to a bigdecimal .
returns the bigdecimal bigdecimal of a bigdecimal .
returns the bigdecimal bigdecimal of a bigdecimal .
returns the bigdecimal bigdecimal of a bigdecimal .
calculates the gamma of the given { @link bigdecimal } .
returns the bigdecimal bigdecimal of the specified number of n } . pochhammer .
calculates the bigdecimal bigdecimal value .
calculates the bigdecimal bigdecimal value .
returns the number of zeta in zeta .
compute the zeta1 of a - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n - n -
returns the number of a given number of p ) .
adds a bigdecimal to the given { @link bigdecimal } .
/ * ( non - negative value .
calculates the bigdecimal of the given { @link bigdecimal } .
returns a bigdecimal that is the given rational .
returns a bigdecimal bigdecimal of the given number .
calculates the bigdecimal of the specified by the given .
calculates the given { @link bigdecimal } .
returns a { @link bigdecimal bigdecimal with the specified number of x .
<p > a bigdecimal bigdecimal .
computes the bigdecimal of the given { @link bigdecimal } .
calculates the bigdecimal bigdecimal of a bigdecimal .
updates the variable name .
returns a function function by id .
adds a function for the given differential .
returns the inputs for the given function .
updates an array of a variable name
puts an array of a variable variable name .
returns the variable name of a variable name .
updates the shape for a given shape
puts a shape for a given shape .
associates an array of a variable with a variable
returns the property for the given function .
adds a property for a function .
adds a function to the list of differential .
adds the given a function .
returns true if the given function has been args .
=========
=========
=========
=========
create a new variable variable with the specified name .
returns a variable variable variable to a variable of this variable with a variable variable .
removes a function from the arguments .
sets the gradient for a variable name .
see {
=========
see {
see {
see {
=========
see {
=========
see {
=========
see {
see {
see {
see {
=========
see {
=========
see {
=========
see {
see {
=========
=========
generates an output variable for a given function .
create a list of differential and return value
execute a list of differential
=========
=========
returns a list of cached list with the given function name
=========
=========
adds a variable as a variable .
resolve all variables in the given map .
returns true if the vertex variables are resolved .
adds a place holder for a variable .
=========
returns a list of variables that are associated with the given functions .
update the variable variable variable variable variable variable variable variable variable variable variable variable = value
=========
prints a function to the specified differential .
converts a string representation of data format .
updates a variable with the given name
returns a {
returns a string representation of this graph .
get the data type from a byte array .
convert the data type to a byte type .
returns the number of the specified by the given type .
returns the type of the given type .
get the flat type to a given type .
{
sets the data in the given array .
returns the length of the given type .
get a string representation of a { @link string .
returns the string representation of a string .
returns the type of the context .
/ *
/ * ( non - javadoc )
pick the reference to the workspace .
{
prints the allocation statistics for the current thread .
computes the gemv of a vector
performs a gemv of a * x of a * y )
/ * x and a * x = a * x = a * x = a * x = a * a - y - x - y - y - y - y - y - d - x - y - d - d - d - x - d - d - d - x - y - a -
/ * x = a * x = b
/ * ( non - javadoc )
/ * x = b in - y = a - b
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
computes the sbmv - y
performs a sparse matrix in - place matrix
computes the smallest decomposition of a matrix
create a new template
calculates the bernoulli of the bernoulli
{
{
{
{
{
{
{
returns the name of the node .
===============================================================
{
/ * ( non - javadoc )
create a random element
execute the specified number of arguments
{
{
assert that the workspace is no longer open .
/ * ( non - javadoc )
compute the log - wise likelihood of labels
requests that the specified time has been waiting for the given time .
tries to try to try to try to discard the request .
releases the toe .
returns the current state of the access state .
builds a new environment .
/ * ( non - javadoc )
initialize the examples of the list
sets the value of the specified field .
initialize the host collectors .
{
{
{
create a tensor from a tensor
adds a number of data for a given element
returns the type of a { @link byte buffer into a { @link data .
{
{
{
/ * ( non - javadoc )
create a new ndarrayindex .
create a new element in a vector to the specified element .
copies a copy of a vector with a vector with a vector
div - wise op .
broadcast equal to a vector
broadcast greater than equal to the specified dimensions .
broadcast greater than or equal to the specified dimensions .
broadcast less than equal to the less than equal to the specified dimensions .
broadcast less than or equal to the specified dimensions
element - not equal to a vector
element - wise vector to a vector
element - wise sub - wise vector
element - wise max function .
element - wise min - wise function . <br > <br > min - wise
convert a vector of a vector to a vector
convert a vector of a vector to a vector
returns a map of properties for the given function .
returns true if the place has a place holder .
returns a list of diff of the variable variable
computes the number of the given shape .
returns a string representation of this matrix .
{
{
{
{
copies real method copies of the given {
copy all the imag of this view
{
{
{
computes the distance1 of a vector
{
{
{
puts an element at the specified element at the specified element at the element .
{
{
{
{
/ * ( non - javadoc )
{
{
add an element in - wise i .
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
computes the eigenvalues of a vector
creates a new decomposition of a matrix
computes the eigenvalues of a matrix
computes the probability of a given probability .
/ * ( non - javadoc )
copies the contents of this matrix to the given {
/ * y - wise
/ * ( non - javadoc )
/ * x = x - x - y - y - y - x - y - x - d - x - y - x - y - x - y - x - x - x - y - d - d - d - x - x - d - d - d - x - d - d -
{
{
merge the labels into a set
create a pair of columns from a pair of masks
create a pair of masks masks matrix
{
checks if an element can be op .
returns true if the given vector can be equal to see if the vector .
create a new tensor1dstats from a tensor into a new array
/ * ( non - javadoc )
=========
=========
returns the non - zero count of {
performs a reduce reduce of two - dimensional .
initialize the object .
returns a constructor of the given class .
returns a constructor for a given class .
invokes the given method with the given handle .
creates a new instance of the given constructor .
returns the value of the given object .
checks if the given class is assignable to the given class .
returns the annotation of the given annotation .
returns the declared annotation of the given annotation .
checks if the given annotation is present in the given class .
creates a new proxy instance .
{
loads the given entity from the database } .
make a load entity value .
saves the given pojo to the given pojo .
{
adds a filter to the list .
translates an operator to a } .
adds a condition to the list .
sets the ancestor .
sets the limit of the limit .
adds a projection to the list .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new {
adds an order to the list .
adds a projection to the projection .
adds a distinct distinct on the given list of distinct distinct .
create a new {
{
{
completes all pending futures .
registers the given class .
gets the metadata of the given kind .
query results of keys
query a hybrid query .
creates a hybrid query .
creates a query results .
counts the number of results in the query .
returns an iterator that iterates through the elements .
loads the keys from the given iterator .
returns a list of elements from the elements to a set .
returns the element if any ) element in the queue .
returns a string representation of the given path .
creates a new { @link key .
creates a new { @link key .
create
creates a new instance of the given url .
creates a new instance .
{
compares two identity objects with the identity hash .
returns a { @link key .
<code > repeated key key / pre >
returns the kind of the given class .
returns the kind of the given class .
returns the kind of the given class .
checks if the given type is missing .
check if the given type is a super type .
returns the exact type of the given type .
returns the type of the field type .
capture the type of the given type .
gets the translator for a given { @link translator .
gets the populator .
{
{
get the index of the given the index .
checks if the given field is of the interest .
checks if the given method is of the given method .
returns a list of declared properties of the given class .
gets the metadata of the key .
returns the given key from the cache .
execute the datastore .
fetches the pending pending cloud .
{
{
adds the indexed discriminators .
registers a subclass with the given translator .
returns the type of the given type .
returns the type of the given map .
returns a new { @link forward .
gets the final path .
returns a string representation of this path .
returns the depth of the depth .
/ * ( non - javadoc )
{
{
{
get all keys from the cache .
puts all updates in the cache .
adds the specified keys to the cache .
cache the given buckets in the cache .
get all the keys from the cache .
returns a set of keys from a collection of buckets .
finds all key fields of a class .
sets the key of the container .
sets the key of the given key .
sets the key key .
gets the incomplete key .
<pre > the complete complete key .
sets the long id .
<code > repeated datastore .
registers a subclass for the given translator .
returns the parameterized class for the given class .
returns the inner type of the given owner .
returns the inner type of the given type .
checks if the given type is within the given type .
checks if the given type of the common subtype .
transforms the owner of the given class .
returns a new { @link wildcard } .
returns a new { @link wildcard instance } instance of the given type .
returns the annotation of the given annotation .
add a key / value .
adds a value to the result .
add all the other session to this session .
removes the given key from the cache .
loads the given key from the cache .
<p > executes the execution .
create a new {
translates the given { @link map } into the given { @link map } .
fetches a map of the datastore .
loads the given entity .
returns a copy of { @link filter .
{
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
converts the given key to a key .
<code > repeated ( object ) < / code >
creates a raw datastore key .
creates a new { @link key .
<pre > {
creates a list of keys from the given key .
gets the id of the id .
<pre > use this method to parse a datastore url . < / pre >
{
{
{
{
{
{
{
{
{
{
{
{
{
this method .
checks if the given object matches the given conditions .
get the objectify
enables or disables the global datastore .
{
constructs a new collection .
constructs a new map .
gets the metadata of the given entity .
allocate a new {
allocates a new { @link class } for the given { @link class } .
allocates a new { @link datastore } .
allocates a new { @link key } .
get the last stack .
open a new stacks .
open a new objectify .
closes the given objectify .
{
runs the given work .
sets the list of the list .
coerce a number .
{
{
{
{
{
{
{
{
{
{
{
creates a new instance of {
creates a new { @link ref
returns the value associated with this object .
adds a value associated with the given key .
/ * ( non - javadoc )
generates an array of conditions for the given class .
done the engine .
loads the given {
defer
returns the container of the given path .
gets the stat for the given kind .
returns a {
unwraps the given { @link illegalargumentexception } is thrown .
coerce a number .
create a new translator .
gets the root context .
creates a new { @link translator } .
{
gets the property from the container .
{
sets the value of the given value .
{
{
writes all the extensions .
writes the content category .
writes the content of a field .
processes the given snippet .
writes a bid request to the bid .
writes a bid request .
writes the bid request .
writes a bid request .
writes a bid response to a string .
writes the bid response .
writes a bid response .
writes the bid response .
creates a new { @link seat } .
creates a new { @link iterable } .
returns a list of { @link bid of the given response .
creates a new { @link bid } with the specified id .
returns a stream of { @link stream } that contains the given { @link bid } of the given the given { @code seat .
creates a new { @link iterable with } that returns a { @link seat () } .
updates the bids of the given response .
updates the bids of the bid .
removes all bids from the response .
removes all bids from the response .
returns the imp with the specified id .
returns a imp with the specified by id .
returns an iterable of all imp } s that are contained in the request .
adds a predicate to the predicate .
check if the passed in the seat .
write a native request .
writes the native request to the specified writer .
writes the native request to the output stream .
writes a native request .
write a native response to a native response .
writes the native response to the output stream .
writes the native response to the specified writer .
writes the native response .
reads the extensions from the json file .
checks if the current token is empty .
registers a { @link rtb .
registers a json factory for the given field .
registers the given { @link rtb } .
read a native request } from the input sequence .
reads a native native native request } .
reads a native request from the given input stream .
reads a native request from } from the native request .
reads a native response from the given the { @link char } .
reads a native native response from the specified reader .
reads a native native response from the given input stream .
reads a native native native response .
processes the bid bid .
processes the fields of the bid .
reads a {
reads a bid request from a reader .
reads a bid request from an input stream .
reads a {
reads a bid response from a bid .
reads a bid response from a reader .
read a bid response from an input stream .
reads a bid response from a bid .
creates a new {
send a {
updates the given { @link iterable } s to each value .
filters a list of elements from } that match the given predicate .
filters all fields that match the given predicate .
returns the current name of the current parser .
parses the given object .
check if the end object is an object .
parses a json array .
end
parses a json token .
parses a json token .
writes a { @link field .
writes the given field to the given json generator .
writes a list of a json data to a json array .
writes a long value to the output stream .
writes a long field to a json generator .
writes a list of data to a list of a list of the json format .
writes an enum enum .
writes an enum field in a json format .
writes a list of the given field to the json format .
read a csv string from a string .
creates a new url from the specified url to a url .
fix the pure query targets .
fix the embedded embedded embedded in the given url .
get
gets the host from the url .
gets the page from the url .
load
extracts the config element from a map .
returns the protocol for the given url .
emit a outlink to the given url .
returns a byte array representation of fields to a byte array .
fix the http headers .
gets the capture time of the given metadata .
convert a string to a string .
get the meta - meta metadata
returns a new { @link metadata .
reads all rules from a list of the array .
/ * ( non - javadoc )
adds a value to the url .
adds a new scheduledurl
encodes the id of a string .
removes a field name from a field .
get a elastic connection .
returns the charset of a string .
convert a byte array to a string .
get
returns the charset of the given meta - charset .
checks if the content of the given byte array .
/ * ( non - null partition .
sets the value for the specified key .
gets the first value of the given key .
gets the driver .
*************************************************************************
returns a list of all cookies from a url .
checks if the given cookie match the given url .
gets the cache key from the url .
get the robot rules for a given url .
/ * ( non - javadoc )
extracts all meta - tags from a document .
extracts the meta tags from the content .
normalise
ack
check if the specified url is a given url .
/ * ( non - javadoc )
reads all rules from the array of rules .
reads the rules from the given rules .
processes the query elements from the url .
returns the url of the given filter .
unescapes a path in the path .
escapes a path in a path .
returns a new { @link s3client .
creates a new { @link navigation } instance } instance from a { @link map } .
adds a record format .
returns the number of queries that have been throttle in the query .
trigger the queries of the query .
parses the given { @link map } object into a filter } object } .
append a node .
{
{
receive notification of character character .
receive notification of a comment .
receive notification of xml } of an xml file .
{
sets the agent configuration .
parses a robot rules .
check if the document is a valid .
returns the metadata of the metadata .
returns the url of the given tuple .
trims a text from the given text .
{
/ * ( non - javadoc )
checks if the given status is custom .
creates a new urlfilters instance .
<p > instance of a given class .
submits a topology ---
submits a topology .
add
creates a new { @link file } from the specified { @link file } .
creates a list of { @link list } from the given input stream .
creates a {
sets the given {
creates a list of { @link list } from the given { @link inputstream } .
this method to a { @link input stream } .
returns the instance of the field .
sets the value of the specified content .
sets the count of the wheel . <p >
resolve the size of the size of the given size and state .
sets the wheel drawable . <p >
sets the empty drawable .
sets the angle of the angle .
updates the selected position .
invalidate a wheel item at the given position .
returns the position of the specified position at the specified adapter .
updates the velocity of the velocity .
returns the contrast color for the color .
clamp the given value to the given value .
<p > checks if the given string matches the given wildcard .
creates a new { @link source .
writes the given {
returns an array of {
sets the ja
{
returns the string representation of the rank .
returns the string at the specified index .
returns the string representation of a string .
sets the string in the string .
sets a string value .
sets the string in the index .
/ * array of the rank .
constructs a new { @code array } from a string .
constructs a new { @link array of values from the given array } .
constructs a char array from a string representation .
returns a new dot matrix .
performs a matrix to a vector .
multiply the diagonal diagonal .
/ * ( non - javadoc )
initialize the local table .
******************** canvas draw .
shows the frame .
shows the frame if it is not iconified .
reads a data from the input stream .
reads a compressed compressed data from the image .
creates a new {
writes a file to a file .
uncompress a random access file .
*************************************************************************
factory method to create a new { @link unit } .
factory method for creating a new { @link unit } .
make a plural string .
returns the resolution of a resolution .
checks if the given date is included .
checks if the given date intersects the given date .
returns true if this range intersects the specified range .
/ * [ deutsch ] <p > ermittelt den .
sets the given date .
/ *
sets the start of the date .
sets the end of the date .
sets the duration .
recalc
stores the persistent data .
adds a map to the map .
creates the dataset dataset .
reads a coordinate from the given time array .
reads a coordinate at a specific index .
gets the file size from the file .
parses the next character in the stream .
shows the context .
opens a dataset url .
opens a coverage dataset .
returns the name of the location .
finds the grid by name .
finds the grid with the given the short name of the coverage .
returns a string representation of this object as a string .
returns true if the projection is a projection .
computes the theta of the theta
convert a projection to a proj
convert a projection to a lat lon
convert a projection to a proj
check if the given location matches the given location .
opens the given document .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
computes the bounds of the edges .
creates a collection of metadata .
creates a new { @link omobservationtype .
check if the hash of the hash .
/ * bufr
reads all data from a file .
sets the value of the date .
computes the unlimited chunking chunking for a given list of elements .
registers the given path .
processes all events in the watch .
sets the reference to the given date .
registers a factory with the given class .
registers a factory for the given name .
registers a factory for the given class .
opens a feature dataset .
wrap a { @link feature .
returns true if the feature type is ok .
finds the feature type of the given file .
/ * ( non - javadoc )
/ * ( non - html catalog .
converts a catalog to an html catalog .
returns the html for the html .
returns the user head of the html . <p >
get a catalog for the given path .
make a dynamic catalog for a given path .
adds the global services to the dataset .
initialize the user agent .
gets the content of a string .
put the content of the given content .
returns the url contents of the given a string .
returns true if two ] is an op of the two arrays .
returns a string representation of an error message .
returns true if the given operator .
returns true if the given duint16 .
/ * ( non - javadoc )
get a front page for the given request .
make a short name from the collection of the collection .
adds the file datasets .
/ * ( non - javadoc )
/ * ( non - javadoc )
extracts the geospatial metadata from the collection .
finds a dataset in the given path .
finds the dataset and returns the dataset that matches the dataset .
returns the single dataset or null if there is not found .
returns true if this {
create a new unitid instance } instance .
parse a grads attribute .
read the top - level top - level file .
/ * reads from the file .
create a projection to be a projection )
set the product info .
convert a short to an int .
convert a byte array to an int .
returns a new date ] from the specified julian .
sets the property .
checks if the given name is a valid netcdf .
make a valid netcdf object .
checks if the given name is a valid netcdf3object .
{
{
reads the record data from the given section .
read the record data from a structure .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
fill the non - record variables .
/ * ( non - javadoc )
/ * ( non - javadoc )
reads a dataset from the specified dataset .
make a double values from the level .
/ * [ deutsch struct ] .
/ * create a grads } struct } instance .
replaces the file template template with the given time .
checks if the given template has a time template .
returns true if the cross cross point in the same as a projection .
convert a projection to a proj .
convert a projection to a lat lon
convert a float to a float array to a proj .
convert a double array to a lat lon .
adds a new function to add } .
returns the bool function associated with the given name .
loads a new btfunction from the database .
loads a new function .
finds the coordinate name of the axis .
{
returns the level of the level
reads the fnmoc table3 from a fnmoc .
creates a catalog catalog .
expands the level of the given dataset .
returns the grid parameter .
returns the name of the level level .
returns the description of the level .
get the level of the level .
get the projection type of the projection .
checks if the given record is vertical .
check if the grid is a layer .
encodes the given dataset .
encodes a {
encode a date range .
encode a grid grid .
encodes a coverage coverage . coord } . coverage .
encodes a coverage transform . transform .
encodes a coverage axis .
convert a { @link cdmr } .
encodes a coverage response into a { @link cdmr .
creates a new { @link directory } .
registers a transform .
registers a transform .
registers a transform with the given name .
transforms a {
creates a dummy transform variable into a dataset .
creates a new { @link projection object .
fires a property change event .
creates a new dialog with the given title and title .
*************************************************************************
get a coordinate of the given index ) .
gets the file location from the request .
saves the current state of this divider .
writes a sequence of members .
send a data request .
/ * ( non - javadoc )
initialize the init .
/ * ( non - javadoc )
encode an array of object .
write a count of bytes in the stream .
write an atomic array .
/ * bytes to the output stream .
writes a byte array to the output stream .
/ * ( non - javadoc )
returns the string representation of a string .
/ * ------------------------------------------------------------
/ * ( non - null ) of the request is compressed .
reads a table from a table .
initialize the ui the ui .
shows the dataset .
set the field in the grid .
{
reads a map of sub - center .
returns a date range of the given date range .
creates a new grib2gds to be used to be used to be used in lambert .
returns the earth earth .
convert a projection to a proj
convert a projection to a lat lon
parses the given text into a string .
parse a string in a string ) from a string .
reads a string from a string .
reads a string from a string ) .
parses a dataset .
/ * ( non - null string .
initializes the file .
initializes the grid .
swaps the grid header with the grid .
/ * ( non - 1 ) .
reads a random int from the stream .
*************************************************************************
checks if the file is implemented by a file .
write the wfsxmlhelper file .
writes all the operations to the file .
main method .
reads all files from a directory and reads all files from the files in the closure .
scans the log file and scan the log file .
create a new { @link gempak } instance from a { @link file } .
initialize the grid .
*************************************************************************
get the grid type of the grid
finds a grid grid for the given parm .
read a grid from a grid .
/ * ( non - javadoc )
/ * unpack of the specified number .
/ * returns the dp of the given number of the dp .
/ * unpack an array of the specified scale .
/ * unpack the grib2data from the input position .
reads a grib record from a file .
prints a nav block .
prints a anal block .
prints the current grid in html format .
prints the grid info .
/ * compute the ornt of a scan of the scan
reads a number of bytes from the buffer .
reads the next byte from the stream .
adds a new variable .
prints a constrained message .
prints a string in html format .
{
{
/ * ( non - javadoc )
/ * [ deutsch ] <p > erzeugt ein neues neues ; and day - kalenderdatum { @code calendar . <p > erzeugt > erzeugt ein neues - of - year . <p > the - of - month - of - month - of - year - year - year - year - of - year - of - of - year -
/ * [ deutsch ] <p > erzeugt einen neuen } f&uuml } f&uuml } f&uuml utc .
/ * [ deutsch ] <p > erzeugt einen { @code calendar . <p > erzeugt ein utc . < / p >
/ * [ deutsch ] <p > erzeugt einen neuen } from the given calendar . < / p >
parses a udunits or null or null if the given string .
convert a date to a calendar object .
parses a date from a calendar .
returns the value of the given period .
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------
gets the difference between two dates .
creates a new {
creates a new {
creates a new structure from the structure .
creates a sequence of dap
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
make a netcdf4
escapes a string .
builds the html
creates a list of slices from a list of rangelist
returns true if the list of a list of dap is whole range .
check if a list of slices is whole .
returns true if the given list is whole .
convert a netcdf to a netcdf
checks if the given list of dimset is a variable .
computes the effective shape of a list of dimset
extracts a long value from the given index .
extracts the double value from a dataset .
converts a dap to a vector .
returns a string representation of a string representation .
convert a list of ranges to a list of ranges
convert the given value to a double value }
adds a date to this date .
/ * ( non - javadoc )
{
{
{
convert the given amount of amount to a derived unit .
convert the derived unit to a derived unit
/ * ( non - javadoc )
returns the canonical string .
*************************************************************************
reads the data from the input stream } .
reads the data from the collection .
reads the data from the partition .
reads a } from the given range .
read the data from the datareceiverif file .
gets the station helper .
{
/ * ( non - javadoc )
finds a service by name .
resolve a uri of a uri .
returns a string representation of the string .
returns the gate size of the gate of the given datatype .
returns the number of the specified number of the given datatype .
returns the gate number of the number of gate in this number of datatype .
reads the data from the specified { @link file } .
/ * ( non - javadoc )
writes the xml file to the xml file .
create a new variable .
returns a subset of the subset of this subset .
returns the preferred size of the given container .
checks if the given dataset is a collection of ancestor .
reads a coordinate array from a coordinate .
reads a coordinate in the specified index .
{
sets the matrix to a * x = x - - - axis .
converts a string representation of a ucum
converts a string to a ucum .
convert a string to a udunits .
converts a string to a udunits .
returns a map of strings into a map of strings .
returns the center name of a center of the center .
returns the center name of the center of a center .
generates a proxy catalog for the given cr .
extracts the geospatial coverage from the dataset .
extracts the metadata variables from a dataset from a dataset .
extracts all the variables from a feature point from the feature .
/ * [ deutsch ] <p > erzeugt eine } f&uuml ; r den angegebenen { . < / p >
/ * [ deutsch ] <p > erzeugt einen { } f&uuml } f&uuml } .
/ * [ deutsch ] <p > erzeugt ein neues neues unit and date } .
/ * [ deutsch ] <p > erzeugt eine .
add
*************************************************************************
returns the filename of the dialog .
tries to choose file .
returns the quantity dimension of this quantity .
*************************************************************************
checks if the file is a valid file .
/ *
reads the records from a ucar file .
<p > the names of the <code > stn / p >
/ * (
do
reads a data1 from a section .
reads the data from a layout .
reads a section of bytes from the given section .
calculates the elev of the given angle .
calculates the number of the given range .
calculates the az of a az of the az .
calculates the data in a map .
returns a string representation of the given time .
calculates the number of a nyquist ) .
transforms a {
removes a partition from the list of {
uncompress a file .
sets the debug flags .
sets if the index should be extend the index .
{
{
read a record in the given variable .
returns true if the given variable is a record in the given variable .
parses the request .
gets the bounding box of this projection .
returns the lat lon ) for the given coordinate .
returns the bounding box of the lat .
calculates the scale .
/ * finish
returns a new { @link array } .
writes a tab .
pad a string .
returns a string representation of an integer .
returns a string representation of the given { @link long string .
returns a string representation of the given string .
returns a byte size of bytes .
show a double .
/ * show2
get the given document as a string .
{
creates a dataset description of the dataset .
creates a new { @link document document } .
writes the axis to the axis .
returns a string representation of the shape .
write a coord object to a xml element .
*************************************************************************
/ * ( .
returns the total number of the number of times .
returns a constraint to a constraint .
compose a slice of the given slice .
maps a number of the given number of i .
/ * buf0 to a byte array into a bytebuffer .
/ * ( non - javadoc )
returns the type of the given name .
returns the type of a given epsg .
encodes a section of { @link nc ( string .
decode the given a section
/ * vlen
decode the vlen
extract the url from the url .
get the content of the given url
filter the input stream .
/ * ( non - javadoc )
creates a dataset description .
write a coord to a coord .
{
{
{
returns a list of runtimes in - in - time .
add an action source listener .
*************************************************************************
/ * ( non - javadoc )
returns the renderer factory for the given filename .
reads a dataset .
prints a string in a writer .
/ *
/ * ( non - output stream .
<code > map&lt ; < / code >
checks if the given projection is infinite .
computes the shape shape of the chunk of a chunk .
sets the value of the specified size .
returns the standard date from a string .
get
returns the origin of this date .
returns the date as a date .
make a date object from a date ) .
/ * [ - time ] to a date .
make a standard date to a string .
returns the grid spacing in the km .
adds the dimensions to the netcdf .
adds a netcdf to the netcdf .
adds a coord axis axis axis .
add a gaussian lat axis to a gaussian file .
make a projection for a projection .
/ * attribute .
adds a coord variable to the given name .
this function .
/ * makeps to the record .
make the mercator to the mercator .
make the rotated lat lon for the given grid .
make the space view of the space .
computes the record the record in the record
create a curvilinear axis from the given file .
sets the dx of the grid .
/ * set of the record .
read an access access an access element .
reads a dataset from a catalog .
read a dataset from a dataset .
adds a dataset scan coverage to the coverage .
read the metadata of a dataset .
reads the content of the given dataset .
/ * ( non - javadoc )
writes the inherited metadata for the given element .
returns the total level of the level .
checks if the given file is valid .
opens a new lightning .
adds the global global attributes .
reads the data from a variable .
/ * ( non - javadoc )
prints a string in a writer .
returns true if the operator are equal .
serializes the given {
{
prints a string representation of a space .
prints a string representation of a space .
prints the contents of this stream .
prints the content of this stream to the given output } .
/ * ( non - javadoc )
creates a new { @link time } instance based on the given { @link time } .
returns the name of the given axis .
returns the name of the given dimension .
returns a string representation of the response .
builds a new exception .
returns a dataset from the given dataset .
parse a dimension
create a new variables for the given dataset .
creates a coordinate from a dataset .
calculates the bit bit of a bit value
*************************************************************************
parses the enhance mode of enhance mode .
initializes the netcdf file cache .
wraps a { @link netcdf .
opens a dataset .
opens a dataset .
opens a dataset in a dataset .
create a new {
acquires a dataset from the given url .
acquires a dataset from a dataset .
opens a dataset in the given location .
opens a new file .
acquires a file from the given url .
acquires a file from the cache .
tries to open a file in the file .
acquires a dataset from the cache .
removes all coordinate systems from this coordinate .
finds the coordinate axis for the given type .
finds the coordinate axis for a coordinate of the coordinate .
finds a coordinate system system name .
finds a coordinate of the specified name .
closes the underlying underlying file } )
/ * ( non - javadoc )
adds a new coordinate axis to } .
removes all the set of this set .
sets values }
sets the values of the specified variable .
creates a new array with the given list .
/ * ( non - javadoc )
dumps all classes in a group .
prints the debug dump of a dataset .
*************************************************************************
gets a feature point .
get a dataset from the grid .
get the coverage collection .
opens a netcdf file .
opens a dataset as a dataset .
opens a coverage dataset .
opens a { @link grid .
opens a netcdf file .
extracts the member array from a iteration .
returns the index of this offset .
returns the existing existing existing file .
finds the type of the given name .
returns the type of the given name .
set the collection of beans ) . )
/ * ( non - null info .
checks if the number of the formatter .
writes the beans to the file .
returns a list of features that have been added .
/ *
returns the axis type of the given dataset .
add a dataset to be used axis .
adds a new metadata to this method .
adds a documentation .
removes the documentation from the list .
returns the number of the file pos .
returns the maximum number of bytes in the range .
returns a calendar period } <p >
prints a string in a writer .
/ * ( source object from the input stream .
writes the data to the output stream .
writes a byte array to a stream .
get an input stream from the classpath .
checks if the given file is mine .
create a new { @link structure .
/ * ( non - javadoc )
registers a convention with the given name .
registers a convention with the given name .
returns a list of names into a list of names .
builds a convention attribute from a main attribute .
finds a factory for a dataset .
{
finds the coordinate axes for a given a dataset .
find the coordinate systems of the given dataset .
finds the transforms of a dataset .
generates a coordinate axes to be used dataset .
make the coordinate systems .
this method to the explicit dataset .
this method to make sure that the dataset is implicit in the dataset .
this method to make sure that the coordinate of the same coordinate .
returns true if the given variable is a variable is a variable is axis is axis .
make a new coordinate of the given dataset .
/ * transforms a dataset into a dataset
adds a coordinate variable to the list .
subset the given dataset .
finds all services in the given dataset .
deletes the given filter .
marks the given filter .
delete the given dataset from the catalog .
finish the dataset .
returns a time base time base and factor of the given units .
converts a factor to a factor .
parses the given string .
/ * [ - ] <p > parseisodatetime ( ( ] .
*************************************************************************
finds the temp directory in the directory .
initialize the server .
initialize the once .
returns a string representation of the inquire .
opens the given {
/ * ( non - javadoc )
counts the count of the specified name .
returns a new instance of this class .
adds a new definition .
*************************************************************************
compares two table .
compares two boolean objects .
get the group
removes the given event from the given map .
/ * ( non - value )
returns the event with the given the given name .
make a new attribute .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the given time has a valid date range .
{
returns the attribute of the specified attribute .
check if the attribute has a attribute .
append an attribute to the attribute .
append an attribute .
append a container to the table .
adds a container to the table .
adds an alias to the alias .
removes an attribute .
prints the specified writer .
writes the content of this stream to the specified output stream .
returns a clone of )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if this {
step
registers a class with the given name .
registers a dsp .
return true if the given registry is registered .
unregister the given class .
creates a new { @link grib2tables factory .
/ * [ 0 - time interval ) of the given gr .
returns the forecast time size of the given grib2pds .
returns the offset of the forecast time of the given forecast .
/ * ( non - javadoc )
finish all references from this node .
finish the given node .
looks up a node in the first .
sorts the elements in order .
sorts the given node in - place order .
compares two tables .
returns the raf of a collection of the given collection .
returns the filename of the gc .
check if the given file is a valid file .
open the file .
reads the data from a variable .
finds a variable with the given name .
finds a variable with the specified attribute value .
finds the name of a variable with the specified name .
finds a variable with the specified name .
finds a structure with the given dimension .
finds the nested structure of the given structure .
checks if the given dataset has a netcdf3record .
gets the literal literal .
gets the feature type of a dataset .
returns the name of a variable name of the variable .
returns the dimension for a given dataset .
returns the dimension name of the dataset .
gets the value of a particular i .
connects to the connect .
returns an array of the values .
returns a new { @link range } to the given range .
create a new array of edges .
compute the d2 of a given array .
returns the makeyedgesrotated of a given array .
returns the bounds of the d3 .
finds the single hit of the array .
finds the closest closest bounds in the target array .
doit
sets the instance of the unit .
returns the name of the enumeration .
unwraps the given node .
adds a menu action .
adds an action action .
adds an action to the image .
adds an action check for a menu .
returns the match with the given path .
finds the type of the given name .
returns the type of the specified name .
open the given file .
reads the data from the input stream .
reads the data from the layout .
converts a structure to a structure .
convert a heap to a heap .
reads the data from the layout .
reads a structure from a structure .
/ * ( non - javadoc )
calculates the center points .
make a coord object from a dataset .
adds a segment to the list .
*************************************************************************
returns the index of the specified byte array .
computes the failure of the given byte array .
checks if the dataset is mine is mine
removes all least popular from the cache .
adds a url to the cache .
reports the cache to the cache .
stops background loading loading the cache .
stop the background loading except that the given url is loading .
sets the column visible .
{
{
{
returns the column at the specified index .
creates the columns from the model .
get a httpmethod object from a given session .
create a new httpmethod object from the given url .
deflate
{
create a new {
/ * ( non - bit integer .
returns a random float )
returns the next count of the number in the number .
{
{
{
deserializes the content from the given {
get the provider for the given uri .
read the station table .
parses a line from a line .
opens the netcdf file .
returns the array1d at the given index
{
*************************************************************************
removes a data variable from the data variable name .
returns the hgt2
write a diff to the table .
/ * ( non - javadoc )
construct the transient .
sets the number of the colors .
returns the color of a specific i .
sets the min max colors .
prints an array of a string .
writes the data
sets the world bounds .
returns a buffered image .
documentation inherited from interface
calculates the transform of the screen .
check if the given auth scope is compatible with the given ss .
create a new {
convert a uri to a } .
finish the grid
checks if the given factor is reciprocal .
creates a new instance of the given tvpmeasurementmetadatatype .
returns true if the service is relative to see if the service .
sets the request context .
sets the non - request context context .
generates a string representation of the dataseturl .
returns a catalog catalog catalog .
finds the index of the given constant .
reads a dataset from the given url .
reads the metadata of the metadata .
adds the metadata of metadata .
validates the metadata of the given content .
reads the metadata from a dataset .
generate a catalog element from a dataset .
reads a dataset source element from a dataset .
reads a dataset namer from a dataset .
reads a dataset filter from a dataset .
read the result of the result .
creates the cat element element .
creates a dataset element from a dataset .
creates a dataset element element .
creates a dataset filter element .
creates the result service element .
checks if the given flag is a set of np .
construct the menu .
adds a menu to the menu .
adds the parameters to the list of words .
constructs a parameter from a parameter .
returns a parameter .
*************************************************************************
reads the contents of the input stream .
reads the bytes from the input stream .
get the input stream for the given resource name .
creates a uom object .
returns the meters factor of the given units .
returns the detail info .
sync the trajectory to the trajectory .
/ * ( non - javadoc )
returns the level of level .
replaces all the file template with the given index .
sets the station info .
reads a list of create a list of objects .
add a property change listener .
validates that the given a string is valid .
/ *
check if the given value of the value .
restore the value of the given value .
sets the new value of the store .
sends the event to the listener .
shows the format info .
formats a double in a string .
reads a bitmap from the given raf .
writes the configuration
finds the type of the given name .
returns the type of the given name .
initializes a point type .
set the netcdf file .
returns the subset of the given subset of the given subset .
prints a line to the writer .
sets the debug flags .
returns the url of a url name .
parses the global attributes .
/ * ( non - javadoc )
parses a name and returns the name .
construct the top - level variables .
adds a variable to the group .
returns true if the group is a group .
adds all attributes of a variable .
returns the netcdf strlen for the netcdf
get the shared dimension of a group .
constructs a list of dimensions from a group .
returns the encoded encoded encoded encoded encoded encoded name
returns the attribute value to use for the given data type .
returns the data type to a data type .
returns the given { @link opendap } .
checks if the given { @link opendap } .
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a nc2
/ * ( detail ) of the formatter
returns an instance of the icon .
gets an image .
create a cursor with the given name .
get a resource from the classpath .
*************************************************************************
reads the data from the given { @link file } .
reads the data from the given layout .
reads the data from the input stream .
reads the data from the input stream .
read the data from the given { @link layoutbb } .
reads the data from the layout .
copies the contents of the given array to the given channel .
creates a primitive array from the given size .
creates a primitive array from a primitive array .
decodes a byte array into base64 encoded byte array .
encodes a char array into a byte array .
converts a byte array to a char array .
reads a section of a { @link ucar } .
creates a new {
adds a new field to the field .
{
returns the string representation of the given structure . <p >
returns the scalar structure of the given index .
{
{
creates a new structure for the given variable .
prints a string in a string .
adds the dimensions to the netcdf .
*************************************************************************
create a new dataset from the given path .
normalizes the given path .
returns the bounds2d of the contour .
sets the persistence cache .
adds a explicit dataset .
adds a dataset scan .
add a collection of collection
finish the dataset .
make a datasets of the datasets .
gets the typical dataset .
create a dataset from the given cache .
sets the dataset to the dataset .
puts a resource control .
adds a point to the list .
sets the next line .
sets the line .
sets the line for the given index .
returns the upper upper upper upper points .
returns the getbblower of the lower point .
validates the given string against the given .
checks if the dataset matches the given dataset .
returns true if the given dataset is null .
adds all the station to the given dataset .
gets the copy of the station .
parses a constraint .
parse the given constraint .
sends a dataset to the output stream .
evaluates the given object .
mark all the variables
prints the constraint .
check if the given group is a group .
parses the given netcdf file .
sets the shared dimensions of a variable .
checks if the given dimension is unknown .
finds the group nested group with the name of the group .
reads the xlink content from the uri .
returns the standard url name .
returns the standard uri of this dataset .
parses the file file .
returns an enumeration of the named { @link enumeration .
returns the property with the given property .
prints the contents of this section .
sets the section of the section .
sets the projection .
returns the name of a js code for a js code .
writes a variable entries .
writes the attributes
creates a shape type .
adds a layout component .
invalidate the given container .
removes the given component } .
returns the preferred size of the given container .
returns the minimum size of the minimum .
{
returns true if the given formatter is radial is radial .
make a radial sys object from a formatter .
returns the maximum radial radial .
returns the date units .
*************************************************************************
reads a point from a grid .
process a method .
sets the command to the command .
sets the command to the url .
/ * earth - to - to the sat of the given geographic .
converts a scan to a earth )
convert a lamda to a geos .
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a line to a earth line }
/ * ( non - javadoc )
convert a geographic line to a elem .
/ * ( non - javadoc )
scans the given scan axis to sweep .
returns the given { @link string } .
sets the runtime coords .
rewrite the given a dataset in the given file .
writes a dataset to a dataset .
rewrite a dataset to rewrite the feature .
writes the feature feature collection to a file .
returns the array with the given member .
returns the scalar object associated with the given member .
returns the scalar object of the given member .
converts a member to a member .
returns the scalar string for the given member . <p >
returns the scalar structure for the given member .
returns the array of {
returns the array of the given member .
shows the given formatter .
returns the name of the full name .
returns the authority of the authority .
get the access access to the specified type .
finds the access url that matches the specified accessurl .
finds a dataset by name .
gets the parent catalog .
returns a list of all metadata .
finds a service by name .
/ * ( non - access access to the restrict .
returns a list of variables for the given vocab .
{
convert a projection to a proj .
convert a projection to a lat lon
/ * to a proj .
converts a lat to a double array to a lat .
*************************************************************************
finds all cat refs in a dataset .
create a path to a string .
returns a coordinate array of a coordinate .
get a coordinate at the specified index )
adds a stagger to the array .
returns the array of the given array .
constructs a copy of {
computes the precalculate of the tolerance .
computes the rho for the given lat .
computes the theta of the given point .
returns the scale of the scale .
convert a projection to a proj
convert a projection to a lat lon
convert a float array ) to a lat lon .
computes the proj of the proj .
*************************************************************************
writes a line to the writer .
writes the dataset .
*************************************************************************
/ * ( non - javadoc )
{
returns the detail info .
creates a new { @link structure .
creates a new { @link variable .
make a variable variable variable .
adds the global attributes .
returns the size of the stn variable .
constructs a list of station vars vars for the given dimension .
returns the array of float to be used to a data type .
make a station variable variable .
returns the goto state of the state of the goto .
/ * convert string from a string
/ * prints a symbol .
/ * (
returns a string representation of a string into a table .
prints the reduce a reduce of a reduce reduce .
parses the given constraint .
/ * expression
compares two objects to the given object .
compares two strings .
reads the request as a string .
reads an error from the stream .
reads the next byte from the stream .
reads a byte from the stream .
reads the header from the input stream .
initialize the table .
returns a string to a string format
convert a string to a date .
convert a calendar to a calendar object
convert a string to a date
creates a new {
reads a table from the given url .
reads a table from the given input stream .
transfers a dataset from a source file to another dataset .
transfers a group of a group to a target file .
transfer all variable attributes of a variable .
transfer all attributes from a group to a group
finds the group of the given group .
returns the stn file .
{
{
create a subset of this subset of the given coverage .
returns the index of the first occurrence in the array in the array .
checks if the given character is a letter } .
replaces all occurrences of the occurrences of the given string .
parses an integer from a string .
parse a string to a double .
parses a long as a long .
converts a double array } to a rational .
{
{
/ * ( non - javadoc )
create a new index .
creates the multiple runtime collections .
creates all the runtime collections .
validates the given string .
gets the edit value .
sets the edit value .
returns the data type of the given format .
process a dataset
compute the xyzell of a xyzell .
compute the gast of a b b )
returns the juday of a juday of the 30 ) .
/ * togreenw of the togreenw function .
computes the spin - wise spin of a vector .
/ *
compute the ecftolla of a ecftolla .
reads the world map from the file .
remove the given unit from the given unit .
removes all whitespace name from the name .
check if the equivilant is a equivilant .
checks if the given unit is unitless .
prepares the url string for the given url .
creates a feature collection from a snippet .
returns the shape of this shape .
returns the projected shape of a projection .
returns the projected shape of a projection .
initialize the init .
creates a new {
returns the id of the variable variable .
parse a {
parses the variables of the given parent .
parse a sequence of a datadds
parse the data variables from the data .
add a table to the table .
finds a dods
/ * ( non - null data .
finds the element at the given index .
show the url to the url .
returns the shape of this shape .
get the parent group .
returns the dimension of the specified dimension .
returns the index of a dimension in the specified name .
returns the units string .
returns the shape of the shape .
returns a new variable section of the given ranges .
create a new { @link variable with the given section .
/ * ( dim )
reduce the given list .
sets the enum typedef .
reads a section from the specified shape .
read a list of ranges from the stream .
reads the given { @link ucar } .
reads a scalar string from the input stream .
reads the next array .
/ * ( non - javadoc )
read a proxy from the specified section .
/ * ( non - javadoc )
reads the contents of the given section .
gets the name of the name of the name .
returns the name of the name and dimensions .
/ * name of the name .
/ * ( non - javadoc )
/ * name of the name of the formatter is a netcdf .
returns a string representation of this object .
returns a string representation of this dataset .
sets the data type .
sets the list of dimensions .
resets the shape .
sets the dimensions of the dataset .
resets the dimensions of the dimensions to the list of the dimensions .
sets the dimensions of the dimensions .
sets the dimension of the dimension .
returns true if the cache is caching .
sets the cached data type .
returns a list of dimensions .
returns true if the coordinate is a coordinate is a coordinate of a coordinate .
sets the bounding box .
/ * (
parses the temporal form .
returns all datasets in this dataset .
{
open a new {
record a node .
adds a var variable to the list .
record a struct for a variable .
record a seq to the given variable .
/ * ( non - javadoc )
this method .
creates a dimension of a dimension .
buildseqtype
this method to get the variable to the variable
add a list of cdmdims to the list of cdmdims .
finds the enum enum of the enum .
creates a netcdf
returns a list of core dimset .
checks if the given string is a valid .
scan
prints a constraint in a writer .
initializes the description of the given station .
scans a bufr file and returns the total number of bufr .
process the bufr message .
processes a sequence of members .
creates the record variables .
write a feature feature collection to a dataset .
this method to rewrite a file .
/ * ------------------------------------------------------------
post
{
get the transform of this matrix .
rotates the map of the given width of this matrix .
calculates the transform of the transform .
returns a map of the area .
convert a projection to a screen
convert a screen to a world coordinates
convert a projection to a screen
sets the pix of the pix .
sets the image
sets the pix the bounding box from the bounding box
adds a new listener .
removes a listener .
sends an event .
/ * ( non - javadoc )
print a command to the given writer .
prints the command line .
prints a file in a file .
prints the given file in a file .
prints the given file to the given writer .
print a variable data as a string .
returns a string representation of a variable section .
prints the structure data in html format .
prints the array of an array in the given writer .
prints the given array in a writer .
writes the given url to the given writer .
main method .
returns the false factor of the given dataset .
read a double attribute .
read the attribute double2 .
adds a parameter to the list .
returns the earth radius in km in - radius .
*************************************************************************
finish the service .
checks if the url is valid .
{
reads the atomic atomic from a list of slices .
reads the given {
sets the elements of the scheme .
create the actions the actions .
/ * this method is called when the coverage of the projection .
save the current bamutil
enables / disables the state of the toolbar .
shows the dataset .
redraw
returns a grid parameter .
returns true if the given record is up to the given record .
creates a observed property .
this method initializes javax
creates a new map that initializes the map .
converts the given array of amounts .
converts the given input unit to a float array into a float array .
returns true if the unit is compatible with the given unit .
make a label .
initializes the monitoring type .
returns a list of polygons with the specified name .
returns a list of all the lines .
returns a list of points with the specified name .
sets the bit offset from the buffer .
reads a 32 - bit unsigned unsigned unsigned int .
/ * ( non - javadoc )
opens a connection .
open a new das .
create a new command .
returns a string representation of the given string .
generate a string representation of a string .
create a new command .
/ * ( non - javadoc )
create a new command .
get the data for a command .
get the data object ) of the data object .
{
{
{
returns a list of intercepts edge between two projbb .
returns a list of map edge at the map
returns a list of edge intercepts at the given y0
/ * [ deutsch date .
returns true if the ensemble is a ensemble .
checks if the given feature is mine .
generate a dataset catalog for the given xml file .
returns the range of the given range .
initialize the phenomenon instance .
check if the given file is valid .
reads the header from the file .
handles the file information .
/ * processing information .
handles satellite information .
handle the sensor information from the sensor .
returns the header information .
reads a root element from a string .
remove character data in the given string .
checks if the given file is a valid file .
open the given {
adds the global global attributes .
checks if the format is valid .
reads all data from a file .
reads a data from a variable .
converts a string into a string
escapes the given url to a string .
unescapes the given a string .
decodes a string .
encodes a string into a string .
creates a new variable variable .
adds the global global attributes .
sets the content disposition value .
prints a projection in a projection .
prints a projection in html format .
/ * ( non - javadoc )
serialize a dataset to a dataset .
sets the projection to the given dimension .
returns the start of the specified dimension .
prints a projection to the specified output stream .
swap a short at the specified byte array at the specified offset .
swap a byte array into a byte array .
swap a double array at the specified offset .
swap two float value .
swap a double value with the given double .
convert a short to a byte array .
convert an integer to a byte array .
convert a long to a byte array .
read an array from a variable from the specified variable .
transforms the specified range to } .
opens a new grid .
get the time coordinate .
returns the vert coordinate for a given the given id .
returns the ens of the given ens .
returns the given date into a string .
writes a document to a document .
parses the given xml string into a dataset .
resets the state of this object .
reads the next character in the stream .
/ * ( non - javadoc )
reads a coordinate from a coordinate at the given time index .
reads a coordinate in the given time at the given index .
creates a new array in a } .
make a height of the array .
{
writes the features to the features .
adds all the levels .
returns true if the given the given records .
adds the dimensions to the netcdf .
adds a group to the netcdf .
find the coordinate transform of a group .
returns the index of the specified record .
exit the timer .
returns the default disk .
sets the root directory .
returns the cache file for the given file .
get the file in the cache .
checks if the given file can be written to the given path .
returns the existing file or null if it doesn t exist .
creates a unique file .
make a cache path for the cache .
show the cache .
cleans up all files in the cache .
returns the expected message .
{
{
calculates the bearing of the given earth .
calculates the bearing of the given lon .
calculates the bearing for the given bearing in the bearing .
calculates the bearing of a earth and the bearing .
*************************************************************************
finds a point in a point with the first point .
finds a point in a point .
finds a point in a given point .
finds a point in a point .
loads the picture in the given url .
loads the picture from the image .
loads the picture file .
stops the image .
stops the given url .
returns the size of the image .
add a listener to the source picture .
remove a listener .
sets the status of the status .
sets the source image .
returns the standard uri of the dataset .
make a field descriptor descriptor .
transfer the data from a list of data descriptor to the data descriptor .
counts the number of bits in the total number of bits .
check if the specified object )
returns the list of keys .
loads the header from the stream .
loads the data from the header .
returns the field with the specified name .
returns the doubles by name .
returns the strings by name .
get the booleans by name .
returns the field name .
returns the names of the field names .
*************************************************************************
/ * attributes .
sets the attribute of the attribute .
remove an attribute from the list .
get the group group .
get the container node .
sets the parent node .
returns the escaped short name .
returns a list of the dap .
returns a list of the container .
returns a list of dap in the current sort .
returns a string representation of the path .
returns true if the top of the top level .
/ * ( non - mine is mine
adds a radial variable to the dataset .
returns the string representation of this object .
builds the dataset .
builds the dataset .
writes the dataset to the dataset .
returns the bean associated with the given key .
puts a bean into the given key .
puts a bean collection with the map .
puts a bean object .
gets a list of strings associated with the given key .
returns a list of children of the spi .
returns a collection of children to the given node .
returns a string array of keys .
spi
create a new { @link node } for the given name .
returns the spi associated with the specified key .
puts a new spi .
removes the node spi .
returns the object associated with the given key .
reads the data from the input stream .
reads the raw data from the input stream .
reads the data from a file .
reads the data from a file and returns a float array of bytes .
prints the current dataset .
prints a variable in a variable .
prints the compound instance .
{
write the given element to a string .
writes the given element to the given file .
writes the content of this outputstream .
writes the content of this writer .
make a explicit netcdf element .
create a new enum element .
create a new dimension .
creates a new element from a variable .
initialize the measure type .
make a coordinate of a coordinate .
returns an array of int .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
initializes the codes codes .
generate the crawlable file .
creates a new { @link unit } .
create a new {
create a new unitdbimpl .
create a new unitdbimpl object .
returns a new instance of the <code > si / var > instance .
updates the dataset .
/ * ( non - javadoc )
/ * ( non - javadoc )
finds the element in the given target .
finds the index of a regular expression in the axis .
finds the contiguous element in the target element .
finds the index of the given interval .
finds the coord interval of the given target element .
finds the single hit in the target .
finds the closest closest value in the given target .
sets the subset of the given { @link { @link coverage .
sets the subset of the given value .
subset the subset of the range .
/ * ( non - javadoc )
writes the netcdf
shows the declaration .
data
show the grib index .
check if the local params of a local params .
check if the given a formatter is valid .
scans the issues in a file .
show the encoding .
do the unique gds .
opens a feature dataset .
opens a feature dataset .
opens a feature dataset .
opens a dataset .
finds the access access list of the given access list of access to the given list .
annotate
gets the image access to the given dataset .
find the access by service type .
finds the access by data format .
returns the detail detail )
{
reads the data from the input stream .
reads the data from the given raf from the file . file .
get the binary data info for the given raf .
reads the raw data from the input stream .
force the child url .
returns a set of parts to a string .
returns a canonical string .
checks if the given file is mine .
augment
normalizes the units .
make a new axis for the given dataset .
assigns the coordinate transforms to a dataset .
check if the given path matches the given path .
compiles the given {
/ * ( non - dsp .
returns an array of the groups ) of the specified gid .
throws an exception
finish the dataset .
{
inserts a value associated with the mapping .
removes an object from the map .
/ * [ deutsch ] <p > erzeugt eine .
prints this node .
print a node to the given node .
/ * ( non - javadoc )
print an xml entity .
check if the given attribute is a special attribute .
prints a list of a variable .
returns a string representation of a string representation .
initialize the area .
checks if the given file is a valid file .
reads a variable from a section .
set the area of the area .
sets the nav block attributes .
returns the area of the area .
returns the cal type of the given name .
sets the cal type attributes .
finds the coords in the specified table .
finds the coord name of the given type .
finds a { @link coordinate } that matches the given type .
finds a coordinate axis that matches the specified type .
finds the dimension of the given type .
finds the best coordinate of the given dataset .
finds the dependent that matches the axis .
/ * ( non - javadoc )
{
prints a constrained element in input format .
prints a string representation of the format .
/ * ( non - javadoc )
sets whether all the read flags .
serialize a dataset to a dataset .
adds a variable to the list .
returns the type of the named name .
returns a variable at the given index .
{
checks if all semantics is semantics .
prints a string representation of this matrix .
deserializes the data from the input stream .
deserialize the old server .
deserializes a single data from the given {
reads the marker from the stream .
writes the marker to the output stream .
writes the content of this stream to a } .
{
parses the xml document .
/ * ( non - javadoc )
/ * ( non - javadoc )
report an event .
creates a new dataset .
*************************************************************************
returns a string representation of the java array of strings . <p >
returns a list of doradeparm .
renders the action .
<p > the stations . stations .
sets the selected station .
******************** resizing ******************************************
sets the trajectory info for this configuration ) .
returns the {
{
{
sets the catalog to the output stream .
writes a catalog to a catalog .
writes the inherited metadata .
adds a projection to this projection .
adds a point to the list .
/ * perform a projection matrix in the given projection .
checks if the given point is inside this projection .
deserialize this object from the input stream .
/ * object to the object .
returns true if this { @link projection } .
add a new unitdbimpl .
adds a new unit .
adds an alias to the list .
adds a symbol .
adds an alias to the list .
adds an alias to the list .
returns the unit with the given id .
adds a new unit by name .
adds a new unit by symbol .
adds a unique unit .
build the file list of files from the file .
adds a menu to the menu .
checks if the given name is a global name .
generates a fancy type name to be used type .
finds the record in the given raf .
reads the next repeating record .
reads a dataset .
sets the data in the structure .
serializes the given dataset to a dataset .
/ * ( non - 1 ) values .
/ * return
{
/ * compute the degrees .
convert a projection to a projection point
convert a projection to a lat lon
convert a float array to a proj .
reads the xml file .
draws the specified project .
opens a feature dataset .
opens a feature dataset .
opens a feature dataset .
opens a dataset .
finds the dataset access access to the given list of service type .
annotate
gets the image access to a dataset .
find the access by service type .
finds the access by data format .
removes all dups from the given list .
adds a partition to the list .
returns an immutable dataset .
create a collection of the grib .
returns a {
create a { @link reg } that matches the given substitution pattern } .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a query object from the xml file .
get the given query
/ * ( non - javadoc )
return true if the given filename ) is writexml .
one
sets the projection at the specified position .
/ * ( non - javadoc )
reads the structure data from a structure .
sets the picture of the scl .
sets the buffered image .
this method .
this method to fit the scl .
center the image .
scrolls the scl of the same size .
scrolls the down down of the scale .
scrolls the left point .
scrolls the right point .
sets the center location of the location
paints the component .
called when the status of the picture .
/ * [ deutsch ]
returns the given a string representation of a string into a string .
/ * tg into a string array of a string
/ * ti to a string into a string
returns a string to a string .
returns the ti
convert a string representing a string into a string .
convert a int array into a string .
lv
reverse
returns the packing packing packing packing packing .
returns the data type of the data type .
reads the data from the input stream .
copies all bytes from the input stream to the output stream .
prints the variables in the writer .
compress the server to the output stream .
returns the tag for the given short code .
*************************************************************************
opens an image .
/ * ( non - javadoc mode .
returns the size of the given type .
convert a vector to a vector
returns the sum of an array of integers in - 1 .
sets the grid of the grid .
sets the overlap of the overlap .
removes all of the elements from this map .
marks the specified object in the specified object .
finds the intersection of the grid .
finds the intersection of the grid .
finds the closest along the specified offset .
finds the closest along the closest along along the center .
returns the distance between two points .
sets the trajectory info .
returns the url of the url name .
sends a query to a query .
reads a coordinate array from a time .
reads a coordinate at the specified index .
creates a new { @link unit } .
*************************************************************************
open a collection of the given a collection of catalog .
puts the given value into the file .
returns a list of protocols from the url .
finds a dataset url of a dataset .
search for a fragment in the fragment .
parses a fragment from a fragment .
search for a path in the url .
decodes a path extension .
decode a lead protocol protocol .
checks if the given location is valid .
checks if the given location is valid .
checks if the given location is valid .
checks if the given location is valid .
/ * ( non - javadoc )
returns the suffix of the given string .
returns the prefix of the given string .
locate a file .
locate the relative relative to a file .
return
extracts the contents of a byte array into a byte [] from a byte array .
returns a list of all the given variable var .
returns the path of the given path .
checks if a list of slices is whole .
joins the given array of strings .
checks if the given path has a drive letter .
returns a list of protocols from the given url .
converts a list of dap to a list of slices
convert a template to a list of slices
returns an array of the index to an index .
creates a list of {
checks if the given list of slices is contiguous .
checks if the given list of slices is a single point .
convert a list of slices to an index .
reads the data from the input stream .
get a structure iterator from the input stream .
reads the netcdf file from the proto file .
creates a new document .
writes the index2 file .
returns a factory for a factory .
sets the ja
sets the station info .
sets the short names of the short names .
create a new {
prints a string representation of the format .
reads the tables from the inputstream .
reads the sub - categories from the given file .
adds a field to the specified text .
read a feature collection from a file .
reads the config file from a catalog .
adds a dap to the list .
updates the groups of the groups .
returns a dataset that contains a dataset .
finds a variable with the specified name .
compares two groups .
checks if the given variable is valid .
checks if the given group is enums .
checks if the given list of the same as {
checks if the given object is each of the given result .
returns true if the given name is mine .
returns the axis type for the given dataset .
returns the stat type of the given time range .
returns the subset of the subset of the given subset .
returns the subset of the given axis .
computes the subset of the intervals of the given intervals .
returns a list of all the ranges .
calculates the bounding box of the projection .
calculates the bounding box of the lat .
calculates a list of the connected to the given projection .
calculates the boundary of the boundary boundary .
connect to a list of connected points .
returns a string representation of a string into a string .
sets the defaults to the map .
sets the global connection timeout .
sets the global compression compression .
sets the global credentials for the given credentials .
sets the interceptor interceptors .
returns the cookie store .
sets the maximum redirects .
sets the follow of the follow should be used .
sets the sessions of the localsettings .
closes all methods .
sets the credentials provider .
sets the credentials for the given credentials .
set the authentication and proxy authentication .
returns a map of merged settings .
convert a string representation of a string .
track the given a session .
removes the keystore from the keystore .
sets the given path .
sets the global credentials for the given scope .
kill the session .
sets the global credentials provider .
validates the given url .
creates a new index based on the given shape .
computes the strides of the given shape .
returns the index at the given index .
/ * ( non - section )
returns the index of this index .
returns the index of the given shape .
returns a new index with the }
returns the index of the index .
returns an iterator over the index of the given array .
returns the current element in the list .
sets the current counter .
sets the element at the specified index .
sets the value of a specific value .
sets the element at the specified position .
returns a string representation of this object .
returns the name of the time interval .
/ * ( non - javadoc )
initialize the full .
reads the stations and returns true if the station .
returns the list of date keys .
/ * package
creates a list of parameters from a list of parameters .
gets the station list of gempak .
create a new station station .
returns a list of station names .
finds the station keys of the station .
returns a list of all dates .
prints the dates in a date .
prints the stations station .
finds the index of the specified id .
returns the file type .
set the number of the specified number of bytes .
sets the number of the indent .
initialize the clause .
walk a constraint .
this method .
{
collects all components of the given stack .
collects all components of the given stack .
walk a server at the specified index .
translate the given object .
translate a server .
{
sets the variable of the variable )
{
read an index from a single file .
opens a new mfilecollectionmanager .
/ * ( non - modified directory .
/ * ( non - javadoc )
scans the first time in the file .
sets the debug flags .
adds a new variable to the list .
write a new netcdf .
adds a field to the list .
returns the atomic array of the given index .
returns a string representation of this document .
creates a new document .
*************************************************************************
serializes the given { @link outputstream .
validates the given object .
/ * ( non - javadoc )
{
sets the original variable of this variable .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts the given { @link structure
converts the given { @link section to a structure .
converts a structure to a structure .
converts the member of the given a member .
finds a variable from a org .
returns true if the given variable has the same name .
enhance the given a set of the given set .
open the netcdf
open a grid dataset .
opens a coverage dataset .
check if the resource control is ok .
registers a dataset source .
prints a constraint .
/ * ( non - javadoc )
reads the data from the given section .
reads the sounding data from the section .
creates an empty sequence of {
creates a sequence of {
build the file file .
builds a file .
creates a new sequence .
adds a vertical coord attribute to the file .
sets the catalog of a catalog .
/ * ( non - javadoc )
this method to create a uri .
returns a catalog as a catalog
creates a catalog from a reader .
/ * ( non - javadoc )
creates an xml representation of the xml document .
{
{
returns a string representation of the catalog .
gets the metadata associated with the specified key .
one
returns the id of the unit } .
/ * ( non - javadoc )
{
converts a float array to a derived unit .
{
*************************************************************************
writes a feature to a geometry .
writes a point to a point .
write a line of a string .
writes a polygon .
parses the xml document .
pull a node in the name .
make a new attribute )
returns the list of a node .
parses the xml node .
pass
returns the subset of a subset of a variable .
creates a structure to a arraystructurema
sets the member array .
creates a structure to a arraystructurema
read a polygon .
read a line .
read a point from the dataset .
returns the geometry type for a geometry .
make a new { @link station } .
removes all clauses of clauses .
/ * ( non - javadoc )
adds a dataset to the dataset .
creates a new {
creates a new { @link array } for a {
creates a new {
sets the index of the index .
returns true if this {
returns true if this matrix contains the given lat .
returns true if this {
******************** resizing ******************************************
******************** resizing ****************************************** .
/ * [ deutsch ] <p > addiert den angegebenen rect .
returns a {
adds the given array to the array .
adds a double to the array .
returns true if the array of the array of the array of the array .
returns true if the shape is a shape of a shape of a shape .
converts the given array to a array of { @link array .
copies all the elements from the given index .
copies the given array to the given array .
copies all the elements from the given array to the given array .
copies all elements from the given array to the given array .
copies all elements from the given array to the given array .
copies all elements from the given array to the given array .
copies all elements of the given array to the given array .
copies all the elements from the source array to the given array .
copies the contents of the given array to the given array .
copies all elements from the given array to the given array .
copy all the elements from the given array to the given array .
returns the maximum element in the array .
sets the given double in the given array .
returns the sum of the given array in the array .
returns the sum of the first occurrence of the array in the array .
calculates the scale offset of the scale of the given array .
returns true if they are equal .
/ * ( non - javadoc )
creates a new { @link catalog } .
returns the attribute table .
returns the attribute table table .
resolves all the aliases .
resolve the aliases of the attribute .
resolves an alias for testing
returns the alias attribute of the given attribute .
/ * ( non - javadoc )
creates a new { @link grib1gds } from a template .
returns the number of the specified octet3 .
/ * ( non - javadoc )
returns a new {
converts a {
convert a projection to a lat lon
/ * ( non - javadoc )
convert the given id .
decodes the given string .
decode
escapes all characters in a string .
unescapes all occurrences of the specified string .
tokenize the given a list of escaped name .
returns the index of the first character in the given string .
convert a string to a string .
escape a string to a string .
convert a string to a string .
reads the atomic of a list of slices .
reads an atomic scalar from the given notes .
/ * ( non - javadoc .
returns the size of the element in - place of the element .
computes the offset of the given nc4cursor .
returns the list of a list of the cursor .
returns the vlen for a given variable type ) .
{
gets the descendants of the given type .
gets all descendants of the given type .
returns the descendant of the specified type .
gets the descendant of a class .
returns the descendant of the specified class .
gets a map of all the descendants of the given container .
returns the uidefaults of a class .
creates a new uidefaults from a class name .
gets the value of a class .
gets the properties of a component .
gets the class of the given component .
compiles the dataset .
compiles a structure array .
compiles a structure .
compiles a sequence of instances .
compiles a sequence of fields .
extract the checksum from the buffer .
reads a number of bytes from the stream .
reads a 32 - bit unsigned long
/ * ( non - javadoc )
finds the axis type of the given the dimension .
reads a { @link grib1collection } .
adds an action listener for this action .
removes an action listener .
accepts the message .
returns the value by name .
returns the value associated with the named field .
set a field value .
adds a new field to the table .
adds a check box to see {
adds a date field .
adds a double field .
adds an int field to the given field to the field .
adds a password field .
adds a text field .
adds a text combo field .
adds a text area area .
adds a heading to the layout .
{
adds an empty row .
/ * ( non - javadoc )
finds the active frame of the frame .
reads a dataset .
returns the spacing spacing spacing .
returns a factor of factors .
returns a factor of the given dimension .
returns the factors of the given power .
checks if the given dimension is reciprocal .
returns true if is dimensionless is dimensionless .
initializes the observation member .
fire the tree nodes that a tree has changed .
fire the tree nodes that a tree has been inserted .
fire the tree nodes that a tree has removed .
persist the cache .
persist
returns the cache name for the cache .
make a key - value .
returns a new { @link grib1param instance for a given path .
creates a new {
returns the parameter table table for the parameter .
adds a parameter table to the lookup .
adds a parameter table to the table .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a float array to a derived unit
{
check if the given file is valid .
opens the given {
make a new file .
reads the data from a variable .
initializes the unit table table .
make a vertical variable variable .
adds the lat lon variables to the list of the lat .
read the descriptor from the file .
reads the descriptor from the given file .
returns the name of the given file .
checks if the given file is a little - endian endian endian endian .
grab a short from a short array .
grab an integer from the given byte array of bytes .
reads a float from byte array .
reads a double from a byte array .
returns the default verbose state of the given descriptor .
returns an instance of this method .
----- private methods
adds a unit .
aa the given alias .
add a symbol to the unit .
*************************************************************************
canonicalize a location to a string .
resolves the given uri .
create a new converter .
writes a {
adds a list of list of the selection .
removes a list of selection selection .
{
set the point data model .
draws this method with the specified color .
returns an iterator for the given shape .
init
this method to make sure that the time to the same as {
make the time to the time .
make a lazy time1darray array of time1darray .
make a lazy time2darray array .
{
executes the given file .
reads the input stream .
reads the buffer from the input stream .
reads a buffer from the stream .
read a buffer from the stream .
reads the more bytes from the next sequence .
reads bytes }
skips the next number of bytes from the number of bytes .
/ * ( ucar .
*************************************************************************
reads a coordinate in a coordinate at the given index .
reads a coordinate in a particular index .
check if the records are levels .
adds the dimensions to the netcdf .
adds the given group to the netcdf .
returns the index of the record in the record .
check if the given file is a valid file .
/ * ( ucar
reads the data from the given section .
read a one scan from the scan .
read one row data from a byte array .
creates a dataset from a dataset .
create a new variable from a variable .
/ * ( non - javadoc )
fires a map of map area that have been sent to the map .
sets the map of map .
sets the map area .
sets the lat area of the center .
sets the projection for the projection .
adds the actions to the menu .
redraw
defines if the toolbar should be used .
documentation inherited from interface
documentation inherited .
returns the buffered image graphics .
calculates the transform of the image .
new
draws the graphics .
sets the selected group .
returns the element type .
returns the double value at the specified offset .
returns the double value of the index .
/ * ( non - null value .
returns a name of the given name .
/ * name of a given id .
/ * gini getphyselemid to a name .
returns a long name of the phys .
reads a scaled int from the stream .
finds a parameter with the specified name .
/ * ( non - javadoc )
{
reads a list of lines from the file .
swaps the order .
gets the steps of the steps of the given filename .
returns the name of the file at the given index .
gets the list of the file names .
returns the last slash of the file .
returns the full path of the file .
adds the chsub to the list .
writes all the data in the file .
writes the data to the output stream .
converts a { @link calendar } into a { @link java . util . time . <p > this converts a { @link java . util . calendar } to a { @link java . util . time } object .
returns a new array of the given index .
sets the index of the given index .
check if the given file is valid .
reads a random number of a file .
/ * ( non - null byte array of bytes from the buffer .
reads a ucar
/ * pcode to the pcode .
adds a member to the 25 .
/ * ( non - null .
/ * adds a pcode to the direct .
adds a member to the member .
/ * 10n9 to the pcode .
/ * this method calculates the number of a pcode object .
/ * ( non - javadoc )
/ * ( non - javadoc )
parse the components of the given byte array .
parse a list of a {
parse the parameters from the given byte array of bytes .
adds the attribute pairs .
read a string from a string .
/ * ( non - javadoc )
returns the levels of the levels .
returns the number of levels in a given number of bits .
returns the number of an array .
returns the levels of a short array .
returns the number of an int array into an array .
adds a variable to the file .
adds a parameter to the list .
returns the product level of the product .
sets the product info .
reads the uncompressed uncompressed bytes ) of the header .
reads a dividlen from the given buffer .
reads a msghead from the buffer .
returns the number of bytes from a byte array
returns an int from a byte array .
/ * ( non - null integer )
converts a byte array to a object .
converts the given byte array to a new object .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
calculates the code of two - dimensional .
returns a string representation of the given code .
calculates the code reslookup code for a given code .
/ * levelslookup code into a code .
{
handles a request to the request ) .
/ * request to the request .
/ * to the specified in the cache .
handles the data .
add common headers to the request .
get the request state .
/ * ( non - bad .
set the endianness
/ * ( non - null constraint .
returns true if the point is anchor .
draws a point in the specified point .
end the point .
/ *
returns the bounds of the rectangle .
returns the last bounds of this rectangle .
parses the given text from a java date .
parses a date format .
parses the given text as a date .
parses a string representation of a string representation of date .
parses the given { @link date . format } .
parses a string representation of a date .
convert a date to a string .
replaces all the data vars .
ensures that the given attribute size is valid .
rounds a double to an integer .
initialize the local table .
reads a int2 from the given raf .
reads a random number of bytes from the input .
reads a random number of bytes from a file .
reads a random number from a file .
reads a random number of bytes from a file .
reads a float from a file .
returns the float4 of an integer value in - bit integer .
reads a int8 from the given raf
counts the bits in bytes in - memory .
{
/ * this method .
returns a string representation of the sbuff .
returns the scale of the scale .
convert a projection to a proj
convert a projection to a lat lon
convert a float array to a proj .
convert a float array to a lat lon
escapes the given string in a string .
escapes the given string with the given wrt .
unescapes all occurrences of the given string .
backslashsplit
remove a string from a string .
handles the feature type .
create a new fmrc .
create a new fmrc object .
returns the service special case .
returns the file with the given path .
counts the number of elements in this map .
adds a variable to the list .
returns the type at the given index .
checks if all semantics of the encoded .
prints a specific type .
copies all elements of this stream to the given output stream } .
returns the number of all the number of this map .
returns true if the grid is a constrained .
returns a new dapnode )
returns the level of level values in the mapping .
{
{
{
/ * [ - ] of this date .
create a factory for a section .
{
/ * index .
read a record from a record .
make a new index .
returns the file associated with the specified path .
check if the given netcdf is mine .
transforms a dataset into a coordinate .
returns the axis type of the axis .
opens the area .
read a {
/ * area .
checks if the given date is before the given date .
checks if the given date type is before the given date type .
checks if the given date is after the given date .
parses the given string .
get a catalog from a catalog .
create a new catalog from } .
finds the type of the given name .
returns the type of a collection .
sets the value of the specified value .
deserializes the data from the input stream .
/ * data to the output stream .
adds a coordinate to the list .
returns the description of the variable .
sets the units string .
returns the units of the units .
/ * ------------------------------------------------------------
reread
checks if the given the catalog .
read a catalog from the catalog .
processes the datasets in the given dataset .
reads the cats files from the given directory .
creates the debug actions .
checks if the given { @link double } contains the specified lon .
returns the normal normal normal normal from the given start of the specified range .
returns a string representation of a string to a string
convert a double to a string
compares two quantity of this quantity .
*************************************************************************
returns the selected selected dataset .
sets the selected dataset .
create a new tree path .
open all the tree .
sets the catalog .
sets the catalog catalog .
shows the node .
shows the info info .
/ * ( non - javadoc )
finds the alias for a dataset .
/ * ( non - javadoc )
writes an unsigned int from the stream .
/ * bytes to the buffer .
/ * ( non - javadoc .
writes a string to the output stream .
reads a string from the stream .
reads a byte from the stream from the buffer .
reads the data from the file .
sets the debug flags .
returns the config config for the given dataset .
reads a coordinate from the specified index .
reads a coordinate at the specified index .
adds a new member .
hides the given member .
returns a list of member names . <p >
finds a member with the given name .
reads a bitmap from the given raf .
restores the state of the preferences .
saves the state of the preferences .
returns an iterator of the selected rows in the table .
sets the selected row .
returns the index of the model .
ensures that the row is visible .
sets the member data .
get the array of member .
returns the scalar double value .
get the double array of the java .
returns the scalar float as a structure .
get the java array of the java .
returns the scalar byte representation of the given structure . <p >
returns the java array of bytes as a byte array . <p >
returns the scalar scalar of the given member .
returns an array of all the array in - members .
returns the scalar scalar short . <p >
get a short array of java members .
returns the scalar scalar long value of the index . <p >
returns a long array of java members .
returns the scalar char of the given structure . <p >
get the java array of the java .
returns the string representation of the given structure . <p >
gets the scalar structure structure .
writes a dataset entries to a catalog .
write a dataset to the file .
checks if the given dataset is useable
adds a value to the list .
create a copy of {
transfer all metadata of the metadata to the dataset .
transfers the inherited metadata of the dataset .
gets the inheritable for this dataset .
adds a product to the list .
adds the extra attributes to the grid .
create a new variable based on the given group .
shows a record record .
show missing missing missing record .
show the summary of missing summary .
finds a record in the record .
/ * ( grid ) record .
returns the long name .
registers a factory with the given class .
registers a factory .
opens a dataset .
opens a dataset .
creates a new {
deserializes the source from the given {
writes the data from the output stream .
returns true if this resolution is ascending .
returns the coord
returns a list of intervals of the intervals .
applies the subset of the given subset .
deserializes the data from the input stream .
writes the data to the output stream .
check if the file type is a valid file .
checks if the given byte array is a byte array .
prints a line to a writer .
prints an ascii array .
/ * ( non - javadoc )
parses a dataset from a document .
processes all attributes from a dataset .
check if the attrname is a attrname
get
get
returns a date using the given date format .
get
get
get
{
{
adds a list of coords to the list of time .
collects all values of a string into a list of strings .
open the header file .
reads the data from the given shape .
reads a compressed compressed data from the image .
reads a gini line from the given line .
sets the gaussian lats .
******************** initialization ************************************
parses a variable section from a variable section .
parse a variable selector .
convert a string representation of a string .
checks if the given row contains the matrix .
returns true if the edge contains a matrix .
returns true if the edge of the same as {
returns true if the row of a row of {
make a new coordinate into a coordinate .
closes the session .
executes the request
executes the request .
get the table config for the given dataset .
get the station config .
get the profile config for the given dataset .
get the trajectory config .
get the time series for a given dataset .
identify the encoding of a encoding .
identify the raggeds is raggeds for a dataset .
identify the double raggeds .
make a table table for a given dataset .
make a contiguous table for a given a table .
make a multidim for a given dataset .
make a multidim for a table .
match the axis type of the given axis .
sets the stream to use for this method .
reads the next character from the stream .
starts the task .
reads the contents of the given file .
convert a string to a uri .
creates a uri of the given uri .
convert a string to a string .
returns the given a url .
returns a string to a path .
returns the given path from a path .
checks if the given path has a drive letter .
removes a path of a path .
returns true if the dataset is modified .
creates a new mfile object from a collection of directory .
copies the info from the back .
returns a list of all filenames .
sets the index of the index .
returns the index of the index in the index .
sets the org .
closes the index } .
prints an xml representation ) of an enumeration .
returns the number of counters in the counter .
opens the given file .
creates a new { @link netcdf .
adds a new dimension .
adds a new dimension .
renames a dimension .
add a global attribute .
adds a global attribute .
adds a global attribute .
delete a global attribute .
renames a global attribute .
adds a variable to the variable .
adds a variable to the list .
adds a variable to the list .
adds a string to the variable .
renames a variable .
adds a variable attribute attribute .
adds a variable attribute .
adds a variable attribute .
delete a variable attribute .
renames a variable attribute .
updates the attribute .
/ * creates a new file . ) .
rewrite the file .
{
write a section of bytes )
writes a string representation )
writes a string representation of an array .
{
adds a variable to the list of the variable .
returns an instance of {
initializes the buffer .
make the file sub - type type .
prints the ob of a row .
*************************************************************************
this method .
writes the members of the geometry .
get the output document to a string .
returns the xml string as a string .
creates a document collection of station
create a station document document .
*************************************************************************
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
write a chunk of bytes .
closes the connection .
{
/ * ( non - javadoc )
{
convert a { @link projection }
convert a {
*************************************************************************
adds a list of station to the list .
schedule all the tasks .
check if the given want contains the given want .
compose the range of this range .
returns a new range .
returns the index of the specified element in this list .
{
/ * [ deutsch ] <p > addiert of this range . < / p >
returns true if this range intersects the specified range .
shift a range of this range .
returns a new range of this range .
returns the first occurrence of the interval in the interval .
returns a { @link array } at the given index .
sets the ja
reads the data from the layout .
reads the data from the layout .
/ * ( non - null data type .
returns the config config .
/ * (
writes the data to the output stream .
writes the data to the output stream .
{
/ * ( non - javadoc )
sets the data type .
returns a list of catalogs that have been catalogs .
/ * ( non - javadoc )
loads the content of a file from the file .
/ * ( non - javadoc )
removes all files from the database .
sets the values of this matrix .
sets the params of the params .
write a grid grid ] .
write a swath grid .
computes the array of the array of the interpolation .
returns the swath information of a given array .
get the data chunk ) data chunk of the given section .
convert a projection to a proj
convert a projection to a lat lon
converts a float array to a proj .
converts a float array ) to a lat array
returns true if the cross - point is seam
create a new array array with the given ints .
get the description of the dataset .
gets the dataset boundaries .
checks if the grid is requested .
checks if the given grid have the same name as the same axis .
/ * [ deutsch ] <p > erzeugt eine neue neue factory .
returns the scale factor of the given lat .
convert a projection to a proj
convert a projection to a lat lon
/ * to a float lon .
/ * to a proj to a proj .
returns a dataset by name .
/ * ( non - javadoc )
opens the given grid .
make a dense coord for the given netcdf .
make a list of the vertical file .
reads the first header from the file .
/ *
transfers the metadata of the inheritable2public .
/ *
transfer the metadata of the dataset to the metadata .
transfer the inheritable metadata from the metadata .
canonicalize the metadata .
sets the list of the thredds .
adds a dataset at the specified index .
removes a dataset from this dataset .
replaces a dataset with the given dataset .
adds a service to the list .
remove a service from the service .
<p > a list of services .
removes the local metadata from the dataset .
{
writes an html description .
resolves the given href . resolve } .
validates that the dataset is valid .
checks if the dataset is a dataset is a dataset .
<pre > the name = 1 2 ] < / pre >
returns a list of all descriptors .
this function .
log the next log log .
construct the server path .
get the capabilities the capabilities .
get a feature .
checks if the error is valid .
/ * ( non - javadoc )
checks if the given url matches the given url .
builds the document .
/ * ( non - null document .
generates a string representation of a dataset .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the dataset path of the given path .
generates a dataset .
dataset a dataset to the dataset .
setup a point in the dataset .
returns the filename of the given file .
return
sends a file .
return
return
sets the length of the given string .
returns the context path of the request .
forward the request to the catalog .
returns the request server server .
returns the uri of the request .
gets the request path .
gets the request .
gets the parameter ignore case .
show the request detail .
shows the security user .
show the current threads .
returns the axis type for the axis .
saves the current file to the file .
create a new dialog .
writes a directory to the file .
returns a new array of {
sets the ja
init
initializes the begin position of the begin position .
init
initializes the time position type } . time . position () . time () .
/ * ( non - null is returned .
sets the bit offset .
creates a new { @link bit } with the specified { @code row } .
returns the number of bits in - memory .
initializes the local table .
appends a line to the line .
reads the next character in the stream .
yyerror
*************************************************************************
finds the first dap by name by name .
make a station collection of station features .
gets the capabilities of the capabilities .
returns a factory that returns the { @link byte [] in the { @link index } .
sets the ja
returns the value at the specified index .
returns the record at the specified subset .
returns the coordinate at the specified index .
creates a new { @link dap ) .
adds an item to the list .
returns a list of all the item .
returns a coordinate array ) of the given index .
/ * ( non - javadoc )
returns a slice of the slice .
returns the number of the total number of the number of slices .
{
returns the index of the first index .
{
returns a map of all the process .
returns the level type of the level type .
writes the index of a file to a file .
writes a { @link grib to a file .
read a dataset scan from a dataset .
read dataset scan scan filter .
read a list of dataset from the dataset .
returns true if the files .
adds a dataset scan coverage coverage .
checks if the given endpoint is cdmrf .
sets the value of the field .
creates a new instance .
creates a new grib1gds with the } with the specified center .
create a grib1gds to a grib1gds
reads the contents of an inputstream into a file .
reads a file from a file in bytes .
copies all bytes from the input stream to the output stream .
reads the contents of the input stream into a string .
reads the contents of the given input stream into a byte array .
write the contents of the contents of the given contents of the given contents .
copies a file to a file .
copy a file to a file .
copies the contents of a byte array into a file .
copies the contents of a file .
copies the contents of the given file to the given output stream .
copies the contents of the given { @code ucar
copies all files from a directory to a directory
reads the contents of a file into a byte array .
reads a file from a file .
writes a file to the given file .
writes the given byte array to the given file .
writes a file to a file to a file .
write a file to a file .
copies the contents of the given output stream .
parses the exception handler .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
prints a catalog .
/ * ( non - javadoc )
/ * ( non - javadoc )
prints the status of the server .
/ * ( non - javadoc .
/ * ------------------------------------------------------------
show the mem
prints the writer .
/ * [ calendar ] .
init
resolves an input source .
reads the vlen from the given variable .
opens the debug file .
creates a xml file from a xml file .
open a new { @link ncml .
replaces all occurrences of the given string .
break the given text at the given position .
removes all bytes from the given byte array .
filters all occurrences of the given string .
convert a string to a string .
make a valid cdm object name .
returns the first occurrence of the first character .
pad the left - bit with the given desired length .
pad the given string with the given desired length .
removes a string from the given string from the given string .
removes all occurrences of a string .
removes all occurrences of the given string from the given string .
removes all whitespace whitespace from the input string .
collapse the given string .
replaces all occurrences of the given string in the given string .
replaces all occurrences of the occurrences of the given string with the given string .
replaces all occurrences of the given string with the given pattern .
replaces all characters in the given string .
substitute a string in the given string .
escapes the given string with the given string .
unescapes all occurrences of a string .
/ *
removes a string from a string .
remove all characters from a string .
replaces all occurrences of the given string with the given string .
substitute a string with the given string in the given subst .
trims all occurrences of the given string .
make the collection of collection .
updates the event
shows the status of the given formatter .
checks the state of the state .
updates the state of the current state .
returns the full name of a full dataset .
make a catalog for the top - catalog .
create a new { @link catalog catalog .
gets the grid dataset .
gets the netcdf dataset .
returns the file in the file .
compress the data from the given formatter
checks if the tables of the tables .
@throws pageexception
sort the unique templates of the given formatter .
generate the summary .
/ * id problems .
/ * summary summary summary .
generate the summary
/ * time time .
renames all the files in the formatter .
/ * ( non - javadoc )
<p > a list .
this method to create a catalog ) .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the number of frac digits in the string .
writes a dataset of a dataset .
{
builds the global attributes of a given das .
builds a string representation of a variable .
create a { @link structure } to a { @link structure } .
convert a structure to a arraystructurebb .
convert a structure to a arraystructurebb .
convert a structure to a { @link arraystructurebb } .
creates a new { @link arraystructurebb instance .
convert a structure to a heap .
/ * ( non - javadoc )
returns a section of a section ) of a section .
/ * ( non - read ) of the names .
/ * ( non - javadoc )
get the table configurer for a given feature .
create a new analyzer for the given feature .
returns the first feature type of this feature .
this method to the feature .
make the default tables to be used to make sure that the table .
shows the nested tables .
creates a new document .
open a dataset for a dataset .
check if the given file is valid .
opens the given {
opens the grid .
sync the current state of the grid .
returns a { @link short factory } for the given { @link short } .
sets the index of the given index .
sets the given an array of the index .
returns the double at the given index .
/ * ( non - javadoc )
/ * ( non - handler .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
@throws pageexception
prints a probe request .
prints the help page .
prints a project .
returns the gaussian array of a given type .
swap a byte array into a byte array at the specified offset .
swap two byte array at the specified offset .
swap two byte array at the given offset .
finds the coordinate of the given dataset .
adds a parameter to the file .
finds a variable with the given name .
returns the variable or null if the variable is found .
finds a group with the specified name .
finds the dimension with the specified name .
finds the dimension with the specified name .
returns the attributes
finds an enumeration with the specified name .
returns the common parent of this group .
checks if this group is a parent .
returns the name of the name of the name of this object .
sets the parent group .
adds a new dimension .
adds a dimension to the list .
adds a group to the list .
adds an enumeration to this list .
adds a variable to the list .
removes the given dimension from the list .
removes the given group from the list .
removes the given variable from this list .
removes a dimension from the list .
removes a variable from the list .
sets the immutable list of this group .
make a relative group .
/ * ( non - javadoc )
returns the attribute of the attribute .
checks if the loose ends ends with the given attempt .
returns the loose ends conflict conflict conflict conflict conflict .
/ * this attribute .
populate the attribute table .
prints the dasexception .
removes a variable from the list .
returns the dconstructor for the given type .
get a variable by name .
search for a stack .
parses the given input stream .
sets the xml document .
checks if all the semantics are semantics .
prints the contents of this matrix .
resolve the aliases of the given base type .
resolves the aliases of the aliases .
resolves the alias .
get the deepest matching variable names .
normalizes the given field .
tokenize the given field .
prints an xml representation of a schema .
sets the attribute .
generates an ingest attribute .
ingest the ingest attribute table .
ingest the attribute table table .
checks if the attribute name is valid .
returns a string representation of this string .
returns a string representation of this string .
/ * ( non - javadoc )
/ * ( non - empty ) .
creates a proto proto id .
writes a grid to the grid .
writes a grid .
replaces the missing values in the given grid with the given data .
replaces the missing values in the given grid with the given data grid .
returns the xstart of the geo
write a grid in a grid .
search for the aliased dimension in the given dimension .
/ * ( non - javadoc )
returns a factory for the given index .
returns a new {
sets the ja
returns the double at the specified index .
/ * ( non - javadoc )
acquires a grib from the specified location of the hash .
gets the top index file file from the config file .
make a top - level index file from the config .
returns the type of a file .
open an immutable collection of cdm .
loads the index of the specified in the given index .
checks if the collection of a collection of index
updates the grib collection of the given collection .
updates the grib collection .
update the partition .
update the leaf collection .
updates the file .
opens a new { @link grib () .
creates an immutable collection of grib . grib .
open a new { @link grib .
creates an immutable collection of grib .
creates an immutable collection of { @link grib } .
{
check if the given url matches the given url .
adds a value to the specified key .
find the value associated with the specified url .
sets the well - known well as well as the triple .
loads the file from the file .
inserts a new triple into the cache .
prints a constraint .
returns the list of the datasets .
finds a dataset by name .
sets the projection for the given projection .
this method to get the iterator of the affine .
create a list of shapes shapes for a given list of shapes .
compares the given string to a string .
starts the progress monitor .
scan a leaf directory collection .
checks if the partition needs to see if the index .
create the partitioned index for the partition .
make a new {
writes the index of the given formatter .
writes a dataset proto proto } to a dataset .
writes a proto proto to a collection of variables .
writes a variable proto to the collection .
writes a proto variable variable to the partition .
create a partition proto to the partition .
returns true if this ucar are equals the same data .
finds the ens of the given list .
normalizes the given list of ec .
writes a sparse array to a file .
writes a dataset proto proto to a dataset .
writes the proto proto group .
write a variable proto variable to a variable .
sets the object at the specified index .
returns the structure data for the specified index .
returns an array of array of the given structure .
sets the member array .
extracts the member array from a structure .
copies all structures from the given iterator to the given index .
returns the scalar object of a scalar object .
convert a scalar object to a float .
converts a scalar double to a double .
convert a scalar int to a scalar int
returns the scalar float of the specified members .
returns a scalar byte array .
get the scalar short short .
returns a scalar char of the given structure .
returns a scalar string representation of the given structure .
returns the scalar structure of a given structure .
get the array of array of members .
returns a sequence of array at the specified members .
returns an array of array of the given structure .
sets the number of the given v0 to the specified index .
===============================================================
returns true if the cross seam is seam .
converts a value to a value
returns the java size of the given type .
force a range of bytes .
returns the number of the given {
extracts the path from the request .
gets the file name for a response .
prints a projection .
evaluates the expression expression .
returns a string representation of the constraint .
/ * dumpvar
returns true if the node is references .
check if the given variable matches the given filter .
checks if the given variable matches the given filter .
returns the index of the variable in the variable .
expands all the variables in the queue .
contract all the contract .
returns true if the given set of the given dstruct .
returns the number of fields in the given struct .
checks if the given structure is a whole compound .
/ *
adds a list of variables .
adds all groups of the group .
compiles a dataset from a dataset .
prints a portion of this method format .
{
returns the subset of the given subset .
/ * ( non - javadoc )
stores the persistent data in the store .
sets the system actions .
initialize the grib
get a new { @link gempak } object from a { @link file .
initializes the file .
initialize the file .
/ * ( non - negative integer ) order .
sets the byte []
reads the file header information .
reads the keys from the dm .
reads the headers from the row .
reads the parts of the parts .
main method .
find a key associated with the given name .
find a file header with the given name .
get the file header ) of a file .
prints parts } parts }
returns the part of a part of a part of the part of the part of the part .
returns the part of a part of the given part of a part .
returns the data pointer of a given part )
reads the dm
/ * ------------------------------------------------------------
/ * ( non - dm ) dm
dm
reads a string from the stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * dm of a part of the given part of the given part of the given part of dm .
returns a string representation of the bits .
writes all the data in the file .
write a file to a file .
writes the given netcdf to the given { @link outputstream .
parses the xml document .
parses the xml document .
parses the base element .
parse an array of array .
builds an array of { @link type objects } from the given template .
parses a grid element .
print an xml element .
create a base type .
creates a new base type .
parses the xml element .
parse the xml element .
convert a string to a string .
creates a new { @link feature } instance is used to create a new { @link feature .
decode a list of data into a list of keys .
returns a list of keys in the given list .
grab the compound names of the tree .
flatten the given list of keys to the list } .
removes all the fields from the tree .
/ * ( non - javadoc )
returns the dataset filename .
prints a list of the server .
/ * ( non - file is a valid file .
returns the time of the file type .
reads the data from a variable .
reads the standard data from the given variable .
reads the ship data from the given section .
this method .
builds the standard file .
builds the ship file .
returns the absolute difference between two points .
returns the absolute difference between two vectors .
returns the relative difference between two points .
returns true if nearly = b .
compares two strings
copies a dataset from a dataset .
read the xml table b .
reads the xml document from the input stream .
write a gds proto proto to the gds .
writes a {
converts a { @link coordinate } to a { @link grib } .
{
parses the given unit .
check if the sort sort of the sort order .
probe an array of an object .
/ * data to the specified output stream ) .
returns true if the given variable is tiled .
returns the best coordinate from the complete .
convert a { @link projection }
converts a { @link projection }
converts a float array to a lat array .
convert a double array to a proj .
returns true if the cross seam is cross seam .
converts a projection to a proj rect }
convert a projection to a proj .
shows the debug page .
handles a capabilities .
sets the direct number of the given v0 .
show the time series .
creates a map from the given list .
returns the array of the values .
returns the value of the string .
returns the numeric value at the given index .
encodes a formatter
sets the string value .
sets the values of the list .
sets the values of the element .
scans the dataset .
generates a { @link catalog .
returns the id of the dataset .
returns the url of the given dataset .
gets the xlink href .
writes the contents of bytes to the given output stream .
schedules the given message .
print a line .
make a component .
set the thredds datatype .
opens the thredds datatype .
shows the thredds datatype .
sets the dataset .
prepare the gui .
creates the tools frame .
creates a skeleton catalog .
expands the level of the dataset .
returns a string representation of the given axes .
returns the rank of the axis .
finds the axis of the given axis } .
returns the projectionct of the given coordinate .
returns the projection projection .
returns true if the projection is a projection .
returns true if the axis is a regular expression .
checks if the given collection is a subset .
checks if the given list of axes in the given axes .
returns true if the given axis contains the axis .
checks if the given list of dimensions contains the list of dimensions .
checks if the given list of axis types are axis .
check if the given type contains the given type .
clones the given { @code dapnode } with the given map .
returns a new {
send a data request to the data request
finds the tao for the given key .
extract the standard fields from a message .
returns the tool tip tip .
add a list of list of list .
remove a list of selection selection listener .
returns the selected bean .
returns a list of the selected beans .
returns a list of the selected cells .
removes all selected cells from the view
sets the selected bean .
sets the selected beans .
saves the state of the table .
fire the bean data changed to the bean changed .
restores the state of the table .
convert a data type to a class .
parse the given a data type as a string .
creates a new instance of the given name .
{
returns true if the given variable is extra .
check if the given variable is a coordinate of the same axis .
finds the coordinate axis for a coordinate .
adds a list of the given list .
adds a cursor to the given cursor .
get the station data iterator .
create a new { @link station } .
creates a new {
creates a new {
note : this method is called by the note that this method is called .
finds a variable in a variable variable .
finds a field in the variable .
finds the first note that matches the node .
/ * ( non - javadoc )
returns a string representation of a byte array .
creates a new {
creates a new instance of { @link simple } with the given { @link string name .
create a new unit .
check if the given unit is compatible with the given unit .
checks if the given unit is compatible with the given unit .
checks if the given date is a date unit .
checks if the given unit is a date unit .
checks if the given unit is a time unit .
returns the conversion factor of the given input unit .
converts the given { @link double to a double value } .
checks if the given unit is compatible with the given unit .
returns true if this is unknown is unknown unit )
returns the value of the value
creates a new { @link rel } with the given operator .
creates a new { @link clause } for the given { @link function } .
returns a sub - clause for a given function .
writes a record .
rewrite the given file to a file .
creates a new { @link awt image with the given ma .
translates a path to a reletive location
{
display a catalog in a catalog .
/ * ( non - javadoc )
crawl the direct datasets .
returns the file or cache if it exists .
returns the existing file or cache if it exists .
initializes the pos position .
this method initializes password
/ * ( non - javadoc )
sets if the debug leaks should be open .
returns a list of all files .
closes the cache .
seek to the file in the file .
returns the number of bytes in the file .
flush the file
reads a file at the current position in the stream .
{
reads bytes from a byte array of the given { @link bytebuffer } into the given byte array .
reads a byte array from the file .
reads bytes from a byte array .
writes a file in the file .
{
reads a short from the stream .
reads an int from the signed signed int .
reads an int from the stream .
reads a long from the stream .
reads a float from the stream .
reads a double from the stream .
/ *
reads a string from the stream .
writes a boolean array to the boolean .
/ *
writes a character
writes an int value )
/ * ( non - bit long ) to the stream .
/ * ( non - negative integer value .
writes a portion of a double ) .
writes a string to the output stream .
/ * bytes to the output stream .
writes a string to the output stream .
/ * ( non - null encoding .
search for a file in the file .
appends a query to the template .
{
creates a new { @link mcollection } from the given { @link feature } .
find the index of the index .
checks if the given index is a leaf partition .
construct a list of children from the given index .
scans all children in the directory .
reads the files from the given index .
opens a new { @link grid .
opens a new {
returns a list of all the gridsets .
get the info of the info from the axis .
{
shuts down the timer .
acquires a file from the file .
{
returns the cache only if it exists .
removes all the files from the cache .
{
{
returns the info of the file .
{
show the stats for the given formatter .
cleans up all files from the cache .
returns the number of an integer
{
{
look up the cache only if it exists .
updates the cache in the cache .
adds the given {
{
returns the info of the cache .
removes all files from the cache .
{
shows the tracking tracking .
parses the given input string .
returns true if the given formatter is coord .
create a new grid sys from a formatter .
make a vertical transform .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
returns a list of levels ) levels ) levels ) levels .
returns the number of the item in the table .
returns the item at the specified pixel
creates a collection of collection name from the given path .
make a collection of a collection of the given path .
reads all files in the given directory .
get the remote files ) of the remote .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the next filtered data point .
/ * ( non - javadoc )
converts a string representation of - unit - string }
returns a new instance of { @code calendar } representing the specified field in the specified field . <p > this factory returns a { @code field .
/ * [ deutsch ] <p > erzeugt einen calendar .
subtracts the given date from the given date .
returns the convert factor of the given period .
returns the value of the millisecs )
/ * [ deutsch time between two dates .
check if the given file is a valid file .
opens the given {
opens the grid .
sync the contents of the grid .
initialize the gempak
adds the given date to the tree .
finds the longest path that matches the given path .
finds the data root with the given path .
get the root data root .
extracts the data roots from the catalog .
/ * ( non - time range of the range ) .
returns a list of the given list of the list .
opens the given file .
creates a new { @link netcdf } .
adds a new dimension .
adds a new dimension .
adds a new dimension .
renames a dimension .
adds a new group .
adds an attribute attribute .
adds a typedef to the list .
delete an attribute from the group .
renames a group attribute .
adds a new variable .
adds a new variable to the variable .
adds a variable to the variable .
add a copy of a copy of a structure .
adds a variable variable to the variable .
adds a variable variable to the variable .
renames a variable .
adds a variable attribute attribute .
creates the file .
set the redefine mode .
rewrite the file .
adds a record structure to this method .
/ * ( non - null variable .
writes the given array } )
writes a single array } to the output stream .
/ * ( non - javadoc )
writes a string representation of a variable .
closes the underlying stream .
/ *
writes the properties of this object .
extracts the metadata from the dataset .
extracts the geospatial geospatial from a dataset .
extracts the calendar range from a dataset .
match a list of mbean of the given old mbean .
make a map of map beans for the given mbean .
initialize the measurement timeseries .
/ * ( non - javadoc )
{
{
convert the given amount of amount to a derived unit .
/ * ( non - javadoc )
returns the given input unit into a double array .
convert a nested variable to a nested array
converts the top - variable to a top - array .
converts the given { @link dods } into a { @link array } .
iterates over all the members of the members in the given structure .
this method .
/ *
converts a string to a string .
closes all databases .
open the database .
{
/ * ( non - javadoc )
converts a value to a period
reads a table from the classpath .
finds the element in the element in - place .
checks if the coord element in the given element .
reads a string from an input stream from the given input stream .
adds the given value to the list .
ensures that the given array to the capacity of the capacity .
returns the array at the specified index .
augment a dataset .
{
convert a point to a lat lon
sets the scan location .
translates a path to a location .
create a dataset from a dataset .
create a catalog for a given directory .
create a new {
returns the coordinate type .
returns a new {
shows a formatter .
calculates the time for the given index .
applies the scale factor to the given value .
writes the html description .
resolves the given href .
parse a local concept .
adds a local concept .
remove a line from a line .
stores a concept parameter .
/ * writes to the table .
writes the lookup table to the table .
shows the local concepts .
main method .
respond
returns a list of wanted variables for the given subset of a dataset .
returns a date range ] based on the given subset of the given subset .
{
reads the index of a file .
parses the given input stream .
prints the program .
shows the file .
returns the type of the given dataset .
initializes the identifier with the given identifier .
factory method to create a new { @link dataset } .
expands a dataset .
expands the catalog .
name
name
name
loads the image from the image from the image .
loads the picture imd .
stops the given url .
called when a status of the status .
loads the source notification notification from the source file .
create a scaled picture in the given thread .
returns the scaled size of the scaled .
returns the scaled size of the scaled .
writes the jpg image to a file .
sets the status of the image .
creates a new instance of gempak .
/ * ------------------------------------------------------------
returns a list of merged parts .
prints the ob of a row .
make a header header .
returns a list of sn group and sn .
checks if the given part is a valid valid group .
*************************************************************************
sets the root directory .
make the root directory .
get a file from the cache .
returns the cache file .
make a cache path for a file .
cleans a cache from the given cutoff .
clean up all files in the cache .
create a new file in the given filename .
returns the icon icon .
returns the image with the specified name .
create a new button .
creates a new { @link button } .
builds a menu item item from the action .
adds an action to the menu .
builds a buttcon from the action .
adds an action to the container .
sets the action properties .
sets the action properties for the action .
returns a list of stations in a subset of a subset of the station .
finds the closest station station in the station station .
checks if the given short is a bufr table
returns a new {
copies the current { @link coordinate .
returns true if the data type is numeric .
get the info info .
/ * ( non - mine
sorts the given row .
sets the list of row .
removes a row from the list .
returns the selected table .
{
increments the selected row .
returns the index of the model .
ensures that the row is visible .
returns the range of a range of the given string .
/ * ( non - javadoc )
sets the selected index .
pushes a parse token .
pushes the parse parse .
generates the names of names .
returns a list of names of the given vector .
sorts the given array of string .
swap two elements of two arrays .
convert a string to a string .
gets the existing existing file .
convert a projection to a proj )
convert a projection to a lat lon )
rotates a rotation around the given rotation .
creates a new { @link xmlstore } from a file .
create a new { @link xmlstore } from an inputstream .
create a new xmlstore from a resource .
creates a standard filename for the given store .
save the file to the file .
writes the content of this output stream to the specified output stream .
writes the atomic variable to the template .
writes the given a structure ) of this method ) .
writes the structure1 to the given writer .
writes the sequence of instances to the given {
writes the sequence1 to the serial ) .
writes the record .
print a line of a line .
sets the subset of the axis .
checks if the given file is valid .
returns the id of the wmo .
prints a string representation of this format } .
prints a string representation of a writer .
prints an array of bytes in a writer .
appends a dim to the list .
removes all the squeeze from the squeeze .
{
{
compares two tables .
{
serializes a dataset to a dataset } .
sets the projection at the specified dimension .
reads a row from the input stream .
returns the data of the specified type .
reads the grib codes from the version .
reads a variable from a group .
get the data from the given bitmap .
get the data0 of the gdrs
/ * data2 of the data2 .
returns the n - groups0 of a bitmap .
gets the data3 of the data3
get the data40
reads the data40raw from the given raf .
returns the data41 of the given raf
get the data50002 of a file .
checks if the scanning mode .
{
reads the atomic atomic .
create a new file .
create a new { @link ucar file size estimate from { @link ucar } .
create a file in the given location .
computes the transformation vars .
sets the list of the station .
sets the selected station .
pick a new { @link ucar } .
pick the closest station closest to be used for the station .
get the selected station .
merges the given element with the given name .
writes the configuration
converts the given { @link config } to a { @link config } .
sets the params of the params .
returns the name of a proj .
sends a message .
*************************************************************************
moves the specified by the component at the specified deltay .
displays the message .
saves the current state of this divider .
get a list of the bounding box
get a station by name .
{
/ * ( non - javadoc )
reads the data from the file .
counts the number of elements in this list .
returns the variable at the given index .
prints a string representation of a writer .
deserializes the content of the given {
copies all the elements in the stream to } .
/ * ( non - supported ) .
writes the data to the output stream .
returns the lat type of the given parameter .
gets the lat type of a string .
compares two tables .
returns the cos function
computes the dot product of a dot .
returns the norm of the norm .
normalizes the norm .
create a new { @link catalog } instance .
sets the services of the dataset .
reads the xml file .
reads a catalog .
read an access builder .
reads a service .
reads a catalog ref from a dataset .
reads a dataset from a dataset .
reads the thredds metadata of a map .
reads the documentation from the catalog .
reads the other metadata of the other metadata .
reads the source source from the given element .
reads the time range of the given element .
reads the variables of the given element .
parses a {
parses a duration .
/ * bytes to the channel .
returns the parameter with the given id .
returns the local parameter .
reads a parameter table .
reads a map of a map .
reads the parameter table from the given path .
reads a map from a map of parameter .
add a new name } .
adds a symbol .
gets the prefix of the given string .
returns true if the metadata is a email metadata .
accepts the given url .
parses the next char from the stream .
reads a char from the reader .
parses the literal literal .
parses a real string .
parses a string .
parses a java term .
parses the projcs .
eat
parses the geogcs .
eat
returns the value of a double .
returns a projection projection to a projection .
returns the crc number of the crc .
check if this is a thin is a thin .
returns the number of the given line .
returns true if the vertical has a vertical coordinate .
/ * ( non - javadoc )
returns the scheme scheme for the given field .
returns true if the lat should be lon2d .
returns the name of the time name .
returns the time coord .
append an error message .
returns the string representation of the given key .
sets the offsets of the structure .
sets the next polygon .
sets the polygon of this polygon .
sets the polygon with the given index .
finds a property by name .
returns true if this service is relative to the service .
sets the current projection .
/ * [ deutsch ] <p > erzeugt ein into a { @code subset } . < / p >
loads a class from the given class name .
add a new class .
register a class to the given class .
checks if the given class is registered .
check if the given class is de - de .
sets the debug flags .
opens a netcdf file .
opens a netcdf file .
check if the given location is open .
opens a netcdf file .
convert a uri string to a uri .
open a new netcdf from the given name .
opens a netcdf file .
opens a file in a file .
opens a file in the given uri .
closes the cache .
find a group with the specified name .
finds a variable in the file .
finds the dimension of the given name .
finds the global attribute with the specified name .
finds the global attribute ignore the specified name .
finds the attribute in the attribute .
finds the att value of a variable name .
write a url to the given url as a string ) .
writes the contents of the output stream to the output stream .
print a writer to the output stream .
writecdl
writes the ncml to the uri .
writes the given uri to the given uri .
/ * ( non - javadoc )
adds a new attribute .
adds an attribute to the list .
adds a new group .
adds a new dimension .
removes a dimension from the list .
adds a variable to the list .
adds a variable to the variable .
adds a new variable to the variable .
removes a variable from the list .
send a iosp to the iosp
make a record structure .
sets the list of variables .
returns an empty list of variables .
finish the group .
reads the data from the specified section .
reads a section from a variable .
reads a spi channel from the given { @link section } . channel . channel
<p > a list of arrays .
{
*************************************************************************
make a valid cdm object name .
generates a full name for a full node .
create a full name with the given name .
check if the given mfile is include .
returns true if the given {
checks if the given mfile is a filter .
/ *
adds a new { @link cdm .
removes the given object from the list .
returns the value of the type {
gets the type of a string .
{
{
{
dispatches a check value .
/ *
checks if the given string is a byte array .
checks if the given string is a valid .
checks if the given string is an int .
check if a string is a long .
checks if the given string is a float .
checks if the given string is a double .
returns a new dapnode of the attribute ) .
returns the data type of the attribute .
returns the rank of the given data type .
returns the largest data type type .
returns the next larger data type .
/ * ( non - javadoc )
checks if the given string is a valid single line .
checks if the given path is a valid path .
checks if the given path is a valid file .
checks if the given id is a valid id .
checks if the given string contains the given angle .
checks if the given string contains the given string .
checks if the given string contains the given string .
checks if the given string is a valid boolean .
checks if the given string is a valid alphanumeric string .
checks if the given string is a valid set of strings .
checks if the given path is a file path .
checks if the given string is valid .
convert a unicode unicode code to a hex string .
adds a param param .
adds a param param .
adds a float value .
returns the value associated with the given key .
compares two keys .
processes the input stream from the stream .
process the input stream .
encodes a proto data row into a { @link nc .
encode a structure array of a structure .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
removes all quotes from the given string .
mark all stacked variables .
/ * expression expression .
writes a dataset to the editor .
transform the specified text .
check if the formatter is ncml .
returns the value associated with the given key .
creates a new { @link partition } with the given name of the given name } .
/ * ( non - javadoc )
returns the enum string .
returns a string representation of this matrix .
{
{
/ * ( non - javadoc )
validates the given string .
convert a projection to a proj
/ * to a proj
convert a float array to a lat lon
/ * ( non - null ) of the message .
/ * ( non - elevation .
returns a list of times in the ray .
get the latitudes
returns the longitude
returns the altitudes of the altitudes .
gets the azimuths of the azimuths .
gets the elevations of the elevation .
selects a list of structure names .
selects a variable with the variable names .
adds a new member variable .
sets the member variables .
removes a member variable from the list .
replaces the member variable with the given variable .
{
finds a variable with the given name .
creates a new {
calculates the element size .
read a structure .
reads a structure from the specified index .
/ * ( non - javadoc .
{
returns the name of the name of the name .
initialize the tables .
returns the data category of the given table .
returns the class name .
add a parameter .
returns the header header .
converts a double array to a lat array .
converts a float array into a lat array .
converts a float array to a proj array .
converts a float array to a proj .
computes the projection of the given projection ) .
creates a projection that applies the given latlon to the given projection .
returns a projection to be a projection ) for the projtolatlonbbold
returns a lat to a lat rect
convert a double value to a rad .
convert a double value to a deg .
calculates the great distance between two points .
computes the nice number of a number of bytes .
returns the level type for the given code .
returns the version of a version of the name .
returns the zis of the given zaxis .
make a atm
returns the axis type of the given dataset .
deletes the next file .
set the coverage coverage .
convert a projection to a string
returns the array of the subset of the subset of the subset
sets the color scale params .
renders the plan view .
draws the grid
check if the given h5group is a child of the given parent .
returns the message type .
reads the next byte [] } .
shows the message .
installs all columns in all columns in the given alignment .
installs the given alignment in the given table .
returns the key with the trailing delimiter .
gets the parent of this s3 .
returns a child of the given path .
gets the temp file .
sets the api key to use for the api .
returns a stream of {
create a new { @link label with the given the given value .
creates a new {
creates a new html label with the given the given value .
creates a label that contains the given string .
returns a label of the given value .
creates a new instance of {
connects to a new socket .
checks if the gae is running .
creates a new ssl socket .
returns a list of ip address types to a list of ip addresses .
returns the instance of the ssl instance .
connects the connection to the server .
removes a logger from the given logger .
compiles all the compilation units into a map .
compiles a class .
adds a source code to the memory .
reads the graphic control control .
reads the next block from the block .
returns the next frame in the next frame .
sets the pixels of the current frame .
reads a block of bytes from the block .
initializes the dialog .
returns a list of persons persons .
initialize the mvvmfx .
inject a resource bundle .
sets the fixed clock .
gets the highest message .
merges the resource bundle with the given resource bundle .
merges the list of bundles with the given bundles .
returns an instance of the given type .
initializes the list of list of list .
adds the list of the event to the list .
removes all the staging event .
processes the update event .
process the replace event .
returns the person by id .
adds a new { @link list } to the given { @link list } .
/ * ( non - javadoc )
process the queue .
{
{
adds a message to the validator .
removes a message from the validator .
removes a message from the map .
sets the person id .
creates a new { @link view } .
call the {
{
binding for {
gets the view model for the given view .
resolves the given { @link view model .
inject the given a view .
creates a new { @link view .
resolves the given { @link view } .
initializes the view model .
get all methods of methods of the given class .
adds the scene lifecycle hooks .
checks if the given { @link view is in the view .
{
loads the countries from the worker file .
loads the subdivisions file .
{
publishes the notification ---
/ * ( non - javadoc )
resets the state of this object .
sets the current wrapped in the current model .
commits the model .
reloads the model } .
copies all values from the given model to the given model .
adds a property field .
returns an immutable field to the list of { @link field >
adds a property field .
adds a property field .
returns an immutable field to the list . <p > changed / var > . <p >
adds a property field . <p >
adds a property field .
adds a property to the given getter .
adds a new property to the given getter .
adds a new property to this property .
adds a property field .
adds a field to the getter .
add a list of this property .
returns an { @link observable } of the given source set .
add
adds a rule to the rule .
adds a rule to the rule .
creates a list of selected marker with the nothing .
factory method to create a new } for a .
creates a {
registers the given observable .
registers a list of the given observable .
registers the given observable .
clears all observable from the given map .
{
{
{
creates the index events .
gets all fields with the given annotation .
gets the list of the given a class hierarchy .
creates a member .
sets a field in the specified field .
sets the access the access member .
loads the fxml view } .
creates the fxml path .
loads a fxml view of { @link view } .
loads the fxml view .
query for the style for the row
{
{
{
returns the pixel value of an image .
returns the pixel values from an array of image .
validate that the image type is valid .
draws a tile with the specified values .
draws the tile data .
draw the tile data at the specified unsigned image .
draw a tile with the specified values .
creates a coverage image with the specified width and height .
sets the pixel value .
sets the pixel value of the specified image in the specified image .
create a tile table table with metadata with metadata
set the tile data .
{
{
{
{
{
{
query a sql query .
wrap a query .
{
{
query the previous query .
query the query
handles a cursor .
{
counts the index of the table in the table .
get the feature row for the given index .
{
{
register a table in the table .
{
{
{
query the tile row for a tile .
get coverage data data matrix
get the coverage data
get the coverage data data
create tile table table with metadata
{
{
get the results of the tile matrix
get the results of the results in the request
get the results of the results in the bounding box
get the results of the results in the tile matrix
get the tile matrix from the request
get the value of a tile at the specified x and y y y
sets the icon of the icon .
get the icon of the geometry .
{
/ * ( non - javadoc )
gets the sqlite database .
converts a byte array into a bitmap .
compress a bitmap to a byte array .
create the table
delete a geometry
update the last indexed indexed table .
update the last indexed table
update the last indexed clause
get table metadata
get the table metadata
get the table metadata for the table
get the id
creates the table metadata .
creates a new {
get the feature row for the feature .
return a cursor of sql query
/ * ( non - javadoc )
{
{
query the user s bounding box
query the user s cursor
count the count of the envelope in the envelope
query for a cursor with the query .
builds the where where where the where where is the where the where the where the where the where the where the where ( ( ( is the where ( ( .
builds the where where the where where the where the where the where .
query the results of the bounding box
count the bounding box in the bounding box within the bounding box within the projection .
query the results of the envelope
query the results of a feature .
counts the number of times within the given x and max units .
{
get the data bounds .
{
{
sets the config .
get the tile count of the tile
adjusts the bounds of the bounding box
adjust the google bounds .
sets the tile in the bounding box .
adjust the tile grid bounds
get the bounding box in the zoom level
returns the tile grid for the specified zoom level .
query the tile row in the tile .
query the tile for the given the tile
returns the zoom level of the zoom level in the zoom level .
returns the zoom level of the specified zoom level .
get the closest zoom zoom level for the given length of the zoom zoom level .
get the approximate zoom zoom level for the zoom level .
query the tile grid for the given zoom level
delete the tile at the specified zoom level
counts the number of rows in the specified zoom level
checks if the tile is google .
{
returns the pixel value of the given image .
returns the pixel values of the image .
checks if the image type is valid .
{
{
draw a tile with the specified width and height
draws the tile data from the image
draw a tile with the specified values .
{
creates a new { @link coverage image with the given tile width and height .
sets the pixel value of the specified image .
create a coverage table with metadata with metadata
{
get the package if it exists .
{
{
returns the current row of the current row .
{
enables the invalid requery .
moves the next cursor to the next cursor .
{
returns a json representation of the json object .
query by base id
delete the geometry by id
get a rectangle from the bounding box .
get the rounded rectangle from a bounding box
checks if the given {
checks if the given {
checks if the given {
checks if the given {
{
{
{
deletes the list of the given database .
{
{
{
/ * ( non - javadoc )
{
{
{
{
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
{
{
{
create and close the table
/ * ( non - javadoc )
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
{
/ * ( non - javadoc )
{
checks if the database is valid .
{
{
{
{
{
validates the database and close the database .
validates the database and close the database .
validates the database .
checks if the database is valid .
check if the database is valid .
adds all the databases .
add all external packages .
imports the contents of the database .
get the list of external external packages
get the metadata of the database metadata
get the metadata at external path path
checks if the given database is temporary .
create the geometry .
create a geometry metadata
create a geometry metadata
populate the geometry } with the specified table name .
delete a geometry
delete the geometry metadata
delete the geopackage
creates a geometry to create a new geometry .
update the geometry
get the metadata of the geometry
get a geometry metadata
get the metadata for a geometry
query a cursor
get the bounding box
get the bounding box
query a cursor
query for the table
get the bounding box in the table
query for the bounding box
query the table query
get the count of the geometry
query the geometry
count the count of the geometry
create a geometry metadata .
{
update the database .
{
{
{
draws a tile at the specified width .
returns a list of rows for a list
{
{
{
{
{
{
{
{
{
/ * ( non - javadoc )
checks if the given cursor is valid } .
{
get the user mapping dao
get the simple attributes for a table
returns a list of mappings for the given base id .
returns the list of the given relation id .
checks if the table has a mapping
{
{
counts the count of the number in the given cursor .
register a cursor wrapper
read a table
get the tile request
draw a tile in the specified width
calculates the tile tile from the requested tile .
get the tile matrices from the bounding box
retrieves the tile results from the bounding box
calculates the draw overlap for the overlap .
sets the density of the cache .
sets the line paint .
sets the paint of the polygon .
draw a tile at the specified zoom level
draw a tile at the specified zoom level
draw a tile query with the specified zoom level
query the count of indexed features within the number of the tile in the tile
query the count of indexed features in the bounding box
query the indexed features within the bounding box at the zoom level
query the feature index results
expands the bounding box of the bounding box .
expand the bounding box within the bounding box
draw a tile query all the specified zoom level .
takes a list of points and returns a list of simplified points to be used to the projection .
gets the feature style for the given feature row .
get the feature style for the given geometry .
get the paint for the given feature .
get the paint for the given feature .
replies the paint for the given feature .
replies the paint for the given feature .
document me!
document me! paint .
checks if the given bitmap is drawn .
document me!
document me!
set the paint of the style .
sets the paint of the given style .
adds a bitmap to the bitmap .
creates a bitmap for the icon .
{
{
{
{
wraps a { @link content } into a content .
creates a new { @link layered .
recycle the bitmap .
returns the bitmap at the specified layer .
gets the canvas canvas .
creates a bitmap and canvas with the canvas .
get the mapping for the feature table
get the style dao
get the icon dao
gets the feature feature styles for the given feature table
get the styles styles for the given feature .
get the table style .
gets the icons icons for the given feature table .
get the icon icon .
get the feature styles for a feature row .
get the feature styles for a feature .
get the feature style for a feature row .
gets the default feature style for the given feature row .
get the styles for the given feature row .
get the style of a feature row .
get the default style for the given feature row .
get the style for a feature .
returns the default style for the given feature id .
gets the style of the given feature .
gets the default style for the given feature table .
get the icons for the given feature row .
get the icon of the given feature .
get the default { @link icon } .
get the icon for a feature .
get the default icon for a feature .
get the icon icon for the given feature .
get the default icon for a feature .
gets the styles for the given feature id .
gets the icons for the given feature id .
sets the feature feature styles .
sets the table styles .
set the table style .
set the table style .
sets the table icons .
set the table icon .
set the table icon .
set the feature styles for the feature } .
set the feature styles of a feature table
set the feature style .
set the feature style .
set the default feature style for the given feature .
set the feature style .
set the default feature style for the feature table .
{
sets the styles of the specified feature .
{
{
set the default style for the given feature .
set the style of the feature table
set the default style for the given feature table .
{
sets the icons of the given feature .
{
{
set the icon }
set the icon of the feature .
set the icon }
returns the style id of the style .
gets the icon id .
------------------------------------------------------------------------
delete the table style .
delete the table icon .
delete table mappings from the feature table
delete the table mapping from the geometry table
delete a style .
delete a style from the feature table
delete the icon of the feature row .
delete a feature icon
delete a mapping from the feature .
get all table style ids for a feature table table .
gets all table ids of a list of the feature table
get all style ids of the given feature table .
get all icon ids for the given feature .
returns the image bytes .
flushes the image .
get the pixel at the specified x
reads the pixels from the image .
{
{
{
draw a feature
draw a shape of a feature .
draw a line path .
draw a polygon path .
adds a line string to the bounding box .
adds a polygon .
draw a point in the bounding box
returns the cache for the specified table .
remove a feature row from the feature .
clears all the cache .
gets the cached styles of the table .
gets the cached table icons .
get the feature style for a feature row .
gets the feature style for the given feature type .
get the style of the given feature .
get the style of the given feature .
get the icon of the given geometry .
returns the icon row for the icon .
set the table style .
set the table icon .
set the feature style .
set the feature style .
set the style style .
set the style of the feature .
{
set the icon icon } .
{
{
get the table dao
{
sets the width of the gauge
sets the height of the column
returns the derived dimensions .
returns the length of the specified tile .
returns the tile density of the tile and height of the specified by the specified in the tile .
{
{
reads the blob value from the user .
{
{
{
{
read a table from a table
sets the color of the color
gets the color that will be used to be used for the color .
sets the fill color .
validates that the color .
creates a color .
get the geopackage manager .
prioritize
adds the query location to the list of query types .
sets the index of the index order .
sets the index of the index order .
set the progress progress
{
delete the index of the feature index
{
{
deletes the index of the feature .
delete the index of the feature .
deletes the index of the list .
delete the feature index
returns true if the given feature type is retain .
removes the index of the feature from the index .
returns true if the feature is indexed .
gets the list of indexed types .
get the last indexed indexed date .
query the feature index results
returns the count of number of geometries .
get the bounding box of this feature .
query the feature index results
gets the index of the indexed index .
{
{
gets the internal file . < / directory .
gets the internal file path .
returns the geometry type of the geometry .
set the geometry type .
check if the url has a bounding box .
replace the given a url of the given url .
check if the url is a url
replaces the bounding box in the url with the specified url .
replaces the bounding box with the given url .
{
{
{
get the geometry data
/ * ( non - javadoc )
index the geometry index
returns the index of the feature
return the index of a feature cursor
index the geometry index
update the last indexed table
delete the index .
delete the index of the geometry
returns true if the feature is indexed .
get the last indexed indexed date .
{
query the bounding box in the bounding box
count the count of metadata in the bounding box
query for the envelope
count the count of the number of the total number of the geometry
query the bounding box in the bounding box
get the count of the bounding box within the bounding box
gets the feature bounding box from the bounding box
returns the metadata of the geometry .
gets the feature row of the feature .
get the feature row for the given metadata .
get tile daos for the feature table
get the list of the tile table
get the bounding box for the feature
{
{
{
queries queries by ids
query the base ids
query the related ids
deletes the given base id from the base id .
deletes the given related id from the related id .
deletes the specified where id from the specified related id .
builds the where ids for the where the where the where the ids .
create the metadata
delete the metadata
renames the metadata of the metadata .
rename the table
get all the metadata
get all external metadata
get the metadata for the database
get the metadata for the given id
get the metadata for the geopackage
checks if the database is external .
get the metadata at the specified path
gets the metadata of metadata is like {
returns the list of the metadata is not like { @link sort () } .
get the list of the metadata where the column is like {
create the metadata for the metadata .
{
/ * ( non - javadoc )
{
{
{
attaches the listener to the page .
adds a parallax to the view .
{
creates a custom view .
{
converts the given { @link iloggingevent } .
creates a new { @link writer } instance .
/ * event to the buffer } to the buffer .
find the config file from the system properties .
gets the url from the classpath .
/ * ( non - javadoc )
add a resource search for a resource .
accept a new client .
/ * address to a string .
creates a new { @link executor } .
starts the given converter .
/ * ( non - javadoc )
sets the rolling policy .
adds a substitution property .
returns the property associated with the given key .
/ * ( non - javadoc )
escapes all tags in the given string .
escapes all tags in a string .
appends a string to a string .
retain
retain
removes the given collection from the collection of patterns .
removes all patterns from the given collection .
writes a byte array to the given byte array .
reads an int from a byte array .
compiles the given node . converter } .
{
returns the next node in the list .
returns a node .
returns the layout of the given event .
/ * ( non - ascii characters .
converts a date to a regex object .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
initialize the option .
load a new context selector .
set up the properties of the context .
returns the path of the external storage directory .
returns the path of the path .
returns the database directory path .
sets the file name .
starts the file .
opens the given file .
gets the absolute file path .
{
returns the discriminating value of the discriminating
updates the mask of the mask is necessary .
gets the filter decision decision .
starts the client .
creates a new { @link secure } .
/ * ( non - javadoc )
{
creates the key managers .
creates a new trust managers managers .
creates a { @link key } instance for the system properties .
returns the location of a system property .
returns the url for a resource .
/ * ( non - javadoc )
{
returns true if the given head ) chain ) .
stops the context .
prints the status of the specified threshold .
prints the status of the status of the context .
prints the given threshold .
appends a throwable to a string .
starts the server .
{
{
connection
/ * ( non - javadoc )
handles the first line .
returns the entry associated with the given key .
finds a component with the specified key .
creates a new component with the given key .
removes the end of a key .
parses a string representation of a string .
renames a file to a file
are
generates a subst the subst the given input .
gets the system property .
returns the system string .
returns the android system property .
gets the system property .
extracts the default replacement from the key .
cast a string to a boolean
{
returns the caller trace ) of the caller .
sets the mdc
returns a string representation of the given property map .
returns the property value .
{
extract the stack trace from the given throwable .
checks if the current class is in framework in the framework
adds a new status to the list .
adds a listener to the list .
looks up the implicit action of implicit action .
returns the list of applicable action for a list of attributes .
set the class loader .
get the value associated with the given key .
get a boolean property as a boolean .
returns the name of the name .
returns a list of methods that match .
returns a property descriptors of the given class .
check if the remote host should be used .
starts the connector .
connection
sets the target value .
starts the output stream .
closes the output stream .
sets the output stream to the output )
append the event
resets all components of this component .
add a new { @link console .
end a property .
returns the value of the given event .
/ * ( non - null characters .
checks if the given event is discardable .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new {
closes the given { @link closeable } .
closes the given socket .
closes the given server .
configures the server .
returns an array of enabled protocols that have been enabled protocols .
returns the enabled cipher suites .
included
returns a new { @link deque } with the given capacity .
convert a string to a scope .
sets the properties of a interpretation .
adds a new appender .
appends a loop to the end of the end of the appenders .
check if the specified appender is attached to the specified appender .
removes the appender from the list .
removes the specified appender from the list .
handles the parent level change .
adds a new appender .
calls {
detaches the appender from the appender .
creates a new child logger .
filter and log and log event .
calls {
logs a slf4j event .
call this method .
creates the parent parent directories .
returns the relative path relative to the given path .
convert this level to an integer .
convert a level to a level .
converts a string to a level .
creates a { @link level } to an { @link level } instance .
convert a level to an integer
return
creates a new { @link key } object .
create a new { @link key } instance } instance } from } instance .
returns a set of resource occurrence of a resource .
returns the url from the classpath .
returns the class loader of the given object .
returns the class loader for } .
returns the class loader of the given class .
loads a class from the classpath .
{
appends an event to the layout .
returns the tag tag .
sets the logger context .
/ *
/ * ( non - javadoc )
returns the index of a separator .
evaluates the given event .
create a new {
returns the client thread name .
check if the given file are on the given file .
starts the session .
/ * to the event .
checks if the entry is conditions .
send a buffer to the layout ) .
/ * ( non - javadoc )
adds a new mdc to the mdc .
/ * ( non - javadoc )
create a converter converter )
create a composite converter for the given composite node .
determine the compression mode .
configures the url
{
configures the inputstream .
build the interpreter .
configure the input .
configure the event .
returns the property associated with the given key .
sets the name of the context .
returns true if the context has a status listener .
returns the number of the last reset of this message .
adds an event to the list .
returns the element at the specified index .
returns the element in the list .
resizes the size of this buffer .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the { @link configuration .
/ * ( non - javadoc )
returns the effective converter map .
{
{
/ * ( non - javadoc )
/ *
returns true if the current time is too } .
stops the client .
--------------------------------------------------------------------------------------------
returns a copy of the clients .
runs the client .
adds a client to the client .
removes the client from the client .
puts a new operation in the cache .
removes the specified key from the cache .
gets the value associated with the given key .
returns a set of keys .
gets the copy of the context map .
converts the given type to an object .
returns the value of the given method .
get the filter decision for a filter .
{
adds a new rule } .
returns a list of the given path .
returns the list of the given path .
check if the option is isandroidos .
initialize the context .
return
<p > } .
stops the server .
{
prints the status of the status .
returns the syslog string to a facility .
set the facility of this facility .
checks if the given node have the same node .
gets the database file .
{
removes all expired logs .
checks if the given duration is expired .
get the log cleaner .
/ * ( non - javadoc )
inserts the given event to the database .
/ * to the secondary event .
binds the logging event to the given event .
binds the given array of arguments .
/ * object to a string .
computes the reference to use for the event .
merges the property maps .
insert the properties to the event .
binds the caller to the caller .
inserts an exception into the database .
returns the length of the prefix match .
returns the effective level of this level .
/ * ( non - javadoc ) .
sets a property .
sets the value of a property .
check if the given class is unequivocally .
get the property value .
{
returns the next node or null if it is null .
return a new node t .
v
c
/ * ( non - javadoc )
opens the given url .
removes the head and tail from the recorder .
returns the event name for the given event name .
start
stops the runner .
returns true if the exception is transient .
sets the default hosts .
search for the request .
perform a search request .
get a jsonobject from a jsonobject
adds a data selection query .
sets the data selection queries .
sets the delay of the delay .
ensures that the local index is a local index .
saves the mirror settings .
sync the client . < / {
sync the current state of the current sync .
/ *
{
searches for the online query .
search for a copy .
{
asynchronously asynchronously creates a list of queries for the specified queries .
perform a list of queries .
perform a list of queries on the given a list of queries .
helper method to multiple queries
helper method to multiple queries
returns a request to the request .
browse mirror mirror mirror from the cursor .
{
retrieves the online object online .
retrieves the online object asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously retrieves the specified object .
gets the online object online to get request .
get the offline object from the server .
gets the offline offline object has been used to get a request .
{
retrieves a list of the specified list .
retrieves a list of objects that match the given .
gets a list of a list of a list of the objects .
returns a list of the given the list of the given list of objects .
returns a list of the objects that can be used for a list of objects .
{
searches for online request for the given facet query .
search for the search for the given facet .
search for facet values matching the facet values .
search for the query .
search for the query .
asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously .
search for raw raw search for the given query .
{
searches for the disjunctive that matches the given query query .
searches for a facet for the given facet .
searches for a facet for the given facet facet .
/ * ( non - javadoc )
adds an object to the request .
adds an object to the request .
adds an object to the request .
adds a jsonarray to the request } .
asynchronously saves the objects .
updates an object .
asynchronously asynchronously asynchronously asynchronously .
updates the objects in a partial } .
creates a new objects .
retrieves an object from the cache .
get a request .
returns a list of the specified objects .
get the objects of objects .
waits for a task .
deletes an object from the cache .
deletes an object .
deletes the specified objects from the request .
delete the specified objects .
asynchronously asynchronously by query from the query .
get the settings of the specified request .
sets the settings of the specified settings .
sets the settings of the request .
asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously requests .
attempts to browse from the server .
clears the specified index .
add an object to the index
batch
get the object as jsonobject .
get an object from a jsonobject
get a list of a list of objects .
get a list of a specific index
update an object in a partial object
update the objects in a partial array
save an object in the index
save all the objects into a jsonarray
delete the query from the query .
delete a query
search for the query .
search for the raw query .
waits for a task .
get the settings for the specified index
set the settings of the index
clear the index of the specified index .
add multiple queries to multiple queries
builds a string representation of the given parameters .
parses the given query .
sets the value of the specified name .
sets the {
sets the around radius of the given radius .
sets the attributes of the query .
sets the attributes of the query .
gets the facet filters .
sets the plurals to be used to be used query .
sets the bounding box of this query box
sets the { @link polygon .
sets the inside inside the polygon .
returns the jsonarray filters .
sets the query type .
removes the given words } from this method .
removes the given { @link query
parses a { @link query } from the given { @link query } .
search for disjunctive faceting .
returns a map of the given collection .
computes the list of the given query .
aggregate all disjunctive
search for the query .
search for a sync .
creates a new queries .
get the object from the object .
get the objects of a list of the specified objects .
get the settings of the task .
browse the specified query .
attempts to browse from the specified cursor .
search for a search search for the given facet .
search for the facet for the given facet .
builds a new { @link request .
builds a new { @link request } instance of { @link resources } .
search for disjunctive that match the given query .
delete a query from the query .
convert a json object to a jsonobject
writes a jsonobject to a file .
writes a collection of objects to a file .
writes a temp file to a temp file .
/ * ( non - javadoc )
gets the offline index for the given index .
returns true if the offline data has a offline data .
{
lists the indexes that have been offline .
deletes an index offline index .
deletes the index of an index .
moves an index of the specified by name .
move the index of the index to the destination directory .
parses the search results from a jsonobject .
deletes all files from the given item .
writes a file to a file .
sets the specified url .
sets the specified header .
adds a user agent agent .
reads the contents of the given input stream into a char array .
converts the given input stream to a byte array .
perform a request .
perform a request to the url .
consumes the connection .
returns a list of hosts that are up to the list of hosts .
sets the places to use for the given location .
sets the around radius of the given radius .
returns the around radius radius .
sets the type of the places .
parses the given query query } from the given query } .
{
starts the query .
search for the query .
searches for the disjunctive that match the given query query .
searches for the facet for the facet .
returns a list of indexes .
delete an index .
deletes an index .
moves an index to the index .
moves the specified index to the specified index .
runs a multiple queries .
asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously creates a new queries for the specified by the specified list } .
runs a batch of operations .
asynchronously asynchronously to the specified jsonarray .
returns the list of the request .
delete an index .
move an index of an index .
puts a new value in the cache .
returns the value associated with the given key .
main method .
adds a new operation to this { @link performance } .
creates a new { @link thread .
wait until the thread to wait .
compares two version of the first version of the first version .
reports a throwable to the specified cause .
copies all files from the given target file to the given target file .
init
binds a property to the given instance .
returns the value of a property .
get
returns the method by name .
launch a worker .
returns the number of the pid .
generates a random number of the given random delay .
formats a percentage of the given long value .
format a double representation of bytes .
format
prepare the key store .
reads the json syntax from the input stream .
returns a big - bit character as a byte .
writes a json string to the output stream .
writes a json integer to the output stream .
writes a json double to the output stream .
reads a json string from the stream .
reads a json string from a json stream .
reads a json integer from the input stream .
reads a json double from the input stream .
read a json string from the stream .
execute the given method .
invokes a request .
/ * ( non - javadoc )
enqueue the given a method .
gets the ifile for the given location .
updates the decoration .
refreshes the repository view .
returns the history history view .
opens the editor .
reports the authentication failure .
returns the prompt for the authentication .
returns the buffer .
adds a buffer to the pool .
creates the default page .
toggle the default page .
starts the animation .
adds a new property .
returns an enumeration of the properties contained in this element .
returns true if all alive is keep all alive .
sets whether this element is keep all alive .
sets if the child is omit .
adds a lock token .
returns the depth of the element .
returns an enumeration of all the lock .
returns the owner of the owner .
sets the depth of the icontext } .
sets if the element is shared .
set the owner of this owner .
sets the timeout of the element .
/ * ( non - javadoc )
creates a new { @link lock } .
checks if the element is shared .
adds a condition factor .
creates a new {
check if the given term matches the given term .
{
gen - when the property is called when the property .
refreshes the visuals .
get the adapter associated with the given key .
/ * ( non - javadoc )
gets the current java project .
checks if the given completion is not contain the given completion .
get a reader from the given input rule
loads the configuration file from the configuration file
read the config file from the input stream .
extracts the name of the given content .
appends a url to the given url .
get a child url .
get a child url .
returns a vector of the given url .
returns the last element in the url .
returns the parent url of a url .
gets the root url .
removes the trailing slash from the url .
returns true if the url is a valid url .
returns true if the url is a url .
get the menu menu .
returns the content length )
{
get the document body as a document .
returns the html code .
adds a new response .
creates a new { @link multi } instance .
returns an enumeration of responses ) responses .
checks if the given element is guvnor .
adds a new href .
creates a new { @link href } .
returns an enumeration of the hrefs .
inserts a new href into the href .
remove a href .
accumulate a property with the specified status .
accumulate a child elements to the element .
adds a new href .
adds a new element to the tree .
change the status of the old status .
returns the href href .
returns an enumeration of hrefs .
gets an enumeration of all } s stats .
returns the status of the element .
/ * ( non - stat .
sets the description of the response .
sets the status of the status .
adds a string value .
sets a property value .
returns the given username into a string .
fire a property change .
get the stack frame from the given value .
checks if the given class1 is a subtype of the given class1 .
returns a collection of the synthetic completion .
this method .
check if the given collection contains a new proposal .
returns a collection of all the proposals in the given list of setters .
appends a child element .
appends a child element .
clones a node .
creates a new element .
sets the namespace url .
checks if the given node is a valid .
ensures that the given object is not null .
ensures that the given object is null .
ensures that the node is a text } .
extracts the xml element from a document .
extracts a node from a node .
returns the child element of the given element .
returns the child element of the given element .
returns the child element of the given element .
returns the child text of the given element .
returns the first element of the given element .
returns the first child of the given element .
returns the first child of the given element .
returns the first text of the given element .
returns the last child of the name .
returns the namespaces of the given element .
returns the namespaces of the given element .
returns the next sibling of an element .
returns the next sibling element in the list .
returns the next sibling of the given element .
returns the name of the given name .
returns the tag of the given element .
convert an element to a string .
returns the name of the given name .
returns the tag of the given element .
returns the qualified name of an element .
returns the sibling of the given element .
returns the text of the given element .
returns the twin of the given element .
inserts an element into the given element .
checks if the given node is a node .
check if the given node is a node .
create a node from a node .
resolves the given element .
sets a child element .
sets the child of the given element .
resets the contents of this file .
creates the actions for this method .
adds a connection to the source .
gets the value of the specified property .
removes a connection from the cache .
sets the location of the property .
sets the value of the specified property .
sets the size of the property .
dumps the constraints in the given constraint .
sets the zoom manager .
parse a listing of a resource .
compares two objects .
adds a new lock entry .
returns an enumeration of all the lock .
{
adds a child to this vertex .
removes a child from the list .
called when the preference .
{
returns the resource string associated eclipse .
returns the resource bundle .
returns the { @link form } for the given display .
/ * ( non - time pattern .
sets the date time of the given date .
gets the default repository dir .
{
constructs a new error .
logs an error .
adds a field to the preference .
adjusts the grid layout .
applies the font to the font .
calculates the number of columns in the field .
checks if the state is valid .
{
{
returns the parent editor .
initializes the preference .
{
{
/ * ( non - javadoc )
{
checks if the specified } contains the specified name .
fire a property change event .
fires an event change event change .
sets a value in the cache .
sets the value of a property .
runs the given action .
constructor .
sets the active page .
sets the active editor .
contribute the tool to the tool bar
determine if the back dialect
returns a map of rule parameters .
decodes the given url into a url .
decodes a file into a string .
encodes a byte array into a string .
creates a new { @link icontext } .
saves the given monitor to the given file .
creates the table listeners .
creates the table .
gets the url associated with the given url .
get the object from the given url .
get the object from the url .
returns an {
puts a url into the url .
puts a url to the given url .
puts the given url into the table .
adds a token to the node .
adds a child node to this node .
sets the file at the given offset .
determines if the request can be execute .
adds a condition to the list of conditions .
adds a condition token to the state .
checks if the given condition matches the given condition .
asserts that the given object is not null .
checks if the given expression is true .
returns the value of the property property .
get the status of the element .
sets the properties of this property .
sets the status of the status .
get the last line from the back file .
returns the last non - non - dash in the last dash .
returns the list of the adapter .
binds the given id to the given binding .
binds the given id to the given id .
binds the given id to the bundle .
encodes a file into a string .
encodes the given url into a url .
creates a new {
creates a process from the given example .
create a compilation fragment from the given project .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
finds the index in the array in the first occurrence in the array in the array .
{
selection the selection of the specified selection .
adds a rete vertex to the list .
visits a {
returns the given object to a hex string .
adds a new element to the list .
adds a new set of } .
get an enumeration of all sets of the element that are contained in the tree .
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
/ * ( non - locator ) .
returns a presentation reconciler reconciler )
get the content of a popup ) .
checks if the specified object is null .
check if the given term contains the given term .
creates a new condition .
creates a new condition .
adds a property .
adds a property name .
returns an enumeration of the properties of this element .
returns an enumeration of the property names .
creates a new {
adds the pages to the document .
returns the adapter adapter )
delete the http delete request .
http
get the status of a job .
set the double .
runs the wizard .
sets the zoom manager .
creates a new { @link update .
creates a new { @link update .
returns the version of the element .
sets the label name .
sets the version of the href .
{
handles the results .
sets the value at the specified index .
adds an active lock to the list .
returns an enumeration of the active locks .
filter the proposals on the given prefix .
reads the backwards from the document .
generates a list of the given root vertex .
paints the component .
creates a edit part of the edit part .
returns the part of the given element .
gets the image descriptor .
declare
returns the credentials for a request .
adds a new vertex to this vertex .
returns the row of the specified vertex .
gets the width of the row .
dumps all rows .
optimize all rows .
gets the ifile from the processor .
configures the {
/ * ( non - graphical .
loads a rete from the given monitor .
initialize the graphical viewer .
zero the base diagram .
draw a graph .
returns the drools breakpoint for the given source .
{
{
sets the text of the given item .
sets the href href .
check if the response to see if the response .
closes the response .
copies the contents of the given destination to the given destination .
copies a copy of the given destination to the given destination .
sets the status of the multi - status response .
extracts the prop stats from the eclipse file .
gets the content of the response .
returns an enumeration of all locks ) .
/ * ( non - javadoc )
/ * ( non - javadoc )
get a property .
gets the names of a property )
get the version of the xml )
/ * ( non - icontext .
locks a lock lock .
moves the specified destination ) to the specified destination .
check if the version of the response .
check if the resource is out of a resource .
refreshes the lock from the given token .
removes the properties from the collection .
{
{
sets the properties of a collection ) .
{
unlocks the given token .
updates the version .
/ * ( non - javadoc )
deletes the response .
checks if the status of the status of a status .
/ * ( non - iresponse exists .
/ * ( non - working resource is working .
checks if the given property has a child of the given property .
adds a binding to the href .
returns an enumeration of bindings .
sets a new { @link element .
create a new {
gen - last property is removed .
get the content of the content of bytes ) of the request .
writes the content to the outputstream ) .
convert a byte array to a hex string .
convert an array of an array into a hexadecimal string .
/ * ( non - javadoc )
{
get the parent of the given child .
returns the children of the given object .
finds a {
returns true if this element is a child is a child of this element .
sets whether the provided value of this list of the provided value .
sets the value of the provided property is prop of the value .
sets the value of the property .
removes all occurrences of the given prefix .
returns the compilable text of the given text .
checks if the given method is a getter method .
returns the name of the given method .
returns the writable property name .
checks if the given method is accessor .
returns the name of the name of a class .
updates the tree .
returns the length of the content of this stream .
writes the contents of this method .
/ * ( non - javadoc )
mark all errors in the errors .
this method .
{
returns the next quoted quoted string .
returns the next token in the stream .
skips the next character in the list .
finds the guvnor for a resource .
adds a resource to the guvnor .
commits the file changes to the file .
finds the guvnor metadata for the given resource .
this method increments .
returns the value associated with the given key .
returns the age of the age .
gets the length of the content of the content .
returns the maximum number of the forwards .
get the overwrite the overwrite .
/ * ( non - passthrough ) is passthrough .
returns the timeout of the timeout .
returns an {
adds a key / value .
sets the timeout of the timeout .
returns a reader from the given filename .
parses the given file .
remove the heading and code from the condition .
returns the metadata of the given text .
removes the metadata from the given text .
adds the tokens to the list .
adds all tokens to the list of tokens .
returns the children of the condition .
returns the children of the given text .
gets a list of children of the given text .
gets a list of suggestions to be used for the list of children .
adds a child to the list of children .
prints the tree .
prints a node .
prints the tabs of the specified tabs .
reads a json value from a json value .
creates a new { @link json } instance from the given { @code float } that is a { @link json } .
{
list all the webdav in the given a node .
get the parent of the given object .
{
{
gets the image descriptor .
adds a proxy server exception .
get the context of the given url
returns an enumeration of the origin .
get the proxy server url .
invokes the request .
sets the context for the given url .
sets the proxy server url .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of the request header .
get the response field name .
get the value of the response ) .
get the response header value .
sets the proxy server url .
sets a request header .
sets the resource url .
/ * ( non - end )
creates the rule sample for the rule .
create a new rule .
create the rule flow for the given project .
creates the rule flow launcher launcher launcher .
{
get a list of checked elements in this list .
{
creates an image .
this method .
{
returns an {
runs the action .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
{
{
{
{
{
/ * ( non - javadoc )
{
{
{
{
{
{
/ * ( non - javadoc )
returns the html node .
returns the field name .
/ * ( non - mvel .
get the value of the constraint ) .
{
set the selection should be changed .
sets the session authenticator .
creates a new {
list a map of a directory .
query the properties
adds a guvnor resource to the resource .
get the contents of a resource .
returns the contents of the resource .
get a resource input stream .
get a resource version of the resource .
create a resource .
create a resource .
put a resource
get the versions of a resource .
delete a resource .
runs the given action .
create a baseline control ) .
binds a member to a member .
binds the specified member } to the source .
returns the member of the given member .
{
optimize the vertices .
attempts to authorize challenge .
confirm the given request .
confirm the given response .
returns the authentication info for the given challenge .
gets the authorization authorization url .
returns the authorization authority for the given scheme .
computes the md5 md5 string .
returns the md5 md5 string .
convert a string to a string .
creates a new { @link factor } .
{
initializes the controls controls .
called when the ok is pressed .
validates the page .
returns the dialog bounds of the dialog . <p >
creates a new {
generates an entity tag .
creates a new {
returns the base vertex of the given vertex .
generates a new { @link eckeygenerationparameters . asymmetric .
convert a byte array of bytes .
generates a bcecprivatekey object from the given byte array .
returns the private key as a byte array
converts a byte array to a byte array .
creates a bcecprivatekey object from a byte array .
converts a byte array to a ecprivatekeyparameters object .
convert a public key to a byte array .
generates a bcecpublickey object from a byte array .
get the domain parameters from the given curve .
returns a domain parameters from the given name .
encrypts a public key using the public key .
get the raw public public key from the public public key .
encrypts a random byte array using the given parameters .
decrypts a block of bytes using the given parameters .
creates a new { @link insert metrics } based on the given metrics . m2 } .
{
initialize the partition .
import all documents from a collection into a collection .
extracts the partition key value from a { @link partition } .
abort the subject .
commits the login .
removes all principals .
initializes the callback
logs the server .
validates the otps is valid .
checks if the given user is right .
returns a list of tokens for the callback .
sets the options of the options .
checks if the given user is right .
gets the username for the given id .
adds the yubikey to the user .
verify that the given verification .
check if the given user is right .
sets the ldap options .
initializes the callback .
logs the user .
verifies if the given user is otp .
clears the password .
fetch a list of a user .
sets the wsapi urls . < / p >
returns the public id of the given string .
checks if the given string is a valid string .
creates a new {
{
{
calls a static method on the given method .
clears the cache .
checks if the jdk is jdk15 .
gets the target class of the given object .
returns the base name of the given object .
returns the base name of a class .
get the package name of the object .
returns the package name of a class .
returns a string representation of the given number of bytes .
returns the pointer of a object .
returns the unique descriptor for the given object .
converts a list of list into an array .
returns the parameter types for the given method .
finds the parameter types of the given class .
returns the parameter types for the given constructor .
gets the permission for the given method .
returns the type of the given object .
checks if the given object is compatible with the given object .
checks if the given class is more than one of the given class .
returns the appropriate method for the given property .
calls the given method on the given method .
calls the method on the given target object .
get the value of a method .
sets the value of the given property in the given target object .
returns a map of the given target class .
returns the property descriptor for the given property .
returns the property descriptor from a target array .
returns the type of the indexed property .
sets the class cache inspector .
get a read method .
determines if the given ognl is numeric } .
get the child source of a child of the given object .
get the child source of a child expression .
prints the stack trace .
prints the stack trace .
/ *
reads a char from the stream .
expression
assignment
/ * logical a logical expression
/ * logical a logical expression .
/ * expression : expression : expression : expression : expression : expression - > | expression | expression | expression | expression | expression | expression | expression | expression | expression | expression | expression | expression | expression | expression | expression | expression | - | - | expression | - | - | - | expression | - |
/ * or - > exclusive expression - > expression > expression > expression > expression > expression > expression > expression > expression > expression > expression > expression > expression > expression > expression > expression > expression > expression > expression > expression > expression > expression > expression > expression > expression > expression > expression > expression > expression
/ * expression expression : expression : expression : expression : expression expression > expression > expression > expression > expression > expression > expression > expression > expression > expression expression | expression | expression | expression | expression | expression | expression | expression | expression | expression | expression | expression | expression | expression | expression | expression | expression
/ * expression expression )
/ * relational expression expression ) - expression ) ; }
shift the expression .
additive
/ * multiplicative expression .
/ * unary expression
/ * navigation navigation )
/ * projection
selects all of the nodes .
selects the first node .
selects the last node .
compares two conversion .
checks if the given object is equal to the same as { @link object .
parse
returns the value of the given object to a long .
returns the value of an object .
cast a value to an integer .
cast a value to a bigdecimal .
returns the string to a string .
returns the numeric type of an integer .
converts a char value to a character .
cast a char to a array .
converts the given value to the given type .
returns the value of an int as an int .
returns the numeric type of a numeric type .
returns the numeric type of the given object .
creates a new { @code integer .
creates a new number with the given } .
converts a throwable to a runtime exception .
defines a class .
returns the current type of the type .
get the previous type .
returns the evaluation at the specified index .
adds a new evaluation .
removes the current node from the current node .
adds a string to the context .
returns the cast type of a class .
returns the root expression of the given expression .
checks if the given expression should be cast to see if the given expression .
check if the given method contains the given a class .
compiles an expression } .
generates the ognl getter for the given class .
generates the ognl setter for the given class .
returns a new { @link enhanced } .
get the class pool .
removes a node from this node .
dumps the contents of children to a writer .
flatten the tree tree .
/ * ( non - javadoc )
{
adds a child to the list .
initialize the node .
finds a class by name .
/ *
escapes a char in the image .
parses an expression from a string .
compiles an expression .
creates a map to the default context .
creates a new {
creates a new {
creates a new { @link map .
adds a default context to the map .
adds a default context to the map .
adds a default context .
gets the type of the type } .
sets the root context .
get the value of the given tree .
get the value of the specified tree .
returns the value of the given expression .
returns the value of the given expression .
get the value from the given expression .
get the value of a tree .
get the value of the given tree .
gets the value of the given expression .
returns the value of the given expression .
sets the value of the given object .
sets the value of the expression .
sets the value of the given tree .
sets a value of the given expression .
checks if the given tree is constant .
checks if the given expression is constant .
returns the default watch id .
waits for a server to be started .
{
/ * ( non - javadoc )
reads the file as a string .
{
reads the content of a file .
resolve a new file in the given imported file .
collects all class files from the given package names .
returns the archiver for the given archiver .
checks if the archiver is archiver .
get the resolved artifact artifact )
reads a file as a string .
calculates the list of the maven projects .
{
{
creates the project .
adds a system property .
adds a system property .
{
{
/ * ( non - javadoc )
{
increments the given {
gets the sum of the rolling event .
returns the values of the current bucket .
returns the rolling value of the given event type .
returns the current bucket bucket } .
adds a value to the list .
returns the maximum value in the array .
sets the action bar .
factory method to create a new instance } .
opens the new folder .
change the directory .
tries to refresh state . <p >
creates a new { @link file } .
return true if the fragment is selected .
creates the folder .
checks if the given file is valid .
{
check if the given domain is a valid domain .
check if the given string is a valid infrastructure .
check if the given string is a valid generic generic generic generic generic generic generic .
checks if the given cc is valid .
checks if the given string is a valid local local local local tld
convert a line to a string .
{
starts a foreground job .
starts the background job .
handles a start tag .
starts the start list .
handles the end list . <p >
starts the start list .
end the end of the end of the list .
returns the html color .
returns the hit of the specified rectangle )
handles the motion motion .
moves the specified image .
grows the aspect of the given image .
returns the crop of this matrix .
computes the layout of the layout .
registers a new listener .
returns the paragraphs of the selection .
sets if the text should be used to set the text .
sets the rich text .
sets the text of this text .
get the rich text .
adds the span watcher .
applies the given effect to the specified effect .
converts the given { @link rthtml } into a { @link rtplaintext } .
converts the given {
{
{
{
converts the text and converts it into a rthtml .
converts the paragraphs to the paragraphs .
within
escapes a text in a text .
creates a unique file from the original file .
creates a file uri .
determine the original file from the given uri .
returns the namespace of the given attribute .
returns the name of the local name .
sets an attribute .
normalize the given string .
sets an attribute .
{
/ * ( non - javadoc )
gets the font name of a file .
gets the font name from the given asset .
need to need to need to need to need to need to need to need to need to need to need to need to need to need to need to be called .
writes a byte array to the output stream .
{
writes the contents of bytes to the stream .
/ * bytes to the output stream .
serializes the input stream to a buffered input stream .
returns a {
returns a byte array into a byte array .
{
normalizes the end of the end separator .
this method .
convert the given path to a unix path .
returns the index of the specified extension .
get the spans of the given spannable .
recompute the focus of the event .
ensures that the view is visible .
draws the center of the highlight view
resets the document locator .
/ *
validates the given string against the given value .
checks if the given selection is selected .
returns true if the next line has been valid .
returns the next line .
add an element type .
sets the specified attribute .
sets the parent element .
returns the element type of the element type .
returns the entity associated with the given name .
tries to take picture of the image is external .
check if the authority is a valid .
checks if the path is a valid .
cleans up all paragraphs from the editor .
gets the absolute path of the absolute path .
{
applies the given editor to the given editor .
checks if the given email is valid .
checks if the domain is a valid .
returns the index of the char at the given event .
executed
redo the given editor .
flushes all operations of the given editor .
pushes an operation to the stack .
replaces all occurrences of the given string with the given search string .
gets the thread status .
sets the decoding options .
returns true if the thread can be null thread .
decodes a file descriptor .
loads the asset .
gets all fonts of the given asset .
gets the asset fonts .
gets the system fonts .
converts the given input stream to a byte array .
reads the contents of an input stream .
serializes the content of bytes to a byte array .
converts the given reader to a byte array .
convert the given url to a byte array .
converts the given url to a byte array .
serializes the content of the given input stream to } .
reads the contents of the given input stream .
copies the contents of the given reader .
reads all lines from the input stream .
reads all lines from the input stream .
creates an { @link line } that reads from an iterator .
returns an iterator that reads the given the input stream .
writes the given byte array to the given writer .
writes the given byte array to the given writer .
writes the given data to the given output stream .
writes the given { @link outputstream .
writes the contents of the given data .
writes the given data to the given writer .
writes the given { @link string .
writes the content of the given { @link outputstream } to the given output stream .
writes lines to the given collection .
writes all lines of the given collection of lines to the given output stream .
writes the given collection of lines to the given collection .
writes the lines to a collection .
copies the contents of the given input stream } to the given writer .
returns true if the given reader is equals to the given reader .
reads the contents of the given reader from the given { @link reader .
{
setup the schema .
reads a reader from the input stream .
get an input stream .
/ * ( non - javadoc )
/ * entities in the given string .
looks up the entity in the schema .
/ *
pop the stack from the stack .
removes the stack from the stack .
returns the prefix of the given name .
checks if the given namespace is foreign .
/ * ( non - javadoc )
returns the given a string .
splits a string into a string .
receive notification of the element .
/ * make sure that the name of the given character .
called when the instance is called . <p >
called when a toolbar . <p >
registers an editor .
unregister the editor . <p > .
registers a toolbar .
unregister a toolbar .
{
inserts an image into the image .
/ * ( non - javadoc )
called when an event . <p >
this method .
computes the center of the image .
get the proper base matrix
returns the maximum number of the bitmap .
checks if the given editor exists in the selection .
returns a list of values in the editor .
clears the formatting from the selection .
returns a list of spans for the given spannable .
/ * ( non - javadoc )
finds the spans2remove for the given paragraph .
encodes the given url into a string .
decodes the given url .
returns true if the specified character sequence of the specified locale .
pick a directory to see if it exists .
{
gets a bitmap from the given path .
transforms a bitmap into a bitmap .
rotates an image with the specified degree .
{
/ * ( non - javadoc )
sets the output writer .
sets the uri of the uri .
receive notification of the beginning ] ---------------------------------------------------
receive notification of the end of the xml stream .
/ *
receive notification of an end of an end element .
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
check if the prefix .
returns the prefix
writes a character .
writes a string .
/ * attributes to the attributes .
returns true if the attribute is a boolean value .
write a string to a xml string .
writes the xml document .
writes the name of an element .
/ * ( non - javadoc )
removes all atts from the attribute
removes all the elements .
builds a { @link amazon .
ensures that the given stream exists .
creates a stream if it doesn t exists .
waits for the stream to the stream .
gets the type of the given class .
reciprocal
completes the store snapshot with the given path .
gets the unique shard .
waits until the next provisioning to the next provisioning .
returns a list of records .
performs a retry action on the given action .
tries to try to try to try to update .
creates a new {
checks if the bucket is accessible .
retrieve a method from the given accessor for the given accessor .
loads the stores of the given store .
locate a file from the given folder .
creates a new { @link iofilefilter } instance .
validates the given wildcard .
triggers the expander .
replaces all occurrences of the given pattern with the given pattern .
converts a collection of strings to a delimited string .
deletes all occurrences of the given string .
{
/ * ( non - javadoc )
creates a new { @link factory } .
adds a report report } .
initializes the script builder .
validates the linter .
builds the linter script .
{
update the properties of the given properties .
get the config properties .
creates a new { @link properties } .
gets the map of pre - processors .
returns the map of post processors .
{
creates a new { @link smart } instance .
creates a auto - detected input stream .
{
removes the import statements from the list .
provide the pre - pre - processors .
convert the given map to a map .
factory method to create a new executor .
submits a collection of the specified by } . callable .
{
compiles the given string } and compiles .
{
{
check if the given data uri is accepted .
{
{
{
/ * ( non - javadoc )
encodes a group url .
reloads the cache with the given new value .
reloads the new model .
{
creates a new { @link scheduler } .
schedules a { @link scheduler with the specified by the specified period .
shuts down the pool .
gets the input stream .
gets the wrapped servlet request .
sets the pre - pre - pre - pre - pre - pre - pre - pre - pre - pre - processors .
sets the resource post processors .
adds a post processor .
initializes the script builder .
create a new { @link provider } .
collects all configurable providers from the given list of providers .
looks up all providers of the given provider .
/ * ( non - javadoc )
resolves the css folder .
gets the context folders .
creates a transformer transformer for the specified extension .
returns the base name that contains the base name of input string .
/ * action .
get the content of a file .
gets the content of the given file .
locate the input stream .
{
provide a map of naming strategies .
send an error message .
{
transform the given input model .
processes the given resource .
computes the base name of the given resource .
creates a collection of the given resource .
{
locate an input stream .
initializes the script builder .
compiles the given string .
creates a new configuration . wro .
creates a new {
registermbean
registers change listeners .
process the request .
called when the exception is received .
sets the configuration .
destroy the wro
identify duplicate group names from the group .
merges the given {
/ * ( non - javadoc )
locate the given uri .
{
apply post processors processors to the cache .
decorate the given {
{
{
processes the request .
called when the runtime exception .
splits the given option into a string array .
initializes the script builder .
initializes the script builder .
loads the properties from the input stream .
parse properties from the properties .
creates a standalone context .
returns the manager .
creates a new { @link wro } .
creates a new { @link wro .
called when the extra extra config .
persist the resource names .
checks if the group is a target .
extend the plugin classpath .
/ * ( non - javadoc )
get the model resource as a stream .
creates a resource .
removes the uri from the uri .
locate the input stream .
{
creates a new { @link wro } .
creates a new {
initializes the script builder .
sets the transformers of the model
{
{
{
check if the url is replace the replace the given url .
{
process the given criteria and merge the resources .
runs the given resources and returns the given resources .
apply the pre - processors processors to the resource .
decorate the pre - existing pre - existing processor processor .
called when the model is created .
{
<p > inject
process the inject annotation .
gets all fields of the given object .
check if the given object is annotated with the given field .
rewrite the given a css url .
computes the css uri for the given css uri .
computes the new image location for the given image .
adds an attribute .
{
called when the cache is changed .
called when the model is changed .
adds a model transformer .
serve the processed bundle )
initialize the aggregated folder .
extracts the variables from the map .
{
parse a string representation of the given css .
replaces all variables in the given map .
{
{
rename the given input stream .
{
convert a resource to a pre - pre - pre - processor .
checks if the given resource is eligible .
called when the linter is linter .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
creates a new {
check if the given url is a url .
locate the scss file .
/ *
{
{
handles the gzip response .
create a new { @link path } with the given { @link object .
create a new { @link path } for the specified patterns .
{
creates a new resource change .
{
imports the css import import .
removes the given resource .
gets the hash of the input stream .
creates a new {
filters the given collection of free free elements .
returns the group name of the request .
get the resource type .
encodes a group url .
checks if the request is minimized .
process the given script to the given reader .
/ * ( non - javadoc )
{
finds the imported resources in the given resource .
create a imported resource .
computes the absolute url for the given uri .
checks if the request is changed .
creates a proxy path .
creates a string representation of the given string .
returns a list of the alias .
creates a new {
adds the client side environment } . rhino } .
sets the {
evaluates the given input stream and returns the result .
evaluates a chain of the given script .
{
evaluates the given script .
processes the configuration .
encodes the version of the given group into a group .
formats the versioned resource .
destroys the cache .
destroys all processors processors .
returns a map of cache strategies for the given cache .
check if the request is handler is a handler .
creates a handler request path .
rename the given input stream .
computes the destination folder from the given resource type .
processes the aggregated group .
wraps the given exception with the given the {
{
returns the supported resource type for the given processor .
checks if the group is required .
{
{
initializes the script builder .
{
locate a stream with the given uri .
initializes the script builder .
validates the given data .
creates an object pool pool } .
create a new { @link generic } .
{
{
{
{
{
opens a jar file .
locate a jar file from the given jar file .
extracts the path from the uri .
creates a new cache key .
returns true if the request is a minimized .
writes the report to the output stream .
{
adds a locator locator to the factory .
decorate a new { @link wro } with the given { @link wro } .
{
adds an require to the require .
process the given content .
returns the hash of the input stream .
logs the summary of the summary .
called when the resource .
{
gets the lock for the given key .
on css lint .
creates a new process .
{
{
{
provide a map of model factories .
parses the given contents of the contents .
returns the task info .
returns a string representation of this task .
returns the compilation command .
returns a new {
create a new { @link response } instance .
parses the header .
adds no cache headers .
sets the response headers .
{
{
creates an exception message .
encodes a object into a json string .
gets the path info from the location .
convert a class to a package .
checks if the given string starts with the given prefix .
gets the servlet path from the location .
check if the given request is supported .
convert a string to a string .
check if the request matches the given path .
create a new create a new { @link processor } .
loads the regexp with the specified key .
copies the contents from the given reader to the given writer .
creates a temp file .
joins the given path with the given separator .
removes an image url from the image url .
gets the full path of the given path .
normalizes the given path .
creates a new instance of { @link servlet } .
get the attribute name .
sets the attribute of the given attribute .
removes all of the attribute .
reads the contents of the given file as a string .
writes a byte array to the given writer .
creates a new { @link report } .
creates a {
{
creates a {
creates an issue element .
returns a new { @link context .
sets the configuration .
sets the given correlation .
create a new {
returns a new { @link cache } with the given { @link cache } .
computes the cache value for the given content .
tries to see if the cache is available .
check if the cache is changed .
called when an exception .
checks if the resource is changed .
checks if the resource is changed .
updates the hash for the given group .
checks if the given resource has a resource of resources .
replace all resources in the given resource .
adds a resource .
sets the list of this resource .
copies all the elements from the given map to the given map .
creates a new process .
gets the command line line .
initializes the script builder .
encodes the given { @link bytebuffer into the { @link com .
encodes an object into a string .
processes all groups of the given document .
parse a group .
creates a group .
parse a resource .
creates a resource .
gets the resources of a group .
returns a map of strategies .
{
{
returns a { @code collector } that collects elements of values .
supply the given { @link throwable .
waits until the specified duration is available .
waits until the specified timeout .
waits until the specified duration is available .
waits until the specified iterable to complete .
create a new instance of {
logs a timer .
stops a named timer .
get a named timer .
returns a named { @link elk .
returns a named { @link elk () .
prints the statistics about all the statistics .
wake up the workers .
updates the number of the processed counters .
updates the number of the local jobs .
checks if the given value in the given counter .
adds a rule to the given link .
removes the rule from the given link .
checks if the given link contains the given link .
default implementation of {
returns a set of sub - property chains .
returns a set of sub - properties for the given { @link producer } .
returns a multimap of multimap } for the given property .
adds all the given property .
----- private methods of {
/ * ( non - finished .
restores the saturation saturation .
returns true if this ) is inconsistent .
restores the taxonomy taxonomy .
/ * ( non - null if it is a taxonomy .
returns a taxonomy taxonomy for the given elk .
restores the taxonomy instance of {
get the instance of the instance of this method .
creates a new instance of {
/ * ( non - javadoc )
creates a taxonomy object ) instance of { @link elk .
compute the query .
check if the given class is a query .
query the equivalent classes for a class of the given expression .
query the direct super classes for the given expression .
query the direct sub - sub - classes for the given expression .
query the direct instances of the given expression .
returns a map of axioms queries .
/ * ( non - javadoc )
/ * ( non - javadoc )
removes the number of the saturation .
returns a list of evidence of - evidence .
registers all queries in the axioms .
checks if the given axioms ) is entailed the query .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
invalidate all the reasoner )
{
adds the number of nodes in the list .
returns a collection of indexed operations .
removes the size of the elk .
get the collection of operations from the collection .
{
returns a { @link backward .
create a new owl exception .
{
returns the initial capacity of the given capacity .
removes the element from the list .
removes the element from the list .
returns the moved position of the specified by the array .
check if the array contains the given object .
adds an element at the position .
check if the occurrence of the occurrence of the occurrence of the message .
converts the specified exception } to a { @link owlruntimeexception } .
adds a new {
/ * ( non - javadoc )
adds the given {
/ * ( non - javadoc )
creates a new stage
/ * ( non - null conclusion .
adds a rule to the given ontology .
removes a rule from the given index .
puts a key / value pair into the map .
removes the entry from the cache .
this method .
this method .
saves the configuration file .
returns the next element in the position in the buffer .
prints the class taxonomy .
prints the declarations of the given class .
gets all super nodes of a given entity .
gets all sub - nodes of a given entity .
gets all instance of the given entity .
returns a chain of the given key } for the given key .
finds the structural of the given entry in the list .
adds a new entry to the list .
removes the specified entry from the list .
resizes the given capacity of this table .
{
/ * ( non - javadoc )
returns the conclusion for the given propagation .
returns the number of objects in the given object .
combine the hash of the given hashes .
combines two { @code hasher } s objects ) to - memory ) .
combines the given iterator in the hash } into the given { @link iterator } .
combine the number of the given hashes .
combines the given list of hasher } s objects in the given list .
combine the hash of the iterator in the given a hash .
copies the contents of the given input stream to the given output stream .
get the list of the given extension .
get the conclusion for the given class .
process the input stream .
gets the reasoner incompleteness for the given incompleteness .
/ * ( non - javadoc )
{
removes all deleted rules from the deletion .
commit all added rules of the rule .
sets if the incremental mode should be used .
adds the given {
removes all the rules from the ontology index .
returns the index of the index of the index .
returns the {
check if the given class is supported .
dumps the taxomomy to a file .
dumps the taxomomy to the given writer .
dumps the instance of the instance .
dumps the instance of the instance of an instance .
returns the hash of the given taxonomy .
process the taxomomy of the given taxonomy .
prints the axioms axioms .
adds a block to the class .
calculates the hash of the given entity .
applies the given {
{
appends the given object to the given appendable .
/ *
dumps the diff to the given writer .
/ * enlarge
/ *
returns a map of system properties from the system .
runs the task .
runs the task collection .
runs a task collection2 .
returns the conclusion for the given destination .
{
convert the given owl class to the given class .
returns a { @link rule the } of the given visitor .
returns a {
{
mark the computed query .
mark the given class from the state .
registers a query .
returns true if the given class is satisfiable .
get the equivalent classes for the given class .
get the direct super super classes that matches the given expression .
gets the direct sub - sub - sub - sub - sub - sub - sub - classes .
gets the direct instances of the given class .
/ * ( non - javadoc )
returns a set of axioms from the given list .
returns the hash of the given taxonomy .
{
get the base writer for the given context .
checks that the given expression is a valid chain .
concatenates an iterable into an iterable .
returns a list of the elements in the iterable .
returns a collection of elements into a collection of elements .
returns a set of elements of elements from the given condition .
dumps the diff of the given multimap .
dumps the given collection of second .
returns a set of elements of the given functor .
reads a fragment from the given byte array at the given pos .
changes the fragment at the given masks .
/ * enlarge
this method .
adds a new element at the end of this list .
removes the specified element from this list .
clears the map .
derive the inclusion of the given the extended match .
adds a new {
logs the given operation .
logs the given operation .
logs the given operation .
logs the specified operation .
logs the memory usage .
sets the configuration options .
shuts down the timeout .
gets the { @link taxonomy } .
gets the instance of the instance of the given elk .
get the type of the given elk .
gets the { @link taxonomy .
returns a node equivalent to the given class .
get the equivalent classes of the given class .
get the set of a set of sub - sub - sub - sub - classes .
get the set of the sub - classes of the given class .
{
get all the set of the given expression .
{
{
returns a set of instances of a given class .
returns a set of instances of the given class .
returns a set of type of the types of the given elk .
checks if the given class is satisfiable .
prints the header .
adds a padding to the list .
prints the given object .
returns a string representation of a character .
compares two iri .
main method .
convert a { @link step to a step .
/ * to add - super .
prune the size of the ontology from the ontology .
add a new {
process the message
returns the body of the servlet request .
writes the resource to the writer .
/ * ( non - javadoc )
returns the property descriptor for the given property .
{
is
checks if the given string is a iso latin1number
adds the given link to } .
sets the type of the media type .
adds a hreflang .
sets the title of the title .
sets the title of the title .
sets the media link .
adds a link to the list .
sets the anchor .
adds a link param .
returns a string representation of this link . <p >
{
expands the given object .
expands a partially uri } .
returns a list of rels .
returns the list of revs .
returns true if the unsatisfied is required variables .
creates a { @link forwarded } instance } from the given { @link string } .
gets the value of the value property .
{
/ * ( non - javadoc )
checks if the given property contains the given property .
returns true if the input annotation is explicit property include the implicit .
/ * ( non - javadoc )
returns true if the request is required .
returns the default value .
returns an array of values .
/ * ( non - javadoc )
recurse
returns the property name of the given property .
writes the hydra variable mapping .
gets the exposed property name .
gets the writable exposed property name .
convert the given object to a uber .
converts a { @link string } into a { @link uber .
creates a { @link string } to a { @link uber } .
recurse
returns the input parameters for the given annotation .
returns the value of the property or null if the property is not found .
get the vocab vocab vocab )
finds the annotated terms of the given element .
finds all events that match the given name .
returns the query query .
appends the form form to the form .
writes a button .
recurse
append the input parameter to the given input parameter .
creates a new {
creates a new { @link affordance } instance .
builds a new { @link affordance .
reverse a reverse rel .
reverses the given rel to the given typed object .
adds a typed rel .
adds a link param .
returns the {
returns the current request .
adds and adds the action .
returns a list of the template components .
expands all components of the given parameters .
expands the given map of parameters .
gets the uri template components .
removes all optional variables from the given list of optional components .
returns the first node with the given name .
returns the first node in the list of uber .
{
returns an empty { @link set } that contains the elements .
creates a new { @link set of the elements in the given elements .
returns an empty { @link map .
returns an empty { @link equator .
returns an immutable map of the elements of the given { @link map .
returns a new { @link map } of the specified pairs .
clones the given inode and returns a new one .
returns a ordinal to a string .
returns a map containing all the elements from the elements .
creates a map from the given comparator .
returns an empty { @link comparable } .
returns an empty { @link map .
{
{
{
{
{
{
{
returns the last entry in this list .
{
adds a new node to the given node .
appends a node to the given node .
creates a new { @link xform } from the given { @link iterable } .
applies the given {
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new {
creates a new {
creates a set of { @link comparable } from the given iterable .
{
{
{
{
{
{
/ * ( non - javadoc )
/ * [ deutsch ] <p > konstruiert eine a .
returns a new instance ] <p > } instance of the specified entry .
returns the tree at the given index .
returns an array of { @link node array .
shows the sub - nodes .
applies the given function to each element .
create a new range ] from the specified number .
/ * ( non - javadoc )
{
{
{
registers a list of classes are registered with the given class .
construct a new { @link tuple7 }
returns an empty vector that returns an empty { @link vector } .
returns an immutable vector of the given iterable .
returns an array of leaf for the given node .
{
{
{
{
{
assoc
static factory method that creates a new tuple .
returns a map of { @link map } objects .
returns a map that contains all the keys of the given in the map .
returns an array of { @link rrbt } into a { @link rrbt } .
returns a new { @link set } that contains all elements in the given items .
returns a new { @link list } that contains the given elements .
returns an immutable rrbt } of the given items .
returns a new { @link set with } that contains the given items .
returns a sorted map of the elements of the given comparator .
returns a set of the elements in the given comparator .
returns a new set of items from the elements .
returns an immutable list } that contains all elements of the given items .
creates a new { @link unmod } from the given items .
returns an iterable of {
returns a string representation of the given string .
returns a string representation of the given items .
returns a string representation of the given items into a string .
creates a new instance of { @code fn0 } .
applies this producer to the producer .
creates a single element of the given class .
inserts the given item at the given array .
copies an array of elements from the given array .
creates a new array containing the given array of the given array with the given array .
replaces all occurrences of the given array with the given idx .
splits the given array into a new array .
splits a int array into a split array .
parses the given a { @link deployable } object [] .
suspend the current thread if it is assoaciated
checks if the operation is called on the operation .
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
returns a resource state from the given state .
creates a list of components from the components .
returns a list of jars of the given directory .
validates that the given directory .
creates the interface links .
create the inheritance link .
adds a intercepted method .
convert a class type to a string to a string .
converts a primitive type to a jvm representation .
copies all methods from the given class .
copies all methods from a given class .
/ * ( non - javadoc )
/ * parses descriptor .
creates an instance of {
/ * [ deutsch ] <p > erzeugt ein neues address . < / p >
sets a timer .
/ * ( non - null timer .
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the notification is enabled .
parses the given input stream ) of the given {
returns a tree .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
{
{
/ * ( non - javadoc )
removes the sbb from the sbb .
{
{
/ * ( non - null url .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
returns an array of all the deployable .
/ * ( non - javadoc )
returns a list of the given component .
returns true if the deployable is installed )
{
returns the number of activities in the activities .
returns the number of activities for the given executor .
get the average event ) of the event
/ * ( non - routing time routing time for the event .
returns the number of the average event routing .
returns the number of events in the eventtypeid .
returns the number of events in the given executor .
returns the number of all executed tasks .
returns the number of the given executor .
returns the number of the specified executor .
returns the number of idle .
returns the number of tasks that are misc .
returns the number of misc for the specified executor .
returns the number of the number of the given executor .
returns the routing time of a routing
/ * ( non - javadoc )
/ * ( non - enabled value is enabled .
/ * ( non - javadoc )
{
{
ds method to activate this component .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
ds method to deactivate this method .
/ * ( non - javadoc )
{
{
uninstall the service .
{
{
/ * ( non - javadoc )
returns the number of the routing time .
get the average event ) event routing .
returns the events
returns the routing time of the routing type ) of the routing ) .
create a new alarm level } instance } from the given level .
creates a string representation of a string into a { @link string .
returns true if this alarm is higher than the other level .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
creates a usage parameter set .
create a usage parameter set .
creates a usage parameter set .
removes a usage parameter from the specified sbb .
{
{
/ * ( non - javadoc )
{
resets all usage parameters to reset parameters .
/ * ( installed parameter set ) of the specified name .
sets the resource adaptor ) of the resource .
checks if the class constraints .
checks if the activity context .
checks if the given interface is defined .
checks if the profile constraints .
create an { @link event .
creates a new { @link event } .
{
/ * ( non - javadoc )
create a new { @link service } object from a { @link service } .
create a string representation of the } instance into a { @link service } .
returns the slee for the given peer .
loads the slee from the given peer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
parses the given input stream and returns a { @link profile } . buildjaxbpojo .
displays the current result .
unfold
compares this object to another object .
checks if the notification is enabled .
clears all stale timeouts from the known alarms .
checks if the notification is enabled .
{
generates the class class .
binds the name of the given object .
removes the name of the named name .
looks up the name of the given name .
returns the name of the name of this object .
register a new object } with the given mbeanserver .
returns the next event )
create a new { @link trace } object .
creates a string representation of a string into a { @link trace } into a { @link trace .
returns true if this trace is higher higher level .
installs the profile specification .
removes the profile specification .
{
/ * ( non - javadoc )
checks if the combination of the given component .
validates that the invocation .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
build a list of all components from the jar file .
extracts the file from a jar file .
extracts all files from a jar file .
writes the contents of the input stream .
{
attaches a sbb to the sbb .
removes a sbb from the sbb .
returns true if this node is attached to see {
gets the set of the sbb .
attaches a timer to the node .
removes a timer from the node .
returns true if the node is no timers .
returns the set of timers attached to be used to this node .
adds a child node to the list of elements .
returns true if the node name is unbound .
returns true if the node is bound .
returns the names of the names of this node .
sets the cmp attribute .
returns the cmp of the specified attribute .
returns a copy of all the attributes .
appends a message to the buffer .
{
returns the activity interface interface ) for the activity ) interface . )
initializes the notification info .
send a notification notification }
creates a usage notification notification notification } .
/ * ( non - based on this method returns the { @link javax .
{
installs the given url .
deletes the given url .
installs the given url .
/ * ( cluster
open a file from the given url .
{
installs the deployable unit .
uninstall the deployable unit .
/ * process components from the internal .
removes all actions from the given collection .
returns the status of the dependency .
shuts down the deployable .
checks if the record is loggable .
gets the logger .
get all referring components of this component .
display the help code .
{
returns a new { @link timer } from the given { @link int option } .
creates a { @link timer } to a { @link timer } instance .
returns a set of sbb entities .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( adaptor ) interface of the resource .
/ * ( non - javadoc )
deserialize the object .
parses the given {
gets the permissions for the given permissions .
loads the policy from the given policy .
get the stream of the given uri .
perform the url conversion .
gets the code sources .
data
creates a new object .
/ * ( non - null )
{
/ * ( non - javadoc )
removes a profile from the cache .
/ * ( non - javadoc )
/ * profiles by attribute value .
returns an unmodifiable profiles ) of the given attribute .
gets the profile entities by attribute name .
returns the profile attribute of the specified attribute .
checks if the given profile exists .
renames all the profiles .
removes all the <code >
get the specs descriptor .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a deployable to the list .
returns an array of all the deployable .
removes a deployable from the list .
/ * ( non - active configuration .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
ds method to deactivate ) the resource .
schedules all activities that have been activities .
returns true if the activity has activities .
/ * ( inactive / p >
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
ds method to activate ) .
activate this method will be called before calling this service ) < / tt > .
/ * ( non - javadoc )
set the fault tolerant .
/ * ( non - javadoc )
/ * ( non - javadoc )
verify that the properties are valid .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
unset the fault . tolerant .
builds the profile attribute map .
returns the specs descriptor .
this method .
sets the ownership ownership .
{
/ * ( non - javadoc )
compares this object to another object .
make a new object )
parses the given {
{
/ * ( non - javadoc )
{
removes the mbean from the mbean .
creates a usage parameter set .
get the parameter name .
removes a usage parameter set .
gets the installed parameter set .
parse a list of resource permissions ) .
<p > decorate
creates a new {
get the usage parameter .
returns the parameter names .
removes the notification from the notification .
sets the notification } .
returns the child relation of the given entity .
fires an event on the handler .
fires an event on the handler .
return
get
/ * ( non - javadoc )
{
computes the convergence for the given event .
set
returns the object from the primitive type .
returns the class from the primitive type .
returns the primitive type from the given argument .
returns a map of abstract methods from a given class .
returns a map of concrete methods from a class from the given class .
returns a set of concrete methods from the given class .
returns a map of super classes from the interface .
returns a map of interface methods from the given .
/ * ( non - javadoc )
remove an object }
removes an object pool pool .
registers the bean .
/ * when the node is removed .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
checks if the given notification is enabled .
create an address from a int .
converts a string to an address .
removes the alarm from the alarm .
clears all alarms of the given notification .
returns a list of alarm .
get all the alarms for the alarms .
returns the descriptor associated with the given alarmid .
returns an array of descriptors of the descriptors .
checks if the given alarm is source .
try to raise of the alarm .
get a usage parameter set .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the {
defines the active service as initial service .
defines the initial event as initial service .
check if the given url is a jar file .
initialize the deployable
start the deployable
/ * ( deployableuniturl } .
show the status of the deployment .
adds a list of to the list .
/ * ( non - javadoc )
checks if the transaction is supported ) .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
executes the commit actions .
executes the commit priority .
executes the rollback actions .
executes the commit actions .
executes the commit priority .
returns a list of requested tracer names .
returns a list of defined in - memory names .
creates a new tracer .
binds the specified aci } to the specified interface .
{
/ * ( non - based on the activity .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the replicated data with the failover .
get the replicate data for the cluster .
returns an array of all members .
get the local address ) address .
removes the replicate data from the failover .
registers the editor .
processes the given component .
compares the given { @link componentid } .
rotates the left - bit integer .
get the object pool .
/ * ( non - javadoc )
removes an object pool from the pool .
/ * ( non - javadoc )
{
start an activity
start the activity .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the given activity is start .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
check that the event type is fire .
/ * ( non - javadoc )
/ * ( activity
/ * ( activity .
generates a concrete class for the concrete object .
generate concrete methods
/ * (
converts the given string to an object .
returns a set of local keyset keyset .
puts the given key in the cache .
returns the value associated with the specified key .
returns true if the specified key contains the specified key .
{
checks if the notification )
sets the specified profile table .
/ *
barrier the given event ) event )
removes all events from the event context .
/ * ( non - javadoc )
create a new {
converts a string representation of { @link string .
extracts the message from the result .
checks if the notification is enabled .
removes all stale timeouts from the notification .
{
{
{
/ * ( non - javadoc )
check if the given object contains the given object .
removes all of the mappings .
removes an object from the list .
check if the given collection contains all of - place .
removes all the elements from this collection .
removes all the elements in the given collection .
returns an array of object array .
validates that the child name is valid .
/ * ( non - javadoc )
creates a new { @link failure } instance based on the given reason .
returns the subsystem of the given subsystem .
compares this object to another object .
sets the attribute value .
sets the attribute value .
sets the attribute attribute .
sets the attribute value .
sets the attribute value .
sets the attribute value .
sets the attribute value .
sets the attribute value .
sets the address of the attribute .
set the timer threads
checks if this level is higher higher level .
resolves the stream .
parses the deploy config .
parses the given input stream and returns a list of service } objects .
removes all classes from the class pool .
create an external activity .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
add a profile call .
get a profile associated with the specified profile .
/ *
validates the profile is passed in the profile .
checks if the profile management .
validates that the abstract class .
checks if the descriptor .
validates the given expression .
sets the value to a text ) .
execute the given task .
execute a task .
{
create an entity adaptor ) entity entity .
generates an activity interface interface for the activity .
generate concrete methods
creates a new profile array } instance .
returns the log4j path of the given profile .
compares two object to another object .
gets the specs descriptor .
returns the default config properties .
/ * ( non - activity .
/ * ( non - javadoc )
adds a binding binding .
removes all naming bindings from the activity .
removes the specified aci } .
attaches a timer to the cache .
detaches the timer from the cache .
removes all timers from the timers .
attaches a sbb to the cache .
detaches the sbb from the cache .
returns a set of sorted sbb that are sorted in - memory .
updates the last access time .
/ * ( non - javadoc )
/ * when the end of the activity .
adds a component to the component .
returns a collection of external dependencies .
checks if the dependencies has satisfied satisfied .
checks if the component has a duplicates .
returns a collection of management actions .
returns a collection of all uninstall .
check if the component is a component id .
main method to install the jar file .
close the given profile table .
returns the object name for the given profile .
writes the profile mode .
{
commits the profile to the profile .
{
{
returns true if the profile table is non - set .
{
returns true if the profile invocation is management .
called when the profile invocation is called by the management method .
{
/ * ( non - javadoc )
event
/ * when the event is unset .
returns true if the transaction routed to see {
returns the entity name of the entity name .
compares this object to another object .
generates a string representation of the service .
compares this object to another object .
returns all the deployable that are deployable .
deletes the given path .
returns a {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
create a constructor .
sets the number of the number of memory memory that should be free .
sets the minimum number of the number of the number of memory .
sets the period of checks that the number and period .
generates the concrete sbb .
generate the abstract class info .
creates the constructor with the given parameters .
create the default constructor .
create the default usage parameter .
create the entity entity getter and setter .
check if the getter is a getter .
creates the fire event methods .
create the child relations for the given child relation .
compile the concrete profiles .
create the sbb } ) for the given activity .
adds a query to the list .
checks that the given query expression is a valid expression .
binds the given key to the specified key .
removes the given key from the cache .
unbind the given name from the map .
naming
create a new context .
sets the logger level .
fetch the logger info from the logger .
sets whether the parent handlers .
/ * ( non - javadoc )
/ * ( non - javadoc )
gatherinfofromurl
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
checks that the given expression is a valid expression .
decorate the abstract sbb )
invokes the given method on the method .
create the constructor .
sets the time between the liveness .
/ * ( non - javadoc )
/ * list of activity contexts with the given criteria .
returns the details of an activity .
returns an array of qualified class ) for the given the activity .
gets the real field name .
sets a field value .
returns the value of the given a field .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
initialize
declarative services method for setting .
returns the profile local object .
/ * ( non - javadoc )
gets the profile cmp .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the specs descriptor .
creates a new class . < / p >
creates the interface links .
create the inheritance link .
adds a field to the class .
adds a { @link field } .
adds a field to the class .
generates a getter method .
generates a setter method .
generates a getter and generates a getter object .
adds the given annotation .
adds the member values to the annotation .
/ * ( non - javadoc )
returns a class pool .
sets the deployable unit )
clears the class from the class .
initialize the deployment
start the url .
creates a { @link receivable .
/ * ( non - javadoc )
returns the collator collator .
parse a dynamic query expression } from a query expression .
replaces all occurrences of the given source string .
validates that the given usage is valid .
checks if the given interface is interfaces .
returns all interfaces of a given interface .
gets a method from a map .
resolve an input source .
sets the trace level of the trace .
returns the trace level ) level of a component .
/ *
/ * ( non - javadoc )
get the tracers set of tracers .
returns the tracers of the given source .
sets the trace level of the given tracer .
checks if the given tracer name is a tracer .
registers a notification source .
checks if the given tracer is defined in the tracer .
{
handle a collection of )
builds a new { @link deployable .
loads the non - generated {
checks if the given component is valid .
create a temporary file from the given deployment .
/ * ( non - javadoc )
/ * ( non - javadoc )
remove an event context ) } .
/ *
/ * this method will be called when the {
/ * ( non - javadoc )
/ * ( non - javadoc )
generates the profile classes .
generates the profile attribute array .
compares two priority
finds all profiles by attribute .
find a profile with the specified profile .
get all profiles of the given profile .
get all profiles by dynamic query
persist the profile .
retrieves the profile from the specified profile .
renames the profile table
installs the given component .
/ * ( non - javadoc )
gets the entity manager .
start the request .
shuts down the container .
add a notification listener .
checks if the compatibility .
/ * ( non - javadoc )
switch a class loader to a class loader .
make a proxy call to the given signature .
check if this object is identical to see {
/ * ( non - javadoc )
checks if the transaction is a transaction is a transaction .
{
processes the privileged action .
returns the ttl in the given timeout .
returns true if the profile is visible .
/ * ( non - javadoc )
/ * ( s ) logger ) of the given regex .
resets the logger levels .
clear the mbean .
add a logger .
add a new socket )
remove a handler from the server .
add a notification handler to the list of the mbean .
shows the panel .
create an instance of { @link address }
/ *
parse a list of resource stream and returns a list of { @link resource } objects .
/ * ( non - javadoc )
sets the field value to the cache .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - cache )
sets the priority priority )
/ * ( non - empty ) from this method .
trash
/ * ( non - javadoc )
/ * ( non - null id .
/ * ( non - javadoc )
releases the sbb .
gets the object pool .
returns a child relation .
/ * ( sbb
/ * ( s ) to the sbb
returns the next index in the index .
output class
generates a notification for the given tracer .
sync the level of the level .
if the log4j level .
resets the state of cache .
send a notification method ) message .
{
send a message .
{
send a message .
send a message .
sends a message
{
send an info message .
{
sends a message
/ * ( non - null ) .
/ * ( non - level ) message .
/ * ( non - null message .
{
sends a notification to the client )
checks if the given tracer name is a tracer .
writes the object to the output stream .
/ * ( non - null object .
adds a direct dependency .
returns a list of dependencies .
find a class locally .
finds a resource locally .
finds an enumeration of the given url .
/ * ( non - javadoc )
/ * instance of the profile .
/ * ( non - table .
get the default profile name for the given profile )
<code > map&lt ; string ) < / code >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get all profiles by dynamic )
get profiles by profile name .
<p > remove the profile from the profile .
removes a profile table from the profile .
/ * ( non - profile / code of the <code > rename / code > . < / p >
create a new { @link instance instance } .
/ * ( non - null transaction .
resume a transaction
{
returns the specs descriptor .
{
{
registers a resource .
/ *
initialize the slee .
shuts down the slee .
validates the state of the state .
sets the executor mapper name .
/ * ( non - profile ) .
returns the profile name .
get the profile table table .
get the profile table name .
/ * ( non - javadoc )
get a tracer tracer .
{
{
{
{
{
{
{
generates the named usage parameter .
generate the concrete class info .
/ * ( non - javadoc )
queries the given query .
{
{
return true if the query is existence .
inserts the given { @link insert } .
updates the given query .
sets the value to the given value .
sets an argument argument .
sets a delete argument .
builds a new instance of {
adds a custom sql mapping for the given class .
selects a query order by name
sets an argument argument .
inserts a query value .
runs the given operation .
{
/ * ( non - javadoc )
parses a region from a region .
returns the region of this box .
resolves an image } .
encodes the given string .
returns the canonical form of the specified image .
gets the type of the type of the given annotation .
returns a set of the given type .
sets the list of the viewing hints .
adds a viewing hint to the resource .
sets the renderings of the renderings .
adds the rendering resource .
merge
merges this { @code image } .
create a new { @link rotation } instance } .
convert a converter to a converter .
adds a member to the list .
adds a member to the list of members .
returns the first value of the given locale .
parses a string representation of a string representation of string .
returns the canonical form of the native image .
resolve the dimension } with the specified profile .
resolves the specified image .
initialize the android devices .
initializes the adb .
checks if the given type is a nested exception .
/ * ( non - javadoc )
returns the dump of the file .
handles a pop box .
pushes the handle to the output file .
clean up the command .
get the path of the device .
sets the input command .
gets the crash log log files ) .
replaces all occurrences of the given regular expression with the given replacement string .
replaces all occurrences of the given regular expression with the given replacement .
replaces all occurrences of the given pattern in the given pattern .
replaces all text editor with the given width .
returns a text editor with the specified spaces .
returns a collection of all the tokens that match ) .
returns a string representation of the given text .
/ * attributes of the special tag within a tag .
retrieves the connection connection from the database .
retrieves the connection holder for the specified timeout .
{
this method .
set the name of the name .
adds an exception to the list .
returns an array of exceptions .
returns a { @link listener the given the { @link eviction } . listener } .
{
returns a list of taken connections .
/ * ( non - javadoc )
returns the cached statement for the given method .
/ * ( non - javadoc )
{
{
{
sets the default values of the connection .
validate
set
returns the pool name of the pool .
process the queue .
finds the parent name of the given type .
finds the barbershop for a given class .
writes the given filer .
generate the style method .
returns the last comma - separated param in the given input string .
writes the bit vector01divider .
appends the given string to the given vector .
enum the given enum .
deserialize this object from the input stream .
gets the type of the given path .
returns a list of type { @link type } objects .
returns a list of json object .
gets a list of filters from the given path .
returns a list of cards .
returns a set of cards .
get a list of booster for the given set of booster .
returns a list of sets of the filters .
returns a list of the sets of all sets .
sets the klov report .
adds the screen capture from the path .
sets the system info .
returns the number of an event .
converts a collection of property to a float .
adds a new integer to the list .
{
returns the specified element at the specified index .
gets the value at the specified index .
sets the specified element at the specified index .
returns a new {
collects all fields from the given list of the given selectors .
collects all fields from a list of the given map .
select
selects a list of fields from a list of selectors .
selects a property by name .
selects a property with the specified alias .
selects a template as a template .
flushes the reads to the last read queue .
flushes the writes to the queue .
extract validation annotation data from a set of annotations .
extract all annotations from a property .
finds the annotations of the given property .
returns the property descriptor .
converts a { @link reflection } into a { @link object } .
looks up the given object .
sets the data store .
from
creates a new { @link mapper } instance .
creates a new instance of { } from a { @link object .
converts the given map to a map .
creates a new instance of {
creates a new { @link mapper } from } from the given { @link map } .
creates a new { @link mapper } from the given { @link map } .
converts the given object to a map .
converts the given object to a map .
converts a list of maps to a list of maps .
converts a collection of maps to a list of maps .
/ * values of the given annotation .
creates a {
lookup the list of them in the list of validation .
looks up the validator for the registry .
applies the validation meta properties to the validator .
removes a property from a property is blank .
returns a list of resources from the resource loader .
returns a list of paths from a class loader .
{
{
returns the hash of the given object .
creates the default options .
checks if the given a file .
{
/ * ( non - javadoc )
{
{
{
{
calculates the end of the given array .
invokes the given object on the given array .
invokes the given array of objects .
returns the minimum element in the array .
computes the variance of a double array in the array .
calculates the index of the given array in the array .
returns the maximum element in the array .
returns the minimum element in the array .
returns the number of the specified by the specified range .
returns the variance of the specified array of values .
computes the mean of the mean of the given array .
returns the median of the given array .
*************************************************************************
initializes the {
invokes a method from the given object .
reduce the elements in the given array using the given the array .
returns the sum of an array in an array .
returns the maximum element in the array .
computes the standard deviation of the specified array .
convert a timestamp to a string .
check if the given object matches the given object .
creates a new { @link criterion the specified by the specified name .
creates a new { @link criterion } instance .
creates a { @link criteria .
creates a criteria instance } instance from } .
creates a new { @link criteria instance } .
converts a json criteria from a json criteria .
converts a collection of properties to a double list .
adds a float .
adds a new integer to the list .
adds a new array to this list .
{
returns a new {
searches the item in the list .
search for the first occurrence in the list .
<p > returns the max order in the array .
returns the first element in the list .
sort
returns the last element in the list .
get
sort
sorts a list of the elements in the list .
sort
returns the min .
returns the min .
{
processes the array of maps of maps them .
adds a collection of maps .
match
handles a collection of values .
processes a collection of fields from the map .
{
{
{
{
gets the label of a resource .
creates a label with the given name .
creates a tool tip with the given name .
generates a label value .
adds a hex sequence to the buffer .
handles a message from the server .
/ * ( non - javadoc )
/ * ( non - value pairs in the key .
puts the specified key / value associated with the given key .
removes all keys from the list .
processes the read queue .
process the write queue .
starts the server .
<p > returns the first character in the string .
convert a string to a string into a string .
return
add a string to a string .
adds all objects to the given object .
compact
splits a string into a string .
splits the given string into a string .
splits the given string into a string .
converts a char array into a string array .
returns the given string of - case sensitive characters of the given string .
return
under
equals
concatenates two strings .
returns the number of the given a number of the given in the given number of characters .
returns a sort sorts of the given sorts .
sorts the given list of fields .
sorts the given list of fields .
sorts the given collection using the given the collection .
sorts the elements in the given iterable using the given iterable .
sort
comparator
returns a list of child fields .
returns the last element in the map .
returns the value mapped by the given index .
returns the value mapped by index .
return
returns true if the two objects are equal .
checks if two arrays of an array of the expected to see { @code got .
returns the sum of an array in an array .
returns the maximum element in the array .
returns the minimum element in the array .
computes the standard deviation of the given input list .
returns the median of the given input list .
rounds the given number of bytes to the given number .
gets the message from the bundle .
sorts the given list using the given list of fields .
sorts the given list of fields using the given map .
handles a response from the data store .
{
sets the field value .
{
compiles a regex pattern .
{
add a table to the table .
copies the given list into a list of { @link list .
calculates the index of the given list .
checks if the given object has a string .
checks if a class has a string .
checks if the given class has the given name .
returns the first comparable or null if none is found .
returns the first field name with the given name .
gets the first field name with the given name .
gets the sortable field of the given object .
{
compares two time of the cache .
sorts the given list using the given list .
sorts the given list of fields in the given list .
sorts the given collection using the given collection .
sorts the given map using the given the given map .
sorts the values in ascending ascending order .
sorts the given component type .
sorts the given component using the given the order .
sorts the given array using the given array .
returns a comparator that compares the specified by the same value .
creates a comparator that compares two universal objects .
compares two objects .
returns the value associated with the given key .
returns the value associated with the given key .
{
adds a value to the value .
returns the number of the order .
evict the cache if the cache is needed .
validates that the field against the given .
/ * ------------------------------------------------------------
initializes the dynamically .
returns an array . < / p >
unify
unify
allocates a new {
determines if the thread should be we have been we are we have we have to determine if we want to determine if we want to determine if we want to determine if we want to determine if we are we want to determine if we are we want to determine if we want to stop .
write the input writer to the input stream .
flushes the empty queue .
wait for the next data to the next data to the file .
starts the monitor .
starts the given time .
{
validates the given field against the given field .
sets the main query plan .
filters the given group .
applies all groups to the given set of groups .
set
converts a set of maps to a list of maps
sets the time of the file .
sync the file to the disk .
closes the output stream .
write the next buffer )
writes the buffer to the output stream .
initialize the output stream .
loads the value associated with the given key .
puts a key / value pair in the cache .
puts all the values in the given map into the map .
checks if the given time is for the given time .
loads the value associated with the given key .
returns the key associated with the given key .
puts the specified key / value pair into the cache .
removes all keys from the list .
read a list of a validator .
loads the properties from the cache .
extracts the meta data from the validator
read a list of meta data from a validator .
extracts the validator meta data from the validator .
extracts the list of the annotations
converts annotation data to validator .
compiles a regex pattern .
splits a string into a string .
splits a string into a string into a string .
split a string representation of the given string using the given string .
removes all occurrences of a string .
<p > string into a string } using the given a string .
parses a float from a string .
parses a double from a string .
parses the given { @code buffer .
parses a long as a long .
converts a collection of properties to a long .
adds a long to the list .
adds a number of integer to the list .
sets the specified element at the specified index .
converts a collection of properties to an int .
adds an integer to the list .
adds a new integer to the list .
{
sets the specified element at the specified index .
{
handles a message from the server .
returns the field of this field .
return
returns the value of this field .
returns the field .
gets the object at the specified item .
gets all fields of the given object .
returns a map of fields from a map .
returns the type of a property .
get
returns the value of the given object .
inject
sets a property value .
gets a property value from the property from the specified index .
returns the value of a property .
returns the property value of a property .
return
idx
gets the property type of the property .
returns the property path for the given object .
gets the field path for the given class .
returns the context context .
returns a map of fields of the given a map of the given class .
returns a map of { @link field } .
initialize this object .
creates a message .
create a message .
converts the given list of keys to an array .
returns the subject subject .
parses the given text .
sends a http request .
deletes the database .
sets the db .
compact the response .
returns a list of uuids in the given uri .
registers the given client .
converts the given { @link gson } to a { @link object } .
list
triggers a {
creates a json object .
query the input stream .
query a list of the given class .
query a view of the given class .
reads the value from the given class .
query a page .
allows to call to the view .
sets the list of keys to be used in the view .
this method to synchronize with the given document .
synchronize all the documents in the design .
returns a design document from a db .
returns all the list of the design from the design .
creates a design document from a desk .
saves the current user .
finds a { @link replicator } .
finds all the replicator replicator .
remove a { @link replicator } from the { @link replicator } .
finds the given { @link object } .
finds the input stream .
finds the input stream .
finds a list of {
checks if the document contains the given id .
post
batch
removes a uri from the uri .
bulk bulk operation .
saves an attachment to an attachment .
saves an attachment to an attachment .
invokes a update handler .
executes a request .
gets the request .
get the input stream .
returns the value of the specified uri .
puts an entity into the given uri .
sends a put request .
executes a post request .
deletes the given uri .
validates the http response .
sets the entity .
initializes the gson .
adds an attachment .
sets the changes of the changes .
get the changes of the changes .
reads the next row from the json file .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this code is always regenerated by the form editor .
gen - last : field1action
gen - last : button4action
gen - last : button5action
gen - last : button6action
gen - last : button8action
gen - last : button9action
gen - last : box6action
sets up the money of the money .
converts a double representation of the string } .
converts a double to a string .
converts a double to a string .
converts the given long ) to a string .
shuts down all resources .
creates an observable to create an observable .
writes an observable to the output stream .
{
verifies that the current block is temp .
gets the id of the namespace .
returns true if the server is a query .
sends the authentication request .
gets the verb verb .
generates a subject access review review .
handles the request result .
handles a request failure .
initialize the session .
returns a single {
finds all scheduled jobs in the given time .
returns a list of { @link map into a { @code map } objects } objects .
submits a job job .
filters a pattern that contains the given input .
loads the replication .
ends the end exchange .
parses a {
{
applies micro batching batching } to the observable .
applies the retry policy to the observable .
creates a number of the number } with the number of buckets in } s range .
/ * [ deutsch ] <p > erzeugt eine { @code start } . < / p >
/ * ( non - javadoc .
sends a message .
send a delay message )
/ * ( non - javadoc )
check if the given pattern matches the given pattern .
extracts the bamboo bamboo for the given map .
detect the travis travis travis .
sets the value of the property .
adds a file to the file .
replaces the given text in the given file .
creates a new file .
generates a { @link metrics .
generates a set of metrics } .
generates a new { @link metrics } of { @link enumeration } .
{
{
{
{
generates a new { @link file } of the given iterator .
creates a file in the given parent directory .
{
prepare the group .
registers the adaptor for the given type .
registers a renderer .
creates a template .
/ * ( non - javadoc )
sets a property .
adds a child object .
convert a date to a iso iso iso - 8601 string .
convert a string to a date .
creates a { @link supplier .
creates a {
creates a new { @link assembler }
returns a {
creates a {
creates a {
creates a {
creates a {
creates a {
creates a { @link assembler } that contains the given { @link assembler } with the given { @link prototype } .
creates a { @link assembler } that contains the given { @link assembler } s with the same as { @link pdi } .
creates a {
creates a {
creates a {
copies all bytes from the given input stream to the output stream .
creates a new {
parses the given file into a document .
parses the given { @link document .
returns a stream consisting of the elements of this node .
returns a stream of nodes that are in the given parent element .
returns the first child element of the given parent element .
returns a stream consisting of all elements that are named elements .
validates that the given input stream .
create a new {
create a new { @link archive } using the given application name .
creates a new { @link yaml } from the given yaml } .
creates a new { @link yaml } from a { @link file } .
*************************************************************************
{
creates a new { @link content } object .
process the given entry into a zip file .
encodes the given string into a string .
generates a authorization signature .
generates the authorization authorization signature .
generates a signature for the signature .
generate
generates a signature of a signature .
checks if the download request is download .
sets the signature of the signature .
encodes a byte array into base64 encoded string .
decodes a string into a byte array .
removes the white space from the array .
puts a file into the file .
puts a file in the cache .
puts a file in the file .
sign the request .
sets the data to the given object .
completes a multi - upload upload .
puts a file in the bucket .
{
returns a set of favorite notices .
sets the favorite notices .
returns the configured comparator .
adds the entry to the notification .
creates a response response .
creates a notification entry .
returns true if the timeout has expired .
returns true if the notification contains the given entry .
{
fetches the jpa proxy from the entry .
adds all entries in the notification entries to the notification .
list all notifications for a specific page
create a new notification .
get the notification notification .
get the addressees
adds a addressee
get the addressee for a given addressee
list events by notification
get the event
/ * ( non - found )
returns the url of the request .
{
this method .
/ * ( non - javadoc )
parses the oidc token .
initialize the notification .
sets the ssp context .
/ * ( non - javadoc )
{
gets the authentication token .
finds the notification entry by id .
combine the given { @link notification } .
filters all errors that match the list .
filters all notification that match the given predicate .
returns the size of the categories .
adds all categories to the list of categories .
clones the current notification if the same as {
/ * ( non - javadoc )
/ * ( non - javadoc )
notification that the error error .
maps a notification to a notification .
maps a notification entry to the notification .
attaches the actions to the request .
normalize a link .
gets the notification category .
gets the notification source source .
evaluates the redirect uri .
{
returns a set of read notices .
{
fetch the notification from the classpath .
read a notification from a file .
get the response from the service .
/ * ( non - javadoc )
returns the school id for a portlet request .
extracts the user id from the student .
/ * ( non - javadoc )
{
calculates the hide duration of a notification entry .
check if the given entry is snoozed .
hides the given notification .
returns a list of the attributes .
normalizes the given vector .
checks if the given point is contained within the given point .
check if two box are contained in the supplied box .
computes the closest point of the point .
returns the sign of the geometry .
sets the se3 of this matrix .
sets this matrix of this matrix .
set this matrix to a matrix .
transforms this { @code point3d } .
transforms the given { @link point3d } into a { @link point3d } .
transforms the content of this matrix to a { @link vector3d } .
returns a geometry of this matrix into a { @link geometry } .
converts the specified { @link quadrilateral into a } .
converts the given { @link rectangle2d } to a { @link polygon2d } .
converts the given { @link polygon2d } to a { @link quadrilateral } .
converts a rectangle to a rectangle
computes the bounding box of the given rectangle .
computes the bounding box of the given rectangle .
computes the center of the center of the specified center .
returns true if a polygon is in - place .
computes the average of the average in - place vertex .
returns true if the matrix is identical to see { @code b } .
returns true if the matrix is equivalent to a .
<p > sparse matrix .
<p > = a * x = - axis of - vertexes of - a .
<p > down all the down of the provided array .
computes the convex hull of a list of hull .
removes a polygon from a polygon .
removes all duplicates of a polygon
returns true if the given polygon is adjacent duplicates .
computes the average of the closest point of the closest point .
converts a matrix into a homography2d matrix .
converts a matrix to a matrix matrix
computes the area of the area .
compute the inter of the inter .
returns the point on the line .
returns true if the given a polygon .
returns true if the polygon is in the same as the polygon .
returns true if this matrix contains the given triangle .
returns true if two points are equal to the same triangle .
computes the intersection of a line .
returns the intersection of a line .
compute the intersection of a line .
returns the intersection of a line .
computes the intersection of a line in a line .
computes the intersection of a line .
computes the intersection of the intersection of the area .
checks if two vectors contains the given .
returns true if the vector is a and a vector .
returns true if the matrix contains the given ellipse .
returns true if the two vectors are equal to { @link rectangle2d .
returns true if the two vectors .
computes the intersection of the intersection of the intersection .
compute the intersection of a line .
convert a {
convert a rodrigues to a matrix
convert a matrix to a euler matrix
convert a quaternion to a quaternion .
convert a quaternion to a rodrigues .
converts a quaternion to a euler matrix .
convert a matrix to a euler matrix
returns the double value at the index of the given index .
convert a matrix to a quaternion matrix
convert a matrix to a rodrigues .
computes the x - wise * x = r * r * x = r * r * r * x * r * x - d - d - x - d - x - d - d - d - y - d - d - d - x - d - d - d - x - d - d -
sets the rot x = r matrix .
<p > y - wise matrix .
<p > sets the z matrix to - place .
sets the rot z matrix .
convert a euler matrix } to a matrix .
sets the rotation of a rotation matrix .
creates a rotation matrix .
convert a matrix to a matrix .
sets the angle of the angle .
returns the point on the line .
computes the homogenous matrix .
computes the homogenous matrix .
compute the exponential motion of - coordinate .
convert a {
sets the transforms of this matrix .
sets the where where the matrix to the matrix .
enforce the extents of the extents .
convert a polygon2d to a world queue
computes the polar line of a line of the given line .
computes the svd of the given a list of the specified in - place .
solves the point in a point .
returns the length of the side of the specified index .
returns true if this point is inside this convex .
returns the line at the specified index .
converts a list of storage to a } .
sets the list of elements in the list .
converts a matrix to a new matrix
converts a { @link object into a { @link object } .
converts a { @link dmatrix3x3
<p > converts matrix into a { @link conic .
converts a { @link conic into an { @link parabola }
converts a source source source into a { @link object }
converts a {
returns the cross - wise matrix .
computes the cross matrix of a matrix .
computes the cross - wise of two vectors .
computes the cross - wise of two vectors .
<p > adds another element to a vector .
adds a new element to the matrix } .
adds a new matrix to the matrix .
computes the sub - wise = a + b
rotates the rotation around the given solution .
rotates a rotation around the given solution .
creates a new matrix from a new matrix .
<p > performs a matrix in a matrix . < / p >
<p > performs a matrix in a matrix .
<p > creates a matrix from a matrix . < / p >
create a new matrix from a new matrix .
computes the inner decomposition of a matrix .
<p > returns the outer outer matrix .
<p > adds a matrix to a matrix .
computes the inner decomposition of a matrix .
scales a vector by a vector .
divide the two - dimensional .
changes the sign of the sign .
convert a matrix to a matrix
convert a matrix to a tuple3d matrix
sets the vector of this matrix .
convert a double to a half circle
computes the bound of two vectors .
returns the bound of two points .
returns the bound of the given angle .
returns the bound of the given angle .
computes the distanceccw of a vector .
returns the distanceccw of a vector .
returns the distancecw of a vector .
returns the distancecw of a vector .
computes the minus function .
computes the minus - wise of two vectors .
returns the half - wise half - wise of a .
convert a double value to a one .
returns true if the plane is inside the plane .
returns true if the plane is inside the plane .
returns true if the plane are equal to the same plane .
returns the intersection of a * x in a * x = b
returns the intersect of two vectors .
returns the intersection of two vectors in - place in the two vectors .
returns the convex of the given line in a polygon .
returns true if the plane is a plane of a plane .
check if the given point is contained within the supplied box .
checks if the given box is contained within the given box .
returns true if the line is intersect .
<p > = a * b
extracts the quaternion from the matrix .
process the hull .
returns the cross - wise of the cross - wise of the two vectors .
sets the covariance of the covariance .
sets the motion to the given se3
convert the specified { @link se2 }
convert a matrix to a homogeneous matrix
converts a matrix into a se3 matrix
convert a matrix to a homogeneous matrix
converts a matrix to a se2 matrix
apply a euler of a vector .
/ * xyz * x = dx
returns true if a matrix is identical to a .
computes the best fit of a fit .
computes the distance between two points .
calculates the distance between two points .
convert a { @code vector }
evaluates the circle of a circle
returns true if the circle is a circle .
returns the radius of the circle in the circle .
returns the closest point of a line .
returns true if the line is closest to a line .
computes the closest point of a line .
returns the closest point of a line .
computes the closest point of a plane .
computes the closest point of a plane .
computes the closest point of the plane .
computes the closest point of a line .
computes the closest point of a line .
computes the closest point of the two points .
computes the closest point of a plane .
transforms a matrix into a matrix .
transforms the given { @link point2d .
transform the transformation in a matrix .
transforms a transformation into a vector to each element .
transforms a list of points into a list of each element in the given list of points .
returns a {
transform a matrix to a matrix .
<p > = reverse < = a * x = b .
converts a list of storage into a list .
sets the list .
returns true if this matrix is equals to another matrix .
returns the acute of a line in a line .
returns the acute angle of a line .
converts a line into a { @link line } .
converts a line into a { @link line }
converts a line into a line .
converts a { @link line
converts a { @link line into a { @link line }
converts a { @link line } to a line
converts a { @link line into a line
converts a { @link line }
converts a { @link line }
converts a line into a line
converts a plane to a plane
converts a { @link plane } to a {
converts a { @link plane } into a plane
converts a {
computes the hessian form of the plane .
computes the plane of a plane .
evaluates the plane of the given plane .
selects the axis2d of the given axis .
sets the plane in the plane .
sets the x - axis in - x - axis .
convert a {
returns true if this matrix is identical to the given dimension .
{
returns the total number of norm of this matrix .
converts a line into a line into a line .
computes the line of a line .
/ * ( non - javadoc )
returns true if this matrix is equivalent to {
returns a line of a line .
returns the area of the area .
returns the center of the center of the center .
returns the acute angle of a line .
converts a list of a list of { @link se2 } .
takes a list of motion into a list of motion .
returns true if the matrix is infinite .
returns a random n - n - n - n .
converts a { @link point4d } to a { @link point3d } .
transforms a transformation to a matrix .
transforms a transformation to a matrix .
computes the acute of the acute .
computes the output of the specified by - wise matrix .
returns true if the identical to sign .
sets the rectangle .
/ * ( non - javadoc )
computes the dot product .
converts a { @link ellipse
converts a {
evaluates the result of the ellipse .
evaluates the given ellipse .
computes the point of a point .
computes the angle of the given ellipse .
computes the tangent of a given ellipse .
returns true if the lines of the two - dimensional .
<p > returns true if - decomposition is tangent in a - place matrix . < / p >
computes the iteration of a rotated .
computes the intersection of the center .
selects the intersection of the two tangent .
enforce the extents in - place .
returns the distance2 of this vector .
computes the best fit . < = a .
returns the corner at the specified index .
compute the distance between two points .
calculates the distance between two points .
calculates the distance between two points .
calculates the distance between two points .
computes the distance between two points .
computes the distance between two points .
computes the distance between two points .
sets the point of the line .
gets the point on the line .
returns the distance between two points .
calculates the distance between two points .
calculates the distance between two points .
returns the distance between two points .
calculates the distance between two points .
computes the distance between two points .
computes the distance between two points .
calculates the distance between two points .
computes the distance between two points .
computes the distance between two points .
computes the distance between two points .
computes the distance between two points .
calculates the distance between two points .
calculates the distance between two points .
returns the origin of the two points .
computes the distance between two points .
computes the distance2 of the rotated .
adds a transform to the list .
computes the closest point of a line .
computes the closest point of a line .
returns the closest point of a line .
computes the closest point of a line in a line .
computes the closest point of a line .
computes the closest point of a and ellipse .
computes the output of a matrix .
{
creates a new random matrix .
computes the output of a vector .
returns true if the matrix < / sup > t< / sup >
normalizes the given vector .
creates a new matrix from a matrix .
converts a matrix to a matrix
returns the acute of a acute .
sets the vector to a * x = b .
creates a new instance of this } with the specified element and y } .
create a new instance of this matrix with the given scalar scalar ) .
returns true if the two vectors are equal to see { @link rectangle2d .
returns true if two vectors .
returns true if the polygon is convex .
returns true if the polygon is concave .
checks if the given rectangle contains the rectangle .
returns true if the given rectangle2d } contains the specified element .
creates a new { @link instance
computes the distance between the two points .
sets the ellipse .
computes the center of a point .
normalizes this matrix .
{
returns the triangle of the triangle .
computes the triangle of a triangle .
returns the simple polygon of a polygon .
computes the mean of a list .
computes the mean of the given list .
computes the mean of the mean in the result in the mean .
calculates the bounding box of the given rectangle .
calculates the bounding box of the specified list .
sorts a list of points in a list .
computes the normal normal covariance .
returns a list of norm from a random covariance .
sets the value of this matrix .
normalizes this matrix .
/ * b
computes the bounding box of the specified list .
bounding
returns true if the polygon is a polygon .
<p > = a * b
returns true if the matrix is convex .
returns true if the two points .
returns true if this matrix is identical to a .
returns true if the two vectors are equivalent to see {
computes the mean of a list of the mean .
sets the x = a * x = a + b
sets the scalar scalar .
returns the maximum value of this matrix .
returns true if - work matrix .
returns true if the polynomial is a polynomial .
returns true if the matrix .
fit a vector
computes the distance between two points .
calculates the distance between two points .
returns a list of the specified plane .
returns a list of the specified mean .
returns a list of n - n - n - n - n - n - wise .
computes the mean of a list of the mean .
computes the mean of a list of a list of points .
sets the bounding box .
invalidate all credentials from the given credentials .
invalidates all jwt from the given predicate .
returns a collection of strings into a set of strings .
returns a set of server features that are dropins .
returns a list of config features from the given folder .
/ * xml features of the server .
parses a set of the include node .
parse a set of features from the given node .
downloads all the downloaded and returns a plugin .
downloads a jsons from the given product .
checks if the given set of the given a plugin .
get a set of liberty features for the given in the given file .
checks if the given list of features are open .
checks if the given reference contains the given reference .
installs all features } .
/ * ( non - javadoc )
get the next product version from the given version .
extracts the symbolic name from a jar file .
installs a map of files in the given file .
checks if the given file is a replacement jar .
extracts the version of a file name .
compares two strings .
checks if the product info .
returns the product info for the given action .
checks if the given artifact is a spring uber
returns a map of all the properties of a map .
returns the arquillian for the given key .
/ * ( non - javadoc )
ask
shows the mesage .
parse a rtf file from the given object .
{
draws a shape with the specified length .
draws the tortoise .
check if the pizza is pizza .
moves the length of the given length to the center to the center of the given .
moves the given length to the start of the given length of the square .
moves the back to the center .
check if two objects are equal .
display a rtf file .
loads a string from the given string .
returns a random int from the specified range .
returns a pizza if the party is a pizza .
returns true if the given topping is topping
checks if the given file is a directory .
creates the color palette .
draws the octogon .
verifies that the given image is valid .
returns the distance between two points .
returns a new vector of the target cells .
returns the distance in the goal .
sets the sound sound .
play the sound sound .
send a printf message .
send a printf message to the specified locale . < / p >
*************************************************************************
shows the image icon .
draws a line in the specified line .
sets the pixel in the specified scale .
draws a point .
draws a circle .
draws the specified axis .
draws the image with the specified location .
draws the image at a certain location .
draws a rectangle .
draws a polygon .
draws an image at a file .
draws a picture in the image with the image .
draws a text .
rotates a text in a text .
saves a filename to a file .
print a variable .
sets the tortoise .
sets the color wheel .
draws the inner tkp .
draws the outer tkp .
draws the right bracket .
draws the tkp .
draws the tkp .
adds a turtle to the frame .
create the palette palette .
adjusts the pen .
draws the pentagon .
set the number of speed .
move a new point to the specified amount .
draws the lightning .
{
returns the weave of the specified length .
draws the triangle .
returns the number of <code > = a + b
returns the value of the two vectors .
returns the number of the given double .
calculate the poisson of a given lambda .
returns the number of an array .
*************************************************************************
sets the asset .
connect to open the connection to the asset .
capitalize
capitalize
create a robe
updates a user dao
merges the user with the given id .
returns a criteria of the query .
returns a criteria of the given search model .
returns a new {
finds all the strict in the given search .
find
finds all the elements in the specified search .
finds the given entity by id .
fix the path to the path .
{
creates a new {
updates the hibernate job .
resume a trigger .
joins a criteria to a string .
get
/ * ( non - javadoc )
extracts the auth token from a cookie list .
registers all guice bound bound to the given environment .
login
logout a user .
returns the unit of the user .
changes the password .
{
get all role permissions for a given role .
/ * ( non - scheduled )
gets the entity for a given id .
get a list of triggers ) for a given id .
schedule
pause the job .
resume a job .
dispatches a method .
adds a projection to the list .
returns a list of permissions for the user .
create a new robe
returns a {
creates a new {
sets the {
sets the start of the start of the trigger .
send a mail item .
/ * ( non - javadoc )
{
initialize the scheduler .
returns a list of a class .
returns a map of all the given class .
/ * ( non - javadoc )
{
returns a list of permissions for the given role .
create a new role
create a new robe
refresh all the given path .
/ * ( non - javadoc )
configures the given {
generates the attributes of the attributes .
generates a string string .
{
{
verifies that the given user has the password .
generates a strong password .
change the password of the user .
get a user by name .
hash
verifies that the given account is valid .
verifies that the given the password .
sets the asset .
hashing
loads the asset from the file .
loads the asset to the cache .
fill the cache .
/ * ( non - javadoc )
{
creates the reflections .
finds all scanners in the given {
dispatches the given {
dispatches the given {
stores the previous session .
configure the new session .
/ * when the transaction is success .
/ *
finish the session .
start
returns the hierarchical menu for the given robe
get the list of strict credentials for the given search .
create a robe }
/ * configure
checks if the given method is authorized .
{
checks if the given token is valid .
create a new { @link robe
save
/ * ( non - javadoc )
returns the response .
creates a new restriction with the given name and value .
creates a new { @link restriction } .
creates a new {
creates a new restriction with the given name .
creates a new { @code value } with the given value .
creates a new { @link restriction } with the given name and value .
creates a new {
creates a new { @link restriction } with the given name and value .
adds a namespace manager to } with the given namespace .
returns a copy of { @link resource } with the specified { @link string } .
returns a new { @link resource representation of this resource .
returns a copy of the specified uri .
creates a new resource with the specified properties and properties .
create
returns a link to the resource .
returns a resource representation of the links with the given link .
returns a copy of this resource with the specified value .
adds a namespace to the resource .
returns a copy of { @code copy } .
returns the root cause of the given throwable .
returns a list of { @link throwable } of the given throwable } .
returns the stack trace trace .
returns an unmodifiable list of elements from the stack .
wrap a {
encodes the given object into a byte array .
decode the given byte array into an object .
encode
check if the given byte array can be decode .
encodes a string into a byte array .
encodes a string into a string .
encode a byte array of bytes .
encodes a byte array into a byte array .
decodes an int from exactly 8 bytes .
decodes a long from exactly 4 bytes .
copies the content of the given input stream to the given writer .
copies the contents of the given input stream to the given writer .
copies the contents of the given reader to the given output stream .
copies the contents of the given reader to the given output stream .
checks if the given reader are equal .
reads a reader from a reader .
reads the content of the given input stream . inputstream } object .
reads the content of an inputstream } .
reads all lines from a reader .
reads all lines from the given input stream .
reads all lines from the input stream .
creates a new {
creates a new {
creates a new {
creates a new {
copies all files from a file to the destination directory .
copies the contents of the given file to the given output stream .
copies the contents of the given input stream to the given input stream .
copies the contents of a file to the given file .
deletes all files in the given file .
touch the given files .
reads the contents of the given file .
read a byte array into a byte array .
checks if two objects are equal .
gets the base name of a file .
creates a new { @link stream } from a { @link file } .
reads the contents of a file .
parses the given input string into a string } object .
creates a media type .
returns the charset of the charset .
adds a media type with the given value .
returns a new media type with the given parameters .
returns a new media type with the given attribute .
returns a new { @link map } object .
returns true if this { @link media } is a { @link .
concatenates elements into a {
returns a {
returns an iterable that returns an iterable of the given elements .
returns true if they are equal .
returns a {
returns a {
returns a iterable to a list .
returns a iterable to a set .
returns a iterable to a bag .
adds the padding to the buffer .
returns an immutable copy of the given collection .
creates a copy of {
returns an immutable copy of the given iterator .
creates a copy of { @link list of the given values .
returns an immutable list of { @link { @link list .
head
head
reads the head of lines from a file into a list of lines .
return
reads a list of lines from the given file .
new
creates a new {
new
reads the contents of a file into a string .
reads all lines from a file .
creates a new { @link urn } .
finds a resource by name .
finds a resource with the given name .
copies the content of this {
copies the contents of the given writer to the given writer .
reads the contents of bytes from the stream .
reads the content from the input stream .
reads the lines from the url .
returns true if the given calendar is a same instant .
checks if the given date is local .
returns true if the given calendar is local time .
checks if the given date is a same as a calendar .
checks if the given year is same as a day .
checks if the given date is a same as a calendar .
checks if the given calendar is a } .
checks if the given date is a same as a calendar .
checks if the given year is same as a month .
checks if the given date is a same as a calendar .
checks if the given year is a same year .
parses a string representation of a date .
parses a string representation of a given { @link date .
format
to
concatenates elements into an iterator .
concatenates elements into an iterator .
returns an iterator over the elements of elements in the iterator .
creates an iterator over the elements in the source elements .
returns true if they are equal .
returns an iterator that iterates over the elements in the iterator .
counts the number of the given iterator .
returns a set of elements from the elements from the given iterator .
creates a bag view from the given an iterator to the iterator .
checks if the given string is blank .
convert a string representation of a string .
concatenates the given {
returns the distance between two string .
generates a random string of the given length .
returns a string of the given string with the given count of the given count .
randomly randomly randomly shuffle .
removes the given string from the given string .
removes all occurrences of the given string from the given string .
strip the right characters from the given string .
trims all occurrences of the given string .
trims all occurrences of the given string .
pad the given string with the given pad character .
pad the given string with the given the given string } to the given pad pad } .
quote the given string .
<p > unquote
counts the number of occurrences of the given string in the given string .
creates a new { @link url } .
relativize
resolves a url to the given path .
gets the qualified name of the given class .
returns the name of the given class .
returns the package name of the given class .
gets all super types of the given class .
returns an unmodifiable set of common super types .
verifies that the given password is valid password .
reads a string from a charset .
appends a byte array to the buffer .
appends a byte array to the buffer .
returns a byte array ) bytes in the given array into a byte array .
concatenates the given array into an array .
concatenates the given array into a single array .
copies the given array of <code > inclusive inclusive inclusive
copies all elements from the array into a new array .
copies the given array of {
reverses the given array of elements .
reverses the elements of the array .
rotate a copy of an array with the specified distance .
rotate a copy of the given array .
randomly randomly randomly randomly randomly randomly randomly randomly randomly ) .
sorts the given array using the given array .
sorts the given array using the given comparator .
convert an array of long array to a primitive array .
converts an array of <code > to a primitive array .
converts an array to a primitive array .
converts a character to a character array .
convert a byte array to a primitive array .
converts a boolean array to a primitive array .
converts a float array to a primitive array .
convert a double array to a primitive array .
converts an array of primitive arrays
convert an array of <code > string< / code >
converts a short array to an array .
converts a char array to an object array .
convert a byte array to a byte array .
converts a boolean array to an array .
convert an array to an array
converts an array of double array .
decodes a byte array into base64 encoded string .
is
checks if the given string is a numeric .
converts a string to a lower case .
returns a new encoding with the specified separator .
encodes a byte array into a byte array .
decodes a string into a byte array .
decodes a string into a byte array .
returns a new fraction ] } with the specified integer .
parses a string into a string .
returns a new fraction with the specified fraction .
returns a new fraction with the specified fraction .
returns a new { @code fraction } with the specified { @code f } .
returns a new fraction that is the same as the specified fraction } .
returns a new fraction with the specified exponent .
returns a copy of this fraction .
returns a new fraction of this fraction .
returns an immutable copy of the given the given collection .
returns an immutable copy of the elements of the given iterable .
returns an immutable set of the given iterator .
returns an immutable set of the elements in the array .
returns an immutable set containing the given values .
parses a duration from a duration .
/ * [ deutsch ] <p > erzeugt einen { . <p > erzeugt einen { . < / p >
creates a new { @link duration } with the given { @code duration } .
between
returns the maximum number of the given long value .
returns the minimum value in the array .
returns the number of the given number of parameters .
returns the number of the given long value .
returns the number of the given value of bytes } .
returns the number of bytes in an integer value .
subtracts the result of two numbers .
returns a new { @code long } with the specified number of { @link long .
returns a new {
<p > returns the result in - <code > ij< / sup > .
<p > returns the result of the specified number of elements of the second .
returns the number of times the result .
returns the gcd
returns the number of gcd in a gcd .
returns the number of <code > = b
converts an integer to an integer .
checks that the given object is not null .
checks if the given condition is a condition .
checks if the given type is an instance of the given type .
checks that the given object is a valid type .
returns true if the given { @link boolean .
returns true if the xor is xor .
returns true if the given string is a boolean .
compiles a splitter .
creates a new { @link splitter } with the given pattern .
returns a new {
returns a new splitter with the specified prefix .
returns a new {
returns a new {
replaces all occurrences of the given {
splits the given string into a list of strings .
returns a comparator that applies } to the given { @link comparator .
returns a { @link iterable } into a { @link iterable .
reverses the given comparator .
returns a comparator that compares the natural { @code null .
returns a comparator that compares the given comparator .
returns a {
returns a new {
returns an {
replaces all occurrences of the given string with the given suffix .
replaces all occurrences of the given string with the given prefix .
returns a new { @code joiner } with the given prefix .
joins the parts of parts into a string .
creates a new digest based on the given algorithm .
converts a algorithm to a mac mac .
creates a copy of the given a collection .
returns a copy of an immutable elements .
returns an immutable copy of the given iterator .
creates a copy of the given values .
creates a new { @link bag .
returns the relation href .
handles a json exception .
reads the body from the response .
{
gets the hal client .
{
{
gets a resource .
get a resource from the cache .
invokes the aws request .
{
gets the object for a boolean .
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the type of the given type .
convert a type to a null object .
{
{
fetch the content of the meteo
fetch the content of a meteo .
fetch the content of a meteo .
finds a list of hourly that are forecasts from hours .
finds the nearest forecast forecast for the given time .
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link tidalwater } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link precipitation } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link score } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link windspeed } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link cloudiness } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link cloudiness } { @code > }}
fetch the content .
creates a new { @link meteo } instance based on the given { @link meteo } .
creates a new { @link meteo .
constructs a { @link location from a { @link java .
fetch content content .
create an instance of { @link jaxbelement } { @code < } { @link probability } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
returns the name of a point name .
finds the beaufort level of the given point .
creates a uri from the given uri .
checks if the current date is sun .
gets the forecast forecast forecast .
returns the widest forecast forecast for the given date .
/ * [ deutsch ] for the given date .
{
fetch the content of a meteo .
gets the file extensions of a given decoder .
convert a file name to a file .
this method to find the database .
evaluates a script .
invokes a string method on the given arguments .
{
returns a new instance of a given class .
returns a wrapped object that matches the given class .
{
call the remote configuration .
{
get the complete config for the given class .
gets the config from the configuration file .
returns true if the configuration is enabled .
{
{
get a service .
gets a service .
gets a service instance of the given intf .
returns a list of services from the given class .
get the module for the given interface .
{
{
returns a wrapped data object .
returns the index of the given index .
returns the prefix at the given index .
returns true if this type of the same as a compiler .
exec
finds the dfa in the dfa .
returns true if the dfa is a dfa .
checks if the dfa is a dfa .
subset
returns true if the given {
returns true if the dfa is a dfa .
check if the dfa of the given in the dfa .
returns true if the given {
returns true if the given a dfa .
returns true if the match is a number of the given match .
checks if the dfa is a dfa .
compute the nfa of the arc .
nfa the given nfa .
/ * optst
returns the number of the given short in the given short .
sets the flags of the given {
return
compact
parse the given a state of a branch .
/ * compute a subre .
/ * parseqatom : type
sets the nfa state of the nfa .
compute the nfa arc to the arc to be used in the arc .
/ * nonword
word
returns the number of bytes in the regex .
/ *
wordchrs
/ *
/ * brackpart
returns the see https : // www . org / html
/ * cbracket
/ * add
/ * nfa
this method .
compiles the given { @link pattern .
compiles a pattern .
returns the arc of the specified type .
returns the number of bytes in - place .
get the pseudo - 1 ) of the color .
/ * this method will be used to convert of the range
/ * convert a short to a short
/ * ( non - javadoc )
this method is used to a color of the color
sets the arcs of the arc .
sets the arc of the arc .
sets the color of the given nfa .
sets the color of the given {
/ *
print a color of a color .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
check if a character is a valid .
/ * ( non - javadoc )
return
returns the number of the given codepoint .
initialize the state .
sets the miss of the specified state .
longest
returns the number of seen sets of the ss .
eclass
creates a new {
cclass
sets the arcs of the arcs in the arcs .
returns a string representation of the nfapresent object .
resets the state of the region .
returns a new {
sets the state of the arc .
sets the state of the arc .
sets the state of the arc .
sets the state of the arc .
/ *
set the state of the given state .
sets the {
stops the state of the state .
applies the arc to the arc .
sets the state of the state .
this method .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the state of the given state .
return the number of a ) position in the specified position .
appends a string representation of a string .
/ *
returns the number of )
/ * ( non - javadoc )
/ * arc of the arc .
/ *
pushes the arc to the arc .
combine the given arc .
cleans up all resources from the post .
marks the state of the specified state .
marks the state of the specified state .
computes the arc of the arc .
returns true if the arc is a valid arc
loads the rule parameters .
returns a map of plugins interpreter plugins .
returns a map of plugins for the plugin .
get the rule selection selection .
main method .
{
returns the error message .
gather a new options .
gather standard options .
gather tasks to gather tasks .
generates a string representation of the task names .
interpret the command line .
parses the command line arguments .
execute a task .
read properties from the properties file .
prints the usage usage .
gets the home directory .
creates a plugin class loader .
parses the given a list of resources .
write a geometry to a geometry .
creates a reversed polygon .
returns a set of ids of the containing the containing the containing the ids .
returns a set of intersecting ids of the given in the given longitude .
returns true if the given point is in the polygon .
/ * ( non - javadoc )
returns the uri of the given object .
connect
connect
adds a new route to the specified path .
removes a path pattern from the path } .
removes the specified patterns from the list of the target set .
returns the size of the routes .
adds a route to the route
adds a route to the list with the specified path .
adds a route to the route
removes the path from the path } .
{
checks if the given request path path .
/ * ( non - javadoc )
asserts that the given property is null .
returns the store file name .
gets the store file .
gets a bookmark set .
returns a list of sorted children of this list .
compares the given entry .
compares two entries .
compares the given entry to the given entry .
gets the preferences .
returns a list of children that are sorted by this document .
returns the description of the description .
sets the last modified modified time .
loads the tag file .
loads a class prototype from the prototype .
<p > returns a list of )
jsp
parses the given {
adds a list of the given node .
receive notification of an element .
appends the contents of a specific offset to the character array .
receive notification of the end of an element .
receive notification of a comment .
receive notification of the locator .
receive notification of validation .
receive notification of prefix .
receive notification of the prefix .
parse a standard action .
parse a custom action .
adds the taglib info to the uri .
checks if the scripting body is scripting .
processes a include directive .
checks if the given uri is valid .
checks if the given uri is valid .
creates a saxparser object .
loads a class from the classpath .
finds a class from the classpath .
loads the class data from the file .
wraps a callable in the given { @link callable .
wraps the given {
parses the authorization request .
returns an instance of { @link class } instance } .
maps a function to a function .
returns a map of { @link function for a given function .
resolves a function .
sets the values of the char array .
sets the values of the xmlstring .
/ * ( non - javadoc )
resolves a variable .
parse the given {
parses the given {
parse a page file directives into a tag file .
parses the given jar file .
compares the page encodings .
returns the jsp config encoding .
determine if the syntax and encoding of the jar .
returns the page encoding for the jsp syntax .
returns the page encoding from the directive .
resolves the file name of the file name .
checks if the given reader has a jsp root .
creates a new compiler .
get the resource as a stream .
returns the location of the given uri .
increments the current uri .
compiles the given file .
loads a class .
reads the next byte from the stream .
reads characters from the stream .
calculates the last mod of the last mod of the last mod .
finds the class loaders .
checks if the class loader loader loader .
start the given name .
reads the stream header from an input stream .
reads bytes } from the stream .
returns the number of bytes in the stream .
{
return
{
converts a meta key from a string .
fill the requirements .
builds the lead .
get the tag library infos .
get the tag file file ) of the tag .
parse the implicit tld tld .
returns the checksum of the specified file .
returns the size of the specified file .
validates that the given channel is valid .
skips characters from the stream .
returns the number of the encoder in the number .
returns the number of the decoder in the number of the given decoder .
reads bytes } from the stream .
returns the number of bytes in the stream .
/ *
seek the block to the block
--------------------------------------------------------------------------------------------
locate the block by pos the given position .
locate block by number of the given block .
initialize the block decoder .
generates the collection of iterators .
generate the iterators .
gets the maven artifacts for the given channel .
check if the artifact is a zip .
converts the opts to a opts .
updates the state of the state of the state .
/ * calc1byte the literal .
calculates the number of prices in the given price .
calculates the number of the normal match of the given price .
/ * bytes from the stream .
{
/ * ( non - javadoc )
{
reads a byte from the stream .
reads a character from the stream .
throws an {
throws an invalid byte array is invalid .
returns the location of the uri .
scans all the tlds .
processes the web - xml .
scans the jar file .
process tlds in the file - system .
scans the tld for the given entry .
scans all jars in the classpath .
adds a manifest class path to the list of the manifest .
adds a wrapper to the jsp ) .
returns the parent class loader .
set the specified bytecode .
returns the bytecode of the given time .
saves the bytecode of the given class name .
check if the jsp engine .
initialize the class path .
initialize the security policy .
starts the thread .
stops the thread .
run the thread .
finds the channel that matches the given id .
finds a channel by name .
finds a channel that matches the given channel .
deploys the cache cache cache .
{
{
copies all bytes from the given input stream to the given output stream .
copies all bytes from the given appendable to the given appendable .
parses the given { @link node } into a { @link node } object .
parse the attributes
parses the given { @link inputstream .
parses the attribute .
parses the name of the name .
parses the attribute value .
parse a quoted string .
processes the include directive .
parse the page directive .
parse the include directive directive .
adds a list of the given node .
parse the taglib directive .
parses the directive file .
parses the xml file .
parse a tag directive .
parses the attribute directive .
parse a variable directive .
parse a comment .
parses a declaration .
parses the xml file .
parses the given expression .
/ * parseelexpression
parses the given node .
parses the given node .
parses the include include the given a node .
parses the given node .
parses the get property .
parses a set of set of spaces .
parses the empty body .
parses the use bean .
parses an optional optional body .
parses the jsp attribute and parse attribute .
parses the jsp params .
parse the fall back to the given node .
parses a plugin .
parses the plugin tags .
parses the standard action .
parse a custom tag .
parse the template text .
writes a node to the xml file .
parses the elements of a node .
parses the elements of a node .
parses the elements of the elements in the given node .
checks if the end of the unbalanced .
parses the tag dependent body .
parses the jsp body .
parses the body of the body .
parses the named attributes .
returns the body of the attribute type .
returns the text attribute of the specified attribute .
returns the named attribute node with the given name .
gets the named attribute nodes .
adds a node to the parent .
returns a list of a list of the given context .
adds an attribute .
adds a child node .
returns the attribute with the given name .
returns a set of the attributes in the set .
finds the child node with the given name .
returns an iterator in - tree .
finds the children of the given name .
returns a new { @link maven instance .
finds the alias for the given variable .
sets the thread s thread .
unset the given thread to a string .
finds a stream of the stream .
writes an optional field in the given writer .
writes the given field to the given writer .
adds an element .
inserts the first element in the list .
gets the text of the specified element .
writes a character .
writes a portion of an array .
writes a string .
closes the underlying stream .
/ *
sets the writer to be used to set .
re
maps a compiler to a node .
gets the same parent parent state .
registers a new { @link storage } .
stream the contents of the input stream is closed .
monitor a monitor .
removes the path from the file .
authenticate the request .
checks if the request is authenticated .
reads a byte from the stream .
/ *
creates a new { @link gson } .
returns the number of the slot .
return true if the pending is started .
gets a string from a string .
gets a string as a map .
union
write a announce file .
gets the throwable .
introspect
creates a typed array with the given bean .
returns the value of a object .
sets the property expression .
returns the context relative to the path .
writes the given request to the given request .
reuse the given tag .
{
checks if the given coordinates is sum of the given coordinates .
{
finish the cache .
gets the exception .
evaluates an expression .
returns the prefix from the osgi properties .
check if the given path is xml .
parses a tag file and returns a tag information .
loads a tag from the given compiler .
{
removes the proto type from the given class file .
*************************************************************************
sets the uriroot of the file .
sets the jsp files .
returns a list of all the jasper .
merges the web xml file into the xml file .
scans all files in the given file .
returns the next argument .
initialize the class loader .
locate the uri of the uri .
initializes the system class loader .
removes all errors from the jsp fragment .
moves the number of the current position .
parse a new expression .
{
check if the given string matches the given string .
check if the given string matches the given string .
skips the next character in the next character .
mark the next character until the next character .
mark a skipuntiletag
parses a token .
check if the character is a delimiter .
registers a source file .
removes a source file .
pushes a file to the file .
removes a file from the current file .
creates a new {
adds a method binders .
returns a string representation of this file .
get
sets the preset preset .
sets the dict size .
set the lp
sets the number of this number
sets the mode of the mode .
sets the nice number of bytes .
sets the number of the match .
returns the usage usage usage of the memory .
/ * ( non - javadoc )
/ *
jsp
/ *
/ * ( non - javadoc )
jsp
throw an exception if the where the same ) .
javac an error .
dispatches an exception .
parses a javac message and returns an array of javac nodes .
returns a list of ids that match the given predicate .
returns a list of missing ids .
sets the schema resource prefix .
sets the dtd resource prefix .
returns a prefix into a string .
parsexmldocument
parses a xml document from a xml file .
converts the given node to a tree .
get the schema of a schema .
get a schema for a schema .
create a new binding .
merges all errors in the result into the given result .
adds a binder .
initializes the binder .
scan aspect informations informations .
generates a list of the class .
returns the path of a path .
invoke a plugin .
returns the array at the given size .
puts an array into the given cache .
returns a byte array at the specified size of the cache .
returns an int array with the specified in the given size .
prepares all dependencies that are used to be used to prepare the given path .
prepare a new plain artifact .
processes the specified import .
converts the given { @link collection } into a { @link aether } .
get the resource as a stream .
returns the library library infos .
/ * this method is used to find the tag information .
returns the location of the scanner for a uri .
create a tag file info .
validates the given page .
pushes a stream of stream to the stream .
removes the current stream from this mark .
get the encoding of a jar file .
create the initial reader .
returns the encoding name from a byte array .
/ * symbol .
/ * encoding of the scanning text .
scans the next character .
report an error message .
fills repo links of the specified channel .
fills the repo links with the given channel .
fills the links to the given channel with the specified prefix .
returns the real path of the given path .
get the url from the classpath .
gets the resource as stream .
returns a set of resource paths for the path .
log a message .
adds a servlet .
adds a filter to the filter .
updates the filters .
updates the filters in the filter .
/ * ( non - output stream .
end the end of the block .
flushes the output stream .
/ *
closes the underlying stream .
returns the size of the extra size in the extra size .
returns the number of the given the memory .
returns a new instance of {
sets the preset size of the preset .
moves the window .
fills the window at the specified position in the buffer .
process the pending bytes .
returns the number of the given the index .
returns the index of bytes in - memory position .
checks if the given matches the given matches the given matches of matches .
moves the number of the given finishing .
/ *
writes the buffer to the output stream .
clears the buffer .
flushes the response .
closes the response .
writes a string .
writes a character
/ * ( non - byte array )
write a portion of an array
allocates the char buffer .
returns a { @link lock the lock .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
resets the cache .
returns a message from the bundle .
get
gets the message .
gets the message .
creates a list of fields .
generate
generate the class .
compiles the given compile class } .
returns true if the given class is out of the given class .
removes all generated files from the class .
initializes the java compiler .
returns true if the system jar is in webinf
reads bytes } from the stream .
{
quote a char .
generates the declarations for the node .
compiles a list of a tag pool .
generates the tag handler .
generates the tag handler .
generate the preamble package .
generate the preamble imports .
generate the preamble initializers .
generate the preamble class variable declarations .
generate the preamble methods .
generates the preamble for the servlet .
generates the xml prolog for the xml page .
generates the constructor .
generate the common postamble .
generates the postamble for a node .
generates the xml tag .
generates the preamble handler for the given tag .
generate the attributes .
generate the set of the jsp context .
generates the set of set .
generates the scoped variables .
converts a string to a string .
returns the name of the attribute name .
reads the properties from the input stream .
exports a channel to the given output stream .
returns a new array with the given charset entry .
validates that the xml view .
returns a new instance ) instance of the given class .
reuse the given a ) tag .
releases all the handlers .
parses a string representation of a string .
parses a elnode nodes .
returns the string representation of a string .
parses a quoted chars .
returns the given property .
/ * ( non - based on the specified uri .
check if the uri is jsp page .
prints a comment .
print a string representation of a string .
print a string representation of a string .
prints a multi - line ln .
check if the given expression is an expression .
returns the xml expression from the given expression .
checks if the given scope is a valid .
checks if the given tag is valid .
escapes a string to a string .
returns true if string is a string .
convert a string to a class .
creates a interpreter call to the given expression .
validates that the given where the given function .
returns the class name of the tag .
make a java package name .
splits the given path into a string .
returns a string representation of a java identifier .
convert a char array into a string .
check if the given key is a java keyword . lang .
create a java identifier for the given name .
gets the canonical name of a class .
expands a list of the given list of the given manifest .
creates a random token .
adds a property .
write an xml document .
writes the xml definition .
gets the job for the given update .
returns a string representation of a prefix .
returns a set of metadata for the given key .
{
compiles the given request .
service
increments the error count .
{
checks if the given artifact has a key .
gets the basename of the specified name .
reads bytes from the stream .
{
{
{
returns a map of eligible eligible for a given locator .
returns the value associated with the given key .
{
loads the database from the cache .
builds a collection of { @link imetric } .
resolves a number of a number to a } .
serialize a string into a byte array .
writes the given object to the output stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the ttl for a given locator .
converts a map of points into a } .
creates the prepared statements .
/ * ( non - javadoc )
gets the bound statement for the given locator .
/ * ( non - javadoc )
track the delayed metrics .
track aggregated metrics .
reads a double from the input stream .
writes a double or long .
gets all properties of all the properties of this object .
creates the container .
{
{
{
schedules all slots of the given delay .
returns the next scheduled scheduled key .
push the back slots to the scheduled slots .
clear the slot from the shard .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
adds all metrics to the batch of the given metrics .
registers an event .
registers a listener that will be called when an event .
removes the given event .
emits the given event .
returns a list of callbacks listeners that have been callbacks of the given event .
returns the remote name of the remote host .
/ * event to the output .
parses a timestamp from a file .
starts the server .
returns the rollup type } of a { @link granularity } .
creates a new {
puts the given ttl into } to the ttl .
computes the count of the input metrics .
computes the input helper method that rollups .
creates a new rollup type from a { @link abstractmetricsrw } .
returns a bound statement )
computes the number of the given output formatter .
returns a string representation of a header .
formats a string representation of an array of outputs .
registers the metrics for the given object .
returns true if the time is connected .
prefetch locks of the locks .
waits until the quiesce to wait .
parses a string representation of a string .
returns the children of all children of this slot .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the name of the thread pool .
/ * ( non - javadoc )
adds a metric to the list .
returns the set of metric names of the metric names .
returns the dirty slots of the given shard .
returns a list of tokens from the given locator .
adds a batch of statements to the specified collection .
get the rollups for the given locator .
gets the values for the given locators range .
adds a rollup to the batch .
selects all the locators for the given locator .
selects a list of results in the given range of the given range .
converts a list of { @link table into a { @link table }
returns a new range with the number of the specified slot .
returns a new { @link granularity } with the specified { @link string } s ) and { @link interval } .
/ * [ - ] from } from the given { @link string } .
/ * [ { @link granularity } ) from the given points .
returns a granularity from equal from points .
compute the granularity of the linear points .
sets the server time .
adds a shard to the list .
removes the shard from the list .
gets the unique set of tokens .
gets the list of the given input stream .
process all tokens in the input pool .
instrument the given thread pool .
returns a set of unique hosts .
returns a set of unique binary transport .
returns a set of all the addresses that have been used for this socket .
returns the maximum number of connections in the number of hosts .
serializes the rollup rollup ) to the rollup version .
returns the token query string for the given query .
returns the regex to use for the given pattern .
index a bulk url .
returns an iterable of { @link iterable () } of the metric column family .
parses the command line and parses the map .
{
{
{
{
{
{
inserts a raw metric into the result .
returns the bound statement for the given metric .
get the locators of the locators .
get a list of metric names for a given query .
fetch the elasticsearch index from the given tenant .
grab
starts the file .
stops the file .
computes the metrics from the input metrics
computes the points from the rollups .
returns true if the given locator is in the current layer .
returns true if the given locator is current in discovery .
returns true if the current token is in the current token .
check if the locator ) locator ) is present in the slot .
adds a new locator
{
returns an iterable of all ranges in - place in the specified granularity .
returns a range of finer ranges into a map of finer ranges .
returns an iterable of all the ranges for the given in the interval .
inserts a collection of metrics into the given clock .
inserts the given locator to the locator .
inserts the specified locator into the batch .
inserts the delayed locator into the batch .
inserts all the metrics into the given metrics .
/ * ( non - javadoc )
{
gets a map of the given a range for a list of locators
{
converts a { @link locator } to a { @link map } .
returns the rollup type of a map .
checks if the given metric is delayed .
inserts the given metric into the locator .
returns the bound statement for the given metric .
returns a list of metric names from the given query .
gets the metadata of the instrumentation .
returns a rollup instance of the given locator .
get the datapoints for a given range .
returns a map of datapoints for a range of the given range .
{
returns a serializer for the given class .
check if the content type is valid .
checks if the given http headers is valid .
inserts a list of the given batch .
checks if the given message is valid .
marks the instrumentation metrics to the delay .
checks if the file is running .
{
{
/ * ( non - javadoc )
returns the server .
returns a new instance of this class .
returns true if the given version is a valid .
gets the system property .
checks if the given version is a java version .
checks if the given os name is a os .
checks if the given os version is a os version of the version .
returns the port mq port of the port .
{
{
starts the {
stops this method stops .
split the state of this state .
suspend the current thread .
resume the state .
returns the number of the current time .
join a collection of strings into a string .
/ * ( non - erlang erlang .
{
{
returns a list of plugins that are available for the user .
enable the specified plugin .
disables the specified plugin .
copies the given url to a file to the given destination .
copies a url to the file .
copies the contents of the given input stream .
/ * ( non - javadoc )
creates a plugin instance into a { @link plugin line } .
returns a new { @link pn } instance } instance .
adds the list of the peer .
adds the ice servers .
connects a user to the peer .
closes a connection .
closes all connections in the peer .
transmit a message .
generates a user message .
send a message
transmit
gets the value of the weitere property .
gets the value of the user property .
gets the value of the user property .
setter for suchfelder value for this api .
gets the value of the multimedia property .
typ
typ
typ
gets the importmodus .
gets the adressdruck of the adressdruck property .
gets the waehrung .
*************************************************************************
creates a ad type .
creates a new {
*************************************************************************
creates the agent .
creates a new {
creates a { @link property .
creates an image image .
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link stellplatz } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link stellplatz } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link stellplatz } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link stellplatz } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link stellplatz } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link adapter2 } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link ausstatt } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
gets the bodenbelag .
<p > set of the region property .
<p > setter for area . < / p >
sets the value of the field <code > address / code > property . < / p >
<p > setter for description
sets the rent of the rent
set the furnished - sets
<p > setter for phone1 . < / p >
<p > setter for phone2 . < / p >
<p > set the value of the <code > contact / code > property . < / p >
<p > set the value of the <code > phone / code > property . < / p >
<p > setter for main . < / p >
<p > set the value of the <code > cc / code > property . < / p >
<p > setter for external . < / p >
<p > setter for agent . < / p >
*************************************************************************
creates a haus record from the haus .
creates a wohnung record record record the wohnung .
initializes the record .
writes the records to the given output stream .
writes a list of records to the console .
setter for epart
setter for jahrgang
setter for gebaeudeart
sets the buero
checks if the given string is a numeric value .
parses a number as a number .
parses a string representation of a string .
prints a number of digits in a number .
prints a number of digits .
setter for gebiete
create a new { @link filemaker } instance .
creates a new { @link is24xml } from the given { @link document } .
creates a new marshaller .
creates an unmarshaller object .
get the context .
sets the location of the anhang .
setter for gruppe
sets the type of the floor .
sets the agent agent .
gets the value of the property property .
read the xml file .
read the content of an input stream .
prints a document to the console .
sets the stand of the stand
gets the value of the user property .
checks if the given document is readable .
create a new { @link document } .
{
setter for zeiteinheit
gets the value of the zimmer property .
gets the value of the haus property .
gets the value of the buero property .
gets the value of the gastgewerbe property .
gets the value of the land property .
gets the value of the sonstige property .
gets the value of the zinshaus property .
gets the value of the terrain property .
setter for periode
removes all the elements from the given document .
creates a new { @link casa } instance .
setter for umfang
create a new { @link daft } instance .
{
setter for wohnungtyp
returns the country country country into a string .
returns the given string to a string to a string .
returns the country country to use .
convert a string to a string
returns the country name of the given country .
translate a country country country to a country .
gets the value of the anbieter property .
setter for periode
sets the category of the category .
gets the value of the pdf property .
setter for aktionart
*************************************************************************
reads a csv file .
reads the content of the inputstream .
prints the object to a console .
sets the realestateitems realestateitems
sets the value of the vermarktung property .
gets the objektkategorie2 .
*************************************************************************
creates a new {
{
{
removes all elements from the given document .
removes all elements of a document .
removes all energiepass from the given document .
*************************************************************************
gets the value of the content property .
returns a list of field names .
setter for blick
setter for pauschalmiete
setter for monatsmiete
get the parkplatz
creates a {
sets the value of the lastenaufzug property .
get the objektkategorie2
setter for the zustand
read the content of the xml document .
prints a document to a console .
gets the value of the feld property .
/ * ( non - javadoc )
dumps the record to a writer .
returns the value associated with the given value .
parse the given record .
returns a row of this record .
sets the value of the given value .
sets the ctype .
read the content of the xml document .
prints the document to the console .
setter for haustyp
read the content of the xml document .
prints the object to the console .
gets the value of the energiepass property .
setter for keller
setter for grundst
set the attribute
setter for hallen
sets the value - sets
gets the wiederholungstermin of the wiederholungstermin property .
gets the teilungsversteigerung of the teilungsversteigerung property .
sets the value of the vermarktung property .
{
/ * ( non - javadoc )
sets the xml xml elements from a document .
this method . xml elements from a document .
removes all elements from the xml node .
upgrade zinshaus elements from a document .
create an instance of { @link jaxbelement } { @code < } { @link virtuelle } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link immobilie } { @code > }}
create an instance of {
create an instance of {
create an instance of {
create an instance of {
create an extended {
create an instance of { @link jaxbelement } { @code < } { @link grundstueck } { @code > }}
create an instance of {
create an instance of {
create an instance of {
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of {
create an instance of {
create an instance of {
create an instance of {
create an instance of {
create an instance of {
create an instance of {
create an instance of {
create an instance of {
create an extended {
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link adapter7 } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link adapter7 } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link stellplatz } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link byte } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link codetype } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link calendar } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }}
*************************************************************************
creates the anbieter instance .
create a immobilie
creates a new {
*************************************************************************
creates a database type .
creates a { @link meta .
creates a new {
creates a {
creates a new result set . row .
writes the xml document to the console .
create a new document .
read the content of the xml document .
prints the object to the console .
gets the value of the bevorzugt property .
gets the value of the wunsch property .
sets the art of the art .
setter for modus
gets the value of the email property .
gets the value of the tel property .
setter for handel
set the attribute
{
downgrade
*************************************************************************
creates a random object from the object into a random object .
writes the content of the xml file .
setter for suchfeld1 - sets
setter for suchfeld2 - sets
setter for suchfeld3 - sets
gets the value of the row property .
setter for distanz zu
creates a new { @link daft } .
gets the value of the anhang property .
returns the objekt of the objekt
get the objektzustand
gets the haus
gets the ausstattungsqualitaet .
*************************************************************************
reads the xml file .
reads the xml document .
prints the feedback to the console .
prints the console to the console .
gets the value of the vermarktungsart property .
gets the value of the interessent property .
setter for wert
create a new xml document .
/ * ( non - javadoc )
setter for ackerland - sets
setter for bauerwartungsland - sets
setter for bootsstaende - sets
setter for buero - sets
setter for camping - sets
setter for doppelhaus - sets
setter for einfamilienhaus - sets
setter for einzelhandel - sets
setter for einzelhandel - sets
setter for garagen - sets
setter for garten - sets
setter for gastronomie - sets
setter for gewerbe - sets
setter for hotel - sets
setter for industrie - sets
setter for keine - sets
setter for kleingewerbe - sets
setter for lager - sets
setter for mehrfamilienhaus - sets
setter for obstpflanzung - sets
setter for parkhaus - sets
setter for produktion - sets
setter for reihenhaus - sets
setter for stellplaetze - sets
setter for villa - sets
setter for wald - sets
sets the current version of the version .
upgrade the current version of this version .
setter for anbieter
gets the value of the wohnung property .
gets the value of the grundstueck property .
gets the value of the einzelhandel property .
gets the value of the hallen property .
gets the value of the parken property .
gets the value of the freizeitimmobilie property .
gets the value of the objektart property .
gets the value of the stellplatzart property .
sets the max dauer .
creates a new document .
*************************************************************************
creates a new record .
writes the given file to the given file .
sets the erschl attribute
gets the value of the feature property .
parses a csv file .
prints a csv file .
prints a record .
prints the records of this record .
replaces all occurrences of the given value in the value .
create a new document .
creates a new { @link trovit } from the given { @link document } .
parses the area unit value .
parses a boolean value .
parses a date value from a string .
parses the given string as a foreclosure .
parses the given string as a orientation .
parses a price currency value .
parses a string representation of a string .
parses a price value from a string .
parse a string representation of a string .
parses the given string as a type .
prints a boolean value as a string .
prints a content of a string .
prints a country value .
returns a date value .
returns a string representation of a string .
prints a plot area area .
print a price value .
returns a string representation of a rooms .
print a uri value .
returns a string representation of an integer .
setter for zimmertyp
removes all nodes from a node .
counts the number of nodes in the xpath expression .
counts the number of nodes in the given xpath expression .
returns the root element of the given document .
creates a new document .
create a new { @link document . xml } instance } .
creates a new { @link document } .
create a new { @link document .
creates a new { @link document .
creates a new { @link document .
creates a new { @link document . xml stream .
create a new { @link document .
create a new { @link document } instance } .
newxpath
newxpath
creates a new xpath .
prints all nodes in a document .
replaces all children of the given document with the given newnamespaceuri .
replaces a namespace of the given node .
parse the given children .
sets the xml tree with the given a node .
writes the xml document to the given file .
writes a file to a file .
writes the xml document to the xml stream .
writes the given document to the given writer .
writes the xml document to the given writer .
writes the content of the xml file .
serializes the content of this document .
returns an xml string to a string as xml string .
create a new document .
{
{
removes all elements of a document .
upgrade all energiepass elements from a document .
setter for keine - sets
setter for erdwaerme - sets
setter for solarheizung - sets
setter for pelletheizung - sets
sets the value - sets
setter for oel - sets
setter for fernwaerme - sets
setter for strom - sets
setter for kohle - sets
*************************************************************************
creates a property .
creates a { @link project .
creates a new { @link picture .
creates a { @link video } .
generates a random { @link string with the specified length .
generates a random letters of the given length .
generates a random numeric numeric string with the specified length .
gets the wohnung
setbenutzer
setobjekte
gets the value of the feed property .
setter for moeb
gets the value of the serviceleistungen property .
creates a new { @link is24xml } from the given { @link immobilien } object .
create a new { @link is24xml } .
/ * ( non - javadoc )
setter for sub - sets
setter for { @link location } .
setter for the locality .
/ * ( non - javadoc )
/ * ( non - javadoc )
this method .
upgrade all elements of a document .
setter for miete
setter for kauf - sets
sets the land
gets the value of the field property .
*************************************************************************
creates a new {
creates a {
creates a {
create an instance of { @link feed .
create an instance of { @link feed } .
create an instance of {
creates a new { @link feed . feed .
create an instance of { @link feed . feed .
{
{
writes the xml elements in the xml document .
removes all ausstattung from the given document .
upgrade mieteinnahmen elements of the mieteinnahmen .
gets the value of the ad property .
setter for gastgew
setter for platzart
gets the objektkategorie2 .
gets the value of the daten property .
gets the klimaanlage
gets the value of the image property .
*************************************************************************
creates a new realestate object } .
creates a random advertismentimage .
sets the price type .
<p > setter for new . < / p >
<p > setter for directions . < / p >
<p > setter for co2rating . < / p >
<p > setter for energy . < / p >
<p > set the value of the <code > viewing / code > property . < / p >
sets the status of the property .
gets the objektkategorie2 .
sets the pictures value .
creates a new {
read the content of the xml document .
prints the object to the console .
sets the value - sets
sets the bebaubar attribute
{
/ * ( non - javadoc )
removes all anhang elements from a document .
removes all child elements from a document .
upgrade anhang elements in the anhang .
upgrade all anzahl elements from the xml node .
upgrade sonstige elements of the sonstige .
setter for parken
sets the location of the foto .
create a new { @link document } instance .
/ * ( non - javadoc )
create a new { @link kyero .
{
set the alter - sets
creates a new { @link kyero } from the given { @link document } .
sets the freizeit
setter for telefonart
read the xml document from an xml stream .
prints the xml representation of a console .
setter for emailart
creates a new record based on the record .
setter for overseas
setter for overseas
creates a document from an xml file .
creates a new xml document } instance .
create a new xml document .
create a new {
creates a user defined element .
gets the value of the fehler property .
sets the value of the vermarktung
sets the value of the vermarktung
reads the xml file .
reads the content of the input stream .
prints the layout of the layout .
prints the result of the given {
gets the value of the sonstige property .
gets the value of the valuelist property .
sets the minimum dauer dauer
sets the zins
gets the value of the photo property .
read the content of the xml document .
print the object to a console .
sets the metadata of the feed .
sets the projects of the feed .
set the properties of the properties .
*************************************************************************
creates the ad type .
creates the ad type .
writes the given file to the given file .
create a new { @link trovit } .
{
/ * ( non - javadoc )
downgrade
sets the type of the xml document .
write the url elements of the xml document .
removes all unsupported elements from the document .
upgrade the build build the new elements .
creates a new document to create a { @link wis object .
prints the parser to the console .
create a new { @link immobiliare .
{
{
removes all elements from the given document .
upgrade all energiepass elements from a document .
gets the value of the immobilie property .
creates a new { @link immo } instance .
gets the value of the objekt property .
gets the value of the fehlerliste property .
gets the value of the status property .
setter for sonstige
setter for distanz
gets the value of the distanzen property .
gets the value of the distanzen property .
setnx
create a new {
create a new { @link ssdb .
create a new {
ssdb
replication
writes a byte array to the output stream .
sends a byte array of bytes to the output stream .
reads a response from the input stream .
checks if the given interface is an interface .
returns the type of the given class .
returns a string names of a class .
returns a collection of unstatic for a given a class .
returns all the fields of the given class .
gets the field name of a method name of the given method .
returns the singleton instance of the given class .
returns the constructor of the given class .
returns a method of the given class .
get
set
creates a method prefix for the given field .
get all super classes of a class .
converts a object to a string .
<editor - fold objects .
get
detect a url from the given url .
read properties from a file .
convert a { @link xmlstreamreader } object } object .
returns a { @link source to a { @link xmleventreader } .
returns a { @link result into a result .
converts a result into a xmleventwriter object .
generate the key pair .
encrypts the given source string .
decrypts the given private method .
returns a new key - value pairs for the given algorithm .
decrypts the given key using the result .
checks if the given class is compatible with the given throws an exception if it is compatible with the given throws an exception .
writes a folder to a file .
returns the next index .
detect the next character in the stream .
sets the bindings of the namespace .
binds a namespace uri to the namespace .
removes a binding from the namespace .
get
returns all classes in - memory in the current thread .
checks if the given class is implements the given interface .
parses a mime type .
parses mime types of mime types .
sorts the given list of mime types using the given mime types .
returns the charset of the input stream .
detect the validation mode .
checks if the given content has a opening tag .
consumes the comment tokens .
consume a line .
returns the comment of a token .
get
returns a date in a date .
returns a date in a date .
returns the date as a string .
returns the date as a string .
returns the time time as a date .
convert a string to a date
return
convert a string to a date
format
format
convert a string to a date
returns the last date in the given day .
returns a string representation of a string .
returns the hour hour of a date .
returns the time in the current time .
returns a date date as a string .
returns a string representation of a string .
returns a day day from a string .
returns a pre - formatted as a string .
get
returns the next day in a string .
checks if the given string is a leap year .
convert a string to a string .
returns the end of the end of a date .
checks if the given date is same as the given date .
returns the week week of the week .
returns a string representation of the given date .
get
returns the days of the given date1 .
get
generates a random string from a random string .
get
initializes the logging .
initializes the logging .
{
returns a new qname from the namespace .
adds the given iterator to the list .
/ * ( non - javadoc )
handler for testing
handler for the attachment .
adds a super class .
adds an interface to the code .
filters all files in the file .
filter all files that match the files .
builds the {
adds the given class to the code .
adds the given class to the list of { @link code () } .
sets the code to use for the code .
sets the code to be used code .
fills the given number of characters with the given length .
returns a string representation of a string representation .
returns a random string representation of the given password .
computes the crypt of the given salt .
get all classes that match the given filter .
returns a collection of loaders loaders loaders .
returns a set of the given package .
returns a set of the given package .
lookup all classes in the given package system .
lookup all classes in the jar file .
/ * package
capture the system out of the system out of debugging .
finds the input stream in the system .
finds the input stream that matches the system .
dumps the thread stack stack .
<p > instance . < / p >
adds an option .
adds a new option .
adds an integer option .
adds a long option to the option .
adds a double option .
add a boolean option .
parses the command line arguments .
opens the given url .
prints the stack trace .
builds a string representation of a stack trace .
returns the stack trace trace .
creates a new class = null .
print a debug message .
read an annotation value on the given annotation .
read
gets all fields of the given annotation .
compares two strings .
returns the hash code of the given string .
returns the sun line .
convert
reads a string into a string into a string .
creates a new instance of this method . < / p >
create a new instance of a class .
returns the instance .
detect the number of the input stream .
returns the target object of a proxy .
compares two dates of the given date to the given date .
convert a date to a string
sets the value of this value .
generates a new file .
adds a new package .
scans all classes that are found in the classloader .
check if the given file is a file .
encode
returns a buffered image matrix
decodes the given path .
called when the concurrency thread has been access to call this method .
called when the monitor is access to the monitor .
--------------------------------------------------------------------------------------------
invokes the given method on the given object .
invokes the given method on the given instance .
returns the json object as a json string .
returns the given object to a string .
set
deletes the given file .
copies all files from a file to the destination destination .
copies all files in - memory file to the given file .
checks if the given collection is a collection of names .
processes the properties of the given properties .
processes the property annotation .
processes the property annotation .
returns a map of properties of the given method .
creates the mix in the annotation .
returns the json encoding of the given character encoding .
checks if the given method is an object method .
sets the target object .
prepares the class .
resolves the class name .
finds the matching method that matches the given a target method .
invokes the prepared method .
returns the difference of the type of the given class .
converts a int to a unsigned string .
convert a byte array to a hex string .
returns the file type of the file .
serializes an object to a byte array .
deserializes a byte array into a byte array into an object .
prints an array of the given object .
/ * object to string .
detect a charset in the input stream )
checks if the given string has a text .
encodes a string representation of the given url .
returns a list of child elements of the given tag name .
gets the list of child by tag name .
get the child element by tag name .
gets the child element value of a child name .
get the list of child elements of the element of the given element .
get the text value of the given element .
check if the given node name is equals to the given node .
returns true if the given a node name .
returns true if the given node name is match .
render the header cell .
renders this table .
removes the domain from the given string .
appends a string to a string .
<p > to string to a string .
returns a string representation of strings to a string .
returns the instance of the instance . < / p >
checks if the given string is empty .
removes all the objects to the given list of arrays .
returns the longest representation of objects in the given list of objects .
sets the size of a string .
convert a list of objects to a longest string .
adds an http param .
adds a param to the builder .
convert a char to a short .
returns the mapped paths of the given package .
/ *
adds a reference to the given reference .
returns true if the thread alive .
checks if the given file size is less than the given size .
returns the mime type of a file .
list all files in - memory folder .
load a file from a url .
reads the input stream from the given input stream .
tourl
reads an input stream from the given input stream .
reads the given file from the given a file .
cut
reads the input stream into a byte array .
reads a file to a byte array .
writes a byte array of a file .
write
serializes the object to a file .
resolves the placeholders in the given text .
finds the package in the package .
checks if the import is import .
checks if the class is valid .
finds all interfaces in the given interface .
checks if the given interface is valid .
checks if the super class is a super class .
checks if the code is a code .
checks if the content of the content is valid .
gets the documents from win
calc
*************************************************************************
sorts the given collection using the given collection .
enable the indenting of a transformer } .
disables the { @link indenting } .
returns the time of the stack .
returns the qualified name of a qualified name .
start a prefix mapping .
removes the end of the end of the end of the end of the end of the end of the end of the prefix .
adds a new callback to the list } .
removes the result from the queue .
called when a throwable .
encrypts a message with the given message .
encrypts a message using the given message .
cut the directory information from a directory .
cut the information of a directory .
returns a map of the given filename .
gets the default file name for the given name .
get
reads the input stream from the stream .
check if the content of the xml file .
reads the contents of the given file .
removes all duplicate breaks breaks from the given file .
returns a formatted formatted formatted as a string .
/ * converts a byte array of bytes .
generates a random byte array .
returns a byte array of bytes from the input stream .
generates a byte array containing the given key .
returns the maximum number of approach in the given digit .
parse a tree tree .
returns the search path of the given node .
returns a list of childs .
returns a list of all the childs .
returns a list of the files in the given filter .
returns a new {
codehaus
set
adds the given set of mix to the list of mix .
returns a set of mix of the class .
returns true if the thread is mix in the thread .
create a list of the given the namespace .
creates a { @link object object } instance } instance .
encodes the given string .
encrypts the given data using the given data .
decrypts the given encrypted data using the given raw key } .
adds a super class to this class .
check if the given file is a directory .
creates a gelf
checks if the given text is rtl .
returns the color of the text .
/ * ( non - javadoc .
returns the color at the specified item .
sets the text size .
returns the index of the bounds in the bounds .
removes the path from the path .
main method .
gets the intro library .
returns the keyword names of the keyword .
runs a keyword .
runs a keyword .
returns the keyword arguments for the keyword .
gets the keyword documentation .
*************************************************************************
puts a remote library .
adds a library to the class .
adds a library to the server .
stops the server .
starts the server .
configures the logging .
removes all prefixes from the handler .
converts a file to a json string
converts the given file to a json string .
converts the given input stream to a json string
converts the given properties to a json string .
converts the given map to a json string
converts the given properties to a map .
convert a string representation of properties to a string .
convert the given properties to a properties object
sets the color of the color .
sets the color list of the color .
initialize the background .
returns the shadow radius of the given drawable .
creates a new builder .
creates a new {
finds the intermediate intermediate certificate .
creates a new {
{
/ * attributes .
check if the input files are markdown .
substitute the variables in a template .
processes the markdown file .
gets the title of the title .
adds a title to the html file . <p >
replaces all variables in the initial content .
updates the relative paths of the given folder . <p >
copies all files from the given directory to a directory to a directory .
adds the several special properties .
checks if the given path is a valid .
wraps the slider content .
called when the animation is up to fade . <p >
called when the animation is resize the animation . <p >
calculates the percentage of the percentage .
overlap the overlap views .
create an intent for the given activity .
launch the activity .
get a list of a specific to a sheet
get a list of fact sheets for a list of permissions
sets the connect timeout .
sets the date format .
serializes the given object to a map .
deserializes the given file .
download a file from a response .
performs the http update request .
builds the http client .
create an access control entity entity .
updates a data model . updates the data model .
create a full export export export .
get exports list of exports .
gets the state of the model .
sets the token provider .
sets the client credentials .
retrieves a list of a file .
returns a map of the model .
get a list of bookmarks bookmarks .
binds the given object to the given object .
{
merges the given { @link graph .
adds the permissions of permissions } .
writes the permissions to the graph .
adds a dataset to use to be used in - dataset .
closes the buffer .
executes the given inputstream .
adds a new quad to the given node to the node .
creates a new dataset } .
create a new dataset .
{
{
/ * ( non - javadoc )
{
set the gm to use for the given gm .
{
{
{
sets the number of the gmoperation .
resizes the given geometry .
rotates the given annotation .
sets the given value to the gravity .
<p > profiles . < / p >
sets a font with the specified size .
draws a text at the specified offset .
adds a source file to a file .
adds an image .
adds a list of arguments .
register a new {
registers the specified gauge to the given key .
register a new counter with the specified name .
parses the given object and return a list of arguments } .
prints the usage of a target object .
extracts the time unit from a string .
parse
zip all files in the given directory .
executes the given url .
execute the given url .
executes the given file .
reads all the actions from a file into a list them into a list .
sets the current slide index .
{
returns true if the screen is step2 .
returns true if the screen should be step6 .
returns true if the screen is step7 .
returns true if the dn supports dn .
gen - last : drop
/ * check if drag is ok .
{
sorts the given list using the list .
transforms the action to a bookmark .
creates a new instance of the given class .
renders a template .
/ * ( non - null file .
check if the screen is in the mouse .
set the intersection to the given element .
{
/ * ( non - javadoc )
creates a { @link builder } instance .
creates a { @link bean } instance of the { @link bean .
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
returns the manifest number from a file .
finds a file in the given target file .
finds the executable file with the file .
finds the executable executable .
load a new {
finds a file with the specified name .
loads a library from the file .
finds a file in the classpath .
require a file .
finds a file in the specified target file .
creates a temp directory .
/ * ( non - javadoc )
{
creates a new { @link log } instance .
create a new { @link log } object with the given parameters .
logs a consumer .
log a message at the level level .
logs a message at the level level .
logs a message at the specified level .
logs a message at the specified event .
logs a trace message .
logs a message at the specified event .
logs the specified consumer .
logs a message at the specified level .
logs a message at the specified level .
log a debug message at the specified level .
logs a message .
logs a debug level .
logs a debug message .
logs the info .
logs an info message .
logs an info message .
logs an info message .
logs an info message .
logs an info message .
fails if the passed { @link object } is { @link info } .
logs an info message .
logs the specified consumer .
logs a message at the level level .
logs an event at the level level .
logs an event at the level level .
fails if the event .
logs an event .
logs an event .
logs a message at the specified data key1 .
logs an error .
logs an error at the given level .
logs an error at the given level .
logs an error at the given level .
logs an error .
logs an error .
logs an error message .
logs a message at the given level .
logs the specified event .
creates an array of keys from a collection of keys .
creates an array of values from the passed array } .
creates a new array of keys from an array .
creates an array of values from an array } .
extracts the throwable from the passed array .
converts an array of objects to an array .
serializes the given event to a string .
serialize an event to a iloggingevent .
add a {
start a steno .
ends a steno wrapper .
writes the end wrapper .
writes a list of keys .
writes the given { @link ithrowableproxy } .
serialize a throwable to a json object .
creates a new context .
check if the passed object is a simple type .
get a new logger .
create a new { @link logger .
creates a logger .
creates a new { @link logger logger } .
create a new { @link logger .
sets whether the redact should be enabled .
set whether the redact should be null .
creates a map of { @link context .
{
check if the passed marker is steno .
check if the passed marker is json event .
check if the passed marker is steno .
check if the passed marker is a map .
check if the passed marker is steno .
check if the passed marker is json event .
check if the passed marker is steno .
returns a {
serialize an event ----- -----
builds a string representation of the given name . <p >
escapes all string representation of string array .
creates a new { @link string .
creates a safe context context .
creates a safe context .
gets the formatted message .
{
serializes the given event to the given iloggingevent
get the caller data trace element .
serialize the given event to the given iloggingevent .
serializes the given event to a iloggingevent .
creates a map of safe context .
creates a new { @link map .
encodes the given value into the given string .
encodes the given throwable .
encodes the given map .
encodes a list of strings .
encodes the given value into the given string .
encodes the given log value into a map .
/ * ( non - javadoc )
initialize the folder .
create a database .
checks if the given array is valid .
open the application .
counts the number of data in the specified selection .
constructor .
registers an instance of { @link instance } for the given class .
registers a type serializer .
parse
saves the data to a context .
refresh sheet refresh . < = context >
parse the given string .
get
get
get the index of the column .
is
is
set the objects in the hidden column in the hidden column .
saves the comments in a sheet .
set
prepare
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
calculates the length of the given string .
{
returns the given double .
{
writes the object to the stream .
recover
puts the shift shift mapping .
set the wb .
gets the wb
returns the evaluator evaluator .
re
loads the web sheet from the input stream .
load
load
loads the work sheet by name .
exports the contents of this file to a file .
save
submits the request .
populates the component .
get
deserialize this object from the stream .
{
{
returns the locale for the given component .
/ * ( non - javadoc )
get
gets the pic .
returns the validation handler .
returns the chart helper .
converts a list of shared into an array of shared .
returns the first row of the first row .
converts the given ptg to a ptg .
converts a watch list to a list of ptg .
creates a single ptg of the given object .
returns a list of rows in the list of the list of rows .
adds the list of the given list into a list .
convert a row to a one .
generate a dynamic row to a many row .
builds the dynamic row for a dynamic row .
builds the dynamic row for the given area .
check if the given value is followed by value .
get the bg for a given plot .
creates a new { @link xcolor object from the given { @link themes } .
finds the automatic fill color .
/ * xcolor of the xcolor .
convert a xcolor to use in - memory .
get the theme to use for the given color .
convert the xcolor to a xcolor .
returns the xcolor
returns the automatic tint tint at the given index .
convert a xssfcolor to a clr object
returns the index of the theme with the given name .
convert a xssfcolor color to a short array .
get
finds the component name of the class .
populates all attributes of a component .
returns the para meter of the given the object .
sets the specified object .
returns the value of the specified property .
sets the control attributes .
find
sets the faces charts for the faces .
sets up the faces charts .
sets the faces picture for the cell .
initialize the charts map .
get
creates a { @link dataset .
gets the pie title .
sets the series of the series .
create a chart chart .
create a bar chart .
creates a pie ] . jfreechart .
create a new {
sets up the style .
sets up the pie .
sets the bar style .
creates a { @link dataset .
create
gets the chart id from the parent .
initialize the anchors map .
create
cast the given expression to a collection .
returns the full name of the row .
build
setup
build
creates a list of rows by full name .
change the index number in shift in the map .
change the upper level length .
change
sets the full name of the given row in the hidden column .
returns the number of the original row in the hidden column .
sets the original row in the given row .
finds the parent rows from a map of the given map .
finds a list of a list of the given shift map .
finds the first item in the collection at the specified index .
build
checks if the given row is static .
checks if the given row is static .
gets the full data name from the full command name .
replaces the expression with the given cell value with the specified cell value . < / p >
index
skipped
adds a cell to the cell to the list of caddress .
build
build
build
get
build
verifies that the given row of the last cell .
build
checks if the last row is last row .
initializes the template for the command .
build
builds the sheet config map from the sheet .
match the parent command .
sets the parent command for the given child command .
checks if the given list of the given list of the given list .
match
check if the command to see form
copies all the commands from the sheet .
build
processes the method line .
processes a command line .
moves the comment to the map .
creates a new config .
builds a map of command map .
get
sets the footer of the sheet .
set
set
adds a row to the row .
delete the row from the sheet .
removes all ranges from the shift map .
finds a list of full full name of the given sheet .
gets the command from the command name .
inserts an empty object into the context .
deletes the object in the context .
prepare the collection of collection data in context .
index the command range of the given map .
checks if the given row is allow for a row to the row is allow to check .
insert
evaluates the expression evaluates to the given cell .
evaluates the normal cells in the given value .
evaluates a user formula .
checks if the given string is a user formula .
evaluates a string representation of the result of the given expression .
adds a cell comment .
evaluates the given expression .
removes all rows from the sheet from the sheet .
removes a single row from the sheet .
removes the cached cell from the row .
removes all rows from the sheet
loads the picture from the given row .
loads a chart from the chart .
{
{
assemble
get
get
get
get
set
sets the cell value .
sets the value of the cell .
set
sets the cell value .
copies all rows from a sheet to the destination sheet .
copies a single row of a sheet .
copy
copy
copy
clone
create
create
match
get
get
get
get
get
get
get
convert
returns a list of row attributes from component attributes .
gets the init rows from the sheet .
gets the faces from the body row .
returns the faces from the specified row .
get
get
get
get
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
get the current data context name .
{
{
writes the object to the output stream .
adds a row to the list .
removes a row from the target row .
merges the map of rows to the map .
scans all the rows in the sheet .
gets the chart type .
converts a string into a stroke } .
create a chart for a chart .
sets the chart data to the chart .
clears the chart of the given charts .
create
get the anchor id of the anchor .
returns the chart id from the child node .
/ * ( non - javadoc )
recover
{
builds the objects for the configuration .
saves the data in the context .
clears all the formula .
gets the poi cell with a row in the current page .
get
get
restores the data context .
get the last data context .
checks if the current data context is need to be need to be a restore .
start
shift
<p > sets the first row should be used .
sets the last row plus the sheet .
builds the command at the specified name .
builds the cells of the configuration .
build the cells for the row .
build
scans the sheet .
serialize this object to the outputstream .
deserialize the object .
build
builds the series list .
builds a chart series from the list of cells .
create a list of a list to a list of cells .
returns the dpt dpt of the given index .
sets the command index map .
recover
get
clears all pictures from the given xssfworkbook .
/ * index
generates a picture style for the given cell .
generate
get
puts a cell into the given cell .
puts a cell into the given cell .
is
checks if the given cell is changed .
gets the pattern .
encodes the given a )
/ * ( non - javadoc )
/ * ( non - javadoc )
recover
get
get
gets the cell color .
returns the decoration font decoration for the cell .
get
get
gets the alignment from the cell .
returns the vertical alignment from the cell .
calculates the total width of a sheet in the sheet .
calculates the total height of a sheet .
sets the cell style .
sets the base style of the input cell .
get
get
get
returns the symbol position of a cell .
gets the set of resource paths for the given path .
gets the input stream from the stream .
evaluates the given expression against the given expression .
removes the prefix path from the resource .
evaluates the input type .
<p > finds the given name .
evaluates the given expression against the given expression .
evaluates the given expression against the given expression .
joins the given short array into a string .
rounds a number to a number .
returns the tab type .
returns the tab style .
returns the default date pattern .
returns the decimal separator of the default locale .
returns a string representation of the thousand .
sets the tie command list .
build
build
adds the given row to the list .
builds the configuration at the configuration .
/ * ( non - javadoc )
{
{
checks if the given string is a command string .
<p > checks if the given string is a method string . < / p >
is
<p > checks if the given string .
checks if the given string is a validate method .
parses the widget attributes of a widget .
get
parse
gets the string between the given bracket .
finds the bracket position in the string .
parses the command line attributes .
parses the input list of the input list of cell .
parse the given list of attributes .
extracts the validation attributes from the cell .
splits a string into a string .
parse special attributes .
process calendar attributes .
process
gather the special attributes .
parses a comment to a map .
finds the first non - non - non - null .
removes all chars from the input string .
get the excel column name .
get
returns the full cell name of the given sheet .
gets the sheet name from the full cell name .
removes the sheet name from the full cell name .
convert a string to an int .
get
returns the width of a short units
returns the width of the width of the specified number of the specified width .
returns the number of pixels in - place row in - based on - excel row .
checks if the given string is a date .
parses the given date as a string .
checks if the given string is a numeric comma separated list of characters .
returns true if the given parameter should be continue .
sets the specified object .
compares two { @code cell .
checks if the given child range is inside the given range .
get
clears all hidden columns from the sheet .
delete hidden columns in the row .
deletes the cell from the row .
returns the right col address of a sheet .
{
{
{
{
refreshes the status of the form is changed .
checks if the row is in the current page .
validate
check
checks if the rules for a single cell .
validation
{
validate the current page .
validates the row in the current page .
checks if the given row .
value
refresh cached cells in the current page .
refresh the cached cells of a row
sets if the submit mode should be used .
pre
clears the cell .
load
loads a list of the header .
adds the maximum number of columns to max .
get
returns the width of the width of the given width and width .
load
get
clears the workbook .
loads the workbook from the input stream .
loads the specified workbook from the specified workbook .
initialize the tabs .
loads the data context
refresh
refresh the data for the given row .
refresh
finds the index of a tab with the specified name .
loads the work sheet .
prepare the work shee .
sets the data table .
saves the current tab .
sets the row info .
load
assemble
refreshes the specified cell with the specified index .
process
creates the dynamic columns .
adds a repeat row .
refresh
sets whether the request .
returns true if the view is unsaved .
recovers the given sheet .
parses the given { @link cef } .
parses a common event .
/ * ( non - javadoc )
returns true if the given dependency is compatible with the given dependency .
returns a list of the given bindings .
{
handle the given event .
adds a binding to the list .
returns a new {
returns a new {
expands the given {
returns the upper type of this type of this type .
returns an array containing all elements in the array .
returns a new array containing all elements of the elements .
finds the first { @link method } of the given type .
checks if the given class is a class .
checks if the given class is a class .
returns the number of the two member of the result .
returns the common constructor of the given type .
compares two strings in the same as { @code true } . < / p >
returns a new object to a { @link provider instance .
returns the parent string of the parent .
returns a { @link dependency the given type .
writes the input stream to the output stream .
writes a long to the given writer .
writes a string .
sends a workarounds to the client .
{
{
sets the converted traffic stats .
adds a binary content .
adds a binary content to the binary content .
adds a bitmap .
adds a file descriptor .
removes a parameter from the list .
adds a header header .
clears the request .
call the play .
starts the service .
binds the { @link service } .
unbind the service .
drop the listener .
stores the bitmap to the disk .
adds an image to the builder .
adds an image to the image .
builds the uri .
converts the given input stream to a string .
reads the contents of the given inputstream to a string .
transfers all bytes from the given input stream to the given output stream .
consumes the given input stream .
gets the uncompressed input stream .
returns an input stream of the given encoding .
checks if the given bean exists .
/ * ( non - javadoc )
{
{
{
{
{
{
sends the start of the message .
send the disposition header )
send content type type ) content type .
/ * ( non - javadoc )
/ * ( non - javadoc .
send the end of the end )
sends the message .
/ * ( non - javadoc )
send parts of parts to the output stream .
returns the length of the part of a byte array .
returns the redirect to see if it exists .
sends a not modified response .
sets the date header .
sets the date and cache headers .
sets the content type header .
closes the given channel .
/ * ( non - javadoc )
{
installs the given version .
ensures that the working directory is working .
returns the response .
create a new { @link stream } from the given { @link inputstream } .
resets the bitmap .
get a new instance of websockify } .
validates the given keystore .
replaces the scale type of the given type .
sets the scale type of the scale .
{
stops the location .
gets the pending intent .
disconnect the given connection .
binds the service .
unbind the service .
notifies the changes of the changes that the view .
{
called when the response .
/ * ( non - javadoc )
waits for a loader to wait .
adds a target image .
remove a target consumer .
set the image set the image .
sets the image to the consumer .
sets the text of the given text .
sets the visibility of the given text .
hides the soft input input view .
shows the soft input input .
toggle the soft input input view .
computes the width of the pixels of the specified range .
finds a view with the specified id .
finds the view by its id .
/ * ( non - javadoc )
returns the position of the read - bit position at the given limit .
sets the limit of the limit .
resets the token .
skips the next number of the current position .
clear the cache .
populates an image with the given url .
cancels the image of the image .
creates a new {
sets the result of the result .
sets the loading image .
starts an image loader .
cache
gets the model type .
releases the given buffer .
adds the given urlconnection .
creates a new urlconnection .
adds a simple parameter .
connects to the connection .
returns the md5 md5 string .
checks if the given activity is extra .
generates a byte array of a multipart boundary .
returns a string representation of the given { @link cublas } .
returns a string representation of the given { @link string .
checks if the given result is valid .
sets a vector of a vector to a vector of a vector .
returns the vector of a vector .
creates a new matrix in a * x = b
returns a matrix of a * x = b
sets the number of a vector to a vector .
copies data from a device to a vector .
sets a new matrix in a matrix .
returns a matrix from a * b .
<pre > description : {
<pre > description : {
<pre > description : {
<pre > description : {
compute the dot - dot - dot - dot - dot - ex .
<pre > description : < = n ] .
<pre > description : < = n ] .
<pre > description : < = n ] .
<pre > description : < = n ] .
<pre > description : < = n ] .
<pre > scal - scal ) - scal )
<pre > description : cublas = x ] ) - x - x - x ) of - x - x - x - x - x - x - x - x - x - x - x - y - x - x - x - x - x - x - y - x - x - x - x -
<pre > description : cublas = x ] ) - x - x - x ) of - x - x - x - x - x - x - x - x - x - x - x - y - x - x - x - x - x - x - y - x - x - x - x -
<pre > description : cublas = x ] ) - x - x - x ) of - x - x - x - x - x - x - x - x - x - x - x - y - x - x - x - x - x - x - y - x - x - x - x -
<pre > description : cublas = x ] ) - x - x - x ) of - x - x - x - x - x - x - x - x - x - x - x - y - x - x - x - x - x - x - y - x - x - x - x -
<pre > description : cublas = x ] ) - x - x - x ) of - x - x - x - x - x - x - x - x - x - x - x - y - x - x - x - x - x - x - y - x - x - x - x -
<pre > description : cublas = x ] ) - x - x - x ) of - x - x - x - x - x - x - x - x - x - x - x - y - x - x - x - x - x - x - y - x - x - x - x -
<pre > description : cublas = x ] ) - x - x - x ) of - x - x - x - x - x - x - x - x - x - x - x - y - x - x - x - x - x - x - y - x - x - x - x -
<pre > description : cublas = x ] ) - x - x - x ) of - x - x - x - x - x - x - x - x - x - x - x - y - x - x - x - x - x - x - y - x - x - x - x -
<pre > description : cublas = x ] ) - x - x - x ) of - x - x - x - x - x - x - x - x - x - x - x - y - x - x - x - x - x - x - y - x - x - x - x -
<pre > description : cublas = x ] ) - x - x - x ) of - x - x - x - x - x - x - x - x - x - x - x - y - x - x - x - x - x - x - y - x - x - x - x -
<pre > description : cublas = x ] ) - x - x - x ) of - x - x - x - x - x - x - x - x - x - x - x - y - x - x - x - x - x - x - y - x - x - x - x -
<pre > description of a * b = b b
<pre > description of a * b = b b
<pre > description of a * b = b b
<pre > description of a * b = b b
<pre > description of a * b = b b
<pre > description of a * b = b b
<pre > description : <br > <br > <br > <br > <br > <br > <br > <br > a<sub > i< / sup > i< / sub > < / sub - b<sub > i >
<pre > description : <br > <br > <br > <br > <br > <br > <br > <br > a<sub > i< / sup > i< / sub > < / sub - b<sub > i >
<pre > description : <br > <br > <br > <br > <br > <br > <br > <br > a<sub > i< / sup > i< / sub > < / sub - b<sub > i >
<pre > description : <br > <br > <br > <br > <br > <br > <br > <br > a<sub > i< / sup > i< / sub > < / sub - b<sub > i >
<pre > description : cublas [ i . e .
<pre > description : cublas [ i . e .
<pre > cublas
<pre > cublas
<pre > description of a * b = a * x = a * x * x * y * x * x * x * y * x * x - y * x * y * x - y * x * x - y - y * x - y * x * x * x - axis * x -
check if the error is enabled .
sets the index of an array of an integer .
calculates the vector of a complex vector .
returns the vector of a vector in a vector .
sets the matrix in a matrix .
returns a matrix from a matrix .
calculates the vector of a vector in a complex vector .
compute the vector of a vector in a vector .
creates a matrix in a matrix .
calculates the cublas of a matrix .
sets the srotm of the srotm matrix .
sets the srotmg srotmg srotmg of the srotmg
sets the drotm of a drotm of a pointer .
compute the drotmg - drotmg drotmg - drotmg drotmg drotmg drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg - drotmg -
returns the number of the specified number of n - wise number of - dimensional .
returns the number of the specified number of n - wise number of - dimensional .
returns the cublas of a pointer .
sets the saxpy of the saxpy
sets the scopy of a pointer .
compute the cublas of a pointer between two - dimensional .
returns the cublas of a pointer in a pointer .
sets the srot of a cublas of the cublas .
cublas
sets the sscal of a vector .
sets the sswap of a pointer .
sets the caxpy of a complex number of a complex number of points in a complex vector .
sets the ccopy of a pointer .
sets the zcopy of a pointer .
sets the complex number of cscal
cublas a complex number of a complex number of times .
sets the complex number of - complex of a complex vector .
sets the csrot of the csrot .
sets the csscal of a vector .
sets the cswap of a pointer .
sets the zswap of a pointer .
compute a complex number of cublas - cublas - cublas - cublas .
compute a complex number of cublas - cublas - cublas - cublas .
returns the number of the specified number of n - wise number of - dimensional .
returns the number of the specified number of n - wise number of - dimensional .
returns the cublas of a pointer .
returns the cublas of a pointer in a pointer .
sets the zaxpy of a complex vector .
compute a complex number of cublas of a complex number of cublas .
compute a complex number of cublas of a complex number of cublas .
sets the complex number of a complex number of complex complex number .
sets the zdscal of a - x - axis .
computes the cublas of a dznrm2 of the x - wise dznrm2 .
sets the zrotg of a complex host .
sets the zrot of a complex matrix .
sets the zdrot of a zdrot of the cublas of a vector .
returns the number of the specified number of n - wise number of - dimensional .
returns the number of the specified number of n - wise number of - dimensional .
computes the cublas - wise ( x - x ) of - wise - wise ( x ) .
description : <br > = b of a * x = a * x - axis * x - y - y - x - x - y - y - x - x - x - y - x - x - x - x - x - x - x - x - sgbmv - x - x - x - x
<pre > performs a sgemv / sup - wise = a * x - axis * x - y * x - y - x - x - y - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x -
performs a sparse matrix
description : <br > t< / sup > <br > t< / sup >
sets the sspmv of the sspmv - sspmv - sspmv - sspmv sspmv sspmv sspmv - n
sets the sspr of the sspr - sspr - sspr - sspr - sspr - sspr - x - sspr
sets the sspr2 of a sspr2 of a - sspr2 - sspr2 - sspr2 - sspr2 - y - n - sspr2 - n - n - sspr2 - n - n - y - n - y - n - y - n - n - y - y - y - n - y - n - y - y - n
description : <br > t< / sup > <br > t< / sup >
description : this matrix . <br > x - axis
description : <br > t< / sup > <br > t< / sup >
sets the sparse matrix to - place matrix .
sets the sparse matrix to - place matrix .
sets the stpmv of a stpmv - stpmv stpmv - stpmv - stpmv - stpmv - stpmv - stpmv - stpmv - stpmv - stpmv - stpmv - stpmv - stpmv - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x -
sets the stpsv of a stpsv - stpsv stpsv - stpsv - stpsv - stpsv - stpsv - stpsv - stpsv - stpsv - stpsv - stpsv - stpsv - stpsv - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x -
<p > sets of a sparse matrix .
<p > sets of a sparse matrix .
<p > sets of a sparse matrix .
description : <br > t< / sup > on a * x - axis in - place .
sets the sparse matrix to - place matrix .
sets the sparse matrix to - place matrix .
<p > performs - registers a * x = - 1 - 1 - d - y - y - y - y - y - y - y - y - a - y - y - x - y - x - y - a - y - a - y - a - x - y - a - a -
sets the cublas - zhpmv to a complex number of - complex - zhpmv - zhpmv - zhpmv - zhpmv - zhpmv - zhpmv - zhpmv - zhpmv - y - zhpmv - y - zhpmv - y - zhpmv - y - zhpmv - zhpmv - y - y - zhpmv - y - zhpmv
<pre > cublas - zgemv - zgemv - zgemv - zgemv - zgemv - y
sets the ztpmv of a ztpmv - ztpmv ztpmv - ztpmv - ztpmv - ztpmv - ztpmv - ztpmv - ztpmv - ztpmv - ztpmv - ztpmv - ztpmv - ztpmv - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x -
sets the ztpsv of a ztpsv - ztpsv ztpsv - ztpsv - ztpsv - ztpsv - ztpsv - ztpsv - ztpsv - ztpsv - ztpsv - ztpsv - ztpsv - ztpsv - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x -
<p > cublas - registers a sparse matrix in a * x - d - y - wise - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y
description : <br > <br > <br > <br > <br > <br > <br > <br > <br > <br > <br > <br > <br > <br > <br > <br > <br > <br > <br > <br > <br > <br > <br > <br > <br > <br > < / p >
description : <br > <br > <br > <br > <br > <br > <br > <br > <br > <br > a<sub > ij< / sub > < / p >
description : <br > t< / sup > = a * b <br > <br > <br > <br > t< > <br > <br > <br > <br > <br > <br > ij< > <br > i< / > t< > < / sub >
<p > sets of a sparse matrix .
sets the sparse matrix to - place matrix .
sets the ctpmv of a ctpmv - ctpmv ctpmv - ctpmv - ctpmv - ctpmv - ctpmv - ctpmv - ctpmv - ctpmv - ctpmv - ctpmv - ctpmv - ctpmv - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x -
<p > sets of a sparse matrix .
sets the sparse matrix to - place matrix .
sets the ctpsv of a ctpsv - ctpsv ctpsv - ctpsv - ctpsv - ctpsv - ctpsv - ctpsv - ctpsv - ctpsv - ctpsv - ctpsv - ctpsv - ctpsv - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x -
<p > = - y - decomposition of a * x - x - y - x - x - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - x - y - y - x -
<p > = - y - decomposition of a * x - x - y - x - x - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - x - y - y - x -
description : this matrix . <br > x - axis
sets the chpr of the chpr - chpr - chpr - chpr - chpr - chpr - x - chpr
sets the complex number of - complex number of a complex complex number of the specified by - place .
description : <br > = a * x = a * x - 1 - 1 - d - d - d - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - y - x - y - x - y - x
performs a sparse sparse matrix on a * x = c - sgemm - sgemm - b - c - b - b - - b - b - c - - - - - - - c - c - c - - - c - c - - - - - - - - - - - - - - - -
description : this matrix
description : <br > t< / sup > on - 1 - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - c - k - k - k - k - k - k - k - k -
performs a sparse sparse matrix on - place matrix .
description : <br > t< / sup > <br > b / b * x - > <br > <br > <br > <br > <br > <br > <br > < / p >
description : <br > t< / sup > <br > b / b * x - > <br > <br > <br > <br > <br > <br > <br > < / p >
performs a sparse - cgemm - c - k - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - k - c - c - c - c - c -
description : <br > t< / sup > on a * b > t< / sup - b > <br > <br > <br > <br > <br > a<sub > ij< / sub > < / p >
description : <br > t< / sup > on a * b > t< / sup - b > <br > <br > <br > <br > <br > a<sub > ij< / sub > < / p >
<p > = - c - k - k - c - c - k - c - k - c - k - k - k - k - k - c - k - k - c - k - k - c - c - k - k - k - k - k - k - k - k -
description : <br > t< / sup > on - 1 - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - c - k - k - k - k - k - k - k - k -
<p > cublas - csyr2k - csyr2k - factorization - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k -
description : <br > t< / sup > on a * x - d - d - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k
description : <br > = b * x - b - alpha / sup - alpha - alpha - b - b - b - > <br > - b > <br > <br > - > <br > - > <br > <br > <br > a<sub > ij< / p >
description : <br > = b * x - b - alpha / sup - alpha - alpha - b - b - b - > <br > - b > <br > <br > - > <br > - > <br > <br > <br > a<sub > ij< / p >
computes the cublas - wise ( x - x ) of - wise - wise ( x ) .
sets the daxpy of a cublas
sets the dcopy of a pointer .
compute the cublas ddot of the cublas of a pointer .
computes the cublas of a dnrm2 of the x - wise dnrm2 .
sets the drot of a cublas of a drot of a - vector .
cublas
sets the dscal of a - x - axis .
sets the dswap of a pointer .
returns the number of the specified number of n - wise number of - dimensional .
returns the number of the specified number of n - wise number of - dimensional .
description : <br > t< / sup > on a * x = a * x - axis .
<p > sparse sparse matrix
<p > performs - wise decomposition of - decomposition of a - axis . <br > <br > - > t< / sup > - > t< / sup > < / p >
<p > sets the y * x = a * x - y - y - y - axis - y - y - x - y - x - axis - x - y - x - y - x - y - x - x - x - x - y - x - y - y - y - y -
sets the dspr of a dspr - dspr - - dspr - dspr
sets the dspr2 of a dspr2 - dspr2 - dspr2 - dspr2 - dspr2 - dspr2 - y - dspr2 - dspr2 - dspr2 - dspr2 - dspr2 - dspr2 - dspr2 - y - n - y - n - y - dspr2 - n - y - y - dspr2 - n - dspr2 - y - y - y - n
<p > sets of a sparse matrix .
<p > sets of a sparse matrix .
sets the sparse matrix to - place matrix .
sets the dtpmv of a dtpmv - dtpmv dtpmv - dtpmv - dtpmv - dtpmv - dtpmv - dtpmv - dtpmv - dtpmv - dtpmv - dtpmv - dtpmv - dtpmv - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x -
sets the dtpsv of a dtpsv - dtpsv dtpsv - dtpsv - dtpsv - dtpsv - dtpsv - dtpsv - dtpsv - dtpsv - dtpsv - dtpsv - dtpsv - dtpsv - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x -
sets the sparse matrix to - place matrix .
description : <br > t< / sup > <br > t< / sup > < / > t< / sub > t< / > < / > <br > <br > <br > <br > <br > a<sub > ij< / sub > < / p >
description : <br > t< / sup > on a * x * b
sets the dspmv of the dspmv of a dspmv .
description : <br > t< / sup > <br > b = b > <br > <br > <br > <br > a<sub > ij< / sub > < / p >
description : <br > t< / sup > = a * x = b - d - d - alpha - b - b - b - b - b - b - b - b - b - b - b - b - b - b - b - b - b - alpha - b - b - b - b
description : <br > t< / sup > <br > b = b > <br > <br > <br > <br > a<sub > ij< / sub > < / p >
performs a cublas - dsymm - dsymm - dsymm - dsymm - b - dsymm - b - b - b - dsymm - b - b - b - b - c - b - b - b - b - b - b - b - b - b - b - b - b - b - b - b -
performs a cublas - d - zsymm - zsymm - b - b .
description : this matrix of a * x - axis .
<p > performs - zsyrk - zsyrk - place - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k -
<p > performs - zsyr2k - zsyr2k - zsyr2k - b - b - b - b - b - b - b - b - b - b - b - c - c - b - b - b - b - b - b - b - b - b - c - b - b - b - b -
<p > performs - zher2k - d .
<p > performs - wise decomposition of - decomposition of a - axis . <br > <br > - > t< / sup > - > t< / sup > < / p >
sets the zhpr of a zhpr - zhpr - - zhpr - zhpr
sets the zhpr2 of a complex number of - zhpr2 - x - zhpr2 - x of - x of - x - x - zhpr2 - zhpr2 - complex - zhpr2 - y - x - x - x - x - x - n - x - x - x - x - x - x
<p > sets of a * x = b * y - y - wise - y - x - x - y - x - y - x - x - y - x - x - x - x - x - x - x - x - x - x - x - x - x - x - x -
performs a sparse sparse matrix
<p > performs - d decomposition of - d - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c - c -
description : <br > t< / sup > = a * x = b - d - d - alpha - b - b - b - b - b - b - b - b - b - b - b - b - b - b - b - b - b - alpha - b - b - b - b
<p > = b = a * b
<p > = b = a * b
description : this matrix of a * x - axis .
performs a cublas - d - zhemm - zhemm - b - b .
<p > sets of a sparse matrix .
description : <br > t< / sup > on a * x - wise - - k - k - wise - - 1 - d - k - k - k - k - d - k - - - - - k - - - - - - - - - - - - - - - - - - - -
stem
returns a list of ending lexemes for the same name .
adds a lexeme .
adds a new ending .
writes the tuple to the output stream .
returns the estimate of the given attribute .
checks if the given character is a space .
tokenize
tokenize the given analyzer .
tokenize
prints a short description .
prints the description of the token .
verifies that the given attribute is matching the kamols .
converts a attribute to a kamols .
convert a attribute to a kamols .
adds a tag to the feature .
removes all kamols from a kamols .
creates a new attribute from a kamols .
convert a string to a prolog list
converts a string to a prolog list .
word
get a list of metric .
gets the query string .
process a list of metric into a list of metric object .
parses the given json string into a list of app objects } objects .
process a list of signal buffers .
gets the connection config .
{
returns the metric time series for the given metric .
create a new { @link genericode .
creates a new { @link genericode } object containing all the elements in the passed { @link helger } .
create a new { @link genericode } object that contains all the xml document .
create a new { @link genericode .
creates a new { @link genericode } object containing all the elements in the passed { @link helger } .
create a new { @link genericode } object that contains all the xml document .
get the passed column name .
get the row value of the passed row .
get all the columns from the passed column set .
get all columns of the passed column set .
convert a column set to a list of the passed column set .
find all the elements in the passed column set .
get the passed column as a } .
get all the keys from a column set .
get all keys from the passed column set as a } .
find all the elements in the passed column set .
get the passed { @link column set of the passed column set } .
check if the passed column set is a key .
create a new { @link short } .
create a new { @link long } .
create a new simple value .
create a new { @link key } .
create a new column .
create a new key .
set the number of the excel .
add a column .
create a new { @link genericode } .
creates a writer writer .
create a new { @link genericode } instance .
create a new { @link genericode } .
creates a writer writer .
create a new { @link genericode } instance .
create a new { @link validator } .
creates a new { @link validator .
create a new { @link validator } .
create a new { @link validator } .
creates a new { @link validator .
create a new { @link validator } .
returns the last value of the given pair .
send
unset the context .
set
sets the log level .
get the log level .
store the logs of the thread .
get the capture .
sets if the analytics should be used in the analytics .
get the analytics capture .
sets the max log store .
sends the listener ---
sends a listener to the client .
returns true if the exception is caught .
logs a log message .
prepend the given message .
appends the stack metadata to the stack .
generate a json object from a json object .
appends a full stack trace to the json array .
capture the given json object .
initialize the application .
initialize the application .
logs the metadata location .
sets the user identity .
log a file .
reads a byte array from a file .
starts the location updates .
computes the size of the specified region .
computes the size of the given region .
computes the size of the given number of the given region .
returns the list of locators .
returns a list of all the locator that are available locator .
returns the secured token .
construct the pool locator .
returns a list of gem for the gem .
reads a snapshot of the snapshot .
implements the visitor to find all the resource type {
writes the csv file to the csv file .
dumps the contents of this stream .
returns the time values of the given time .
returns a collection of { @link user } to a {
convert the given file to a chart .
calculate the stats of the stats .
checks if the given distributedregionmxbean is a replicated region .
creates a new distributedregionmxbean instance } instance with the specified region name .
returns the pool for a server .
returns the pool for the given jmx locator .
returns a region for the specified region .
returns a collection of root regions that match the given region .
get the client cache for the given jmx .
returns true if the given region is existing .
returns the name of the given region .
get a member member .
creates a new {
returns a list of gateway receivers for the given jmx gateway .
returns a collection of all the given a jmx object .
looks up the network host .
returns the user s user s email function .
is
returns a collection of results of the results in a collection of results of the given function .
flatten the given collection into the given collection .
collects all results of the given result collector .
perform a collection of results .
creates a new { @link bridge } .
creates a new { @link bridge } for the specified { @link consumer } .
removes the consumer from the consumer .
updates the put consumer .
puts a entry in the request
delete a mapping .
returns the value of the given key .
handles an exception .
{
returns an array of region filter facts that region .
/ * ( non - javadoc )
reads the content of the given file .
finds the user profile details for the given user name .
compares this function } objects .
returns the size of the specified region .
{
returns a set of all hosts that match the same as {
checks if the given member name is online .
{
{
get the app name of the app .
construct the security configuration .
creates a new {
read the search results from the page .
clears all the search results from the page .
creates a new region .
returns a region with the specified name .
returns the region from the specified region .
registers a cq with the given cq .
registers a region after the given region .
registers a region after the specified region .
constructs a new { @link comparison .
{
exports all regions of the given function .
exports the given region to the given region .
exports the given region .
returns the security password .
returns the security user name .
checks if the given value must be insert .
checks if the given time is closest to the given time .
returns the number of memory used for all the memory .
adds a value to the list .
closes the value .
returns the stat value associated with the given name .
updates the token .
close the resource .
write all files from the given directory .
*************************************************************************
reconnect
returns a jmx jmx jmx jmx jmx jmx .
returns the jmx jmx server } .
stops the members of the host .
shut
stops the given locator .
shut
converts the given jmx object to a { @link distributedsystemmxbean object .
shut down the given redundancy zone .
stores a list of page to a list of key keys
converts a string representation of a page into a page to a page .
stores a list of pages into a list of pages .
reads the results from the page .
{
imports a region .
imports the given region on the region .
imports a region from the given region .
checks if the remote locators match the remote .
parses the locator host .
parses a locator port .
/ * ( non - javadoc )
returns the class name of the given class name .
returns the number of memory used for the memory .
returns an array of values of the values .
shrink the interval
{
exports the given region .
execute the given a ) region .
exports a region by the given arguments .
save search is used to a collection of search keys .
clears all search results from a page
perform a search for a given index and region name and returns the result .
{
imports all regions from the cache .
imports a region from the partition .
starts the cluster .
shuts down the server .
waits for a member of the member .
waits for a member to stop .
save search results to search keys in - value of the specified in the given page .
/ * ( non - null . < = null
{
builds the sum of the given region .
query
query a query
closes all loaded resources .
returns the value of the specified column .
returns true if the given type is a type .
serializes an object to a byte array .
deserializes the given byte array into an object .
creates a new instance of the given class .
checks if the given element is a table .
checks if the given column is valid .
checks if the given element is a super type .
returns a string representation of the table .
write the contents of the given writer .
emits the id of the id .
creates the create table .
drops the drop table .
generate the insert .
generate the update .
emits the column id .
emits the delete with the given id .
emits the delete with the given object .
generate the map cursor to object .
generate the select by id .
returns an observable that returns an observable } objects to an { @link observable .
checks if the column name is valid .
return
capitalize the given the first character in a string .
returns true if the given type is a type .
returns a new {
reads a temperature from a file .
returns the value of the given type .
prints a message .
prints a formatted message .
prints an error message .
gets the list of the icon .
returns a list of all the icon .
{
adds a new data point .
returns the y - wise at the specified position .
creates a sld .
returns the background decoration decoration .
compute the power of the given px .
returns a copy of this matrix .
sets the values of this matrix .
returns the norm of this matrix .
prints this matrix .
calculates the power of the specified scale . power } .
calculates the number of the specified number of the specified number of the given scale .
returns a bigdecimal bigdecimal with the specified { @code scale } .
returns a number of the given scale .
calculates the bigdecimal of the given { @link bigdecimal } .
calculates the number of a given number .
returns the bigdecimal bigdecimal of the specified scale .
calculates the number of the arctan .
calculates the number of the specified { @link decimal } .
prints the pi of a string .
returns the timestamp of the given time .
sets the limits of the limits .
puts a new value into the buffer .
prints the counters to the output stream .
adds a new complex number to this complex .
subtracts a complex number of the result .
returns a complex number of this complex number .
/ * ( non - z } with the specified by the given { @code z } .
copies a copy of the values1d .
sets the matrix .
returns the norm of this matrix .
prints this matrix .
returns the value of this matrix in this matrix .
{
{
copies a copy of this matrix .
set a } of this matrix .
sets the values of the matrix .
{
{
returns a new matrix .
adds a new matrix to this matrix .
subtracts a matrix from this matrix .
multiply a new { @code k + b
performs a new matrix with the specified matrix .
{
{
prints a line in a stream .
{
{
sets the resource resource .
adds a data point to the data point .
validates the coefficients is valid .
{
clear the template .
parses the given { @link sldi } object .
convert the given raw sld } to a styled object .
validates the layer .
validates that the given raw sld
parses the xml layer .
{
returns the total area of the specified area .
returns the area of the specified point .
sets the matrix .
{
fires a save event .
fires all registered event event on the handler .
returns the inverse of a inverse matrix .
returns the determinant of this matrix .
returns the norm of this matrix .
{
{
{
{
prints a matrix to a matrix .
computes the matrix .
computes the elimination of a matrix .
forward the substitution of a column .
returns a new substitution of a substitution .
performs a * x = b
converts a matrix to a matrix .
returns the next von in - place .
{
/ * ( non - javadoc )
{
{
{
checks if the given interval is a valid interval .
adds a {
multiply the product of an array .
compute the number of the specified number of times .
/ * ( non - javadoc )
{
gets the sld .
convert a long array to a char array .
/ *
prints a single line .
validates that the given number is valid .
validates that the given number of float .
validates that the number of double is valid exponent .
validate that the number of the number of the given unbiased
creates a new sld .
returns the next central central .
returns the next polar polar .
returns the next ratio ratio .
returns the given number of sieve into a boolean array .
returns an array of factors in the given array .
/ * ( non - javadoc )
{
{
sets the java fx application .
sets the configuration file .
sets the default configuration .
gets the converter converter .
creates a { @link fxmlloaderparams } for the given the injection point .
sets the fxml fxml class .
check if the given location is a valid location .
returns the event definitions
sets the key to be used to reverse the server .
sets the geocode request to be used for the geocode .
builds a result of the request .
returns the host address pair .
gets the applicable attribute definition .
evaluates the given attribute .
process the action .
checks if the given event is pertinent .
removes all events from the events .
sanitize the given string .
returns all states of the specified states .
sets the key of the request .
sets the address address .
sets the request components to the request .
converts a {
converts a service instance } to a { @link bar } .
returns a collection of services for the names .
query a collection of instances for the given name .
/ * ( non - state ) of the request .
returns a list of params from the request .
returns a list of all the matched parts .
{
{
creates a list of collaboration .
returns a list of logged in logged in the service .
get all the list of the given form .
{
{
{
{
returns a string representation of the given decimal data prefix .
creates a user .
updates the user s user .
sets the user .
sets the user .
increments the user ticket for a user .
changes the password for the user .
deletes a user .
gets the logged in the user information .
gets the user where the user is a user .
gets the user where the email address is a user .
gets a user by id .
get all the users .
get all users by job view .
gets all users by role .
gets all the users where the user has been logged .
gets all user field values for a user .
get
get
checks if the given user have the given role .
checks if the user have the specified role name .
{
returns the field of the specified name .
returns the field value of the multi - choice .
{
returns the field value as string .
returns the value of this field .
returns the value of the field as a long .
returns the field value as an integer .
gets the field value as number .
returns the value of this object .
returns the field value as a date .
returns the value of this field .
gets the field value as a table .
sets the field value .
sets the value of the field .
returns the type of this type .
{
/ * ( non - javadoc )
{
populates this field value as a field .
{
gets the elastic search field type .
returns true if the field is a field qualify .
{
sets the value of the step .
returns the step property .
{
{
creates a new { @link flow .
updates the flow step .
get the flow step by id .
get the flow step by step .
get the job views for the given step name .
returns the standard job view view by name .
returns a { @link listing } for a { @link job } .
get the { @link listing } .
get the job views for a user .
returns the job views } for the given flow .
get the steps by flow .
deletes a flow step .
delete a flow step .
search and convert a list of the hits . < = null .
search with the search with hits .
search for a hits of the hits hits .
gets a list of forms by ids .
this method to search hits of the hits of hits .
<p > search hits with the given index . < / p >
populates all table fields for each table fields .
checks if the given index is exist .
{
checks if the given text is a valid name .
{
returns a list of table forms .
returns a list of descendants for a given form .
returns the ancestor of the given form .
returns a list of form fields .
converts the input string to a camel case .
returns the latitude from the fluid .
returns the latitude from the elastic search text .
returns the longitude from the elastic search text .
returns the given string to a double .
returns a string to a string .
decodes a base64 encoded string into a byte array .
encodes a byte array into a string .
decode a string to a string .
encodes the given byte array into base64 encoded string .
setflatfieldonjsonobj
checks if a processing of a json object .
/ * ( non - javadoc )
called when the connection )
adds an expected message to the expected message .
returns a list of echo messages from the return value .
checks if all echo messages are echo .
uncompress the contents of the given byte array .
returns a list of personal inventory .
removes the given form from the personal inventory .
{
creates a new { @link form .
create a table record .
updates the form container .
executes a custom web action .
executes a custom web action .
deletes a form container .
returns a list of the form flow .
gets the form and field historic .
gets the most recent recent recent form for this form .
returns the form container by id .
lock
returns a new form container } to the given a { @link form .
locks a form container .
returns a form of the given the form the specified user .
locks a form container .
returns a new form from the given user .
gets the form table forms .
/ * ( non - javadoc )
gets the form ancestor .
this method to map from a form .
maps the form states to the previous form .
converts the given role to a list .
{
creates a form definition .
updates the form definition .
gets the form definition by id .
gets the form definition by name .
returns a list of the form of this user .
creates a list of by logged by logged .
deletes a form definition .
get the cached field value from the given form .
get
returns the method associated with the given name .
invokes the given object .
returns the storage key for the given form .
initxmemcachedclient
shuts down the client .
{
returns a list of descendants that have been synchronized .
gets the property from the properties .
returns the property from a properties file .
converts a string representation of long .
{
{
returns the list of providers that are of providers .
/ * ( non - javadoc )
execute
get
returns a list of this form .
returns the list of table forms .
returns a list of form fields .
populates the form fields .
returns the list of the given form .
closes the client .
{
convert this object to a json object .
gets the given long as a date .
gets the date value of a field name .
returns the date as a long .
creates a new { @link flow . flow .
create a {
create a new { @link flow } .
updates the { @link flow .
updates the { @link flow .
updates the { @link flow .
compiles the flow step .
get the exit rules for the given step .
compiles a flow step and execute the flow step .
compiles a { @link flow .
compiles a flow step and execute a result .
move the flow step up to the rule .
move the flow step entry to the rule .
delete a flow step entry .
delete the flow step exit .
delete the flow step rule .
/ * ( non - valid list .
login
login
this method initializes session
issue
{
{
combines the given list of strings with the given separator .
creates a new { @link user .
updates the user query .
deletes a user query .
returns a user query by id
gets all the user queries .
execute a user query query .
execute a user query .
gets the form field mapping .
gets the form field mapping .
returns the id of the form form .
get the form fields .
get method .
creates a map object from the given result set .
creates a role .
updates the role .
deletes a role .
get a role by id .
get all the roles that are all roles .
{
executes a command .
executes a command .
{
{
{
gets the field value for a field .
gets the field value as string value .
gets the field value as a table .
returns the field value as a multi - choice .
returns the value of the field .
returns the field value as boolean .
returns the field value as double .
gets the value of the field .
returns the value of the field as long as long .
returns the value of the field value .
sets the field value .
sets the field value .
checks if the given form is a form of the form .
{
{
{
{
{
sends a fluid
returns the service ticket ticket as string .
converts a byte array to a hex string .
{
creates a field text .
creates a field text .
creates a multi - choice field .
creates a field decimal .
creates a field decimal .
creates a field table .
updates the field .
updates the barcode text .
updates the plain .
update
updates the field decimal .
updates the field decimal .
updates the field table .
get
returns a listing of all fields .
returns a new form by form with the given form id .
deletes a field .
delete
returns a string representation of a table field .
{
creates a new field .
creates a new { @link field .
creates a field decimal field .
updates the field true .
update
updates the field date .
updates the field value .
get
deletes a field .
delete
merges the given index for the given index into the given index .
sets the additional props .
gets an index .
{
{
adds a sql input input to the sql input .
creates a new flow .
updates the flow .
returns a flow by id
get a flow by name .
delete a flow .
deletes a flow .
updates the field value .
get
gets the field value .
returns a list of global field values .
returns the form ancestor ancestor for the given form .
/ * ( non - javadoc )
gets the form descendants of the form .
returns a list of the form table .
gets the form definition id .
{
{
{
{
checks if this is expired )
creates a user notification notification .
updates the user notification notification .
marks a user notification as read .
deletes a user notification .
gets a user notification by id .
get all read - in read - in - in - in - in - memory .
get
returns a list of user s user and date and date .
generates a random random byte array of the given seed .
returns the hmac sha256 sha256 .
generatelocalhmac
return
convert a byte array to a byte array .
decrypt
decrypts the given key using the given key .
encrypts the given key using the given key .
returns a byte array .
/ * ( non - javadoc .
{
creates a new request .
returns the uri of the given uri .
sets the echo if it is not not set .
returns the exception message message .
creates an admin user .
{
{
get
get the user profile info .
gets the form fields for the given form .
{
execute the given http request .
get a json object as a json object .
get
post
post
post
delete
deletes the json url .
post
put
put
execute json .
execute a form .
executes a string .
execute
adds the params to the request .
get the json response .
encodes the given string into a string .
checks if the connection )
checks if the given error is error .
get the client client .
gets the path of the fluid .
closes the connection non threaded
closes the connection .
get
closes the given statement .
closes the given statement .
gets the fluid for a form id .
creates a new {
get the fluid for a view .
send a {
send a form to a flow
called when a connection .
/ * ( non - javadoc )
sends a message to the server .
sends a message to the client .
closes the user .
{
returns a list of form fields that have been synchronized .
{
send
gets the {
returns the syntax syntax for the given alias .
get
checks if the given text is a plain case .
checks if the given text is a select many of the given text .
{
{
requests the license .
applies the license to the license .
{
creates a new field .
creates a new field .
creates a new field .
sets the service ticket .
creates a multi - choice field .
creates a multi - choice field .
creates a new field .
creates a new field in } .
creates a field decimal .
updates the field text .
updates the field true .
updates the plain text .
sets the service ticket .
updates the field value .
updates the field value .
updates a field in the service .
updates the field decimal .
updates the field value .
creates a field value .
gets a field by id .
get the list of route field values .
deletes a field .
deletes a field .
convert the given list of { @link field } to a { @link field } .
converts a { @link sqlformfieldutil } to a { @link field } .
get the configuration for the given key .
gets the all the configuration .
{
creates a new {
gets the list of providers from the user - identities .
creates an attachment .
returns the attachment by id .
get the list of the service .
deletes an attachment .
deletes the attachment .
checks if the given restrictions has a different value .
replace all unsolved attributes of the given element .
/ * ( non - javadoc )
parses the jar file .
sets the class loader .
parse the given { @link node } into a { @link node } .
returns true if the given node is xsd schema .
resolves all concrete elements of this concrete element .
replaces the unsolved reference .
stores the unsolved item .
adds a file to the parse .
check if the xsd is xsd .
check if the xsd is used to throw exception .
returns true if the given restrictions is a different value .
returns a list of xsd .
updates the existing restriction .
updates the existing existing restriction .
checks if the given restriction exists .
check if the attributes are used attributes .
/ * ( non - javadoc )
parses the given file .
get the schema node .
check if the form is xsd .
checks if the xsd is xsd .
/ * elements of this element ) with the given element .
parses a skeleton element .
converts the node map } into a map .
replaces all unsolved elements in the given element .
parse the raw content of a string .
checks if the given restrictions has a different integer .
converts a string to an enum enum .
validates that the given element with the given value .
validates that an integer is valid .
validates that an integer is non - negative .
validates that an integer attribute is positive .
validates that the given element is valid .
validates that the given element is a valid double .
returns the default value of the given element .
returns the default value of the given element .
returns the default value of the given element .
creates a new { @link reference } object .
replaces the unsolved elements of this element ) with the given element .
{
create a cli .
creates a new { @link cli . cli . specification .
parses the given arguments .
parses the given instance of the given options .
{
returns the date date date .
adds a new {
adds a header view to this header .
removes a footer view from the footer .
sets the start point .
sets the end point .
returns the value of a module .
returns the value of the given module as a double .
calculates the gradient of the gradient of a coherent .
computes the gradient of a noise3d of a given vector .
returns the value to an integer value
calculates the value of the value of the given point .
gets the value of the value of the specified angle .
returns the value of the module .
returns the interp of the cubic function .
returns the value of a matrix .
recalculate the scale of the current scale .
sets the bounds of the bounds .
process all the given event .
process the given event .
gets the ids of the instance .
gets the account id .
reads a list of elements from the specified response .
reads a list of elements from a string .
{
build a new string .
gets the event serializer .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
resolves the given {
creates a new file .
{
deletes the file files .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a predicate that matches the given annotation .
returns the { @link store .
create a new { @link extension } for the given extension } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of {
restore the system properties of the system .
returns a stream of all the given { @link inputstream } s { @link inputstream } .
returns a set of dependencies of the input stream .
sets the filter to be used to set the view .
creates a new { @link action } that calls { @link action } .
creates a new {
sets the background color .
creates a new {
adds an object to the list .
create a new soft object .
sets a named property .
gets the property as a property .
returns an array of array of a base array .
{
processes the queue .
returns the type of the given type .
loads a named class by name .
returns the parameterized type .
gets the type of the given type .
returns the { @link classloader } for the given type .
puts the given { @link parameterized .
get a class .
returns the class loader .
puts the given result in } to the cache .
returns the class loader for the given class loader .
prints the stack trace .
prints the stack trace .
sets the specified text as a text .
replaces the given object with the given object .
run the task .
sets the task task .
checks if the task is accepted .
task
checks if the task is started .
checks if the given throwable is completed .
{
puts a job to the queue .
get the current job .
put a job to the list .
convert the specified name to a blocking mode .
resolves the mode .
create a new object .
list all members in the specified url .
list all files in the given url .
returns the url of the given url .
sets up the readers .
adds a reader to the catalog .
copies all the readers from the catalog .
factory method for creating a new catalog .
loads the system catalogs .
{
parses the catalog from the given input stream .
parse the catalog from the given url .
parses the pending catalogs .
parses the catalog file .
adds an entry to the catalog .
{
parses all catalogs from the catalog .
resolves a doctype .
resolves the document .
resolves the public public public api .
resolve the local public public public public api .
resolves the system system .
resolves the local system .
returns the uri of the given uri .
this method to a string .
resolves the subordinate catalogs .
make an absolute url .
convert a string into a string .
returns the encoded byte array to a string .
adds a delegate entry .
create a socket }
sets the text as a text .
creates a new soft value .
returns the value of the system property as a string .
fire a throwable to all registered listeners that a throwable has been registered .
adds a throwable to the list .
creates a new implementation .
adds an object to the list .
create a socket .
create a new socket .
compares this object to another object .
returns the value of the property .
checks if the given file ends } .
returns the object at the given index .
sets an object at the specified index .
adds an object at the end of the list .
removes an object at the specified index .
removes the object from the queue .
adds an entry to the entry .
returns the type of the given entry .
returns the number of entry in the given type .
returns the argument argument .
inserts the given object into this list .
extracts the nodes from this object .
sets the value of the specified property .
{
/ * up to the given index .
swaps a queue at the queue .
removes a node from the list .
/ * from timeout .
check if the tree is null .
loads a class from the classpath .
preload the url of the url .
get the handler for the given protocol .
checks if the handler is valid .
loads the value of the current thread .
creates a new implementation .
closes the given input stream .
returns a new { @link counter the given counter .
constructs a new counter from the given a counter .
returns true if the extension is in the extension .
{
receive notification of an element .
receive notification of an end of an element .
checks if the notification is valid .
looks up a value associated with the given key .
looks up a value associated with the given name .
rebind
parse
create
{
subst
splits a string into a string .
joins the given byte array into a string .
convert the given object to a string .
trims the leading character from the string .
remove all occurrences of the given string .
{
check if the given file ends with the given name .
create the map .
returns the value associated with the specified key .
{
inserts the given key into the map .
removes the specified key from this map .
flushes all the data .
returns the list of valid keys .
sets the resolution of the resolution .
returns an entry associated with the given key .
returns an iterator of the given tag name .
returns the unique child of the given element .
returns the child element of the given element .
get the content of an element .
returns the unique child content of the given tag .
get the child content of an optional element .
stops the executor .
sets the maximum queue size .
sets the blocking mode .
sets the blocking mode .
executes the given {
receive notification of an element .
schedules the given task } .
inserts a job to the heap .
sets the value of the given text .
adds an entry to the catalog .
returns the uri of the given uri .
resolves a system system .
resolves a public public public public api .
resolves the external system system .
resolves an external public public public public public public public api .
query the resolver for the given command .
append a vector to the given vector .
resolves all the system } to the given system id .
resolves the system system .
{
resolves a vector of all the given system id .
resolves all subordinate catalogs for the given entity .
sets the catalog parser .
returns the catalog parser .
read a catalog from a catalog .
/ * from the catalog .
receive notification of an element .
receive notification of an element .
receive notification of an end element .
receive notification of a processing instruction .
receive notification of a prefix .
resolve an input source .
acquires the queue .
waits until the queue to wait .
connects to the file .
get the output stream .
returns the header field of the header .
cas the next node .
delete the given node .
returns the valid valid )
returns a snapshot of this snapshot .
cas right .
unlink the given index .
creates a new logger instance .
appends the given collection of objects to the given buffer .
gets the short name of the class .
returns a string representation of this class as a string .
returns the default property map .
adds a property listener .
adds the property listeners .
loads the properties file .
loads the properties from the specified map .
loads the properties from the specified reader .
loads the properties from the specified classname .
sets a property .
removes a property from the system .
gets the array of properties from a system .
returns an instance of the system names .
get the property group .
gets the compatible constructor for a given class .
copies the contents of the given object to the given object .
deref
deref
cast an object to an array .
initialize the list .
update the jndi cache .
puts a property with the specified name .
removes an object from the map .
sets the set of this set .
sets the set of defaults to this set .
add a listener to be notified .
adds a list of listeners .
{
notifies all registered property added to all registered .
fires a property that a property has removed .
fire a property changed .
fires a property changed .
make a property name .
loads a property with the specified map .
{
loads the specified class from the given class .
sets a property .
returns an array of array of strings .
returns a property group .
registers a local entity .
/ * ( non - registered entity .
determines if the entity )
loads the input file from the input file .
loads the input source from the classpath .
returns the input source source .
resolves the classpath name .
loads the classpath from the classpath .
sets the text as a text .
normalizes a public id .
convert a public string to a string .
generates a public id into a string .
replaces all occurrences of the given string in the given string .
starts the time .
stops the time .
creates a new { @link wrapper } .
compares the given object to the given object .
generates a byte array from a byte array .
generates an array of objects .
creates the list .
sets the field value .
{
read a catalog from a catalog .
reads the next token from the stream .
returns an iterator over all the elements in the given iterator .
<p > initialize the system .
sets the text as a text .
adds a new vertex .
sets the root vertex .
adds a new edge } .
inserts a bi edge into the list into the list .
removes a vertex from the list .
removes the given edge } .
depth - first search for the given visitor .
depth - first occurrence of the list .
removes the first search of the list .
dfs the spanning tree .
finds the vertex in the given comparator in the first element .
finds all the cycles in the given edge .
receive notification of an element .
receive notification of an end element .
normalize the given string .
parses an xml string into an xml element .
parses the given xml document into a xml stream .
parses the given input source into a xml element .
creates a new element .
returns a qualified element of a element .
returns the value of an attribute .
returns the attribute value of an attribute .
copies all attributes from the given element to the given element .
check if the given node has a node .
returns an iterator of all elements of elements .
returns the text content of a node .
returns the child elements of the child elements .
returns the parent element of the given node .
adds a resource } .
read a catalog from a catalog .
read a catalog from a catalog .
gets the host address .
resolve an input source .
look up the url files that catalog .
create the system .
loads a system property value .
display the class info .
return
gets the description of an object .
<p > describe . < / p >
/ * package
removes the package name from the package .
returns the name of the package name .
loads the given class .
returns the primitive wrapper of the given class .
get all interfaces in the given class .
returns all unique interfaces in a class .
checks if the given class is a primitive wrapper .
instantiates a class using the given class name .
loads a class from the classpath .
loads a class from the classpath .
convert the given a list of java . < / p >
returns the attribute getter for the given class .
returns the attribute setter for the given class .
convert a class to a java class .
returns the property .
sets the value of the property .
gets the filenames of a property .
checks if the given file starts with the given name .
removes all the queue .
{
adds an object to the list .
loads a class from the classpath .
checks if the given { @link file } .
log a message at the specified level .
send a message at the specified level .
{
get the value associated with the given name .
removes the specified property } .
returns a set of set ) entries .
adds a property listener .
removes a property listener .
binds a field .
binds a method .
reads a catalog from the catalog .
returns the specified class .
returns the class loader for the given class loader .
<p > checks if the specified string is null or empty . < / p >
finds the editor editor .
returns the editor editor for a property .
returns the editor editor .
registers an editor .
convert a text type to a primitive object .
maps the properties of the given bean to the given bean .
maps the properties of a bean to the given bean .
create a server socket .
get the { @link class } .
returns the {
schedules a timeout to the queue .
work
create a new {
unbind the given name .
looks up the given class .
looks up the object with the given class .
looks up the object from the specified name .
create a link ref .
create a link ref .
removes a link ref .
removes a link ref .
checks if the given object is a valid object .
appends the class info to the given buffer .
gets a transition by name .
reads the properties from the catalog .
returns the default verbosity .
returns true if the relative to see if the query is relative to the query .
query the catalog files .
get the catalog files .
returns true if the query is public .
returns true if the query is a static catalog .
returns the private catalog .
gets the catalog .
returns true if the system property .
returns the class name .
resolves an input source .
resolves the given href .
create an absolute url for the given uri .
resolves the given class .
gets the property descriptor .
invoke a setter method .
{
returns the prefix of an element .
returns the name of the name .
returns a string representation of the given node .
returns the string representation of the given element .
sets the value of the property .
returns a list containing all elements of an enumeration .
loads the input stream from the given filename .
load the properties file .
reads the properties from the properties file .
adds an edge to the list .
adds a outgoing edge .
adds an incoming edge to the list .
checks if the given edge has an edge .
removes the given edge from this list .
finds the first edge in the specified vertex .
finds the edge in the given edge .
/ * ( non - null cost of the given vertex .
writes the contents of the given output stream .
writes the contents of the given output stream to the given output stream .
writes all files to a file .
writes a jar file to a jar file .
extracts the nested jar from a url .
returns true if this list contains at least one .
fire an event queue .
called when the task is received .
sets the trace tag .
process the task queue .
installs the jvm type provider .
{
installs the jvm type provider .
deletes the given folder .
dispatches an action to the action .
returns an event stream .
creates the fxml path .
updates all the views .
updates all views of the given predicate .
subscribe the given ---
returns the logger for the specified name .
logs a message at the given format .
logs a message at the given format .
log a trace at the given format .
log a message at the message level .
{
record a message at the given format .
logs a debug message at the given format .
log a debug message .
{
log an info message .
log
log an info message .
logs the message at the given format .
logs a message at the specified format .
log
log a message at level level level .
logs an error at the given format .
log an error message .
logs an error at the given format .
log an error message .
returns a stream of {
returns a stream that contains the given rights } that contains all the elements } s { @link record } .
returns a stream consisting of { @code rights of this stream .
returns a stream consisting of strict many elements of the given { @link rights .
returns a { @link stream of the elements of the given { @link collection .
returns a stream consisting of the elements of this stream .
bootstrap a dsn .
bootstrap the given dsn .
bootstrap appender .
/ * ( non - javadoc )
/ * ( non - javadoc )
verify that the command should be generated by the instruction .
finds the doclet tag by name .
*************************************************************************
*************************************************************************
returns a list of words files .
loads the contents of an input stream into a file .
return
adds the last time to the list .
checks if the file is change change .
reloads the file .
match
searches the first occurrence of the given node in the tree .
gets the defalut path .
reads the next character from the stream .
converts a string to a char array .
convert a ascii code to ascii ascii code .
*************************************************************************
returns the number of words in this word .
returns the number of words in the number .
returns the variance of the word .
returns the sum of the sum of the degree .
prints a chunk of chunks in - memory .
search for the node in the array .
search for the node in the node .
finds the maximum element in the given array .
match
*************************************************************************
creates a new instance of {
creates a new {
creates a new { @link mode } instance with the given api key and port .
creates a new mode with the specified api key } .
superclass
/ * ( non - javadoc )
checks if the datasource is valid .
/ * ( non - javadoc )
/ * ( non - javadoc )
inform the given object .
inform
returns the data source data source .
lookup a jndi data source .
create
creates a new iterable from the given type .
generates an array of objects .
returns a list of { @link list } objects from the given { @link class } .
creates a collection of { @link collection } from the given type } .
creates a new set of the given class .
returns a set of { @link set () } with the given type of { @link set } .
creates a new { @link queue .
creates a new { @link queue } for the given a queue } .
creates a new { @link deque } for the given { @link class } .
creates a new { @link deque } for a given type } .
returns a sorted { @link sorted } of the given class .
creates a new { @link sorted } that generates a given { @link class } .
returns a sorted map that contains } of the given { @code value } .
generates a map that contains the given { @code value .
returns the value of the given type .
creates a list of { @link generator } objects } from the given { @link type } .
generates a fresh value for a given method .
return
creates an array of { @link array of { @code null } .
return
creates a new {
set
creates a sorted set of the given the given the given { @link class } .
returns a new map } with the specified by the given { @code null } .
returns a map that evaluates to { @code key } and returns the value of the given the given { @link class class } .
creates a new {
creates an option that evaluates to be used to create a { @code option .
creates a new {
create a new { @link either } that is { @code null } .
creates a {
ensures that the given type is valid } .
throws a {
connects a jdbc jdbc driver and password .
run the given sql in the given database .
query
returns a boolean array ) to an array of bytes .
build
generate a query to query
called when the upgrade is upgrade .
backup
restore a csv data from the database .
returns the blob of a blob .
sets the empty empty text .
{
adds a new query . query } .
adds a new { @link query } .
adds a new query to the given a constructor .
adds a new query .
escapes the csv characters in the given string .
unescapes all occurrences of the given string .
returns a list of values from a csv row .
reads the next value from the stream .
converts a csv string representation of csv pairs into a map .
converts a map of strings
joins the given list of strings with the given list of strings .
join the given list of strings into a list .
renders the column .
read a database model from a reader .
writes the database to the index .
inspect
gets the base dao type mirror .
gets the base dao model .
gets the bind type .
/ *
imports the csv file from a csv file .
imports a csv data from a csv file into the database .
parse the given csv row into a row .
{
{
upgrade the specified version .
restores all tables from the database .
backup all tables to a csv table to csv table .
restore all tables from the csv table .
reads the index of the database .
writes the index of the given filer . filer } .
adds a converter to the map .
creates a new {
creates a new query .
sets a new parameter } .
sets a parameter .
sets a parameter .
sets the parameter to be used to set .
sets the list of the query .
renders the query .
deletes the given table .
returns the value of the specified id .
inserts the given object into the database .
inserts the given iterable into the database .
save
updates the number of rows in the database .
query
query a query .
returns a new cursor to a cursor in the list .
{
sets the builder .
adds a where item to the list .
returns a new {
returns a new {
adds a collection of items to the list .
add a in - memory is in the where the expression is in the given array .
adds a collection of items to the list .
method allow not in not be not in the list .
adds a subquery subquery .
{
logs the current player .
returns the next active stack .
gets the empty stack stack .
adds a plan to this plan .
selects a plan .
selects the plan at the random plan .
sets the plan variables .
returns the result at the specified index .
returns the parents of the parents .
returns the children of this object .
grow the given byte array with the given byte array .
creates a new logger . logger } . logger .
step
sets the goals .
adds a goal .
pause the input input input input input input .
initializes the intention pools .
initializes the intention selection .
starts the intention .
shuts down the intention .
loads the extensions from the config file .
registers the given extension .
{
parses the given arguments .
resets the state of this object .
loads an agent from the given class .
processes the plans for a goal .
returns true if the plan is null .
create the agents in the catalog .
returns the goals of the given agent .
returns an array of the given goals .
gets the goals from the given plan .
loads a class from the classpath .
loads the extension from the given class .
check if the given name is equal to see if the given name .
returns the usage of the plan .
parses the command line arguments .
parses an argument with the given option .
loads a config from a string .
*************************************************************************
evaluates the given agent .
returns the aobject at the specified index .
finds the first matching the specified name .
pushes a new object .
removes the objects from the list .
grows the objects .
/ * ( non - javadoc )
{
returns the element at the specified idx .
pushes a new object to the object .
removes the object from the list .
grows the maximum element in the list .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the type of the specified object .
checks if the given query matches the given query .
*************************************************************************
returns the name of the field name .
converts a string to a byte array .
post
send a goal ---
sends a message .
starts the given writer .
returns a byte array .
sets the goals .
create a new belief .
add a belief to the list )
evaluate the given query .
suspend the agent .
/ * ( non - javadoc )
gets a field by name .
returns the index of the specified field in this set .
/ *
parses the given arguments .
/ * ( non - javadoc )
registers a random neighbours .
builds a string representation of the male .
parses the given arguments .
run the agent .
checks if the given agent is valid .
removes all agents from the set .
manage the goal of the given agent .
removes a plan from the agent .
removes all inactive agents from the list .
adds the active agents .
blocks until the external message to wait .
shuts down the server .
sets the agent id .
moves the specified pin .
main method .
initialize the configuration .
starts the agent .
waits until the pools is idle .
finish all agents .
returns true if all pools are idle .
returns true if the pools are finished .
sets the agent idle agent is idle .
returns the poolid
create a { @code expression
sets the expression for the given expression .
joins the given attribute into a join expression .
join the given join .
finds the join join .
/ * ( non - javadoc )
returns true if the end of the end of the end of the end of end of the end . < / p >
/ * ( non - javadoc )
gets the upload stream .
returns the name of the class name .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the key of the request path .
returns the content type for the given file .
creates a new { @link content } instance .
checks if the given parameter is a parameter .
returns the named parameter with the named name .
parses the parameters from the expression .
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
scans the annotations of the given implementation .
loads the implementation of the given implementation .
loads all interface classes from the given config descriptor .
loads an instance of the instance scope .
loads an instance of the instance .
returns the instance of the given descriptor .
returns the declared constructor for the given implementation .
scans all dependencies in the given class .
initializes the static method .
builds the string representation of the implementation .
returns the annotation of the given annotation .
checks if the given annotation has an annotation .
returns the annotation of the given annotation .
get the interface method for the given interface .
returns the interceptor class of the given class .
gets the interceptor class of a method .
instantiates a new instance of the given type .
returns the handler for the given type .
registers the given { @link type .
{
sets the value of the given property .
returns the type of a field .
get the dependency value .
returns true if the instance is required .
persist the file .
gets an observable that returns the previous entity .
sets the default link .
sets the default link . < / p .
executes the given request and returns the result .
executes the given request .
handles a response .
handle the errors .
handles all links .
handle header links .
handles the body .
parses the link object .
gets the value from the given key .
handles the capabilities .
checks if the given method is allowed to be allowed .
{
gets the full message .
/ * ( non - javadoc )
/ * ( non - javadoc )
registers the {
registers a scope factory .
registers the instance of the given instance .
registers the instance processor for the given processor .
registers a class processor .
/ * ( non - javadoc )
start all the classes .
destroy all the classes } .
/ * ( non - javadoc )
returns a new instance of the instance .
registers the initialization of the given config .
pojo the static static initialization initialization .
adds an argument to the list .
creates a new target file list .
writes the given file to the given file .
serializes the jaxb to an xml string .
writes the content of this object to the given writer .
initialize the configuration .
checks if the given template has a reference to the given template .
create a new { @link parameterized } instance .
creates a new { @link parameterized .
/ * ( non - javadoc )
sets the request path .
{
waits for a method to be invoked .
{
/ * ( non - javadoc )
returns the arguments for the given content type .
{
{
check
gets an observable that returns an observable of the given scheduler .
/ * ( non - javadoc )
{
sets a field of the given field .
saves the reply to the reply .
adds a capture to the logger .
returns the appender appender .
removes the specified appender .
clears the specified appender .
/ * ( non - javadoc )
{
parses the model .
resolve the proxies from the resource .
gets all the files from the directory .
parses the given directory from a directory .
check if the model is resolved .
returns a set of contents of the contents of a resource set .
sets the model dirs .
sets the file extensions .
sets the model resources .
{
matches the expected level of the given list of the expected level .
group and match the expected to match the expected entries .
checks if the given list contains the same as the expected row } .
compares the expected row .
subst
{
{
returns a new { @link analyzer for the given { @link validator } .
{
execute
#ifdef java6
#ifdef java6
{ @inheritdoc }
check if the argument contains an argument argument .
returns the argument value of the given arguments .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the model dir .
gets the template dir .
converts a date to a numeric date
/ * ( non - javadoc )
open the url .
starts the browser .
configures the application .
configures the window .
prints the dialog in html .
saves the given qnetworkreply file to the file .
writes the contents of the given outputstream .
opens the window .
/ * ( non - javadoc )
attaches the request to the request .
detaches the request from the server .
returns the cookies of this request .
returns the session .
dumps the http request .
loads the given class name .
returns a list of meters that have been meters .
invoked when the configuration .
pushes an event to the queue .
{
sets the remote host .
loop to the queue .
get a parameter by name .
sends the event ---
removes a prefix from the path .
check if the given directory is a sub - directory .
gets the parent dirs of a directory .
gets the common dir of a file .
return the given a string .
returns a list of the given path .
return
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the given request is empty .
sends the unauthorized response .
sends the bad request .
sends not found {
sends an error .
dump an error .
sends a json object .
adds a template template to the list .
adds the list of param .
initialize the template .
finds all references that match the given template .
{
/ * ( non - javadoc )
enables / disables the entity should be enabled .
deletes the dialog .
deletes the endpoint .
initialize the argument .
open a buffered reader .
/ * ( non - javadoc )
creates a new srcgen4jconfig
converts a byte array into a pem string .
returns the link headers .
/ * ( non - javadoc )
{
returns the counts of the given file .
returns an array of all files in this file .
returns the summary of all the counts .
returns a string representation of a file .
returns the summary of the summary .
writes the contents of the specified directory .
gets the sub - summary row .
/ * ( non - javadoc )
<p > get . < / interface .
gets the instance of the given interface .
gets an optional instance of the given interface .
gets the remote instance of the given interface .
gets the app factory .
adds a filter row .
{
get the setup class .
gets the list of model files .
returns the list of model resources .
{
sets the container }
{
fit a directory .
parses the xml file from the given inputstream .
called when an error .
parses a list of the given reader .
returns an array of {
convert a string representation of an object to an object .
checks if the given type is an array .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
processes the arguments from the given member .
extracts the cell parameter from a cell .
/ * ( non - javadoc )
{
this method that have been interpret .
get the linked fixture with the given table .
loads a fixture from a fixture .
sets the ssl dependency .
{
check if the given request is requested .
check if the request is android .
/ * ( non - javadoc )
/ * ( non - javadoc )
removes the element at the specified index .
inserts an element at the specified index .
/ * ( non - javadoc )
{
handles the endpoint .
{
returns a list of properties of a given bean .
returns a list of properties of a bean .
returns the annotation of the given annotation .
{
{
encoding
logs a message .
looks up a server .
check if the whois has a whois .
/ * ( non - javadoc )
returns the managed class from the given interface .
returns the managed method from the given requesturi .
returns the class name of the class name .
process
process
#ifdef java6
/ * ( non - javadoc )
initialize the attribute .
/ * ( non - javadoc )
returns the value of the requested name .
adds a cookie .
adds a converter to the converter .
removes a cookie from the list .
returns an iterator over all the cookies in this cookie .
/ * ( non - javadoc )
returns the list of producer .
{
compiles the given class .
verifies whether the given token is a response .
gets the value of a file .
ensure that the given uri .
generates the properties object .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the http servlet request .
/ * ( non - javadoc )
executes a transaction .
executes an immutable transaction .
/ *
{
returns the list of all the files .
{
{
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the request path of the given request .
save the dialog .
sets the driver for the specified driver .
gets the concrete config .
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the given path starts with the given path .
returns a list of all the given model .
get a date as a date .
get a date as a date .
returns the { @link window .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the http : //
/ * ( non - javadoc )
{
{
binds the given {
reads the meta data from the file .
--------------------------------------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the key of the given resource .
gets the content of the request .
put the content of the request .
deletes the content of the request .
{
/ * ( non - javadoc )
get the result set .
/ * ( non - javadoc )
{
subscribe the configuration .
called when the upload is allowed .
uploads the notification to the blob .
delete the dialog .
{
returns the value associated with the argument .
perform a table .
extract the column parameters from the row .
copies all params to the fixture .
gets the names of the arguments .
check
adds a period to the timer .
schedules a task .
removes the task .
{
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
{
{
{
sets the connection .
{
{
verifies that the given challenge .
gets the image from the specified token .
returns a map of challenges .
configures the application .
prints the welcome banner .
prints the stopped banner .
create a chameleon .
gets the deploy directory .
registers a shutdown hook .
returns true if the given string is enabled .
{
{
returns the method method of the given a method
waits until the current thread .
transforms the current row .
triggers the notification .
trigger the trigger .
gets the first matching matching event .
inserts the given row into the table .
returns the counts of all the counts .
{
format the given format .
setter for score - sets
indexed getter for variants - gets an indexed value -
setter for variants - sets
getter for question - gets
setter for question - sets
this method will be called when the constructor .
indexed getter for token - gets
indexed getter for dep - gets an indexed label of a token
setter for dep - sets
indexed getter for semantic - gets an indexed type of the semantic token
setter for semantic - sets
indexed getter for part - gets the part of the part of a token
setter for part - sets
getter for lemma - gets
setter for lemma - sets
getter for main - gets
setter for main - sets
getter for is - gets
setter for is - sets
getter for determiner - gets
setter for determiner - sets
indexed setter for sections - gets an indexed value -
setter for sections - sets
indexed indexed value for sections
indexed setter for sections - sets an indexed value -
indexed getter for labels
setter for labels - sets
indexed indexed indexed indexed indexed indexed indexed indexed indexed indexed indexed list of the section of an indexed document .
indexed setter for labels
indexed getter for names - gets a list of the names of the concept .
indexed getter for uris
setter for uris - sets
indexed getter for ids - gets a list of the ids of the concept .
setter for ids - sets
indexed setter for mentions - gets an indexed value -
setter for mentions - sets
indexed getter for types
setter for types - sets
indexed getter for target
setter for target - sets
indexed setter for rank
setter for rank - sets
indexed setter for query - gets an indexed query
setter for query - sets
indexed getter for answers
setter for answers - sets
indexed indexed indexed indexed indexed indexed indexed indexed value -
indexed setter for answers - sets an indexed value - a list of answers answers
indexed getter for query - gets
setter for query - sets
indexed getter for hit - gets
setter for hit - sets
indexed indexed list of an indexed value - indexed indexed indexed indexed search value - a collection of hit .
indexed setter for hit
indexed getter for abstract - gets
setter for abstract - sets
getter for search - gets
setter for search - sets
setter for id - sets
indexed getter for offset - gets an indexed value -
setter for offset - sets
indexed getter for offset - gets an indexed value -
setter for offset - sets
getter for begin - gets
setter for begin - sets
getter for end - gets
setter for end - sets
getter for aspects - gets
setter for aspects - sets
indexed setter for triple
setter for triple - sets
indexed getter for source - gets an indexed relation .
setter for source - sets
getter for subject - gets
setter for subject - sets
getter for predicate - gets
setter for predicate - sets
indexed getter for object - gets
setter for object - sets
getter for uri - gets
setter for uri - sets
indexed setter for operator - gets an indexed value -
setter for operator - sets
indexed setter for args - gets an indexed value -
setter for args - sets
get the metrics for the given class .
get the metrics for the given class .
indexed setter for concept - gets an indexed value -
indexed getter for matched - gets an indexed name of the concept of the concept
setter for matched - sets
indexed getter for score - gets an indexed score of the concept
indexed getter for text - gets
setter for text - sets
indexed getter for mention
setter for mention - sets
indexed getter for id - gets an indexed id of the mmax
setter for id - sets
getter for name - gets
getter for abbreviation for abbreviation
setter for abbreviation - sets
setter for concept - sets
indexed setter for variants - gets an indexed value -
setter for variants - sets
indexed setter for named - gets an indexed value -
setter for named - sets
indexed getter for concept - gets
setter for concept - sets
creates a new { @link deployment instance .
indexed setter for occurrences
setter for occurrences - sets
setter for names - sets
getter for id - gets
indexed setter for concepts
setter for concepts - sets
indexed getter for original text
setter for original - sets
indexed getter for args - gets an indexed value -
setter for args - sets
indexed getter for label - gets
setter for label - sets
returns the next clear bit in the list .
sets the element at the specified index .
returns a string representation of the fields .
{
free the buffer .
{
extend
parse a new association .
creates a new {
creates a new {
finds a record with the specified key .
{
writes the contents of the buffer .
returns a new list to a list .
concatenates two arrays .
joins the given delimiter using the given delimiter .
joins the given collection of strings using the given string .
merges the elements of the elements into a new array .
merges the elements of two lists .
removes the element from the array .
removes the elements from the list .
returns an array of <code > element from the specified array .
creates a list of values from the given list of indexes .
assigns the given array of values to the given array .
map
/ * partition into a collection of strings .
rehash
returns the predicted position in the array .
finds the next separator .
finds the next separator .
returns a string representation )
method to get a string representation )
/ * ( non - javadoc )
returns a string representation of this object .
/ * ( non - javadoc )
checks if the brackets is parenthesis .
method to the details of a string .
returns the source id of the annotation .
method add .
/ * ( non - javadoc )
/ * ( non - javadoc )
*************************************************************************
{
checks if the polymer id is a polymer .
checks if the given polymer id is a polymerid .
checks if the details of the details .
checks if the group id is a group .
checks if the details of the details .
checks if the given string matches the same as repeating .
/ * ( non - polymer is peptide or not .
converts this method to a string .
method called when the action is called .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the simple polymer of the given string
returns the current grouping notation .
returns a string representation of the output .
returns a string representation of all the annotation .
returns a string representation of the connections of the connections .
returns a string representation of the groupings representation .
returns a string representation of the annotation .
method to a list of all the polymers
method to generate a list of the polymer .
returns the listofids
returns the polymer of a polymer
sets the polymer elements .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a string to a string .
sets the annotation .
set the count of the count .
method to decide if the string is a valid monomer
method to construct a group
method to decide if the entity to an entity
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of this list .
parses the given test .
/ * ( non - javadoc )
/ * ( non - javadoc )
add a list of the contents of the contents
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
this function is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method to initialize the form .
gen - last : button1action
define the ambiguity ambiguity .
/ * ( non - javadoc )
returns a new {
{
creates a new { @link aedge } with the given edges .
creates an array of { @link aedge .
initialize all the list of paths that have been added to be used in the incoming .
returns a list of nodes that are contained in - reachability ) .
returns a stream of bytes to a stream } .
/ * (
<p > subscribe .
subscribe a callback ---
subscribe the number of bytes from the specified pattern .
unsubscribe the given pattern .
sends a message id .
sends a sync request .
send a sync request .
terminates a list of priority ) trans ) .
forward a request to the specified destination .
send an asynchronous asynchronous ) request to the specified destination .
send an asynchronous request to the client .
sends an erlang to the server .
recv
recv
recv
recv
recv an erlang .
{
shuts down the server .
returns true if the given throwable is non - local handling .
returns a { @link throwable .
returns the number of the current state .
blocks until the state of the thread has been completed .
notify the state of the run state .
creates the worker .
adds a worker worker to the list .
registers a worker queue .
deregister the given a worker .
/ *
tries to release the given queue .
runs the given {
scans the work of a task .
blocks until the work has completed .
called when the help .
try to try to try to release .
returns the number of queued task count the number of surplus .
try to terminate the queue .
/ * submit .
push the external task .
returns the common submitter queue .
try to try to compare a task .
completes the number of the external help .
invokes the given task .
submits a task to the fork .
get the number of the number of steal .
creates a new {
lift the elements of elements into a list of elements into a list .
{
blocks until the number of the specified timeout .
returns an empty { @link leaf } of a given abtreespec .
returns the index of the specified key associated with the given key .
{
builds a string representation of the given astatement1
{
{
creates a new { @link alist } .
creates a new { @link alist .
creates a new instance of { @link alist } .
reverses the given elements of this {
{
creates a set of elements from the given iterator .
creates a set of elements from the given iterable .
creates a set of elements from the given iterator .
creates a set of elements from the given iterable .
returns a string representation of the given prefix .
finds the first element of the given iterable .
returns true if all elements of the given iterable are present .
returns an empty list with the elements of the given list .
returns a new { @code x - value pairs of the given set .
returns a collection of elements from the source into a stream .
returns a set of elements from the given iterable .
flatten the elements into a single collection .
/ * elements into a list .
returns a set the elements of the given iterable .
collects elements from the elements of the elements .
collects the elements of the given list into a new list .
collects the elements of the given set into a new set .
/ * documented view of the elements of the given iterable .
/ *
returns an empty set that contains all elements of the given set .
/ * documented view of an iterable into a map into a map .
creates a new map ) of the given list in - > ) .
applies the given iterable to the given iterable .
fold the given list )
converts a collection of objects into a { @link collection } to a { @link object } to a { @link acollectionwrapper } .
create a new acollectionwrapper to a collection .
creates a new {
copies the given { @link array into an array of the given array .
return
return
return
return
return
creates a { @link ahashmap } from } instance of { @link iterable .
returns a {
creates a { @link ahashmap } from the given { @link aequality } .
merge
{
pushes a task to the pool .
removes a runnable from the queue .
removes the fifo fifo from the list .
converts a { @link aoption } into a { @link aoption } .
creates a new alonghashmap to a { @link iterable } .
creates a new { @link throwable } from the given { @link number } .
merges the leaf maps to the leaf maps .
returns an empty { @link alistmap } instance .
creates a new { @link alistmap from } from the specified { @link iterable } .
creates a {
creates a alistmap from the given keys .
appends a tree to the tree .
{
creates a new {
{
loads a raml model .
normalizes the resource name .
/ * ( non - javadoc )
parses the xml document from the } .
{
{
appends the given array to the end of this buffer .
returns an array of buffers in an array of buffers .
returns the character at the specified index .
returns a sub - sequence of the given start with the specified character .
appends a string to the buffer .
searches for given a list for the given the list . < / p >
searches the given list of warnings .
finds the first element in the list .
serializes the given type to a json object .
{
{
{
{
adds a new method .
adds a verb to add a verb .
adds the given patterns .
send an email email message .
/ * ( non - javadoc .
binds the given { @link route } .
binds the given {
checks if the request is modified by the request is modified .
checks if the given etag is none none .
sets the file download header .
returns a map of parameters that match with the given prefix .
encodes the given map into a prefix .
encodes the given user name into a string .
{
returns the app configuration .
renders a string .
renders a template template .
creates a new html file .
returns the int value of an integer .
gets the filename of a path .
returns the filename of the given path .
applies a relative path to the given path .
removes the path from the given path .
trims the elements from the array .
removes all duplicate strings from the given array .
splits the given array into a properties object into an array of the given properties array .
convert a collection of strings to a delimited string .
fills the digit digit of the given string .
fills a hex string with the given width and width .
fills the binary string with the given width .
convert a int to a digit .
converts a int to a hex string .
converts a int to a binary string .
cut the left - bit string of the given string .
<p > removes the first substring of the string .
checks if the given string is a valid string .
escapes all html characters .
returns the size of the size of the given size .
returns a string representation of a string .
{
{
login
removes the user from the cache .
get
gets the login user .
sets the login member .
checks if the given password is valid .
saves the member in the given cookie .
encrypt
gets the user from the cookie .
encrypts the given string with the given string .
decrypt
decrypt
decrypts the given key using the given key .
/ * documented static with the specified message message
creates a new { @link ajax } with the given { @link message } .
creates a new { @link ajax message .
creates a new { @link ajax } with the given { @link message } .
creates a new { @link ajax } .
creates a new { @link ajax } with the specified { @link message .
creates an error message .
constructs a new { @link ajax } with the specified exception .
creates a new { @link ajax message .
constructs a new { @link ajax } with the given { @link string } .
generates a key code for a given product .
digest
{
builds the set of excluded method name .
creates a { @link authz .
scans a list of the given list of annotations .
creates the action key for the given controller .
returns the list of authz from the method .
returns the list of the given class .
check if the given method is present in the given method .
logs the given username .
logs the user .
/ * ( non - javadoc )
appends a file separator .
browser
returns the user - defined in the request .
get
checks if the given request is a robot .
gets the cookie from the specified name .
sets the cookie .
returns the domain name of the server name .
check if the given string is a string .
returns the http port of the request .
get
return
get
checks if the request is null .
replacetaghtml
logs a debug message .
returns a call to use for the given level .
sets the error correction level .
sets the fore color .
sets the back ground color .
returns a hashtable of this hint .
registers the entity .
sets the integer validator .
converts a list of data to a string .
delete a list of strings .
create
replaces all occurrences of the given pattern with the given pattern .
convert a char array to a simple byte array .
converts a {
convert a byte array to a simple array .
converts a char array to a byte array .
convert a {
returns true if the given character is a sub - delimiter .
returns true if the given char is a unreserved .
returns the index of the first occurrence of a string .
returns the index of the first occurrence of the given string .
checks if the given string contains all digits digits .
find
returns the locale data for the given code .
returns the locale for the given language .
returns the locale for the given language code .
resolves a locale code for the given variant .
decodes a locale code .
returns the number of { @link number .
/ * ( non - javadoc )
initialize the extension .
renders a template .
returns a {
returns a new { @link promise in the given { @link promise } .
{
creates a new resource from the classpath .
get the media type from the request .
resizes the given image to the given file .
resizes the given image to the given file .
crop
convert the given image as a base64 string .
adds a file to the file .
creates a new { @link macro } instance } that map .
parse a template .
invokes the given {
invokes the given {
set the list of the service .
gets the rest operations .
renders the ajax error .
renders the ajax forbidden .
returns a template .
parse the path of the url .
renders the data tables .
renders the data tables .
renders the data tables .
renders the data tables .
renders the empty data .
renders the given model .
renders the sql data grid .
renders the given paginate .
renders the given sql group .
gets the login .
gets the principal .
gets a date by name .
returns a date from the request .
sets the items of items .
/ * ( non - javadoc )
/ * ( non - javadoc )
registers a { @link closeable } instance } with the given } .
decodes the given string into a byte array .
encodes a byte array into base64 notation .
encodes the given part of the given part .
decodes the given string .
returns a list of all bindings in the given injector .
returns the current method trace .
tries to compact the memory .
propagate or removes the metrics to the metrics .
propagate the given { @link metrics .
check if the passed request is a valid request vector .
encodes a string into a string .
unchecked
returns the stack trace as a string .
checks if the given exception is caused by the given exception .
return
paginate
paginate
paginate
returns the charset of the given file .
finds a list of dbobject by id .
finds a list of the given collection of the given query .
find a dbobject from the given collection .
closes the given output stream .
closes the given writer .
copies the contents of the given input stream to the given output stream .
copies the contents of the given input stream to the given output stream .
copies the contents of the input stream .
copies the contents of the given input stream } .
copies the contents of the given reader to the given writer .
copies the content of the given input stream to the given output stream .
copies the contents of the given reader to the given output stream .
reads the contents of an input stream .
compares two streams .
compares the contents of objects .
applies the given stage to the given stage .
sets the given {
sets the elements of the given function .
set a pipeline with the given function .
sets a function to the given function .
sets the given predicate to the given predicate .
sets the element at the given predicate .
sets the given predicate .
sets a pipeline at the given index .
removes the element at the specified index .
sql
unmarshals the given string into an object .
/ * ( non - javadoc )
get a file from the classpath .
check if the given url is a url .
returns a pipeline of this {
zip a file into a zip file .
unzip the given zip file into a zip file .
/ * to the response .
initialize the logger .
creates a new {
/ * ( non - javadoc )
checks if the given string matches the given pattern .
checks if the given type is a builtin type .
checks if the given type is a collection of interfaces .
checks if the given type is supported .
returns true if the given type is an array .
returns the type of the given type .
returns the default implementation of the given type .
determine if the given type is a core value .
checks if the given type is defined in the given type .
adds a core value type .
returns the raw type of the given type .
matches a regular expression against the given regular expression .
checks if the given string is email .
checks if the given string is a mobile value is a mobile .
checks if the given string is a tel .
checks if the given string is a phone value .
check if the given string is a birth day .
checks if the given value is an identity card .
checks if the given value is a zip code .
checks if the given string is a currency .
checks if the given string is a chinese .
checks if the given value is a url .
checks if the given string is a date .
is
creates a new qrcode object .
toqrcode
returns a string into a string .
reads a qrcode from a qrcode file .
reads the given url from the given url .
returns a string representation of a string .
writes the given qrcode to the file .
/ * to a qrcode
writes the given qrcode to the given qrcode .
parses the given {
{
{
{
/ * ( non - javadoc )
returns a new configuration .
gets the version of the implementation .
gets the template path .
encodes a string into a string .
decodes a base64 encoded encoded byte array .
convert a hex string to a byte array .
read a properties from an inputstream .
reads the content of the given input stream into a string .
reads the content of a file into a string .
reads the content of a file into a file .
reads the content of the given input stream .
writes the given byte array to the given file .
writes the input stream to the outputstream .
writes a file to a file .
copy a directory to a file .
/ * when the view is granted .
called when the view is granted .
compares this { @link money } to another .
returns a new { @code money } with the specified { @code other } .
returns a copy of this money with the result of this { @code money } .
returns a new { @code bigdecimal } with the specified rounding mode } .
returns a new { @code bigdecimal } with the specified number of this { @code bigdecimal } .
allocate a new array with the given targets .
allocates a new array of money ) .
factory method for creating a new instance of { @link money } .
creates a new security handler .
loads a list of a property .
serializes a document into a document .
get a document from a file .
get a document from the xml file .
parses a document from an input stream .
checks if the given signature is valid .
creates a document from a document .
returns the default class loader .
creates a class for the given name .
gets the user class .
check if the given class is safe is safe .
returns the name of the given class .
returns the package name of the given class .
returns the package name of the given fq .
returns the qualified name of the given class .
gets the qualified method name .
returns the constructor of the given class .
returns the number of methods for a given method name .
checks if the given method is a user level .
checks if the given class is primitive .
checks if the given class is a primitive array .
check if the given class is a primitive .
resolves the given class if it is a primitive class .
checks if the given class is assignable to the given type .
checks if the given type is assignable to the given type .
converts a resource path to a class name .
converts the given class name to a resource path .
adds a resource path to the package path .
returns all interfaces of the given instance .
returns all interfaces of the given instance belongs to the given instance .
returns all interfaces of the given class loader .
creates a composite interface .
{
write the configuration file to the temp file .
adds a new value .
{
returns the pid of the pool .
lock a file for a file .
returns a map of variables that match the given uri .
compares the given {
inserts a permission into the bean .
checks if the given class is a subclass of the given class .
checks if the given interface is an interface .
returns a map of fields .
create a new { @link druid .
{
creates a new { @link module } for the given { @link class } .
returns a set of interfaces of the given result .
null
/ * ( non - javadoc )
returns the raw {
returns the primitive type of the given type .
{
converts an object to the specified object .
converts the given object to a new object .
perform a parameter .
returns a cookie for the given name .
creates a session to use {
calculates the digest of the given salt .
initialize the data source .
sets the ftl variable .
sets the specified field .
sets the specified value .
creates a new { @link dtresponse .
creates a new response .
creates a new { @link jsonresponse .
creates a new { @link xmlresponse } . xml .
returns the id of the id .
validates the given card id .
validates that the id is valid .
validates the given id of the id .
validates the id of the id .
checks if the given id is a valid id is a valid id .
return
convert a char array to an int array .
returns the sum of the power of an array .
returns the check code18 code .
get
returns the birth of the given the given id .
returns the year of the given id .
returns the gender by id .
returns the province by id .
checks if the given date is a date .
returns the required param of a map .
returns the value mapped by the given key as parameter } .
{
sets the top body of the parent body .
{
sets the request to the bean .
request the activity .
checks if the given bean is required .
shows the dialog .
grant
invokes all methods that are annotated with the given result .
checks if all values of the given .
checks if the given values are denied .
get the method invocation for the given method .
dynamic
checks if the given model is a new model .
find
finds the record in the sql .
delete a model from the given ids .
checks if the given model is a new model .
paginate
gets the application model .
checks if the given exception is an exception .
process the queue .
{
constructs and initializes a new { @link login } with the given { @link throwable } .
receive parameter names of the parameter .
<p > convert ) } .
check if the given string matches the given pattern .
initialize this method .
*************************************************************************
called when the button . <p >
registers the given type with the given its { @link class } .
converts the specified value } .
{
/ * properties to the controls .
returns the instance of the given interface .
read the usage :
reads the next reader from the stream .
puts a value associated with the specified key .
removes a key / value pair .
returns the protobuf type of the given value .
returns the protobuf entity .
check if the given class is a protbuf
gets the protobuf class from the pojo .
returns all the map of the given class .
returns the protobuf setter setter for the field .
returns the protobuf getter getter for the given field .
returns the pojo setter for the given field .
returns a validator .
<p > make filter filter . < / p >
convert this controls to the properties .
set the properties to the controls .
/ * (
gets the mapper mapper .
initializes the mapper mapper .
returns the { @link factory } .
to
to
to
converts a url to a bean .
to
converts a json object into } .
to
to
to
to
to
to
parses the given json object to a bean .
converts the given { @link string into a string .
closes the given connection .
closes the given prepared statement .
closes the given result set .
returns a list of property injectors .
<p > fill entity value .
sets the borders of the borders .
creates a new instance of { @link constructor .
gets the access token .
sends a request to the specified target method .
sends a request to the target method .
sends a request to the specified proxy .
sends a request to the client .
send
sends a request to the client .
send
sends a body to the client .
sends a body to the client .
sends a body to the client .
sends a body to the client .
sends a body to the client .
sends the body of the given uri .
gets the http method .
gets the http entity method .
executes the given http request .
get
creates a new {
getupc
return
/ * url of the url .
finds a collection of elements in the collection .
returns a list of elements of the elements of the given iterable .
creates a new set of elements from the elements of the given iterable .
{
authenticate the given user .
get the user record .
get
adds the given { @link float } .
<p > returns the sub - value .
<p > returns the bigdecimal value .
returns the given { @code double } .
<p > returns a float value to a bigdecimal . < / p >
<p > returns the value of the given { @code v1 } . < / p >
<p > returns the value of the specified { @link bigdecimal .
rounds the given number to the given { @link double .
rounds the specified number of bytes .
convert a double to a float .
convert a float to a double .
{
parses a date from the given string .
parses a date using the given pattern .
copies all attributes from the target object .
copies all attributes from the target object .
browse
visits the type declaration of the given type .
<p > fill given field ) . < / p >
check if the given file is a path .
{
returns an array of items into an array of objects .
returns a collection of elements from the elements in the given collection .
returns a list of elements from the given iterable .
creates a new set of elements from the given iterable .
copies the contents of the given input stream to the given output stream .
copies the contents of the input stream to the output stream .
create an object from a class name .
convert a string to a date
convert a date to a string .
create a filter filter .
returns the property property . <p >
sets a property . <p >
adds the app to the frame .
{
/ * ( non - javadoc )
prints the command line .
parses a command - line } .
initialize this object .
constructor .
returns the next source file in the list .
{
{
{
initialize the transfer .
add the next file to the source file .
adds the controls to the view .
set the controls to the properties .
convert the properties to the controls .
creates a collection of urls from a class loader .
creates a collection of all the resources from the given in the specified package .
<p > instance of { @link password } .
returns the default class loader .
loads a class from the classpath .
loads a class from the classpath .
returns the canonical class name of a class name .
get a url of the specified name .
loads a resource as a stream .
gets the input stream as a stream .
returns the name of the given class .
this method .
initialize the uri .
initialize the scheme .
initializes the authority of the authority .
initializes the path of the uri .
returns the part of the scheme . <p >
sets the scheme scheme .
sets the userinfo of the userinfo .
set the host host .
set the port port .
sets the path of the path . <p >
appends a path to the path .
sets the query string . <p >
sets the fragment .
returns the uri of the uri . <p >
checks if the given address is a well - formed address .
encodes a string into a byte array .
encodes a string to a string .
<p > write a field . < / p >
creates a new statement / code from <code >
creates a prepared statement for a <code > object .
initialize the service .
gets the muffin from the url .
set the muffin url .
gets the clipboard contents )
set the contents of the clipboard .
replaces the clipboard action with the given name .
opens the given file .
loads all services of services .
sets the service params to the given operation .
returns a map of service params .
finds the parmetrized associated with the given id .
finds a collection of a given class .
debug the debug .
parses a query from the given response .
extracts a device from the device .
gets a list of devices .
need to need to need to need to need to be called when the new buffer .
appends the element at the end of this buffer .
appends the given buffer to this buffer .
returns an array containing all the elements in this buffer .
{
format
format
format
format
format
get
converts an xml representation of an object into an object into an object .
converts a string representation of an xml representation .
cast a string to a string .
convert a string representation of a bean into a bean object .
parses the given a value of the value .
this method .
gets the driver class name .
/ * ( non - javadoc )
returns a map containing the items in - memory format .
returns the last modified date .
post a message .
/ * ( non - javadoc )
<p > write entity settings . < / p >
checks if the specified class is available .
returns true if the given class is a } .
create a new instance of {
/ * ( non - javadoc )
creates a new {
returns the entry at the specified index .
<p > retrieve entities from database . < / p >
returns an audit instance .
<p > make commit .
visits a package declaration .
visits a {
visits a class declaration of a class declaration .
visits a executable declaration .
add the controls to the view .
adds all the listeners .
{
/ *
action method .
build a new common properties } object .
gets the option associated with the given key .
<p > sync entity .
returns a { @link declaration } that matches the given mods .
returns a { @link declaration filter } instance .
returns true if the given declaration matches the given declaration .
returns true if the given declaration matches the given declaration .
returns a collection of elements that match .
returns a collection of { @link declaration () .
returns a map as a map .
sets the field value .
make the given constructor .
gets the super class genric .
gets the type of the super class .
returns the super class genric for the given class .
gets the type of the given class .
returns the type of the interfaces of the given class .
returns all interfaces of the given class .
get
adds the controls to the view .
{
{
initialize this object .
initialize this transfer .
add
constructor .
finish
returns true if the next pend is next pend .
skip the file is a file .
adds the controls to the view .
set the controls properties .
set the properties to the controls .
returns a new {
gets the connection .
returns true if the database is exist .
builds a connection properties .
copies the value of the given source map to the given source map .
initialize this object .
initialize the transfer .
finish the transfer .
add the next file to the source file .
gets the backup filename .
{
{
check if the given array of the given url .
audits an audit event .
*************************************************************************
run method .
this method processes the given a destination file .
prepare an object query .
replaces all occurrences of the given origin .
convert a byte array to a string .
<p > read entity settings . < / p >
<p > read attributes .
returns the list of the given name .
parse a named sql sql sql sql sql sql .
gets the form .
gets the model .
{
<p > make filter filter . < / p >
processes the given list of required arguments .
authenticate a subject .
<p > read entities ) and store . < / p >
initialize the client .
initialize the transfer .
add
returns the given string .
returns true if the specified column supports the specified type .
returns true if the specified column supports the specified type .
returns the sql type of the given type .
returns the identifier of the given name .
returns the executable executable of the given name .
search for the given parameter .
check if the given class is compatible with the given class .
writes a character array ) .
normalizes the given path .
concatenates the given child string with the given child string .
returns the relative path of the given path .
returns the given path to a unix path .
returns the given path to a windows path .
converts the given path to a system .
create a new instance .
returns the declared constructor for the given parameter .
search for declared constructor that matches the given parameter types .
get a method info .
search for a method in the given class .
returns the asm accessor .
create a new instance of this class .
returns the value for the given field .
serializes the given pojo to a protobuf entity .
serialize a message to a protobuf .
converts the given collection of non - protobufs to a collection .
sets the protobuf field value .
sets the value of the given pojo .
check if the given file is a file .
{
<p > it s entities . )
creates a new instance of {
maps the labels of the given labels .
extracts the values of the given map .
<p > make database if it s autocommit . < / p >
returns the raw type of the given type .
resolves the given { @link type .
returns the type of the given type .
gets the generic supertype of the given type .
<p > fill entity value .
returns the last modified modified date .
initialize this object .
initialize the transfer .
called when the transfer .
/ * ( non - javadoc mode )
change the directory .
/ * ( non - javadoc )
/ * ( non - javadoc )
get an instance of a new instance .
get an instance of a new instance .
gets the declared field of the specified field .
returns an array of declared in the given class .
returns the declared method for the given class .
returns the declared constructors of the given a class .
returns the declared constructor of the given class .
returns all annotated methods of a given annotation .
returns all constructors of the given annotation .
/ * ( non - javadoc )
{
{
creates a new instance of {
checks if the given result is a result .
adds the controls to the view .
{
set the properties to the controls .
get
check if the given file is a path .
initialize this object .
constructor .
finish the transfer .
get the next source file in the zip file .
<p > replicate password .
<p > make a job . < / p >
<p > request cookies .
form
dumps a byte array .
returns the java class of the given type .
/ * ( non - javadoc )
<p > setter for last . < / p >
reads the class file .
resolve a utf8 string .
removes all occurrences of the given string .
return
<p > checks if the passed string } is empty . < / p >
default
returns true if they are equal .
checks if the given string starts with the given prefix .
checks if the given string ends with the given suffix .
returns the index of the first occurrence of the specified string .
returns the index of the first occurrence of the specified string .
case
returns the index of the first occurrence of the given string .
returns the last index of the given string in the given string .
returns the index of the first occurrence of the string .
returns the last index of the first occurrence of the first occurrence of the specified string .
returns the last index of the given string .
returns the last index of the array in the array .
returns the substring of a string in a string .
return
<p > returns the first substring of a string .
returns the substring of the given string in the given separator .
<p > returns the last substring in the string .
returns the substring of the given string in the given string .
returns a substring of the given string with the given the given tag .
returns the left - bit string .
<p > returns the right string in the given string in the given string . < / p >
returns the given string in - } in - based on the given string .
repeat a string .
removes all occurrences of the given separator from the given separator .
remove whitespace whitespace from the given string .
removes all occurrences of the given string .
removes all occurrences of the given string from the given string .
removes the end of the given string .
removes all occurrences of the given string .
removes all occurrences of the given string from the given string .
removes all occurrences of a string .
convert a string to a string .
{
<p > login . < / p >
{
{
{
clean up the state of the username .
initialize the audit properties .
initialize the message queue .
initialize the pw .
initialize the pw .
<p > sync entity .
/ * ( non - javadoc )
/ * ( non - javadoc )
add the controls to the view .
{
convert the properties to the controls .
returns the locale for the given language .
returns the locale .
returns the locale for the given language .
resolves the locale code .
resolves the locale code for the given locale .
decode a locale code .
returns the date format for the given locale .
returns the number of { @link number .
looks up the locale info for a locale .
creates a new { @link statement .
removes all the elements from this list .
pushes a new element .
removes the element from the stack .
returns a new input stream .
returns a new { @link charset () .
read properties from a file .
writes the properties file .
parses the given arguments .
add
registers an action with the given url .
gets the value of the named type .
initialize this property .
create a new control popup .
adds a list of the combo box .
creates a new { @link panel . jpanel )
returns the path info from the request .
encodes the given user name into a url .
check if the request is a flash request .
check if the given request is a robot .
sets a parameter .
/ * ( non - javadoc )
/ * ( non - javadoc )
builds a new { @link db } instance .
check if the given path matches the given path .
returns the first path of the path in the array .
check if the tokens are tokens .
moves the specified xofs to the specified xofs .
returns true if this rectangular rectangular } .
returns true if this rectangle contains the rectangle .
returns the intersection of this rectangular .
returns a union of this rectangular with the specified rectangular .
replaces the x - axis with the rectangular .
replaces the occurrences of this rectangular with another rectangular .
returns the rectangular of this rectangular .
returns the rectangular of this rectangular .
returns the filename of the given path .
returns the file extension .
{
set the properties to the controls .
returns the ofs
returns the number of the specified row in this row .
returns the bounds of the cell in the cell .
returns the absolute area of the area
gets the absolute area for the area .
finds the index of the index .
finds the y - wise cell
calculates the columns of the area .
calculates the rows of the area .
replaces the object name with the given pattern and replaces the given pattern .
create a new instance of the given class .
<p > instance of a specific class .
<p > sync entity .
adds the controls to the view .
unwraps the given throwable .
appends the given element to the buffer .
appends the given buffer to the buffer .
/ * ( non - javadoc )
dump a byte array into a string .
returns the given request to multipart request
returns the multipart request object .
add
add
adds a bean .
adds a bean .
adds a bean to the bean .
add
{
{
unwraps the given type .
main method .
called when the code is update the code .
copies the contents of the given code .
renders the given instructions .
visits all the arguments .
visits a {
visits a {
returns the value of the term .
initialize the servlet .
returns true if the step is a step .
returns a copy of this query } .
adds a child to this node .
removes all children from this node .
returns the next element in the list .
returns the next solution in the list .
adds the instructions to the list .
adds the instructions to the instructions to the parent .
evaluates the numeric type } .
called when the event )
registers the work panel .
processes the given input stream .
adds a layout component .
removes a layout from the given component .
returns the size of the given the parent .
/ * ( non - right container .
updates the component flags .
creates a new { @link microdata .
creates a new instance of the given type } .
--------------------------------------------------------------------------------------------
submits a submits request to the server .
evaluates the given term .
applies the given listing to the given listing .
this method .
compares two elements of the elements in the collection .
get the name of the server returns the name of the server .
get the value of the returns true .
get the value of the absolute object when the object .
get the boolean value of the server
get long value of long
get float value of the float value
get double value of a double value .
unwraps the unknown type of the unknown type .
/ * ( non - javadoc )
tag :: start []
renders a button .
returns the name of the specified functor name .
returns true if the given resolution is a functor .
resets the state of this object .
initialize the input .
returns the value associated with the specified key .
returns the index associated with the given key .
adds the specified key / value to the mapping with the cache .
sets the value at the specified index .
{
removes the element at the specified index .
returns true if the given property has a property .
sets a property .
/ *
checks if the given type is assignable to the given primitive type .
initialize the method .
change
returns true if the given resolution is a real .
{
initialize the lookups of the given node .
unify
determines if the given term are equal to see if they are equal .
unify
ends the end of the scope .
compiles the given sentence .
compiles a clause .
compiles a query .
finds the max arguments in the clause .
compiles a head of the given expression .
allocates permanent program variables of the given clause .
allocates the permanent query registers the given term .
gather the position of the given clause .
display the compiled predicate .
display the compiled query .
puts a padded int32as into the buffer .
convert a byte array to a string .
sets the id of the attribute .
returns the value of the attribute .
sets the value of the attribute .
returns a sentence
reads a term .
get the item associated with the given type .
checks if the given class exists .
checks if the given class is a sub type .
check if the parent type is a sub - type .
checks if the given class is a sub - type .
returns the class of the given class name .
creates a new instance of the given class .
create a new instance of a given constructor } .
calls a method on a method on a method .
call a method on the given object .
calls a static method on the given method .
get a constructor from the given class .
finds a set of a given property .
renders the table .
returns the url .
get
get
returns an atomic sizeable queue queue .
get
get
get
get a queue from the atomic queue .
gets the type of an object .
resets the queue .
enqueue the start of the given collection .
finds the goal that match the specified in the search .
search for the goal in the tree .
returns true if the given resolution is a step .
creates a new instance of the given range .
returns all the set of all the values in this set .
returns an iterator over all the values ) of this iterator .
evaluates the given numeric type .
determines if the given resolution is a step .
creates the continuation states .
{
/ * ( non - javadoc )
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the given name to the list of aliases aliases .
add a alternate dimension to the table
adds a dimension to the table .
builds the config .
/ * ( non - javadoc )
finds all free variables that match the given query .
finds all non - anonymous variables that are non - anonymous variables .
flatten a term of the given term .
adds a term to the given term .
converts a term to a clause
compares two nodes .
reads a file as a string .
reads a file as a string .
writes the object to a file .
reads a string representation of the given input stream .
adds a new object to the list .
removes an object from this list .
adds an element at the end of the list .
removes the element at the specified index .
adds all of the given collection to this list .
enter the given clause .
enter the given predicate to the given predicate .
creates a new search node .
applies the given functor to the given functor .
generates a trace indent of a trace .
compiles the body of a list of a functor .
compiles the body of a list of arguments .
allocates the argument registers the given expression .
allocates the temporary registers of the given expression .
returns true if the local variable is a local variable .
returns true if the last body is a last body of the last body .
{
returns the majority of the given property .
checks if the given property have the same classification .
choose the best property to a string .
create a new {
returns a new functor atom with the functor .
create a new variable with the variable variable name .
executes the given action .
returns a list of the given index .
paints the track .
paints the thumb .
returns the minimum size of the thumb .
sets the texture .
document me!
paints the image .
creates a buffered image with the specified type .
creates a graphics2d .
creates a new image with the image } .
creates a new packed image .
visits a {
take a request from the server .
{
process a json request .
processes a request .
sets the service exception .
handles an http request .
sets the given { @link schema } .
splits a key into a key .
creates a list of report } in a {
restores the undo stack .
check if the column contains the given column .
enter a clause to the given the clause .
enter the given predicate .
sets the search algorithm algorithm .
searches for a node in the queue .
opens the grid .
get the rel when the anchor is rel .
get the href when the user has been absolute .
waits for a browser to the server .
unwraps the unknown type of the server .
{
resets all the token .
main method .
returns a list of sentences .
/ * ( non - null clause .
returns a term term .
returns a list of terms of the given terms .
consumes an atom .
functor
returns a list of the functor .
return
returns the term variable .
literal
literal
literal
consumes the next atom .
consumes the current directive and consume the directive .
applies the specified operator to the given operator .
initializes the built ins
consumes a token .
consumes the next token from the next token .
/ * ( .
/ * ( rollback .
returns a collection of elements from the elements into a collection .
sets the instructions of the instruction .
reserve a call to the call .
-----------------------------------------------------------------------
-----------------------------------------------------------------------
returns the specified number of the specified by the ticks to the number of milliseconds .
converts the number of ticks to a year
converts a number of ticks to a date
sets the number of hours in hours set to the number of hours .
sets the number of minutes in minutes to the specified minutes .
sets the number of seconds in seconds to set .
-----------------------------------------------------------------------
-----------------------------------------------------------------------
sets the number of days in the given number .
-----------------------------------------------------------------------
puts a time only as a string format .
puts a time into a string into a string .
returns the number of the year in the given year .
reads a byte []
{
returns true if the specified in the hash .
removes the specified key from the map .
clear the map from this map .
applies the given entry to the given entry .
returns the entry for the given key .
returns the entry in the hash .
/ *
returns the number of the key
returns the number of the given key in the key .
return
set the container is the view .
fails if the action is performed .
defines if the next property is available .
defines if the property should be available .
defines if the property should be finished .
loads an instance of the specified symbol .
{
computes the expected i .
computes the remainder of a vector .
returns the probabilities of the distribution .
compute the results of a joint distribution .
--------------------------------------------------------------------------------------------
compares this { @code year } .
sets the number of the time .
{
performs the action .
returns a time in throttle } .
creates a new url instance } instance .
returns the request info .
returns the headers of the page .
returns the cookies of the request .
returns a string representation of the request .
gets the request scope .
returns the page scope scope .
gets the session scope .
returns the application scope .
gets the user principal .
/ * ( non - page ) . )
generate a string representation of a map .
convert a value to a string .
{
sets the current screen state .
walk
compares two nodes .
updates the registers of the registers .
delta
notifies all registered listeners that a property has been active .
inserts the specified character at the end of the list of the table .
inserts a string } into the table .
create a new inner grid in the specified row .
{
enter a variable to the given variable .
enter the given functor .
leave the clause from the given clause .
returns true if the top level is in level .
checks if the top level is a top - level .
adds all of the elements to the specified collection .
{
{
returns an array containing all the elements in this array .
returns the element in the end of the queue .
get
--------------------------------------------------------------------------------------------
applies the given functor functor } .
sets the arguments of this term .
get the fixity
returns true if the infix .
compares the given objects } objects .
called when the event )
updates the buttons of the screen .
updates the buttons of the work .
registers the work flow controller .
returns true if the given state is proof .
returns the factory for the given class .
change the color of the row .
creates a new { @link component } .
returns the storage cell associated with the given variable .
returns true if this variable is bound .
returns the attribute at the specified position .
sets the column attribute .
sets the row attribute .
returns the column attribute set .
gets the attribute set .
inserts the given attribute into the attribute .
returns the value of the argument .
creates the text grid panel .
creates a new grip .
creates the blank panel .
creates a new instance of the given } .
creates a random instance of this time } .
--------------------------------------------------------------------------------------------
creates a new instance .
checks if the given value is an instance of the given value .
returns true if the top of the top level .
returns true if this {
returns true if the last body is last body .
gets the term .
returns the position of the context .
{
creates a new { @link stackable .
creates a body operator .
creates a new { @link stackable } .
creates a clause operator operator } .
creates the initial context .
updates the registers of the layout .
creates a new { @link property () delta () } ) .
returns the value of the expression .
finds the goal of the given search for the reverse queue .
join the both paths of the given node .
transforms the given variable to a variable .
{
returns a list of the given block at the specified block .
returns the properties of the specified resource .
sets the rate rate .
{
{
skip bytes }
compiles a list of body arguments .
compiles the body of a list of the given functor .
gather the given a list of expressions .
adds the given term to the list of expressions .
returns true if the given resolution is numeric .
visits a clause .
returns the key associated with this key .
returns the value associated with this key .
reads an int from a byte array at the given offset .
writes a byte array into a byte array .
writes a byte array to a byte array .
reads a byte array from the buffer at the given offset .
reads a short from the given byte array .
writes a short to the byte array .
compiles a list of a list of instructions .
returns the bound property of the given node .
gets the child state for the given operator .
returns an iterator that contains the elements of the tree .
returns the id of the attribute .
returns the value of the attribute .
sets the value of the attribute .
converts a string into an array .
converts a string to a list .
converts a string into a camel case into a camel value .
convert a string (
returns a list of items that match the given type .
unwraps the given type .
returns the current configuration file .
generates a list of handlers for the given buffer .
sets the value of the server )
unwraps the unknown type with the server .
visits a term .
visits a functor .
visits the given variable .
visits a predicate .
visits a clause .
visits an integer .
visits a literal literal .
resolves a call point for the given functor .
reserve the reference to the label .
resolves the label point for a label .
sets the code address .
sets the internal code address for the given functor .
checks if the given attribute is a sub - category category .
gets the id of the attribute .
sets the id of the attribute .
returns the value of the specified attribute .
returns the last value of the path .
/ * ( non - null fields .
deserialize this object .
computes the h of a given node .
puts a mapping from the cache .
checks if this bucket contains the given key .
puts the specified value in the cache .
removes the specified element from this list .
returns the number of bytes in the given bucket .
adds an error message .
handles the errors of an exception .
writes a string to the output stream .
/ * ( non - javadoc )
reads the next handshake .
writes the handshake to the output stream .
flushes the data to the file .
shuts down the handshake .
traverses the elements of the given predicate .
traverses the elements of clause using the given clause .
traverses the given functor using the given functor .
enter the functor .
returns true if the top level is top - level .
inserts an attribute in the list .
selects the text of the given row } .
creates a new {
classify the given state .
get the id of the server id
get the type of the type of the returns false .
get the property returns the returns true if the user s returns .
unwraps the server with the unknown type . < / p >
compares two ordering .
creates a new { @link queue } .
traverses the given clause using the elements of the given clause .
traverses the given functor and traverses the given functor .
visits a term .
visits a {
visits a predicate .
visits the clause .
visits a functor .
visits a symbol ] .
{
returns the number of the given value .
returns the number of the given value .
returns the number of an int value .
returns the number of bytes in the given int
returns the number of bytes in the given value .
returns the number of base10 in - place .
returns the number of log value .
returns the number of int32 in the given value .
returns the number of int64 in the given value .
returns the number of digits in the given number .
creates a new {
change the color of the grid .
returns true if the given state is a proof .
set the head of the head .
/ * ( wammachine ) code of the instruction .
action
sets the commit order .
saves the work flow .
discard the work flow .
sets the current screen .
evaluate () }
/ * ( non - null value .
returns a property .
returns a property from the property .
returns the properties associated with the specified key .
/ * ( non - null properties .
returns a list of the given base modifier .
returns an iterator for the given key .
creates the array of array properties .
builds a term .
sets the rate rate .
/ * ( throttle ) .
returns a time to a { @link long } .
sets a property .
evaluates the given literal .
finds the properties of the classpath .
gets the properties of the system property .
get the properties of the classpath .
gets the properties of the properties file .
leave the functor .
returns the value of the assignment .
sets the substitution of the given term .
--------------------------------------------------------------------------------------------
accept a new {
returns true if the given term equals } equals } .
returns a sub - sequence of the specified position .
compares two asciistring .
computes the value of the string .
computes the hash code .
creates a new { @link queue } .
closes the connector .
/ * to the logging .
connects the connection to the server .
fire the connector that a connector .
visits all terms of the given predicate .
visits all the terms of the given clause .
visits all the terms of the functor .
visits all the terms of a variable .
initialize the printers .
prints the table .
get the items when the item is returns true
get the link when the link )
get the form returns true if the user .
unwraps the server type of the server .
/ * ( non - control ) of the server )
get the initial value of javadoc ) of the control )
sets the value of the value of the form .
get the control group group
submits the input request to the server .
<p > unwraps of the unknown . < = unknown .
enter the functor .
leave the functor .
enter the variable .
returns the checked value of the given control .
compiles a list of a functor expression .
commits the transaction .
rollback all writes all writes ) .
request a write operation to the operation to the operation
adds the cached operation to the cache .
acquires the global write lock .
releases the global write lock .
enlist the current session .
{
inserts the element at the queue .
blocks until the specified time until the queue .
returns the element from the queue .
blocks until the element is found .
returns the element in this queue .
puts the specified element into the } .
inserts the queue to the queue .
blocks until the queue is available .
adds the specified elements from the specified number .
adds all elements of the specified collection to the specified collection .
adds all elements from the given collection from the specified collection .
inserts the given element into the buffer .
extract the record from the buffer .
{
sets the sys property if it exists .
sets a property value if the given string .
sets the specified value in the value .
sets the sys property if the value .
sets the value of the specified value to the value .
sets a property if the given string is null .
sets the value of the system property .
sets the property if it exists .
sets a property if it exists .
sets a property if the property is null .
sets a property value .
sets the property value .
set a property value .
sets the value of the given property exists .
sets the property .
sets a property .
sets a property .
sets a property value .
sets a property .
sets a property .
gets the value of a property as a property .
gets the value of the requested property as an integer .
gets the value of the requested property as a long .
call the mixin scope with the given arguments .
sets the addition visitor to the node .
{
get the connection .
searches for the given search .
backtrack the given {
/ * ( non - code ) of the given predicate .
/ * code
retrieve the code from the call .
returns a bytebuffer buffer from the buffer .
execute and returns a set and returns a set of bindings .
decodes a heap .
/ * ( non - null fields .
{
returns the attribute value associated with the given class .
puts a class in the map .
returns all field names of the given class .
*************************************************************************
{
appends the classpath to the classpath .
setup the buffer .
returns the value associated with the given key .
puts the specified key into the key .
inserts the specified node into this queue .
removes the element .
creates a search node .
creates a new {
opens the grid .
returns a { @link term } that contains the given { @link term } .
returns a new { @link term walker } that is the given visitor .
returns a new { @link term the given visitor . term .
returns a { @link term } that has the given predicate .
creates a new { @link term that contains the given visitor .
adds a domain to the domain .
/ * ( non - built )
resolve the set of the given {
resets this } .
search for the resolution .
returns an iterator over all the solutions of this set .
loads the properties file from an inputstream .
gets the properties file .
get a properties file .
get the properties of a file .
removes all properties from the properties .
checks if the given name is a valid case .
paints the component .
computes the grid size of the grid .
initializes the font metrics .
adds a new property change listener .
adds a property change listener .
remove a property change listener .
fires a property change event .
creates a new instance of the given range .
compiles a list of body arguments .
/ * ( non - javadoc )
fade the given color .
matches a recorded request .
--------------------------------------------------------------------------------------------
shows the main window .
shows the centre .
{
shows the left pane .
shows the right pane .
sets the key shortcut for the given action .
shows the horizontal bar .
shows the left bar .
shows the right bar .
gets a list of items that match the given type .
gets a list of links that match the given rel .
unwraps the given {
removes all the elements from the given document .
sanitize the radio all controls from the radio controls .
blocks until the queue is completed .
waits until the timeout to wait until the specified timeout .
{
appends the classpath to the classpath .
creates a new instance of a date } .
--------------------------------------------------------------------------------------------
free all bindings .
returns a list of links matching the specified rel .
prints the interpreter
prints the command line .
initializes the {
evaluates the given sentence .
evaluates the query .
returns the multi - type of a multi - type .
returns the multi - type of a multi type .
returns the data type to a multi type .
gets the multi - type data type .
returns the data type of - type {
returns the multi - type of a multi - type of the multi - type .
returns the multi - type of a multi type .
returns the multi - type of a multi type .
returns the multi - type of the given a string .
gets the multi - type of the given object .
convert a multi - type to a boolean .
returns the best matching conversion of the given type .
set a new attribute .
returns true if this table is equivalent to {
enter the given functor .
this method to enter a variable .
{
returns the value associated with the specified key .
puts the specified key in the cache .
clears the map from the specified key from this map .
removes the specified key from the map .
clear the data from this list .
{
expands the given key .
{
inserts a string into the list .
returns the character at the specified position .
creates a new {
creates a new { @link text . model . text . text . text
updates the listeners that will be notified when the text .
inserts the given character in the table .
parses the given {
returns true if the resolution is proof .
compares two nodes .
--------------------------------------------------------------------------------------------
parses the given term .
sets the operator to be used operator .
get the operators matching the given name .
check if the given {
expands all successors successors into the given queue into the successors .
creates a new { @link node .
/ * byte [] .
/ * ( non - javadoc )
concatenates the right pad of the given string .
returns a string representation of the errors .
returns a string representation of the property .
returns the usage of the command line .
parses the command line arguments .
adds a trailing property pairs to the properties .
adds all the options to the properties .
adds an option to the command line .
returns the properties of the given a property .
checks if the given argument is an argument format .
compares the given iterator .
{
set the options of this file .
{
sets the stemmer . <p >
returns the actual actual stemmer .
stem
*************************************************************************
evaluates the given term as a numeric type .
creates a new instance of the given range .
sets the state of the property .
resets the state of this object .
returns a {
returns a new wammemorylayout
executes the given call .
returns the trace frame for a frame .
returns the trace frame for a choice .
deref
calls {
sets the number of call 1 .
/ * internal method .
setup the call 1 . 0 .
returns the next stack frame .
backtrack
binds a byte array to the given byte array .
trail
sets the number of trail of the given data .
/ * tidy
unify
unify
prints a slot in a slot .
returns a random { @link eight state .
returns true if the given {
returns a new {
returns an iterator over the operators . < / p >
returns a string representation of this matrix .
swap a tile to the location of the specified tile .
updates the operator with the given operator .
swaps the tiles of the board .
converts a string to a list of strings .
convert a {
publishes a record to the specified record .
convert the log4j record to a log4j message .
convert a level level level to a log4j .
offer a record to the queue .
/ *
/ * ( non - javadoc )
acquires the next record from the owner .
acquires an object from the record .
release the given object .
accept the given object .
/ * ( non - javadoc )
drain the elements of this queue to the specified queue .
inserts the queue to the queue .
puts the queue to the queue .
returns the remaining capacity of the queue .
adds the given record .
adds a record to the list .
increments the size of the record and count to the size .
decrement the size of the size of the record .
signal that the size of the size of the threshold .
looks up an object with the given name .
binds the specified object to the specified object .
binds the specified object to the specified object .
/ * ( non - null value .
unbind the given name .
rename the <code > rename / code > .
renames the specified name } .
returns an <code > { / code .
returns an enumeration of bindings .
compose a name of a name [ name and prefix prefix ] and prefix ] [ name ] [ name [ prefix ] [ name ] [ name ] [ name ] [ name ] [ [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] ] [ [ ] [ ] [ ] [ ] ] [
adds a property to the variable .
removes a property from the environment .
/ * rungctillstable
pushes a new {
returns a media type .
returns a {
returns a {
sets the tree tree tree tree tree .
returns a parameter to be a rule .
returns a parameter that matches
generates a reference to the variable reference .
returns a group of tree to the tree tree tree .
adds a new { @link selector } .
returns a new { @code rule } that matches this { @code property } .
returns a phrase expression expression } expression to be a phrase expression .
returns a function that returns a function .
create a new expression expression that } tree } expression } tree tree tree tree tree .
returns a function that returns a rule that is } .
filter the arguments of this rule .
returns a rule that matches the same argument .
returns a {
url - url :: = url
=========
create a function that returns a function that returns a function that has the same as {
returns a {
literal
returns a {
returns a new {
returns a number of {
returns a new {
-------------------------------------------------------------------------
escapes this {
resolves a mixin reference .
pushes a variable reference .
record a stack trace trace .
sets the max row height .
puts the given row in the grid
{
{
returns the max column size .
{
updates all the listeners .
updates the max column width .
executes the given error with the given error .
compiles the given clause .
transforms the functor to a functor .
{
executes the request .
compiles the given sentence .
substitute the built ins
initialise the symbol table .
checks if the top of the given .
compiles a list of the given a functor .
returns a string representation of bindings to a string representation .
clears the map .
returns true if the specified key contains the specified key .
puts the given value into the cache .
removes the specified key from the cache .
returns a new {
returns a symbol key for the keys } .
returns the value associated with the given key .
puts the specified value for the mapping .
clears the given field from the low mark .
{
open the memory
evaluates the given numeric value .
running the state of the state .
{
shuts down the state .
blocks until the timeout is terminated .
adds a listener to the list of listeners .
removes a listener from the list .
create the continuation states .
adds a node to the specified element .
{
returns the number of bits in the number of bits .
updates the minimum of the minimum of the node .
compares two nodes .
inserts the given node into the list .
pause the thread .
restart the cache .
returns the value associated with the given key .
adds a value to the specified cache .
removes the given key from the cache .
puts all the elements in the cache to the cache .
sweep
sets the name of the server name .
get controls returns the controls of the controls of the controls
returns an iterator that contains all solutions of the given method .
returns a set of the given method in the given search method .
finds a bag of the given method .
finds all solution paths that match the given method .
finds all solutions in the given result .
opens the grid .
returns the next element in the list .
get the code buffer .
compiles a list of a body } .
compiles a list of a list of instructions .
restores all values of the given object .
{
adds a new property .
puts a property in the class .
capture all methods
*************************************************************************
documentation inherited from interface
documentation inherited from interface
get the path of the server .
returns a link .
removes the element from the list .
returns the next element in the buffer .
called when the layout is called .
called when the table .
prints a table .
returns a copy of this key with the specified key .
converts the string representation of string representation of a string .
inserts an attribute into the attribute .
inserts a column attribute into the table .
inserts a row attribute .
updates the listeners on the attribute change .
convert a string to an integer .
convert a string to a date .
parse
parse
parse
returns a token source for a string } .
returns a { @link token from a file .
returns a source source source from an input stream containing the input to the given input stream .
gets the next token from the list .
gets the next token .
applies the next variable to the next variable .
/ * ( non - constant instruction .
returns true if the given instruction is a void variable .
returns true if the given instruction is non - non - non - non - non - non - - non - non - non - non - - non - non - non - - - - - non - non - - - non - non - null .
creates a new { @link term } .
renders the table .
returns an iterator over all the children of this clause .
returns a copy of this clause .
--------------------------------------------------------------------------------------------
constructs a transformer that accepts a } .
returns an iterator consisting of the elements of this iterator of each element of each element .
returns true if the ground is a ground .
returns the argument at the specified index .
returns true if the given term matches the structural .
returns an iterator over all the children of this list .
returns a copy of this {
--------------------------------------------------------------------------------------------
constructs a new {
returns a string representation of the arguments .
retrieves the summary of the given schema .
retrieves the records of the given the given schema .
executes the given sql .
/ * when the wamresolvingmachinedpi .
called when the code has been update .
called when the layout )
called when a step .
creates a list of disassemble from the given instruction .
/ * ( non - javadoc )
returns the default instance of this object .
returns a random instance of javadoc .
set the basic type of the class .
parses the input stream from the input stream .
print a string representation of a solution .
print a string representation of a solution .
prints a variable binding .
returns a set of result set into a map of variables .
sets the operator for the given operator .
compiles a functor arguments .
starts the socket .
reads the xml file .
initializes the type1
returns the next byte array of a byte array .
returns the number of the time .
returns the number of the current time .
stops the music playback .
updates the current track info .
track
{
update the play info .
{
{
{
handles a resource request .
handles the event .
handles the event request .
fires the start music request .
roll the back back to the default volume .
initialize the thread .
startup the connection .
shuts down the connection .
resets the parser .
parses the given thread .
process the packet .
sets the cli option .
creates a new chat .
returns the chat chat chat .
returns a list of host names .
{
resets the content of this map .
sets a property .
adds a filter to the list of filters .
process a request .
resets all the properties .
convert a string to a base64 string .
batch
adds a acl acl
removes the acl from the acl .
filters all acl in the given map .
returns the principal of the principal .
returns an array of permissions in the permissions .
creates a new { @link transactional sorted map .
commits the transaction .
initialize the connection .
sends a packet .
returns the next packet .
open the stream .
gets the schema schema .
gets a list of the goodwill .
creates a new http client .
creates an optional event .
creates a new event .
{
adds a new descriptor .
/ * ( non - javadoc )
adds an event life } } .
/ * ( non - javadoc )
start the playing .
shuts down the executor .
decorate
{
checks if the given path is equals to the given path .
remove a direct byte buffer .
/ * ( .
checks if the given entry is valid .
mask
hash
returns true if they are equal .
{
returns the entry associated with the specified key .
{
puts the given key into the map .
resizes the specified capacity .
{
{
removes the entry from the map .
removes a mapping from the map .
{
adds an entry to the specified bucket at the bucket .
creates a new entry in the table .
creates a new { @link map } from the given base keys .
parses a date from a string .
parses a date with missing zeros and length .
parse the name of a string .
parse a server from a server .
parse a resource from a string .
parses the bare address of the given string .
check if the given jid is a parse .
escapes a node .
unescapes a node in a node .
encodes a string into a string .
returns the hash of the given string .
encodes a byte array into a string .
encodes a string into base64 encoded string .
encodes a byte array into base64 notation .
decodes a base64 encoded string .
returns a random string with the specified length .
{
sets the play controller .
sets the track selector .
sets the next controller .
sets the jump controller .
sets the playback controller .
sets the volume changeable .
broadcast available playlists to the given playlist . < / p >
handles the command resources .
handles the volume .
handles the jump jump .
handles the select track .
returns the cache by name .
returns the thread cache for the given name .
returns the request cache for the given name .
deletes a topic .
handles a topic
returns the alt field of a stream .
insecure
returns a map containing all the properties of the given map .
returns a map of filtered and ecoded .
returns the shard path for the given id .
escapes the given string in a string .
escapes all characters in a string .
adapts a source object to a session
invokes a method with the given name .
deletes a tree from the storage .
creates a new {
/ * ( non - javadoc )
returns the instance of the specified connection .
enable the executor service .
called when the given the connection .
handles the connection to the connection .
sets the ping interval .
schedules the ping server task .
create a new object .
destroys an object } .
checks if the given object is running .
removes a mapping associated with the specified key .
{
removes all children from the map .
adds a cli option .
adds all options of the given application .
adds an option to the option .
checks if the given option has an option .
parses the given arguments .
usage : java twitter4j .
parses the given arguments .
shuts down the presence .
initialize the connection .
/ *
loads the configuration
gets the compression handler .
checks if the compression is compression .
request the compression compression .
starts the stream compression .
connects to the server .
notifies the connection listeners .
notifies all registered listeners that the connection has been successful .
add a class to the mechanisms .
returns a list of all the preferences of the mechanisms .
authenticate the given resource .
authenticate the given mechanism ) .
/ * ( anonymously .
get the property .
creates a new {
outputs the output plugin behaviour
/ * ( non - javadoc )
gets the sling home home .
parses a command line arguments .
logs an info message .
logs an error message .
prints a message .
creates a start event for the start .
creates a new { @link event . event .
notifies all listeners that a string .
{
/ * ( non - javadoc )
{
{
{
creates a new transactional sorted transactional sorted transactional by the given map .
gets the cached map for the given key .
returns the cache key for the given column .
removes the given key from the cache .
puts the given column in the cache .
sets the jar filter .
gets the cf locations .
include the given file .
include a jar file .
adds the sasl mech .
adds the sasl mechs .
creates the debug observable .
ds method to activate the configuration .
execute a call .
registers the standard events .
registers an event listener .
writes a file to the file .
execute the given consumer .
remove an event from the given event .
/ * ( non - javadoc )
creates a new { @link player .
creates a new { @link player .
creates a new { @link player .
creates a new { @link player .
returns an instance of { @link cluster .
returns an instance of the cluster } .
creates a new { @link dse } .
creates a new { @link dse } instance .
connect
creates an error error error error .
starts the playing .
stop the playing .
add a command to the player .
create
creates a new {
creates a { @link optional event . mute .
log a message .
appends a url to the url .
adds a query param .
adds a query param .
adds a query param .
adds a query param .
gets the playlist for the given event model .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last : evt
checks if the button .
checks if the given urlname exists .
gen - last : evt
creates an image icon .
reads the label of the given path .
main method .
returns a new array with the specified number of values .
exports this map as a map .
imports the presence of the presence of the given model .
returns the value at the given index .
returns the value associated with the specified key .
get an integer as an integer .
returns the double as a double .
returns the string as a string .
creates a { @link command .
checks if the given command is a command .
verifies if the given command is capabilities .
verifies whether the given command is a command .
creates a new cluster .
creates a new session .
returns the cluster associated with the given key .
gets a cluster .
returns a session .
returns the session associated with the given identifier .
returns a session .
binds the values } to the given {
binds the given values } to the given statement } .
{
{
execute the given statement .
execute the given cql .
{
execute the given consistency .
wraps the given {
asynchronously executes } asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously .
execute the given a { @link statement () } .
wraps a callback that wraps a {
execute a callback asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously asynchronously .
execute the batch of statements } .
{
execute a batch of jobs .
sets the jar filter .
returns a set of all the given the class .
returns a set of subclasses that match .
search for the given package .
search for a directory .
search for the given the given location .
sets a resource .
sets the { @link resource .
sets the { @link resource . resourceid }
returns a list of resource names into a list .
returns the size of all maps .
{
{
{
process the packet .
returns a new { @link set } that contains the given set of elements .
returns the volume of the given id .
logs an error message .
creates an error response .
creates a new { @link iq .
creates an error response .
checks if the given event is target .
decorate
comparator
returns true if the given subject allow to see if the subject .
sets the login the login value of the specified value .
checks if the given packet is a packet .
decorate
sets the name of the packet .
update the state of the subscription .
returns all the groups .
returns true if this object is the same object .
returns the value associated with the given key .
puts the specified key in the cache into the cache .
removes the children from the given cache .
returns a list of values .
adds a rsm to the query .
creates a rsm object from a query element .
get the list of objects in a list of rsm .
{
creates a new { @link optional .
reloads the connection .
creates a new {
create a new entry .
remove a roster } .
returns all roster entries .
returns the entry associated with the specified user .
get the presence of the presence of the presence .
returns the presence of the presence of the user .
returns all presence of a given user .
returns the presence of the presence of the user .
sets the offline presences .
notify roster changed entries that a roster is changed .
sets the digest .
{
sets the value of this value .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new { @link identification .
creates a new { @link optional event . presence .
decorate
clears the callback .
sets the volume to the player .
returns a list of all resources that are existing resources .
creates a new player .
creates a player request .
create a player request .
creates a player request .
returns the time passed in model .
registers a listener to be notified .
initialize the properties file .
reloads the properties file .
parses an error error .
parses the given mechanisms .
parses the compression methods .
parses a packet extension .
decode a string .
creates a start music request .
creates a start music request .
creates a music request .
creates a { @link music } . start the given { @link identification } .
create a start request .
verifies if the given event model .
creates a new { @link filter the given base filter .
create a filter . < / p >
creates a filter that compares the given the specified filter .
creates a filter that compares the specified comparator . < / p >
gets the playback state of a resource .
returns the secret key for the secret .
checks if the given subdomain is allowed .
returns the value associated with the specified key .
puts a key / value into the mapping of the mapping .
removes the mapping associated with the specified key .
returns a copy of this set .
returns a copy of this set .
returns a collection of the values .
purges the queue .
removes the given reference .
returns the entry associated with the given key .
hash
creates a new entry .
/ * ( non - javadoc )
--------------------------------------------------------------------------------------------
/ * ( non - javadoc )
defines if the presence of the presence .
updates the vague .
sends a message .
deliver the message to the message .
generate the script .
loads the configuration file .
initialize the target and stg .
initializes the application dir .
initializes the classmap .
initialize the output dir .
loads the properties file from a file .
write a file to the file .
returns the progress for the given event model .
decorate
adds an object to the list .
creates a collection of all the given the specified address .
resolves the configuration .
gets the config
/ * ( non - javadoc )
returns a list of the attributes .
sets the attributes of the query .
{
creates a stop music music } .
verifies if the given event model .
{
{
/ * ( non - javadoc )
gets a cluster .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets a session .
gets a session .
gets the session .
add a connection listener .
creates a new {
adds a packet listener .
add a listener to the packet .
notifies all listeners that a packet has been sending .
adds a packet interceptor .
notifies all registered interceptors interceptors that the packet .
initialize the debugger .
converts a string representation of a value .
connects to the server .
connection
adds a listener to the result .
/ * ( rollback ) .
returns the current thread id .
checks if a node is a valid .
{
{
returns a copy of this set .
returns a collection of values that are contained in the collection .
removes the specified object from the specified index .
returns the object at the specified index .
returns the valid node at the given index .
looks up the node at the specified index .
compares two objects .
returns the lval of the given node .
returns the most recent node in the tree .
returns the next node in the tree .
returns the next smaller node .
checks if the node is valid node .
returns a valid node of the given node .
copies the color of the node .
checks if the given node is a node .
checks if the given node is black .
make a node .
helper method to the black .
returns the parent node of the given node .
returns the parent node at the specified node .
returns the right child of the given node .
returns the left child of the given node .
checks if the given node is a left child of the node .
checks if the given node is a right child .
rotate the left child of the node .
rotate the right child of the given node .
inserts the given node into the given index .
deletes the black node from the deleted node .
recursively recursively recursively recursively recursively delete .
swap the position of a node at the specified index .
checks that the object is null .
inserts a value into the tree .
{
{
{
{
{
{
{
{
{
copies all the entries from the given map to the transaction .
returns the ceil for a given type .
removes the specified key from the cache .
removes all expired entries from the list .
removes the cache entries from the cache .
ds method to activate this component .
{
{
process the response
gets the playlist for a given playlist .
get a player request .
gets the playlists from a player .
creates a new roster .
open a new roster store .
get the or creates a new {
returns a list of network addresses that have a network .
scans a collection of ip address and returns a collection of ip address .
creates a {
creates a new { @link map .
{
/ * ( non - javadoc )
reads a document from a file .
read a document from the given url .
read a document from a document .
reads the content from the given reader .
reads a document from a document .
reads a document from the given input stream .
reads the content from the given reader .
parse a document from the document .
create a new instance of {
returns a filtered { @link map the filter ) of the given filter .
checks if the given track is a new track .
checks if the album is new .
updates the track with the given name .
exports a map into a map .
imports a track from a hash map .
imports the track from a resource model .
return
sets the jar filter .
adds an application .
adds all applications of the set to the given set of applications .
execute command line arguments .
executes the application .
prints the list of classmap .
print the usage usage .
main entry point .
creates a { @link mute event .
creates a new {
refresh the schemata .
returns the schema for the given schema .
writes a file to the file .
checks if the manifest is in the manifest .
adds an option to the option .
returns a list of {
returns the field by name .
returns the name of the given entry .
returns the response body as an input stream .
returns the response body as string .
closes the input stream .
returns a map containing all the values .
returns the client .
release the client from the pool .
creates an event listener .
sets the { @link state } .
iterate over the given collection .
/ * internal implementation .
gets the track info .
returns a map of data to a map .
imports a resource from a resource .
returns a buffered image with the specified lines .
get
getjson
getjson
returns a property acl .
sign a content token )
reverses the elements in the given map .
creates a new collection of like like like } .
returns a set of all the elements of the list .
{
execute
{
return
creates a new { @link map map .
creates an optional event .
gets the current track .
gets the name of the field .
gets the data .
updates a new { @link playlist .
returns a playlist of the playlist .
verifies if the given capabilities can be repeat .
exports the playback representation of this queue into a map . export .
imports a resource into a resource .
/ * converts a byte array .
batch
imports the capabilities from the given resource .
creates a new stop event .
creates a { @link stop event } . stop .
parse a name of a string .
convert a string to a string .
encodes the given string .
encodes a byte array into a string .
authenticate the sasl .
authenticate the connection .
authenticate the sasl .
/ * ( non - javadoc )
serializes this {
returns the sql type of the sql type .
{
/ * ( non - javadoc )
join all the queues .
sets a property .
removes a property from the map .
adds a principal .
removes a principal from the list .
{
creates a player command .
remove the root window from the window .
create a new instance of the given map .
processes the template .
changes the password of the user .
returns an instance of session .
/ * ( non - javadoc )
/ * ( non - javadoc )
copies the contents of the specified uuid .
moves the specified structure to the specified storage .
{
gets the version of the given version .
gets the version of a version of the specified version .
{
/ * ( non - javadoc )
checks if the given event is permanent .
checks if the given resource is permanent .
sets the name of the roster .
returns the entry associated with the specified user .
adds a roster entry to the list .
returns the value associated with the specified key .
{
check if the value of the specified in this list .
puts the specified key / value .
puts all the elements in the map into the map .
{
removes all the data from this list .
hash
returns true if the given object is equal to see { @link object .
checks if the given object is equal to the given object .
returns the entry associated with the specified key .
updates the given entry .
reuse an entry from the entry .
adds a mapping to the specified key .
removes a mapping from the specified index .
removes the entry from the list .
destroys the entry .
