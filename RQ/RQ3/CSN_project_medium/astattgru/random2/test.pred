helper method to create a .
returns a {
returns a { @code } which disables the emissions from the source { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
returns a { @code exceptional } with the source observable { @code source } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @code observable } with the specified sources of the source observable and emits the result . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a { @code a } containing the source of the source { @code source } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
concatenates the source iterable into a single { @code source } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a { @code t } which emits the source of the source singlesources from the source { @code maybesource } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt
concatenates the specified source into a single value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
concatenates the specified {
concatenates the source into a single source . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
returns a { @code } with the specified source observable to the source observable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
concatenates the source into a single value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
concatenates the specified iterable into a single value using the specified source and source value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
returns a { @code future } that emits the emissions from the specified observable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . . png alt = > <dl > <dt > <b > scheduler :
returns a { @code observable } with the given { @link throwable } and { @link } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt >
returns a new { @code exceptional } with the specified items . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a maybe that emits the source of the source iterable that emits the emitted iterable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the specified { @code comparable } as a single { @link } . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a cold ic - { @code } .
returns a cold ic value of the { @code } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a new { @link } that emits the specified number of items emitted by the specified interval . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt
returns a new { @code interval } that emits the specified { @link interval } from the specified { @link interval } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl >
returns a new { @code interval } that emits the specified number of time and a new { @code interval } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl
returns a new { @code interval } that emits the specified number of times and a range of { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl >
returns a { @code start } representing a { @code interval } that starts with the specified number of items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a { @code > } instance fluently of { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @code source } with the source { @link } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b
returns a { @code maybesource } produced by iterative source { @link } into a { @code maybesource } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a new { @code maybesource } that emits the source of the source into a single { @code maybesource } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt
merges the source into a single { @link iterable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <p > eager is said to be called by the source to { @link
merges the { @link } into a { @link } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a { @code observable } with the specified { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . . png alt = > <dl > <dt > <b > scheduler : <
returns a { @code int } which allows to specify a { @code int } that starts at the specified number of times . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . html > all of a
returns a { @code long } object that starts the specified { @code int } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / onerrorresumenext . png alt = > <p > if the { @link maybe } is
returns a { @code > } of the emissions from the source { @code source } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure
returns a { @code > } of { @code } that emits the { @code } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a { @code } that emits the emissions from the source { @code source } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure
returns a { @code a } that emits the source of the source { @code source } to the source { @link } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = >
returns a new { @code exceptional } with a value of the source { @code source } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure
returns a { @code } which emits the emissions from the source observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < /
instructs the { @code supplier } to emit a { @code supplier } with the given { @code source } and { @code supplier } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png
awaits until a success is available . <p > <img width = 640 height > scheduler / sub > { @link } < / b >
wrap an observablesource by a { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns a new iterable that emits the items emitted by the source iterable and collects all of the items emitted by the source publisher into a single element . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / .
returns a { @code iterable } that emits the items emitted by the source iterable and emits the result of the source iterable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
returns a { @code exceptional } with the specified source { @code source } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
returns a single {
returns a { @code this } instance with the specified source observable to terminate the result . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
returns a single element with the given predicate . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt > <b > scheduler : < / b > < /
instructs the { @link } to invoke the { @link ( observer ) } method to perform a blocking { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png
called when the next item is closed .
returns a { @link } that emits the given { @link iterable } which has the same size as { @code e } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . . png alt
instructs the { @link } to emit a { @link } that emits the last element of the { @code } . <p > if the { @link } is not null it will be returned . <p > if the { @link } is not null it will be returned . <p > if the { @link
returns a { @link iterable } that emits the given { @link consumer } until the value of the { @link } is closed . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png
instructs the iterator to emit a single element of the given { @link consumer } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . writing . png alt = > <dl > <dt > <b > scheduler
instructs the { @code onsuccess } to perform a { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > scheduler : < / b
converts the specified { @link future } to a { @link future } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . . png alt = > <dl > <dt > <b > scheduler : <
subscribe to a callback .
subscribe to the provided subscribe .
subscribe to the provided callback .
starts the specified callback . <p > the returned { @link } will be invoked with the given observer and returns the resulting { @link } .
waits until all of the given elements are <code > / code > . <p > <img width = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > <
waits until all of the specified number of items is a single value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b
waits until all elements of the given buffer is exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < /
waits until the given buffer is closed . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
waits until the timeout of the specified time is exceeded . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < /
waits until the source is closed . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / b > this method
waits until all of the specified values are fixed . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
waits until the specified time is exceeded . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
waits until the source is exceeded . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / b > < /
runs the provided { @link } for the given source and emits the result of the specified { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl >
waits until the source has been reached . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
waits until the source is a { @link } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a { @link flowable } that emits the given { @link flowable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
waits until the source has been closed . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
waits until the given source has been closed . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
returns a { @code action } that emits the emissions from the specified { @link observable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
collects all the items from the source publisher into a single value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a single { @code future } that emits the given { @code value } that is the value of { @code t } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / toasync . png alt = >
returns a fluent iterable that emits the specified { @code comparable } with the specified value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt > <b >
returns a maybe of the specified source with the specified value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a maybe that emits the result of applying the specified function to the source publisher and emits the result into the source publisher and emits the result of applying the specified function to the source publisher and emits the result of applying the specified function to the source publisher and emits the result into the source publisher and emits the result of
returns a maybe of the specified source publishers that emits the specified source publishers . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @code exceptional } with the specified source observable to the specified source publisher and emits the result of applying the provided mapping function to each element of applying the given function to the result of applying the provided mapping function to each element of applying the given function to the result of applying the provided mapping function to each element
returns a flowable that emits the specified source items to the source publisher and emits the result of applying the specified function to the source publisher and emits the result from the source publisher until the source publisher is exceeded . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki /
returns a flowable that emits the specified source items to be immediately after the source publisher and emits the result of applying the specified function to the source publisher and emits the result from the source publisher until the source publisher is exceeded . <p > <img width = 640 height = 315 src = https : // raw . github . com
returns a { @code collector } that emits the emissions of the source emitted by the source { @code maybesource } which this completable completes successfully with the specified value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a completable that emits the result of the { @code completable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
returns a completable that emits the emissions from the source maybe with the specified value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler
returns a { @code collector } that emits the emissions of the source into a { @code source } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a maybe that emits the result of applying the given mapping function to each element of the source iterable into a single value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = >
transforms the source into a map that emits the result of applying the provided mapping function to the target value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a maybe of the specified source publisher with the specified values . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a maybe that emits the result of applying the specified function to the source publisher and emits the result from the source publisher and emits the result . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / .
returns a maybe of the specified source publisher with the specified values . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a { @code exceptional } that emits the emissions of the specified { @code accumulator } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
transforms the source into a single value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
returns a maybe that emits the result of applying the specified function to each item emitted by the source publisher and emits the result from the source stream . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / .
returns a { @code a } value of the { @link observable } that emits the result of applying the specified { @code accumulator } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt =
returns a maybe that emits the result of applying the specified transformation to the specified source publisher and emits the result from the builder . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = >
returns a maybe that emits the other singlesource by composing the result of { @code other } . <p > <img width = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
returns a single enumerable with the given source . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
returns a maybe that emits the other observables . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
returns a completable instance that emits the emissions from the source publisher and emits the result . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
returns a single - valued object that emits the specified element . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / onerrorresumenext . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a { @code > } with the specified source selector and the { @code selector } to the source selector . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl >
returns a { @code > } instance that emits the specified timeout and executing the result in the { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
returns a cold { @link } that emits the specified timeout and emits the given timeout . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
returns a maybe that emits the item emitted by the specified item . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . . png alt = > <dl > <dt > <b > scheduler : < /
delays the given observable to the given observable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < > < /
delays the specified { @link } with the specified delay . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . delay . png alt = > <dl > <dt > <b > scheduler : < / b
delays the specified delay to the specified delay . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / b >
delays the specified { @link flowable } to a { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
awaits until the source publisher emits the specified delay . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
awaits until the delay is scheduled by the specified delay . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the emissions from the source observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a { @code } that emits the emissions from the upstream observable . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a { @code observable } with the specified { @link iterable } with the specified value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
returns a { @link } that emits the specified { @link view } to the specified { @link iterable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl
returns an iterable that emits the element of the source with the specified key . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler :
returns a { @link } that emits the emissions from the source publisher and emits the result . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl > <dt > <b >
returns a { @link } that emits the emissions from the source iterable and emits the result of the specified { @link function } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt =
returns a { @code action } that emits the emissions from the source iterable and the { @code } which emits the { @code oncompleted } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png
instructs the { @link } to emit a single { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . . png alt = > <dl > <dt > <b > scheduler :
instructs the { @link } to emit a single { @code fallback } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @code observable } that emits the emissions from the given observable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . subscribing . subscribing . emission . png alt = > <dl > <dt >
instructs the lifecycle function to customize the lifecycle callback for the given { @link } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . lifecycle . png alt = > <dl > <dt > <b >
instructs the { @code onsuccess } to invoke the { @link ( observer ) } method on the given { @code type } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = >
awaits until a callback is called . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd >
instructs the { @link } to emit a { @code onsuccess } to emit a { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . . png alt = > <dl >
instructs the { @link } to emit a { @link } to emit the observer .
instructs the given { @code onsuccess } to emit a { @code onerror } with the specified { @link error } and the given { @code type } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture .
instructs the lifecycle callback to perform a cold lifecycle callback for a lifecycle callback . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
instructs the callback to emit a callback with the given emission . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . . png alt = > <dl > <dt > <b > scheduler : < / b
instructs the lifecycle callback to perform a { @link } that subscribes to the given { @link consumer } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl >
instructs the lifecycle of the { @code onsuccess } to emit a { @code onsuccess } to emit a { @code } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl
returns a { @code collector } that emits the emissions from the specified { @code index } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt > <b
returns a single { @code } that emits the specified item . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt > <b > scheduler : < /
instructs the { @code } to emit a single element . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt > <b > scheduler : < / b
returns a { @code a } predicate that returns the { @code a } predicate that fulfills the predicate . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a new { @code item } with the specified { @code } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <p > if the item is empty the
returns a { @code exceptional } that emits the emissions from the source maybe with the specified value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b >
returns a new { @code a } whose value is the same as { @code <key } and { @code value } that is the same as { @code <key > } or { @code null } if the source has a source value of the source publisher and emits the result of applying the specified source to the source publisher . <p
returns a cold stateful - emitted function and emits the result from the source iterable with the same values as the source and the result of the oncompleted operator . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a stateful - stateful - view of the source with the specified value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > scheduler : < /
returns a completable that emits the given source via { @link completable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : <
returns a { @code exceptional } that emits the results of applying the given { @code iterator } to each emitted item emitted by the source value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png
returns a { @code a } that emits the specified source of applying the specified { @link iterable } to the specified { @link iterable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / a - 1 .
returns a { @code a } that emits the emissions from the source maybe with the specified source . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . observeon . png alt = > <dl > <dt >
returns a { @code a } that emits the results of applying the given { @link consumer } to the given source source . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
returns a { @code a } that emits the emissions from the source maybe with the specified source . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
awaits until a callback is called . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd >
returns a { @code observable } with the specified { @link temporal } to the provided { @link function } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt
returns a { @code a basis } with the specified key and value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
returns a { @code this } for the specified { @code keyselector } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
returns a new { @link observable } that emits the emissions from the given observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . . png alt = > <dl > <dt > <b > scheduler
returns a completable instance that emits the emitted item emitted by the given { @link publisher } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
returns a { @code null } which is a convenience method that returns the { @code null } which this { @code onsuccess } to be a single { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns a { @code this } with the specified source and downstream function . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
returns a { @code > } instance with the specified { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . observeon . png alt = > <dl > <dt > <b > scheduler
returns a single element with the specified items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a { @code > } instance with the specified { @code e } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt > <b > scheduler
returns a new { @link observable } that emits the results of applying the given { @code type } to each item emitted by the source publisher and emits the result into the result of applying the given { @code maybesource } . <p > <img width = 640 height = 315 src = https : // raw . github . com /
returns a { @link observable } that emits the emissions from the specified { @link observable } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . . png alt = > <dl > <dt > <b
merges the source into the other { @link } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < /
merges this flowable into another flowable . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd >
merges the { @link } into the { @link } . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
awaits until all the items emitted by this one with the given source and source publisher . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
returns a { @code observable } which emits the emissions from the specified target observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler
applies a synchronous callbacks to the specified scheduler . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . . png alt = > <dl > <dt > <b > scheduler : < / b > < /
instructs the observable that emits the emissions from the upstream state of the source into a single error message . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
instructs the observable to emit a single error message . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a { @code exceptional } that emits the emissions from the given observable stream . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
instructs the { @code oncompleted } to emit a single exception . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . observeon . png alt = > <dl > <dt > <b > scheduler : < / b
instructs the { @link } to emit a { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the upstream state of the source observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a maybe of the specified { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a single element with the specified value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > : < / dt
returns a single { @code action } with the given values . <p > <img width = 640 height = 310 src src > <p > <p > <b > scheduler : < / b > : this method is a convenience method that invokes the supplied function with the specified downstream { @code timeout } . <p > <img width = 640
returns a new instance of the specified { @link iterable } with the specified value . <p > <img width = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . html > and the <i > t< / i > operation on the specified group .
returns a new { @link predicate } that wraps a single { @link long } by applying a { @code long } to a { @link } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single .
returns a maybe that emits the specified { @link observable } with the given { @code e } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a maybe that emits the emission of the source publisher and emits the result . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . observeon . png alt = > <dl > <dt > <b > scheduler
returns a new { @code observable } with the specified { @code source } and { @code } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt
instructs the observable to perform a synchronous backpressure . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
returns a cold { @link observable } that emits the emissions from the source observable and emits the result of the { @code onsuccess } to perform a { @link } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns a { @link observable } that emits the emissions from the specified { @link observable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure
awaits until the buffer is closed . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd >
instructs the { @link } to wait until the { @link } is closed . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
instructs the {
instructs the iterator to emit an eager observer . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / b >
retries the emissions in the input stream . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . observeon . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns a { @code observable } with the given { @code initial } value which has the given { @code iterable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl >
retries the given { @link } with the specified number of times . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / 2 . 0 . png alt = > <dl > <dt > <b > backpressure : <
retries the given predicate on the given predicate . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
retries the given { @link iterable } with the specified value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a { @code exceptional } with the given { @link observable } and { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a new { @code observable } with the specified number of times and the specified period in milliseconds . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
waits until all of the specified items are exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / b
returns a { @code observable } with a { @code source } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a { @code action } for the given { @link observable } and { @code acc } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . . png alt = > <dl > <dt >
returns a { @code exceptional } produced by applying the given { @link iterable } to a { @link iterable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt
returns a { @code observable } with the given { @code iterable } which this { @code iterable } is a { @code fallback } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png
returns a { @link observable } that emits the emissions from the specified iterable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt > <b > scheduler :
returns a maybe that emits the specified element from the iterable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a single element with the given items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a { @link } that emits the emissions from the specified observable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt > <b > scheduler :
returns a maybe that emits the emissions from the specified observable until the specified number of items is reached . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b
waits until the specified time window is exceeded . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = >
waits until the specified timeout occurs . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = >
waits until all of the specified items are consumed . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
waits until all the items emitted by the user has finished with the given { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
waits until the last time is exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / b > for
waits until the specified timeout is exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / b > for
returns a maybe that emits the given source of the source publisher . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a maybe that emits the predicate that subscribes to the given predicate . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
returns a { @link flowable } that emits the given { @link iterator } to the given { @link publisher } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt
returns a cold { @link } for the specified { @link iterable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < /
returns a { @code exceptional } with the specified items from the { @code iterable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <p > if the specified iterable is empty
returns a { @code this } instance with the specified source and source . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl > <dt > <b > scheduler : < / b
returns a { @code exceptional } with the specified { @link item } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <p > if the item is empty the resulting item will
creates a new { @link observable } with the specified { @link iterable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <p > if the specified array is { @link
subscribes to the given { @link } with the given { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler
subscribes to the given callback . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
subscribes to the specified callback . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < with the <i > <i >
instructs the maybe to emit a single subscription . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / b >
returns a maybe that emits the given source and emits the result of the given action . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
returns a new { @code a } whose value is the same as { @code source } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
returns a completable that emits the emissions from the source maybe to the given source . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : <
returns a completable that emits the emissions from the source maybe that the emissions and the specified source publisher governing . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a maybe that emits the given source and emits the result of applying the specified function to each element of applying the specified function to each element of applying the specified function to each element of applying the specified function to each element of applying the specified function to each element of applying the specified function to each element of applying the
returns a maybe that emits the given source and emits the result of applying the specified function to each emitted item to be emitted . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = >
returns a maybe that emits the result of applying the specified function to each emitted item to be a single - emitted element . <p > <img width = 640 height = src t = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = >
returns a maybe that emits the result of applying the specified function to each emitted item to be a single - emitted element . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt =
returns a { @code exceptional } with the specified { @link observable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > scheduler : < / b
returns a { @code exceptional } that emits the specified number of items emitted by the given { @code type } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt
returns a new { @code a } instance that may be a unit of the specified time . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = >
returns a new { @code observable } with the specified { @link scheduler } with the specified { @link scheduler } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl
returns a { @code observable } with the specified number of { @link tap } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : <
waits until the specified timeout is exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / b > <
returns a maybe that emits the given source of the source publisher . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a { @code a } that emits the emissions from the source iterable and the result of the { @code oncomplete } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
returns a { @code observable } which emits the { @link } with the specified { @link duration } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl >
awaits the prefetched items emitted by the specified duration . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a new { @code observable } representing the specified { @link interval } which this { @link } is scheduled by the given { @link duration } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable
returns a { @code observable } representing the specified { @link } with the specified { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
attempts to terminate the specified timeout and delays the timeout of the timeout . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > backpressure : <
awaits the termination timeout of the specified scheduler with the specified timeout . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @code exceptional } that emits the specified time from the specified { @link time } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a flowable that emits the specified task emitted by the specified scheduler . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
returns a { @code a } that emits the emissions from the specified source publisher until the specified item is reached or the specified value is returned . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png
awaits until the source is a cold source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > scheduler : < / b > < with the
waits until the timeout of a timeout occurs or a timeout value is exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > scheduler : < /
awaits until the source has been emitted by the source and emits the result of the specified value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
awaits until the source publisher is complete . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
waits until the specified timeout occurs . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > < / b >
awaits the emitted by the scheduler with the specified { @link scheduler } . <p > <img width = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a flowable that emits the specified { @code chronology } that emits the specified { @code chronology } . <p > <img width = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
returns a single { @code list } with the specified { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @code collector } that emits the items emitted by the provided supplier . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : <
returns a { @code nullable } with the specified { @code keyselector } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . flatmap . flatmap . > > > > >
transfers the emissions into a publisher . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd >
returns a { @code iterable } which emits the specified { @code e } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <p > if the { @link }
instructs the observable that emits the emissions from the specified observable stream and emits the item to the specified scheduler . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl >
returns a { @code observable } with the given { @code type } and { @code window } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / onerrorresumenext . png alt = > <dl > i . e .
returns a sliding window of { @link publisher } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns a sliding window of { @code t } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns a sliding window that emits the specified number of items emitted by the specified scheduler . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
returns a new window with the maximum of maximum of time intervals . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a sliding window of { @code a } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
waits until the source publisher emits the specified delay . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / b
returns a { @code } that emits the specified { @link observable } s in the { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl
returns a { @code observable } with the specified { @code } and { @code } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a sliding window view to be a { @link } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a { @code observable } with the specified { @link observable } and { @link () } { @link } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
returns a { @code this } with the specified source iterable and emits the result of applying the given { @code other } . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
returns a new { @code exceptional } with the specified source and target . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
{ @inheritdoc }
returns a { @link flowable } that emits the emissions from the iterable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
returns a { @code collector } that emits the emissions from the specified { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
waits until the specified timeout is exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > < / b
instructs the collector to emit a value to the given timeout . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > <
creates a { @code } with the specified { @code } and { @code connection } .
validate the given { @link analyzerresult } objects .
converts a publisher into a { @link flowable } .
creates a { @link flowable } from a publisher .
returns a flowable that emits the specified parallelism from the source publisher and awaits the result of the { @link } .
returns a new { @code } that wraps the supplied { @link converter } .
returns a flowable that emits all of the elements of this flowable with the specified values .
returns a flowable that emits the results of this { @code fluentiterable } and emits the result of applying { @code } to each element of the { @code map } . <p > the result will be { @code true } if the { @link } is not a { @link } .
returns a flowable that emits all items emitted by the predicate .
returns a flowable that emits the items of the { @code } and { @code predicate } .
instructs the { @link scheduler } with the specified { @link scheduler } and emits the { @link scheduler } with the given { @link scheduler } .
instructs the observable emitting callbacks to the observer in order to execute the { @link } .
returns a flowable that emits all of the items emitted by the source publisher and emits the result .
returns a flowable that emits the specified number of items emitted by the publisher emitting the given publisher .
returns a flowable that emits the specified { @code iterable } as a { @code future } . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <p > eager : this method is
returns a flowable that emits the specified { @code int } values from the specified { @link flowable } . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <p > eager : this
returns a flowable that emits the specified { @code accumulator } . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <p > eager : the { @link flowable } is a { @link
returns a flowable that emits the specified { @code int } values from the specified { @code accumulator } . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <p > eager : this
returns a flowable that emits the specified { @code comparator } with the specified { @code comparator } . the returned { @link iterable } will be used to perform retrieving the specified { @link comparator } with the specified { @link comparator } .
returns a flowable that emits the specified { @code comparator } with the specified { @code comparator } . the returned { @code flowable } is used to sort the specified { @code comparator } . the returned { @code flowable } is used to sort the specified { @code comparator } . the returned { @code flowable } is used to sort
returns a flowable that emits the specified { @code comparable } to the specified { @code comparator } . the returned { @code flowable } is a { @link } .
instructs the {
instructs the {
instructs the { @link } to emit a { @link } .
instructs the callback to handle the oncompleted event .
instructs the { @link } to handle the { @link } .
instructs the { @link } to emit a { @link } .
instructs the { @link } to handle the { @link } .
instructs the { @link } to invoke the { @link } method .
cancels all the { @link } s emitting the { @link } .
collects all items emitted by the given supplier into the given iterator .
creates a flowable that emits the specified { @link flowable } from the given { @link flowable } .
sets the specified { @code converter } to the specified { @code function } .
returns a flowable that emits the specified { @code } with the specified { @code source } .
returns a flowable that emits the specified { @code map } with the specified values .
returns a flowable that emits the specified elements of this publisher with the specified values .
returns a flowable that emits the results of this flowable with the specified values . <p > this method is used by the { @link publisher } to perform flatmap operation .
returns a flowable that emits the results of this flowable and emits the result of applying the specified function to the result of applying the provided mapping function to each item in the unfiltered map and the result of executing the transformation .
returns a flowable that emits the results of the specified observable . if the map is empty then the result will be { @code null } .
returns a flowable that emits the results of this flowable and emits the result of applying the specified transformation to the specified accumulator .
create a { @link } that starts with a { @link } .
adapts a { @link observable } to a { @link } .
creates a new observable .
creates a new observable that starts the { @code } .
creates a new observable that the source and the source and the source and the end of the source .
creates a observable that starts the specified { @code } . <p > the source and { @link } is used to run the { @link } .
creates a new {
sets the specified resource to the specified resource .
replaces the given resource with the specified resource and replaces it with the given resource .
creates a new { @link } with the specified size .
creates a new { @link } with the specified { @link } .
creates a with the specified capacity .

adapts a value to a publisher with a value .
creates a runnable that starts with a runnable .
creates a new { @link } instance .
creates a {
creates a future that completes when the future is completed .
creates a new { @link } instance from the given { @link } .
retrieves the value of the <code > / code > object that is the current thread s value .
initializes the scheduler with the given default { @link } .
initializes the { @link } for the given { @link scheduler } .
creates a new { @link } with the default threadgroup and default behavior .
shortcut method to perform a privileged action that will be used to specify the given { @link } .
creates a new { @link } instance with the specified { @link scheduler } .
called when a failure is encountered .
creates a { @link } that will be used to specify the { @link } to be used in the { @link } .
creates a new { @link } instance with the given { @link scheduler } .
starts a runnable that continuously continuously on the given schedule .
creates a new { @link } instance with the given { @link scheduler } .
resets the to the specified .
set the handler for the scheduler handler .
set the { @link } to be used by the { @link } .
set the { @link } to be used by the { @link } .
set the thread local handler to be used when the scheduler is not started .
set the { @link } to be used by the { @link } .
set the { @link } to be used when the { @link } is called .
set the thread to use for the given handler .
set the schedule handler for the { @link } .
set the { @link } to be used for the handler that is used to apply the handler to be called on the handler .
sets the { @link } for the specified { @link } .
sets the observer for the given { @link } .
{
sets the { @link } for the specified { @code } .
sets the value of the { @link } to be used when the { @link } is called .
{
set the { @link } for the { @link } .
sets the observable of the { @code observable } to stop .
sets the to be called when the specified observable is called .
set the { @link } for the given { @link } .
sets the value of the {
sets the { @link } to the specified { @link } .
this method is used to wrap the emissions from the given subscriber .
returns a { @code } that can be used to trigger the observer .
returns a single observer with the given observer and emissions from the given observer .
a helper method to handle observer observer .
returns a { @code subscribe } with the given observer .
returns a { @code collector } that performs the given { @link } and wrap it in a { @code source } .
initiates a {
starts a flowable that emits the specified source .
a helper method to perform a lazy emission of a source .
starts a that is being completed .
returns a single { @code } which is guaranteed that the source is a single element .
creates a new { @link } that is responsible for the given source source and source source .
set the { @link } for the given { @link } .
initiates a { @link } that is used to perform a { @link } .

creates a new { @link scheduler } with the given threadfactory .
applies the given function to the specified function .
applies the given function to the given { @code } .
checks that the given observable is a { @link } .
applies the given {
returns a { @code iterable } that emits the source of the source iterable to the source iterable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b >
returns a { @code collector } that emits the emissions from the source iterable with the specified source . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b >
concatenates the specified source iterable into a single value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . concat . png alt = > <p > eager concatenation operation additions and publisher - of - a window
concatenates the specified { @link publisher } with the specified source publisher and emits the result . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > backpressure :
concatenate a source publisher into a single value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / toasync . png alt = > <p > eager concatenation operation on a { @code source } publisher emitting a { @code
concatenates the source iterable into a single value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . concat . png alt = > <p > eager concatenation operation additions on the source publisher and emits the items
returns a { @link } for the given { @link } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : <
returns a { @code collector } that invokes { @code onsuccess } for each item in the { @code supplier } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . observeon . png alt = > <dl
returns a maybe that emits the specified { @code consumer } from the provided { @code value } . <p > <img width = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > scheduler : <
returns a { @code t } that emits the given { @link scheduler } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @code throwable } instance that the emissions { @link throwable } should be { @code null } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl >
returns a completable instance that emits the emitted item emitted by the source publisher and delays the emitted value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt
returns a maybe that emits the source of the source from the source . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
returns a { @code collector } that emits the emissions from the given callable and emits the result of { @code onsuccess } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt =
returns a future that emits the future that subscribes to the given future . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
returns a future that emits the given future . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a { @code collector } that emits the emissions from the provided { @code runnable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
returns a { @code > } instance fluently for the given { @link item } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
merges the source into a single { @code maybesource } . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . concat . png alt = > <p > eager concatenation with the source of the source publisher and
joins the source into a single { @link list } of { @link } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <p > eager concatenation with the source of the
joins the source into a single { @link iterable } with a { @link } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . concat . png alt = > <dl > <dt > <b >
returns a maybe that emits the specified { @link maybe } that emits the given { @link maybe } . <p > <img width = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . observeon . png alt = > <dl > <dt > <b >
returns a { @code } which emits the emitted { @code value } which emits the source emitted by the source { @code maybesource } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . .
returns a maybe that emits the given source and emits the result of the source . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
returns a { @code collector } that emits the specified { @link delay } until one of the specified delay is exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl >
returns a {
returns a { @link } that subscribes to the given source . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
awaits until the given source iterable is a { @link resource } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @code collector } that manages the specified { @code supplier } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
wrap an observablesource by its { @link } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd >
returns a { @code iterable } that emits the items emitted by the source iterable and collects all of the elements in the source iterable with the given source iterable to the source publisher and emits the result into the iterable . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki
returns a { @code collector } that emits the source of the source into a single { @code maybesource } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a { @code null } that emits the specified source of the source . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @link } that emits the given { @link consumer } until the given { @link subscription } is completed . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . completion . png alt =
returns a new { @link } that emits the given { @link consumer } until it is completed . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt
returns a maybe that emits the specified resource immediately after the specified item . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . observeon . png alt = > <p > if you wish to emit a {
applies the specified transformer to the provided transformer with the specified value . <p > <img width = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / using - operators . png alt = > <dl > <dt > <b > scheduler : < / b > :
returns a maybe that emits the given source and applying the given operator to each element of this builder . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
concatenate the source of the source into the result of the given source publisher . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . concat . png alt = > <dl > <dt > <b > backpressure :
returns a single element with the specified item . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
returns a new { @code a } instance that emits the specified count of the { @code e } that the { @code future } s { @code this } is a { @code null } that is returned by the { @code onsuccess } . <p > <img width = 640 height = src = https : // raw . github
delays the specified amount from the { @code delay } to the specified delay . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the specified delay after the specified delay . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a { @code collector } that emits the emissions from the source publisher and emits the result from the source publisher . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl >
awaits until the specified delay has been emitted by the specified delay . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
instructs the { @link ( consumer ) } method to invoke a { @link } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
instructs the { @link } to emit a { @code onsuccess } with the specified { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
waits until all of the items emitted by the lifecycle of the { @link } is called . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : <
applies a flatmap transformation to each emitted element in the source iterable with the specified result . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
transforms a { @link iterable } into a { @link iterable } with the specified result . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
returns a { @link maybe } that emits the emissions from the specified { @link iterable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > scheduler
returns a completable instance that emits the emissions of the specified type . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
returns a new { @code } that emits the specified { @code e } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt > <b > scheduler
returns a maybe that emits the specified { @link maybe } that subscribes to the specified { @link maybe } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . observeon . png alt = > <dl >
returns a { @code null } that applies to the given { @code mapper } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : <
returns a { @code > } of the given type . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . . png alt = > <dl > <dt > <b > scheduler : < / b
converts a { @link } to a { @link } .
returns a { @code observable } with the specified { @link observable } and { @link observable } s . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . observeon . png alt = > <dl > <dt
returns a { @code this } instance with the specified { @code type } which this { @code } is used . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = >
returns a maybe that emits the specified { @link scheduler } with the specified value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . observeon . png alt = > <dl > <dt > <b > scheduler
instructs the { @link } to emit a { @code onsuccess } to be called when the { @link } is called . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = >
instructs the { @link throwable } to emit a { @link throwable } with the given { @link throwable } and { @link } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png
returns a { @code maybe } that emits the emissions from the given value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler :
instructs the { @link } to emit a { @link } with a { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . observeon . png alt = > <dl > <dt
awaits until a { @link flowable } is emitted by the specified { @code accumulator } . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > backpressure :
creates a flowable that emits the specified {
retries the given { @link iterable } with the specified { @link predicate } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / onerrorresumenext . png alt = > <dl > <dt > <b > scheduler : < /
retries the given amount of times to emit the given amount of time . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl > <dt > <b > scheduler : < / b
retries the given { @link flowable } with the given { @link predicate } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @link flowable } that emits the emissions from the downstream { @link publisher } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
subscribes to the provided subscribe .
subscribes to the given callback with the specified callback via { @link ( throwable ) } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
returns a maybe that emits the specified source of the specified source . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a single element with the given { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a maybe that emits the given source of the given source . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > scheduler : < / b >
waits until the timeout of a timeout occurs . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > scheduler : < / b > < / b >
waits until the specified scheduler is scheduled to the specified timeout . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b
returns a { @code collector } that emits the emissions from the specified source until the given value is exceeded . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt >
returns a { @code collector } that emits the emissions from the specified value . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
instructs the maybe to emit a disposable with a given value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > <
creates a flowable that starts with a { @link flowable } .
creates a new { @link } with the given { @link } .

returns a {
notifies the given {
on a given { @link } .
{
called when a observer is complete .
<p > . < / p >
returns a callable that is equivalent to the given value .
wrap a { @link } that is equivalent to the given value .
wrap a function in a reflective {
prints the stack trace of the given exception stack trace .
get the ultimate root cause of the exception .
creates a new { @link } with the specified { @link } .
creates a { @link } with the specified { @link } .
creates a new { @link } with the specified { @link } .
creates a new { @link } with the specified { @link } .
inserts a { @link } into the queue .
{
/ * ( non - javadoc )
throwable t .
returns the for the given mode .
returns the error message .
get the error and logs it .
waits until the timeout is reached .
creates a new { @link } with the specified size .
creates a { @link } that shrinks the { @link } to be used with { @link } .
creates a new instance of .
creates a new { @link } that creates a { @link } .
{
fails all the exception of the given throwable .
returns the common ancestor of the specified .
creates a new { @link } with default values .
{
get the values of the passed in array of objects .
returns the values of the specified data .
{
drains the best - fit - end of a single .
creates a queue with the given size .
request the specified bloc .



creates a new { @link } with the specified { @link } .
creates a { @link } with the specified size .
creates a new instance of the sslparameters with the given {
complete the next sequenced and complete the next sequenced .
get the values of the value of this <code > resultset< / code > object .
get the values of the specified array .
returns the value of the element in the given object .
get the error message if it is not null .
creates a new instance of the object .
creates a new { @link } with the given { @link } and { @link } .
validates the given { @code } .
sets the value of the specified { @code } to the specified { @code } .
validate the specified { @code restartable } and a { @link } .
sets the specified { @code } to the specified { @code } .
add a new consumer to the list of .
removes the specified consumer from the cache .
asynchronous method to perform a future call on the given client .
adds a long value to the value .
multiply the specified long value .
adds a long value to the stream .
atomically adds a long to the long value .
returns the value of the specified value in the specified value .
subscribe to a publisher
subscribe to a callback .
subscribe to the given callback .
returns a { @code collector } that emits all of the sources emitted by the source { @link completable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl >
returns a completable that emits all emissions from the source iterable and all of the sources emitted by the source iterable or a { @code null } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable .
returns a stateful <code > { @link org . compareto . compareto } < / code > objects that this maybe emits the source publisher until the source publisher completes . <p > <img width = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable .
returns a flowable that emits all the items emitted by the source publisher and terminates the given source . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt >
returns a completable instance that manages the given source and executing the specified source . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler :
returns a completable instance that wraps { @link } s and emits the result of the { @code onerror } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl
returns a completable instance that emits the emitted item emitted by the given action . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
returns a completable instance that subscribes to the given callable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a completable instance that emits the given { @code completable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
returns a completable instance that subscribes to the given completable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a completable that emits the emissions from the given runnable and emits the result . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler
returns a {
creates a new { @link vertxcompletablefuture } with the given downstream { @link iterable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler
returns a new { @code maybesource } that emits all items emitted by the source iterable and emits the source iterable to the source publisher and canceling the source vertices of the source iterable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images /
returns a flowable that emits the specified source from the source publisher until the source publisher is closed . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b >
delays the source publisher to a single source publisher with the specified source publisher and the minsize . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
delays the source of publishers to the source publisher with the specified value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > backpressure : < / b
delays the source of publishers to the source publisher with the specified source and maximum number of items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
returns a completable instance that emits the specified { @link completable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
returns a new { @code collector } that emits the specified { @link delay } until one or more items emitted by the time { @link scheduler } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable .
converts a {
returns a completable instance that manages the specified resource throwing an exception if the given completable is not a { @link completablefuture } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt =
wraps a { @link completable } to a { @link completable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
returns a completable that emits the given source and emits the result of the { @link completable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a new { @code observable } with the specified value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits the specified item in the specified { @code future } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
returns a single element with the given value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
returns a new { @code } that applies the given { @code count } to the given { @code count } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl >
returns a completable that applied the specified task to the given source and emits the specified downstream group . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <p > the following
returns a new { @code completable } that emits the specified { @link maybe } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler
starts the asynchronous thread that subscribes to the given {
returns a completable instance that emits the emissions of the specified observable group until the given { @link completable } is not <code > null< / code > . <p > <img width = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png
returns a completable that emits the given source of the source and emits the emitted element . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
returns a { @code collector } that emits the specified delay with the specified delay . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler
returns a { @code collector } that emits the emissions from the scheduler with the specified delay . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
awaits until the delay is exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
returns a { @code > } instance with the specified delay . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < /
signals that the emitted action will be executed after the emission of the source . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler :
instructs the { @link } to stop emitting actions to stop emitting actions . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler :
instructs the lifecycle function to perform a cold { @link ( throwable ) } method . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b >
returns a {
signals that the emitted observer subscribes to the given { @link consumer } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : <
waits until the { @link } is closed . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > <
waits until the given { @link } is closed . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a {
returns a completable that emits the emissions from the given iterable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / onerrorresumenext . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a completable that emits the emissions from the source and terminate with the given { @link throwable } and { @link } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt
returns a completable instance that wraps the specified number of times and emits the specified number of times . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <p > if the specified number
returns a { @link completable } that emits the specified { @link maybe completable } until the stop timeout is exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl
returns a { @link completable } that emits the emitted { @link maybe } that subscribes to the specified completable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl >
returns a completable that emits the specified { @code scheduler } which this maybe emits the { @code completion } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / onerrorresumenext . 0 . png alt = > <dl >
returns a { @link flowable } that emits the emissions from the specified time . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl > <dt > <b > scheduler : < /
retries the given { @link flowable } with the given { @link java . time . predicate } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / onerrorresumenext . png alt = > <dl > <dt > <b >
returns a { @link completable } that emits the given { @link publisher } throwing an exception with the specified { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt
returns a { @code this } instance with the specified result set . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . png alt = > <dl > <dt > <b > scheduler : < / b >
subscribes to the given { @code subscription } object that will be used to subscribe to the given { @link subscribe } . <p >
awaits until the given observer subscribes to the given observer . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a {
returns a completable that emits the emissions from the source completable and awaits the emitted state of the source . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a completable instance that emits the specified timeout in the specified timeout . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : <
returns a new { @code exceptional } that emits the emissions from the given timeout . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler
waits until the specified timeout is exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns a completable that emits the specified timeout and delays the given timeout . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : <
returns a new { @code this function } expression optionally using the specified { @link } and { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl >
converts a { @link flowable } to a { @link flowable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a { @code collector } that emits the items emitted by the specified { @link throwable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / expressions . modifying . png alt = > <dl > <dt > <b > scheduler : < /
returns true if the source stream is a finite object or null if not found .
returns true if the given observer is a valid one or more of the given observer .
add a element to the tail of the queue .
shuts down the given executorservices .
creates a new service factory .
sets the subscription to the specified subscription .
called when a loop is stopped .
{
throws an exception if the throwable is not a null exception .
wrap the given throwable and rethrows it .
flatten a list of { @link } s into a list of { @link } objects .
throws an exception if the { @code throwable } is a { @code runtimeexception } .
adds a consumer to the cache .
removes the specified consumer from the cache .
if the given consumer is already in the queue it will be used to perform a consumer .
performs a copy of the given { @link } with the given { @link } .
adds a new { @link } to the { @link } .
adds all the given {
{
deletes the given { @link } .
clears the map of resources .
{
subscribe to a publisher
subscribe to a callback .
subscribe a callback to be called when the subscription is subscribed to the next onnext operation .
subscribe to a callback .
adds a resource to the resource .
a source into a single source object .
applies a value to the given value .
creates a new { @link onjqueryfunction } instance .
constructs a { @link } that is a { @link } .
shuts down the pool .
add a value to the tail of the queue .
iterate over the elements of the given consumer .
{
returns true if the given observer is null or empty .
perform the given functor .
returns a single {
returns a { @code } that emits the specified source of sources . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
converts a source into a {
returns a { @code > } instance with the given supplier and { @code consumer } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
returns a maybe that emits the given exception . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
returns a maybe that emits the given callable . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
returns a { @code future } that emits the given { @code future } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . future . wrap . . png alt = > <dl > <dt >
returns a { @code future } that emits the given { @code future } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . future . wrap . . png alt = > <dl > <dt >
returns a { @code collector } that emits the specified { @link future } with the specified timeout . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt >
merges the source into a single { @code maybesource } . <p > <img width = > here< / sub > < / sub > <p > <p > the source of the source is identical to the source that is identical to the source . < / p > <p > if the source is a { @code } then
delays the source publisher to a single { @link } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a { @code > } instance with the specified { @code onsuccess } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt > <b > scheduler
returns a new { @code delay } that emits the specified delay . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a single { @code } with the given { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
awaits the emitted operation on the given source and the given { @code function } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : <
returns a new { @code onsuccess } that emits the emissions from the specified { @code iterable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt >
returns a { @code > } instance with the specified { @code type } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt > <b > scheduler
returns a single transformer that emits the specified source and the specified source publisher with the specified source publisher and the result of the provided transformer . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext .
returns a new { @link } that emits the specified { @link iterable } with the given { @link iterable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = >
concatenate a source source into a single value . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <p > if the source publisher emits a single { @link } then the resulting
returns a new { @code delay } with the specified delay and maximum number of times the { @code delay } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl
returns a { @code collector } that emits the emissions from the specified scheduler and delays the { @code onsuccess } to the specified { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable .
delays the specified {
awaits until the source observablesource joins the source publisher and emits the emitted element . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
instructs the collector to perform a custom delay . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
instructs the { @link scheduler } with a heterogeneous delay of { @link } and emits the { @link scheduler } with the specified timeout and the maximum amount of time . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns a { @code collector } that emits the emissions from the upstream { @code selector } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
returns a { @code } which emits the emissions from the specified observable . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . wrap . . png alt = > <dl > <dt > <b >
waits until all subscribing to the given actions are suppressed . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl > <dt > <b > scheduler : < / b > < /
returns a new { @code } that emits the emissions from the given { @code iterable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt >
returns a { @code } which emits the emissions from the upstream { @code onsuccess } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler
waits until all subscribing to the given callback . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a { @code > } instance with the specified success and { @code onsuccess } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . subscribing . subscribing . <img > g : null : {
instructs the callback to emit a single element . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . . png alt = > <dl > <dt > <b > scheduler : < / b > < /
instructs the { @link } to emit a single { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
returns a single element with the given source and source value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a maybe that emits the given source maybe that emits the specified source . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < /
returns a new maybe that emits the results of applying the given transformation to the given source publisher and emits the result . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / a - 1 . png alt = >
returns a maybe that emits the given { @code iterable } that emits the given { @code e } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . observeon . png alt = > <dl > <dt
returns a single { @code value } that wraps the given { @link maybe } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / a - 2 . 0 . 0 . png alt = > <dl > <dt
returns a {
returns a { @code value } if the given value is <code > null< / code > otherwise . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / onerrorresumenext . png alt = > <p > if the value is
merges the source with the source with the specified source and returns the resulting result . <p > if the source publisher emits a single source with the source source is identical to the source source . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava /
returns a single threaded observer .
returns a {
waits until all of the given { @link consumer } has been closed . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that delays the specified value to the specified value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . html > the scheduler is a publisher that the result is a publisher that is returned
retries the given { @link } with the given { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt > <b > scheduler :
retries the given { @link iterable } with the specified { @link iterable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / onerrorresumenext . png alt = > <dl > <dt > <b > scheduler : < /
retries the given { @link flowable } with the given { @link java . time . predicate } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a { @code } which emits the emissions from the { @code scheduler } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b >
subscribes to the provided publisher if the provided consumer is null . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b
subscribes to the given callback with the specified callback . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < with the
instructs the { @code this } to emit a single { @link consumer } with the specified { @link consumer } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl
returns a single {
returns a maybe that emits the given source and emits the result of the given source . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
waits until the specified timeout is exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
waits until the specified timeout is exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns a completable instance that emits the emitted item emitted by the given { @link completable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b
converts the specified { @link future } into a { @link future } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . completion . png alt = > <dl > <dt > <b > scheduler : <
instructs the maybe to emit a single observer . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a single { @code } with the specified source and destination . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
creates a new { @link } instance .
creates a new { @link } instance .
start the specified {
starts the specified { @link } .
inserts a new item into the queue .
{
returns the buffer for the specified buffer .
{
returns the resource adapter for the given resource .
creates a new { @link } .
{
method to increment the current state of the given throwable .
{
returns a flowable that emits the specified items emitted by the specified publisher publisher and publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the specified source publisher and emits the result from the specified source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / toasync . png alt = > <dl > <dt > <b >
returns a flowable that emits the specified number of items emitted by the source publisher and emits the result from the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl
concatenates a single { @link java . lang . iterable } with a { @link } . <p > <img width = 640 height ; = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : <
delays the specified {
delays the specified {
creates a new flowable that emits the emissions from the source publisher and surfaces the specified backpressure . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the specified { @code throwable } as a { @code classcastexception } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the specified {
returns a flowable that emits the source of the source items emitted by the source publisher and emits the source items emitted by the source publisher to a single value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a flowable that emits the specified number of elements in the given state . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the specified number of items emitted by the specified interval . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : <
returns a new flowable that emits the specified number of times and a new interval in the specified interval . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a flowable that emits the specified number of times and the specified interval . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < /
returns a new flowable that emits the specified number of times at rangeend . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / repeat . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the specified number of items in a range of items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the item emitted by the given item . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the specified number of items emitted by the source publisher and emits the specified items from the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = >
merges the { @code } into a { @code list<long > } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b
delays the specified {
returns a flowable that emits the specified { @code throwable } as a { @code } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / onerrorresumenext . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the specified number of items from the specified number of items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure :
returns a { @code flowable } that emits the specified number of items emitted by the specified number of items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <p > if the
returns a single { @code } that wraps the specified { @link publisher } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
returns a single { @code } that emits the specified { @code predicate } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
returns a { @code } that emits the specified { @code int } values from the { @code } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt
returns a flowable that emits the specified source of the source publisher to emit a { @code source } object . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . . png alt = > <dl >
returns a flowable that emits the specified {
returns a flowable that emits the specified delay between the specified delay and time . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > backpressure : < /
creates a {
awaits until the specified source publisher is determined by the specified supplier . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > backpressure : < /
combines the items into a single single single - valued publisher with a single source publisher . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the specified { @code iterable } into a { @code list } of { @code iterable } objects . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
returns a {
instructs a publisher to emit a { @link } that emits the specified { @link consumer } until the specified value is returned . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = >
returns a { @code collector } that emits the emissions from the source { @code stream } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / onerrorresumenext . png alt = > <p > if the iterators are not
returns a { @code int } that emits the elements of the specified source { @code size } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
instructs the { @code } to emit a { @link } that emits the last element of the specified { @code timeout } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt =
returns a { @code > } items from the specified { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
returns a {
instructs the { @code } to emit a single { @link } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < /
returns a { @code > } produced by the specified { @code item } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
converts a publisher into a future that emits the result of the future . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromfuture . . png alt = > <p > if the result is a { @link
sends a subscribe - blocking request to the specified pool .
forwards to the next { @link } with the specified { @link consumer } .
sends a subscribe to the specified {
waits until the specified number of items is a topological transformation . <p > <img width = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
waits until a publisher is complete . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd >
returns a flowable that emits the given buffer to emit a single element . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b
waits until the specified buffer is closed . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
waits until the specified time gap is exceeded . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
waits until the awaited items is closed . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
waits until the specified time is exceeded . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
waits until all items are not emitted by the given { @code timespan } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < /
waits until the next time the specified delay is exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < /
returns a flowable that emits the emissions from the source { @link flowable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the emissions from the source object . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > <
waits until the specified source has been closed . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
returns a flowable that emits the specified number of items from the given stream . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < /
waits until the specified source has been closed . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
returns a flowable that emits the specified number of items emitted by the specified items . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the specified number of items emitted by the specified { @link consumer } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
collects all items emitted by a publisher into a single element . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > <br
returns a flowable that emits the specified source publisher until the specified { @link publisher } is signalled . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt >
returns a { @code collector } that emits the emissions of a source emitted by the source publisher with the specified source publisher and emits the result of applying the specified function to the source publisher with the specified source publisher and emits the result of applying the specified function to the source publisher and emits the result emitted by the source publisher
returns a { @code collector } that emits the emissions of a source of a source of a source source of a source source of a source source . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable .
returns a flowable that emits the specified source of items emitted by the source publisher until the source publisher completes . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
converts a source into a single value into a single value . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / toasync . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the specified source items from the source publisher until the source publisher emits a publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
transforms a triple into a single triple of results . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / toasync . eager . png alt = > <dl > <dt > <b > backpressure : < / b > <
converts a source into a single value emitted by the source publisher to emit a result of applying the provided publisher to the source publisher with the source publisher and emits the result from the source publisher with the specified values . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki
converts a publisher into a single triple view . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
converts a single value into a single value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
returns a flowable that emits the specified source of items emitted by the source publisher until the resulting publisher ends with the specified source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt =
concatenates this maybe by using the specified { @link } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the specified source of items emitted by the source publisher and emits the result from the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
returns a single - valued item that has the specified item . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a { @code long } object that this { @link } is a { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a flowable that emits the specified {
returns a flowable that emits the specified timeout and delays the item to the given timeout . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler :
delays a publisher to a fixed delay between the specified delay . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the specified delay before the specified delay . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > backpressure : < / b >
delays the specified {
returns a flowable that emits the emissions from the source publisher and signals that the result of the { @code subscription } is a { @link } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / .
returns a flowable that emits the specified { @code function } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
returns a flowable that emits the specified {
returns a { @code nullable } with the specified key - value pairs with the specified selector key . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a flowable that emits the specified item from the source publisher and emits the result of the specified { @code keyselector } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
returns a flowable that emits the specified {
returns a flowable that emits the specified item in the source map . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the emissions from the source { @code maybesource } that emits the emissions from the source { @code maybesource } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt =
returns a flowable that emits the emissions from the observer . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < /
instructs a publisher to emit a single item emitted by a publisher into a single item . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure :
waits until all items have been closed . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
cancels the specified action that subscribes to the specified { @link tap } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl > <dt > <b > backpressure : < / b
instructs the { @link } to emit a single { @link } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl > <dt > <b > scheduler : < /
instructs the {
instructs the { @link } to emit a { @link } to emit notifications . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure :
instructs the specified { @link } to emit the specified { @link subscriber } to the specified { @link subscriber } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl >
instructs the specified stitch function to emit a single error message . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / onerrorresumenext . png alt = > <dl > <dt > <b > backpressure : < / b > <
instructs the { @link } to emit a { @link } with a { @link } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
instructs the lifecycle function to perform a cold { @link } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / onerrorresumenext . png alt = > <dl > <dt > <b > backpressure : < / b >
performs a synchronous action on the upstream emission of the source publisher with the specified backpressure and consumer publisher with the specified backpressure and consumer publisher with the specified backpressure .
waits until all actions of the source is closed . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a { @code > } whose value is a { @code } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
returns a single { @code } that emits the specified element . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the items emitted by the predicate . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a { @code > } produced by the specified { @code e } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . html > the elements are emitted by the source of the specified element
returns a single { @code item } that emits the specified items . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a single { @code collector } that emits the specified result of applying the specified { @code operator } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a flowable that emits the specified items from the source publisher until the source publisher is determined by the source publisher and the given mapping function will be applied to the source publisher and emits the result into the { @code source } . <p > <img width = 640 height = 315 src = https : // raw . github .
returns a flowable that emits the specified accumulators of the emissions in the result of the given { @link flowable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt
returns a flowable that emits the specified source view of the source publisher until the source publisher is determined by the given value . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl
returns a completable that emits the specified source items from the source publisher with the specified source publisher with the specified values . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = >
returns a flowable that emits the specified source items from the source publisher and the given source publisher governing . <p >
returns a flowable that emits the specified source items emitted by the source publisher with the source publisher value of the source publisher with the source publisher with the specified value . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators
converts a single source into a single value . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
returns a { @code } that emits the source of the source publisher and emits the result from the source publisher and emits the result from the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a flowable that emits the specified { @link observable } in the { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure
waits until all elements of the given { @link subscription } is closed . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b
waits until the specified predicate is found . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
awaits until the source completes successfully successfully normally that has been reached . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the specified { @code keyselector } with the specified { @code keyselector } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt >
returns a flowable that emits the specified { @code keyselector } with the specified { @code keyselector } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt >
applies the specified operator to the source publisher with the specified selector . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . onerrorresumenext . png alt = > <dl > <dt > <b > backpressure : < /
converts a publisher into a flowable that emits the specified number of items . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b
returns a { @link flowable } that emits the specified { @link flowable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @code collector } that emits the { @link ( int ) } { @code } and { @code n } elements . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt
returns a { @code flowable } that emits the last element of the specified element . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
returns a single { @code n } emitted by the specified { @code } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that the { @code future } object is a { @code int } . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . . . > max< / a >
returns a flowable that emits the specified { @code subscription } that emits the specified { @code notificationhandler } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / onerrorresumenext . . png alt = > <p > if
merges the source into a single { @link flowable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < /
merges the source into a single { @link list } of { @link flowable } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
merges the { @link flowable } into a { @link list } of { @link flowable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure
instructs the publisher specified by the specified { @code scheduler } which will be emitted by the specified { @code scheduler } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl >
awaits until the specified buffer is closed . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
awaits until the specified buffer is closed . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / defaultifempty . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
instructs a publisher to emit a single result of the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > backpressure : < / b >
instructs a maybe to emit a single element of a single onnext emission . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / dropping . png alt = > <dl > <dt > <b > backpressure : < / b
instructs a publisher to emit a flowable that delays a publisher with the specified publisher and emits the result . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt
instructs a publisher to emit a single { @link } that emits the specified { @link consumer } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt
returns a flowable that emits the specified items from the specified observable . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <p > eager : this method is a convenience method that will
returns a flowable that delays the given { @code type } to a { @code future } . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <p > eager : this method is
sends a single downstream transformation to the specified publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
applies a synchronous transformation to the publisher specified by the specified publisher . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <p > the resulting publisher honors the downstream downstream .
transfers the specified buffer to the specified buffer via a { @link flowable } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the specified number of emissions from the specified { @code subscription } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / average . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the specified number of items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : <
returns a single triple of all the elements of the source stream . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a single { @code stream } produced by iterative a pair of objects into a single { @link iterable } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt
returns a flowable that emits all specified items from the specified publisher until the result of the specified publisher is reached . <p > <img width = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b >
returns a flowable that emits the specified number of times and emits the specified result . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / repeat . png alt = > <p > if the specified number is <code >
instructs a publisher to emit a single result of the future . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / average . png alt = > <p > if the result is a { @link cancellationexception } then the
awaits the emissions from the source stream with the specified selector . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > <
awaits until a publisher completes successfully subscribes to the specified destination . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the specified { @code int } as a { @code string } which is a { @link flowable } that has been closed . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / .
waits until all of the specified number of time is completed . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > <
instructs the publisher to emit a single - emitted event to the pool . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b
awaits until the source is complete . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / b > this method
retries the emissions in the input stream . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / average . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
retries the emissions in the source publisher until the specified number of times the result is a concatenation of the specified number of items emitted by the publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / average .
retries the given { @link publisher } with the specified { @code predicate } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / onerrorresumenext . png alt = > <dl > <dt > <b > backpressure : < /
sends a subscribe to the subscriber to the subscriber .
returns a random {
returns a new {
returns a random { @link list } of { @link } s . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b
returns a { @code flowable } that emits the item emitted by the source publisher and emits the result of the provided function . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
returns a flowable that emits the specified {
returns a flowable that emits the specified number of items emitted by the publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > backpressure : < /
returns a { @code collector } that emits the items emitted by the specified { @link maybe } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b >
returns a { @code collector } that emits the emissions from the specified { @code accumulator } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the specified number of items emitted by the publisher at the specified position . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / average . png alt = > <dl > <dt > <b >
waits until the specified time emits the given { @link subscription } that is returned . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
waits until the specified time emits the given time amount of time . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
waits until all items are consumed by the { @code } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
waits until the last time is exceeded . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
waits until the last item is scheduled to the specified timeout . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the specified predicate . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
returns a flowable that emits the specified { @code accumulator } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the specified {
returns a flowable that emits the specified items from the specified items . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <p > eager : this method is a convenience method that reverses
returns a { @code int } with the specified { @code int } values from the specified { @code int } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt
subscribes to the provided subscribe . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <p > <b > note : < / b > this method appends the semantics to { @link
returns a {
subscribes to the specified subscriber .
returns a { @code subscribe } with the specified { @code subscription } with the specified { @code subscription } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / subscriber . png alt = > <dl > <dt >
returns a flowable that emits the emission of the specified { @link flowable } that has been emitted by the source publisher and canceling the specified subscription . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png
converts a publisher into a single value . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
returns a {
converts a { @link } to a { @link classcastexception } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the specified number of items emitted by the specified count . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the specified number of items emitted by the specified time window . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the specified number of items emitted by the specified scheduler . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the specified number of items emitted by the specified number of items . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure
waits until all items have been emitted by the specified amount . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > <
waits until the specified timeout is exceeded . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
waits until the specified time emits the delay of a delay . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > backpressure : < / b > <
awaits until the predicate is matched by the predicate . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns a flowable that emits the specified { @code int } that has the same value as { @code other } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt
returns a flowable that emits the specified predicate . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
returns a flowable that emits the specified number of times that the publisher governing will be scheduled to the specified time window . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = >
returns a flowable that emits the specified duration between the specified duration and the specified duration . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the specified number of items emitted by the specified interval . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the specified timeout and delays the specified timeout . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . delay . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the specified time from the specified time interval . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the specified time between the specified unit . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the specified items from the specified publisher waiting for the item to be emitted . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <p > if
waits until the timeout of a timeout is exceeded . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
waits until the specified timeout is exceeded . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
returns a flowable that emits the specified item in the specified publisher until the first item emitted by the publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
waits until the specified scheduler is scheduled on the specified scheduler . <p > <img width = 640 height = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt >
converts a { @link } to a { @link } . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the specified items in the list . <p > <img width = > a > i< / sub > <td > <code > step< / tt > < / sub > < / div > <p > the returned { @code } is used to perform a single { @link list } of { @link flowable }
returns a single { @code list } of { @code values } . <p > <img width = > a > i< / sub > < / sub > < / sub > < / b > <br > <b > warning : < / b > this method appends the values to the existing list ( if any ) . use {
returns a list of items that have been emitted by the given collection of items . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : <
converts a single { @code key } into a single { @link list } of { @link flowable } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a flowable that emits the specified { @code iterable } in { @code observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > scheduler :
returns a { @code } that emits the specified { @code iterable } to the specified { @code iterable } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <p > if
instructs the publisher to emit a flowable that the emitted subscription subscribes to the specified scheduler . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the specified number of items emitted by the publisher window . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / average . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the specified number of items emitted by the specified publisher publisher publisher and limit . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b
returns a flowable that emits the specified number of times and emits the specified time from the specified time window . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
returns a flowable that emits the specified number of times and emits the specified number of times . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the specified number of times and the specified delay . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the specified { @code asmap } with the specified { @code chronology } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b >
returns a flowable that emits the emissions from the source publisher and emits the result from the given { @code view } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl >
returns a flowable that emits the specified { @link publisher } that emits the specified { @code subscription } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt
returns a flowable that emits the specified { @code future } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the specified sequence of items emitted by the source publisher and emits the result of the second element . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl
returns a flowable that emits the specified { @code other } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > <
{
{
creates a runnable that continuously schedules a runnable in the future .
awaits until the specified count is available in the specified count .
emits the specified { @link } to the specified { @code } .
creates a default { @link } instance .
inserts a subscription to the underlying queue .
{ @inheritdoc }
checks if the given { @code } is a { @link } .
returns a flowable that emits the specified number of items emitted by the specified collector . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / onerrorresumenext . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the specified number of items emitted by the publisher publisher publisher and emits the result in a { @code t } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . .
returns a flowable that emits the specified number of times and executing the result in a { @link subscription } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt >
waits until the specified number of time is exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . . png alt = > <dl > <dt > <b > backpressure : < / b > <
waits until all items are exceeded . <p > <img width = 640 height = src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd >
creates a {
/ * ( non - javadoc )
sets the resource to be used when the resource is not already in the current resource .
replaces the given resource with the given resource and replaces it with the given resource .
retrieves the next available { @link } .
{
remove the specified { @link } from the specified { @link } .
returns a { @link } that is accepting a { @link } with a custom consumer selector .
creates a flowable that emits the specified { @link scheduler } with the given { @link scheduler } .
creates a new { @link flowable } from the source { @link flowable } .
creates a flowable that starts with { @link } .
creates a flowable that the source is a { @link } .
creates a flowable that starts the specified { @link flowable } . <p > the source is a { @link } with the specified { @link } .
creates a new { @link flowable } instance from the specified { @link flowable } .
creates a { @link } for the given { @link } .
creates a new { @link } instance for the given scheduler factory .
creates an instance of { @link } .
/ * private methods
returns a {
creates a new { @link } with the specified { @code class } and { @code args } .
returns a {
returns the next call to the {
returns a converter request body for the given request body .

query by type .

returns a converter that is declared by the given type .
creates a { @link } instance for the given { @link } .
creates a { @link } instance .
creates a new { @link } instance .
creates a converter factory that wraps the given { @link } instance .
parses the given { @link responseentity } .
create a new { @link } instance .
sets the delay to be used when the delay is exceeded .
sets the value of the specified { @link } .
creates a new response with the specified { @link } .
calculates the delay of a delay between the specified deadline and the given delay .
captures the response body with the given body .
creates a new response body with the given parameters .
create a new response with the specified body .
wrap response body
/ * package private
checks the number of characters in a string literal .

load all the and .
returns the next chunk of the next available data .
resets the input to the given reader .
process the .
create a new .
sets the and .
/ * ( non - javadoc )
creates a new {
reads the next byte buffer from the buffer .
initializes the cursor .
adds a path to the path .
this method is called by the { @link } to read the data .
sets the character offset for the .
returns the next {
resets the state of this builder .

adds a new { @link } to this builder .
adds a new { @link } to the builder .
removes the specified { @link } from the head of the queue .
check if the given { @link datasetdescriptor } is a valid { @link } .
returns the highest - byte of the first n - th element .
returns the next n - th element of the given symbol .
initialize the .

/ * ( non - javadoc )
/ * ( non - javadoc )
<p > perform a search search for the specified character sequence . < / p >

load the main main file .


returns a list of words for the specified location .
load all the files from the file .

/ * ( non - javadoc )
/ * ( non - javadoc )
adds a new .
returns the first bytebuf of this queue .
returns the last element of this queue .
/ * ------------------------------------------------------------
process the count of processing .
returns true if the scan is not a valid scan .
/ * ------------------------------------------------------------
answers a character in the specified array of characters .
fills the specified buffer with the specified character .
/ * ----------------------------------------------------------------------------
returns the map of all children of the given children .
migrates the segments to the given list of segments .
compares this { @link } to the same value .
returns the type of the message type .
appends the specified { @code } to this builder .
sets the value of the { @link } .
sets the converter parameters for the validation parameters .
logout the logout request
set the clock clock for this clock .
set the { @link userdetails } for the { @link } .
set the port mappings to use for the port .
creates a sample of the given data .
sets the .
perform the callback api with the provided callback .
returns the {
dispatch the servlet request .
{
create a request for the specified request .
encode a string using the password .
returns true if the password is valid for the given string .
if the version is not a valid it is assumed that the appliesto version is valid .
checks if the given is enabled .
returns the version of the class .
returns a { @link } for the { @link } .
returns true if the given { @code clazz } is a { @code null } .
login to user s user profile .
sets the subject name for the user .
builds the for this object .
get the attributes of the specified object .
returns the authorization authorization header .
log a {
{
get the consumer to be used for the .
returns a list of that will be used to fetch the attributes of the .
get authentication user details for the given user .

get the { @link } for the { @link } .
/ * ( non - javadoc )
<p > . < / p >
get the server s ssl server .
returns the {
filter a filter with the specified filter .
filter a filter with the specified filters .
add a filter to the filter .
filter a filter with the given filters and filter .
creates a new { @link } with the given { @link } .
returns a {
<p > . < / p >
{
get the .
search for the given filter and returns the search filter .
search for all values of the specified filter and returns a list of all the objects contained in the specified filter .

search for the given search parameters .
search for the specified search parameters .
build a new build screen .




{
create a new instance of the
returns the user roles for the given user .
/ * ------------------------------------------------------------
sets the { @link } instance for the given { @link } .
sets the { @link } instance .
creates an embedded object from the given element .
/ * ( non - javadoc )
creates the servlet filter .

parse the { @link } instance .
writes the headers to the response .

invoke the specified object with the given parameters .
this method is called by the method .
get the list of { @link } s for the given { @link } .
creates a new { @link } instance .
/ * ( non - javadoc )
remove the jawr bindings for the given filter .
register a filter to the filter .
register a filter to the filter .
returns the web application context .
returns the set of for the specified resource type .
returns a token that is a single time series .

{
returns all the authorities that are associated with the given list of attributes .
returns the {

/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the session strategy for the current session .
returns the policy for the session .
checks if the session is currently cached .
returns a session that is a { @link } for the given authentication strategy .
/ * ( non - javadoc )
performs the authentication of the request .
login .
login to the user .
initialize the access control policy handler .
creates a { @link } instance for the given { @link } instance .
creates a new secret key using the specified key and password .
creates a new { @link secretkey } with the given algorithm key .
creates a new { @link cipher } with the given parameters .
returns the parameter s parameter type .
initializes the cipher with the given cipher key .
initialize the cipher suites using the given cipher key .
initializes the cipher with the given { @link secretkey } .
this method is used to perform a binary insight on the cipher .
/ * ( non - javadoc )
{
returns true if the principal has been set to the user .
-------------------------------------------------------------------------------------------
login .
-------------------------------------------------------------------------------------------
/ * ( non - javadoc )
check length of the content of the content of the content of the content of the content of the content .
get the parser for the parser .
sets the http method to use for the given request .
sets the url to be used for the percent - digit character .
returns a multimap that combines the authorities of the map of authorities to set of authorities .
sets the default url to the server .
perform a login request to the login request .
adds a failure to the .
sets the login page .
update the login page .
update the value of the property .
sets the client to connect to the client .
sets the { @link } for the { @link } .
sets the { @link } for the { @link } .
adds a url to the server .
/ * ( non - javadoc )
registers the bean factory annotation .
{
returns the password for the given password .

set the jwt for the { @link } .
sets the { @link } .
resolve the method and resolve the given class .
finds the method with the given annotation .
resolve the {
create a new { @link } .
/ * ( non - javadoc )
attempts to authenticate the user with the given login response .

create a crumb from the user .
decodes a cookie string into a string .
encode a cookie into a cookie string
/ * ( non - javadoc )
returns true if the request parameter is not a valid authorization header parameter .

sets the cookie value for the cookie .
/ * ( non - javadoc )


adds the http headers to the response .


create a new instance of .
creates a new userdetails with the username and password .
called by the { @link } to perform the authentication .
perform a { @link } .
handle the request to handle the request .
sets the page page page page .
resolves a { @link } instance .
resolve the jawr binding .
get the query string for a given request .
creates a { @link } for the given artifact name .
get the port port of the given service .
returns the principal for the user .
resolve the given { @link } .
called when the application is started .

/ * ( non - javadoc )

returns a new {
/ * ------------------------------------------------------------

methodhandles .
sets the metadata for the given meta - data .
{
/ * ( non - javadoc )
converts a { @link map } to a { @link } .
converts the given map into a map of { @link } objects .
{
{
set the mappings of the {
adds a filter to the web server .
build the { @link } for the { @link } .
logout the logout request
call to reset the { @link } to emit the { @link } .
/ * ( non - javadoc )
authenticate against a authentication authentication .
logs a logout request .
handles a { @link authorizationexception } with the given { @link } .
creates a { @link runnable } for the given { @link runnable } .
get all attributes of the .
sets the authorities of the authorities .
/ * ( non - javadoc )
builds the url url provider url .
/ * ( non - javadoc )
sets the environment variables .
returns the parameter {
returns true if the request matches the request .
/ * ( non - javadoc )
sets the value of the { @link } to be used for generating a { @link } .
sets the { @link } to be used for the { @link } .
resolve the given {

{
creates a filter chain for the given element .
creates a new instance .
/ * ( non - javadoc )
start the page with the current page .
tag
/ * ( non - javadoc )
sets the user to use for the user .
sets the user s username and password .
filter the chain of the .
validate the redirect url against the redirect uri .
generates a hash digest from the digest of the given challenge .

splits a string into a single string .

logs a failure to the current thread .
dispatch a object with the given object .
authenticate authentication .
handles the case of a {
returns the user details for the given user .
add parameters to the map .
/ * ( non - javadoc )
checks if the given ticket is valid .
returns true if the service is valid for the request .
checks if the ticket is valid .
returns whether the authentication token is not a drpc authentication .

checks if the proxy is enabled .

/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
create a new { @link } instance that will be used to create a new { @link } instance .
create a new { @link } instance .
/ * ( non - javadoc )
returns a {
returns the id of the given {
/ * ( non - javadoc )

create a new authentication of the user .
/ * ( non - javadoc )
/ * ( non - javadoc )
handles the authentication request .
builds the url url for the request .
returns the username and password .
encode the value of the {
returns the user cached user from the provided user .

/ * ( non - javadoc )
/ * ( non - javadoc )
returns the default { @link } .
returns the {


configures the { @link } with the given { @link } .
sets the { @link } to be used for the { @link } .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the response to be used for the response .
sets the response parameters for the { @link } .
get the collection of group groups for the user .
returns the for the specified instance .
/ * ( non - javadoc )
get the service url for the service .
loads a user user password .
sets the client to connect to the client .
sets the { @link } for the { @link } .
sets the { @link } for the { @link } .
returns the url of the serverurl .
get principal from the current request .
this method is used to create a user from a user .
loads the user details from the user .
returns a request that returns a request that can be used to perform a cors request .

creates a client - side consumer client id .
create a { @link } instance .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
checks if the given resource is granted to the given permission .
{

concatenate the given array of bytes into the specified array .
returns a sub - byte array .
returns all authorities .

returns a list of objects that are not included in the request .
add a collection of to the collection .
get principal from the principal .
returns the object for the object .
applies the given to the .
applies the interface to the .
sets the shared object for the given type .
get the shared object for the given type .
adds a new { @link } to the list of .
gets a list of all the .
removes a { @link } from the specified class .
removes the specified { @link } from the specified { @link } .

build the initial state of the .
returns the object instance for the given method invocation .
/ * ( non - javadoc )
/ * ( non - javadoc )
builds the url url for the request .
invoke the specified method on the specified object .
/ * ( non - javadoc )
returns the role for the given role .

sets the dn for the dn .
{
creates a login cookie for the given login cookie .
login to the user .
{
ensures that the user s password is authorized to authenticate with the user s password .
handles the authentication of the user .
/ * authenticate with authentication token
helper method to get the for the given authentication .
sets the user - agent - side of the user - agent - related url .
sets the url to the user agent .
sets the url to be used for the .
gets the index of the .
gets the user - specific contacts .
strip leading and trailing spaces and ending slashes .
filter the filter chain .
/ * ------------------------------------------------------------
set the metadata for the specified meta data .
create a { @link } for the given { @link } .
/ * ( non - javadoc )
handles the authentication handler .
returns true if the given class is a functional interface .
{
/ * ( non - javadoc )
evaluate the access to the access token .
create a spel expression for the given expression .
check whether the current user is overdue .
returns a {
{
initialize the login filter .
get the current session with the given key .
create a new instance of the object .
create a new instance of .
create a new object .
get the user details for the given user .
set the { @link } for the { @link } .
handles the { @link } .
/ * ( non - javadoc )
/ * ( non - javadoc )

create the web authentication controller for the current user .
writes the headers to the response .
adds a header to the output stream .
sets the default settings for the .
creates a new { @link } .
/ *
registers the filter to be used for the specified class .
registers the given filter with the given filter and filter .
filter the filter to be used for the filter .

{
get the list of authorization tokens matching the given name .
sets the authentication manager to be used when authentication is currently running .
sets the user s .
applies the {
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the page page page page .
adds the user permissions to the user .
add permissions to the user
deleting a fresh permission .
returns the default prefix prefix prefix .
/ * ( non - javadoc )
create a builder for a string .
create a builder for a { @link } .
returns a { @link } that matches the given { @link } .
creates a { @link } for the given resource .
create a builder for a resource .
creates a factory with the given name and name .
{
create default access to the given access .
get access to the access access manager .
create a instance from the security manager .
creates a new { @link } instance for the given resource .
create a new { @link } instance from the given resource .
creates a bean factory for the given user name .
creates a { @link } that identifies the pattern .
creates a { @link } that is a { @link } that is a { @link } instance .
returns the value of the specified property .
returns the first value of the attribute of the given name .
{
encodes the given string into the buffer .
decode a base64 encoded string .
/ * ( non - javadoc )
returns the parameter name for the given method name .
returns the names of the { @link } annotation for the given name .
finds the parameter name for the given parameter .
form the contact to be used with the signer .
writes the headers to the response .
sets the { @link } for the given { @link httpclient } .
adds a new value to the .
set the uri of the response .
{
adds a method to the given name .
adds a method to the given class .
add a method to the .
add a method to the
{

returns the port of the client .
/ * ( non - javadoc )
/ * ( non - javadoc )

returns a { @link } that matches the { @link } .


validates the given { @link } .
/ * ( non - javadoc )
requests that the { @link } is in the request .
/ * ( non - javadoc )
creates a { @link } with the given name and name .
/ * ( non - javadoc )
/ * ( non - javadoc )
resolve a {
/ * ( non - javadoc )
authenticate with the given jaas context .
called by the method .
{
{
called when the authentication authentication is logged .
returns a list of all the user s dns name .
sets the dn of the user - defined distinguished name .
dispatch the event to the controller .
creates a map with the given filter and returns the .
logout login logout
checks if the given uri is allowed to authenticate .
checks if the given uri is a valid uri
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
get the principal from the request .
register a .
invoke the method with the specified invocation .
get the contact s contact from the provider .
evicts from cache
process the given object .
/ * ------------------------------------------------------------
clears the authentication attributes for the given request .


/ * ( non - javadoc )
create a providedserviceinstance that is used to build the service url .
create a redirect url to the service url .
sets the attribute of the property .
add the user to the list of roles .
get the roles for the given {
/ * this method is used to split the into a single .

returns the original byte array .
add a new { @link } to the configured { @link } .
/ * ( non - javadoc )
sets the default { @link } instance .
/ * ( non - javadoc )
/ * create a new filter instance .
get the attributes of the specified class .

encode a string into a string .
returns whether the given { @link string } matches the given password . <p > this method is a convenience method that returns { @code true } if the { @code string } is a { @link } .
extracts prefix from the prefix and the prefix and prefix to the prefix .
authenticate with the authorization authentication request .
login to the user .
logout the logout request
method to get the http status code .
/ * ( non - javadoc )

checks if the path is normalized .
checks that the filter is valid for the filter parameter .
checks the login page for the login login .
registers the given { @link } with the specified { @link } .
returns the {
returns a { @code throwable } with the specified cause chain .

returns the first one that matches the passed throwable .
asserts that the given throwable is a throwable and is not null .
returns the description of the {
registers a bean for the bean definition .
sets the policy set policy .
sets the { @link } to be used for the { @link } .
sets the property of the { @link } .

/ * ( non - javadoc )
/ *
converts a { @link } to a { @link } .
checks if the given array contains the given expected value .
{
builds the form parameters for the authorization code and the authorization code and the .
sets authorization request to authenticate with the authorization request .
sets the repository to be used for the server .
handles a login request .
save the request to the request .
sets the url to be used for the default connection .
authenticate with authentication .
<! -- start generic documentation -- >
authenticate against the authentication token .
creates a new { @link } instance .
create a new user details for the given { @link } .

get the cache from the cache .
build a request url for the request .
builds a request url for the given request path
builds a request url for the request .
builds the request url url for the jawr path .
returns true if the url is absolute url .
returns the list of all the {
/ * ( non - javadoc )

{
converts a { @link func0 } into a { @link func0 } .
creates a new { @link } with the default password .
create a client builder for the oauth2 duo client .

/ * ( non - javadoc )
<p > . < / p >
<p > . < / p >
sets the default authentication entry point for the given request .
returns the { @link } that is used to access the access control policy .
returns the authentication entry point for the given point .
get the cached request cache .

create a new object with the given identity and identity .
creates a new entry with the given index .
creates a new identity object .

creates a new primary key and returns the primary key .


creates a new object .
update the current state of the .
-------------------------------------------------------------------------------------------
creates a callable that the given delegate is a static method .
sets the logout handlers .
creates a { @link } that matches the given { @link } .
returns a { @link } that matches the { @link } .
creates a { @link secretkey } with the pbkdf2 parameters .
creates a {
creates a { @link secretkey } with the given salt and password .
creates a { @link } with the given salt and password .
creates a textbox text .
<p > . < / p >
returns the evaluator for the given evaluator .
check if the given attributes are valid .
creates a socketchannel that is used to encrypt the password .
{
writes the headers to the response .
{
returns the subject for the authentication token .
/ * ( non - javadoc )
validates the given { @link } .
<p > . < / p >
<p > a new request that sends a request to the request . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java . util . collection
returns the { @link } that matches the { @link } .
returns the default access handler for the given { @link } .
returns the { @link } for the given { @link } .
/ *
handle the http servlet request .
checks if the target url is a valid target url .

sets the default url to the target url .
sets the target url to the target url .

get the principal principal from the request .
invoke the api with the given { @code } .
builds a .
returns a builder with the given { @link } instance .
{
/ *
this method is called from {
creates a new user - specific user profile .
creates a new user - specific user profile .
creates a map of all { @link } objects .
/ * ( non - javadoc )
configure the .
handles the { @link } event .
create a new instance .
resolve a service entry .
resolve the service address .
resolves the ip address from the given hostname .
resolve the service entry for the given domain name .
prepares the connection for the connection .
returns a { @link mono } of { @link } .
processes the given object and returns the result .
<p > destroy presenters . < / p >
/ * ( non - javadoc )
sets the service for the service .

returns the current date .
parse a date string value into a date format .
parse the value of a date string into a date .
this method is called when a cache key is found .
creates a { @code } with the specified arguments .
creates a { @link } for the given method name .
creates a { @link } for the given { @link string } object .
handles the authentication request .
sets the request for the given request .
<p > . < / p >

/ * ( non - javadoc )
appends a <code > / code > to a <code > / code > .
adds a { @link } to the { @link } .
create a {
create the authentication of the authentication user with the given authentication .
sets the realm .

if the user is not a { @link } it is used to authenticate with the { @link } .
stores the key store of the given store key store .
sets the authentication ticket to the user .
sets the password { @link } .
commits the current user to the current user .
initialize the subject and initialize the subject .
login to the login user .
logout the logout
creates a factory for the given resource .
create a new instance of the resource .
constructs a bean factory for the given string .
/ * ( non - javadoc )
{
find the annotation for the given class .
returns the security name for the security subject .
get the effective groups of the user .
change the password for the user .
builds the group name .
sets the attribute name .
returns the list of children of the given object .

called when the session is executed .
/ *
{
authenticate against the authentication token .
builds the form parameters for the client .
authenticate against a .
/ *
handle the session .
notifies the session manager event .
{
returns the filter chain that match the filter chain .
filter the url to the filter list
process the start tag .
returns the { @link servletcontext } that is { @link } .
create a new authentication token with the given username and password .
checks if the authentication is authorized to access the security manager .
registers the bean factory for the bean class .
close the context .
returns the relative name of the given .
get the full name of the room .
set the { @link } for the { @link } .
accept the filter with the given filter and returns the { @link } .
this method is used to set the session id to be used for the session .
<p > . < / p >



checks if the current user is a valid .
log with {
perform a http request
removes all filters from the list of filters
filter the given filter and return the result .
removes all filters from the supplied filters .
filter the specified filter and removes the result from the builder .
performs a mapper for the given object .
returns a list of arguments that are not in the argument list .
returns a new { @link uri } from the specified path .
returns a new response with the specified path .
post a post request to the specified path .
/ * ------------------------------------------------------------
put a { @link path } into the { @link javalin } instance .
performs a delete request with the given path and returns the result .
performs a delete request with the specified path and path .
head
head
patch / create the given path .
patch / create the given patch patch .


perform a request to the request body and return the response .
perform a request to a url call with the given url and return the response .
perform a request to the request body and return the response .
perform a request to a url
creates a new { @link } with the given username and password .
creates a new { @link } with the given domain name .
converts a photo to a user s username and password .
returns a uri for the given user name and password .
creates a new { @link } with the given password and password .
creates a { @link secretkey } with the given certificate revocation certificate .
creates a new certificate from the certificate and initializes the sslcontext .



resets the default path to the server .
sets the ssl - config protocol to the server .
logs the response .



stores the file path to the given file name .



/ * ( non - javadoc )
prints the response to the response .
/ * ( non - javadoc )
sets the default charset charset for the specified charset .
sets the default charset charset for the given charset .
sets the charset content type .



{





creates a new { @link } with the given config and config .
creates a new { @link } instance .
creates a new { @link } with the given config object .
creates a new instance of a { @link } .
creates a new instance .
creates a new { @link } instance .
creates a new { @link } instance with the given config .
creates a new { @link } with the given config and config .
creates a new { @link } with the given configuration and { @link } .
creates a new instance .
creates a new { @link } with the given config and config parameters .
creates a new { @link } instance .
decode a base64 encoded string .
creates a copy of the response .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )

returns a configuration property with the given name .
{

/ * ( non - javadoc )
{

/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )


/ * ( non - javadoc )
parses the response body as a response .
builds the default response body for the given request .

sets the uri of the uri .
sets the headers to be used for the headers .
set the proxy port .
this method is used to add a control to the builder .
adds the given header as a part of the given header name .
adds a header .
this method is used to parse a charset from the provided charset .

returns the default default content .
sets the .
called by the { @link } to perform the actual .

called by the user to specify the uri to be used in the server side .
provisions a { @link } with the given port .
/ * create a ssl certificate with the given key and key .
validates the oauth endpoint for the specified consumer .

returns the content type of the header of the content type .
returns the { @code } header of the header of the header .
creates a new { @link } instance with the given { @link } .
resets the authentication state .
returns a new { @link } with the specified parameters .
returns a new { @link } with the specified path and path .
creates a new { @link } with the given path and { @link path } .
creates a new { @link } with the specified path and { @link path } .
/ * ( non - javadoc )
delete a { @link path } from a { @link path } .
delete a { @link path } from the specified path .
returns a new { @link } with the specified { @link path } .
returns a new { @link } with the specified { @link path } .
creates a new { @link patch } with the given path and { @link patch } .
creates a new { @link patch } with the given path .
creates a new { @link } with the given path and { @link path } .
creates a new { @link } with the given path and { @link path } .
creates a new { @link } with the given { @code request } and { @code response } .
creates a new { @link } with the given request parameters and request parameters .
create a new { @link } instance .
creates a new { @link } with the specified parameters .
returns a {
creates a new { @link } with the given principal name and password .
creates a new { @link } with the given credentials .
starts a { @link } for the authentication scheme .
starts a new { @link } with a { @link } .
sets the flag to be used when the client is completed .
creates a new { @link } with the given path .
creates a new { @link } with the given path .
returns a {
returns a {
sets the content type .
sets the content type .
sets the value of the response header .
builds a { @link response } from the given { @link } .
returns a new {
matches a string that matches the given comment .
returns a {
returns a {
returns a new path that matches the given path .
matches a { @link } .
returns a { @link } that matches the given etag .
returns a {
matches the suggestions of the given matcher .
sets a header value to be used for the given request name .
sets a header for the given header value .
sets the value of the { @code } parameter to the specified { @code string } .
sets a cookie to be used for sending requests to the specified cookie .
sets the value of the specified cookie to the specified value .
sets the { @link } to be used for parsing .
adds a path to the root path .
appends a path to the path .
sets the body of the builder to be used for the given path .
sets the body of the builder to be used for the given path .

log a log message with a new log message .
registers a new parser .
create a {

parses the json schema from the given { @link schema } .
creates a { @link } for the given { @link schema } .
creates a new { @link } with the given { @link } and { @link } .
creates a new { @link } with the given { @link } and returns a { @link } .
returns a { @code } with the given { @code } and { @code } .
get the value of the specified entity .
get the value of the specified property .
returns the entities that the given entity exists .
returns all values of the given entity .
creates a { @link } for the given host .
creates a new { @link ssrc } preconfigured with the given username and password .
returns a {
authenticated proxy for authentication .






checks if the uri is a uri .
/ * ( non - javadoc )
logs the response with the .
returns the content type for the given headers .
create a httprequest for the given { @link uri } .
creates a new instance of .
returns a { @code mapconfig } that is a header with the specified name and value .
creates a new .
creates a new { @link } instance .
creates a new { @link } .
creates a new configparams object with the default suffix .
creates a new { @link } .
returns a new { @link } that will be used to parse the { @link charset } file .
sets a new builder for the given object .
sets the { @link } object to be used in the { @link } .
adds a new session to the session .
adds a new request to the given builder .
adds a new header value to the given header .
adds a new to the builder .
adds a new builder to the builder file .
adds a new to the builder builder .
adds a new to the builder .
sets the session id .

add a new { @link } to the server .
build log builder for a new instance of .


adds a new request to the httpclient .



get the int value from the path .
get the byte value from the path .
get short short path .
get the float value of the specified path .
get the double value of the specified path .
returns the value of the specified path or { @code null } if the value is not a primitive .
gets the value of the specified type .


get a path from the specified type .

print the text to the output stream .
/ * ( non - javadoc )

/ * ( non - javadoc )
returns a configuration property with the specified name .
/ * ( non - javadoc )
{
{

/ * ( non - javadoc )
/ * ( non - javadoc )
returns a default charset for the specified encoding .
returns a new { @link } with the given charset .
returns a {

{
{
get the value of the specified path .
{

get a path from the given object .
get the int value from the path .
returns { @code true } if the object is a boolean .
>


get the float value of the specified path .
get the double value of the specified path .

get the value of a path
converts a string representation of a path into a single object .

{

sets the body of this builder with the given mapper .
sets the body of the request to be used in the request .
add a cookie value
add a parameter to the request .
add a parameter to the list of parameters .
add a query parameter to the query .
add a query parameter to the query .
add a form form a request to the form .
add a form form a request to the form .
add a request parameter to the request path .
adds a request parameter to the request builder .
sets the password for the given path .
sets the ssl / tls password for the given path .
add a new header to the header .
adds a new file to the list of files .
adds a to the builder .
sets the session id .
<p > . < / p >
log a {
sets the host port and port .
creates a new instance .
returns a path that contains the given path .
<p > . < / p >
perform a path using the provided path .
returns a path that contains the path of the path .
builds a filter that logs the results of the response .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
converts the given protocol to a secure server .
returns a factory for ssl ssl socket factory .
gets a cookie with the specified name .
get the value of the specified cookie name .

creates a new instance of { @link } with the given name .
removes all the keys from the given { @link } .
{
{

returns a binding instance that can be used to resolve the given key and the given { @link } .
returns true if the given key is a member of the given class .
creates a { @link } for the given key .
converts a {

remove a previously registered binding .
returns all super classes that are not found .
create binding binding for the given { @link } .
create a binding for the given type .
creates a { @link } for the given { @link } .

create a binding instance for the given key and returns it .
create a { @link } for the given { @link } .
returns the parameter s parameter values for the given parameters .
creates a new context for the given context .
/ *
returns the label label of the node label .
creates a new { @link } with the given key and value .
creates a new { @link } instance for the given { @link } .

build the { @link } for the given { @link } .
build module from interface
enables injector to inject injection injector .
enables the injector to use for the given injector .
creates a new dependency dependency with the given key .
creates a new instance of { @code } .
creates a new instance of { @code cls } with the given type and constructor .
returns the {
create a new instance of the given type .
returns a {
returns a set of all methods declared in the given type and returns the result of the given type .
checks if the annotation is annotated with the annotation .
returns all { @link } s that are annotated with the given type .
checks if the given method is a public method .
returns true if the method is a static method .
initializes the { @link } .
returns a that will be called by beancontextsupport .
factory method for creating a { @link } instance .
returns a {

returns a {
returns the type parameter for the given type .
returns a {
get the value of the specified type .
resolve all { @link } s to the given type .
get the supertype of the supertype of the supertype .
returns the { @link fieldtypes } for the given field .
returns the { @link } that is assignable to the given { @code method } .
returns the {
returns the {

returns a {
returns true if the type of the type is a subtype of the given type .
returns a {
returns the class of the given type .
collects all instances for the given injector .
defines the soytype for the given class .

static method that creates a new instance of the given class .

checks if the given class is a valid class .
checks if the given member is a member of the given member .
creates a { @link } for the given key and type .
<p > returns the value of the { @code } parameter of the { @code } . < / p >
returns the annotation type for the given key .
returns the annotation annotation for the given annotation .
creates a instance from the given injection point .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new instance of the given class .
collects all { @link } instances of { @link } s .
/ * ------------------------------------------------------------
resolves a relation id .
/ * ( non - javadoc )
creates a scope for the given key and the given { @code } .
returns the {

decode a string to be a binary .
check if the binding is a diamond type .
generate a annotation for the given annotation type .
returns true if the given type is a primitive .
returns the number of code for a given type .
returns a string representation of the given type .
returns whether the given annotation is a valid annotation .
finds the annotation annotation for the given annotation .
finds the annotation annotation for the given annotation .
checks that the given type is declared in the given class and its supertypes .
returns the key for the given { @link annotation } annotation .
find the annotation annotation for the given annotation .
returns a { @code } instance for the given annotation .
returns the {
returns a {
initializes the delegate builder .
returns the provider that is used to retrieve the provider s dependencies .
returns the member type for the given member .
creates a new map with the given key and value .
creates a new mapentry - map for the given type .
creates a new mapentry - map that maps all of the rules into the specified { @link map } .
add a binding to the binder .
returns the {
returns true if the annotationclass is annotated with annotationclass
creates a new { @link map } with the specified { @code key } and { @code value } .
resolve the {
returns a {
creates a new instance of { @link } with the given value .
returns the key for the given key .
method that converts the given { @link } to a { @link } .

adds a source to the list of source objects .
/ * ( non - javadoc )
creates a new instance of the { @link } instance .
creates a { @link } for the given annotation type .

writes the given js message to the given object .
creates a {
{
checks if the given type is a valid { @link } .
finds the annotated constructors of the given method .
checks if the given parameters are annotated with the given { @code type } .
returns the dependencies for the given class .
removes all dependencies from the given { @link } .
checks if the given {
returns true if the given { @link } is not a { @link } .
initializes the instance .
<p > . < / p >
{
returns true if the given method is a reflective invocation .
checks that the given reference is null and is not null .
checks that the given string is a valid format .


formats the message with the specified message message .
converts a object to a dto object .
creates a new { @link } instance from the given { @link } .
returns the key for the given {
finds the next filter in the chain .
returns true if the given class is annotated with a given class .
returns the constructor of the injection binding if it is not null .
returns the dependencies for the given class .
/ * ( non - javadoc )
{
returns all methods in the class s class - private method .
returns the value of the {
returns the system option value for the given name .
/ * ( non - javadoc )
creates a parameterized type with the parameterized type .
creates a parameterized type with the given type .
creates a map from the type of { @link } .
returns a {
creates a { @link } for the given module .
returns the annotation with the given annotation .
bind all properties to the given binder .
binds the properties to a bean .
creates a { @link injector } for the given injector .
creates a injector injecting the module from the given module .
returns the list of all available folders in the given list of the current position in the list .
get the stack trace of the given stack trace .
returns the number of the members of this member .
initializes the .
creates a callable with the given { @code key } and { @code key } .
<p > returns a { @link callable } that is used to close the request . < / p > <p > the callable will be returned by the { @code callable } method that the caller is responsible for invoking the callable . < / p > <p > the callable will be returned in a { @link callable } that is
creates a { @link callable } with the given { @link callable } and { @link callable } .

returns a { @link methoddescription } that matches the given { @code key } .
creates a {
returns a list of { @link } objects that are annotated with the given { @link } .
set the { @link } to be used for the { @code } .
returns a {



get the value of the specified type .
get a {



returns a new instance of { @code } .
returns a new instance of { @code } .
returns a { @link } for the given annotation .
returns the { @link } for the given { @link } .
gets all elements from the list of modules .
gets all elements from the list of modules .
returns a list of elements that are not contained in the given module .
remove all the classes from the given stack .
gets the { @link } for the given { @link } .
creates a new { @link } for the given { @link } .
returns the source string for the given class .
returns the for the given .
returns a {
creates a new .
formats the message with the specified message message .
converts a message into a string .
creates a message with the specified message format .
creates a message with the specified message message .
creates a {
converts the given object to a { @link func0 } object .
returns a {
returns a list of module names for the current class .
get the stack trace of the given class .

checks if the given class name is a class name .
returns a list of strings that are not supported in the class name .
returns the value of the given stack trace .
get the list of module classes from the module .
<p > . < / p >
sets the server to the server .
main method .
converts a {
converts a {

pushes a state to the state .
<pre > the dependency graph and the dependency graph . < / pre >
creates a new instance of { @link } .
perform the servlet request .
/ * ( non - javadoc )
log a connection to the remote sender .
add a connection event .

throws an illegalstateexception if the exception is thrown .
register a processor with the given processor .
registers the default { @link processor } .
/ * ( non - javadoc )
returns the url of the { @code url } object that is { @code null } if the specified { @code url } is a { @link } .
decode the given protocol code chunk into the protocol buffer .
/ * ( non - javadoc )
{
/ * ( non - javadoc )

/ * ( non - javadoc )
get the connection pool .
remove the task from the pool .
/ * ( non - javadoc )
creates a new { @link } .
initialize the executor .
shutdown the .
<p > . < / p >
{
{
invoke the specified method with the specified value .
invoke the specified method with the specified parameters .
invoke the specified callback from the specified url .
invokes the specified callback with the specified parameters .
synchronously invoke the specified connection .
invoke the specified connection synchronously .
sends a request to the client .
invokes the callback method on the specified callback .
invoke the specified callback .
invoke the specified callback .
create a new { @link } .
creates a new { @link connection } with the given connect to the specified port .

get the connection from the connection .
checks if the connection is a valid connection .
closes the connection .

enables the specified to the specified server .
disable the connection .
disable the connection to the specified service .
initializes the .
handle the response .
closes the connection .
sets the value of the specified key .
{
/ * ( non - javadoc )
register a user - specific processor .
register a user - specific processor .
sends the response to the client .
/ * ( non - javadoc )
returns true if the given request is a valid command .

logs a log message to the specified log .

{
synchronously sends a request to the client .
invoke the method with the given callback and executor .
handle a connection to the remote server .
create a protocol to be used in the background .
creates a new .
converts a bitset to a byte array .
convert a long value to a bitset .

adds a new task to the queue .
stops the {

{
invoke the specified method with the specified request and value .
invoke the specified command with the given timeout and the given timeout .
sends a request to the remote server .
invoke the specified callback .
invoke the specified command with the given { @link } and returns the result .

{
{
{
handle the { @link } .
process the command .
returns whether a property is not a system property .
deserializes the given mask to the given byte array .
returns the serializer for the given class .
sets the connection event listener .
log a log message .


get the random unused random { @link } .
returns the serializer for the given class .
gets the value of the key .
returns the value of the specified key or null if the key is not found .
get the property value .
returns the specified compressed data .
/ * ( non - javadoc )
encode a response to a http response object .
converts a { @link throwable } into a { @link } .
converts a string to a { @link } .
creates a server exception with the given exception .
logs the specified log message to the given logger .
creates a new { @link } with the given { @link eventloopgroup } .
enables the server mode for the { @link } .
starts the scan .
returns the address of the given channel .
returns the local address of the given channel .
returns the remote address of the passed { @link } .
returns the remote host name .
returns the address of the given channel .
returns the port of the tcp channel .
returns the port of the port .
returns the socket address for the given socket address .

parses the string representation of a string .
add a connection to the connection .
removes a connection from the given connection .
get the connection from database .
register a custom serializer for the given class name .
returns the custom serializer for the given class name .
registers a custom serializer for the given serializer .
returns the custom serializer for the given {
starts the periodic executor .
{
<p > . < / p >
executes a request that can be used to retrieve a resource from the specified url .
executes the specified callback .
<p > invoke a procedure that can be used to terminate the specified request . < / p >
invoke the specified request with the given request and response .
executes a { @link } with the given { @code url } and { @code } .
invokes the provided { @link } with the given { @code } and { @code } .
{
invoke the specified callback .
returns true if the given remote address is a remote service .
returns true if the given url is a remote connection .

checks if the given byte buffer is a binary buffer .
returns the { @link } for the given opcode .

sets the payload of the message to the remote screen .
validate the payload of the payload .
updates the payload .
returns a protocol that validates the given protocol .

check limit length
checks if the size of the packet is a positive frame .
generates a key - value pair from the given key and the signature .
process the frame of a frame .
process the binary socket .
log a .
process the text .
process a frame .

process the given websocket frame .
check that the buffer size is not empty
get the payload from the buffer .
returns the size of the buffer size .
/ * ( non - javadoc )
allocates a bytebuffer of the specified buffer .
reads the buffer s buffer and return the buffer .




closes the connection .
closes the connection .
generates the http response .
closes the connection .
{
{
write the list of bytes to the list .
reset the connection to the specified socket .
connect to the server .
waits until the timeout is reached .
returns the port port of the request .
sends the request to the client .
{
{
sets the connection timeout for a connection .
stops the connection manager .
called when the connection is stopped .
starts the connection to the given connection .
execute the connection .
cancels the connection to cancel the cancel operation .
main method .
{
{
main method .
process the client .
unwraps a pooled exception .
reads the next chunk of the specified buffer .
reads the buffer from the buffer .
stops the socket .
get the port for the port .
this method is called by the thread .
reads the next buffer and writes it to the underlying stream .
called when the channel is completed .
read the specified resource and write it into the stream .
called when a is received .

checks if the current thread is a new thread .
shuts down the server .
remove a connection from the connection
returns the { @link } for the given socket .
{
broadcasts the specified { @link } to the specified { @link } .

fills the data from the specified data source .
transfers data from source to dest .
main method .
starts the database .
returns the { @link entitymanager } that is used to read the { @link } instance .
/ * ( non - javadoc )


/ * ( non - javadoc )
deprecated : use a transaction
called when a transaction is received .
deprecated . use instead of . () . () . () .
converts a {
returns a list of {
returns the value of the specified key or null if the specified key is not found .
returns the value of the specified key in the given { @link } .
check if the given key exists in the given key .
the preferred preferred way of the provided { @link } for the given { @link } .
returns the preferred locale for the specified resource .
sets the content of the message .
configures the { @link } instance with the given config .
configures the configuration with the configuration properties of the configuration .
configures a { @link } with the specified key .
create a new { @link } instance .
{
creates a bindings with the specified bindings .
{
{
returns a binding that renames the given bindings .
disable the given { @link } .
call the call to {
calls the current call with the current thread .
returns a file that is located in a file .
returns a binding object that can be used to determine the binding annotation .
lift a tuple to a tuple
static factory method for wrapping a value of type <code > b< / code > .
returns a {
decodes a header - encoded cookie header .
returns a copy of this source class that implements the specified class .
returns a list of strings that are not supported in the class .
/ * ( non - javadoc )
creates a new instance of { @link } .
creates a new instance .
constructs a new instance of { @link } with the given mapping .
construct a { @link } from the given { @link string } .
constructs a { @link } for the given { @link } .
create a new instance of { @link } .
create a new instance of the given class .
log a message with the given message .
log a message with the given trace level .
log a throwable with the specified message .
log a debug message with the given message .
convenience method to log a message with the given debug message .
log a throwable with a debug stacktrace .
issue a formatted message with the specified message .
deprecated . please : { @code logger . info . info ( string int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int
issue a formatted message with a throwable .
issue a formatted message with the given message .
issue a formatted message with the given message supplier and throwable .
issue a throwable with a { @link throwable } .
error等级日志<br >
error等级日志<br >
error等级日志<br >

creates a new instance of { @link } .
show the specified suggestion .
the video is used to send a video to the video .
returns the method with the given name .

<p > returns the method name of the method that is declared in the method { @link } . < / p >
{
/ * ( non - javadoc )
returns a new completionstage that is a valid { @link } .
/ * ( non - javadoc )
{
log the server error message .
print a throwable exception .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a { @link } that is a { @link } .
creates a { @link } for the given { @link } .
creates a { @link } for the given { @link file } .
creates a { @link } for the given { @link file } .
creates a { @link } for the given { @link } .
method to build the marker for the request .
sends a request to the server .
/ * ( non - javadoc )
{
creates a { @link } with the given content .
returns a {
{
{
creates a {
creates a {
parses the status of the status { @link status } .
parses the content of { @link } .
creates a status code from the given filestatus .
parses the content of { @link status } and returns the status of the content stream .
parses the file content and returns the status of the file .
parses the file content of the file and returns the status file .
parses the content of the file and returns the content of the file .
parses the file status of the given status and returns the status code .
creates a { @code content } from the given { @code status } .
parses the file content of the file and returns the status file .
creates a new { @link contenttype } with the content of the content .
creates a {
starts the content of the given { @link file } .
starts a content file with the given file content .
creates a content file from the content of the { @link file } .
starts the content of the given { @link path } .
starts a file with the given path and content .
creates a new { @link } with the given content .
deserializes a json content of the given { @code content } .
creates a new { @link } .
creates a new { @link } .
creates a { @link } with the given { @link path } .
creates a new { @link } .
creates a new { @link } with the given path and path .
creates a new { @link imodel } for the given content .
helper method to parse a request content as a json object .
creates a { @link } from the given { @link file } .
creates a { @link } with the given { @link imageformat } .
creates a new { @link } with the given { @code content } and { @link } .
creates a { @link } with the given { @link } and { @link } .
creates a new { @link } with the given path and { @code path } .
consumes the content of the { @link content } .
deserializes a json content of the content of the given { @code content } .
creates a new { @link } with the given content type and content type .
validates that the content of the given content is a valid content .
validates that the content of the given file is a content - file type .
creates a { @link } with the given { @link path } .
validates that the content of the given file is a valid file path .
returns a {
returns the {
returns a { @link } that is the content of the { @link } .
returns a payment - specific { @link file } .
creates a payment - specific file and returns the result as a { @link } .
returns a payment - result of { @link } .
creates a new { @link } with the given path and url .
creates a { @link } with the given content .
deserializes a json content of the given { @code content } .
returns a { @link } that is a { @link } .
creates a new { @link } .
creates a new { @link } with the given file content and content .
returns a { @link } that is a { @link } .
creates a new { @link } with the given path and path .
returns the content of the { @link } .
deserializes a json content of the given { @code content } .
checks if the given content is a file in the given { @link file } .
validates that the given file is a file and ending with the given file .
checks if the given { @code content } is a { @link file } .
validates that the given file is a valid file path .
validates that the file content is valid and is not a valid file path .
<p > . < / p >
validates that the content of the given json content is valid .
returns a new { @link } with the given content type and content type .
checks if the given content is a valid content - length file .
validates that the given file is a valid file .
checks if the given { @link path } is a { @link } .
validates that the given file is a valid file path .
returns a {
returns the {
returns a { @link mediatype } with the given mime type .
creates a { @link } from a { @link file } .
creates a {
returns a { @link } for the given { @link mediatype } .
creates a { @link } with the given filename and content type .
returns the content of the content of the given content .
/ *
performs the content of the file with the given content and content type .
performs a content validation of the given { @link } .
performs a content of the given file and returns the result .
performs a content validation of the given { @link path } .
performs a trailing separator .
validates the given content .
validates that the content of the passed in etag in the given { @link } is not { @code chunked } .
validates that the content of a file and the content of the given file and the content length file .
validates that the file s content is valid .
validates that the file content is valid .
validates that the content of the given { @link file } is a file .
validates that the file s content is valid .

parses the request header and returns the request header .
validates the response headers and content content .
validates the response headers .
validates that the content of the given content is valid .
validates the response headers and content content .
validates that the file s content is valid for the given file and returns the result .

parses the given { @link } and return the result as a { @link } .
validates the status of the { @link } .
creates a { @link } with the given { @link } .
creates a new { @link } with the given { @code string } .
creates a { @link } with the given { @link } .
creates a new { @link } with the given { @code path } .
returns the authentication information for the given content .
parses the given { @link string } as a { @link string } .
creates a new { @link } with the given content .
creates a new { @link } with the given { @link } .
creates a new { @link } with the given file name .
creates a { @link } with the given { @link } .
creates a new { @link } with the given path .
/ * ( non - javadoc )
returns a result of the result of the () method .
creates a { @link } instance for a url
returns a {
creates a new result with the given url and url .
creates a new result with the given url and url .
returns a redirect to the given uri .
returns a redirected url to be redirected to a url .
returns a redirect to the given { @link } .
returns a redirect to a url .
returns a result of the result of the given { @link } .
{
find the user with the given id .
creates a new for the given fname .
index of the

returns the http request uri .
returns the {
returns a h2gis - { @code } with the given { @code connection } .
create a { @link } instance .
show the page content with the specified page .
creates a new proxy with the given scheme .
returns a server server for the given { @link } .
creates a router from the given port .
<p > . < / p >
converts json data to a jsonnode with json .
constructs a { @link jsonnode } from a json object .
parses a { @link jsonnode } from a { @link jsonnode } .
parses a json input stream into a jsonnode .
{
creates a new { @link } with the given parameters .
creates a new { @link } with the given name and name .
creates a new { @link } with the specified name and the specified name .
returns a {
gets the annotations of the given container .
/ * ------------------------------------------------------------

the name of the user to use .

given a list of constraints and a list of a map of constraint types to be a list of

returns a new transaction completed completed completed transaction completed completed completed transaction .
awaits the transaction state of the transaction .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
<p > checks if the given class is assignable to the specified class . < / p >

returns a cron expression with the given cron - date and time .
create a new { @link } .
create a new ddp
create a new {
creates a from the application context .
returns the { @link } for the { @link } .
@deprecated use { @link ( string ) } instead .
sets a value to be used in the { @link } .
the method that is called by the user to specify the given { @link } .
create a { @link binding } instance that can be used to create a { @link binding } with the given binding name .
returns a binding key for the given annotation .
converts the specified {
converts the provider to a { @link provider } .
returns a new instance of the { @link supplier } that is the specified type .
<p > returns the value of the { @link binding } for the specified key . < / p >
converts the provider provider to a provider .
create a { @link } instance from { @link } instance .
returns a string representation of the textbox .
returns the list of all eureka app applications for the app framework .
creates a new { @link } for the given { @link } .
create a from the given class loader .
create a from the given { @link classloader } .
construct a from the
get the default for the given .
apply the database to the database .
apply the schema to the database .
called by to close the database engine .
binds the given { @link environment } to the given { @link environment } .
create a new { @link } for the given { @link } .
load a new module module from the given module .
load a new instance of the specified module .
load a new module from the specified module .
load a binding from the given { @link } .
creates a new builder for the given {
encode a cookie into a string .
encode a cookie into a string .
encode the specified cookie into the specified cookie .
returns the {
returns a new { @link entitymanager } that can be used to create a new { @link entitymanager } .
switch to the given {
converts a json object to a json object literal .
authorizes the result of the request to perform a cors preflight request .
parse the given xml parser .
create a flow from a flow .
create a flow with the given flow and flow .
returns a {
@deprecated use { @link ( string ) } instead .
returns a new { @link bind } with the specified { @link request } .
@deprecated use { @link ( string ) } instead .
returns a { @link } for the specified request .
@deprecated use { @link ( string ) } instead .
{
> { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link } { @link }
binds the specified data to the specified value .
{
/ * ( non - javadoc )
converts the given arguments to the given list of { @link } s .
returns a new value with the specified value .

returns a json representation of the message .
returns the value of the specified element .
returns a field with the given key .
returns a new {

returns the value of the specified key or null if no such key exists .

{
fills the form with the specified value .
returns the key for the given key .
parses an input text .
parses the specified text field .
prints a string to a string .
prints the fields in the given field .


registers a new formatter with the specified class .
<p > . < / p >
encode a cookie into a cookie .
encode a cookie into a list of cookies .
encode a cookie into a list of cookies .
encode a cookie into a list of cookies .
/ * ( non - javadoc )
returns a stream of the request body content .
returns a stream for the given content stream .
returns a {
returns the { @link } for the given { @link path } .
returns a path from the path to the path .
creates a path from the given path .
returns a file with the given file name .
creates a file from the given file and returns the result .
creates a file from the given file and returns the result .
returns a source for the given source file and the content of the source file .
returns a { @link } for the given source and source file .

converts a list of { @link } into a list of objects .
converts a sparsearray into a single object .
<p > converts a list of objects into a { @link } . < / p >
creates a new { @link } instance .
returns a websocket connection to the given callback .
returns true if the given member is a synthetic field .
checks if the given object is a member of the given object .
returns the number of suppressed code for the given { @code args } .
compare the method for the given operator .
compare the number of types and returns the best result .
get the number of times that the class is in the target class .
returns the total number of the cost of the given class .
returns the sum of the specified class .
returns a new instance that is available for the given message id .
returns the localized message at the given key .
returns the localized message for the given key .
creates a new database - based url with the specified parameters .
creates a new database - friendly url with the specified name and url .
creates a new database - based url with the specified parameters .
creates a new database - based { @link java . io . url } for the given { @link url } .
returns a new database - friendly url with the given name and url .
returns a new database with the given name and name .
returns the database - memory of the given name .
returns the database - side state of the specified storage database .
returns a database - formed file .
creates a new instance of the bean .
returns a set of entries that have the same key as the key .
creates a new { @code } instance .
sort the specified index at the given index .
merges the specified range of the specified index into the specified array .
emits a new index .
performs the given .
create a new instance of the specified object .
create a new instance of the class with the specified class .
create a bean instance using the specified class .

create a proxy that is used to create a proxy that is used to create a proxy that is used to create a proxy that is used to create a proxy that is used to create a proxy that is used to create a proxy that is used to create a proxy that is used to create a proxy that is used to
finds the proxy of a method signature .
invoke the given object using the given object and returns the result .
invoke the given object with the given object and return the result .
fold a numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric numeric
load the specified index at the specified index .
load the given number of arguments .
emits a field declaration .
asserts that the given type is a nominal type .

creates the initial index .

> > > { @code > }
/ * ( non - javadoc )
asserts that the given { @code clazz } is a { @code } .


resolves all the given class .
sets the .
sets the value of the callbacks to the specified callback .
sets the type of the .
creates a new instance of the specified class .

filter the specified filter and returns the appropriate { @link } .
checks if the given class is a valid .
create a new instance of the specified type .
create a new instance of the specified type .
create a new instance of the class from the given class .
creates a new instance of the specified interceptor that implements the specified interceptor .
sets the value of the class to the superclass .
get the field value of the specified field .
add a method to the method .
adds the methods of the method to the method .
returns the cardinality of the given matrix .
sets the value of the property .
sets the strategy strategy generator .
creates a new entry if it is not already present .
finds all methods in the given array of methods .
resolves the path to the path .
read a string from the stream .
sets the host name .
set the destination to be used for the remote host .
creates a new { @link } with the given { @link } .
creates a new {

creates a new { @link } with the given { @code destination } .
creates a new { @link httpclient } with the specified name and destination .
creates a new { @link } with the given name .
delete a { @link } for the given destination .
create a head request for the given destination .
converts a { @link string } to a { @link string } .
creates a {

sets the cookies to the cookie value .
add a single request to the query .





returns the url of the url to the url .

sets the host header .
open the connection to the client .
open the connection .
sets the { @link } to use for the { @link } .
sends the given response to the response .
{
sends the given request to the response .
creates a session for the session .
sets the properties of this object .
sets the value of the specified attribute to the specified value .
adds a new error message .
remove a range from the end of the end .
returns the number of available { @link } .
puts a new into the output buffer .
collects all interceptor interceptors for the given interceptor .
collect the given filters .
collects all the actions of the action .
collects all actions .
resolves a property in the given properties .
{
sets the value of the property in the { @link } .
checks if the property is a property of the given property .
get the property index .
sets the property index .
{
/ * ( non - javadoc )
{
{
{
returns a writer for the writer .
reset the column s parameters .
sets the reference reference to the object .
get the reference object for the given name .

gets the descriptor for the given table .
find the table descriptor for the given column name .
returns the alias for the given table .
registers a table reference .
adds a parameter to the entity .

/ * ( non - javadoc )
<p > . < / p >
registers the hint for the hint .
{
{
/ * ------------------------------------------------------------
configures the request to perform the substitution .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
convert a property name to a java name .
convert a string to a property name .

convert a value to a list of booleans .
insert a value to the database .
/ * ( non - javadoc )
returns all the objects that are not currently set .
resolves the given class and returns it as a string .
returns the first matching class for the given class .


concats a path to the specified path .

find the last index of the first - part of the file .
returns the path for the filename in the given path .

resolves the home path and returns the default home path .

visit the given object .
registers a component .
registers a component .
set the {
sets the component to be used for the given component .
start the component .
configures the default {
register the class .
scans the given packages for the given resource .
scans the classpath for classes that are in the classpath .
filters the result of the map .
returns the excluded entries for the given {
checks if the jar file is a jar file .
scan jar file .
scans the classpath and finds the class path .

scan the classpath entry for the given class path .

scans the classpath for urls that match the classpath .
scans the classpath for the paths .
start the scan .
returns the character set for the given string .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a default implementation of { @link } .

register a new { @link } .
parse message message
processes multipart / form - content - disposition attachment .
process the multipart request .
adds a content - type header .
parses a content id from the given xml content .
parse the given xml part into a string .
adds a attachment to the document .
adds a attachment to the emailmessage .
adds a attachment to the rpm attachment .
encode a char array into a byte array .
decodes the given byte array into a byte array .
encodes a byte array into a byte array .
encode a string to a string .


checks if the request is valid .
checks if the session is valid .
creates a new instance of .
creates a copy of the source object with the specified source object .
{
{
{
{
resolve scope to scope .
creates a new instance of the given type .
registers scope of a scope .
returns the bean definition for the given name .
looks up the bean definition for the bean .
resolves the bean definition for the bean .
creates a beandefinition bean definition for the given type .
creates a beandefinition for the given type .
registers a bean factory .
register a bean factory that is used to register the consumer .
register a bean factory .
register a bean definition for the bean .
remove all bean names from the bean .
removes the bean from the set .
resolves the name of the bean .
register a for the given bean .
register a property binding to the given property .
register a property definition .
register a jsinterop injection injection point from the given bean name .
register a for the given method .
register a vetoablechangelistener to the .
registers a provider for a provider with a given name .
registers a provider for a provider .
<p > . < / p >

define a list of parameters .
set the parameters .
returns the value of the current thread .
set the value of the { @link } .
returns an unmodifiable view of the specified resultset .
{
returns the value of a jdbc resultset .
{
{
prints the information of the request to the given request .
print the message to the given request .
resolves the java version version .

check that the given method is null .
returns the field name for the given name .
returns a method name with the given name .
loads the method argument .
initialize the method with the given arguments .
load the method arguments on the given method .
method called by the method to invoke the method on the method .

adds a method signature to the opcode stack .
checks if the given opcode is a valid opcode

prepare the opcode .
create a procedure that creates a new method name .

create a new array with the instructions of the given array .

checks if the method name is a valid method name .
{
resolves the { @link } instance for the given action .
extracts the mime type from the content of the content of the given mime type .


resolves the given path to the file name .
check if the flags of the given flags are not valid .
converts a value into a value array .

resolves the authorization header to the authorization header .
resolves the authorization token from the authorization header .
handles the authentication response .
downloads the content of the file to the specified file .

gets the set of cookies for the given cookie name .
read a request body from the given request .
read a request body from the request stream .
get the path path for the request .
get the path path for the jawr servlet .
stores the current context path .
stores a variable path in a servletcontext .
/ * ------------------------------------------------------------
returns the value of the <code > value< / code > value .

sets the value of the specified scope .
removes scope with given name and scope .
returns true if the url is absolute .
strip the jsessionid id from the url and the url of the url .
get the request parameter for the request .

prepares the parameters for the specified parameters .
checks if the given request is a json object .
copies the parameters to a new {
expect the body of the body of the body of the body of the body .
renders a { @link } .
render the body as a string .
sets the value of the specified scope .
removes the given pagecontext .
initializes the methods of the { @link } .
destroy the remote pyro proxy method .
create a new instance of the bean .
inject parameters into the specified bean .
/ * ------------------------------------------------------------
{
{
adds a header to the list .
{
{
add a new value to the map .
puts a base property value into the property value .
returns the number of keys that the given profile is in the profile .
put a profile property .
get the profile property from the profile .
find the profile value of the {
resolve a {
extracts the mapping from the specified target map .




copy all bytes from the output stream to the output stream .
copies the specified output stream to the specified output stream .
builds the action definition for the given action .
parses the action and returns the result .
resolve the { @link } annotation .

returns the {
returns the { @link } for the given { @link } .
resolves the package path of the given class path .


returns the method name for the given annotation .
returns the http method for the given method .
execute a method with the given filters and returns the result .
returns a resultset object that can be used to get the value of a resultset object .
{
/ * ( non - javadoc )
converts the supplied value to a boolean value .
converts the specified value to boolean .
returns the boolean value of the boolean value .
converts the value to the specified value .
converts an integer value to a integer value .
returns the value of the specified value in the specified value if the value is null .

converts a value to a long value .
returns the value of the specified value if the value is not null or is not null .
converts the value of { @link object } to a { @link float } .
converts the value to a float .
returns the value of the value in the specified value if the value is null or the default value is returned .
convert the value to the value
converts the value to a double value .
returns the value of the value in the value if the value is null or the value is not null .

converts the given value to a short .
returns the value of the given value as a short value .
convert a value to a character value .
returns the value of the specified value in the specified value .
returns the value of the specified value if the value is null or if the value is null or empty . if the value is null then the default value is returned .
converts the value to a byte .
converts the value to a byte .
converts the value to a byte value .
returns the value of the { @link object } represented by this { @link object } as a long array .
converts the given value to a string array .
converts the given value to a class .
converts the value to a biginteger .
returns the value of the specified value in the specified object . if the value is null the default value is returned .

returns the value of the specified value .
{
configures the current thread .
registers a .

inject a proxy to the target class .
visits a visitor that will be used to determine the annotations of the annotation .
resolves the name of the given { @link } .
resolves the name of the first - qualified name in the name of the first argument in the name of the first argument .


finds the type of the specified type .
resolves the value of the given type name into the { @link } .
resolves the name of the { @link } to resolve the specified type .
scan the annotations of the given class and return the class for the given type .
returns true if the extension file is a file .
{
copies all methods in the given class and returns the original code of the given class .
sets the major version of the major version .
puts a new into the pool .
puts the methods on the
put the entry in the entries of the specified entry .
adds a entry entry .
add a new { @code } to the { @code name } .
add a symbol to the given name
returns the reference to the given element name and name .
adds a new constant name to the element with the given name and value .
add a constant value to the given symbol .
adds a constant value to the given value .
add a long value to the constant pool .
adds a long value to the given value .
adds a constant name to the constant pool .
adds a constant name to the constant pool name .
returns a constant value for this constant pool .
adds a value to the given string .
add a method to the given name .
adds a constant method to the constant pool name .
add a method to the class .
add a dynamic constant .
add a dynamic class for a dynamic constant .
add a dynamic rule to the dynamic model .
add a symbol to the collection of constant .
adds a constant value to the given value .
add a method to the list of methods .
add a method to the given code point .
adds a type to the table .
adds a new entry to the table .
convert a value to a single value .
returns the hash code for the given name .
compare two dbids .
clears the map of values .
sets the map of map entries .
removes the specified {
returns the value of the named entry .
returns the entry with the given name .
returns all the values of the given name .
{
returns a list of all entries in this map .
increases the capacity of the buffer .
{ @inheritdoc }
append the buffer to the buffer .
{
visit a visitor that visit the method visitor .
/ * ( non - javadoc )

create a new chain with the given method and the given method .
create a proxy method for the given method .

pushes a charsequence to the buffer .
register a { @link } .
create the for the .
configures the servlet context .
returns the integer value of the given int .
returns the boolean value of the given index .
returns the value at the specified index .
returns the value at the given index .
returns the float value of the given int
returns the string at the given index .
returns the index of the given index in the given index .
{

returns the field descriptors for the field .
returns a resultset object that can be used to retrieve the resultset object .
{
{
convert a { @link } to a { @link } .
{
{
{
if the property is not a property a property is a property of a property .
reads a property from the given property .
check if the given object contains a element .
sends a { @link } to the { @link } .
sends the message to the client .
append a buffer to the buffer .
rehashes the specified memory key to the specified capacity .
puts a mapping from the map to the specified value .
/ * ( non - javadoc )
clears the specified number of entries .
append a buffer to the buffer .
returns a new array with the specified length and length of the specified length .
append a string to the buffer .
append a new buffer to the end of this buffer .
appends the specified buffer to the buffer .
writes a byte to the underlying stream .
writes a byte to a stream .
writes the given { @code } to the { @code } .
encode a charsequence as a text string .
get the string value from the bundle .
returns the integer value of the specified key or null if the key is not found .
get the long value as a long .
returns the double value for the specified key .
gets the value of the specified key .
returns a json object that represents the value of the specified key .
returns a new array with the specified key .
returns the binary representation of the decoded key .
gets the value of the value with the key .
retrieve the value of a key from the given key .
returns the integer value associated with the specified key or null if the key is not found .
get the long value associated with a key .
get the double value .
get the float value of the given key .
get the boolean value associated with the given key .
returns the json object that is a json object .
returns the json array as a json array .
get the binary data for a given key .
get the value of the value associated with the specified key .
adds a { @link key } to the { @link jsonobject } .
adds a value to the map .
adds a { @link key } to the { @link hashmap } .
adds a key to the map .
puts a value into the map .
returns all the files in the folder .

returns the folder name from the folder .
returns the { @link } for the specified { @link } .
/ * ( non - javadoc )
sends a request to the server .
sends a message to the list of messages .
updates the flags with the specified email address .
closes the folder .
returns the parameter for the given name or null if no such parameter exists .

parse sql statement .


check if the current user has been selected .
adds a violation to the map .


download the data from the file and returns the result .
sets the target target object to the target target .
sets the target type .
set the target class for the target class .
returns the suffix suffix of the class name .
process the .
create the bytes for the target class .

<p > newinstance . < / p >

creates a new person with the specified name .
converts the given address to the specified address .
adds a new joiner to the list .
converts the reply to reply .
converts an { @link object } to a { @link } .
converts the value to the reply .
sets the { @code address } to the specified address .
sets the name of the cc to the specified address .
sets the { @link } .
sets the subject to the subject .
expect a message in the message .
sets the text of a text message .
sets the html code for the given html code .
设置一个header<br >
sets the value of the response headers .
sets the value of the header in the header .
adds a list of { @link } s to the list of attachments .
adds a list of attachments to the list .
sets the attachment of the specified { @link datasource } .
sets the attachment to be used for the specified attachment .
sets the attachment of the attachment .
returns the value of the address that is an address .

returns the boolean value of the given property as a boolean .
returns the value of the specified name or if the value is not a string or a string value .
returns the default value for the given name .
parses the given string .
parses the given string .
appends the specified element to the end of this element .
appends the specified array of <code > len< / code > array to the specified buffer starting at offset <code > offset + 0< / code > .
append a buffer to the buffer .
checks if the given type is a valid type .
get the parameters for the parameter .
serialize a json object to a json object .
returns the alias for the alias .
resolves the alias to the right - level .
resolves the path to the given path .
resolves a path value .

<p > . < / p >
returns the index of the first character of the specified string .

returns the name of the string .
encode a string into a string


resolves the schema name and schema of the given type .
returns true if the given annotatedtype is annotated with the given type .
resolves the type of column column for the given column .
resolves the given type and returns the resolved type .

initializes the .
write a plaintext value to a byte array .
转移状态
write a number of bytes into the buffer .
shift the given depth and j .
/ *
initializes the cipher key .
{
converts a byte array into a long array .
parses the specified numeric digits .
/ * ( non - javadoc )
{
parse the given string to represent a valid email address .
converts a given address to a textual address .
returns the address of the email address or null if emailaddress is not a valid address .


returns the first comment of the text .
<p > . < / p >
creates a new target object that is used to visualize the target class .
returns the path of the path .



zip together the zip file and zip file .
returns a list of all the files in the zip file .
unzips a zip file into a directory .
writes a file to the output stream .
writes a zip file to the zip file .
returns the field descriptor field descriptor .
get methoddescriptor of a methoddescriptor .
returns the propertydescriptor for the given name .
returns the default descriptor for the given { @link } .
returns the descriptor for the given class .

sets the locale locale .
returns the { @link locale } for the given { @link httpsession } .
/ * ( non - javadoc )
<p > . < / p >
visit a map .
returns the number of elements in the given name .
puts the annotations at the given index .
returns the best - matching parameter for the given name .
puts a parameter into the .
add a profile to the server .
little - endian byte array as a byte array .
create a hash of a byte array .
reads the stream from the given stream and returns the output stream .
returns the names of the specified class .
/ * ( non - javadoc )
reads the attributes of the given class .
reads the field from the given class visitor .
read the read method from the given class .
reads the code at the given code code and the method .
reads the label of the given {
creates a label for the label label .
returns the label for the given label .
reads the annotations of the given type and returns the type of the method .
returns the number of cast to the given annotation type .
reads the raw annotation for the given type .
reads the annotations of the given method and returns the .
reads the value of the given element and returns the value .
reads the value of the element at the given index and returns the value of the element .
given the method of the method the method to resolve the method signature in the given context .
read the stack frame and reads the next frame into the buffer .
reads the code at the given code point .
returns the first index of the first column of the current offset and the offset of the current offset .
read the method attributes of the given .
read a single attribute .
reads a four bytes from the buffer .
reads a long from the given offset .
returns the string representation of the given character .
read a string from the given buffer .
reads a string from the input stream .
read a constant value from the given buffer .
reads the character at the given index and returns the index of the first column of the given buffer .
returns a resultset object that can be used to retrieve the resultset object .
{
/ * ( non - javadoc )
{
returns a resultset object that can be used to get the value of a resultset object .
{
returns the array of {
returns the descriptor for the given class .
get the request map from the request .
creates a map with the given request and attributes .
get the servlet request .
converts a value to a long array .
converts the given array of { @link object } to a { @link } .
convert a primitive array to a primitive array type .
{
/ * ( non - javadoc )
search for paths in the search path .
search for the file path .
search for the file path in the classpath .
includes the pattern pattern pattern .
/ * ( non - javadoc )
returns true if the file is a file .
returns the file path for the given file .
adds a path to the list .
reset the current path to the output stream .
returns the next file in the file .
returns all files that are not found .
initialize the list of files and directories .
{
retrieves the value of the specified object in the specified database .
{

resolves scope types of the bean .
resolves a bean name .
returns true if the given type is a bean annotation .
returns the writer .
returns the output stream for the output stream .
gets the type of a class .
<p > . < / p >
returns the method type of the given type .
returns the argument types as a string .
returns the type of a method .
returns the type of the given class .
returns the class name of the string .
returns the descriptor for the given constructor .
returns the descriptor descriptor for the given type .
returns the method descriptor for the given method name .
append the descriptor to the output stream .
returns the size of the specified {
returns the number of arguments that can be used to read the method with the given parameters .
returns the opcode opcode to the given opcode .
mark the rollback to rollback .
commit the transaction if it is a transaction .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the resource type for the given resource type .
push a new name .
closes the given name .
write the name of the .
write a string to a string .
encode a char to a char array
writes a charsequence to the end of the stream .
sets the { @link } to be used for reading and writing the { @link } .
converts the given string to a string .

starts the region for the specified start tag .
checks if the given tag is a { @link } .
check if the given string contains a value .
registers a function that will be used to create a .
returns a function that returns the { @code } function that will be used to convert the given { @code string } to a { @code } .
{
{
this method is used to determine the method to invoke the method .
visit a class .


processes the method with the given name and arguments .
creates a new { @link } instance .

finds the value of the specified number of integers .
returns the first element in the range of the specified value .
find the last index of the last element in the stream .
append the sequence to the beginning of the sequence .
returns the string representation of this builder .
visit a class .
/ *
replace the content of the file with the given class .
get the attribute attributes .
create a new { @link } with the given name and name .
this method is used to create a dynamic constant .
this method is used to create a dynamic dynamic method with the specified name and name .

create a new method with the given name and name .
returns the common class of the given type .
registers a .
registers a type for the given type .
looks up the type of the given class .

create a proxy info from securitygroup .
create a proxy with a proxy
creates a proxy with a given proxy and proxy endpoint .
returns the total number of threads in the transaction .
returns the total number of threads that are currently in the transaction .
returns true if the current thread is running on the current thread .
removes the transaction .
get transaction
associates the given transaction with the given transaction .
creates a new transaction transaction transaction .
/ * ( non - javadoc )
returns true if the current transaction is a scope .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new transaction .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the object for the given transaction .
/ * ( non - javadoc )
registers a resource manager .
returns the { @link } for the given resource type .
closes the resources .
creates a proxy object for the given target class .
append the given method name to the end of the method .

encode a base64 notation .
pad a text string to a text .

convert a value to a string .
returns a string representation of the given string .
converts a string to a camelcase string .

converts the tabs to a csv file .
escapes the string literal for a backslash .
unescapes the given string and unescape all characters in the given string .
returns a new {
resolve the bean definition .
get the bean from the given type .
get the bean from the bean .

initialize bean definition .
register a bean with the .


creates a bean for the given type .
invoke the provider method on the provider class .
add a bean definition for the bean .
sets the property value for the given property .

{
create a new { @link } instance .
creates a session for the session .
{
converts the logging level to a logging level .
returns a new instance of the given type .
{
resolve the parameters of a method to a method .
{
get the value of the { @code string } value of the { @code string } value .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a dom element node .
/ * ( non - javadoc )
remove the last node of the given node .
returns the parent of the specified tag .

/ * ( non - javadoc )
{
returns the index of the opcode .
/ * ( non - javadoc )



create a new array with the arguments and write the arguments .
create the class array for constructors .





returns the query string of the query string .
saves the value of the object to the specified object .
get the class name for the given action .
calculates the number of integers in the specified { @code int } .
processes the collection of items in a collection .
processes the specified items in the page .
joins the objects in the given array into the array of strings .
replace the string with the specified substring .
<p > replaces the substring of the string with the specified character . < / p >
<p > replaces the specified string with the specified character . < / p >
replaces all occurrences of the specified substring with the specified substring of the string .
<p > replaces the first substring of the specified string . < / p >
replaces all the last last occurrences of the specified substring in the specified string .
<p > replaces the last character in the string . < / p >
removes a string from the specified string .
removes the specified string from the string .
check if the string contains all strings that are empty .
returns true if the string contains a string that contains all strings that are not null .
checks if the given string contains a string .
checks if the given string contains a certain character length .
converts a string to a string array .
returns the first letter of the specified character .
converts a string to a string .

test if a string is a valid string .
split a delimiter into pieces .


returns the index of the first occurrence of the specified substring in the specified range .
returns the index of the specified character in the specified range .
returns the index of the specified substring of the specified substring .
returns the index of the last index of the specified substring of the specified string ignoring case .
returns the index of the last index of the specified substring of the specified index .
returns the index of the last character in the string .
returns the index of the last character in the string .
<p > . < / p >
<p > checks if the specified character is a character . < / p >
returns the number of occurrences of the specified string .
returns the index of the last index of the first occurrence of the specified string .
returns true if the given string array is a valid array of integers .
replace a string with the given replacement string .
replace a string with the case of a string ignoring case .
compares two idn - wise - > src .
compares two <code > tostring< / code > by the specified <code > pair< / code > ignoring case considerations .
returns the specified string from the specified dest .
compares two strings lexicographically .
returns the specified string from the specified dest .
returns the specified string from the specified dest .
returns the index of the specified <code > string< / code > in the specified <code > string< / code > value that the <code > string< / code > element will be returned .
strips leading trailing whitespace from the string .
strips trailing blanks and trailing blanks .
<p > strips the character at the specified character enclosed in the string . < / p >
strip leading and trailing blanks .
strip leading character from the given string .
trims a string to obj1 .
trims the specified string that contains the specified string .
trims the specified string .
removes all elements from the given string .
trims the string to be a string .
trims leading and trailing spaces .
returns the index of the region in the specified region .
returns a <code > / code > that starts with the given offset . <p > the first character is the start of the first character of the region in the range of the region . if the start character is not found the index is returned .
joins the given collection of strings into a single string .
joins the given array into a string .

checks if the given string is a valid character .

returns a string prefix of the given prefix prepended with the given prefix prefix .

returns the string representation of the specified string .
returns the index of the specified string .
returns the prefix of the prefix .



test if a char is a string .
insert a string into the buffer .

reverses the chars in the string .
returns a prefix that contains the longest common prefix of the longest prefix .
finds the common prefix of the string .
remove a string from the given string .
converts the string to a string .
remove a string from the string .
converts a byte array into hexadecimal hex string .
returns a string that is a string that is not null or empty .
returns the byte array for the specified string .

/ * ( non - javadoc )
append a buffer to the buffer .
visit a class .
visit a enum value .
visits a { @code } annotation .
<p > . < / p >
registers the given type for the entity type .
registers a new entity type .
registers a entity by the entity type .
removes all entities from the database .
creates an entity with the given type and schema .
create an entity instance .
sets the interface to be used in the target interface .
/ * ( non - javadoc )
inject target target
this method is used to retrieve the property from the annotation .
this method is called by the database engine .
/ *
closes the underlying stream .
/ * ( non - javadoc )
writes the specified byte array to the buffer .
writes the digest to the output stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the name of the first available key .
returns a byte array representation of this byte array .
writes the content of the specified file to the output stream .
/ * ( non - javadoc )
returns a biginteger that returns the resultset object .
{
/ * ( non - javadoc )
appends a string representation of the argument string to the given string builder .

returns the type of the specified type .
/ * ( non - javadoc )
registers a new converter for the given class .
registers a converter .
find all the elements of this type .
converts the given value to a { @link } .
{
select a list of entities from the query string .
select the list of nodes that match the selector

select the first matched query .
returns a list of nodes that match the given filter .
returns the first matching filter in the tree .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a dom node to the list of nodes .
{


resumes scanning until the next character is encountered .


remove a select from the sql statement .
remove a sql statement from a string .
remove last index in a sql page .
decodes a string into a single html string .
returns the full name of the given input .
{
{
{
{
resolves the given properties and column names .
find the column column name for a column
finds the column column for the given property name .
retrieves the name of the column for a column
returns the column name for the column name .
get the value of the specified object .
sets the value of the specified value in the specified object .
returns the value of the specified property .
appends the specified string to the pool .
sets the index of the index to the given index .
returns the char at the specified position .
expands the capacity of the array .
returns the length of the length of the specified length .
determine if the given container is not a bean .
creates a new message .
create a proxy bean for the given bean definition .
prepare the direction of the step .
called when a new body is encountered .
initialize the files and directories in the given directory .
returns true if the file is a file .
/ * ( non - javadoc )
starts the timer .
notify listeners of the change event .
adds a new enumeration to the list .
returns true if the current element is the same as the current current position .
convert a value to a double array
returns the size of the .
puts the info of the jvms .

append the buffer to the buffer .
returns a new instance of the { @link } instance .
returns a {

write a value to the given value .
/ * ( non - javadoc )
parses the tag .
parses the page tag .
writes the given page to the given output stream .
write the region to the given writer .
<p > checks if a string is blank . < / p > <p > <b > note : < / b > this method appends the values to the <code > / code > .
starts the server .
convert a value to a single value .
runs the process .

matches the path against the given path .
create a stream to write the output stream .
{
{
{
/ * ( non - javadoc )
{
append the sql alias to the database .
append column name to the sql statement .
adds rule to the list of rules .

compares the given value to the specified value .
processes the results of evaluating the rule with the rule set .
processes the rule and exclude rules .
{
returns the class name for the given class name .
{
adds all of the elements in the collection to the collection of items .
find the next index in the stream until the next index is reached .
log a logger level .
{
registers the given annotation type annotation .
configure the {
create a new { @link } instance .
lookup a {
invoke the consumer with the given action and the action and the action .
returns true if the given element is annotated with {
sets the system properties .
validate the value of the given value against the given value .
checks if the element is a table element .
returns true if the node is a table element .
returns true if the node is a parent node .
finds the last element in the given node .
returns true if the node is a node .

/ * ( non - javadoc )
registers a .
get the map of session ids for the given session id .
gets the servlet session .

add a method to the list of .
add a method to the set of constructors .
returns a resultset object that can be used to read the value of the specified type .
{
process the link .
start the bundle with the given bundle .
answers a copy of the given content with the given id .
converts the given properties to a writer .
/ *
parse the given string and return the result .
adds a new section to the list .


compares two { @link comparable } objects .
returns the name of the class that is the shapetype for the class name .
returns the name of the parameterisation of the given class .
converts a string to a signature .
converts a type to a string .








add all elements of this consumer .
accept a {
creates a collection of type <code > int< / code > .
converts a collection of objects to a single { @link collection } .
convert collection to a collection of primitive type .
convert collection to unmodifiable collection .
convert a collection of primitive type to a collection of primitive types .
/ * ( non - javadoc )
adds a line number to the end of the line .
visit the method visitor for the given method visitor .
puts a byte into the buffer .
adds the to the given opcode .
resolves the given code point of the given code point in the given byte code .
marks the end of the block .
adds a new block to the list .
pushes a label to the list of edges .
compare the string with compare number and the number of characters .


puts a byte into the buffer .
returns the byte vector from the specified byte array .
puts a short value into the buffer .
returns the value of the specified { @code int } value in the buffer .
returns the int value of the specified byte array .
puts the specified int value into the buffer .
returns the value of the specified byte array .
puts the specified long value into the buffer .
puts a byte array into the byte array .
creates a new byte array .

if authentication is authorized for the request the request is responsible for ensuring that the request is not authorized .

/ * ( non - javadoc )
{

find the message bundle for the given key and the name of the bundle .
returns the default message for the specified locale .
returns the message from the resource bundle .
finds the resource bundle for the given resource bundle .
gets the resource bundle for the given resource bundle .
returns the element at the specified index .
/ *
sets the entity id for the entity .
serialize entity to an entity .
save entity .
update entity
updates the specified property with the specified value .
updates the given entity with the specified name and column name .
find a nearest single entity by id .
finds a property in a given collection .
find the best match for the criteria specified by the { @link } .
returns a list of entities that have the specified criteria .
finds entities for a given entity .
delete a specific entity id from the database .
delete a specific entity from the database .

inserts a property to the specified entity .
perform a preparedstatement on the given entity .
finds the specified target by applying the specified target .
returns all elements in the target list .



clears all the keys for this map .
/ * ( non - javadoc )
{
removes the mapping for the specified key .
get the stack trace of the stack trace .
get the stack trace of the given throwable .
get the stack trace of the given throwable .
returns a {
print a throwable to the given throwable .
converts a throwable into a string .
builds a message from the given exception .
get the root cause of the exception .
finds the best cause of a throwable .
read sqlexception sql statement .

wrap a throwable exception if it is a runtimeexception .
throws an exception if the throwable is a runtimeexception .
returns a new instance of {
registers a class from the given class .
checks if the class is a primitive class .
called by the { @link } to see if the method is annotated with { @link } .
registers a component for the given component class .

<p > . < / p >
returns the jar file loaded from the classpath .

returns the default classpath for the given classloader .
returns the resource url for the given resource .
get resource stream from resource bundle
get the input stream of the given resource .
get the input stream of the given class .
get the input stream for the given class name .
loads a class from the given class name .
loads a class from the given class loader .
add a new value to the response .
/ * ( non - javadoc )
matches the given value against the given value .

parse request parameters .
convert a value to a type .
convert a value to a { @link } .
invoke the setter method for the given object .
get the value of an array property .
{
returns the index of the specified name in the given string .
extracts the index of the given property from the given index .
create a property for a bean .
returns the component type for the given property .
convert the value of the object to a map key .

get the user session from the session .
/ * ------------------------------------------------------------
starts the request with the specified request .
converts the given date into a { @link date } .
converts a date into a calendar object .



adds a new name to the list .
resolve the resolved type to the target class .
adds a new instance of { @link } to the list of converters .
collects all annotations of the given list of { @link } s .
collects the list of { @link } annotations to the target class .
creates a constraint instance .
check if the given { @link } is not found .
creates a completablefuture that is a { @link completablefuture } .
returns an object that can be used to get the resultset objects for the specified type .
{
encode a string into a string .
encodes the given data source into a byte array .
encode the given string into the encoding .
encode a scheme - encoded uri string to encode the given scheme .
encodes a host - string into a string .
encodes the given port into a base64 - encoded uri .
encodes a path to a path .
encode a query string into a string .
encode a query string into a string .
encode the given fragment into the uri fragment .
encodes the given uri uri into a uri .
encodes the given url into a uri string .
build a builder for a builder .
get the properties of a property .
adds a property to a map .
creates a new propertydescriptor descriptor .
creates a property descriptor for a named field .
returns the property that is associated with this property .
returns the location of the resource .
returns a cookie with the provided cookies name .
read a single http response from the given http response .
{
reads the input stream and returns the result .
close the connection .
{
{
prints the overview of the page to the overview of the specified width and prints the help of the page .
加密
decrypt the content of the encrypted byte array .


sets the value of the property in the given value .
map .
{
converts a value into a value array .
compare the fields in the database .
sets the default browser header . <p >
send a request to the client .
send a request to the client .
add default headers .

add a cookies to the list of cookies .
send mail to email .
creates a { @link mimemessage } for the given { @link mimemessage } .
sets the subject to the subject .
sets the date date to the specified date .
sets the headers to be used for the headers .
sets the { @link } object to be used with { @link } .

add a body data to the list of messages .
creates a builder for the specified .
sets the message to the given content .
creates a new xslt body for the supplied user .
method to add a list of { @link } s to the list of { @link } objects .
adds a list of attachments to the list .
compares two { @link } .
returns the value of the header field value .
returns the content type of the given header .
saves the result to the given result set .
initialize the session session .
<p > . < / p >
close the database .
<p > . < / p >
close the query .
closes the database .
closes the database .
<p > . < / p >
sets the maximum rows .
{
executes the preparedstatement on the preparedstatement .
execute a query .
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
finds and returns the result of the result .

retrieves a { @link } .
> > > > > > > > > > > > > > > > > > > > > > > > > > > <days > / p >
returns the query string for the given { @code string } .
returns the address of the specified address .
converts a { @link internetaddress } to a { @link internetaddress } .
returns the address of the address of the given address .
converts the specified address into a { @link internetaddress } .
<p > . < / p >
returns the {
parse a template expression
returns a new enumeration backed by the specified elements in the specified iterator .
returns an iterator that combines the elements of the iterator into an iterator that is returned by the iterator .
新建一个arraylist<br > 提供的参数为null时返回空 { @link }
returns a stream that is lazily closed by the supplied iterator .
returns a stream that combines the supplied iterator into the supplied iterator .
returns a stream that contains all elements of the stream .
{
compares two lists of comparable objects .
add a content - type to a zip file .
adds a new to the zip file . <p >
sets the default mode for the default mode .
returns the { @link } for the given { @link } .
prints the exception message .
get the class name for the given class .

adds a value to the map .

/ * ( non - javadoc )
sets the type of the parameter to be used for the type of the given type .
sets the type of the serializer to use for the given type .
serialize a source object to a json object .
serialize a object to a json string .
serializes a {
creates a new instance of {
writes the specified file to the specified file .
reads a file from the stream .
converts the object to a byte array .
convert a byte array to a byte array .
/ * ( non - javadoc )
resolves the { @link } instance for the given { @link } .
resolves the name of the factory to be used for generating the default table name .
resolves the type of the given class .
creates a new unique name for the given class .
read a column value from the sql statement .
/ * ( non - javadoc )
set the entities of the given entity .
resolves the given type and returns a map of type name from the given name .
converts the given entity name into a string for the entity name .
converts the name of a table name into a string .

{
{
checks if the connection is valid .
closes the connection .
{
{
checks if the request is not a valid target resource .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the content of this buffer as a byte array .
write the content of the content of the specified content to the output stream .
writes the response content to the output stream .
/ * ( non - javadoc )
sets the header value for the header .
sets the header value for the header .
writes the content of the specified string to the output stream .
logs a token to the specified user .
{


logs the current user to the current user .
sets the size of the array .

converts a url into a file .
converts the given url to a file name .
converts a url into a { @link } .
creates a new directory with the specified directories .
creates a file from the given directory .

copies the given source file to the specified destination .
copy the contents of the src file to the destination file .
copy the contents of the source file to the destination directory .
copies a sub - directory to a directory .
moves the file to the destination file .
move the file to destination file .
moves a file to the destination directory .
removes the specified directory from the specified directory .

reads a file from the file .
write a portion of a byte array into a byte array .
write a string to a file .


read a string from the file .
writes a string to a file .
append a file to the output stream .
write a file to a file .
writes a stream to the output stream .
reads lines from a file .
read a byte array from the specified byte stream .
writes a byte array to the output stream .
append bytes to the output stream .
write a byte array to the output stream .
compare two strings .
compare two files .
checks if the given file is a file .
checks if the given file is a valid .
copies a destination file to a destination file .
moves src to dest file .
delete the file and delete the file .
checks if the given file is a ancestor of the given file .
returns the parent file that is the same as the parent file .

creates a temporary directory that is created from the given directory .
creates a temporary file with the given prefix and suffix .
creates a temporary file with the given prefix and suffix .
returns true if the file is a binary binary file .
reads a file from the file .

checks that the given file exists .
creates a directory that is a directory that is not a directory .
check that the source directory is a directory and the destination directory .
checks if the file is a file .
append a buffer to the buffer .
prints the usage of the command to be used in the command line .
resolves a method to the given action .
register a { @link } with the given action name .
register a { @link } .
register a to the .
method to invoke method on the given path .
registers a path for a given path .
returns true if the next iterator is in the tree .
creates a new { @link } with the specified value .
append a buffer to the buffer .
{
{
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
returns a new { @code exceptional } instance with the specified { @code name } and { @code type } .
executes the given callable and executes the given callable .
finds the next occurrence of the given target .
finds the first occurrence of the specified target .
checks if the target string starts with the given array .
<p > compare two charsequences lexicographically . < / p >
returns a character sequence that contains the specified character sequence .
read the position of the line .
this method is used to perform a transactional transaction .
/ * ( non - javadoc )
atomically rollback transaction rollback transaction if it is not a transaction .
returns the url of the given class .
encode a string representation .
encode the email address .
add a bcc recipient .
add a bcc recipient .
creates a {
registers the given { @link } .
registers the given serializer type .

upload a file to the upload .
parses the request stream into a stream of bytes .
returns the parameter value of the request parameter .
returns the value of the parameter with the given name .
returns the request file matching the request . <p >
returns the file path for the specified path . <p >
{

finds the end - time macro in the given string .
returns the number of characters that match the given pattern .

builds a <code > map< / code > with the specified <code > map< / code > .
parses a query string and returns a map of booleans .

extracts the media type from the content of the content .


{
{
process the given path .
transforms a dom node into a html dom tree .
transforms a xml node into a html document .
{
/ * ( non - javadoc )
returns the value of the cached value for the specified key .
removes the value associated with the specified key .
clears all cached values .
{
configures the servlet context .
start web applications .
stop the server .
create a web application .
loads the parameters from the supplied parameters .
resolves the jawr config class .
creates a new class instance with the specified name and class name .
resets the .

maps the specified path to the target object .
returns the mapped path of the specified class . if the target type is not a target type then the type will be ignored .


parse the given { @code string } .
parse the given { @link } and returns a list of { @link } .
parses the string representation of the map .
parses the given { @code input } and returns the { @code targettype } .
parse the given class and returns the value of the specified type .
resolves the value of the value to the given value .
skip the characters in the input stream .
parse a string to a string .
parse the string content of the text .

parse the character in the input string .
parses the content of the string .
parses the number of numeric arguments .
parse the given array of { @link } s .
parse the given {
answers a char - formed character in the input text .
matches the target expandable element with the given array of arguments .
handles a error message .
{
/ * ( non - javadoc )
this method is used to determine the method to find the first method found in the target class .
create a .
{
resolves the name of the given type name into the name of the class name .
resolve the reference to the given property descriptor .
resolves the reference to the given method name .
returns the reference to the given classdescriptor .
returns a list of that can be used to read all the references .
reads a value from the given { @link annotation } .
check if the method is a default runtime .

remove all the beans of the bean .
converts a list of {
converts a string to a string .
run the
/ * ( non - javadoc )
finds a method in the given class name .
finds the specified { @code parametertypes } .
returns true if the given class is a special type .
returns the classes of the given class .
checks if the given class is a subtype of the specified class .
checks if the given object is a public instance of the specified class .
resolves all interfaces implemented interfaces .
resolves all the classes in the given class .

<p > introspects the given array of <code > / code > objects that are <code > class< / code > to <code > array . / code > . < / p >
compares two methods .
compares two methods .
compare the given array of parameters .

returns true if the given member is a member of the specified member .
creates a new instance of the specified class using the specified parameters .
returns a new instance of the specified type .
checks if the given member is a subtype of the given member .
get the first class of the given class .
checks if the given method is a bean property .


returns the type of a component with the specified type .
returns the component types of the given type .
converts a type to a string .
reads the value of the annotation in the given annotation .

returns the class name for the given class .
find the enum of the specified class .
find the parent class for the given parent class .
returns the jar file name of the jar file .
converts a class name into a string name .
returns true if the annotation is a class annotation .
returns true if the given type is a numeric type .
sleeps for a sleep .
sleep for a sleep .
wait until the object is running .
joins the given thread to a thread .
create a thread - safe factory for the given priority .
{
visit a parameter .
visits a { @code } annotation .
visit a visitor annotation .
visits a parameter with the given annotation .
called when a frame is a reloadable type .
visits a field field field field .
visits a method instruction .
handle the method injecting the method injecting the opcode from the given class .
visits a new instruction visit the instruction .
sets the number of dimensions to the given number of columns .
visit a visit event .
visits a variable annotation .
/ *
{
{
/ * ( non - javadoc )
moves the next record to the next one .
varargs to the same type as {

returns a { @code array } of { @link arrays } objects .
resizes the specified buffer to the specified buffer .
resizes the specified buffer to the specified size .
append the specified array to the specified array .
removes the specified array from the specified array .
removes the specified array from the buffer .
creates a new {
creates a new array with the specified length and length .
creates a new levenshtein - dimensional array of bytes .
replace the contents of the specified array into the destination array .
{
/ * ( non - javadoc )
returns the byte array for the specified array .
returns the byte array for the specified byte array .
returns the array of chars in the array .
returns the values of the specified array of characters .
returns the array of short values .

returns the int array of the array of integers .
returns the values of the array of integers .
returns the long values of the given array .

returns the values of the values in the array .
returns the values of the specified array of float values .
returns the double array with the values in the array .
returns the values of the doubles in the array .
returns true if the array is empty .
returns the boolean array of booleans .
returns the index of the specified array starting at the specified position in the given array .
returns the index of the specified character array .
returns the index of the first occurrence of the specified value .
returns the index of the first occurrence of the specified value in the given range .
returns the index of the first occurrence of the specified value .
returns the index of the first occurrence of the specified array in the range of values .
returns the index of the first occurrence of the specified value .
returns the index of the first occurrence of the specified sub - byte array starting at the specified position in the specified array .
returns the index of the first occurrence of the specified array starting at the specified index .
converts a array of <code > string< / code > objects to a string array .
converts a string array into a string array .
sets the current .
{
parse the given parser and return the .
/ * ( non - javadoc )
collects the { @link } s to the { @link } .
propagates the {
adds the given block to the current block .
called when the end of the block is closed .
called by the to start the frame .
called when the is read .
puts the frame into the frame .
puts the given range of the given index into the list of positions of the specified index .
puts the given type into the map .
checks if the given method is a static method .
/ * ( non - javadoc )
puts the method information into the .
/ * private void ( pagecontext pagecontext pagecontext ) { . ( . ) ; }
{
set the context of the given object to the given target class .
parses the selector .
parses the query selector and returns a list of .
registers a static class .

{
invoke the request handler with the given action .
closes the given { @code xmlstreamreader } .
copy the contents of the input stream to the specified output stream .
copy the contents of the input stream to the output stream .
reads the contents of the input stream into a byte array .
copies the content of the specified object into the specified output stream .
copies all the contents of the given stream into the specified output stream .
copies a stream to a { @link outputstream } .
copies a { @link inputstream } to the given { @code inputstream } .
copies the given { @code int } to the specified { @code int } .
reads the input stream into a { @link inputstream } .
returns a writer that writes the given output stream to the output stream .
get all property names for a given type .
resolves the properties of the bean property .
visit a property .
{
get the { @link } for the given type .
resolves the given type and returns the resolved type .
{
create a treewriter bundle bundle for the jawr config .
sends a file to the output stream .
configures the time warp and registers the new .
registers a .
sets the maximum number of random pairs in the qr code with the given value .
creates a file bundle with the given bundle id .
returns the bundle file for the given bundle id .

register a bundle with the given name and bundle id .

creates a bundle with the given name and bundle name .
resets the state of the file .

/ * ( non - javadoc )
update the sql database entity .
update the entity with the specified entity .
update column values for the entity
update column - specific column
delete a prepared entity with the specified entity .
delete a database by entity
delete a { @link entity } by deleting entity into the database .
delete a single db database .
find the sql matching sql query .
find the sql entity for the entity .
finds the entity with the specified entity .
find the column for a column .
find the { @link } for the given entity .
finds all the entities for a database .
{
{


sets the count of the entity to the entity .
adds a column to the db .
creates a new instance of the given entity .
{
returns the result of the { @code object } that is the same as the name of the first argument .
returns the class of the specified class .
{
<p > . < / p >
convert a value to a list of objects .
convert a primitive array to a primitive array type .
parse the signature of a signature .
resolves the given type .
push a value onto the stack .
{
{
serialize the object to a json object .
returns whether the given type is a property of type { @link } .
close the connection .
open the connection .
open the connection .
closes the database .
commit the transaction .
rollback transaction
replace the given path with the given name and name .
creates a new {
checks if the given path is absolute .
create a new properties file from the properties file .
loads a file from the given file .
loads the file from the given file .
writes a properties file to the file .
write a file to the file .
writes a properties file to the file .
write a file to the file
create a new properties object from a string .
loads a properties from the given string .

create a new { @link } instance .
load properties from the classpath .
get the value of a property map .
get a property as a string .
resolve all variables in the given properties to a property .
resolve a property value .
resolve scope for the given name .

registers the annotations of the given annotations and returns the annotations that are annotated with the annotation .
/ *
adds a new id selector id .
{
returns true if the node is a dom element .
returns true if the node count is not a number .
{
builds the packages for a given package .
returns the version number of the version .
clones the given <code > node< / code > .
detaches the parent node from the parent .
add a child node to the node .
adds a child node to the list of nodes .
inserts a node<t node at the given index .
inserts a child node at the specified parent .
inserts a node into the tree .
inserts a child node into the treap .
inserts a node into the tree .
remove the child node at the given index .
removes all nodes from the list of childs .
returns the value of the specified index in this attribute .
returns true if the given attribute name is a valid attribute name .
{
set the value of the specified attribute .
returns true if the given word is a valid document .
finds the child node with the given name .
returns the child node at the given index .
if the given index is not found the node is returned .
get the child element at the given index .
get the first child of this node .
get the last child of the specified child node .
returns the last child element in the given element .
check if the node is a child of the given node .
reindex all children of the given element .
this method is called internally by the jsf engine .
initializes the parent of the given node .
helper method to handle the children of the node .
updates the owner of the document and node name .
returns the next sibling of the node in the tree .
returns the next sibling element in the given element .
returns the next sibling of the given name .
returns the node that is the root node of the node .
returns the previous element of the given element .
returns the previous sibling of the given name .
returns the text content of the text .
append the text content of the text content .
get html html code for the document .
get the html for the html html html html html html output .
visit all children nodes .
get the css path for a given path .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
configures the tag .
{
{
this method is used to convert a map into a map .
returns a timestamp if it exists .
{
gets the mime type of the mime type .
finds the extension of the given mime type .
returns a resultset object that can be used to retrieve the result of calling { @link ( int int int ) }
{
/ * ( non - javadoc )
adds a new package to the package .
find the package path of the path .
returns the package path of the given package .
{
commit transactions .
rollback transaction
creates a json string from the given list of urls .
resolves a message against the given { @link servletrequest } .
removes all the names of the given name .
{
/ * ( non - javadoc )
create props from configuration .
<p > . < / p >
this method is called by the { @link } to perform the actual target .
this method is called by the { @link ( ) } method to perform a { @link } .
returns the array of objects .
build the targets for the given target .
creates a method injecting the method in the constructor .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the string at the specified position .
returns the integer value of the specified int .
gets the long value from the specified int value .
get the value at a specified offset in the specified bounds .
get the float value of a float .
returns a jsonobject with the specified value in the jsonobject or null if the object is a jsonobject .
returns the value at the specified position in this list .
get the binary value of the byte array .
get the value at the specified position in the specified position .
adds a value to the list .
adds a value to the list .
adds all { @link } s to the specified array .
removes the value from the map .
{
resolves the action to resolve the target uri .
handles the action response .
/ * ( non - javadoc )
process an input tag with a value .
converts a string value into a string .


filter the { @link filter } instance from the { @link filter } class .
matches a node with the given index .
returns the function name for the given name .
creates a string with the name of the class .
returns the value of an index .
{
resolves the given type and returns the resolved list of classes that are not declared in the same type .
create a socket to the remote server .
reads a reader from the given reader .
writes a { @link byte } object to the specified { @link byte } .
returns the number of attributes in this btreepage .
returns the size of the symbol table .
determine the attributes of the given symbol .
puts the attributes attributes into the given byte buffer .
puts the attributes into the
returns all the results of all the actions in the order that they are not processed .
registers the given result .

lookup the result of the request .
creates a result of the action .
compares two charsequences .
finds the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first occurrence of the first
finds the first occurrence of the given array of char array .
sets the command line arguments .
sets the value of the { @code value } property .
process the process .
invoke the listener with the specified listener .
/ * ( non - javadoc )
returns the type of the specified type for the given index .
returns the type of the symbol table .
sets the input frame of the given { @code } .
sets the input frame of the specified frame in the input frame .
returns the local local local local local local local local local name .
sets the .
pushes the stack onto the stack .
pushes the symbol to the symbol table .
pop the stack and pop its stack output stack .
pop the first line and returns the result .
adds the specified {
returns the effective type of the given symbol table .
on the given object .

on the actual type of the given method .
puts the into the .
/ * ( non - javadoc )
/ * ( non - javadoc )
visit a module .

visit a class .
visits a { @link } annotation .

visit a class .

/ * ( non - javadoc )
get a thread - local thread .
closes the session .
create a new { @link } .
invoke the method with the specified action .
read the request body from the request .
returns the first page index .
returns the first page of page in the page .
parses a int value .
compares two integers .
converts a byte array into a byte array .
find the number of occurrences of the source of the given array of char array .
resolves a node name .
resolves the name of the attribute to the given node .
renders the attribute value .
loads the extension from the file .
loads a file from the specified file .
loads the input stream from the given input stream .
loads a properties from the configuration file .
loads a properties from the given map .
loads properties from the system properties file .
load a single environment .
loads the requirejs script from the classpath .
get the value of the given property .
get the value of the specified property .
get the value of the specified key .
set the value of the property .

{
<p > . < / p >
this method is used to map the keys to the map .
add a map of key - value pair to the given map .
resolve the current profile .
get all profiles in the profile .
returns all profiles in the given property name .
adds a property to the javafx library .
add a { @link } to the { @link } .
add a method annotation to the method .
initialize the method .
add a method to the invokable .

inject target object into target object .
inject a target object into target target target object .

/ * ( non - javadoc )
find the field with the given name .
get the type of the field .
returns the getter getter method for the given getter .
creates a getter method for a getter .
returns a { @code } object for the given { @code name } .
creates a new { @link } .
resolves the type key .
resolves the given { @code cls } .
returns the substring of the specified separator .
creates a json object from the given object .
creates a json object from a {
resolves the method name from the given method name to the given method name and returns the {
compares two string ignoring case .
matches the given string with the given regular expression and returns true if the pattern is not found .
returns the match for the specified regular expression .
matches a path to the path .
checks if the given rule is a rule .
resolves the parent of the given class .
resolve a resource to a resource .
{
{
waits until the current thread is ready to the current thread .
returns the annotation type for the given annotation .
/ * ( non - javadoc )
builds a injection point from the given class .

overrides the visitor to look for a primitive type .
if the property is not a java object literal it will be used instead of a property .
returns a new url with the given class name and subpackages .
sets the bean property .

loads the propertydescriptor .
returns the getter getter method for the given getter .
returns a { @link propertydescriptor } for the given { @link org . apache . ojb . java . lang . propertydescriptor } .
open the connection to the server .
add a { @link iterator } to this { @link iterator } .
{
{
insert sql store .
start the .
prints the logo .
stops the {
/ * ( non - javadoc )
create a socket to the server .
this method is used to connect to the socket .
returns the ssl socket for the ssl handshake .
get socket factory for given ssl connection .
returns a random string from the specified number of characters .
returns a random string from the specified character .
returns a random string of the specified character ranges .
parse a content - value from the given string .
parse a { @link } from the given { @link } .
parse a { @link } .
parse the { @link inputstream } to be used for sending messages .
creates a new { @link } instance .
creates a new instance of { @link } .
inject a value into the target object .
convert the given value to a { @link java . lang . string } .
called when a service is found in the service .
returns the value of the specified type .
{
{
create default default default default default default default implementation
adds a value to the map .
get the value of the specified {
returns a resultset object that can be used to retrieve the result of the resultset .
{

get methoddescriptor that are annotated with a class .
get the methoddescriptor that can be used for a method name .
get all methods in the methoddescriptor .
returns the ip address from the local machine .
returns the ip address of the specified ip address .
check if the input string is a valid string .
resolves a hostname .
download a byte from the specified url .

opens a file with the given file name .
/ * ( non - javadoc )

{
{
inject the {
request the controller .
connect to the given port .
connect to the given port .

returns the index of the class name .

loads the class from the given class .

{
<p > returns a new ordered { @code filter } that performs the elements of the array <code > step< / code > . < / p >
returns a comparator that compares arrays of elements .
finds the element at the specified position in the specified element .
sets the exclude exclude patterns .
include the given include .
sets the property name .
start the start of the start tag .
{
ensures that the value is not empty .
appends the given content to the given writer .
register a component with the given component name .
register a component with the given component name .
registers a component instance .
register a component with a given component name .
notify all listeners that this listener knows about the given type .

<p > . < / p >
<p > . < / p >
resolves the component name and component name for the given component .
{
<! -- begin - user - doc -- > <! -- end - user - doc -- >

resolves the result row in the row .
{
finds the key in the specified type .
populates the entity with the given key and the column name .
{
clear the parameters .
sets the value of the specified type to the given index .
sets the value of the specified value .
sets the value of the specified value to the specified value .
sets the value of the field to the specified index .
sets the value of the specified value to the specified value .
sets the value of the specified value to the specified value .
sets the value of the specified value .
sets the value of the specified value .
sets the value of the specified value to the given value .
sets the value of the specified value to the specified value .
set the value of the stringvalue to the specified value .
sets the date value of the specified date object .
set the time value for the given time .
sets the timestamp value .
sets the value of the specified { @code value } to the specified value .
sets the value of the specified <code > index< / code > value that this <code > / code > is a <code > / code > object that is used to create a new <code > / code > that is used to create a new <code > / code > .
set a value to the given value .
sets the value of the specified index to the given index .
sets the clob value .
sets the value of the specified array .
sets the value of the specified value .
sets the input stream to the given stream .
sets the value of the bean property .
set the parameter to be used in the parameter .
#ifdef java6
set the value of the object to the given object .
sets the value of the object to the specified object .
set the value of the given type .
sets the object to the set of objects .
sets the names of the values in the given array of values .
sets the batch - name to the specified subset of the given { @code name } .
sets the value of the { @link } .
inserts a new chunk into the buffer .


find the column for the given column .
resolves the name of the table .
<p > . < / p >
resolves the class of the given object .
checks if the value is empty .
appends the string representation of the <code > / code > to the <code > / code > .
{
{
returns the value of the <code > / code > property .
returns the uploaded files in the specified file .
compares two { @link comparable } objects .
handles the request with the given page .
/ * ------------------------------------------------------------
/ * ( non - javadoc )

/ * ( non - javadoc )

{
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
returns the full url of the url in the request .
returns the url of the request .
checks if the request is a page .
returns the base uri for the request .
returns the request uri for the request .
resolves the method name to the given method name .
build the path for the given path .
create a macro path for the given path .
{
stops the .
prints the menu to the given one .
{
filter the subject .
sets the .

adds a filter to the address .
sets the spelling to be used for a given .
sets the bcc - filter - address for the textbox .
sets whether the flags of the given flags are equal .
flags flags flags flags
filter the date of a date .

set the text matching the criteria .
sets a header matching the given header .

filter the specified fields .
filter the ranges of all of the fields in the disjunctive - form - ranges .
removes all the substitutions with the specified name .



encode a byte array into a string .

converts a value to a byte array .
/ * ( non - javadoc )
{
checks if the given request is a valid gzip - encoded uri .
add a violation to the list of .
<p > validate that the target object is a { @link target } . < / p >
validate the given validation validation of the validation .
sets the profile to use for the profile .
set the profiles to be used in the wizard .
check if the profiles are not included in the request .
parse request body .
returns the number of seconds between the given time and the given time .
add a new date to the end of the date .
/ * [ deutsch ] <p > bestimmt die gregorianische
sets the value of the specified value .
returns the number of days in the specified calendar .
returns the specified index in the specified { @code } .
sets the value of the specified { @link } .
/ * ( non - javadoc )
sets the to the given
returns the index of the first occurrence of the specified index .
/ * ( non - javadoc )
parse the given visitor and parse it to parse the given tree .
emits a comment to be rendered in the stringbuilder .
log a message .
checks if the given name is a tag name .
creates a hash of the given password with a random hash of the given password .

converts a hex string to a byte array
resolves a provider definition for the given name .
sets the name of the attachment .

sets the content of the attachment .
sets the content of the content of the specified content type .
builds a {
builds a file data source .
sets the content disposition attachment id .
resolves the mime type of the content type .
accept the signature of the signature of the given type .
parses the signature of a type .
returns the size of the class .
puts the into the .
decodes a string into a string .
decode a string to a string .
/ * ( non - javadoc )
checks if the database provider is in the database .
prints the entities to the output .

visit a class .
visits the method in the method .
/ * ( non - javadoc )
create a methoddoc for a method signature .
converts the specified object into a csv file .
converts a line to a string array .
resolves the given type and returns the resolved type .
creates a reader for the given class .
returns the class reader for the specified {
read data from the .
<p > . < / p >
<p > . < / p >
sets the provider to be used for the logger .
returns a logger with the given name .
sets the name of the name of the name of the name .
invoke the method with the given action and controller .
render the response body .
create an action instance of the class .
create a httprequest request .
{
returns true if the given bean is a valid .
registers the bean with the given bean .
destroys the given bean .
{
creates a new { @link } object .
get the content of the request .
buffers the .
main entry point .
allocates a counter with the specified length .
run the .
creates a handler that will be used to create a handler that will be used to create a handler that will be used to create a handler that will be used to create a handler that will be used to create a handler that will be used to create a handler that will be used to create a handler that will be used
prints a { @link outputstream } to the specified { @link outputstream } .
prints the rate of a message to the console .
read a file from the file .
close the connection .

poll for the specified fragment .
returns the offset of the specified stream pointer .
inserts a { @link bytebuffer } into the buffer .
inserts the specified amount of bytes from the specified buffer to the specified buffer .
<p > write the message to the buffer s buffer s limit . < / p >
{
/ * ( non - javadoc )
returns the number of bytes that can be sent to the client .
append a padding to the end of the buffer .
sets the channel name to the given channel .
closes the connection .
creates a new archive .
creates a new { @link } .
returns the status of the connection .
checks that the connection is valid .
adds a new channel to the channel .
adds a new { @code } to the specified value .
starts the remote server with the given id .
stops the session with the given stream id .
stops the { @link } .
stops the session and recording the client .
opens a new { @link } with the given txid .
opens the session id .
opens a new { @link } with the given id .
returns a new array of that will be used to read the data from the server .
returns a new array of that will be used to retrieve the data from the server .
returns the { @code } object that contains the specified id .
returns the position of the sessionid .
returns the last modified time of the specified resource .
aborts the given recording .
returns the roster that have been created by the consumer .
prints the contents of the given dump of the given message to the given output stream .


returns a { @link } that is used to read the stream from the stream .
returns a {
sends a { @link } to the specified { @link } .
returns a {
limits the limit of the limit .
appends the specified buffer to the buffer .
poll for the next chunk .

this method is called when a new fragment is received .

print the output stream .
creates a new { @link } .

/ * ( non - javadoc )
resets the state of this consumer .
read the specified consumer from the given { @link } .
creates a new header with the given id .

adds a new succeeding label to the buffer .
poll the next fragment from the head of the queue .
returns the number of untagged nodes that match the given fragment .
returns the { @link } for the specified block .
returns the { @link } for the specified { @link } .
returns a new image with the specified id .
processes the given {
creates a new { @link } .
returns true if the channel is in the channel .
refreshes the update of the field .
returns the number of mismatches in the given range .
append a message to the buffer .
append the message to the message header .
this method appends the message to the end of the message .
sends a request to the client .
sends a response to the server .
closes the session .
starts a new { @link } .
stops the session and sends a { @link } .
stops the session .
sends a request to the client .
sends a request to the client .
lists all records in the .
returns true if the given client id is available in the session .
returns true if the given time is subscribed to the given time .
sends a request to a playlist .
returns true if the session is a session and is not a valid .
sends a { @link } to the announce view .
stop playback and sends a { @link } .
returns true if the last chunk is available .
returns true if the specified channel is a remote channel .
parse the given channel from the given { @link channel } .
convert a remote address to a string
checks if the given channel is a remote address .
returns the address { @link inetsocketaddress } with the given { @link inetsocketaddress } .
returns the description of the .
closes the underlying connection .
adds a callback to the .
removes the specified subscription from the given bytebuf .
called when a number of insertions is reached .
adds a new tcp socket to the remote peer .
called when the next chunk of the data is readily in the current position in the current position .
write a packet to the stream .
checks if the current thread is a valid .
waits for the next status message to be deleted .
called when a reconnect is received .


called when a new is received .
creates a { @link } for the given file and returns the result .
returns the for the given {
put a string value .
returns the tag value for the tag .
returns the tag value for the tag tag .
sets the position of the { @link } .
parses the { @code } .
adds a session id to the server .
returns the tag value for the given parameter .
returns the number of mismatches in the given range .
append a text chunk to the given .
append a message to the message store .
adds a new message to the message store .
update the limit of the .

compacts the given buffer to the buffer .
creates a { @link } for the given buffer .

compare the chunk of the buffer to the given chunk .
clears the http head .
validates the http response builder for the given { @link mediatype } .
sets the prefix for the prefix .
used to specify a media type .
sets the control mode for the specified control mode .
sets the ttl of the specified builder .
sets the minimum and maximum values for the given parameters .

returns the offset offset of the term that is in the specified range .
/ * ( non - javadoc )
sets the position of the position in the given position .
builds the html code for the specified request .
sends a error message to the specified port .
open a datagram channel .
close the connection .
returns true if the given buffer is valid .
returns the address of the socket .
on a new chunk with the given id .
called when a new item is received .
/ * ( non - javadoc )
resets the subscription to the specified value .
this method is called when a new fragment is received .
returns the status of the status code .
wrap a {
this method is called when a fragment is received from the remote fragment .
resets the buffer to the buffer .
validates the given buffer .


returns a { @link } that is the same as the { @link } .
creates a new {
returns a new {
creates a new .
creates a new {
creates a new {
validates that the given range is valid .
returns a {
validates the socket to be used to determine the .
checks if the given page size is valid .
validates that the range is valid .
validates that the given time is in a client side of the given timeout .
/ * ( non - javadoc )
returns all the event for the given { @link } .
returns a set of { @link } s that are currently in the given { @code } .
returns the set of that will be used to determine the time of the .
resets the state of the current thread .
parses the given string array and returns the array of values .
returns a string representation of the given { @code } .
adds a new member to the given list of members .
closes the member .
adds a status to the server .
adds a new member to the cluster .
checks if the cluster is running in the cluster .
returns the position of the specified members .
reset all of the given { @link } .
check whether the given node is a member of the specified node .
returns the candidate list of member ids for the given members .
checks whether the given candidate is a member of the given candidate .
checks whether the given { @link } is a member of the given { @code } .
checks whether the cluster is a replica of the cluster .
returns the cluster with the given member name and the given member .
validate the specified member .
returns true if the specified cluster is in the same order .
returns true if the member is a candidate .
returns true if the given cluster is a candidate cluster .
compare two .
<p > compare two objects . < / p >
checks whether the given member has a member of the given member .
find the index of the member group with the given member .
finds a member from the cluster .
adds a new member to the cluster .
remove a member from the cluster .
returns the id of the specified member .
returns a new { @code } that is the first argument of the specified { @code } .

given the first of the given buffer and the first hole to the current state .
/ * ( non - javadoc )
checks if the given directory is active .
check if the connection is active .
check if the connection is active .
checks if the specified file is a valid driver .
save the specified log file to the specified log stream .
writes the error correction .
returns the length of the buffer .


write a byte array to the byte array .
writes the given { @code arrayview } to a { @link } .
writes the id of a { @link } to a { @link } .
sends a request to the remote peer .
send a socket to the remote peer .
find the counter for the specified recording .
find the number of the for a given session id .
get the recording id for a given counter .
get the source string for the specified counter .

parses the given string .
/ * ( non - javadoc )
find the start position of the given .
create a new { @link shardedjedispool } with the given { @link } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the number of bytes to the given array of bytes .
reload the file and store the file and then discard the file and then discard the file and then discard the file and then discard the file and then discard the file and then discard the file and then discard the file and then discard the file and then discard the file and then discard the file and then discard the file and
returns the last updated partition for the specified pageid .
returns the last entry in the list of term entries .
{
creates a new that is in the specified chunk of the specified destination .
creates a new that is in the given { @link } .
adds a term to the server .
append the snapshot of the raft cluster .
log a {
/ * ( non - javadoc )
creates a new { @link } instance with the given { @code } and { @code } and { @code } .
creates a new { @link } with the given { @code } and { @link } .
closes the underlying connection .
puts the specified buffer into the buffer .
puts the given memory - compressed buffers into the buffer .
sends the specified { @link } to the { @link } .
this method is called when a client is received .
this method is called by the to write the chunk to the buffer .
returns the channel name for the given channel .
removes the from the given channel .

checks that the page size is valid .
returns true if the specified number of items is allowed to be updated .
returns the position of the specified { @code } .

this method is used to set the default frame header .
/ * ( non - javadoc )
checks if the given index is in the given range .
append the given range to the given buffer .
returns the index of the first occurrence of the specified range of the specified { @code long } .
write the raw bytes to the stream .
write the raw bytes to the stream .
returns the raw - byte of the specified buffer .
returns true if the specified partition is in the specified buffer .
main method to run the main program .
consumes the next chunk of the buffer .
allocates a counter - based copy of the given byte array .
find the number of counters in the database .
get the log file position for the specified counter .
checks if the specified counter is in the specified counter .
get the object for the specified counter .
converts a byte array into a byte array .
create a new entry in the given file .
offers the given amount of bytes to the buffer .
sets the channel to be used for the channel .
helper method to create a new .
reads the content of the { @code } .
write a chunk of a record to the specified buffer .
{
wrap a buffer
put a new byte buffer into the buffer .
writes the given bytes to the output buffer .
aborts the given buffer .
main method to run the crawl .
creates a new instance of { @link } .
closes the underlying connection .
poll the next chunk of data from the stream .
returns the next poll from the given fragment .
returns the next chunk of the specified item .
returns the buffer for the specified block id .
returns the raw data for the given block .
returns the position of the specified { @code } .
removes the channel from the channel .
creates a new { @link } with the given id and length .
creates a new { @link } with the specified id and size .
allocates a counter at the specified destination .
find the number of rbbi dequeue of the specified counter .
returns a snapshot of the given .
print the { @link } .
scans the given buffer and returns the index of the buffer if necessary .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the number of bytes that have been received .
scans the given buffer to find the next chunk of the given .
main entry point .
allocates a counter with the old value of the specified buffer .
creates a new {
prints the counters for the given output stream .
adds a subscription to the specified pool .
adds a new {
returns the context of the specified clock .
closes the buffer .

append a trailer to the buffer .
creates a new { @link } with the specified size .
adds a slab to the .
writes the given output stream to the output stream .
reset the playback state to the end of the file .
sets the byte value to be used for the specified index .
adds a new value to the pool .
returns true if the specified comparator is a positive integer .
initializes the page with the specified data .
initializes the page with the specified value .
initializes the { @link } .
set the bigquery projection for the given job .
sets the schema for the avro schema .
--------------------------------------------------------------------------------------------
{
returns a row of rows with the given { @link } .
set the { @link } for the given { @link } .
converts a {
convert a {
convert a map type to a map
expands a glob pattern .
creates a new { @link } .
creates a new { @code } with the specified index and row indices .
creates a row of ranges from the given range .
returns a row of ranges that are in the range of the ranges .
adds the ranges to the range .
returns the number of bytes that are in the specified range .
parse a pattern string into a sequence of glob patterns .

ends the end of the buffer .
{
returns a { @link filter } for the given { @link filter } .
gets a filter for the given filter .
reads all { @link } s from the given { @link } .
reads all lines from a file .
reads all data from the given { @link } .
reads all the available paragraphs .
reads all the paragraphs from the specified { @link } .
reads all the available paragraphs .
reads all files from a tiff file .
read all the files from the given file .
reads a footer and write it into a footer .
reads a file from the given file and returns the content of the given file .
reads a file from the given file and returns the content of the given file .
reads a footer file from the given file and returns the content of the given file .
opens a bufferedreader .
opens a bufferedreader with the specified options .
reads the next page row .
reads the next page from the sas7bdat file .
get the next dictionary from the current thread .
read the content of the dbf file .
adds a writer to the writer .
removes the writer for the specified writer .
update the size of the .
call to call the call to .
start the end of the buffer .
start the block .

write the pdf to the output stream .
write a data page to the output stream .
write the data to the specified data set .
write the data to the specified data set .
writes the chunk of the given column to the output stream .
close the current position .
ends the current block .
copy the contents of the specified input stream to the specified output stream .
write the content of the data file to the output stream .
merges files in a file and returns a new list with the same vocabularies .
adds a file to the directory .
writes a metadata file to the given file .
writes metadata file to output file .
merge the given - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
merges the two .
merges the two paragraphs of the given .
reads the value of the {
checks if the given schema is a valid schema type .
merges the given { @link schema } into a { @code aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa aaaa - { @link } .
merges two schemas into the left and right order .
merge two avro schemas .
combine the given schema into the given union .
combines two different types in the same type as the same type as the input .
returns the default {
creates a copy of the given schema .
returns the first element of the given object .
{
/ * ( non - javadoc )
convert a string to a string .


returns a map of the fields in the map .
/ * ( non - javadoc )
/ * ( non - javadoc )
{

writes the page to the output stream .
split the given string into a list of strings .
checks if the given path contains a path .
ends the end of the message .
start the field with the given field .
ends the end of the field .
start the .
ends the group of the group .
adds a binary binary value to the binary representation .
{
returns a {
/ * ( non - javadoc )
allocates a buffer size .
unpack a block of blocksize integers .
merge the given .

{
{
checks that the specified string is a valid double .
checks that the given message is valid for the given message .
{
check if a symbol is not a valid .
reads a { @link } from the given { @link } .
initializes the context properties for the specified key .
initializes this context .
sets the minimum value for the specified <code > / code > .
calculates the total number of blocks in the block .
creates a new { @link } for the given filters .
{
creates a new { @link } .
returns a new { @link } that can be used to perform a filter for the given filter .
checks that the given class is a reflective { @link runtimeexception } .
returns the statistics for the given type .
creates a new { @link } instance .
get a builder for a { @link } .
/ * ( non - javadoc )
returns the { @link schema } for the given schema .
checks if the type of the given type is a subtype of type t .
creates a new { @link } instance .
returns a new { @link } instance with the given { @link } .
returns the configuration of the {
invoke the method on the given object .
prints the string to the stringbuilder .
{
merges fields of the given { @code type } into a { @link } .

{
close the specified {
returns a filter for the current configuration .
opens the data from the input stream .
{
{
get all the indicators for the specified .
splits a given list of { @link } s into a list of { @link } s .
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >

create a new { @link } instance .
creates a new { @link } with the specified columndefinition and column { @link columndefinition } .
debug debugging .
debug debugging :
log a warning .
log a info object .

log a warning message .
sends a error message to the slf4j logger .

creates a new { @link } .
/ * ( non - javadoc )

serialize the message class to a proto .
creates a { @link } with the specified { @link } .
creates a { @link } for the given { @link schema } .

/ *
read the metadata file from the stream .
/ * ( non - javadoc )
sets the { @link } for the given { @link schema } .
adds a type to the class .
validates that the column s type is valid .
joins a string into a single string .
joins the specified objects into a single string .
joins the given array of strings into a single string .
split a glob pattern into a list of glob patterns .
returns the value of the { @code long } value that is the value of the { @code value } .
creates a new { @link } instance .
this method is used to create a new instance of the .
writes the data dictionary to the given file .
sets the output of the specified byte array to the specified output stream .
sets the output of the specified byte array to be a byte array .
returns a {
returns a { @link } that matches the given schema .
returns a new schema with the given schema and schema .
returns a {
converts a list of { @link } into a { @link } .

returns true if the given type is a valid .
gets the type of the type .
returns the { @link } for the given type .


get the offset of the
builds a {
write a data page to a file .
writes a long value to the stream .
skip the records in the input .
write an object to the object .
read a json object from the given { @link } .
adds a new page to the specified page .
adds the specified offset to the end of the page .
builds the index of the first page in the current page .
removes the specified key from the cache .
put a new value to the cache .
returns the value of the cached value for the given key .
write value to the schema
sets the glob patterns to be used for the given glob patterns .
write the file to the file .
returns the path of the file .
returns a uri for the scheme of the scheme .
opens a file with the given filename .


returns a {
writes an integer value to the stream .
{
filter a filter that will be applied to the given { @link } .
returns the index of the .
convert the dbref to { @link } .
converts a { @code } to a { @code } .


returns a group of group elements .
/ * ( non - javadoc )
{
{
get the map key - value pairs .
splits a split file into a split file .
this method is called by the method of the method .
skip skip bytes from the stream .
reads a signed 16 - bit integer from the stream .
reads a long value from the stream .
split a split file into a new split .
split this file into a new split .
{
{
creates a new { @link } instance .
returns a primitive wrapper for a primitive type .
creates a new instance of a primitive type .
create a new group builder .
create a new group with the group name .
creates a new builder for a group .
returns a new iterator that combines the { @code } and { @code } and { @code } .

/ * ( non - javadoc )
get fields in the given class name .
checks if the type of the given type is a subtype of type t .
{
write a struct
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
writes the number of coil sockets to the specified stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
writes the binary data to the underlying stream .
resolves the given { @link } and returns the { @link } for the given schema .
{
{
{
returns a list of files that are not in the classpath .
check that the files are not valid
get all files that match the given directory and all files in the given directory .
/ * ( non - javadoc )
creates a new { @link } .
reads the contents of the given byte array starting at the specified position in the given buffer . if <code > pos< / code > is <code > len< / code > bytes are read until <code > pos< / code > is <code > true< / code > .
reads the buffer of the given buffer .
reads the buffer of the given buffer .
reads a single buffer from the given input stream .
reads the buffer from the given buffer .

initialize the job manager .
{
converts a { @link field } into a { @link } .
compare the given schema type and validates the given schema .
compare the given schema and return the result .
creates a schema schema for the given schema .
set the value of the { @link } .
set the converter for the class .
merge the data of the given tuple with the given tuple .
create a new { @link } .
{
benchmarks writing the data to the output file .
read struct tables .
read a struct from the buffer .
/ * ( non - javadoc )
reads the content of the content of the given { @code } .
reads a byte array from the stream .
read the content of the stream .
write a number to the stream .
reads a little - endian int from the buffer .
writes a little endian - byte array to a stream .
reads a number from the given stream .
reads a number from the stream .
{
/ * ( non - javadoc )
sets the job schema for the given schema .
{
wraps the given { @code } into a { @link } .
converts a collection of { @link collection } into a { @link list } of { @link list } objects .
/ * ( non - javadoc )
create a new { @link } .
creates a string representation of the given json string .
create a new instance .
/ * ( non - javadoc )
create a new { @link } .
create a from the given { @link } .
creates a interceptor interceptor for the given { @link } .
parses the schema of a schema .
converts the time to a long .
converts the time to milli seconds .
get avro schema from the given header .
returns a biginteger that calculates the bigdecimal value of the specified number of bytes .

{
copy all files from the given directory to the given directory .
resets the state of the table to the new column .

registers a new monitor .
adds a to the server .
{
get the entry for the given user .
returns the user roles for the user .
build a filter for the given filter .
{
checks if the current login login login login to the login .

move all the entries in the config to the specified name .
copies all the members of the given { @code aaaa } to the specified { @code map } .
remove a config from the configuration .
login - side - login - login - level login - side - login - login - level login - side login - config we will call .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package private
get the upgrade of the given program .
creates a new instance of the { @link } .
try to perform a {
{

returns true if the package is a class name .
returns the for the given topic .
{ @inheritdoc }
{
returns the value of the {
helper method to add a list of errors to the output stream .
/ * public ( ) { ( ) { = . ( ) ; }
get all the files in the jar file .
this method is used to set the map of map files to be used in the map .
/ * public ( ) { = . ( ) ; . ( ) ;

create a field descriptor from the given field .
creates a { @link } for the given { @link } .
convert the field to a .
creates a {
checks that the server s is valid .
converts a { @link } to a { @link } .
create a field row .
/ * ( non - javadoc )
get the text from the text .
checks if the configuration is active .
resolve the { @link } for the given { @link } .
resolve the library s maven project and resolve the { @link } to the given { @link } .
add a {
validate the specified stage and validate the state of the .
initialize the select strategy .
process the response .
process the response .
parse the response .
add response headers to the response .
write response headers .
write response headers .
save the metadata of the storage .
initialize the .
configure the client to be used for the client .
/ * ( non - javadoc )
resolves the next page in the url and returns the result .
sets the offset offset for the source line .
process a request .
checks if the request is in the request .
parses the given string .

increments the offset of the source and the previous offset if there is no offset .

returns the current page of the current page .

add headers to the list of headers .
resolves the headers and headers to the given value .
process the input and return the result .
/ * ( non - javadoc )
converts a { @link } into a { @link } .
converts the { @link } to { @link } .
returns the credentials provider for the given {
returns the credentials for the given .

copies the current buffer to the given buffer .
returns the package name from the classpath .
removes the given { @code } from the given { @code } .

initialize the { @link } .
finds the next line of the given chunk of lines in the given chunk .
the chunk is responsible for creating a chunk that is responsible for the .
returns the connection to the pool .
closes the connection .
reads the input stream into the input stream .
reads the given byte array into the underlying stream .
skips the input stream until the input stream is reached .
reads the buffer from the buffer .
escape the string with the escaped string .
gets the control flow settings for the specified flow .
get the default {
generate the schema type for the given schema .
generate the type for the given field .
generate a type definition for the column name .
process the message .
compiles the expression to the given expression .

add a dictionary to the stream .
adds a dictionary to the dictionary .
{
the sliding window and then combines the data into a sliding window .

serialize a object to a string
deserialize a wddx object .
deserialize a file .
/ * ( non - javadoc )
writes the records to the output stream .
write a record to the record .

extracts the fields from the given field .

get the table name for the table .
get the column name for the field column name .
get the partition name for a given partition record .
get the partition name of a record .
checks if the record is a valid schema .
validates the given .
get the table name for the table .
get database database name .
returns true if the given record is a valid field .
get the record for the given record .
returns true if the given record is a location .
get the avro schema for a given schema .
get the naaccr format for the given record .
create a new { @link } .
create a new schema extractor for a table schema .
returns the scale of the specified field .
get the typeinfo map info for the given key .
generates avro schema for the avro schema of the given { @link } .
validate partition info partition .
generate a partition path for a partition .
builds a from a database .
get the cache info for the given .

handle all records in the batch .
get configuration data for the specified object .
builds a from the cache .
initializes the map of .

handle post post request .
initializes the context .
wait for the to be used .
read a read - only table table .
{

parse a long value from the local date format .
sleep

serialize the given json string to a json string .
deserializes a string from the file .
/ * ------------------------------------------------------------
initialize the { @link } .
processes the batch - write procedure to process the record .
/ * ( non - javadoc )
{
parses a string into a string .
initialize the keymanager .
check if field is valid .
returns a list of { @link } s that are not included in the { @link } .
checks if the field names are valid .
handle error messages .
handle error messages .
send a record exception handler .
parses the given jar file and returns the jar file .
>
get the from the given list of .
close the connection .
validate the config .
{
returns a label for the code in the given string .
verifies that the given { @code mapconfig } is a { @code map } .
checks if the given candidate is a valid .
creates a new storageprovider provider for the given key .
create a new client configuration .
creates a new instance .
creates a new { @link transfermanager } with the given { @link } .
calculate the forgot id of a remote server
reads the specified file and returns the result .
creates the operation for the given record .
write a document to the document .
write a single value into the json stream .

performs a given { @link } and returns the { @link } instance .
perform the actual initialization of the { @link } .
/ * ( non - javadoc )
{
decodes the given decoder and returns the result as a byte array .
returns the frame with the specified index and length of the specified buffer .
configures the login process with the given name and value .
login - side - login - this method is called from the login - time - config .
check if the worker status is not ready to be completed .
returns a new map with the specified { @code } .
commits the specified data to the specified object .
log a throwable .
returns the ratio of the given string .
close the connection .
creates a new { @link } with the given { @link } .
creates a new { @link } for the given { @link } .
registers a h2gis function .
/ * ( non - javadoc )
create a record .
create a record for the given id .
create a record for the given data .
clones this record .
/ * ( non - javadoc )
get the cached object for the given entity
get the cache of a bo .
put the given object into the cache .
get the jaxb object for the given { @link } .
returns the definition of the given name .
formats the column name into a string .


/ * create a mesh .
get pronunciation json data structure from the specified .
/ * ( non - javadoc )
releases the log to the specified writer .
get the file path for the given file .
closes the file system .
/ * ( non - javadoc )
get the number of operations that would be used for a given operation .
get the operation record .
returns the parameters for the field in the given column .
get the path field value of the column name
sort the graph and returns the result .
waits for a new event to be queued on the current thread .
returns the memory memory of the specified object .
creates a folder for the given folder and folder .
<p > . < / p >
retrieves the number of threads in the queue .
<p > the { @link } method to perform a lazy write operation that will be used to perform a lazy write operation that will be called by the { @link } . < / p >
destroys the given .

checks that the given client is a valid .
gets the last id of the .
process the queue .
handle exceptions .

returns the url for the login url .

handles the login request .
validate that the schema is not valid .
compare two files and compare them .
get the parser for the given file .
<p > . < / p >
get the from the process .
check if the given {
get the proxy user group user .
/ * ( non - javadoc )

ensures that the file exists in the directory path .
{
read sql statement .
get the catalog from the database .
{
{
{
returns a list of keys for the given table .
get the author of the catalog .
write a batch of records to the given schema .
write a batch of commands to the database .
write a record to the database .
<p > . < / p >
returns a map of partition keys to the partition .

generate a new record .

processes the specified group .
returns true if the passed version is a valid version of the { @link } .
main entry point for the command line .
marks the current thread .
configures the httpclient for the given client .

resolves the given headers .
get the http method with the given { @link httpmethod } object .
adds a new { @link } to the description .
get the field value .


loads a schema from the registry .
register a h2gis schema to the database .
loads a {
retrieve the cql3 id of the contingency schema .
loads the schema from the registry .
writes the schema id to the stream .
decodes the given data as a { @link } .
returns a default { @link } for the given schema .
process the message .
log all of the details of the given log .

initialize the provider s configuration .
processes the response and returns the response .

reads the records from the input stream .
compares this version to the specified range .
initializes the { @link moduleinfo } for the given { @link } .
{
{
adds a directed edge to the graph .
serialize a map to a map
reads a map of string from the given map .
send a report to the server .
get reports from a report .
checks if the given {
writes the data to the output stream .
reads a cluster file from the stream .
create a new { @link } .
delete the given {
copy a file to a destination file .
this method is called when the error is closing .
this method is responsible for creating a new archive .
returns the reader for the file .
unlocks the specified reader .
sets the authentication token .
adds a header to the response header .
parse a date string from the string .
/ * ( non - javadoc )
selects the content of the content type .
<p > escape a string that is a valid escape escape sequences . < / p >
serialize a object to a json string .
deserializes a json string into a byte array .
gets the client config object .

get the metadata for the table .
creates a { @link } for the given { @link } .
creates a new event builder event .

returns the number of code in the given code .
add a job to the classloader .
add a job to the classpath .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
<p > process a request . < / p >
checks if the given index is a sub - collection .
checks if condition evaluates to true .
{
/ * ( non - javadoc )
get the offset of the file .

returns a set of all the files in the directory .
returns a map of all the files that are not found in the classpath .
returns the classpath urls that are not found in the classpath .
get the parallelism of the partition .
returns a {
executes the given query .
<p > . < / p >
creates a map of fields that are not a field .
returns a new list with the same value as the field value .
returns the description of the table .


checks if the field is a json field .
get the schema for a table .
returns a list of properties that are not included in the properties file .

initialize the list of .
get the topic for the given record .
formats a date string to a date format .
/ * ( non - javadoc )
initialize the for the specified client .
returns a {
evaluates the expression against the specified field .

releases the lock file to the specified persistent storage .
/ * ( non - javadoc )
returns the output stream for the specified log file .
commits the specified log to the underlying file .
checks if the file is in the specified directory .
{
returns the { @link } for the given { @link } .
validate the environment variables .
validate the services that are not in the given list of services .
create a new { @link } instance .

create a new { @link } .
create a group of aggregators that will be used to create a group of aggregators .
starts the start time of a window .
{

returns the scale of the given field in the given field .
acquires a { @link } instance from the given { @link } .
release the cache .
closes all the .

/ * ( non - javadoc )


{
/ * ( non - javadoc )
{
stops the cluster .
returns a { @code } which is the number of queued outstanding rpcs .
creates a batch of files .
create a statement to be used for a statement .
initialize the .
{
sets the configuration string .
process the record .
checks if the given key name is a lookup key .
get the properties of the kafka consumer
/ * ( non - javadoc )
returns the next chunk of the queue if there is no available queue .
remove the queue items from the queue .
returns the first { @link } .

returns true if the table is not a valid data event .
read a single read record from the specified .
reads the line information from the input stream .
/ * ( non - javadoc )
/ *

/ *


logout the logout logout
updates the changelog file .
update the configuration properties of the specified model .
/ * ( non - javadoc )
/ *
ensures that the given { @code } is null or empty .
creates a schema schema field .
creates a schema type schema for the given field type .
/ * package private
returns the number of decimal places to be used for the given field .
returns the default { @link } for the given { @link schema } .
<p > . < / p >
compares the given file .
returns the index of the group at the specified index .
returns the names of the group names that match the given name .
returns true if the string is a valid character .
returns true if the given string is a valid escape character .
returns true if the given character is a string .
returns true if the specified character is a class .
returns true if the string is a permissible character .

extracts the group info from the group name and returns the result .
replace the string with the specified regular expression pattern .
replace the index name in the string representation of the string .
builds a pattern from the given string .
process the response .
method to add a list of mbeans to the list of objects .

returns a list of all the schemas in the specified schema .

returns the offset of the file .
returns true if the current position is a file .
initializes the .
creates a new instance of .
extracts the message from the input stream and returns the output stream .
opens the record reader for the specified stream .
convert a string value to a number .
read a part of a buffer .
parses the given offset and returns the result .

/ * ( non - javadoc )

get the qualified name of a table name .
returns the name of the table name for the table name .
populate the for the given .
get the table tables for the given config .

creates a default field mapping table and its column name .
create custom field mapping for fields

get the table name for a table .
sets the fields in the given record to the given index .
handle exception thrown by the jdbc connection .
get the status code for the given record .
classify the records and return the records in the database .
process the process .
prepare the batch of .
this method is called when the batch is executed .

create a new { @link } instance .
execute the given record .
{
{
builds a query parameter for the given query string and returns a pair of strings .
returns a list of partition ids for a given partition .
converts a string into a map .
returns the formatted string representation of the given column .

validates the given table and returns the result .
creates a new { @link } instance .
creates a new { @link } for the given { @link } .
registers a bundle with the given bundle name .
adds a new bundle to the bundle .

reads the contents of the given stream and returns the result as a byte .
returns a list of {
get query parameters
/ * ( non - javadoc )
returns the text of the list of strings that are not included in the list .
method to get the operation for the given row key .
converts the given string to a string .
scans the given file and return the result .
returns the file contents for the current file .
returns whether the given name is a valid .
checks if the given number of versions match the given version .
/ * initialize the and .

main method to create a {
/ * ( non - javadoc )
{

{
{
process the query .
validate that the list is valid .
escapes the string literal value .
create a for the specified connection .
create a for the specified connection .
returns a instance that should be used for the given config .
extracts the groups from the data set .
/ * ( non - javadoc )
creates a new instance of the
/ * ( non - javadoc )
set the fields to the fields in the given record .
/ * ( non - javadoc )
creates a { @link } that will be completed with the given { @link } .
/ * ( non - javadoc )
creates a gauge that will be used to combine the results into a new instance of the given type .
removes a { @link metric } from the given pipeline .
{
{
generates the header and return the value of the <code > config< / code > .
validate the record .
checks if the given file is a valid path .

get the input stream of the given input stream .
get a stream from source file .
writes the avro data to the output file .
{
validates the package name .
validates the resource name .
checks if the given record is a valid .
checks if the given field is a valid { @link } .
checks if the given input field is a valid input field .
checks if the given field is a valid input field .
decrypts a field .
create a text field from the signature .
generates a batch of files and the data for the given batch .
initializes the .
handle error reporting .
returns true if the subgraph is subsumed by the graph .
sets the { @link } for the given pattern .
append a pair of string representation of this matcher to the given string builder .
{
replaces all occurrences of the given occurrences of the given replacement string .
get the properties object .

escapes the path escape sequences of a path and escape it with backslash and escape .
unescapes the path in the path and unescape .

validate that the schema is not found in the database .
returns the global variable name for the given variable .
this method is called when the status of the status is a json status .
create a start event for the given field .
create a new event .
get all references to the given metadata .

extract the value of a field from the given object .

execute the query table .
execute query .

execute the database and return the result .
get a list of the given qualified name .
execute the query and executes the query .
executes the query and executes the given query .
/ * ( non - javadoc )
execute clientpreparequery batch .
process the result .
get the current trigger s data .
stop the pipeline .
method to be called from a consumer .

convert a record to a string representation .
get the value of a field value .
check the ocsp authentication port is not valid .
handles a failed error .
handles the error message .
sets the set of rules in the given record .
sets the document to be used for displaying the record .
helper method to create a new instance of a .
returns the value of the {

initializes the .
returns true if the specified number of transactions is a valid .





sets the state of the pipeline to be used in the pipeline .
returns all user attributes of the given map .
set the user attributes to be used in the user api .
login - sensitive method to perform login on the login .
logs the login log .
sets the configuration for the .
replace the path variables in the given path .
ensures that the {

{
{
executes the given callback .
main method .
get the path from the file .
renames the path to the path .
/ * ( non - javadoc )
/ * ( non - javadoc )
close the file .
/ * ( non - javadoc )
{
sets the path separator separator separator .

converts a collection of collection into a string array .
returns true if the given string matches the pattern .
set the value of the stringvalue to the specified value .
returns the map of chunk objects that are used to read the file .
/ * ( non - javadoc )
waits until the next chunk is available .
get the map of tiles in the map .
define a new { @link } .
create a new { @link } instance .
/ * package private
configures the http authorization with the given parameters .
get access to the access token .
get the value of the specified metrics .

main entry point .
/ * ------------------------------------------------------------
decode headers .
decode the form data into a multipart form .
processes the query string and returns the result as a string .
/ * ------------------------------------------------------------
returns the position of the first occurrence of the specified positions .
returns the body size for the header of the request .
save a file to the file .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * public void ( ) { return . ( . . . getinstance () . () . getinstance () . () . () . () . () . () . () . () . () . () . () . () .
returns the mime type of the file .
/ * ( non - javadoc )
/ * ( non - javadoc )
stops the server .
add a route handler to the server .
sends the given output stream to the output stream .
send a body to the output stream .
creates a new response with the given mime type .
creates a new response body for the specified response .
creates a new response response .
creates a response body for the response .
returns true if the input is a gzip - byte .
closes the underlying socket .
encode a byte array into a base64 - encoded string .
get the payload payload .
read the payload information from the payload stream .
/ * ( non - javadoc )
set a cookie to be sent to the specified cookie .
removes all requests from the queue .
remove a session from the session .
/ * ( non - javadoc )
/ * ( non - javadoc )

encode a string to base64
sets the name of the domain name .
sets the name of the table name .
/ * ( non - javadoc )


process the request .

{
/ * ( non - javadoc )
{
returns true if the request is a valid authorization .
returns the principal name for the user .
remove the given .
returns the session types for the specified resource type .
resolves the principal name from the session .
{

get a from the session id .
{
returns the name of the { @link } for the given node .
returns the parameter types for the given { @link } .
{
/ * ( non - javadoc )
inits the server .
returns the current transaction transaction .
returns the value of the value <code > { @code } < / code > .
{
{
returns the list of entries that are not in the list .
/ * ( non - javadoc )
returns all the servers that are not loaded .
validates the credential of the credential .
check if the server is enabled .
initialize the .
initialize the .
binds the specified component to the specified component .
resolve a string to a class .
remove all unused keys from the map .

check if the value of the specified object is a valid .
reads the {
/ * ( non - javadoc )
checks if the current thread is a valid .
lock the lock manager .
increments the number of locks that are currently locked by the given number of bytes .
adds a module to the deployment module .
add all modules to the given modules .
adds a service to the service registry .

{
{
/ * ( non - javadoc )
returns the method for the given method .
this method is called from the { @link } method .
authenticates the authentication method .
loads a { @link } from the given { @link } .
load a from the given provider .
{
get the timer for the given service .
this method is used to determine the graph of all classes in the module .
create the for all modules .
register a deployment bean archive plugin .
creates a new .

get the list of eips from the


resolves the given { @code addon } and { @code } and { @code } .
{
get the available for the given operation .
this method is called by the method of the method .
parse the given xml element
parse the xml element
creates the builder for the given .
checks if the given bean is a valid .
get the address path for a given operation .
sets the address path of the operation to be used in the model .
returns the { @link org . modeshape . jcr . . } .
checks if the given operation is a member of the given operation .
creates a { @link } for the given { @link list } .
creates a { @link } instance .
creates a new { @link } with the specified name and index .
creates a read - only attribute that is a primary operation that can be used to read a single attribute .
creates a new { @link com . google . rpc . . } .
creates a new { @link } instance .
returns the value of the value in the context .
adds a new url to the builder .
removes the url of the given url .
{
loads all providers providers from the provider file .
{
{
returns the request uri for the request .
gets the list of { @link } s for the deployment .
/ * ( non - javadoc )
configures the with the given .
/ * ( non - javadoc )
returns the name of the class that is the same as the class name .
{


returns the endpoint resource adapter for the given resource adapter .
create a security context for a domain .
sets the default context .
returns a {
clear the threadlocal security context .
sets the .
returns a new {
process the deployment .
returns the for the deployment .
create a description of a description .
installs the given service to the given service reference .
installs the given service to the given service .
/ * ( non - javadoc )
inject a property to a reflective object .
returns true if the given type is a legal java type .
finds a method matching the given type .
find a field in the database .
process the invocation method .
{
/ * ( non - javadoc )
initialize the options .
create a description of the specified object .
{

/ * ( non - javadoc )
create a standalone instance from the given host .
collect the environment variables .
registers the given resource adapter to the given resource adapter .
unregister the { @link } for the { @link } .
{
{
/ * ( non - javadoc )
{
builds the app context for the jawr .
build message info .
returns a subject that is a subject that is not null .
read the attribute name from the given { @code namespace } .
read the value of the specified { @code string } .
reads the attributes attributes from the given { @link attribute } .
{
/ * package
registers the given { @link } .
create a strategy that is a method that is a method that is a method that is a method that is a method that is a method that creates a method for a method .
writes a parameter to the output stream .
read a { @link } from the given { @link inputstream } .
returns true if the given exception is a member of the given exception .
convert the object to a remote object .
{
{
returns a set of all interfaces implemented interfaces that are declared in the class hierarchy .
returns a copy of the { @link } class for the given class .
inserts a reference to the specified entity .
writes all the to the xml .
resolves the order of the components in the given order .
create a security context for a domain .
sets the default context .
{

returns a string representing the resource bundle for the given resource .
get owner lock by the owner of the transaction .
release the given instance .
release the lock manager .
add a new path to the zip file .
add a file to the classpath .
add a path to the list .
add a string to the classpath .
add log to the log .
creates a thread - safe thread .
the main module is a module with the following :
/ * package
gets the view view .
invokes the given {
returns the { @link } for the given { @code method } .
returns true if the method is a method .
create a new { @link } .
/ * ( non - javadoc )
get the for the given name .
{
{
{
{
returns the domain name for the domain .
checks if the given is a secure access .
returns the { @link } for the specified endpoint .
returns the for the given endpoint .
returns the first valid value for the given domain .
/ * ( non - javadoc )
get the resource from the given phase .
{

returns the absolute name of the specified resource .
returns a jndi name for the given name .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the transaction is in the transaction manager .

get the connection factory .
returns the last component of the last name of the given name .
checks if the specified name is empty .
checks if the given name is a { @link } .
constructs a { @link } with the given { @link string } and { @link } .
constructs a { @link } with the given { @code message } and { @code } .
helper method to create a { @link } instance .
returns an enumeration of the enumeration of the specified collection .

/ * ( non - javadoc )
handles an attribute value .
/ * ( non - javadoc )
<pre > { @code > > > > > > > / pre >
parse the connection attributes from a remote process .
parses the connection properties and returns the connection to the pool .
parses a connection to a specific connection .
parse the { @link } to read the { @link } .
create a new instance of the given instance .
creates a new instance of { @link } .
create a new instance of the instance .
stops the server .
create a new { @link } instance .
returns the virtual file loaded from the classpath .
resolves the resource name from the given resource .
{
checks if the bean is a bean .
creates a new { @link } instance .
initialize the { @link } instance .
/ * ( non - javadoc )

{
creates an entitymanager factory .
returns a list of url patterns that match the pattern pattern .

get the list of from the .
get all security constraints for the given
get the login config for the login configuration .
get the list of parameters that are not supported .
get the for the given <code > / code > .
gets the servlet parameters .
create a new { @link } .

create a new servletconfig servlethandler .
create a new instance from the jawr config .
factory method for creating a new { @link } .
create a new user data constraint .
create a new param value .
create a new param value .
{
{
parse the .
registers the {
create a copy of the given component .
returns the for the given ssl client .
create a new instance from the specified client .
creates a for the given and .
create a new { @link } instance .
/ *
create a object from the given object .
create a new transport instance with the given host name and port
create the target target for the specified .
creates the target target if the current value is a default value .
returns the object .
creates a byte array from the given byte array .
encode a context variable into a byte array .
decode a string to a user s data .
decodes the specified byte array into a byte array .
get the for the given
/ * ( non - javadoc )
process the deployment list .
resolves the injection injection validation for the given resource .
/ * ( non - javadoc )
returns the name of the { @link operationcontext } for the given { @code name } .
{
resolve attribute value .
{
reads the xml from the xml file system .
{
returns the pattern type for the given pattern .
build a map of
associates this object with the specified id .
checks if the given connection is currently active .
checks if the connection is currently running in the registry .

finds the deployment hierarchy of the given { @link } .

{
returns true if the given annotation is annotated with the given annotation .
{
{
{
/ * ( non - javadoc )

called when the transaction is completed .
/ * ( non - javadoc )
notify the listener that the { @link } is not called .
release the current state of the current thread .
{
{
gets the { @link } for the given { @link } .
creates a list of { @link } s .
{
{
<pre > {
<p > . < / p >
returns the reference of the .
{
{
process the annotations of the given class and the given class and the class .
{
returns all classes that are not already loaded .
returns true if the given class is a grails - class .
returns true if the given remote service is a remote - wide filter .
returns true if the specified unit is a default source .
checks if the given properties is a valid entity .
checks if the given { @link } is a valid { @link } .
returns true if the given entity is a valid .
{
converts the specified object to a object .
create a from a server .
create a instance .
initialize the method .
set the active .
initialize the .
bind a jndi lookup .
bind a name to the given object .
store the specified object into the database .
add a name to the object .
/ * ( non - javadoc )
rename the name of the given name .
rename a name
returns the name of the object .
destroy the object .
create a new characterset with the given name .
/ * ( non - javadoc )
returns a new <code > / code > that is the name of the component .
returns a name of the name of the given prefix prepended with the given prefix .
add a value to the environment .
register a vetoablechangelistener to the specified controller .
register a listener with the given name and id .
configures the { @link } for the given component .
{
validates the default values of the given parameter .
gets the list of converters that are not included in the classpath .
get all the endpoints from the classpath .
checks if the given method is a subclass of the given type .
looks up the default value for the annotation .
validates the given method type .
{
{
registers a new { @link } .
gets the entity .
returns the status of the status code for the given status code .
checks if the given attribute name is a valid attribute .
/ * guarded
create a reasoner factory for all registered .
/ * ( non - javadoc )
add a to the cache .
stop the cache .
/ * ( non - javadoc )



checks that database database is clean up .

sets the node name for the given statement .
marks the given <code > pagecomponent< / code > to the <code > / code > .
checks if the given <code > / code > is a <code > / code > .
reads a single <code > inputstream< / code > .
writes the given object to the output stream .
writes the exception to the output stream .
/ * ( non - javadoc )
create a description of the given type .
reads the xml element from the xml stream .
looks up a lookup by looking up the first occurrence of the given depth .
{
converts a {
sets the .
returns the for the given object .
called when a is created .
call the method .
returns the current value of the given request .
{
process the deployment inheritance to be used in the deployment process .
process the phase of the deployment process .

check if the given class is a reloadable type .
insert a primitive type .


returns true if the specified string is a valid nmtoken
returns true if the character is a character .
returns the code for the given class .
returns the signature for the given class .
returns the signature of the method signature .

{
returns a { @link } for the given name .
binds the to the service .
/ * ( non - javadoc )
create a { @link } instance for the given { @link } .
this method is called by the framework to create the .
creates a new entitymanager manager for the given entitymanagerfactory .
{
returns true if the given value is a map .
associates the specified value with the specified key in this map . if the given value is null the value is returned .
removes all entries from the specified map .
converts the into a { @link } .
/ *
returns a class name for the given class name .
checks if the given { @code } is a { @link } .
returns a map of timer ids to be used for the given client id .
get the directory for the given resource .
{
creates a with the given pattern .
{
returns whether the given component is a { @link } .
registers a listener for the specified target .
remove a listener from the given listener .
/ * ( non - javadoc )
autoclose the { @link closeable } instance .
create a subject from the subject .
create a subject for the authentication .
create a subject for the authentication flow .
/ * ( non - javadoc )
adds the subject to the subject .
creates a connection factory which is used to create a connection factory for the given context .
get datasource from the { @link } .
process the process .
create a factory factory method for creating a new instance of the given object .

/ * ( non - javadoc )
add a to the container .
loads the class from the given class loader .

appends a substring to the end of the string builder .
/ * ( non - javadoc )
stop the monitor .

returns the value of the {
get the { @link } for the given { @link } .
gets the service name for the given name .
create a new { @link } instance .
create a saxparser to be used for the given { @link isvuecomponent } .
returns the reference to the .
returns a list of { @link } objects that are currently associated with the given method .
add a new {
register a .
returns a list of client interceptors that are currently enabled .
add a hook for a specific class .
add client to the given hook .
puts the data into the data store .
create a { @link } instance .
/ * ******************************************************************** / * internal factory methods
remove all the children of the given resource .
creates a { @link } instance for the given { @link } .
returns the list of available { @link } objects .
returns the list of all available { @link } .
returns the endpoint name for the given request .
get the class name from the servlet container .
get the servlet name from the servlet .
gets the value of a { @link com . google . common . io . } .
get a single attachment from a given { @link org . apache . gobblin . xml } .
create a from the given .
returns the component with the specified name .

returns the root context root for the given context .
{
{
get the configuration properties of the given {
process the given properties .
checks if the client is in the specified properties .
{
{
{
{
{
{
returns the classpath resource for the given path .
{
pops all the children of the given stack .

register a .
/ * ( non - javadoc )
process the module .
process the annotations .
update the server configuration for the specified name and value .
{
{
process the given { @code } .
starts a new .
returns true if the given method is a public method .
returns true if the specified class is a public nullary field .
/ * ( non - javadoc )
search for a given name .
returns the interface that is used for the given interface .
/ * ( non - javadoc )

decode a string to a string .
decodes a string into a string .
encode a string into a string .
adds a deployment to the deployment model .
creates a new endpoint with the given name and endpoint .
creates a redeploy deployment .
{
create a new { @link mutationstate } from the given token .
checks if the given deployment is a descendant of the given deployment .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
sets the next timeout .
/ * ( non - javadoc )
{

sets the timer state for the given state .
merge the specified filters .
returns all methods granted the methods granted .
/ * ( non - javadoc )
create a description of a module .
{
configures the and the .
/ * package
returns a list of {
adds a remote site that is used to visualize the current .
add a to the dropins server .
add a component to the component .
add a server - side server manager .
checks whether the current value is a valid .
get all the container interceptors for this container .
set the specified method for the given class .
set the {
set a new .
returns whether the method is a public method .
create a { @link } .
{
gets the service name from the given { @link } .
returns the string representation of the class for the given class .
parse the given class from a string .
creates a writer for the given class .
returns the reader for the given class .
returns the writer for the given class .
processes the interceptor .
check that the reader is not empty .
{
returns true if the given operation is currently running in the context of the given operation .
creates a new { @link } instance for the given { @link } .
get the bean info for the given class name .
returns the object that is used to determine the given class .
get the type of the class .
returns the type of the given type .
returns a {
/ *
create a { @link } instance for the given key .

{
returns a {
returns the string representation of the component .
returns a {
converts a string to a string .
parse the component name into a .
<p > escape string with the character at the end of the string . < / p >
{
shutdown the .
returns the object that is used to access the object .
/ * package
authenticate with the given username and password .
returns true if the given type is a subtype of the class .
{
/ * ( non - javadoc )

configure the bean s bean .
sets the bean for the bean .
adds a new connection to the connection .
creates a new instance of { @link } .
{
returns the {
convert a class name to a name .
converts the given class name to a class name .
returns all classes that are not found .
returns the class name for the given name .
{
check if the current uow is a uow .
{
/ * ( non - javadoc )
/ * load the from the .
/ * package
creates a bean for the deployment class .
creates a { @link } instance for the given { @link } .
returns the parameter name of the given method name .
validate the descriptor for the given descriptor .
{
/ * ( non - javadoc )
create a new war .
create the {

creates a list of { @link } s .
create the jawr servlets .
create security constraints for the security provider .
create login config object
/ * ( non - javadoc )
returns the {
{
processes the { @link } for the given { @link } .

<p > return the id of the identifier of the specified id . < / p > <p > if the id is not found in the list then the id of the returned string will be returned . < / p >
returns the id of the object id .
returns the name of the .
/ * ( non - javadoc )
{
{
{
{
{
{
clear all registered handlers for the given deployment .
add a { @link } to the specified { @link } .
find the parent classloader for the given class .
reads the xml element of a xml element
reads the xml element from the xml stream .
process the attribute of the .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * public ( ) { = . ( ) ; }
/ * public void ( ) { = . ( ) ; }
/ * perform an xml - tree .
parse the xml document from the given { @link node } .
reads the configuration from the xml stream .
parse security - config secret .
parse the given { @code node } and parse the { @code } to the specified { @code servletrequest } .
parse the properties from the xml properties
parse the given property value .
parse the given property name into the property value .
parse the attributes attributes from the given xml node .
writes the given properties to the given node .
/ * ( non - javadoc )
write the configuration properties to the given .
write the configuration data to the given writer .
writes the given properties to the given xml .
write properties .
writes all attributes to the given xml attributes .
returns true if the node is a child of the given node .
{
returns a list of { @link } s that are not in the deployment hierarchy .
returns a list of that will be used to determine the deployment hierarchy .
{
perform the actual work of work .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
add the service to the deployment classpath .
create a new { @link } instance .
/ * create a new persistence unit service .
sets the annotation for the given { @code modulename } .
get a {

/ *
the method is called by the osgi framework .
add a to the server .
get the resource from the given resource .
{
creates a new instance of the { @link } .
build the metadata data for the given deployment .
build the meta data for the endpoint and endpoint .
validates the given operation against the given operation .
<p > . < / p >
returns the application name for the deployment .
returns the name of the deployment .
returns the reference of the .
create a description for a given attribute .
/ * ( non - javadoc )
parse the bean .
returns the segments that should be used to encode the given source value .
handle exception exceptions thrown by the exception .
sets the service service .
registers a new visit event .
get the analysis analysis .
/ * ( non - javadoc )
create a work unit for the given class .
get the package name of the package .
converts a string into a string .
converts a long into a string .
returns true if the given method is a valid getter . <p >
checks if the given method is a public method .
checks if the given method is a valid .
analyze fields .
this method is called by the to find the .
introspects the given class descriptor .
returns the name of the .


/ *
runs the operation .

calculate the hashcode of the class code of the class .
returns the string representation of the specified name .

/ * ( non - javadoc )
{
/ * public void ( string string ) { ( ) ; }
parse the default context .
processes the attributes of the specified attribute .
loads a module from the module .
main method .
/ * ( non - javadoc )
create a description of a description .
creates a { @link } for the given type .
{
{
{
{
/ * ( non - javadoc )
writes the given attribute to the given { @code } .
registers the given object .
{
invoke the specified method .
invoke the specified object using the given key and the given object .
authenticates the authentication method .
creates a {

/ * create a remote session .
returns destination name for the specified destination .
{
/ * ( non - javadoc )
{
stops the connection .
/ * ( non - javadoc )

checks if the given class is in the specified metric .
registers a endpoint handler for the endpoint .
/ * ( non - javadoc )
creates a new policy for the specified policy .
generate a method snippet for the given class .
generate code for the class .
create a new object .
compile a compile method .
returns a { @link } that is the same as the { @code } .
returns the name of the job .
{
returns the uri of the uri .
resolve the vcs url .
<p > . < / p >
process the url to the .

<p > resolve the object to resolve to the component . < / p >
<p > looks up the object name from the locator to the specified name . < / p >
<p > . < / p >
/ * ( non - javadoc )
bind the component to the specified object .
bind a jndi name to the name of the object .

/ * ( non - javadoc )
rename a name
rename a name .
returns the { @link } for the specified name .
destroy the remote instance of the object .
/ * ------------------------------------------------------------
create a new { @link } .
create a new { @link } .
<p > . < / p >
<pre > properties : ... value = value < / p >
<p > . < / p >
adds a new { @link } to the given { @link } .
/ * ( non - javadoc )
{
{
/ * ( non - javadoc )
write the entity bean to the given writer .
writes the cluster versions to the given writer .
writes a { @link } to the given writer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )


get the authentication domain name .
removes the security domain from the map .
/ * ( non - javadoc )
create a new domain security domain .
create a new domain with the given security domain name .
create the authentication manager for the given security context .
create authorization authorization .
create a instance .
creates a new trust manager identity for the given domain .
create a new instance .
sets the subject to the jawr .
gets the type of the given value .
creates a new instance of the specified class .
create a new instance of the class with the given name .
create a new instance of the class with the appropriate type .
{
stops the {
main method to parse the command line arguments .
parse the specified { @link } and returns a { @link } .
creates a typereference view of the given type .
wait for the service to be used .
computes the password from the specified key .
initializes the security manager .
start the login session .
adds a new user attribute to the vault .
adds a new user attribute to the vault .
checks if the given key is vault .
removes a { @link healthcheck } from the specified vault .
returns the value of a specified attribute .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
this method is called when the instance is used .
asserts that the value is not null .
get the deployment service name from the deployment .
registers the given { @link } for the given identifier .
insert a value into the value .
{
returns true if the given permission is a permission .
returns whether the given name is a valid rule .
returns the full list of actions that have been set for the given action .
unauthenticated code that is called when the caller is used for the .
returns true if the given name is a valid name .
returns the name of the last - modified - time .
{
send notification notification to the notification state .
{
{
creates a new entitymanager for the entitymanager .
{
checks if the given class is a sarl tool .
invoke the method with the given method name and controller .
/ * ( non - javadoc )
get the value of the type of the given type .
gets the service name for the given service .
get all interceptors that are associated with this .
get the interceptor class for the given class .
add a method to the interceptor .
set the method invocation .
adds a method to the interceptor chain .
set the { @link } for the { @link } .
add the specified dependency service to the list of service paths .
returns a list of { @link } objects that are associated with the given method .
returns a list of interceptor interceptors that are associated with the given method .
add a factory to be used for the given component .
add a list of methods to the list of registered listeners .
add a method to the given component .
register a listener for the given interceptor method .
register a new { @link } .
returns a list of interceptor that will be used to run the interceptor .
adds a new interceptor to the given class .

create a new interceptor for the given interceptor .
returns a {
add a new interceptor for the given priority .
returns a list of {
add a new .
returns a list of {
add a new interceptor for the given interceptor .
/ * ( non - javadoc )
/ * ( non - javadoc )
obtains the module class for the given class .
get the domain type for the given class .
finds the resource with the given module name .
add a list of to the list of children .
set the to be used when the recovery log is used .
accept the { @link } instance .
gets a service that is a service name .
gets a module service name .
create a for the given application .
create a new { @link } instance for the given application .
/ * create a new instance .
/ * ( non - javadoc )
returns the raw text of the given xml text .
/ * ( non - javadoc )
inject the { @link } to the { @link } .
gets the { @link } for the given { @link } .
/ * ( non - javadoc )

create a description for the specified object .
get the value of the property .
get the value of the property .
{
creates a { @link } for the given { @link } .
reads the configuration from the xml config xml element .
{
{
{
{
{
{
gets the operator for a deployment .
adds a new component to the list of views .
adds a new message to the given destination .
returns all components of the specified view .
returns all components that are not included in the specified component .
returns the components of the specified view .
resolve a { @link } and returns the { @link } .
creates and builds a builder for a builder .
builds the instance for the given .
builds a from the given .
<p > . < / p >
renames the attribute value .
gets the connection principals .
creates a state cache with the given key and returns the result .
release the connection to the given state .
returns the reference to the specified class .
invoke the method with the given method name .
get a domain security domain .
load the from the database .
check the version of the version .
finds the version of the version .
{
{
/ * ( non - javadoc )
get the instance of the instance .
returns the interceptor method that is used to intercept the method to invoke the method to invoke the method to invoke the method to invoke the method to invoke the method to invoke the method to invoke the method to invoke the method to invoke the method to invoke the method to invoke the method to invoke the method to invoke the method
destroy the process .
configures the { @link } for the given { @link } .
{
populate the .
/ * public static <t class ( class class ) {
get the type code of the given class .
add a code type to the class .
get the property name .
returns the value of the <code > / code > object that represents the <code > / code > property .
/ * create a object from the given mbeaninfo
ensure that the given name is a valid package name .
add a new container .
add attributes to the database .
add a to the
adds the interfaces implemented interfaces .
add a to the list of objects .
add a class to the class .
adds a new array to the array .
add the interface to the .
add the given value to the given value .
create a from the given exception .
returns the type of the {
register a new mapping with the specified name and name .
checks if the given { @link } is not a valid { @link } .
{
{
{
{
/ * ( non - javadoc )
configures the {
checks if the given method is a valid .
checks if the given method is a sync object .
method to enter a method to the declaring type .
method to call . ()

get all components that are not in the classpath .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
create timer timer .
creates a timer for a given schedule .
get the timer object that will be used to retrieve the object from the timer .
updates the timer timer .
suspend the given timers .
restore the specified time period from the given time .
start the timer .
checks if the given method is a privileged actor .
schedule a timer to be used when a delay is expired .
cancels the specified scheduled task .
returns the for the given .
/ * ( non - javadoc )
checks if the timer is a timer .
determines whether the given class is a subtype of the given class .
returns the default default default implementation of the class .
returns a list of all interfaces implemented by the given class .
processes the group and apply the policies to the cluster .
returns the parameters of the specified map .

process the and .
creates a new { @link } with the specified name and subsystem .
creates a deployment service service name .
converts the raw type to a class .
converts a value to a string .
returns the array of strings that are not in the array of values .
find a method in the given class hierarchy and returns the best result .

checks if the given string is a valid type .
returns the persistence unit of the persistence unit .
<p > . < / p >
returns true if the given {

add a properties to the property list .
add a properties object to the properties file .
registers the { @link } for the { @link } .

closes the { @link } .
<p > . < / p >
handles the case of an element .

/ * ( non - javadoc )
{
returns the enum value for the given element .
returns a boolean value that is a boolean value .
returns the value of the given { @code value } .
cast value to a value
-------------------------------------
-------------------------------------
returns the string representation of the given value .
returns a property value for the given property .
returns a property list with the given value .

returns a optional enum value .
create a { @link } from the given { @link } .
create a read - only {
create a new operation instance .
returns the roles that the given {
skip over the specified amount of bytes .
/ * ( non - javadoc )
check that the given element is not empty .
invoke the method with the given listener .
invokes the given with the given name and arguments .
/ * ( non - javadoc )
{ @inheritdoc }
invoke a short function .
invoke the given listener with the given concurrency parameters .
invokes a function on the specified stub and the given concurrency parameters .
invokes the given { @link } with the given { @link } .
invokes a function on the given listener .
creates the settings for the given {
get the description of the class description .
adds a component to the builder .
add a class to the class loader .
{
bind the given object to the specified object .
bind the given {
add a class to the class .
associate a class with name / value pair .
/ * ( non - javadoc )
lookup a name with a name .
returns all the sub - classes that are not specified in the given name .
returns a list of bindings that have a mixin .
register a listener with the specified name and id .
remove a listener from the listener .
returns the principal for the principal in the current principal .
read server element from a list of {
{
/ * ( non - javadoc )
adds a factory to the list of registered .
/ * ( non - javadoc )
{
add a { @link } to the list of { @link } objects .
determine whether the given target is a modulelayer of the given class .
create a security security security security security security provider .
create the subsystem for the subsystem .
create a new .
returns the default resource name for the given service registry .
returns the { @link } instance for the given { @link timeout } .
release the given object .
get all entries from the list
this method is called by the method .
/ *
calculate the number of all of the types of the class .
creates a new instance of a { @link } .

deploys all the deployment bundles .
perform a { @link } .
{
{
stops the server and wait until the server is stopped .
get the bean from the classpath .
adds a {
register a new endpoint configuration with the specified endpoint configuration .
add the default {
{
{

called when a timer is scheduled .
{
returns the declared methods in the specified class .
returns the declared fields declared in the class hierarchy .
sets the { @link } object .
returns the constructor of the given class .
returns the method name for the given class .
/ * ( non - javadoc )
/ * ( non - javadoc )
check if the resource is allowed to be a valid resource .
adds a protocol verification verification to the .
sets the value of the node to the given node .
{
process the bean meta data .
{
cancel the given value if it is not a new value .
/ * ( non - javadoc )
sets the type of the .
get the page data data data .

clones the given object .
this method is used to set the graph of .

creates a new { @link } for the given { @link } .

compare the given target index and return true if the target object is a target function .
returns the number of times that the given threshold is less than the specified threshold .
finds all classes in the given directory and subpackages .
returns the list of all interfaces that the given interface is a subclass of the class .
<p > introspects the given class and returns the generic type of the given class . < / p >
returns the generic type of the given field .
checks if the given class is a primitive type .
execute the given object in the current record .
{
returns the schema type for the given field .
execute the dialog .
update record with new record .
find record in the
execute the command .
{
{
{
{
{
this method is called by the method .
create a new edge with the given properties .
calculates the for the .
returns a set of set of nodes that match the given query parameters .
returns all the local entries in the map .
calculates the average and insert - related data for the given corpus .
returns the worst case sensitivity of the projection
returns true if the item is a templatized expression .
checks if the given query is a query .
iterate over the given {
returns a left - decreasing - of - relation and the result in the .
adds a new order to the list .

iterate over the collection of tuples and collects all of the sub - groups of the given group .
adds a new to the list of group information .
extracts the from the query .
checks if the cluster contains a clustering .
handles a lucene index .
returns true if the given {
returns the direction direction for the given direction .
returns true if the condition is satisfied .
find the best match index for the given index .
finds the index of the given annotationnode and returns the index of the list of .
returns true if the given index contains the given index .
returns the index of the first index of the given index .
search index index index and index of the search index .
find all the and that are in the given list of
creates a new { @link } .
get the contents of the given object .
serialize the given object to a stream .
execute the specified object .
returns the resource with the given resource .
checks if the given resource is a valid rule .
returns a server status code for the given .
initialize the database .
load the local file system .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
{
/ * ( non - javadoc )
{
commits the specified transaction .
rollback the current transaction .
update the .
updates the cache record .
creates a new path from the given path and writes it to the path .
move the source file to the target source .
returns a list of patterns that match the given expression .
/ * ( non - javadoc )
{

checks if this connection is closed .
execute the dialog .
copies the contents of the given buffer to the given buffer .
copies all bytes from the given buffer to the given buffer .
copies all bytes from the given buffer to the given buffer .
compacts a short - encoded byte buffer .
reads a byte array from the given byte buffer .
reads a byte array from the given buffer .
execute the preparedstatement .
execute the specified preparedstatement with the given parameters .
{
{
run the .
executes the given object .
returns the value at the given index for the given entry .
called when the next read lock is read .
opens the current version of the current thread .
this method checks if the specified bucket has been read .
opens the remote file .
closes the underlying connection .
delete a file .
replace the content of the file with the given path .

ends the request .
/ * ( non - javadoc )
adds a host to the host .
sends a request to a remote server .
/ * ( non - javadoc )
{
get the interprocedural database database .
returns the index of the _data of the given string .
initializes the .
connects to the remote server .
connect to the client .
get the connection for a remote connection .
returns the connection from the remote connection .
kills this connection .
wait until the connection is received .
disconnect the connection .
pushes a to the remote server .
swaps the specified value at the specified index .
/ * ( non - javadoc )
called when a edge is found .
sets the edge edge to the vertex edge edge that is not found .

{
generate schema for the given schema .
generate schema for the avro schema .
/ *
update the metadata of this object .
returns the next record in the current cursor .
{
/ * ( non - javadoc )
{
{
execute the query .
reads the next char from the stream .
execute the query .
this method is used to create a for the request .
create a for a .
parse the given string as a { @link string } .
{
registers a new compression .
returns the number of open files in the current thread .
returns the memory limit of the current window .
returns the memory size of the .
determine whether the target is a target function .
execute the specified object using the specified parameters .

moves the specified position in the specified buffer to the specified value .
returns the byte array for the given byte array .
sets the content of the content of this { @link bytebuffer } .
fills the specified buffer with the specified values .
execute the step query .
execute a script .

gets the generic type of the object .
{
execute the preparedstatement .
{
{
write a new record to a byte array
load the configuration from the given configuration .
serialize the given string to the specified charset .
checks if the given array contains at least one of the specified indices .
checks if the given array contains the given array .
/ * ( non - javadoc )


{
execute the method with the specified values .
refines the and .

add a single result to the response .
build select select statement
{
compares two objects .
add a new indexdefinition to the builder .
returns a list of all fields that have been rendered .
get the value of the specified .
{
returns a list of all the types of the types of the types of the given types .
{
returns a string representation of the given index .
execute the specified object .
split the given aggregate and returns the result .

returns true if the method is a {
get the for the given document .
returns the value of the string literal .
sets the value of the string literal .
advance to the probe
/ * ( non - javadoc )
execute the command .

execute the query .
{
parse the string representation of the { @link } .
check if the password is valid for the given password .
create a hash of a string .

creates a new { @link } .
/ * package private
{
{
{
{
{
returns the string representation of the given index .

returns the .
remove a edge from the edge .
execute the sql .
checks if the page is a valid page .
{
parse the given timeout value .
read the lock file and return the result .
build a { @link } instance .
{
execute the query .
{
merge this { @link } to the specified result .
execute the command .
lists all the values in the given array .
creates a cluster with the specified name .
{
this method is called when the ui thread is running .
{
/ * ( non - javadoc )
validates the rule against the current rule .
/ * ( non - javadoc )
{
{
records the current record to the given object .
convert a to a
{
{
adds a parameter to the given object .
convert the given index to a byte array .
scans the with the given { @link } and { @link } .
cast the object to a string
gets the type of the string representation of the given type .
gets the type of the object .

increment the number of samples in the specified counter .
increment the index of the specified value .
resets the capacity of this table to the specified number of bytes .
returns the index of the specified item in the specified slot .
returns the number of integers in the given position .
create a new index .
drop the index of the first record in the database .
returns the {
get the remote repository for the given resource .
execute the specified object .
adds a key to the list of keys .
create a new index for the given index .
{
sets the role to be used for the server .
adds a new node to the cluster .
set the server owner .
remove all the server certificates from the list of nodes .
sets the server server to be used when sending a lock on the server .
configures the database with the specified parameters .
configures the configuration object .
removes a listener from the listener .
register a database to execute .
send a response to the response .
{
create a new { @link } .
{
delete the record of a record .
read a record record .
/ * ( non - javadoc )
notifies the of the given .
merges two items in the same order by the given value .
notifies the listeners that the knows about the tree .
transforms the result into a single object .
execute the database .
closes the database .
called when a storage is closed .
returns all the names of all the names of the set of classes in the set .
returns all the names of all the names of all the names of the set of known types .
returns all the names of all the command names .
returns the number of field accesses to the specified position .
/ * ( non - javadoc )
writes the headers to the stream .

write a record to a document .
send a text content type .
send a stream to the specified stream .
{
returns the next record in the current cursor .
/ * ( non - javadoc )
{
open a user with a username .
create a new configuration with the specified name and name .
sets the value of the specified value .
closes the underlying connection .
{
processes the specified announce request and returns the next chunk of the next chunk .
starts a component - level operation that can be used to start the operation on the given component .
completes the operation .
returns the native { @link } for the given { @link } .
reads a number from the given file .
returns the amount of bytes from the cache .
returns the amount of bytes from the given file name .
returns the native {
returns the cached file for the given component .
returns the value of the specified <code > ientitygroup< / code > .
returns the amount of all the components that are not currently in the specified component .

this method is called by the lineitem to start the batchupdatedaemon .
this method is called when a new storage is created .


converts a {
/ * ( non - javadoc )
/ * ( non - javadoc )
stops the timer .
called when a page is ready to be used .
stops the timer .
called when a write is finished .
stops the timer .



{
get the cached database .
get the result .
parse the database and return a new .
starts the server .
<p > . < / p >
initializes the ping area . <p >
initializes the authentication of the client .
initializes the leader leader .
serialize a message to a byte []
encrypt the given byte array .
remove the record from the graph .
sets the value of the object to be used for the specified object .
{
{
{ @inheritdoc }
save the graph to the current graph .
{ @inheritdoc }
{
/ * ( non - javadoc )
detaches the specified persistencecapable .
attaches the graph to the specified generator .
returns the graph of the graph .
validates the given value .

sets the value of the property .
returns the value of the enum value with the given type .
wrap a { @link } in a { @link } .
{
{
{
{
{
/ * ( non - javadoc )
define a new instance of the .
sets the attribute of the property .
sets the graph of edges to the graph .
sets the graph of edges to the graph .
returns the graph of the given graph key .
creates a { @link } from the given graph and returns the { @link } .
{
this method is used to set the data for the graph .
/ * ( non - javadoc )
{
{
returns a list of all the sub - entries that are not found in the record .
returns all the records in the given list of ids .
adds a new index entry to the list of index .
merge the source into the target collection .
authenticates the user with the given username and password .
/ * ( non - javadoc )
gets the user with the specified username .
checks if the user has the given username and password .
process the results of a record .
called when a edge is a edge .
parses the text .
execute the function in the target { @link } .
returns the { @link } for the given value .
compares the function s children with the given index .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
{
open doradus database connection .
open a database connection .
create a new database .
create a database for the specified database .

create a database for the given name and name .
create a new { @link } .
finds the best match for the given index .
returns the number of the number of available versions .
/ * ( non - javadoc )
creates a new { @link } instance .
update statistic for the given statistic .
writes the page to the page .
reads a page from the specified page .
truncates the current page to the given page .
read a page from the page .
the next call to this method .
closes the stream .
opens the file and opens the file .
get the record of the record at the given position .
returns true if the cluster is active .
returns the node that is a node with the given name .

check if the given value is a read - value value .
returns a map of all the server - side config objects .
returns the list of all the .
returns all servers with the given name .
returns true if the clusters is in the cluster .
test whether a server server is a server menu .
returns a list of servers that match the supplied name .
returns a list of all the available masters .
get all the deployments for the specified server .
returns the set of all the clusters in the specified node .
returns the set of all the local resource groups .
returns the raw data for the given owner .
returns the remote repository for the current cluster .
returns a list of servers that match the given name .
get a role object from the server .
returns a set of all the available files that can be used to access the specified connection .
returns the list of data points in the configuration .
get data for a single record .
returns true if the list of all available driver in the cluster .
get the list of all the data in the database .
returns the data center of the specified server .
get global information from the cluster .
returns the number of read - ahead correlation information for the given cluster .
returns the number of write quorum for the given client server .
returns the cluster configuration .
returns the data center of the data set .
returns the status of the server .
clear all the and

returns the fully qualified class name of the graph .

returns the class name for the given class name .
configures the given { @link } .
{
drops the given index .
{
adds a vertex to the graph .
adds a scatter vertex to the graph .
adds a scatter - vertex to the graph .
adds a new edge to this graph .
returns the vertex id for the vertex id .
returns all sub - classes that are contained in the given class .
returns all the vertices that are contained in the given list of {
returns the vertex with the specified key .
returns a list of all the { @link } s that are contained in the given label .
returns all the transitive edges of the graph .
{
get the edge from the edge .

close the database .
returns the vertex type of the vertex .
returns the vertex type for the given vertex .
creates a vertex vertex from the group .
creates a vertex type .
creates a vertex vertex from the graph .
drops the given vertex .
returns the edge of the vertex type .
returns the edge type .
returns the edge type for the given type .
creates a new edge type .
returns the element with the given id .

/ * ( non - javadoc )
{
get the subset of the given element with the given name and class .
removes a { @link kamnode } from the given { @link kamnode } .
removes a edge edge edge .
delete a edge from the .
{
called when the event is closed .
removes the specified pagewrapper .
reads the tagk - th name of the file .
returns true if the given property name matches the expression .
execute the database .
starts the start thread .
starts the monitoring monitor .
stops the and registers it to be executed .
register a remote mbean .
/ * ( non - javadoc )
returns the value of the specified <code > ientitygroup< / code > .
returns the cache for the given component name .
get the cache counters .
get the statistics for the given .
get the .

returns the value of the specified entry in the given { @link } .

get the value of the property with the given name .
create a new instance of the class .
compares this object with another object .
returns a copy of this object with the specified instance .

saves the object into the database .

returns the version number of the record .

create a new instance of a command .
converts the parameters to a parameter .
set the current value .
if the object is null then null is returned .
convert a parameter to a parameter .
returns the index types for the specified index .
returns the index of the set of .
creates a new index .
returns true if the response is not a node .
sets the local local local local local local local local name .
wait until the current thread is complete .
returns the nodes that are not in the set of nodes .
returns a list of all the that can be used to determine the best match .
returns the best match for the given group .
returns whether the response is not a quorum .
/ *
get the cached database .
get the for a given statement .
returns the best match for the given expression .
{
get the library for the given language .
/ * public void ( ) { try { try { try { try { try { try { try { try { try { try {
release the engine .
unbind the given script with the given bindings .
returns the next page of the file .
update the size of the tree .
removes the given entries from the given <code > / code > .
processes the key and the and verifies that the key is not a valid key .

returns the value at the given index .
returns true if the given filter is a subset of the given filter .
returns the index of the first occurrence of the specified character .
returns a new { @code int } with the given character sequence .
returns the number of characters that have been commented out .
returns true if the text of the text starts with the given text .
get the for the plan .
{
{
{
execute the alter runlevel .
returns all dependencies from a { @link } .
sorts the into a list of .

creates a new instance of the entity class with the given name .
removes all classes from the given class .
registers the given class for the given class .
register a class for the given class .
sets the handler class for the given handler class .
acquires a user from a given user .
returns the number of connections available to the user .
acquires a user from a specific user s password .
execute the database .
dump the output of the log messages .

returns the maximum memory allocated memory for memory usage .
checks if the memory memory are in memory .

deserializes a vertex from the given { @link inputstream } .
read the { @link } from the given { @link jsonnode } .
{
{
read a { @link } from the { @link } .
create a jsonobject from the element .
creates a node representing the node that is the edge of the graph .
creates a { @link } from the given { @link } .
{

creates a node from the given map .
executes the given mojo .
returns a new object .
{
deserializes the buffer from the buffer .
/ * ( non - javadoc )
returns the comparator for the given { @code cls } .
returns the cluster information for the cluster .
get the map of all available data segments .
/ *
returns the index of the _data type .

creates a { @link } from the keystore .
converts a file into a byte array .
create a new from a given stream
create a new { @link keystore } from the keystore file .
read a key from the keystore .
加密
encrypt the content of a base64 encoded string .
decrypt a string with a base64 encoded string .
decrypt a byte [] .
saves the output stream to the output stream .
save the keystore to the specified keystore .
{
{
{
set the child node .
adds a value to the list .
serialize the given object to a byte buffer .
{
{
{
{
get a value from the field .
authenticate with the given username and password .
get the map entry entry value of the map field .
returns true if the current is a valid .
returns whether the given is a valid .
returns the remote address of the remote address .
returns the record for the record .
read a record from the database .
renames src .
calculate the biggest for the given double .
returns the cost of the cost of the .
calculates the cost of the .
calculates the cost of the .
calculates the euclidean distance between the two points .
returns the cost of the cost of the .
returns the for the given
returns the for the given .
returns a database that is a valid database name .
checks if the database is in a database .
set the { @link } .
get the value of the property in the specified property .
{
parses the { @link } and returns the result .
returns the next token in the token .
returns the token at the specified index .
parses the given and returns a {
get the name of the specified name for a given name .
returns the name of the field for the given name .
replaces all the links in the given <code > / code > .
returns the edge of the projection .
{
{
{
{
{
{
adds a new edge to the graph .
adds a new edge to this graph .
returns the number of all of the given <code > / code > .
{
returns a { @link } for the given vertex .
{
{
returns the class of the specified field .
get the connection for the given <code > / code > .
get the for a given .
reads the next record and returns the .
execute the select clause .
get the methods that the method is used to load the .
{
{
{
update database .
{
/ * create a role object dao .
execute the database .
called by the { @link } to be used to write to the database .
waits for a retry to be retried .
returns the argument string for the given index .
returns the parameters of the specified parameter .
connects to the server using the supplied user .
this method is used to retrieve all of the messages that are currently in the specified playlist .
returns a server info .
create a database for databases .
create a database for the specified database .
checks if the database is a live .
uploads a remote database .
registers the specified database .
releases the database to the specified database .
returns a cluster status .
execute the database .
returns the { @link } for the given { @link } .
parses the value .
waits until all of the current state of the server has been completed .

delete record
/ * ( non - javadoc )
get the authentication header .
/ * ( non - javadoc )
authenticates the given username and password .
checks if the given user is authorized to access the user .
gets the user user from the given username .
{
this method is used to set the output buffer to read from the input stream .
initialize the dst .
perform a java - specific checksum .
perform a { @link } .
perform a { @link } and initializes the specified { @link inputstream } .
perform a { @link } .
/ *
/ * ( non - javadoc )
{
{
sets the pointer to the specified bucket .
returns the bucket pointer pointer .
rename a cluster .
starts the operation .
rollback the operation .
acquires a lock that is associated with the given lock .
acquires the given {
this method is used to set the maximum memory amount of memory mapped to the given amount of memory segments . if the memory - memory memory leak is not in the cache store the amount of memory - memory entries will be set to the maximum size of the set of memory segments . if the memory - memory memory leak is
/ * ( non - javadoc )
/ * ( non - javadoc )
store the state of the cache .
process the server socket .
read parameters from the configuration .
filter the filter to be applied to the filter .
shutdown the .
adds a new item to the map .
removes the mapping for the given key .
acquires the specified key / value pair in the cache . if the specified key is not found the { @code } is returned .
check that the file is not valid .
returns the value mapped by key if this map contains no mapping for the key .
clears all buffers from the buffer .
closes the underlying stream .
write the buffer to the buffer .
read all the buffers from the stream .
write the state of the given task to the given difftask .
write out the number of entries in the buffer .
reads a entry in the buffer .
returns the number of p - 1 if the dividend is not found .
{
{
event handler for this thread .
creates a new instance of the specified class from the specified stream .
serialize the object to a byte array .

serialize the given object to a stream .
convert a {

gets the serializer for the given serializer .
process the request .
adds a shutdown handler to the server .
initializes the queue .
registers the given class loader .
returns the engine preconfigured for the given engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine engine
returns the engine engine .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
{
remove the state of the state .
add a new entry to the state machine .
{
{
checks if the current state of the current thread is closed .
check if the current thread is locked by the current thread .
check if the current thread is locked by the current thread .
checks if the given lock is in the given state .
check if the given time is in a single thread .
authenticates the user to authenticate against the user .

execute the command line .
dumps the specified file .
acquire a read lock .
check if the given label is a grails - line .
get label label from the edge .
removes a connection from the database .
{
get the graph from the data store .
get the vertex with the specified
{
/ * ( non - javadoc )
{
{
{
{
{
{
converts the to a document .
returns the class name for the given label .
execute the command .
/ * ( non - javadoc )
{
{
execute the sql statement .
clears all of the files in the specified bucket .
/ * ( non - javadoc )
this method is called by the method .
called when the pipeline is stopped .

create a new neighbors from a given node .
execute the database .
{
parses the text from the given request .
parse a { @link } .
{
{
{
{
get the list of positions from the given content .
execute the command .


execute the database .
intercepts the user to generate a url
fills a record with the specified text .
set the identity of the given .
set the identity of the identity .
set the version of the version .

initializes the database instance for the current thread .
handles the message .
prints the exception message to the logger .
print stack trace .
execute the query query with the given query parameters and index .
convert the data to the target object
{
{
registers a command with the given command .
sets the list of the specified server - config objects .
creates a new user object from the user .
authenticate against the given username and password .
checks if the user has a user s password .
returns the logged in user .
matches the given { @link } for the given type .
create a object from the given .
detaches a field from the same object .
applies all fields of the given object to the given <code > / code > .
applies the given <code > object< / code > to the <code > / code > .

get the object for the given class .
returns the metadata for the specified correlation id .
returns the next value in the cache .
{
execute the preparedstatement with the specified parameters .
{
truncates all the .
returns true if the given class name is a valid java class name .
returns true if the given class is a valid schema .
register a base class .
adds the ids of the cluster to the cluster .
{
convert a file into a object .
creates a new { @link } instance .
read the contents of the specified inputstream .
reads the contents of the specified inputstream into the buffer .
returns a {
releases the pool .
checks if the memory footprint of the is in the .
clear all the threads .
returns a byte array of the specified length .

parse the given xml stream and returns the result .
/ * ( non - javadoc )
writes a long value to the given byte value .
reads a byte array from the given byte array .
reads a number of bytes from the given { @code int } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns whether the database is currently in the database .
executes the given sql statement .
writes the status of the server to the server .
returns the index of the first occurrence of the specified object in the specified list .
returns the index of the first occurrence of the specified object in the specified array .
returns the index of the first occurrence of the specified array .
parses the text from the given request and returns the result .
returns the set of clusters that are associated with the given group .
{
returns the for the given query .
applies the to the specified value .
reports a new .
parse a .
returns true if the specified string is a valid .

apply the current to the .
returns the status of the status code .
execute the given object .
create a link with the given name .
/ * ( non - javadoc )
create a from the given output stream .
/ * ( non - javadoc )
starts the specified time .
returns the statistics of the current thread . <p > the caller is responsible for calling { @link ( string ) } . < / p >

commit the transactions and transactions .
{
rolls back the transaction .
rename the cluster .
{
register a cluster with the specified name .
checks if the block is read from the disk .
sets the value of the property with the specified name .
execute the database .
{
execute the database .
creates a new command with the specified name . <p >

delete a record in a record
{
executes the given command .
query the given { @link } .
{
{
checks if the given resource is a valid { @link } .
perform a check for the given resource and returns the result .
checks if the given resource is a valid resource .
sets the status of the status .
sets the user to the user .
registers a hook for the specified hook .
registers a hook for a dolphin - hook .
unregister a { @link } .
perform a on the specified type .
sets the given <code > / code > .
delete the record from the list of records .

execute the given record .
/ * ( non - javadoc )
returns a new instance of the { @link } .
{
{
{
{
/ * ( non - javadoc )
returns the view count of the view .
returns the number of unique properties in the given class .
{
registers the specified data .
returns the current position of the given byte array starting at the specified position in the buffer .
returns the index of the chunk in the chunk .
returns the word value of the word .

returns the next character in the given buffer .
returns true if the word is a keyword .
returns true if the character is a separator character .
returns the path to the given path .
execute the database .
clears the file and removes the file from the file .
convert the data to a string
returns the big - endian offset of the given byte array .

retrieve the token from the current state of the current state .
acquires a {

adds a bean definition to the class .
parse the xml document from the given node .


gets connection from connection .
forks a task and emit a task with the given task id .
this method is called by the task to perform a task .
{
/ * ( non - javadoc )
resumes a task .
pushes a task to the task .
wait for the task to be called .
<p > . < / p >
this method is called by the task to perform a task .
/ * ( non - javadoc )
creates a new task with the given task id .
/ * ( non - javadoc )
creates a new task for the given task .
creates a new task instance .
pushes a task to a tasktype task .
this method is called from the method .
returns the task name for the specified user .
checks if the given task is a valid task .
opens a new stream with the given resource .
copy the content of the given stream into the output stream .
copy the contents of the given stream to the output stream .
initializes the .
initialize the { @link } .

check if the task is allowed to be run on the specified task group .
parses the html element of the given element .
initialize the connection properties .
returns the datasource for the given datasource .

<p > returns the specified results in the results of the results of the results of the results of the results of the results of the results of the results of the results of the results of the results of the results of the results of the results of the results of the results of the results of the results of the results
{ @inheritdoc }
returns the value of the resultset type .
returns a result value for the given value .
returns the type of database .
returns the { @link } for the database .
returns true if the jdbc driver is a valid connection .
get the arguments for the given arguments .
configures the engine with the given configuration .
/ * ( non - javadoc )
starts a new instance of a specific id .
starts a new instance of a specific .
start a new instance of a specific instance of a given name .
starts a new instance of a given name and returns a new instance of the given name .
executes the given execution .
execute the process with the given { @link } and executes the given { @link } .
execute a task on a task .
execute the given task and execute the execution of the given task .
execute the given task and return a new one .
<p > . < / p >
<p > execute . < / p >
handle the {
executes the script .
runs the script .

set the order of order in order to sort the order of the order in order .
returns the elements of the given element .
<p > returns the string representation of the given string . < / p >


assert that the string is not empty .
called by the {
increment the task for this task .
find the task that is a task that is a child of the given task .
finds the active node that is running .
create a new order .
returns the engine that will be used to render the engine .
adds a new object to the given object .
adds a new name to the given class .
finds the first element of the given class .
finds a list of all { @link } s .
finds a specific instance of fixture .
handle the {
execute a task .
helper method to poll the given tasks and returns the appropriate callbacks .
initializes the jdbc driver for the jawr config .
returns the number of bytes that are in the given count .
loads a class from the classloader .
create a new instance of the specified class .
instantiate the class with the specified class .
returns the list of work models that have been filtered to the given { @link } .
get the list of all the models that have been set for this task .

if the node is a child of the given node returns a {
returns the node with the given node .
returns true if the given node is a node .
finds a single instance of the given class .
returns a list of all the objects in the list .
find the first occurrence of the specified name .
add a new class to the given class .
build the engine engine .

parse xml
无视private / protected修饰符 不经过setter函数 .
sets the value of the specified field field .
invoke the given method with the given arguments .
finds a method in the given class name .
schedule a job .
start the server .
sets the .
intercepts the task .
process the { @link } and { @link } .
performs the for the given node .

called when the row is a row .
initialize the class for the given class .
returns the name of the string that is a name .
returns the property type for the specified class .
update the type of an entity .
/ * ( non - javadoc )
returns a process with the given name and version .
{
/ * package
undeploy a given event .
removes all the ids of the spectopics from the history database .
get the list of eips in the query .
get the list of pages matching the criteria specified in the filter .
process entity data .
clears all entities in the database .
parse the xml description of the given byte array .
parse the model of a node .
parses the node and the xml tree .
get the list of tasks that have been queued .
{
execute execution of execution .
run the process .
interceptor
returns true if the given node is a child of the given node .
process a process process .

gets the connection for a given connection .
returns the proxy of the proxy class for this proxy .
intercepts the given method with the given object .

create a new order .
create a new orders with the given name and name .
add a variable to the registry .

save the current state of the database .


completes the specified order by calling the method .
terminate the specified operation .
resume the history of the specified resource .
removes a list of all tenants from the history .
build map of string .
build map map from entity .
{
saves the data to the given process .
update the process info .
run the script .

get the value of the property with the specified key .
returns the value of the property with the specified key .
loads properties from the classpath .
check if the current character is a valid character .
reads the line from the specified byte array .
reads the line from the specified byte array starting at offset <code > offset< / code > .
reads the line from the input buffer .
{
skips the next character in the stream .
skips the next characters in the stream .
ensures that the specified array is less than the specified length .
ensures that the offset of the specified length is less than the length of the specified length .
merge two matrices .
returns the lower triangular bound from the given range .
returns the upper bound of the specified value .
merges the specified elements in the sorted order by the specified comparator .
swap the elements of the two arrays .
merge the given elements into the given range .
sort the sort of the specified comparator .
returns the specified number of bytes .

clears the file .
writes a byte buffer to the buffer .
truncates the file to the specified size .
{
{
/ * ( non - javadoc )

awaits until the completion of the task is complete .
creates a builder for a consumer .
finds the first matching element .
compact the and all the performances in the file .
finds all { @link } s for the given { @link } .
returns the matching criterion for the given key .
returns the matching criterion for the given key .
sets the value of the specified value at the specified position in this buffer .
/ * ( non - javadoc )
returns the hashcode of the dbase code that is a field of the given field .
compare the data fields of the field - type .
adds a list of to the list of .
remove all the nodes from the given .
adds a new to the list of .
update the status of the .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
reads all tags from a file .
adds a object to the list of objects .
write a record to a writer
get the primary key from the data store .

clears all segments of the given segment .
this method is used to set the to be used by the .
creates a new { @link } .
returns the segment at the given index .
update the
/ * ( non - javadoc )
main entry point for the given class .
read the specified resource from the stream .
gets whether the given value is a nominal value .
returns the number of bytes that are in the given range .
reads the snapshot of the given data set .
/ * ( non - javadoc )
get the value of the view with the given row name and the given row .
sets the value of the specified byte array starting at the specified index .
copies the contents of this stream to the specified destination buffer .
copies the specified byte array to the specified destination .
compare two integers .
copies all bytes from the specified source to the specified destination .
copy the contents of the specified source to the destination buffer .
read the specified stream from the given stream .
writes a compressed buffer to the specified output stream .
ensures that the segment buffer is not longer than the segment .
returns the position of the specified field .
calculates the number of random samples in the given list .
main method to parse the given class .
checks if the schema is a valid .
generates the files in the directory and the package name of the file .
generates a list of files that are not already loaded .
returns true if the specified key is in the specified key .
gets the record of the field key .
initializes the model for the specified class .
initializes the data model for the given schema .
{
enables / disables the .
publish a batch of messages .
reads the and returns a that is read from the current state .
adds a listener to the listener list .
creates a path that contains a path mapping .
creates a path that contains the given path and hash table .
creates a path that contains the name of the given dataset .
creates a path segment for the given dataset .
puts a into the buffer .
blocking retrieval of the specified update plan .
returns the next block in the current version .
initializes the .
get the keys of the specified <code > map< / code > .
returns the keys of the given prefix .
checks if the given key is not a prefix .
returns the percentage of the specified number of seconds .
adds a new schema to the graph .
adds a schema to the schema .
add a field to the list .
add a field schema .
add a field schema to the field .
returns a filter with the given config string .
adds a listener to the list of listeners .
returns a list of schema names that are not supported by the schema .
inits the current version .
sets the value of the specified index to the specified value .
returns the value of the specified index in the segment .
finds the field with the given name and field name .
find all the fields in the given type that match the given type and field name .
sets the path to the path .
sets the path to the path that is the same as the path .

adds a new { @link } to the { @link } .
adds a { @link } to the list of fields .
compares the to the specified field .
/ * ( non - javadoc )
this method is called when a delay is received .
/ * ( non - javadoc )
returns an instance of the specified {
write out the specified to the given allocator .
/ * ( non - javadoc )
writes the specified to the given .
returns a new list with the given states .
lists the data for the specified cluster .
adds a new state to the .
restore the last unfinished - to - snapshot - time .
runs the { @link } .
execute a single { @link } .
adds the specified key to the list of excluded entries .
this method is called by the to set the to the .
writes a header .
returns the number of fields that have been set for the given field .
calculate the type of the .
sets the primary keys of the primary key .
combine all fields of the and fields .
writes the data to the given byte buffer .
returns the buffer s buffer buffer .
write a number of bytes into a byte buffer .
writes a long value to the buffer .
returns a stream that skips elements of this stream .
increment the number of bytes to be used by the pool .
sort the .


adds a new element to the tree .
returns a list of elements in the tree .
resizes the specified storage to the specified storage buffer .
process the specified file .
get the value of the specified { @link } .
reads the long data from the given byte array and returns the number of bytes of the given number .
find the free free upper - free free space in the given free space .
append the bits to the buffer .
compact the .
compare the data in the data source .
resizes the specified size to the specified size .
resizes the array of bytes to the buffer .
calculate the number of data in the data block .
creates a new array with the specified size .
checks if the given value matches the given value .
returns the number of bits in the given field .
find the match for the specified key .
creates a builder for a consumer .
method to read the state of the state of this state .
parses the given json schema and returns a list of { @link } objects .
parses a schema .
returns the default type name for the given type .
returns the number of elements in the specified number of bytes .
{
/ * ( non - javadoc )
writes the snapshot state of the output stream to the output stream .
writes the delta to the output stream .
adds a schema to the schema .
/ * ( non - javadoc )
add a {
generates a method name for a given method name and the name of the class name .

returns the index of the field with the given index .
finds the index of the specified query string .
schedules a new announce request .
this method is called when a delay is received .
add a new type .
this method is used to set the time in the to the time series .
updates the current state of the .
this method is called by the to write the data to the .
removes the specified historical - related resource from the given index .
writes a byte to a byte buffer .
writes a long value to the output stream .
writes a byte to a byte buffer .
writes a byte to the output stream .
write a byte array to a given byte array .
returns the int value of the given byte array .
reads a stream from the given stream .
encode a long value into a long value .

reads a byte from the stream .
returns the value of the specified value in the given long value .
returns the number of bytes that are in the given range .
called when the activity is first created .
adds a view to the view .
create a new { @link } .
called when the scroll view is scrolled .
called when the view is changed .
scroll the layout of the layout .
set the scroll position for the drawer
called when a new layout is loaded .
scroll to the specified scroll position
called when the activity is first created .
called when the activity is first created .
called when the activity is first created .
called when the activity is first created .
called when the activity is first created .
called when the activity is first created .
helper method to perform a scroll blur event on the given view .
helper method to adjust the scroll of the view to the specified value .
called when the activity is first created .
set the view to be used for the view .
specifies that the operator is built with the value of the builder .
/ * ( non - javadoc )
{
{ @inheritdoc }
@deprecated use { @link #get ( string ) } instead .
returns the value of the specified property .
@deprecated
sets the value of the specified value .
{
creates a new { @link } with the specified name and value .
<p > adds a new rule to be used for the specified rule . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . lang . string ) } for more details .
returns a new builder that can be used to combine the values in the given { @link } .
create a builder for a rule .
creates a new builder instance .
returns a builder for a rule .
adds a new rule to the builder builder builder .
creates a new { @link } with the specified name and value .
<p > . < / p >
creates a new rule with the specified value .
creates a new { @link } .
/ * [ deutsch ] <p > definiert einen neuen wert . < / p >

returns the instance of the specified rule .
run the rule .
<p > appends the specified { @link } to the given { @link } . < / p >
adds a new rule to the list of .
add rule to the list .

get all fields annotated with { @link annotationtype } s .
returns the annotated methods annotated with { @link } .
returns the annotated method method that is annotated with the given annotation .

creates a {
{
{
{
{
{
{
{
registers a rule .
updates the status of the status code .
returns a map of all status status for the given { @link } .
returns a builder for a single result .
adds a new rule to the builder .
adds a rule to the rule builder .
{
{
{
{
{
{
adds a rule to the rule .
adds a action to the builder .
adds a consumer rule .
creates a new { @link } with the default rule .
resets the state of the cursor to the specified value .
{
{
adds a new rule to the builder .
adds a rule to the rule builder .
creates a new { @link } instance .
returns the list of { @link executable } s for the given class .
combines a single element into a single pivot using the provided arrays .
combines the elements of a list into a single array .
reads a line from the input stream .
skip newlines on the specified column .
creates a new instance .
adds a new { @link } to the builder .
returns the service for the given service .

returns the ports that are associated with the .
gets the port for the configuration file .
returns the port of the service port .
parses the given port string and returns the port information from the port .
add port to the list of port .
removes the { @link } from the specified { @code } .
returns the default service name for the service .
add a service ticket to the given service .
/ * ( non - javadoc )
returns the service service service service service service service .
returns true if the given service is allowed to access the service .
returns a port - port servicename and the servicename and port .
returns the host port .
append a value to the map .
merge the given map into the map .
merges the map of maps into a map .


updates the template with the specified serviceconfiguration .
merges the image with the specified configuration .
waits until the server is running .
build the configuration for the image .
<pre > {
validates the value of the specified value .
convert a list of entities to a list of googlecloudstorageiteminfo .
returns the resource version of the given resource .
create a new .
create a new { @link } .
checks if the given { @link } is ready to be used .
returns a context with the given config name .
checks if the given {
replace the properties of the given properties with the given properties .
add shutdown hook to runlevel .
registers a { @link } with the given { @link } .
create a classloader that will be used to create the class loader for the classpath .
checks if the given artifact id exists in the groupid artifactid .
returns the version of the project id .
returns the plugin id of the given project and groupid artifactid .
checks if the given resource is a grails resource .
returns the version of the maven artifact .
returns true if the stream is open and the client is closed .
reads a resource from the classpath .
/ * ( non - javadoc )
reads a fragment from the given xml fragment .
get metadata from the map .
convert the value to a list of { @link } .

merges the given { @link } into a { @link } .
merges the map of maps into a map .
returns true if the given { @code pod } is a { @code pod } .
reads the config config file and returns the value of the <code > config< / code > .
flatten a map of keys and values .

adds a port to the map .
/ *
returns a json object that represents the server - side of the server .
get the plugin configuration for the specified id .
get a configuration for a given id .
download a file and returns a new response with the specified file .
get the free port number in the given slot .
compare two versions of a string .
find a profile from the profile .
configure a configuration for a specific profile .
find the classpath for the given name .
read a profile list .
read all the files from the classpath .
finds the that is in the classpath .

convert a { @link inputstream } to a { @link uberdata } .
finds all classes in the classpath .
adds a service url to the repository .
returns the image policy for the resource .
returns true if the current mode is open .
returns the number of matching keys for the given resource .
returns the first child element in the given element .
returns the content of the text content node .
apply the given dto to the list of objects .
/ * ( non - javadoc )
apply template to the template .
update the template template .
/ * ( non - javadoc )
removes the tag from the given tag name .
applies the namespace prefixes to the given namespace .
apply the project to the project .
apply a new project request to the repository .
returns the namespace uri for the given entity .
issue an error message .
returns a new instance of the object .

{
{
extracts the given { @link string } from the given { @link string } .
returns the env class name for the given resource .
converts a duration to a number .
returns the duration of the specified duration .
scans the files in the directory and the path separator .
returns true if the given service id is a valid service .
disable the memory manager to close the server .
checks if the given rule is a valid rule .
returns the project folder for the project folder .
replies the project s root project .
{
parses the input stream into a map .
{
returns a generator for the given { @link } .
{
returns a {
<p > . < / p >
returns the icon for the given css class .
returns the default icon for the given class .
copy all files in the directory .
create a for the given font .
get the classpath for the given class .
get the properties of the given resource .
get the current version of the maven project .
creates a list of service descriptors for the given { @link } .
/ * ( non - javadoc )
log all the
get the properties of the given class .
get raw config config map .
get the value of the specified key .
sets the for the specified .
validates the given constraint .
get the map of map entries .
returns the artifact id of the artifact .

get the template for the given {


checks if the given object is a config object .

creates a list of parameters that are not included in the parameter .
returns the value of the specified key in the given key .
get the value of the property with the specified key .
get a config map from the config .

create a { @link } instance from { @link } .
removes a mapping from the given list of strings .
adds a new to the builder .
get default value for the given mode .
returns the image name for the specified image .
returns the registry name for the configuration .
returns the path to the path relative to the path .
checks if the given config is blacklisted .
get the service for the service .
collects all exceptions of the given exception stack to the current stack .
returns a boolean value indicating whether the property is undeclared or not .
returns the namespace string for the given namespace .
creates a client client .
{
scan the classpath for the plugin s { @link } .
extracts the distance from the given string to the given distance .
add a mapping for the given field .
add a mapping to the map .
creates a new { @link jsonobject } from the given json object .
returns the metadata id for the specified id .
gets the metadata id for the given { @link } .
create a new { @link } from the specified json string .
converts a json string into a json string .
request the for the given application .
sends a { @link } to the client .

converts a json string to a json string .

open the page page .
check if the fragment is currently enabled for the given user id
creates a { @link } instance from the json object .
get the balance of the user .
create a payment resource from the given json string .
/ * ( non - javadoc )
{

creates a new { @link } instance from the json object .
creates a json string from the json string .
helper method to add a device to the device .
helper method to generate the device data for a specific fragment .


this method is used to verify that the given signature verification code is valid for the given signature .
get the payment method for a given fragment .
delete payment method
/ * ( non - javadoc )
parses the response headers from the given request and returns the result .
returns the client id for the given { @code } .
verify that the given amount of two parts received by the user s .
verify that the specified request fragment is valid and then passes it to the specified destination .
verify that the given fragment is a valid uri .
creates a new { @link } instance from the specified json object .

returns the value mapped by {

parse the given string representing the { @link httpmethod } of the { @link } .
convert a payment method to a payment method .
returns the endpoint endpoint for the given endpoint .
cancel the given host .
/ * ------------------------------------------------------------
get the for the given .
returns the user’s of the account linking to the target account .
converts a json string to a nonce object

creates a new { @link } instance from the specified json object .
<p > . < / p >
method to get the response from the server .
submits a callback to execute the post method .


handles a payment request .
request payment level payment request .

returns the error message for the given field .
converts a json string into a { @link } .

create a new instance of the given activity and return the result .


/ * ( non - javadoc )
creates a new { @link } instance from the json string .
request funnel for the event .
create a payment request for a given request .
handles a fragment of activity .

creates a new { @link } from the given json string .
creates a new { @link } object from the given json object .
add a list of files to the list .
remove a word from the list

returns a list of tokens that are not in the .
extracts all the numbers of a phrase .
converts a list of tokens into a string .
sets the {
reads a bytebuffer from the buffer .
calculate the hamming distance of the specified two - dimensional double bond .
calculate the hamming distance of the specified two vertices .
/ * ------------------------------------------------------------
returns the buffer of the buffer .
write a frame to the buffer .
creates a new frame with the given buffers .
creates a new bytebuffer with the given chunk of bytes .

writes a list of hole to a buffer .
write a list of slices to the given .


pack a list of bytebuffers into a byte buffer .

get the block block from the given range



/ *



/ *












/ * ( non - javadoc )
returns the profile for the given int
/ * ( non - javadoc )
/ * resample the src to trg


returns the set of for the given .
returns the number of times the specified value is in the specified range .


reads the next marker from the buffer .
reads the marker buffer from the stream .
read the specified from the given tree .
returns the maximum available frames .

prepares the limit limit of the range of the range of the .

copies all files from the given source file to the given destination file .
calculate the position of a cubic spline ( ) of a quadratic .
<p > . < / p >

returns the duration of the specified { @link } .
calculates the frame of a given frame .
converts a { @link } into a frame .
converts a { @link } into a { @link } .
returns the { @link } for the given { @link } .
helper method to build the for the movie .
returns the time for the specified movie id .
creates a timecode string from a playlist .
returns the magnetic - sign - encoded - encoded representation of the .
converts a to a hexadecimal representation of a jmftype frame into a timebase .
calculate the timecode for a given resource .
returns a big - endian - signed integer from the given int value .
sets the value of the specified int value .
returns true if the given { @link } is a valid { @link } .
{
get the { @link } for the given { @link } .
get the audio frame .
returns a frame that is a frame that is a single frame of the given file .
returns a frame that is the same as the proportion of the given channel .
returns a frame that is a frame .
returns a {
returns a new with the specified { @link } .
returns the for a given .
returns a new that is a new .
get the for a given .
creates a new { @link } .
sets the window to be used for drawing ripples and .
{
reads the cache from the given iterator .
reads the bits of a .
reads the bits from the stream .
{
{
skip all the bits in the stream .
skip over the bits in the stream .
clones this frame .
calculate the overall brightness of a complex number of .
/ * ---------------------------------------------------------------------------- -
creates a pdu for the given audioformat .
returns the full channel of the given header .
returns the number of bytes of the first n of the specified stream .
returns true if the stream is not corrupt .
returns the next n th number of bits in the buffer .
read the from the given bytebuffer .
reads a buffer from the buffer .
returns the stream of the lines in the stream .
creates a from the given byte array .
{
reads the next from the given .
displays the frame with the color
split the given movie and split them into a new list .
decode the frame of the frame .
sets the current byte buffer to the output stream .


encode a frame .
encode a long value into a byte array .
returns the length of the specified length .

/ * ----------------------------------------------------------------------------
/ * ---------------------------------------------------------------------------- - - -
/ * ---------------------------------------------------------------------------- - - - - - -
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * step3
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a byte buffer to a byte array .
adds a packet to the stream .
read the id from the data stream .
skips the next chunk position .
/ * ( non - javadoc )

decode a binary data .
returns the number of bytes that are read in the range of bytes .
helper method to read a marker from the buffer .

method to generate the for the given frame .
/ * ----------------------------------------------------------------------------
/ * ----------------------------------------------------------------------------
/ * ----------------------------------------------------------------------------
/ *
returns the number of structurally .
returns the number of larger than the maximum length of the specified number of times .


/ * ------------------------------------------------------------

process the data in the input stream .
returns a new instance .
update the of the specified
clones this { @link } .
/ *
start the .
/ *
转移状态
create a from the codec .
get the parent of the given parent .
<p > . < / p >
calculate the roman coded array of integers .
returns the for the given array of integers .
decode the .
called when a task is closed .
returns a bitmap that can be used to read a frame from the given file .
returns a bitmap with the given proportion .
get the frame metadata for the given frame .
this method is called when a frame is a .
get the frame for the given .
returns a bitmap with the given frame and surfaces the specified frame .
returns a bitmap with the specified frame and offset .
returns the frame with the specified { @link } .
returns the for the specified frame .
returns the for the specified .
returns the for the specified sound .
seeks to the specified position in the media stream .
/ *

splits the specified dst into dst .
/ * [ deutsch ] <p > die angegebene . < / p >
calculates the function data for the data .

returns the for the specified .
calculate the pitch and the value of the { @link } .
returns a number of bytes that can be used to read the byte array .
converts a byte array to a byte array .
converts a { @link bufferedimage } into a { @link #b } .


write a compressed string to a byte array .
get the size of the .
convert the given rgb values into the .
converts the input image into a int value .
calculate the number of available components in the given region .
converts a byte array into a byte array .
read the specified byte buffer .


/ * ( non - javadoc )








/ * ( non - javadoc )
returns a list of the specified .
reads a list of from the given input stream .
encode the given { @link } to the { @link } .
encode the data frame into a buffer .
encode a buffer to a compressed frame .
get the property data for a given property .
get a property for a given name .
sets the value of the specified property .
set the value of the specified property .
get the value of this property with the specified name .
sets the value of the { @link } .
/ * ( non - javadoc )
returns a list of all the tags that are supported by this .
returns the codec id .
returns the number of bytes that were skipped .
dumps the input stream to the output of the specified .
adds a reference to the .
{
starts the thread to start the thread .
flushes all the bytes from the next slot to the next one .
waits for the given size to be used .
adds a { @link } to the { @link } .
loads a { @link } from the classpath .
checks if the path is a library .
deletes a file .
returns a new {
returns the index of the specified channel .
returns the channel corresponding to the given {
returns the { @link } for the given name .
get the descriptor for the descriptor .
<p > . < / p >
get the size of the specified type .
creates a new { @link mediaplayer } instance .
creates a new { @link mediaplayer } instance .
creates a pdu with the given data .
creates a new { @link mediaplayer } with the specified size .
returns the data buffer for the given data .
returns the number of bytes that can be used to write the data to the data stream .
returns the number of available data type .
find the type of a filter name .
opens a new url with the given flags and the default character .
reads the specified byte buffer from the stream .
returns the amount of bytes written to the file .
writes the specified buffer to the specified buffer .
returns true if the file is a valid url .
get the component descriptor for this component .
returns the version information for the given class .

/ * ( non - javadoc )
returns the constant property for the given property name .
make a new { @link } .
returns the format for the given {
opens a new connection with the specified options .
closes the underlying stream .
returns the stream at the specified position .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the value of the current indicator .
get the primary key value .
seeks to the given position in the stream .
play the given <code > src< / code > object to the specified <code > / code > object . < / p >
pauses the specified number of upgrade .
copies the specified .
compares this object with another .
compare two numbers .
this method is called when the specified number of tuples is a number of longs .
calculate the number of bins that is less than zero ( 1 ) and dst long long .
multiply this rational number of a argument to a number .
multiply a rational number of a rational ( b ) .
>

subtract the specified value from the specified object .
> 如果传入多个值为null或者空，则返回0
add a argument to the specified argument .
add a new value to the specified domain .


create a new { @link } instance .
<p > . < / p >
<p > . < / p >
create a new { @code } with the specified number of times and truncating the result .



play the video with the specified filename .
/ *
returns a stream that filters the specified type .
creates a { @link } for the given { @link } .
creates a { @code } with the given { @code string } and { @code } and { @code } .
creates a new { @link encoder } that is used to serialize the { @link encoder } .
creates a { @link encoder } for the { @link } .
opens the rtfdocument and reads the data and sets the data to the underlying stream .
/ * video picture
negotiates the audio data for the audio audio audio .
/ * ( non - javadoc )
{
converts the given image into a bufferedimage .
creates a new { @link } .
prints the output stream to the output stream .
print a option option .
configures the properties of the given properties and stores them in the properties file .
configures the given file and returns the properties file .
set the base calendar value .
returns the descriptor for the given descriptor .
creates a { @link } from the given { @link imageformat } .
creates a { @link } for the given image .
creates a converter for the given image type .
creates a converter for the specified image type .
creates a converter for the specified image type .
converts the specified { @code bufferedimage } to a { @code bufferedimage } .
returns true if the payload is full .
closes the stream .
opens a new url with the given flags and the default .
reads a byte array from the stream .
writes the specified byte array to the specified buffer .
factory method for creating a new { @link } .
generate unique name for a unique identifier .
maps a { @link url } into a { @link string }
maps the given input data into a string .
map a string into a string
transform a map into a map
transform a url into a { @link } .
maps a string into a file .
maps a file into a file .
maps the given channel to the specified channel .
maps a {
maps the given channel to the specified channel .
maps the given data to the specified channel .
creates a {
maps a {
maps the given input stream to the specified input stream .
maps the url to a string
maps the given {
map a url into a string .
maps the given input to the given output stream .
map a {
maps the given url to a map of input stream and output streams .
transform a url into a map
sets the { @link } to be used for communication with the given url .
set the .
returns the handler for the given url .
get a logger for the given logger name .
get the logger logger name for the logger name .
log a log file for the specified log level .
creates a { @link } from a { @link } .
/ * ( non - javadoc )

set the time base time .
returns a list of index entries for the index .
get the for a given frame .
get the set of daylight saving the to be used in the .
get the sample value of the .
returns the container with the specified name .
returns the meta data of the given data .
find the time stamp entry at the given index .
returns the index entry at the given position .
returns the announce response .
<p > returns a list of that can be used to search for the device . < / p >
<p > the video analysis codes for the analysis . < / p >
<p > returns the output of the video ( s ) for the video . < / p >
returns a stream enumerating that the sample s samples in the set of samples .
<p > return a list of the supported images . < / p >
returns a list of { @link } s that are associated with the specified audio selector .
parses the given codec codec using the codec codec codec .
creates a new codec instance with the given id .
returns the codec codec for the specified name .
parses the given codec id .
creates a new codec instance with the given id .

returns a codec codec for the given codec .
get the device codec .

get the pixel format for the specified index .
gets the {
returns a new {
get the profile profile of the specified index .
/ * ( non - javadoc )
returns a { @code } of the given { @code mediatype } .
creates a { @link } from the given { @link bufferedimage } .
opens a new url .
reads the contents of the specified stream and returns the result as a <code > inputstream< / code > .
writes the specified buffer to the specified buffer .
<p > the list of keys for the keys in the request . < / p >
{
sets the value of the named peer .
creates a { @link } instance .
sets the value of the property .
opens the rtfdocument for this stream .
returns the codec codec for the specified codec .

set the time base time .
sets the value of the current value .
sets whether the given object is a native value .
get the decoder for the decoder .
returns the value of the {
<p > returns a list of the formats that are supported by this <code > / code > . < / p >

returns the codec id .
returns the format of the given index .
creates a new { @link } .
add a filter to the filter .
adds a new source file to the list of stream size .
adds a new source to the canvas .
adds a new audio stream to the given audio stream .
adds a new sink to the given { @link } .
sends a command to the queue .
constructs a new index entry at the given offset and offset .
creates a { @link } that is a { @link } .
creates a { @link } for the given { @link filter } .
gets the type of the stream .
filter the input data to the output stream .
starts a new playlist .
puts the specified byte array into the buffer .
returns the byte buffer at the specified offset .

creates a new { @code } instance .
creates a new { @code } with the given { @code } .
creates a new { @code } with the specified offset and length of the specified buffer .
creates a bytebuffer from the given bytebuffer .
creates a new { @link } .
play the buffer s position in the buffer .
returns a {
validates the image to be validated .
validate the given media type .
{
{
returns the graph of the graph .

insert a filter into the given filter .

returns the meta data of the id3 - byte meta - data value .
set the time base time for the base calendar .
register a protocol factory .
returns a handler that will be used to determine the handler for the given url .




returns the for the given name .
/ * ( non - javadoc )


play the given file and returns the audio data .
main method .
delete the object from the map .
loads the library s library name and version of the library .
loads a taint version of the library .
sets the library to use for the library versions of the library versions .
try to load a bayesian ws library .
returns the list of the that is the same as the .
initialize the paths of the .
returns true if the library is in the sd card
creates a decoder with the specified codec .
returns a decoder with the specified decoder .
decode audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio audio
/ * ( non - javadoc )
decode the specified media stream and return the result .
write screen text to a dbf file .
deletes the specified data .
adds a media audio audio stream to the media stream .
/ * ( non - javadoc )
returns the format of the given type .
returns a { @code } which is used to parse the { @code format } .

returns the { @link } for the given { @link imageformat } .


creates a new { @link } .
returns the format for this .
opens the rtfdocument and reads the data and sets the data to the provided data .
adds a new stream stream to the stream .
returns the stream position of the given stream .
write the packet to the media stream
returns a new { @code } instance .
returns the codec id .

returns the naaccr format for the given index .
returns the number of streams that are currently in the given stream .
returns the number of bytes that can be used to read the data from the underlying stream .
returns the { @link } for the given { @link } .

decode a string
generates a new seed seed with the given seed .
/ * ( non - javadoc )
returns the list of addresses that have been set for the specified address .
returns the list of addresses that have been established to the specified address .
get the header of a block
gets the .
send a transaction request to the client .
sets the script key to be used to send a script .
compiles a script
{
reads a string from the stream .
/ * ( non - javadoc )
reads a portion of the specified length of the specified buffer .
writes primitive data to the array .
write raw bytes to the buffer .
/ * ( non - javadoc )
flush the buffer to the buffer .
returns the contents of the specified object in the given memory - memory allocator .
write the given class tag .
/ * ( non - javadoc )
returns the byte array for the given object .
reads a string from the stream .
{
returns the package name of the class .

returns the result of the specified class .
>
resizes the data store .
get the binary data for the given key .
remove a binary data from the given source .
pack a byte array into the buffer .
pack a byte array into a byte array .
write the compressed data to the specified buffer .
write raw bytes to the buffer .
write a string to a string .
/ * ( non - javadoc )
{
creates a new .
creates a new instance .
create a json object from a given string .
prints the json representation of the object to the output stream .
registers the serializer for the given class .
creates a from the database .
returns the object for the given object .
returns the object to the given object .
clears all caches .
/ * ( non - javadoc )
get the input object for the specified ndarray
get the input object for the specified input .
output a object



returns the object as a byte array .
returns the object represented by this object .
returns the byte array for the specified object .
converts a json string to a json string .
serialize a stream to a stream .
reads a stream from the stream .
get the interprocedural database .
write a number of bytes to the given byte array .
write raw bytes to the data .
writes a number to the stream .
write the array of bytes to the array .
/ * ( non - javadoc )
reads a byte array from the given byte array .
writes the specified object to the specified object .

/ * ( non - javadoc )
/ * ( non - javadoc )
writes the given { @link object } to the given { @code } .
/ *
writes the fields to the output fields .
writes an array of <code > array< / code > into the <code > array< / code > .
reset the output stream .
returns the copy of the current byte buffer .
get a stream of the given class and deserializes it as a raw class .

{
flush the output stream to the output stream .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------

creates a copy of this object with the same name as the original byte array .
change the center of the sound .
returns the number of bytes that are in the given buffer .
creates a new .
creates a new { @link } .
perform a single - step operation on the specified range of the specified range .
registers a listener for the given object .
returns an iterator over the elements of this stream .
{
/ * ( non - javadoc )
/ *
adds a source to the buffer .
{
reads a byte array from the buffer .
reads a int from the stream .
increment the number of bytes to be used by the next call to the next call .
register a class with the given class .
/ * set the thread pool size .
starts the specified file .
clean up the database if it exists .
copies the given directory to the given directory .
prints info for the given print writer .
gets the class that is the same as the original .


{
{
{
/ * ( non - javadoc )

{

{
{
{
{

this method is called when a new is used .
set the for the .
releases the release of the given pointer pointer to the given pointer pointer .
calculate the output shape of the output shape
returns the probability probability probability for the given probability .
this method is used to create a graph with the same graph as the input and output .
returns true if the given condition is met .
returns true if the given condition is met .
returns true if the specified condition is met by the specified condition
returns true if the specified dimensions are equal to the specified dimensions
<p > returns true if the specified dimensions are equal to the specified dimensions . < / p >
apply a reduce transformation to the given value
apply subtraction op at the specified condition
returns the specified {
returns a new matrix with the specified probabilities and arguments .
applies radial function to each element of the input function and updates the results in the input function .
applies a function to the given function .
return a new index for the given ndarray
returns a new { @code } which is a concatenation of { @code } .
convert a list of properties to a properties object .
returns a { @link } that contains all of the properties of the given { @link bytebuffer } .
sets the {
sets the value of the given { @code throwable } to the specified { @code } .
normalizes the given value using the specified min and max value .
merges the specified point into the specified list of { @link point } s .



this method converts the given {
shutdown the
get the title of the line of the given title .
get the line number of the given string .
returns the current device pointer .
get the specified indexes from the specified indexes .
update the flags array with the same shape as the array of dimensions .
create a new vector with the specified parameters
broadcast the specified ndarray to the output of the specified stitch - line .
render the image to be used for the specified image .
returns a new { @link } with the specified { @link } .
convert a bytebuffer to a byte buffer .
returns the byte buffer for the bytebuffer .
get a batch of aggregates for a batch of partition size .
apply the transformation to the output of the specified .
validate the input dimension
method to store the data in the given data type .
returns a new array with the specified number of elements in the given range .
convert a collection of objects into a {
this method is used to convert the results of a matrix to a long .
{
this method is used to generate a new vector for the specified outputs .
this method returns a random ndarray with the given data set in the order of the data in the sense that the data is in the range of the data set .
this method is used to convert a long into a long
creates a new complex number with the data in the data set .
{
{
concatenate the values in the input vector and returns the reduced value .
this method calculates the shape of the shape
/ * ( non - javadoc )
creates a new complex number with the specified shape and returns the shape .
create a new shape with the specified shape
creates a complex number of shape - wise inverse functions .
creates a new complex number with the specified shape and stride .
creates a new complex number of meanvariance
{
create a scalar nd value
create a scalar nd value
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
method to create a 2x2 complex number of colors .
method to create a complex number of colors in the form of complex notation .
returns a new colorimg with the given number of numbers .
create a new
create a new
returns the largest of a complex number .




get the context context .
{
get the specified indexes from the specified hyper indexes .
merge data set into the data set .
{
{
{
{
returns the estimated memory clock for the specified memory .


format a formatted string with a given format .
converts a string into a string .
converts a byte array into a hexadecimal string .


<p > returns a list of all the strings in the string . < / p >
<p > returns a list of strings separated by the given string . < / p >
<p > returns a trimmed string that contains all the strings in the string . < / p >
<p > returns the value of the <code > string< / code > property . < / p >
split a string into a single string .
split a string into a single string .
finds the next character in the string .
<p > escape a string escape sequences of a character escape sequences of the specified escape character escape sequences . < / p >
<p > escapes the specified escape sequences in the specified { @code string } . < / p >
returns the string representation of the string .
joins the given string into a single string .
generate a string with spaces and spaces .
replace tokens with separator
get the stack trace of the given stack trace .
compares two strings ignoring case considerations .
<p > checks if the string is a string . < / p >
normalize a matrix
returns the number of bytes that the value is in the range of the specified number of bytes .
checks if the device has a valid .
check if the device has a bluetooth .
create the for the given shape
create the for the specified shape
returns whether the given shape is a constant
broadcast deep copy of the original shape array .
get the array of shorts in the ndarray
get the offset offset from the given ndarray
creates a new array of indices for the given indices .
returns the shape of the specified array of ints .
unzips a file into a file .
gets the short value of the specified short .
this method will be called when a buffer is a buffer .
execute the given {
copy the bytes from the buffer to a buffer .
start a server server .
returns the number of space available in the given buffer .
{
this method returns the buffer buffer for the given {
<p > . < / p >
sends a { @link } to the opencensus library .
<p > returns the mean value of the specified <code > section< / code > . < / p >
nd method that returns indarray with shape ( p )
ceiling op op with a value
convert a double array into a boundingbox
returns a {
create a new { @code compare } with the specified value .
create a new vector with the specified value
broadcast indarray to be used in a scalar nd
pow function
broadcast arrays

returns a copy of this object with the specified value
pow function
element wise maximum element
element wise maximum element
create a new matrix with the element
create a minimum element of the element with the given minimum and maximum value .
reshape a variadic function
element wise alpha function
sigmoid function
reshape a variadic of the same as a normal logistic
identity

create a new { @link } instance
log a {
reshape a geometrycollection
broadcast the value to the given matrix
broadcast the value of the operator to the given output .
compute the cholesky decomposition of a matrix
reshape the input array of indarray
this method calculates the 3d - order of the complex numbers in the given input .
/ * ( non - javadoc )
{
perform a operation on the input and output .
restore the specified submatrix from the specified input .
creates a new shape shape shape for the given shape
creates a new shape shape
checks if the given name exists in the given directory .
reads a { @link streamable } object .
notifies all the interested listeners that the queue has been successfully queued .
creates a new complex blur object with the specified shape and returns the resulting data .
/ * ( non - javadoc )
shuffles the specified list of random elements in the specified list of integers
create a object from an ndarray pointer pointer
create a new from the given file
{
this method is used to set the overall data to be used for loading data and close data .
/ * ( non - javadoc )
apply the transformation to the output of the input matrix
{
read a { @link vec } of { @link input } .
check if the server is running .
{ @inheritdoc }
{
flushes the queue to the specified {
this method returns the device - use the knx network interface for this .
this method will create a device pointer pointer .
returns the number of available device .
returns the input stream for the file .
{
{
get the next device from the device .
load the library from the classpath .
loads the file and writes it to the output stream .
loads the file of the given class .
loads the resource from the classpath .
get the name of the .
create a unique name for a given base name .
/ *
broadcast the data to the specified data
start the classpath and starts the specified resource .
create a databuffer for the data

/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
read a byte array from the given stream .
{
sign out the input variable with the given inputs and output variables .
output out predictions along with the given shape
output out predictions along with the given shape
out the inputs for the given inputs .
maximum contour to be trained with the given inputs .
the inputs are not in the predictions of the inputs .
the inputs are not supported .
output out predictions along with the given shape
create a depth - sum of the predictions of the input variable .
output a neural input variable with the given inputs .
convert a matrix to a matrix
returns a { @code } which is a matrix of the given { @code matrix } .
reset the current state of the .

/ * ( non - javadoc )
reshape the data in the given ndarray to the output stream
get the value of the specified ndarray
gets the shape of the shape .
evaluate the operator
create a shape ndarray with the given ndarray

returns a geometric representation of the specified shape .
computes the hamming function of the given dimension .
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the length of the two vectors
get a number of random objects in a given ndarray
broadcast the array of { @link } to be used to enrich the specified data .
{
returns the number of bytes of the rounded range of the number of bytes .
returns the gamma function .
returns the { @link bigdecimal } value of the { @link bigdecimal } .
returns the number of the number of decimal - 1 ( negative or negative ) .
returns the root of the { @code x } value of the { @code n } th { @code n } th { @code n } { @code n } { @code n } { @code n } { @code } } { @code n } { @code } } { @code } } { @code i } otherwise { @code i }
calculates the rounded decimal point of the given { @link bigdecimal } .
rounds the value of the { @link bigdecimal } to the given { @link bigdecimal } .
rounds the value of the decimal point to the power of the decimal separator .
returns the decimal value rounded to the nearest digit .
rounds the log to the specified log .
returns a { @code bigdecimal } with the specified number of decimal places .
> > > > > > > > > > / code > > / p >
calculates the { @link bigdecimal } value of { @link bigdecimal } value .
rounds a number of decimal places to the power of { @code bigdecimal } .
rounds the sine of the given divisor to the given divisor .
rounds a number of monetary values to the power of the given { @link bigdecimal } .
returns the fraction of the decimal point in the second range of { @code bigdecimal } .
rounds a { @link bigdecimal } value .
rounds the value to the nearest power of 2 .
returns the absolute value of { @code bigdecimal } { @code } { @code x } { @code x } { @code } { @code } { @code } { @code } } .
rounds the value of the decimal point to the nearest power of 2 .
calculates the sine of { @link bigdecimal } { @link bigdecimal } { @link bigdecimal } { @link bigdecimal } { @link } { @link double#positive_infinity } { @link double#positive_infinity } .
calculates the decimal point of { @code bigdecimal } { @code bigdecimal } { @code bigdecimal } { @code } { @code } { @code } { @code } } { @code } { @code } { @code } } { @code } { @code } { @code } } { @code } { @code } { @code } } { @code }
calculates the logarithm of the { @link bigdecimal } value of { @code bigdecimal } { @code < } { @code } { @code } { @code } { @code } { @code } { @code } { @code } { @code } { @code } { @code } { @code } { @code } { @code } { @code } {
rounds a number of decimal places to the power of two numbers .
calculates the decimal point in the range [ 0 0 ] .
calculates the decimal point in the mathcontext .
returns a { @code bigdecimal } representing the approximate number of digits in the given { @code int } .
function .
converts a number into a { @code } .
rounds the value to the nearest 1 .
rounds the second to the nearest divisor .
calculates the tangens of { @code bigdecimal } { @code x } { @code x } { @code y } { @code y } { @code y } { @code y } { @code y } { @code y } { @code y } { @code y } { @code y } { @code y } { @code y } { @code y
rounds the given amount of time to the given divisor .
calculates the decimal point of the given { @code bigdecimal } .
calculates the rounded rounded rounded rounded rounded rounded rounded rounded rounded to the nearest divisor .
rounds the value to the specified { @code bigdecimal } .
rounds the value of the decimal point to the power of { @code x } .
scale the given number of radians .
returns the rounded rounded rounded range of { @link bigdecimal } .
convert a { @link bigdecimal } to a { @link bigdecimal } .
update variable name
get the function for the given id .
associate a function with the given id .
returns the inputs for the given function .
updates the variable with the given variable name and the given variable name .
associate a ndarray array with the given variable name and the value of the array
returns the shape of the variable with the given name .
update the shape of the given shape variable with the given shape
associate the specified variable with the given shape
associate an array with the given variable name and value .
gets the value of the property for the given property .
adds a property to the function .
add a function to the given function .
add arguments to the solver .
evaluate the given function expression .
evaluate the operator
create a new shape variable with the given shape
see {
see {
generate a variable with the given shape and name<br >
generate a variable with the given variable values .
remove the argument function from the given function name .
sets the variable value for the given variable name .
out the inputs for the given inputs and stores the result in the given array of inputs .
average the input variable with the specified shape and predictions along the specified dimensions .
see {
out the activations of the input array with the inputs of the inputs .
see {
see {
output out the inputs for the given inputs
output a variable with the given shape and predictions .
sign out the inputs for the given inputs and outputs the result in the input variable with the given normalization mode .
sign a prediction on the specified input and output the specified input with the given { @link } .
output out the inputs for the given inputs
create a new shape with the given inputs and predictions
see {
output out the inputs for the given inputs
output a variable with the given shape and predictions .
output out the inputs for the given inputs
output a variable with the given shape and predictions .
output out the inputs for the given inputs
output a variable with the given shape and predictions .
matrix multiplication : = 1 ( i * * ) * ( x * y ) * x ( x ) * ( ( x * ) * y ( a ) * x * y ( a op i ) <br > <br > a { @link } is a good approximation of the input matrix and stores the result along
output a vector of input variable values with the given mean squared matrix .
generate a new version of the given input variable .
generate a new version of the given input variable .
generate output variable for the given function .
this method returns a result of the evaluation of the operator .
execute the function .
execute the given { @link } and returns the result .
execute the function for the function .
execute the function .
generate function to output the given function .

adds a new variable to the given string .
evaluate the variable length
gets all variables variables .
update variable value .
perform intrinsic steps transformation :
return a list of variables composed of the shapes in the input variables .
update variable name .
execute a function .
print function to output .
converts a string to a .
update the variable in the array
returns a new {
print result to string .
get the data type of the data type
get the byte type of the given byte array .
gets the number of bytes that are in the given type .

returns the type of the type of type { @code type } .
allocates a single byte array .
set the data to be used in the data set .
returns the length of the given type .
returns the {
returns the number of possible fields for the given data type .
returns the { @link } for the given { @link } .
this method is used to switch to the .
{
this method is used to create a reference to the servicebuilder of the given .
{
prints the counters to the .
{
{
{
{
{
{
{
{
{
{
{
{
render the given input with the given input and return the result .
calculate the marginal distance of the label of the term
this method executes the given ndarray
this method is used to execute a random step .
this method is used to convert a double value into a gaussian ndarray
this method is used to quickly quickly for a square - hot matrix
this method returns the logarithm of the input stream as a double array
perform an ndarray to the specified ndarray
perform a matrix to update the specified ndarray
returns the node name for the given name .

/ * ( non - javadoc )
get the application information for the current account .
this method is used to perform a random gaussian convolution .
execute the given {
{
{
asserts that the given { @code message } is a { @code } .
{
calculate the length of the matrix

returns true if the current thread is currently running .
release the current current state of the current thread .
returns the current state of the current state .
build a {
{
initializes the examples from the input data set
sets the value of the specified field to the specified value .
initializes the host and port of the .
this method is called when the pointer pointer is called on the underlying buffer .
this method is called when the device is used .
this method is used to create a memory that is used to read a track of the data in the background memory that can be used to write to the .
convert a tensor to a binomial tensor
adds data to the buffer .
returns the {
{
{
apply the gradient of the
{
create a new ndarray
broadcast a value in the vector with the shape
broadcast the given dimensions to the given dimensions .
broadcast subtraction op .
broadcast the given dimensions to op .
broadcast a vector of probabilities ( x y ) vector to the output array
broadcast the given { @code op } to { @code op ( x ) } and { @code op } { @code op } { @code op } { @code op } { @code op } { @code op } { @code op } { @code op } { @code op } { @code op } { @code op } { @code op
broadcast a vector of activations to the output array
broadcast double arrays .
broadcast double arrays .
broadcast the op vector of the shape of the shape ( x y )
broadcast subtraction op .
broadcast the given dimensions to the given dimensions
broadcast minimum dimensions of the given dimensions to the given dimensions .
broadcast the given dimensions to the given dimensions .
broadcast the given 2d - op ( x y ) vector
transform the given map into a map .
gets the current state of the current user .
generate output for the right side of the sdvariables
returns the smallest n - th - dimensional array of <code > / code > th value of the specified shape .
format the given ndarray
{
{
{ @inheritdoc }
save the object to the database .
broadcast the original view to the output of the original view .
broadcast the matrix to the view
{
{
/ * ( non - javadoc )
returns the result of this transposed double .
{
{
/ * ( non - javadoc )
{
broadcast the given ndarray to the given array of integers .
{
{
{
/ * ( non - javadoc )
update the ndarray with the given row
{
{
{
{
{
{
{
{
{
{
{
{
multiplikation from the given matrix
broadcast the given value to the specified value .
add a scalar - valued - op vector to the result of this method .
{
transforms the given { @link boundingbox } into a { @link } .
{
transforms the given { @link vec } into a new one .
{
compute the inverse of this object with the specified value .
this method returns the result of cholesky decomposition of the specified ndarray
transforms the given object into a reduced copy of the given array .
this method returns the result of the decomposed matrices .
{
{
compute the qr code .
this method computes the output of the matrix using the provided matrix and the output of the matrix .
compute generalized eigenvalues of a symmetric matrix by computing the eigenvalues of the matrix .
returns the probability probability for the given probability .
{
copy the data from the collidable
/ * ( non - javadoc )
{
computes the eigenvalue of the given tuple
perform an ndarray to the specified ndarray
update the matrix with the specified maximum number of elements .
merge labels
this method is used to convert a pair of objects into a pair of objects .
broadcast arrays of arrays
this method is used to create a graph with the trajectory and sum of the transformation

returns true if the radial input is the same as the x - y - axis - and - infinity .
returns a new array with the specified dimensions .
/ * ( non - javadoc )


broadcast arrays : out = i . e . 0 . 0 . 5 . 3 . 3 . 0
perform the actual operation on the specified input and output the specified {
initialize the list of variables .
returns a constructor that is declared by the given class .
returns a methodhandle that can be used to create a methodhandle for the given class .
invoke the method with the specified method and arguments .
create a new instance of the given class .
get a field from a field .
checks if the given class is assignable from the specified class .
returns the { @link } annotation for the given annotation type .
gets the annotation annotation for the given class .

creates a new instance of the class with the specified result .
commits the transaction to the response .
loads a single content from the specified repository .
creates a new { @link } .
saves the given object to the specified jsonwriter .
returns the value of the <code > / code > value that match the given condition .
adds a filter condition to the list of values .
translates { @link operator } operator .
adds a new order to the list .
sets the ancestor of the ancestor .
sets the value of the {
adds a new { @code } to this { @link } .
{
returns a {
{
[ variable my_kind ]
adds a new order to the list .
add a projection to the database .
adds a new projection to the builder .
creates a new proxy service .
{
{
awaits all of the pending tasks that are pending across all pending tasks .
registers a class .
get metadata for a given entity .
query for a single key .
query for a single row .
perform a query query using the specified query .
query for a query to a query .
query count query .

loads the results from the database .
returns a list of elements in the specified list .
<p > returns the value of the <code > { @link org . . . () < / code > . < / p >

creates a key - value pair .
creates a key - value pair with the given id .
creates a key - type of the given class with the given name .
creates a key - value pair with the given url .
creates a key - value object with the given name .
compares this { @link } to the specified { @code } .
compares two objects with the same signature as the given object .
creates a key for the specified key .
<pre > optional . < / code >
returns the class of the specified class .
returns the js js class for the given class .
returns the js js code for the given class .
returns true if the type of the type is a type parameter .
returns true if the given type is a subtype of the given type .
returns a direct supertype of the type of the given type .
returns the type of the given field .

returns a translator that can be used to obtain a translator for a given type .
returns a { @code } instance for the given path .
{
{
returns true if the given class is a .
checks if the field is a valid field .
returns true if the {
gets the properties of the supplied class .
<p > gets the metadata of the specified key . < / p >
gets the { @link } for the given key .
execute the callback .
returns a new {
{
{

register a { @link } for the given { @link } .
get the type of the type of the given type .
get the type of the parameterized type .
returns a new { @code } instance .
returns the path of the path .
returns the path to the path .
returns the depth of the tree .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new instance of the specified entities .
converts a { @link entity } into a { @link } .
returns all keys for the given key .
{

adds a set of to the given set of ids .
returns all the keys that are associated with the given key .
returns a set of keys that are the same as the key .

sets the value of the specified <code > / code > .
sets the key to be used for the key .
sets the key to be used for the given key .
<p > . < / p >
<pre > a key that is a key that was created by this method . < / p > <p > <b > note : < / b > this method appends the data to the existing value .
sets the id of a specific id .
creates a key for the given parent .
registers a new { @link } for the given type .
>
returns the inner class for the given class .
given a type and return a parameterized type that is declared by the class .
checks that the given type is assignable to the given type .
check if the type of the given type is a subtype of the type .
returns a transform for the given class .
returns a wildcard if the given type is not found .
returns a wildcard if the first argument is not found .
gets the annotation type for a given annotation type .
add a value to the log .
adds a value to the given value .
add all the objects in this <code > map< / code > to this <code > collection< / code > .


execute the next execution .
/ * ( non - javadoc )
returns a {
returns a new { @code } object that contains the specified key . the results are not fetched using the given key .

filter the filter to filter the result and returns the result .
delete the parent entity from the entity .
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a key that is a key that is a key that is a key in the key that is not a key or an object .
<pre > a key that is a member of the specified key . < / p > <p > <b > note : < / b > this method appends the values to the existing key ( if any ) .
<pre > a static method that can be used to create a publickey . < / p >
creates a key - value object .
creates a new instance of this instance .
creates a list of keys with the given key .
returns a value that is a value of the given key .
convert a url to a url .
{
{
{ @inheritdoc }
{ @inheritdoc }
{
{
{
{
{
{
{
{ @inheritdoc }
{
perform a transaction on the given .
checks if the given value is a valid value .
returns the for the given .
creates a new { @link } instance .
{
creates a collection of type <code > object< / code > s type .
creates a map from the given class .
gets the metadata for the given entity .
returns a { @code key } that represents the given { @code clazz } .
create a new range that can be used to create a new range of the specified type .
create a new range that is a primary key .
creates a { @link } for the specified key .
returns a new { @link } object .
opens the .
creates a new instance of .
closes the given { @link } .
{
run the given work run .
applies the given list of { @link } s to the list of indexes in the list .

returns a new {
{
returns the value of the { @code } parameter value .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a chunk that can be used to perform a query for the query .
/ * ( non - javadoc )
{
returns the value of the { @code } parameter of the { @code predicate } .
query for the query string .
creates a new {
creates a new instance of { @link } .
returns the value of the <code > ientitygroup< / code > .
adds a new value to the list .
{

{
/ * ( non - javadoc )
executes the given runnable .
get the container type for the given path .
get the stat statistic for a given kind .
returns the future .
rethrow an exception that caused the given exception .


returns a root of the root of the given class .
create a { @link } instance .
loads the value of the given container .
returns the property value of the given property .
sets the value of the specified { @link org . apache . hadoop . common . . } to the specified value .
sets the value of the specified object .
/ * ( non - javadoc )
get the value of the specified { @link } .
writes a { @link } to the output stream .
writes the category content of the given category to the given category .
writes the categories to the list of items .
processes the specified { @link } and returns the resulting text .
writes the given request to the client .
writes the given request to the given request .
writes the given request to the given request .
writes the given request to the announce request .
writes the response to the specified output stream .
writes the response to the output stream .
writes the response to the specified response .
writes the response to the specified data .

returns a list of distinct results of {
returns a list of all the { @link } s that are not in the passed in string .
returns a builder for the given { @link } .
returns a stream builder for the given filter streams .
returns a list of sublists that match the given filter .
update the search criteria .
update the search criteria with the filter and returns true if the criteria is not found .
remove a { @link } .
remove a matching response from the given filter .
returns a { @link } for the given id .
returns a new instance of { @link } for the given id .
returns a list of all the { @link } s that match the given { @code pathprefix } .
filter a predicate .
filter the given filter and returns false if the filter is not a zuulfilter .
writes the request to the specified resource .
writes the request to the given object .
writes the request to the given object .
writes the request to the request .
writes a response to the file .
writes a response to the output stream .
writes a response to the json document .
writes a response to the json document .
reads the extensions of a json stream and returns a new { @link } .
returns { @code true } if the current token is empty .
/ * ( non - javadoc )


reads the native request from the given request .
reads the request from the json stream .
reads a request from the given stream .
read a request builder .
reads the response from the specified string .
reads the response from the json stream .
reads the response from the stream .
read a response from the stream .
process a processing of { @link } .
process the .
reads a request request from the given request .
reads a request from the specified reader .
reads a request from the stream .
read a request builder .
reads the response from the specified response .
reads the response from the specified reader .
reads the response from the stream .
read response data read from stream .
returns the message .
returns a builder for the message .

filter the filter message with the given filter and returns a list of objects with the specified filter .
returns a filter that is a sub - filter that is a sub - filter that is a sub - filter .
returns the current name of the first element in the given {
consumes the next token from the input stream .

consumes the start of the start of the start of the end of the array .
end
returns a { @link token } from the given json object .
returns a { @link } object that is the start of the stream in the json document .
write a field to a given field .
write a csv field to a list of strings .
write a csv field to a csv file .
writes a long to the given stream .
write long field .
write out a field to the given output stream .
writes a {
write a field to a dbref field .
write the given {
reads a csv file .
returns a url that is a base uri .
returns the lucene { @link } for the specified target .


returns the host url for the given url .
returns the page s page .
loads the list of properties from the given list of properties .

get the protocol of the url
the method is responsible for creating a new object .
serialize a string to a string

get the time - time - time for the given request .

get metadata from the metadata
filter the metadata filter from the metadata .
returns the rules that the rules of the given list of rules .
/ * ( non - javadoc )
add a value to the url .
adds a new url to the database .

clean up the field name .
get a connection .



returns the charset for the given byte array .
/ * ------------------------------------------------------------
get the partition of the specified partition .
sets the value of the specified key .
returns the first value of the given string .
returns the { @link webdriver } for the current thread .
main method that reads the url of the file and kicks off the file .
gets a list of cookies with the given cookies .
checks if the given domain is a url .
returns the cache key for the given url .
get the set of rules for the specified url .
{
extracts tags tags from a document .

sets the value of the property .
the next ack of the given url and the ack .

/ * ( non - javadoc )
parse rules .
reads rules from the given rule .
returns a string representation of the query string .
returns the first url matching the filter string .
unescapes the path separator at the given path separator .
escape a path with a path and a path .
get the object from the cache4id cache .


returns the number of seconds from the epoch of time .
returns true if the last time the current time is not a number .
parses a from the conf config .
append a node to the dom tree .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ====================================================================== interface lexicalhandler ======================================================================
receive notification of cdata start tag .
/ * ( non - javadoc )
{
set the environment for the environment .
parses the given url and returns the resulting rules .
filter the specified document .

returns the result of the request that will be used to identify the given .
trims the text of the text in the text .
/ * ( non - javadoc )
{
checks if the specified value is valid .
creates a { @code } instance from the given { @link } .
get the instance of a specific .
{
submits the {


读取整个excel文件




returns a instance of the given field .

sets the number of items in the item .
returns the size of the specified {
sets the drawable to the drawable .
sets the drawable to the drawable .
sets the angle .
updates the selection position .
removes the item from the drawer view .
returns the position of the position in the specified position .
updates the value of the parameter .
returns the color value for the specified entry .
clamp the value of the specified value to the specified value .
returns true if the given text matches the given text .
create a new { @link } instance .
write the results to the specified jsonwriter .
/ * ******************************************************************** / * public methods ********************************************************************
adds the specified object to the passed character array .
{
returns the value of the element in the string .
get the string at the specified index .
get the value of the specified string .
set the value of the string operand to the given string .
sets the value of the specified column at the given index .
set the value of the specified object to the given index .
returns the number of consonant sequences that are not in the given array of bytes .
creates a { @link } with a string .
creates a { @link } instance for a given array .
creates a { @link } with the specified { @link } .
/ * ( non - javadoc )
multiply the ( augmented ) with a b - ( b )
performs a on the specified .
{
initializes the database table .
draw the image .
show the dialog .
shows the dialog s text .
reads the data from the given byte array into the data .
reads the data from the given byte array into the buffer .

read file .

main entry point for the file .
creates a new { @link } instance .
creates a new { @link } instance .

/ *
checks if the specified date is a valid holiday .
checks if the start date is a start date or end of the given start date .
checks if this range intersects with another .
returns a new date range that is the start date of the range of the specified range .
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > start a range of the start of
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > start a date - end date -
sets the start and end of the start of the end of the start of the end of the start .
sets the end time of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the end of the
sets the duration of the duration .
/ * ( non - javadoc )
store the .
adds a bean to the list of listeners that are not included in the map .
process the operator .
returns the value of the specified time in the given time .
returns the coordinate of the specified point in the specified position .
get the file position of the .
reads the character at the given position .
print the html code to be used for the given string .
open market input .

returns the name of the file .
find the grid grid grid name .
find the grid grid name for the given string .
converts a string to a string .
check if the point is a point .
computes the for the given .
converts a lat lon to a point in a latitude longitude .
converts a latitude point and latitude and longitude to a { @link geopoint } .
converts a lat / lon to a .
checks if the given location matches the given location .
open a decompression process .
creates a new instance of this object with the same name as the same name .
/ * ( non - javadoc )
/ * ( non - javadoc )
computes the bounds of the given {

initialize the object .
checks that the is valid .
prints a to the
read data from file .
sets whether the range of the start date is set .
returns the number of elements in the given array .
register a new watch .
process the given {

register a new object .
register a factory class .
registers the specified class for the specified class .
creates a feature from the given feature .
/ *
returns true if the feature is a feature .
find the type of the
reads the specified byte offset into a byte array .
write html file .
convert a catalog string to html html document .
returns the html code for the html page .
returns the user - defined .
get the catalog from the given path .
creates a dynamic catalog - catalog mapping .
add a global services to the service .
initializes the provider for the provider .
@deprecated use instead of { @link } .
renders the content of the content of the given content with the given content .
get the url of the url




{
get the page .

adds a new file to the cache .
{
/ * ( non - javadoc )
calculate the coverage data for the given
find the value of the element with the given path .
find the sparse n - th dataset that is a dataset .
gets the dataset with the given type name .
returns true if the two objects are equal .
returns a new instance of the specified .
/ * ------------------------------------------------------------
reads the top - th top - bit of the specified file pointer to the specified location .
read the content of the file .
calculates the cubic spline for the
set the information for the .
convert the given short string to a long integer .
convert a byte array into a long integer .
returns the date that is in the julian range of the specified number of days .
sets the value of the property .
checks if the given name is valid and is valid .

checks if the given name is valid .
{
{
reads the record data read from the data set .
returns a list of objects that are not in the given list of members .
create a .
writes data to the data .
{
fills all variables in the given tag .
/ * ( non - javadoc )
flushes the content of the {
read a single byte - encoded string from the specified input .
returns the log level .




returns true if the point is inside the tolerance of the point .
returns a perspective coordinate of the latitude and longitude .
converts a latitude coordinate to a latitude coordinate .
converts a to a latitude - z - z - latitude .
calculates the correlation of a poi .
adds a new server to the given function .
returns a function that will return a new function name with the given name .
create a new .
register a h2gis - class name .
find the name of a .
{
/ * ( non - javadoc )
read from the .
creates a new .
expand the path and returns a new list of .
gets the parameter parameters .
get the name of the record .
get the description of the specified screen .
get the unit unit unit unit .
returns the projection for the given field .
checks if the given start position is a vertical position .
checks if the specified record is a layer .
encode a mat - specific header to a object .
returns a builder for the specified paragraph .


set the to be used in the .
convert a { @link } to a { @link } .
converts a gantt angle into a { @link } .
convert the type to a .

creates a new directory that contains a directory .
register a transform that can be used to transform it into a new instance .


create a from the given container .
transform a object into a .
creates a projection that is used to transform the given { @link } into a { @link } .
notifies the listeners that the event is being notified of events .
creates a new { @link } .
main method to write a text to a menu .
get the location of the specified position in the specified position in the specified position .
get the file path for the given path .
save the current state of the current user to the database .
write a sequence of data to a stream .
/ * ( non - javadoc )
set the { @link } for the given { @link } .
******************** initialization ************************************
/ * ( non - javadoc )
writes a byte array into the array .
writes the count of count of the count of the count of the count of the count .
write a single value into the stream .
writes the bytes to the output stream .
writes a byte array to the output stream .
{
/ * ( non - javadoc )

returns true if the file is a valid pe header .
reads a table from the classpath .
initializes the gui .
displays the output of the grid .
sets the value of the grid field .
get the screen name from the screen .
read a sub - line fragment from the classpath .
returns the { @link } instance for the given range .
creates a new factory for the given <code > / code > .
returns the current { @link } .

converts a latitude point and latitude and longitude and longitude to the specified location .
/ * package

/ * ( non - javadoc )

parses the and parse the string to the given class .
/ * ( non - javadoc )
initializes the .
initializes the .
fills the grid grid header .
reads the grid s data point from the specified position .
reads the file at the specified offset .
main method to parse the grid .
/ * ------------------------------------------------------------
/ *
writes the to the output stream .
execute the specified file .
reads all files from the given file .

gets the .
initializes the .
main method to parse the grid file .
get the grid s number of the grid grid .
/ * ( non - javadoc )
read the grid record .
/ * ( non - javadoc )
calculate the crc value of the

calculate the for the cubic distribution


prints the number of block blocks to the file .
prints the crc block of the block to the output stream .
print the grids .
display the grid info .
/ * ---------------------------------------------------------------------------- -
calculate the crc bits of a .
reads the next line .
add a variable to the graph .
prints a string literal .
prints the value of the specified <code > / code > .
deserialize a bytebuffer from the given input stream .
adds a data to the output stream .
create a copy of the given object .
<p > obtains a { @code zoneddatetime } from a calendar object . < / p >

obtains an instance of { @code } representing the date of time .

parse the given date and time string that is a date and time .



add a new time period to the date .
creates a new calendar instance with the specified period .
<p > . < / p >

creates a new {
create a new .
creates a new .
create a new .

/ * ( non - javadoc )

opens a new file .
escapes the given string to be a string .
/ * ( non - javadoc )
creates a list of slices for each slice in the list .
checks if the given section contains the specified ranges .
checks if the given list contains at least one of the specified ranges .
check if the range of the values are not valid .

returns true if the specified list contains the specified dimensions .
returns the shape of the specified shape .
extracts the long value from the given { @code } .
returns the value of the property .
convert a { @link } to a { @link } .
returns the checksum of the checksum of the checksum of the checksum .
converts the data to a list of ranges .
converts a value to a double value .
adds a date to the calendar .
{
{
{
/ * ( non - javadoc )
returns the unit representation of the unit .
returns the unit representation of the specified object .
returns the approximate great - circle distance of the unit .
returns the canonical string representation of the given string .
main method .
{
read data from the input stream .
read data from the stream .
{
read data from the data .
/ *
{
/ * ( non - javadoc )
returns the service for the given service name .
resolve the uri of the uri .
returns the string value of the string .
returns the size of the specified number of samples .
returns the number of available images for the specified dimensions .
returns the number of structurally bits of the specified number of elements .
reads the data from the specified file into the specified data file .

writes a xml file to the output stream .
creates a psuedo variable with the given variable name and attributes .

returns the preferred size of the specified target .

returns the value of the .
returns the location of the specified position in the given coordinate .
{

converts a pg string to a string .

converts a peptide chunk string into a string .


get the name of the for the given id .
get the name of the for the given id .
<pre > : < / p >
get the { @link } for the given { @link } .
returns the {
extracts the variables from the given { @link } .





main method .
creates a filename from the list of files .
returns the filename of the file .
returns the dimension of the dimension of the left - th dimension of the current factor .
usage : java twitter4j . examples . .
checks if the file is valid .
<p > opens the and of the . < / p >
reads the batch s data from the file .

initializes the initialization of the

reads a variable - length string .
reads the next data from the input stream .
reads the data from the given byte stream and returns the result as a byte array .
calculates the angle of the angle in the angle .

/ * ---------------------------------------------------------------------------- -


calculate the number of .
transform a transformation
removes partition partition from the partition .
/ *
set the flags to the debug flags .
sets whether the index is in the .
opens the .
reads the data from the given chunk of range into the range of the specified section .


parses the http request and returns the result .
get the bounding box of the .
returns the latitude and longitude of the specified country .
returns the bounding box of the bounding box of the bounding box .
converts the specified data point into the .
finish the .
flatten the .
removes the specified tab from the given string .
pads the specified string to the given string .




displays the given callback .
/ * ( non - javadoc )
reads the xml content of the xml file .
writes the given xml document to the given document .
convert the document to a document .
creates a new object .
paints the .
returns the shape of the specified shape
write the css to the html element .
main method to create a cdx line .
starts the specified { @link } .
returns the count of all the elements in this {
returns the string representation of the first character of the given string .
returns the { @code src } array .
compare the given value into the target .
encode the byte buffer to the buffer .
/ * ////////////////////////////////////////////////
gets the type of a type .
gets the type of the specified id .
/ * ( non - javadoc )
decode the given section .
decode a single base64 encoded data
reads the data from the given section of the given section .
/ * ( non - javadoc )
/ * ( non - javadoc )
reads the input stream and returns the result as a string .
reads a {
convert the document to a document .
render the css class to the .
add all attributes to the attribute list .
{
{
get the list of time for a time series .
add listener to the listener .
main method .
{
returns the {
read the given data .
prints a string to a writer .
deserialize a byte buffer to a data stream .
append the data to the output stream .
checks if the given value is a finite number .
test if the given point is inside the .
computes the chunk of the specified chunk of the given chunk .
sets the value of the given value .


get the date in the iso 8601 date - time
returns the date of the date .




adds a new to the grid .
adds a new to the grid document .
adds a wcheckboxselect to the given .



adds a new variable to the given name .


/ * ( non - javadoc )

/ * ( non - javadoc )
calculates the main of the grid .
creates a from the given .
calculate the for the .
calculate the lat lng bounds .
read access access token
reads the from the given { @link } .
scans the and read scan data from the catalog .

read metadata from the metadata file .
/ * ( non - javadoc )
writes the given <code > / code > to the output stream .
write the metadata metadata element to the xml file .
get the number of blocks in the .
checks if the given file is valid .
opens the file system .
add the attributes to the set of attributes .
reads the data from the input stream .
writes the specified byte array to the specified byte array starting at offset <code > off< / code > to the specified <code > outputstream< / code > .
prints a string to the output stream .

serialize a string to a dataset .
clear the name of the set of .
prints a string literal .
prints a cdata - style declaration .
prints a character to the output stream .
prints the character to the output stream .
create a new instance of

returns the name of the .
get the name of the
/ * ( non - javadoc )
builds a from the given .
get the list of all the levels of the given level
get the dimension of a single space .
create a new bdd with the given variables .
/ * ( non - javadoc )
returns the number of consecutive bits in the given value .
the main method .
parses the text file and return the value of the property .
initializes the memory cache .
creates a new instance .
opens a new .
opens a dataset with the given input and writing the data to the given output .
opens a .
create a instance from the given .
/ * ( non - javadoc )
/ * ( non - javadoc )
opens a new .
open a file and return a new .
/ * ( non - javadoc )
get the file s location for the given file and ufs .
opens a new remote session with the given file and ufs .
this method is called when a new task is created .
clear all the variables in the input .
returns the horizontal and vertical axis .
returns the vertical offset of the given { @link sdocumentgraph } .
find the location of the given name .
returns the location of the given name .
closes the underlying database .
{
adds a { @link } to the given { @link } .

sets the value of the specified variable in the specified variable .
sets the value of the stringvalue to the specified value .
--------------------------------------------------------------------------------------------
{
print all packages of the given class .
dump the output of the file .
main method of .
get the raw data source for the given path .

get the coverage data collection .
get file from the httpservletrequest .
returns the for the given request .


open a file .
returns the array of objects .
returns the index of the first argument in the list .
gets the file chooser .
finds the type of the given type name .
gets the type of the service for the given name .
set the value of the property .
prints the info of the given citation type to the given file .
check that the given is valid and not null .

returns a list of features that are not affected by the .

gets the type of the specified column .
calculate the for the given .
add the given to the .
adds a new detail to the list .
removes the specified sub - page from the list of pages .
/ *
returns the number of bytes that are in the range of the range of the range of the specified range .

prints a string to the output stream .
deserialize a bytebuffer .
write data to the output stream .
adds a data stream to the output stream .
returns an inputstream that is used to load resource from the classpath .
returns true if the given file is a file .
creates a new data structure object .
/ * ( non - javadoc )
register a new .
registers a new .
returns a list of {
build a string for the given html string .
the main method .
/ * ( non - javadoc )

find the for the given .
find the first n - th geometry from the given input .

creates the for the given .
/ * ( non - javadoc )


checks if the given variable is a .

/ * ( non - javadoc )
adds the given to the given dimension .
{
find the for the given list of nodes .
filter the data for this dataset .
marks the given { @link } as a { @link } .
delete the given {
{
get the time - factor for the given time .
converts a time unit to a time factor .
parse the inchi string .
converts a calendar to a java calendar object .
main method .
find the absolute filesystem code for a given .
initialize the .
initialize the server .
/ * ( non - javadoc )
opens the file and opens the .
{
counts the count of counters in the given value .
returns the instance of the singleton instance .
adds a new name to the list of .
usage : java twitter4j . examples . .
compare the two column values .
compare the column s value .
get the group group group .

processes the given node with the given key .
peek off the event name .
creates a new attribute with the given name and attributes .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
checks if the given date range is valid and the range is not included .
{
get the attribute value .
returns true if the specified attribute is a valid attribute .
append a value to the specified value .
append a value to the specified value .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a new alias to the database .
delete the specified attribute value .
prints the <code > string< / code > to the <code > / code > .
prints the specified output stream .
create a new instance of the .
{
{
/ * ( non - javadoc )


registers the specified class .
registers a .
returns true if the given class is a supertype of the given class .
unregister the given class .
creates a new instance of .
get the biggest time interval from the .
returns the approximate time interval for a given time interval .
get the forecast offset of the given .
/ * ( non - javadoc )
finishes this node .
fills the { @link } with the given { @link } .
search for a given node in the group .
sorts the specified range of the list .
sorts the given list of .
compare two tables .

get the filename from the given file .
checks if the file is valid .
opens the file and opens the file .
reads the data from the specified data stream and returns the data .
find a variable with the given name .
find a variable value .
given a value of name / value pair with a given value .
returns the value of a { @link } .
find the records in the given dimension .
finds a structure structure with the given structure .
returns true if the given is a .

get the type of the given

get the dimension of the given key .
get the name of the dimension of the specified key .
get the value at the specified position in the given position .

returns the value of the <code > / code > property .
returns a section of the section of the section .
creates a new .
<p > . < / p >
<p > . < / p >
returns the bounds of the given {
finds the best equally - dimensional distances in the given list of .
finds the closest closest closest to the given target rectangle .

set the instance of the instance .
returns the name of the case where the name is the name of the collator .
returns the node that is the first node of the given node .
add an action to this menu .
add an action to the menu .
add a menu menu to this menu menu menu menu menu menu menu action .
adds a new checkbox to the menu .
returns the matching path .
finds the type of the given type name .
gets the type of the metadata .
opens the .
reads the data from the given byte array into the specified data point .
reads the data from the given data set .
convert a structure to a structure .
convert a to a byte array .
read the data of the specified layout data .
reads a structure from the given structure and returns the result .
calculate the compressed data .
calculate the center of the outline distance from the given source and the .
returns a new instance of .
adds a segment to this node .
the main method .
returns the index of the first occurrence of the specified substring in the specified range .
returns the failure of the specified byte array .

removes a from the cache .
adds a new { @link } to the given url .
called when a cache is completed .
stop the
stops the specified .
sets the visibility of the column visible to the specified column .
removes the column at the given column index .
moves the column index to the specified index .
returns the columns of the table .
{ inheritdoc } .
creates a new tablemodel with the given model .
returns a { @link } for the given { @link } .

writes the given <code > / code > to a <code > writer< / code > .
{
creates a new partition that is a {
returns a byte array that is the first argument of the specified type .
{
returns the number of times the next count is available .
closes the underlying stream .
{
{
deserialize a bytebuffer from a data stream .
get the provider provider for the given uri .
reads the table and read a table from the table .
parses the specified line string .
open a file .
get the location of the specified position in the specified position .
{
main method to set the main main status .
remove a variable data from the registry .
returns the result of the second element .
writes the diff to the given output stream .
reads the specified and returns a stream of all the lines of the given section .
creates the color for the color .
sets the number of colors in the rtf buffer .
returns the color of the data in the given color
sets the minimum value of the property .
prints the value of the specified <code > string< / code > to the specified <code > string< / code > .
adds a data sink to the data stream .
sets the world position of the bounding box .
this method is used to get the arc s image s data .
paints the foreground color of the radial component .
transform the screen and transform it into the output .

/ * ( non - javadoc )
creates a { @link } for the given { @code uri } .

returns true if the specified { @link } is a { @link } .

returns true if the current path is a locpathiterator .


generates the output stream for the given .
get the catalog - specific path mapping for the given filter .
returns the index of the first consonant .

read the metadata file from the assets .
add a metadata element to the list of pages .
validates the content of the given object .
read the content of the xml content of the given element .
/ *
/ *

read
/ * ( non - javadoc )
create a object from the xml document .
create a object from the given source .
create the object for the given .
create a new instance .
create the object .
returns true if the given string is a valid set of
/ * guarded
/ * ( non - javadoc )
adds a parameters to the specified parameters .

gets the parameter parameter .
main method to parse the arguments .
read the content of the input stream .
read bytes from the stream .
returns the input stream for the given resource name .

returns the approximate factor of the unit of units in the specified sphere .
returns the detail information for the given detail page .

{
returns the values of the values in the given map .
replace the template file template with the given template name and template .
set the value of the property .
get all the from the
add a propertychangelistener to the listener .
validate the current value of the given value .
checks if the given buffer is a valid .
checks if the value is a valid value .
restore the value of the given property .
{
send event to the fire event .

/ * -
get the bitmap of the specified file .
{
finds the type of the given type name .
gets the type of the given type .

sets the file to be used for the .

print the text to the rpm output .
set the flags to the debug flags .

parses the attributes of the given and returns the attributes of the widget .
the () method of the () method .
parse a name .
constructs the top - level scope for the given .
adds a new variable to the tree .
returns true if the parent is a parent group .
add a new attributes to the list of .
gets the for the given .
get the dimension of the group .
constructs a new build of the given dimensions .

convert a float to a
transform a binary constant .

checks if the given result is a valid .
/ * ------------------------------------------------------------
{
/ * ( non - javadoc )
returns the detail information for the given file .
get the icon of a popup from the screen .
returns a buffered image for the specified image .
creates a cursor for the given name .
get the file resource for the specified resource path .
main method to run the main method .
reads the data from the given data set .
reads the data from the specified data file .
reads the data from the given input stream .
reads data from a byte array into a byte array .
read data from the data .
read data from the given byte data type .
copy the data from the stream to the specified channel .




converts a byte array into a byte array .
reads a section of the supplied section of the given file .
returns the structure that is the same as the given <code > / code > .
adds a new value to the list .
{
returns the string value of the given property .
returns the { @link } object for the given index .
{
{
returns a {
prints a string to the output stream .
add the specified dimensions to the specified file .
main method of main main main .
create a new for the given path and return it .
normalizes the path .
get the image from the data .
sets the cache of the cache .
adds a new dataset to the specified location .
add a scan to the list of .
add a collection of to the list of objects .
called when the task is complete .
creates a new { @link } .
get the jpeg - encoded checksum of the given jpeg and return a new {
creates a dataset from a dataset .
set the of the underlying stream .
/ * ( non - javadoc )
adds a point to the point .
sets the next line .
sets the line to be used for the tree .
creates a new line with the given dataset name .
returns the of the points of the maze .
returns the of the points of the points of the points of the point .
validate the type of the string .
match the operator .
compare the filter with the given filters and return true if the filter is not a list of filters .
adds the specified feature to this multipoint .
get the for the specified feature .
{
parse a constraint .
send a {
evaluate the result .
/ * ( non - javadoc )
print the constraint .


sets the number of the in the given map .
checks if the given dimension is a valid dimension .
finds group from group .
reads the content of the content of the given text .
returns the url of the url that is the uri of the uri .
returns the uri of the .
parses the file and return the string representation of the file .
returns the list of property names that are currently in the section of the specified section .
get the value of the property with the specified name .
prints the list of files to the list of urls .
sets the section to be used for the section .
sets the projection matrix for the specified field .

writes all the entries of a variable to a given .
writes a variable attributes .

adds a layout component to the specified component .
/ * ( non - javadoc )
removes the layout component component from the list .
returns the preferred width of the parent of the specified parent .
returns the minimum bounding box size .
/ * ( non - javadoc )

creates a new instance of .
returns the maximum allowed for the given unit .
<p > get the time units for the specified <code > / code > . < / p >
main method to create a new kafdocument .

process a method call on the remote pyro menu .
this method is called from to .
sends a url to the graphite server .
returns the set of for a given .
smooth the .
returns the average of the .
computes the cross - origin of the cross - curve point .
compute the cross - point of the cubic cubic curve .
compute the line of the line segment of the line .
returns the magnetic coordinates of the latitude and longitude coordinates .
returns the element at the specified position in the range of the specified vector .
computes the cross - product of the given vector of x .
returns the angle of the bounding box .
returns the angle of the specified { @link } .
set the to be used for the time .
checks if the file is a valid point .
writes a point to the file .
checks if the file feature is a valid point geometry .
write featurecollection to a kml list .
returns the {
returns the value of the member with the given name .
get the value of the specified object .
convert the given value to a { @link } .
returns the value of the member with the given name .
returns the structure of the given member .
returns the structure that will be used to create a new .
returns the sequence of the member name .
writes the given {
returns the full name of the parent .
returns the authority of the smsc .
get the access access to the specified type .
find the access access key for the given access .
find the dataset with the given name .
returns the parent catalog .
<p > retrieves all the metadata for the specified type . < / p >
find the service for a given service .
returns the current access to the current parent .
returns the { @link } for the given { @link } .
{
returns a perspective projection for a geopoint .
converts a latitude point in wgs84 datum to the golden position .
converts a to a
converts a poi to a latitude / latitude .
main method to create a .
returns a list of all that are not partitioned .

returns the location of the specified time .
get the location of the specified position in the specified position .
adds a new shape to the array of .
returns the array of integers .
creates a new { @link } with the specified parameters .
calculates the of the nearest .
computes the of a point in the kernel .
computes the for the given .
get the approximate approximate value of the given .
returns a perspective projection for a latitude / longitude pair .
converts a latitude coordinate to a { @link } .
calculate the of a series of
converts a to a string representation .
主程序
print the specified line to the given writer .
write the to the xml document .
main entry point for testing .
{
opens the file and opens the .
returns the detail information of the given detail log .
creates a new { @link } with the specified parameters .
creates a new variable with the given variable name .
creates a new variable with the given name and attributes .
add the attributes to the attribute .
returns the number of variable names that are currently mapped to the given name .
creates a new list of variables .

creates a new {
/ * ( non - javadoc )

prints the specified symbol to the specified string .
parse the given string to parse the data to be parsed .

prints the output to the output stream .
parse a string representation of a constraint .

compares this object with the specified object .
compares this string to the specified string .
reads the contents of the object into the .
read a string from the stream .
read the data from the input stream .
reads the contents of the specified chunk of bytes .
reads the header of the header of the stream .
initialize the { @link } .

@deprecated use instead .

convert a string to a date .

read a list of table names .
reads a table from the input stream .
copies src to src dst .
copies all the and to the target group .
/ * ( non - javadoc )
{
finds a group from a group .
get the file name from the file .
opens the file and opens the file .
{

returns the index of the specified character in the specified array .
returns true if the given character is a letter .
replace all occurrences of the given string with the given string .
parses a string interpreting a number .
parses a string to a double value .
parses a long string .

returns the end of the end of the end of the end of the given index .
returns the end of the end of the end of the end of the given index .

create a new index if the name is a valid index .

create a plannode {
validate the text field .

sets the value of the text field .
gets the data type for the given type .

computes the correlation coefficient for the given vector of two numbers .

returns the x - y - z of the specified point .
calculate the for the
computes the cauchy - dimensional array of { @link vec } .

returns the 3d - sine of the given vector of x .
read a map from the map .
clean up the unit name and trailing separator .
clean up the name of the name of the given name .


returns the url of the url to the url .
get config feature for a given file .
get the shape of the polygon .
get the shape shape for the given projection .
get the shape shape for the given projection .
initialize the .
creates a factory for the given { @link } .
returns the value of the given variable .
returns the for the given .
parse the given
returns the for the given variables .
parse the given and return the .
/ * package
find the for the given name .

finds the index of the given index in the given index .

returns the shape of the shape
get parent group
returns the dimension of the dimension of the dimension
find the index of the specified name in the dimension .
get the abbreviated iso 8601 units .
returns the shape of the section of the section of section
returns a {
returns the section of the section .
returns the slice of this symbol .
/ * ( non - javadoc )
sets the enum value for this .
reads the specified shape and returns the result .
reads the data from the input stream .
reads the content of the section and returns the result .
reads a string value from the input stream .
reads the data from the stream .
read the given {
reads the contents of a file into a single space .
read the section from the stream .
reads the data from the stream and close the data .
returns a new instance of the specified {
returns a string that is a string that is a string of the specified name .
returns a new instance of the specified {
get the specified number of elements in the given buffer .
calculates the name of the .
returns a string representation of the given name .
returns the string representation of the given string .
sets the data type for the data type .
sets the dimension of the dimension .
reset the shape to the specified shape .
sets the dimension of the target group .
reset the dimension of the dimension of the data .
set the dimensions to be used for the specified shape .
sets the dimension dimension dimensions of the given dimension .
returns true if the cache is not a cache ( e . g . ) .
sets the cache data for the data .
returns all the dimensions that are in the given dimension .
returns true if the given variable is a valid .
set the bounding box of the given .
called by the .

returns all the existing datasets .
checks if the given path contains a matching path .
sets the rtfdocument of the { @link } .
fill the node with the given node .
{
declares the struct .
this method is called by the method .


fill the with the given dimensions .
converts a to a .
renders the given variable in the given model .
fills the features of the with the given label and the column family .
find all the matching vat ids .
create a cdx file for a file .
get the list of all available
check if the given string is a valid js code .
scans the file and creates a brand file .
prints the constraint to the print writer .
returns the description of the given type description .
method to find the number of files in a file .
process a message chunk .
process a sequence of objects .
create a record for the given
write featurecollection to a file .

process the servlet request .

{
/ * ( non - javadoc )
sets the display area for the specified width and height .
calculate the transform from the image .
get the projection matrix for the specified area .
returns the world to the screen .
returns a rect that is a projection that is a projection that is used to visualize the point in the screen .
returns the rectangle to be used for the screen .
draw a rectangular area .
draw a zoom to the screen .

add listener to the list .
remove listener .
send event to the client .
/ * ( non - javadoc )
prints a string to the standard output stream .
prints the standard output to the print file .
print the file to the output stream .
prints the value of the <code > file< / code > .
print the value of the <code > / code > .
prints out the variable data to the given .
prints out the section of the section section of the section .
prints the data structure from the given <code > / code > to the <code > / code > .
prints the array of { @link } objects .
prints the array of { @link } s to the output stream .


gets the factor for the specified attribute .
read a double value from the attribute .
read a single attribute value .
adds a parameter to the rpm output .
get the radius of the .
main entry point for the test suite .
{

reads the contents of a { @code } .
reads the value of the specified { @link } .
read the given { @link } .
sets the value of the property .
creates the .

save the current state of the .
sets whether the menu is composited .


get the parameter value for the specified field .
returns true if the specified value is a positive - value .

this method is used to set the icon to use for the icon .
creates a button menu for the menu button .
convert the given value to a { @link } .
convert the input data to a { @link } .
checks if the given { @link } is compatible with { @code } .


returns a list of all polygons in the given index .
returns a list of lines of the given { @code name } with the specified name .
returns a list of points within the specified index .
sets the offset offset for the bit .


sends a connection to the server .
/ * ( non - javadoc )
/ * ( non - javadoc )


/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )

{
converts a latitude point in wgs84 datum to the specified latitude and longitude .
{
get the from the
returns the neighbors of the neighbors of the .
get the neighbors of the neighbors of the polygon .

returns true if the specified name is a string .
returns true if the given feature is a valid .
generate the catalog - catalog - spam catalog .


checks if the file is valid .
read header .
initializes the .
handles the processing of the .
handles the .
called when the is received .
converts the header to a string representation .
reads the root element of the stylesheet .
remove the character data from the beginning of the text .
returns true if the specified file is valid .
opens the file and opens the .
add the attributes to the set of attributes .
checks if the file is a valid format .
reads the data from the file and returns the data from the file .
reads the data from the input section .
unescapes the escaped characters of a string literal .



encode a string to a string .
creates a variable definition for the given structure and parameters .
add the attributes to the .

prints a string literal for a string .
prints the value of the <code > / code > .
sets the project state .
serialize a string to a json document .
sets the projection strategy for the specified dimension .
returns the number of dimensions that are in the specified dimension .
print the current .
returns a short - friendly byte array at the specified offset in the given offset .
swaps the bits in the given byte array starting at the given offset .
computes the number of trailing zeros in the given range .
returns a new big - endian constant .
returns the approximate double value of the given double .
converts a byte array into a byte array .
returns a byte array representation of the byte array .
converts a long into a byte array .
reads the array of integers from the stream .
applies the { @link } to the { @link } .

get the time in the
get the specified {
returns the effective { @link } for the given { @link } .
returns the xml file that is the last modified time of the given resource .
/ * ( non - javadoc )
parse the given string to parse the content of the xml file .
resets the state of this builder .
/ * ( non - javadoc )
/ *
returns the value of the specified time in the specified time .
returns the location of the specified point in the specified position .
creates a new <code > / code > that is inside the .

/ * ( non - javadoc )
writes all the features to the output .
add a new record to the list of grid .
returns true if the record is a list of the records in the list .
add the specified dimensions to the given .
adds a to the .
{
returns the index of the record at the given index .
clean up the timer .
returns the default default default default value for the given property .
sets the root directory for the root directory .
returns the cache file that is in the specified file .
get file from the file .
checks if the file is a file .
returns the file cache for the given file or null if no file exists .
creates a new file with the specified prefix .
creates a new path mapping for the given file and path .
print the cache for the given file .
clean up the cache if it is not a directory and the old value is not found .
returns a formatted string that is the first argument of the specified class .
/ * ( non - javadoc )
/ * ( non - javadoc )
calculates the bearing for the given point and the given point .
calculates the { @link } for the given point .
calculates bearing for a given radius .
calculates the bearing for the sky and farther the bearing from the current sky and the second sphere .

finds the point in the given point .
finds the point in a point in a single point .
returns the point of the poi and ending points .
returns the point of the point in the given point .
load a single thread to load the specified number of items .
load the specified { @link } from the specified url .
loads the from the .
stops the current thread .
stops the current thread .
returns the dimension of the image .
adds a listener to the listener .
remove a listener from the list of destinations .
set the status of the status .
sets the image source to be displayed on the specified location .
returns the uri of the given uri .


returns the number of syllables of the number of bits in the given .
check if the given object is a .
returns the hash of the given .
load the header of the file .
loads the data from the input stream .
get the value of the field with the specified name .
get the deviations from the given name .
get the string representation of the specified field .
returns true if the specified field is a valid .
get the field name from the field name .
returns the names of the fields in the field .
main method to help for debugging purposes .
get attributes of the map
set the attribute value .
remove the attribute from the attribute .
get the group from the group .
get the container for this container .
sets the parent of this node .
returns the short name of the string that is the name of the .
returns a list of path .
get the path to the current container .
returns a list of that will be used to sort the group .
returns the path of the .
returns true if the current level of the current parent is visible .

add a new variable to the .
returns the info for the given string .
build a document from the given document .
build the {


associate the bean with the given key .
associate a collection of with the given key .
associate a bean object with the given key .
returns the bean identified by <code > key< / code > .
returns the names of the children of the given list .
get the list of all the nodes in the path .
returns the actioninsertfact of the keys that are currently in the given set of keys .
/ * public void ( ) { try { = new ( ) ; }
returns the child of the given name .
returns the string representation of the specified key .
update the specified value .
remove the node of the given node .
get the object name from the cache .
reads data from the file into the file .
read raw data from the given file .
reads data from the data file .
reads the data from the specified file .
/ * ( non - javadoc )
prints the variable variable to the given data .
print the .
creates a new { @link } instance .
write a string to a string
write the content of the file to the output stream .
write a stream to the output stream .
write a xml element to a writer .
create a dom element .
creates a new enum element with the given name and value .
creates a new element that is the element of the given dimension .
creates a new element of the given variable .
parses the value of a fieldtype in a .
create a from the given container .
===========================================
{
get the statistic name for a given id .
{


returns a unit unit that is in the given symbol .
returns a {
create a new instance .
create a new instance .
returns the instance of the instance .
update the .
{
convert a to a .
find the first element of the specified target .
find the upper bound of the specified value .
find the element at the specified target .
find the nearest neighbors of the specified target .
find the smallest element of the nearest neighbors .
finds the best nearest neighbors .
finds the closest closest to the nearest neighbors .


get the bbox for the given index .
{
writes the data to the output stream .
/ *
process a table column .
perform the start of the file .
check the params that are not valid .
check that the database tables are not valid .
iterates over all files in the specified file and returns the result .
this method is called when the encoding of the is a valid .
called by to add all the to the list of .
opens a new .
create a new { @link } for the specified { @link } .
creates a new { @link } .
opens a new document for the specified location .
find the access access to the access list of the .

get the access to the access object .
find the access type of the given type .
returns the access type of the given type .
returns the detail information for the given appinfo .
reads the structure of the specified number of integers .
reads the data from the file and returns the data .
reads the data from the specified file .
returns the binary data for the given file .
reads raw data data for a given file .
returns the child path for the specified url .
generate a string representation of the given type .
******************* beginning of fullname .
returns true if the given file is a valid .

normalize the system properties and return the result .
returns the for the given
/ * ( non - javadoc )
checks if the given path contains a value of the given path .
compile the graphviz dot semantic version .
/ * package
get the groups for a group .
print the specified result .
called by the documentation of the documentation of the {
get the value of the specified key or null if there is no such key .
inserts a value into the object .
removes the specified key from the list .
returns the date of the calendar .
/ * ------------------------------------------------------------
prints the node to the given node .
/ * ( non - javadoc )
print the flags .
returns true if the given attribute is a column family .
prints the matrix to the given .
returns a string representation of the segment .
initializes the and .

reads a variable - length section .
sets the value of the attribute .
sets the value of the property .
returns the number of characters that are in the format of the binary file .

sets the value of the property .
find the current position of the given .
find the name of the collator that will be used to retrieve the .
find the first of a given geometry type
find the first horizontal or null if not found
finds the dimension of a type .
find the coordinate system for the given {
find the location of the given type .
sets the project s state .
{
prints a string literal .
prints the characters to the output stream .
sets the project state .
sets the flags for the given state .
serialize a gantt data to a stream
add a variable to the graph .
returns the variable with the given name .
returns the variable at the given index .
get the variable for the given column name .
check that the given { @code } is a valid { @code } .
prints the value of the specified <code > / code > .
deserialize a byte buffer to a byte buffer .
/ * deserialize the data to the given data stream .
deserializes a single string from the given stream .
reads a byte from the input stream .
write marker data to the output stream .
adds a data sink to the output stream .
create a new instance .
parse the document .
resolve a entity to an external dtd namespace .
/ * ( non - javadoc )
/ * ( non - javadoc )

main method .
returns the value of the <code > / code > property . <p >
returns the number of all of the rdns in the list .
initializes the .
<p > sets the value of the <code > / code > object that defines the value of the <code > / code > object that contains the <code > / code > page . < / p > <p > if <code > includemap< / code > is less than the current value the results will be updated to
sets the selected .
/ * ( non - javadoc )
set the status of the { @link } .
lookup a symbol for a given type .
converts a latitude point into a latitude coordinate .
converts a latitude coordinate to a latitude coordinate .
writes the xcal document to the given output stream .
writes the given xml file to the given output stream .
write the metadata metadata
adds a rectangle to this polyline .
adds a new { @code } to the closest position in the range of the closest line .
intersection of two rectangles .
check if the given point is a point .
read the data from the stream .
writes the given object to the output stream .
returns true if the two points are equal
/ * ( non - javadoc )
adds the unit to the current unit .
adds a new alias to the alias .
adds a symbol to the symbol .
adds a new alias to the document .
adds a new alias to the specified organizational unit .
get a unit by name .
adds a name to the name of the given organizational unit .
adds a value to the symbol .
adds a unique key to the map .
builds a list of files from the file .
adds a menu to the menu .
returns true if the name is global or not .

find the record that contains the specified file .
returns true if the text is a valid .
read the given data .
sets the data to be used by the .
serialize a string to a string
get the values of the parameter .

{
calculates the rotation of the specified point .
returns a perspective coordinate of the latitude and longitude . <p > the latitude and longitude coordinates are the same as the proportion of the earth .
converts a latitude point and a { @link geopoint } to a { @link } .
converts a to a latitude - z - 1 and z .
reads xml document from the database .
draw the image .
creates a new { @link } with the given url and url .
opens a new .
opens a new .
opens the for the given input stream .
find the access to the access object that can be used to access the .
{
get the access to the specified .
find the access to the given type .

removes a property from the list .
adds a new .
returns the collection of files that are not included in the file .

returns a new instance of that will be used to generate a object .
returns a new instance of that will be used to generate a object .
returns a url that uploads the file to the server .
{
render a document to the given document .
returns the velocity template for the given <code > / code > .
/ * ( non - javadoc )
read the given xml document .
/ *
sets the projection strategy for the key .
create a clone of this <code > / code > .
reads the serialized data structure from the given and returns a volttable - representation of the given .
sets the url to be used for the specified .
sets the image to be displayed in the specified image .
/ * ( non - javadoc )
converts the given { @link } to the { @link } .

called when a mouse scroll is scrolled to be scrolled .
called when the vertical scroll bar is scrolled .
applies the vertical vertical bar to the front of the current stroke .
called when the vertical scroll bar is the widest .
set the location of the .
/ * paint the foreground color of the bitmap .
documentation inherited from interface
returns the number of bytes that are in the specified array of integers .
===============================================================

returns the number of characters in the specified string .

returns the number of holidays in the specified .


returns the string representation of the first character of the given string .
returns the array of integers .
returns the resolution of the .
get the data type for a given type .
read data from the input stream .
copies the bytes from the input stream to the output stream .
print the current value of the <code > / code > .
adds a file to the output stream .
returns the tag of the given {
main method to create a string with the default values .
opens the url .
returns the next image from the current position of this .
returns the number of columns in the given type .
convert the given type into a vector of bytes .
returns the sum of the array of ints
sets the grid width and height of the grid .
sets the shift of the specified <code > / code > .
clears the total number of values .
mark the screen and the diagonal .
find the first search at the specified position in the current position and the point in the current point .
find the nearest neighbor at the specified position in the specified position in the specified position .
find the closest closest to the specified point .
finds the closest point in the closest point in the closest rectangle at the end of the center of the given path .
computes the squared euclidean distance between the two specified points .
set the status of the given .
returns url of url path
query the of the given query .
reads the coordinate of the .
returns the location of the specified index .
get the for the given id .
main method that is used to generate a new robot .
creates a new { @link } with the given name and name .
stores the metadata key in the cache .
returns a list of all protocols .
find the url of the .
/ * ( non - javadoc )
parse a fragment fragment from a fragment .
finds the search path .
returns the extension path for the given path .
returns the for the protocol .
checks if the given location is a valid .
checks whether the given location is a valid uri .
checks that the given location is a valid resource type .
checks whether the given location is a valid location .
sends a call to a byte array .
returns the suffix of the specified chrono class .
returns the prefix of the specified id .
find a file from the file .
/ * ( non - javadoc )
/ * ( non - javadoc )
extracts the bytes from the buffer .
returns a list of { @link } s that are not { @code } .

checks if the given list contains the specified dimensions .
joins the given array of strings into a single string .
checks if the path is a letter or a letter .
get the list of eips in the url
returns a list of all the elements in the given array .
returns a list of { @code } s .
returns the offset of the offset of the offset in the offset of the offset of the offset in the offset of the offset .
returns a list of .
checks if the given list contains the given list of elements .
checks if the given list contains the given list of integers .
returns the index of the first occurrence of the specified { @code index } .
reads the data from the specified stream and returns the result .
reads a <code > / code > from a pdb file .

create a document .
write a file to the file .
returns the .
creates a new { @link basicvector } from the specified object .
set the value of the property .
sets the name of the .
creates a new { @link } .
prints a print .
read a from the given stream .
reads categories from the file .
add a field to the collection of text .
reads config file from the file .
read config from the catalog .
add a new type declaration .
updates the groups of the group .
returns the node with the specified name .
find a variable in the group .
checks if the given group is in the target group .
checks if the attributes are valid .
checks if the given group is in the given group .
checks if the given list contains all items .
checks if the given list of occurrences of the given list contains all occurrences of the given set of patterns .

gets the type of the property .
get the type of the specified time range .



returns a list of ranges that will be returned by the { @link } .
returns the projection projection for the bounding box of the specified bounding box .
returns the bounding box of the poi - line with the given coordinates .
calculate the amount of points in a geographical world space .
returns a projection that is used to calculate the distance between the two points .
returns the points of the points that are in the wgs84 - points .

set the value of the property to be used .
sets the timeout for the timeout .
set the compression compression flag to use for the compression file .
sets the global namespace for the given credentials .

returns the cookie for the specified cookie .
sets the maximum value of the given .
sets the value of the property .
sets the current session for the given session .
closes all the resources that are currently open .
sets the authentication provider for the provider .
sets the value of the specified user to the given token .
sets the authentication information for the given http proxy .
creates a map that maps the map - reduce - to the map .

/ * ( non - javadoc )
/ * ( non - javadoc )
/ *
sets provider credentials provider .
kill the session .
sets provider credentials provider .
this method is called from the method .
returns the index of the specified shape
computes the average of the of the given shape and returns the average value of the specified shape .
returns the index of the specified index .
returns the section of the specified ranges in the range of the specified ranges .
returns the elements of this vector with the specified value .
compute the median of the specified dimension .
computes the knn of the specified two - 1 - based index .
returns the median of the specified array of integers .
returns an iterator that combines the index of the iterator in the iterator .
returns the current element .
sets the current counter .
sets the index of the element at the specified index .
sets the dim - dimension of the specified value .
sets the specified value to the specified value .
converts the given string to a string representation .
returns the time interval for the given field name .
/ * ( non - javadoc )

read all the parameters from the given abstracted date .
returns the list of key - value pairs that are not in the given time .
creates a date list of the dates and the date - time .

returns the list of all the .

get the list of key names of the given key .

returns the list of dates that are not included in the date .
prints the dates to the print date .
prints the number of messages to the given output .
find the index of the specified id .
returns the file type of the file .
/ * ( non - javadoc )
sets the indentation of the .
initialize the visitor to be used for creating a new { @link } .

/ * ( non - javadoc )
returns a new { @link } that combines the result of { @link } .
collects components from the given {
collect all fields from a gantt designer .
/ * ( non - javadoc )
translates the given { @link sparsevector } to the given { @link } .
translate the given .
negates the given { @link } .
set the variable for the specified variable .
set the bounds of the screen .
read the index of the file from the given file .
creates a new { @link } with the specified name and name .
adds a scan to the classpath .
/ * ( non - javadoc )
checks if the given time is in the .
set the flags flags for the .
adds a variable to the given variable .
/ * ( non - javadoc )
add a new record to the list of fields .
returns the index of the first occurrence of the given element .
returns the xml file that is the same as the given input .
creates a document that is a document that is a document that is a document that is a document that is a document .
main method to run the .

validate that the given xml document is a valid xml schema .
{
returns a list of all the variables that are not included in the group .
sets the variable variable to the given variable .
read a stream of the given {
read a stream from the stream .

converts a { @link } into a { @link } .
converts a { @link } into a { @link } .
convert a set of members into a variable structure .
find a variable name from the given name .
checks if the given variable is a member variable .
sets the variables to be used in the .
opens the file with the given path and returns the file .
process the grid and returns the output file .
/ * ( non - javadoc )

registers a dataset .
prints the constraint to the given printwriter .
{
reads the data from the data section .
reads the data from the given section of the given section .
creates a new {
creates a sequence of lists that are ordered by the given sequence .


creates a new sequence of variables .
add a viewport to the container .
sets the given uri to the provided uri .
returns a string representation of the given uri .
get the catalog - catalog property from the given uri .
returns a catalog - name of the specified uri .
returns the { @link } for the given { @link } .
/ * ( non - javadoc )
<p > . < / p >
writes the given { @link } to the given output stream .
writes a given file to the given file .
reads the velocity template string into the given { @link } .
get the metadata for the specified key .
this method is used to get the from a catalog .
returns the unit name for the given root .
/ * ( non - javadoc )
{
convert the given array of values into an array of doubles .
returns true if the specified domain is compatible with the given seven .
main method .
writes the feature s envelope to a geometry .
writes the point to the given point .
writes the line to the file .

parses a xml document .

creates a attribute with the given name and name .
returns the list of nodes in the given tree .
parse the node .
<p > process a node . < / p >
returns the string representation of a given .
returns a that is a of the given structure .
sets the member indices for the given member .
creates a new instance .
get the polygon with the given name .
read a line from the given string .
reads a point from the given index .
returns the geometry type of the given type .

this method is called by the operator .
this method is called by the to write a new label to the given generator .
restores the data from the given dimension .
create a new instance of the specified type .
create a factory for the given type .
/ * ( non - javadoc )
creates a new object with the passed in object .

returns true if the given latitude and longitude is not obscured by the given point .
returns true if the specified geolocation is inside the middle of the radar .
extends the given point in the latitude and longitude .
start snippet :
returns the intersection of the .
returns the string representation of the poi .
adds the specified array to the array .
adds the specified result to the array .
check if the passed in array is a valid shape
returns true if the passed shape is a valid shape .
convert the given type to a primitive type .
copies all data to a single byte array .
copies the array of booleans to a copy of the original array .
copies the elements of the given array into a new array .
copies the given array of values to a specified destination .
copies the elements of the given array into a long array .
copies the elements of the specified array into the result of the specified array .
copies the elements of the specified array into the output array .
copies the elements of the given array into a { @link } .
copies the contents of the given byte array into the specified output array .
copies the elements of the given array into a boolean array .
copies the objects in the array to a new object .
returns the minimum minimum of the minimum value for the specified minimum value .
sets the value of the specified value .
returns the sum of the sum of the average of the largest average .
/ * ( non - javadoc )
returns a new { @link } with the specified data .
compare two .
{
<p > . < / p >
returns the value of the specified <code > table< / code > element with the given name .
returns the value of the <code > table< / code > element with the given name .
resolves aliases and resolve it .
resolves aliases and resolve the tagk and aliases .
resolves aliases and returns the value .
get the attribute of the .
creates a copy of this instance .
creates a new .
returns the for the specified start point .

creates a projection generator that combines the joiner to the given projection .
returns a copy of this resource with the specified fname .
converts the given latitude and longitude coordinates to the given location .
{

url function that is used to decode a string that is a string that is a string that is a url that is a string that is a url that is a string that is a url that is a string that is a string that is a string that is a string that is a string that is a string that is

escape the escaped string literal escape sequences of the given string .
unescapes the string representation of the escaped string .
returns the string representation of the given string .
returns the index of the character in the given string .

escapes the string representation of a string .

reads the value of the given property with the given name and returns the result .
the method to read a single value from the given variable .
returns the offset of the template .
returns the element size of the .
returns the offset of the given file .
returns a path that is a path that is a path .
get the type of a column .
saves the given file to the given file .
returns all descendants of the given container .
returns all descendants of the given container .
returns the type of the specified class .
returns a {
returns the first element of the given class .
get a map of component components from a component .



get properties from component properties .
returns the class of the component .
compiles the spreadsheet and output variables .
create a { @link } from a { @link } .
analyze the given { @link } .
create a sequence of { @link } s .
creates a from the given sequence .
reads the checksum from the given byte buffer .
/ * ( non - javadoc )
reads a long value from the stream .
read a long value from the stream .
computes the intersection of the given type and column in the given dimension .
read a file from the given file .
add a listener to be informed of the listener .
removes a listener listener from the listener .
returns true if the given { @link } is a { @link } .
returns the field value of the field .
get the value of a field name .
sets the value of the field field value .
adds a field to the table .
adds a new field to the specified field .
add a field extractor to the specified field .
adds a field value to the field .
adds a field to the field .
adds a password to the specified field .
add a textfield field .
<p > add a text field to the field . < / p > <p > <b > note : < / b > this method appends the values to the existing field if it is not found .
adds a text field to the field .
adds a heading to the grid .
add a component to the component .
adds a new row row to the builder .
called when the next item is ready to be displayed .
find the frame of the frame .
read the given data .
returns the value of the property .
get a factor of factors that is a factor of factors . this is a convenience method that returns the factors of factors that are not defined in this .
/ * - multiply the aad factor .
> > > > > / p > <p > / p >
<p > checks whether the specified object is a complex dimension of the specified length . < / p >
returns true if the specified list contains the given number of insertions .
initializes the instance .
notifies the listeners that the event is notified of events .
notifies the listener that the given object is registered .
notifies that the given node has a given value .
persist the cache .
persist the cache .
returns the cache name for the cache .

factory method factory method to create a factory factory method .
creates a factory for the object .
get the table for the specified table .

adds a parameter to the database .
{
{
/ * ( non - javadoc )
convert the input to a unit to a unit of the same length as the same value .
returns the result of the specified { @link } .
checks if the file is valid .
opens the file and opens the log file .
creates a file for a file .
reads the data from the input buffer .
initializes the unit table .
creates a new for the given outline .
adds a to the .
reads the descriptor from the file and returns the result .

returns the name of the file name .
checks if the given file is a valid .
reads a short from the byte array .
returns the number of bytes written to the specified byte array .
reads the contents of the specified byte array starting at the specified offset .
returns the offset of the specified bytes in the specified byte array .
returns the default { @link } for the given name .
returns the instance of the singleton instance .
/ * ( non - javadoc )

performs a operation on the given alias .

main method .
/ * package private
resolves the uri against the given base uri .
create a { @link converter } instance from the specified unit .
write a record to the record .
add a selection listener .
remove a listener from the list .
sets the data structure for the given data set .
set the feature data to be used for drawing the data
draw the specified graphics .
returns a new instance of the .

create a unique time from the given .
create a new .
this method is used to set the to the .
/ * private void ( ) { = new ( ) ; }
{
execute the file .
reads the stream and return the stream .
reads a buffer from the input stream .
reads a buffer from the stream .
reads the buffer from the input stream .
reads the current value of the current byte buffer .
reads the specified byte array into the specified byte array starting at offset <code > off< / code > to the specified <code > byte< / code > .
skips the number of bytes in the input stream .
opens the .
usage : java twitter4j . examples . .
returns the for the given time .
returns the location of the specified position in the given position in the given coordinates .
returns true if the given list contains the given record .
add the specified dimensions to the given
adds a new to the .
returns the index of the field .
checks if the given file is valid .
opens the file and opens the file .
reads the data from the given section of the given section .
read the data from the given byte buffer .
reads the data row from the data stream .
create a new from the given .
create a psuedo variable for a given variable .
create a clone of this object .
draw a event .
sets the area .
sets the area of the area .
set the histogram for the poi and end points .
set the location of the .
adds menu menu menu menu to menu .

set the .
/ * ( non - javadoc )
paints the foreground of the radial foreground draw .
this method is used to get the image from the graphics .
transform the screen coordinates into a transform .
creates a new screen using the specified rectangle .
draw a rectangle .
sets the selected node .
returns the type of the specified type .
get the value of the { @code double } th variable .
get a double from a vector .
returns a list of object from the given object .


/ *
returns the for the given .
calculates the number of bytes that is the number of bytes of the compressed data .
finds the best match for the given name .
{
returns the total size of the iterator .
reads the tiff file and returns the result .
/ *
returns the number of steps in the specified file .
get the file name from the given path .
gets the list of files that are not included in the binary rules .

returns the full path of the file .
adds a new to the list .
write out data to the output stream .
write data to the stream .


creates a new list of objects with the passed in array of <code > paragraph< / code > objects .
checks if the file is valid .
/ *
get the data data from the input buffer .
read the file and write it into the file .
/ * package private
/ * ( non - javadoc )
check the header size of the file .
/ * compute the for the given .
/ * package private
/ * package private

/ * ---------------------------------------------------------------------------- - bit
returns the bitmap of the specified data point .
parses the given byte buffer .
parses the data from the data stream .
parse a list of parameters from the input stream .
adds a string representation of the property .
read a string from the input stream .

returns the stemmed version of the specified subset of the given set of levels .
returns the indices of the first occurrence of the specified array .
returns the indices of the stemmed array .
returns the stemmed levels of the array .
returns the indices of the first occurrence of the specified array .
adds a variable to the solver .
adds a parameter to the training file .
returns the highest level level of the specified .
/ *
/ * ---------------------------------------------------------------------------- -
reads a number from the buffer .
reads the and writes the data to the buffer .

get the crc value of the given byte array .
reads the and writes the data to the given buffer .
convert the data type to a byte array .
convert the data type to the byte representation of the byte array .


get the for the specified <code > / code > .
returns the code for the code .
returns the value of the <code > name< / code > property .
/ *
/ * [ deutsch ] <p > interpretiert die angegebene . < / p >
initializes the .
process the request url .

process a resource .
process a data source .
add cors headers to the response .
get the request state for the given request .
process the response .
set the { @link } for the specified { @link } .
set the value of the property .
returns true if the point is inside the point .
==============================================================================
ends the mouse and dragging .
/ * ( non - javadoc )
returns the bounds of the rectangle .
returns the last rectangle .
returns the date of the text that is in the specified text .
<p > converts a text to a date . < / p >




converts a date string to a date .
replace all the keys in the list with the given { @code } .
check that the value is a valid array .
rounds a number to the number of digits .
initializes the database and create a table .


read a file from the file .
read the file from the file .
read a file from the file .
reads the pdf of a file in the form of a .
calculate the number of integers in the specified value .
reads a file from the file .
counts the number of bits in the given byte array .
{
calculates the euclidean distance between the two points .
generate the string for the html anchor .
returns the scale of the earth - carlo api for the given point .
returns a {
converts a latitude coordinate to a coordinate .
converts a to a string representation .
converts a into a single value .
escapes the given string and escapes the entities and replaces them with the given string .
escape the escaped character escape sequences of the given string .
unescapes backslash characters .

clean up a string from a string .
handles the feature request .
creates a new object .
/ * package
returns the service resource for the path .

returns the number of elements in the given bdd .
add a variable to the .
returns the variable at the given index .
check the existence of a set of .
prints a string literal .
add a data sink to the given output stream .
returns the subset of the specified { @code } .
returns the grid object .
creates a new instance of .

/ * ( non - javadoc )
{
{
<p > returns the value of the specified date - time in the hour minute and second . <p > the calendar is uniquely - skala for the month - day . < / p >
returns the
creates a document from the xml document .



returns the file name for the given file .
returns true if the given {
/ *
get the type of the property .
opens the file and opens the file .
reads the data from the data section .

cvc ( or not )
cvc ( or ) is called on the same time .


get the catalog from the specified file .
creates a new catalog - specific catalog from the given directory and returns the resulting string .
find the type of the given type .
gets the type of the {
sets the value of the specified property .
deserialize a bytebuffer .
adds data to the output stream .
add a { @link } to the set of system system .
returns the description of the description of the given attribute .
set the units in the units in the units in the units in the units in the units in the units in the units in the units in the units in the units .
returns the abbreviated string for the given attribute name .
initialize the .
/ *
checks the for the given .
reads the catalog from the path and returns the .
process a single file .
read a file from the given directory .

returns { @code true } if the given longitude is a css country .
returns the specified {
convert a string to a string representation .
converts a poi to a string representation .
compares this { @link } to the fewest of the specified { @link } .
usage : java . lang . string []
gets the selected data node .
set the selected .
returns a tree of the nodes in the tree .
opens the given { @link } .
sets the catalog .
sets the catalog property .

show the changelog info .
{
find alias for the given alias .
writes the specified int value to the specified value .
read a number of bytes from the stream .
returns the number of bytes written to the given value .
write a string to a string .
write a string to a byte array .
reads a string from the stream .
reads the character at the specified character .
reads the data from the specified file .
sets the flags for the .
get the config object from the
returns the value of the .
returns the location of the specified index in the given position in the given position .
add a member to the member .
sets the member variables to be updated with the given member .
<p > a list of names of names that are associated with the specified member . < / p >
returns the member name for the given member .
get the bitmap from the file .
restores the state of the .
saves the state of the .
returns the selected rows of the selected corpus .
sets the selected row row .
returns the index of the tablemodel .
helper method to determine if the cell is visible .
sets the .
gets the structure of the given member .
returns the value of the specified property .
returns the value of the specified <code > double< / code > element .
returns the value of the specified property .
returns the value of the specified <code > double< / code > element .
returns the value of the specified member with the specified member .
returns the value of the specified member with the specified name .
returns the int value of the specified property .
returns the int array of the specified type .
returns the value of the specified property as a short .
returns the value of the specified <code > byte< / code > element .
returns the value of the specified <code > long< / code > .
returns the value of the specified <code > byte< / code > element .
returns the character text from the specified member .
returns the char array of the given character .
returns the value of the given property .
returns the { @link } for the given { @link } .
write the data of the given directory to the given file .
{
checks if the given is a sparse - space .
adds a list of objects to the list .
creates a new dataset with the given node .
merges the specified node into the given node .
copy metadata from to
get the metadata for the given metadata .
add the product to this record .
adds a new attributes to the grid .
creates a new variable with the given name and the given name .
records a record to the grid record .
show the specified <code > section< / code > to the <code > / code > .

find the record record for the specified number of elements in the specified time .
dump the records in the csv format .
creates a short name for the given name .
registers a factory for the given class name .
registers the specified class for the specified class .
opens a new .
creates a dataset from the given input and return the appropriate data for the given feature .
creates a new { @link } instance .
deserialize a bytebuffer from the data stream .
adds a data sink to the output stream .
returns true if the specified code point is a reloadable value .

returns a geometric representation of the given .

deserialize a bytebuffer from the data stream .
adds a data sink to the data stream .
check the checksum of the .
returns true if the specified byte array is a valid byte array .
this method is called to write a string to the output .

{
read a rtf document from the rtf document .
process a list of .
checks if the given string is a valid .
returns the date format for the given date string .


returns the date format for the given date string .


converts a latitude point into wgs84 format .
converts a latitude point into a latitude coordinate .
adds a sub - path to the list of sub - geometries .
returns a list of all values for a given text .
opens the .
reads the data from the given byte array into the byte array .
reads the data from the data stream .
get the line from the chunk .
set the .
initialize the .
parse a section specification section from the given section specification .
parse a string literal .
creates a string representation of the given string .
returns true if the specified value is a rectangle in the middle of the .
returns true if the specified distances in the row is in the range [ 0 ] .


create a object from the given container .
closes the underlying database connection .
execute the request .
/ * ( non - javadoc )
get the configuration for the given
get the configuration for the object .
get the database config for the given
get the data config for the given
get the time series of the
check if the given <var > / var > is a css file .
check the for the
check if the given is a truetype object
creates a table config for the given .
creates a new and adds it to the .
constructs a new from the given .
calculate the for the given .
finds the best guess for a single dimension .
sets the stream to close the stream .
reads the next <code > buffer< / tt > .
starts the specified component .
read the byte array from the file .
returns the uri of the given uri .
returns a {



returns the path of the path .
checks if the given path is a letter .



/ *
returns the list of all the files in the classpath .
sets the index of the tag .
returns the index of the file in the disk cache .
sets the directory .
closes the underlying stream .
print the specified output .
returns the number of consecutive trailing zeros .
opens a file open file .
creates a new { @link } .
add a dimension dimension .
add a dimension to the specified dimension .
add a dimension to the specified name .
add a global attribute to the attribute .
adds a new attribute name to the given value .
add a new attribute to the attribute .
remove a global attribute .
renames the specified name .
adds a variable to the given variable .
add a variable to the given type .
adds a variable to the given type .
adds a variable to the given variable .
renames a variable name .
add a variable attribute to the alter object .
adds a variable attribute to the attribute value .
adds a variable attribute to the specified name .
/ * ( non - javadoc )
renames the variable attribute name .
update the attribute value .
create a new instance of this class .
rewrite the file .
write the specified output to the output stream .
writes an array of <code > / code > to the specified <code > reader< / code > object .
write the data data to the output stream .
writes a string representation of the specified variable to the specified output stream .
closes the underlying stream .
adds a variable to the given component .
creates a new instance .

create the sub - path for the given type .
prints the values of the given matrix to the output stream .
main method to parse the file and write it to the ajc code .

write out the .
returns the .
returns the formatted string for the given file .
create a document document that is a document that is a document that is a document that is a document that is a document that is a document that is a document that is a document that is a document that is a document that is a document that is a document that is a document that is a document that is a
creates a document that is a document that is a <code > / code > .
main method to set the .
write a string to the output stream .
write the text to the output stream .

write a message to the output stream .
writes the chunk of the chunk .
closes the underlying stream .
/ * ( non - javadoc )
writes a byte to the specified buffer .
{
returns a perspective projection for a point in the latitude longitude and coordinates .
converts the given latitude and longitude coordinates to the specified location .

add a new to the list .
schedule a job with the given schedule .
returns true if the specified number of bits is equal to the specified value .
returns the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range
returns the largest value of the range of integers .
returns the first element in the range of the specified element .
returns the index of the next n th element of the next digit .
checks if the range of the range intersects the range of the range .
returns true if the range of this range is greater than the specified range .
<p > returns the range of the range of the range of the range <code > offset< / code > and <code > position< / code > and <code > position< / code > .
returns the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range of the range
returns the first index of the first occurrence of the first occurrence of the specified interval in the range of start position ( exclusive ) .
returns the { @link } for the given index .
creates a new array with all the values in the array .
reads the data from the data type .
reads a data point from the data type .
write data to the data stream .
get the config object from the
read a boolean value from the specified input stream .
adds a data sink to the data stream .
adds a data stream to the output stream .
returns the subset of the given <code > / code > .
{

returns the { @link } for the given { @link attachmentresource } .
{
loads a file from the file .
{
clean up the file and hardlink .
sets the values of the specified values .

writes a grid grid to a file .
writes a grid grid to a given grid .
returns the number of pixels in the array .
calculates the sky of the sky ( ) of a arc .
returns a chunk that can be used to read the data chunk from the chunk data .
returns the latitude degrees of the latitude and longitude .
converts a latitude point to a latitude longitude and returns a { @link geopoint } .
returns the euler coordinates of the specified <code > from< / code > value . < / p >
convert a to a rectangle
check if the given point is a point .
returns the array of doubles .
gets the model for the given xml content .

checks if the grid is a .
checks if the given is a valid .
creates a new instance .
calculates the factor factor factor for the specified angle .
returns a new { @code } cropped from the specified latitude and longitude . <p > the latitude and longitude coordinates are the same as the proportion of the latitude and longitude coordinates .
converts a lat lon to a point .
convert a to a latitude - earth - centered earth - centered earth - centered earth - centered earth - centered ( x ) .
converts a to a string representation .
returns the { @link } for the given name .
{
opens the grid record .
creates a { @link } for the given { @link } .


called by the method .
/ * ( non - javadoc )
/ *
copy the metadata from the metadata file to the specified destination .
/ * ( non - javadoc )

sets the specified cards to the specified list .
adds the given data to the existing .
remove a dataset .
replaces all the existing variables in the given { @code } .
add a service to the service .
removes all registered service services .
<p > a list of the services that are associated with the specified service . < / p >
remove the metadata of the given metadata .
get the value of the property with the key .
write html xml description .
resolves the given url and return the uri .
validate the given string .


returns the list of all available data for this descriptor .
initializes the .
log a reader .

get the capabilities of the .
get the feature list of the specified output stream .
check the status of the request to determine if the response is a valid .
/ *
compares the given url against the provided url against the provided url .
builds the from the given .
get the capabilities of the url .
returns a string representation of the specified file .
{
{
{
/ * ( non - javadoc )
returns the path of the given path .
/ * ( non - javadoc )
adds a new { @link } to the graph .
set the typeface to the given geometry .


parses the file and returns the content of the file .
/ * ------------------------------------------------------------
returns a string representation of the given string as a string .
sets the content length of the response .
get the contextpath of the servlet request .
/ * ------------------------------------------------------------
returns the server server for the request .
returns the uri of the request .
get the path path for the request .
returns the request url .
returns the value of the first parameter in the request .
returns the request text for the request .
creates the security security context for the given authentication .
print the current thread .
get the type of a column in the btc of the specified type .
save the current state of the ui to the current user .
creates a new { @link } .
writes a file to the specified directory .

creates a new { @link basicvector } from the specified iterator .





sets the bit offset for the .

returns the number of bits in the given bit range .
initializes the local table .
appends a line to the end of the line .
reads the character at the given index .
log a warning message .
main method to create a jframe with a single frame of a jframe .
find the {
creates a document that is a document that is a document that is a document that is a document that is a document .
get the capabilities of the document .
returns a { @code } that is a { @code } .
creates a byte array from the passed in array of bytes .
returns the double at the specified index .
get record count from the given { @link } .
get the coordinate of the specified index .
create a new attribute value .
adds a new item to the list of items .
gets the list of googlecloudstorageiteminfo .
returns the specified time at the specified index .
handle exception .
returns the number of elements in this buffer .
returns the total size of the iterator .
{

/ * ( non - javadoc )
get the information for the given path .
/ * ( non - javadoc )
writes a file index to the file .
sparse - intersecting a sparse sparse sparse sparse sparse sparse sparse - sparse - sparse - stream concatenating the sparse array of integers .
read scan config from the classpath .
read scan scan filter .
read scan scan data from the given .
sort the sort of the selected portlet .

returns the for the given endpoint
set the value of the type of the dbase .

constructs a factory factory method for the given { @link } .
/ * [ deutsch ] <p > interpretiert den . < / p >
reads the contents of a binary stream from the input stream .
reads a compressed jpeg buffer from the stream .
copies the contents of the given input stream to the output stream .
reads the contents of the input stream and writes them to the specified output stream .
reads the contents of a byte array into a byte array .
write a string to the output stream .

copy the given file to the given file .
uncompress the file to the file .
copy file to a file .
copy the contents of the given source into the output stream .
copy the specified range of the specified offset to the specified buffer .
copy all files in the directory and all sub - directories in the directory .
reads a file from the file .
read a file from the file .
writes a file to the file .
writes the contents of the file to the file .
write a file to the file .
writes a file to the stream .
copy the data from a url to the url .
parses the response handler .

/ *
response to post a response message .
sets the response to the output stream .
/ *


set response to response .

get the catalog from the server .
prints the catalog .
@throws pageexception
/ * ( non - javadoc )
prints the status of the <code > / code > .
/ * ( non - javadoc )
get the response from the request .

print the output of the .
/ * ( non - javadoc )
initializes the entity with the given name and url .
/ * public void ( string string string ) { ( string ) ; }
reads the data from the given section into the buffer .
opens the file .

open a reader for reading .
<p > . < / p >

clean up constructions with the given byte array
filter the given string to be used in the given webview .


returns the substring of the string with the given string .

pad a string to a string .
remove a string from the specified string .
removes the specified string from the specified string .
remove a substring from the specified string .
removes all whitespace characters from the input string .
collapses whitespace characters to the given string .
replace the string with the given character .
replace the occurrences of the given string with the given occurrences of the given string .
replace the string with the given string value .
replaces all occurrences of the first occurence of the given string in the string .
substitutes the value of a string with the given substitution .
escape the given string and returns the result as a string .
unescape a string .
substitutes the variables in the given string .
remove a string from the stringbuilder .

replace all occurances of the string with the given character .
replace the value of the substring with the given substitution substitution .
trims the specified string to be a string .

this method is called when the event is received .
shows the status of the status .
checks whether the state is in the state machine .
updates the state of the current thread .

generate the .
creates a catalog file and builds a catalog .
get the grid grid grid grid grid grid grid grid grid grid grid offset .
returns the for the given path .
returns the file with the specified name .
copy the to the output stream .

called by the to check if the file is not a local directory .
/ * ( non - javadoc )
this method is used to add a summary of to the file .
add the to the .
process the log summary file .
add the summary information .
called by the .
rename the treebank .
<p > return the value of the <code > / code > property . < / p >
/ * ( non - javadoc )
method to read the given { @link } object .
<p > returns the data catalog name for the schema . < / p >
/ * ( non - javadoc )
returns the number of digits digits digits .
print the html code to the output stream .
loads the documentation from the given <code > document< / code > .
builds a global attributes of the .
builds a fresh set of variables .
creates a deep copy of the given .

creates a { @link } for the given { @link byteorder } .


returns the number of the .
/ * ( non - javadoc )
/ * returns the section of the section of the section .
returns a list of names of all the names of the available .
/ * ( non - javadoc )
get the table from the geopackage
returns the for the specified feature .
returns the first feature of the given type .
analyze the specified data .

the table name and the displayname of the table .
create a document .

returns true if the given file is valid .
opens the log file and opens the log .
opens a new .

returns a { @code } instance for the given { @code index } .
creates a new array with all the elements of the passed in array .
creates a new array with the specified index .
returns the double value at the specified index .

log a throwable to be thrown .
/ * ( non - javadoc )
set the response .
sets the response to the output stream .
sets up the response .
process the response .
this method is called to set the remote repository .
prints the help page .
print the current revision .
returns the gaussian sum of the given type .


advances to the given char array .
find the location of the given dataset .
adds a to the container .
returns the variable name for the given variable name .
find the variable name in the parent scope .
finds the group from the group .
find the dimension of the symbol .
find the dimension of the given name .
get the attributes of the specified attribute .
returns the enumeration of the given enumeration of enum names .
returns the parent of this group .
returns true if this node is a parent group .
returns the name of the attributes of the given name .
sets the parent group .
adds the given dimension to the dimension .
adds the specified dimension to the dimension .
add a new group to this group .
add a new enumeration to the list of parent objects .
adds a variable to the builder .
removes the specified dimension from the specified dimension .
removes the specified group from this group .
{
remove the specified dimension .
remove a variable name from the given short name .
sets the { @link } .
creates a new { @link } .
creates a new instance .
/ * private void ( string noun ) { = new hashmap<string () ; > = new hashmap<string () ; = hashmap<string . ( ) ; } ;
checks if the given string is a valid name .


populate table .

delete a variable

returns the variable with the given name .
search the given {
/ * ------------------------------------------------------------

checks if the given { @code } is a valid { @code } .
prints the specified print .
resolve the given {
resolves aliases and resolve the tagk and attributes .
resolves the alias to the given alias .
returns a fresh variable that matches the given name .

returns a copy of the given field .
print the html code to the specified writer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the given attribute name is a valid .

returns a string representation of the text of the text .
creates a new instance of the .

creates a proto id from the given proto .
writes the grid grid offset into the grid grid .
writes a to the grid document .
helper method to create a new .
returns the values of the given
get the location of the .
writes the grid s position in a csv file .
find the search in the search order .
返回数据给客户端
returns a { @code } instance for the given { @code index } .
creates a new { @code } .
creates a new array with all the elements in the passed in array of <code > int< / code > objects .
returns the double value at the given index .
/ * ( non - javadoc )
create a new { @link } instance .
returns the top - level file name for the given feature .
creates a new file from the given file .
gets the type of the file .
creates a new { @link } with the given name and file name .
creates a new { @link } with the specified source file and the given { @link } .

update the with the specified type .
update the with the given type .
update partition
update the leaf of the given type .
update the partition partition .
creates a new { @link } with the specified { @link } and { @link } .
creates a new from the given file .

create a new { @link } with the given data .
creates a new { @link } from the given file .
{
returns true if the urlpattern is a url - based url pattern .
add a string to the url .
finds the url for the given url .
sets the .
loads the file and returns the file with the given name .
insert a triple into the list
prints the constraint to the print writer .
returns a list of bigquery output .
find a single column name .
sets the projection to be used for the feature set .
/ *

compares this string to the specified string .
called when the progress bar is started .
druidg .

creates a new index for the given index and the .
creates a dataset that contains all the islands of the given dataset .
write a string index to the file .
serialize a collection of
write a datastream to a proto .

creates a partition chunk from the given

check if the given { @link } is a valid { @link } .
returns the { @link } that is the same as the { @link } .

create a sparse datastream with the sparse sparse - sparse - sparse - sparse - sparse - sparse - tree .
converts a proto into a json object .


sets the value of the object to the specified value .
returns the data structure of the given index .
gets the array of the .
sets the member array to the specified members .
extract the array of members from a member .
copies all the given { @code } to the given { @code } .
get the value of the specified object .
convert the given value to a float
convert a double value to a double value .
convert a to a number
get the value of the specified <code > int< / code > value .
get the byte value of the given member .
get short short
returns the char value of the specified character .
get the string value of the given property .
returns the number of data points in the specified structure .
returns a object that is the number of elements in the data structure .
returns a sequence of { @link } objects .
returns the array object that can be used to write the data to the data structure .
sets the current value of the { @code } parameter .
calculates the for the specified coordinate .
check if the point is a point .
convert a value to a string
returns the number of 1s in the given type .

returns the min max value if the max value is greater than the specified value .
extracts the path from the httpservletrequest .
get file name for a file name .
prints the of the .
evaluate a variable expression .
returns a string representation of the string representation of the given string .
this method fills a with the stemmed padding .
check if the node is a valid .
compare two .
returns true if the given { @link } is a { @link term } .
find the index of the variable in the given variable .
expands the given column definition .
applies the given {
returns true if the given { @link } is a { @link } .
count the number of fields of the given { @link } .
checks if the given { @link } contains a valid { @link } .


add a group of group variables .
compile the sbe stylesheet .
prints a string literal .
creates a new instance of this object with the same name as the original key .
returns a list of all { @link } objects .
{
stores the data in the source map .
creates a new for the menu .
initializes the .
creates a from the given file .
inits the file .
initialize the current { @link } .
get the byte order from the file .
set the order of the .
reads the header information of the header file .
reads the keys of the .
reads the headers and the headers .
reads the next row from the stream .
main method to run the file .
find the key with the given name .
returns the file header for the given name .
get the header file header .
prints the ion text .
returns the part of the part of the given name .
returns the part of the given name .
returns the number of available data for the given data .
read the specified word and return the result as a string .
emit rex - only log
get the uca bold version of the file .
/ *

/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the bits of the string of the given code .
writes all data to the underlying data block .
writes a file to the file .
writes a channel to the stream .
parse the xml document .
parse the given input stream and parse it into a new instance of the given type .
parse the given element .
parse the given element into a array of { @link } .
build the template for the given template
parse the grid grid s input grid into grid bar .
write the css headline js text to the xml description .
create a new type .
creates a new factory for the given type .
parse attributes of the given element .
parse the aliases and add the element name to the xml description .

creates a new instance of the object .



flattens the given list of { @link } objects into a { @link list } of { @link } objects .

/ * ( non - javadoc )
returns the file name of the file .
prints the results of the specified print writer .
checks if the given file is valid .

reads the data from the given section .
reads a data point from the given section .
reads the data from the given section .

build the for the
builds the sbe file and builds the .
returns the difference between two objects .
returns the difference between two numbers .
returns the difference between two bitsets .
compares two objects to determine whether the two quaternions are equal .
compare two boolean arrays .
copies the given data set to a { @link } .
read xml table from the xml document .
read the xml table from the stream .

create a {
converts the given { @link } to a { @link } .
{
{
check if the range of the specified criteria are not sorted .

writes the data to the given output stream .
checks if the given {
returns a new instance of { @code } .
converts a latitude point into a geopoint .
converts a latitude point into wgs84 coordinates .
convert a to a portion of a series .
converts a to a double array

calculates the magnetic the magnetic the bounding box .
convert a to a .
display the page for the page .
handles the request to accept a remote request .
sets the current position of the given <code > / code > .
print time series time series time series time series .
creates a map of attributes that can be used to convert the values to a map .
returns the values of the values in the array .
returns the value of the stringvalue to the string .
returns the numeric value for the given index .
/ * public void ( string ) ( ) ( ) .
sets the value of the stringvalue to the specified value .
{
sets the values of the array of the array .
scans the and .
/ * ( non - javadoc )


returns the href that is the link for the given link . <p >
writes the given <code > / code > to the specified output stream .
schedule a message to be scheduled .
this method is called by the user to write a file .
/ * package
set the for the .
this method is called by the to perform the operation .
the main method to discriminate to the main panel .
sets the to be used when the is changed .
/ * ( non - javadoc )
creates the frame and hide the border .
creates the for the given path .
expand the path to the specified location .
creates a name from a condensed .
returns the rank of the given axis .
returns the nearest neighbors of the given type .
returns the location of the specified resource .
returns the projection projection for the spatial symbol table .
returns true if the current value is a .
checks if the given {
checks if the given subset of the given subset is a subset of the subset of the subset of the subset subset of the subset subset of the subset subset of the subset subset of the subset subset from the given set of values .
checks if the given list contains all of the given {
checks if the given string contains a given angle .
returns true if the given list contains all of the elements in the given list .
returns true if the list of is a .
returns true if the given type is a molecular formula .
create a copy of the with the same as the original .
create a new { @link } instance .
process a request .
find the for the given key .
extracts the message from the given message descriptor .
get the text of the specified event .
add a selection listener .
remove a listener from the list .
get the selected bean .
returns a list of selected selections from the list of children .
gets the selected row .
clear the selected cells .
sets the row value for the given row .
sets the selected selection .
saves the state of the .
notifies the listener that the given bean is changed .
restores the state of the and the state of the .
returns the class of the given type .
parse the given data type .
create a new instance .
closes the underlying stream .
checks if the given variable is a valid .
checks if the given variable is a valid location .
find the first column of a given position in the given position .
adds a list of variables to the list .
adds a join to the table .
returns the data for the given data set .

create a new { @link kamnode } instance .
creates a new { @link } .
/ * notes :
find the variable with the given name
find the field with the given name .
finds the first node in the given node .
/ * ( non - javadoc )

returns the {
creates a new {


returns true if the specified unit is compatible with the given string .



returns the decimal factor for the specified unit .
converts a double value to a double value .

returns true if the unit is a valid unit of the specified unit .
get the value of the attribute .
<p > performs a new block of instructions with the given operator . < / p >
creates a new {
returns the function with the given name .
write a record to the stream .
/ *
creates a that is a that is a that is a that is a that is a that is a that is a that is a that is a that we have a .



process the .
process the post - side of the given source and close the data .
get the file cache for the given file .
returns the file cache for the given file name .

/ * ( non - javadoc )
/ * ------------------------------------------------------------
sets whether the file is a valid .
returns all files that are not in the list of files .
closes the underlying stream .
seek to the end position .
returns the length of the file .
flushes the current contents of the buffer .
reads the next byte into the stream .
reads a byte array into the specified byte array starting at offset <code > off< / code > to the specified <code > file< / code > starting at offset <code > off< / code > to the specified <code > byte< / code > starting at offset <code > off< / code > to <code > b< / code > .
reads the contents of the buffer from the buffer .
reads the contents of the given byte array starting at the given offset .
reads the number of bytes from the stream .
writes the bytes to the buffer .
writes a byte array to the buffer .
reads a short array from the specified byte array .
reads a signed - 32 - bit int from the stream .
reads the int array from the input stream .
reads a long from the input stream .
reads a float from the specified int array .
reads a double array from the given input stream .
read a string from the stream .
read a string from the stream .
write boolean boolean to boolean .
write short .
writes the character to the specified character stream .
write int to int
write long values
writes the specified int to the specified value .
writes the double array to the specified array .
writes a byte array to the output stream .
write bytes to the output stream .
writes a string to the output stream .
writes a string to the underlying stream .
search for the given search and return true if there is no match .
appends the specified query string to the given string array .
{
read a { @link } .
returns <code > true< / code > if the index is in the file index .
checks if the given index is a leaf .
read children from the list of children .
scan the path for the given directory .
reads all the files from the given reader .
open a {

get the list of that will be used to render the .
get information about the specified file .
closes the underlying reader .
shuts down the server .
acquires a file from the input stream .
acquires a file from the cache .
returns the cache of the cache - reduce - caching .
removes the cache from the cache .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the info file for the file .
{
shows the specified { @link } .
/ * ( non - javadoc )

acquires a {
acquires a file from the cache .
/ * ( non - javadoc )
update the cache with the specified element .
add a new object to the cache .
/ * ( non - javadoc )
returns the info file for the given file .
clears the cache for the cache .
/ * ( non - javadoc )
fills the given { @link } with the given { @link } .
parses a string and returns true if the input is a string .
checks if the given <code > / code > is a <code > / code > .
creates a new { @link } instance .
creates the vertical scroll view .
returns true if the given point is global .
{
{
{
{
{
{
/ * ( non - javadoc )
returns a list of ranges that will be used to calculate the biggest descender and z .
/ * ( non - javadoc )
get the list of all the levels that are in the form of a .
returns the position of the next item in the table .
gets the item at the given position .


/ * ------------------------------------------------------------
method to get the remote files from the server .
{
{
returns the next {
{


/ * [ deutsch ] <p > interpretiert das kanonische der
subtract the start date and end date .

returns the value of the field in the calendar field .

checks if the given file is valid .
opens the file with the specified file .
opens a new .
> > > > > > > > > > > > / p >
initialize the database tables .
{
find the longest path matching the given path .
returns the root path for the root path .
get root data from the root .
extracts the from the given catalog and returns the result .
returns a date range that contains the given date range .
returns a list of coordinates of the given list of { @link coordinate } objects .
opens a new fileoutputstream of the file .
creates a new { @link } with the given version and version .
add the dimension dimensions of the given dimensions to the specified dimension .
add a dimension to the specified dimension .
add a dimension dimension
create a new dimension dimension
adds a group to the group .
add group to the group .
add a new to the given
remove a group attribute .
renames a group attribute .
add a variable to the group .
adds a new variable to the given group .
adds a new variable to the given group .
adds a new { @link } to the given object .
adds a variable to the given variable .
adds a variable to the given group .
renames the variable name to the given name .
adds a variable attribute to the alter object .
create a new instance of the .
set whether the current mode is a valid .
rewrite the file and write it to the output file .
add a record to the record .
writes a string to the output stream .
writes the specified variable to the specified value .
write the specified variable to the specified value .
write a string to the output stream .
write a string representation of the ndarray to the given variable
closes the underlying connection .
abort the .
write the properties to the output stream .
extracts the metadata from the metadata file and returns the result .
<p > . < / p >


map a map of map entries to the indexmap .
build the { @link } for the given { @link } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the unit representation of the unit .
returns the value of the specified { @link } .
returns the value of the specified {
converts a variable - value into a variable - length string .
convert the given to a
converts the given data into the .
<p > . < / p >


converts a string array to a string array .
closes all the databases .
opens the database database .

/ * ( non - javadoc )
converts a string to a period of time .
reads the table and reads the contents of the classpath .
returns true if the specified element is inside the current position of the element .
returns true if the next position in the given position in the range of the specified index is less than the specified index .
read a string stringarray from a stream
adds a new value to the list .
ensures that the array is not a new array .
returns the value at the specified index .
{
calculates the lat lon charge for a given lat lng coordinate .
converts a latitude point in wgs84 datum to a latitude coordinate .
/ * ( non - javadoc )


create a catalog - catalog file system .
/ * ( non - javadoc )
get the type of the
create a factory for the given { @link } .
displays the given <code > / code > object .

rounds a factor of a factor to the given scale .
writes the html code to the given output stream .
resolves the given url and return the uri .
parse the given file name and returns a new one .
/ * ( non - javadoc )
clean up the line separator .

writes a csv file to a file .
write the to the given table file .

main method to create a .
method to send a response to the server .
returns the list of variables that are not included in the .

{
reads the index of the file from the file .
parse a string representation of the given stream .
prints the message to the specified writer .
shows the given bean .
gets the type of a dataset .
{
creates a new { @link } object .
reads the current path and returns the result .




process a single image from the given image .
load the specified number of image data .
stops the specified { @link } .

display the notification for a given .
creates a new { @link } .
get the scaled width size for the current dimension .
returns the scaled size of the string .

set the status of the status code .
gets a copy of the given file .

returns a list of the .
prints the data to the output stream .

returns a list of groups that are in the group .
check if the given group is valid for the specified group .
main method .
set the root directory .
creates a root directory from the root directory .
get file from the file .
get the file cache file .
creates a new path mapping .
remove all files from the given cache file .
deletes a cache from the cache .
creates a new file .
get the icon icon from the given description .
returns an image with the given name .
creates a button with the given icon and buttons .
create a button with the given name and the icon .
converts a menu to a menu .
adds a menu to the menu .
creates a button with the given action .
adds a menu to the container .
set the properties of the given action .
sets the properties of the specified action .
get the list of that will be used for the .

returns true if the specified column is a table .
returns the <code > / code > of the <code > / code > .
returns a copy of this label with the same label as the same label as the same label as the same label .
returns true if the data type is numeric .
returns the info object for the specified object .
get the time - time of the given { @link calendar } .

sets the row to the clipboard .
remove a row from the row .
get the row row in the table .
sets the selected row .
moves the cursor to the given value .
returns the index of the tablemodel .
helper method to determine if the cell is visible .
returns the biggest range of months .
{
sets the index of the index .
renders the document to the given .
/ *

returns a sorted array of the given name .
sorts the specified range of the specified array .
swaps the specified value at the specified position

gets the file chooser .
converts a latitude point into wgs84 coordinates .
converts a latitude point in wgs84 datum to wgs84 point of .
rotate a vector .
creates a new file with the given name and file .
creates a {
create a new { @link } instance from the given resource .
create a filename from the given database .
save the current user to the file .
output the xml stream .
write a variable - value header
write a structure data .
write a data set to the output stream .
writes a sequence of data to a csv file .
write the data to the output stream .
write record data to the given writer .
this method is called by the to write a file to the given writer .
set the value of the property .
checks if the given file is a valid pe file .
returns the id of the id of the string .
prints the .
print the output of the specified <code > / code > .
prints the matrix to the specified output stream .
appends the specified value to the specified object .

returns the dimension of the dimension of the dimension of the dimension of the dimension .
create a new instance .
compare two tables .
sets the project state .
serialize a string to a string
sets the dimension of the dimension
reads the number of rows in the csv file .
get the data type for the given data .
read a from the database .
parse the given file and return the result as a variable .
/ * ( non - javadoc )
get the for the .
get the for the .

get the for the .
get the .
get the electronic - byte array .

get the for the .

{
reads the value of the given property into the given value .
creates a file with the given offset and offset .

creates a file with the given offset and offset and width and height .
calculate the for the given wradiobuttonselect .
<p > . < / p >
sets the selected value .
returns the closest to the specified point .
returns the closest scrollable point in the middle of the given point .
get the selected .
merge the given xml document into the given .
{
convert a { @link } to a { @link } .
sets the parameters for the .
returns the name of the property .
sends the message to the client .
main method to create a dump of the file .
moves the current position of the current position to the given .

saves the current state of the gui .
get the list of all

/ * ( non - javadoc )
get the data iterator for the given start date .
reads the data from the file and returns the number of bytes written .
returns the number of elements in the given element .
returns the variable at the given index .
prints the rid of the text .
deserialize a data source .
add a data sink to the given output stream .
create a new instance .
adds a data sink to the data stream .
get the type of the given .
get the type for the given type .
compare two lists of strings .
computes the absolute value of the ( x y ) .
calculates the dot product of this { @link mergedvertex } .
returns the euclidean norm of the specified percentile .
normalizes the l1 of the decomposed .
{
sets the {
reads the file and prints the given file .
read catalog from the catalog .
read access to a
read service from the list of loaded services .
parses the catalog - wise format of the { @link } .
read a datastream from the supplied stream .
read metadata from the map .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the source source for the source .
read a time range of text from the given { @link } .
/ * ( non - javadoc )
calculates the hours and minutes of a text string .
print the elapsed time of the time .
write a byte array to the stream .
returns the parameter id for the given id .
returns the local parameter id for the given id .
reads the parameters from the given map .
reads the parameters from the input stream .
read parameters from the input stream .
reads a list of parameters from the input stream .
adds a name to the value of the specified value .
adds a symbol to the symbol .
returns the prefix of the prefix .
check if the email address is valid .

reads the next character in the input stream .
reads the character from the reader .
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
parses the and parse the string to the given parse .
consumes the parameters and the parameters .
parses the and parse the .
/ * private ( string string string string ) { ( ) ; }
returns the parameter value for the given parameter name .
returns the projection of the .
computes the crc checksum of the cmap and then sets the data to be used in the .
returns true if the specified data is a xml file .
returns the number of available characters in the specified array .
returns true if the vertical line is the same as the given percentage point .
{
create a { @link } from the given { @link } .

returns the time type for the time range of the time range .
returns the time of the time period .
append a message to the console .
returns the value of the <code > key< / code > property .
sets the number of elements in the given set of members .
sets the next - level object .
sets the .
create a polygon with the given projection and the given label .
finds the property name for a property name .
returns true if the path is a relative path .
set the current row to the current row .
>

create a new instance of the class .

/ *

sets the flags flags for the object .
opens a new task .
opens a new file .
checks if the file is a file .
creates a file with the specified name and location .
returns the uri of the uri .
creates a new instance of the object .
opens a new fileoutputstream with the specified data .
opens a new fileoutputstream of the file .
opens a new request with the given uri .
closes this { @link packet } .
finds the group from the group .
find the variable with the given name .
finds the dimension of a group .
find the global attribute name of the given name .
find the global attribute that matches the passed name .
find the attribute name of the given name .
find a value for a given name .
returns a string representation of the given url .
output the specified output stream .
print the html to the given writer .
append a string to the end of the file .
/ * ------------------------------------------------------------
writes a string representation of the content of the xml document to a writer .
{
add a group of attributes .
add a new attribute to the list of attributes .
adds a group of group .
add a dimension to the current dimension .
remove the given dimension from the group .
adds a new variable to the group .
adds a variable to the solver .
adds a variable to the given name .
{
send a message to the neighbouring tree .

sets the { @link } to be used for the current { @link } .

finishes the current list of variables .
reads the data from the given data stream .
reads the section of the section of the section .
reads the given {
<p > a list of variables in the input stream . < / p >
reads the given section and returns the corresponding <code > / code > .


converts a string to a .

checks if the filter is in the classpath .
returns true if the given filter is a exclude filter .
checks whether the filter is a filter .
get the object from the inuse
adds a new { @link } to the { @link } .
removes the specified from the table .
returns the type of the type .
returns the value of the specified type .
returns the value at the given index .
returns the value at the given index .
append a value to the given value .
helper method to check the value of the value of the value of the given value .

checks if the string is a valid byte .
checks if the string is a short .
checks if the given string is a valid integer .

checks if the given string is a valid string .
checks if the given string is a valid double .
create a clone of this <code > / code > .
gets the type data type .
returns the rank of the type .
returns the number of distinct data types .

{
returns true if the line is valid .


checks if the given id is valid .
checks if the given string contains a given string .

check if a string contains a string .
checks if the string is valid .
checks if the string is valid .

returns true if the path ends with the given path .


add a parameter to the param .
add a parameter to the list .
add a parameter to the specified value .

compare two record fields .
reads the input stream into the stream .
processes the input stream and returns the result of the given { @code } .
returns a { @link } that encodes the given data to the given data set .
parse the given orc structure .


/ *
/ * public ( string string string string string ) { ( ) { string = ( ) { string = ( ) { string = ( ) { string = ( ) ; }
remove a string from the string .
marks the to be called .

write a file to the output stream
prints the text of the specified text .
checks that the given file is a valid java object .
get the value of the property .
get the from the given .
{
returns the enum value for the given enum .
returns a string representation of the given string .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
validate the given string .
returns a perspective projection for a latitude - latlong . the latitude and longitude coordinates are ignored .
converts a to a latitude - z - 1 and z .
/ * ( non - javadoc )
get the horizontal magnetic pixel value .
gets the elevation of the music .
get the date of the nearest imm time .
get the array of floats in the array .
returns the result of the () method .
get the array of floats .
get the array of booleans .
get the array of the values in the array .
selects a list of all the members of a list .
selects a given {
adds a variable to the member .
set the variables to be used in the {
remove a variable member variable .
replace the member variables with the same name as the member variable .
{
returns the { @code expr } of the { @code name } th { @code } .
creates a new { @link } object .

reads a { @link } from the stream .
reads the { @code } s and returns the corresponding { @link } .
reads the number of integers from the stream .
returns a {
returns the name of the given name .
inits the .
get the category of the passed category .
returns the class name for the class .
adds a parameter to the list .
returns the header of the header of the header .
converts a poi into a series of .
convert a to a .
converts a reward point to a latitude and longitude .
convert a to a string representation .
calculates the bounding box for the specified latlngs .

set the poi and longitude of the specified coordinate .

converts a double to a double .
converts a double to a double .

rounds the value of the second argument to the specified value .
get the level of the type of the property .
returns the version number of the given name .
get the for the given name .
create a for the given .
get the type of the .
delete the file .
sets the .


sets the parameters to be used for the .
renders the view .
draws the grid with the given grid offset .
checks if the parent node is a child of the parent .

reads the contents of the given file and returns the result .
show the output file .


returns the key for the specified key .
returns the parent of this record .
returns the child path of the given path .
returns the temp file .
sets the payment - level keys for the api key .
returns a stream of { @link } s .
create a new {
creates a label with the given text and indenting the lines of the line .
creates a new html tag with the given html text and value .
creates a new { @code exemplar } with the given name .
parses a string value .
get the instance of .
connect to the server .
check if the environment is enabled .
creates a socket socket for the given client .

attempts to establish a unicast client - value for the given client .
connect to the server using the specified port .
clear all loggers and release the logger .
compile the compilation process .
compiles the source code to the given class .
adds a class source .
read the control control control extension .
read a block from the stream .
returns the bitmap of the specified frames .
opens the bitmap with the specified frame and height .
read a block from the stream .
initializes the dialog dialog . <p >
get the list of property .
initialize the { @link } .
inject a resource bundle to the given resource bundle .
sets the clock to be used for the given clock . <p >
returns the { @link } for the given severity message .
merges the given { @link } with the given { @link } .
merge the given { @link } to the given { @link } .
returns the instance of the specified type .
initializes the .
add a listener to the list of listeners that are not found .
remove all events from the list of all events .
processes the event for the given event type .
remove a { @link } from the { @link } .
get the person s person person id
create a new builder for the given factory .
puts a new value into the map .
process the queue .
/ * ( non - javadoc )
returns the collection of objects mapped by {
adds a message to the list .
remove messages from the list of messages .
removes the message from the map .
set the id of the specified person id .
use the super model to register a type to the given view type .
initializes the view .
called by the { @link } to see if the { @link } is not a { @link } .
returns a string that represents the value of the { @link } .
returns a view of the view of the view .
returns the { @link } for the given view type .
called when a view is presenting in the view .
creates a new { @link } for the given { @link } .
returns the view type for the view type .
initializes view model model .

add a { @link } to the { @link } .
checks if the given view is a valid .
/ * ( non - javadoc )
loads the user - defined configuration .
loads the { @link } from the classpath .
{
------------------------------------------------------------------------
{
reset the fields to the default value .
sets the current value of the {
commits the specified field to the set of fields .
reloads the field with the given fields .
copy all values from the model to the specified value .
getter for property - gets
returns a copy of the property with the given name .
get a property field .
retrieve a property from the property value .
returns a field that is a getter of the field .
get a property field for the given property name .
replies the property that is the property of the property .
returns a property value for the property .
returns a new instance of the getter for the given getter .
{
returns a new instance of the property with the given name .
adds a property to the property .
returns a list of all the getter methods for the specified property .

returns a map that maps the given getter to the given map .
adds a validation rule to the given rule .
adds a rule to the rule .
creates a list of { @link arraylist } s that are not included in the source list .
returns a new { @link } that is used to visualize the { @link } .

registers a listener for the specified listener .
registers a listener for the listener .
registers a listener for the subscribe and subscribe .
clear all unrestricted items from the map
{
{
/ * ( non - javadoc )
creates the index for the item .
returns all fields annotated with { @link } annotations .
get all fields from the class hierarchy .

set the field value .

{
create a new path
{


/ * set the value of the given value to the given value .
{
{
get the pixel value of the specified pixel value .
get the pixel values of the array of nibbles in the image .
validate the image type of the specified image type .
draw a rectangular image tile area .
draw a tile data .
draw a tile data .
draw a coverage data image
creates a rectangular image with the given tile size and images .
sets the pixel value of the specified pixel coordinate .
sets the pixel value of the specified pixel coordinate .
create the tile table size and tile data table
set the tile data to be used in the tile data .
{
{
{
{
{
{
executes the given query string .
creates a { @link } for the given query .
{
{
query the query .
query the query query .
method to handle cursor cursor .
returns true if the table is in the row index
finds the index of the table at the index of the index .
get the feature row index of the geometry .
{
{
register a table with the given table name and column name .
/ *
{
get the tile from the tile and zoom level
get tile from the tile at the specified zoom level
get the coverage data data data for the given tile
get the coverage data data data for the tile data
get the coverage data data data for the tile feature
build the tile table tile table
gets the data data for the given data .
gets the data stored in the given request .
returns the results of the tile table
returns the approximate tile matrix for the given tile view .
get the zoom row in the tile table .
get the zoom column of the tile matrix .
get the tile matrix from the tile { @link }
get the value of the tile row at the specified position in the tile table .
set the icon for the icon .
get the icon from the given geometry type .
{
create a {
<pre > {
returns a bitmap with the specified options .
converts bitmap to compressed bitmap format
create a metadata for the table
delete a spatial table
updates the last indexed marker .
update the last index of the geopackage
update last indexed indexes
retrieves the metadata for the specified table .
retrieves the metadata for a table .
get the metadata for the given geopackage
get the geopackage geopackage package id
creates a new { @link } .
/ * ( non - javadoc )
get the feature row row .
creates a { @link } for the given { @link } .
{

get the bounding box of the given column
query for the bounding box for the bounding box
query the envelope for the given envelope .

query the specified point with the given offset and row origins .
build a from a column
build the for the given line .
query for the feature row in the bounding box

query the envelope envelope .
query the envelope and return the envelope .
returns the number of times the specified value is in the closest position in the specified range .
{
replies the options for the screen data .
sets the data for the given bitmap .
sets the data to be used in the bitmap .
sets the compression of the compression config .
get the tile s tile count .
adjust the bounds of the bounding box
adjust the bounds of the tile and to the tile view
adjust the tile grid and zoom level
get the bounding location of the tile grid and zooming in the tile grid .
get the bounding box of the tile grid in the tile grid .
get the tile grid in the tile grid .
returns a cursor of tiles in the tile table and tiles .
query for tiles in the tile table
get the zoom level of a tile .
get the zoom level of the tile level .
get the zoom level of a tile .
get the approximate zoom level of a tile .
get tile grid grid grid .

counts the number of tiles in the specified zoom level
check if the tile bounding box is partly .
{
get the pixel value of the specified pixel value .
get the pixel values of the image .

{
{
draw the coverage data of the image tile at the specified offset in the specified area .
draw a tile data .
draw the coverage data of the coverage data coverage data from the coverage data coverage data data
draw the coverage data coverage data coverage data coverage data coverage data coverage data coverage bytes
creates a { @link gridcoverage2d coverage coverage information from the given tile .
sets the pixel value of the pixel at the specified absolute value .
create the tile table tile table

get the geopackage file for the geopackage
{
{
get the current row column row .
{
set the for the user .
moves the current cursor to the current state .
{

query for the feature id of the given id
delete the given geometry type .
returns a rectangle with the specified width height and height .
returns a rect that is the width of the specified rectangle within the specified rectangle .
returns true if the given rect is a rectangle .
returns true if the specified rect is a valid postal rectangle .
checks if the given { @link } is a valid { @code } .
returns true if the specified value is valid .
{
{
{
delete the given list of { @link } s .
{
{
{
{
{
{
{
{
{
{
{
{
{
{
deletes all the deleted entries from the database .
deletes all external entities in the database .
deletes all the direct files in the directory
creates a database .
create a new package .
create a new database path
/ * ( non - javadoc )
{
{
{
{
{
{
{
{
{
{
{
{
{
opens the database and opens the database .
/ * ( non - javadoc )
validates the database .
validates the input .
checks if the given string is valid .
copy copy copy copy .
renames the database .
{
{
/ * ( non - javadoc )
validates the database connection .
validates the database .
validates that the database is a valid database .
validates the database .
checks if the given object is valid .
add all the to the database .
add all the addons to the list of packages .
imports a geopackage into the database .
returns the list of available locations that are loaded from the database .
get the metadata for a database .
get the metadata for a given path .
checks if the database is a valid database name .
creates a new column .
create a new for a table
create a geometry for a specific table
populate the geometry for the given accumulo envelope .
delete the specified geometry .
delete a spatial id from the database .
delete the geopackage record
create or update the metadata of the specified native object .
update column metadata
get the data from the given metadata .
get a metadata file for a specific table name .
get the metadata for the given table id .
query for a table .
get the bounding box for the specified row
get the bounding box of the specified table
query for a table .
returns the lucene { @link } for the specified table .
count the number of projected bounding box
returns a cursor of the bounding box of the specified table .
call this method to retrieve a cursor of a table .
count the number of columns in the geopackage
create a cursor of the given table .
count the count of the specified meter .
creates a new geometry metadata .
{
update the table with the given column and row .
insert a row to the database .
draw the tile at the specified location in the tile .
draw the tile with the specified tile .
draw a tile with a text
returns a list of all rows in the given list .
{
{
{
{
{
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the cursor is a cursor .
{
get the mapping for a given table name .
get the udt dao attributes .
returns a list of all the products that are not part of the specified relation .
returns a list of all products matching the specified range .
checks if the given table is a primary key .
{
{
count the number of times the cursor is the cursor position .
register a cursor to the database .
create a rocksdb dao for the user .
get the tile tile bounding box for the tile bounding box
this method is used to draw a tile view with the tile height and the tile height .
this method is used to get the tiles from a tile view with the tile height and the tile size .
returns the tile matrix for the specified bounding box .
get the tile tile bounding box for the tile bounding box
calculates the draw area of the .
sets the histogram to draw the camera
sets the paint line of the .
set the color .
draw the tile bytes in the tile at the specified location .
draw the tile at the specified location .
draw the tile tile with tiles in the tile and then tile
query for the specified count of tiles in the bounding box .
returns the count of bounding box for the specified bounding box .
query for features of the bounding box
query the feature index of the bounding box
transform the bounding box to the target bounding box
get the bounding box of the bounding box and tile coordinates .
this method is used to get the tile tile from the specified zoom level .

creates a feature feature style .
creates a feature feature row
create the paint paint .
paint the feature style .
create a from the feature style sheet .
document me!
style sheet paint
paint the synth style column
checks if the bitmap is not a bitmap .
document me!
document me!
sets the icon of the rendered row .
sets the style of the .
{
creates the bitmap for the specified icon .
{
{
{
/ * ( non - javadoc )
creates a new { @link contentvalues } for the specified content specs .
creates a bitmap with the specified size .
/ * ( non - javadoc )
get the bitmap of the specified bitmap .
get the canvas for the given layer .
create a bitmap with the specified shape and the specified size .
get the mapping for the feature table
get the style dao for the dao .
get the icon for the given {
get the feature columns for the feature table name
get the feature row of the table
get the style row for a featurecollection
get the icon table name for the feature table .
get the icon for a feature table icon .
returns the feature feature row
get the feature feature feature value .
{
returns the default { @link feature } row .
returns the row row row
get the row row for a specific geometry type .
returns the default row default style or default style
get the style icon for a feature row
get the style row style tile
get the style for the feature feature row
get the style for the feature table style
<! -- begin - user - doc -- > <! -- end - user - doc -- >
get the icon from the row pointer
returns the default icon for the icon .
get the icon from the feature table icon .
get the icon for the feature table icon .
get the icon from the icon table
get the icon for the feature table icon .
returns the feature id of the feature table
returns the pluginid for the specified feature id .
set the feature table name .
sets the table editors for the given feature table .
set the style for the feature table style .
set the style for the feature table
set the table name for the icon table
set the icon for the feature table .
set the icon for the icon table
sets the feature feature row .
set the feature feature feature id
sets the feature style for the feature row style .
sets the feature row style feature .
sets the default feature style for the feature row style .
set the feature style feature for the feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature feature
set the feature style feature for the feature feature feature feature table style
sets the row column to the specified row
set the columns to be used by the feature table .
sets the style of the feature row style .
sets the style of the row feature row .
sets the default default default default default value for the specified feature row .
set the style icon for the feature table
set the default style for the feature table style .
sets the feature row of the feature row .
set the icon to the feature table .
sets the icon to the icon .
sets the icon to the icon .
sets the default default { @link } .
set icon icon icon icon
set the default icon for the feature table .
get the style for the style of the style .
returns the icon for the given .
insert a new mapping from the given mapping table .
delete a style icon from the geopackage
delete icon icons for a feature
delete the feature table from the feature table
delete the feature mapping table

delete style icon from feature table
deletes the icon from the table .
delete icon from source table
delete the mapping for a feature
returns all the style ids for the given feature table .
returns all the icon ids for the given feature .
returns all the style ids for the given feature .
returns all icon labels from the
get the image data for the specified image .
close stream .
get the pixel pixel value of the pixel at the specified position in the pixels .
read pixels from the sas7bdat file .
{
{
draw the tile at the specified location and zoom
draw the feature row tile
draw a rectangular transformation
draw a line line drawing
draw the polygon
add line to the given point
adds the given projection to the polygon .
draw the point on the screen coordinates
returns the { @link } for the given table name .
removes the record and row row row .
clears all caches .
get the table specs for this table .
returns the .
{
returns the feature style of the feature label .
get the row row for a specific geometry type .
get the style of a feature row
get the icon from the icon
get the icon from the icon table
sets the geometry type of the specified geometry type .
sets the icon for the icon .
sets the feature row style feature .
sets the feature label of the feature feature feature style feature .
sets the style row for the feature row style .
sets the style of the feature geometry .
sets the icon to the icon .
sets the icon extent of the icon .
{
creates a column column index
get the dao dao for the given dao .
{
sets the width of the specified width index .
sets the height of the cell .
returns the ratio of the ratio of the specified dimensions .


moves the cursor to the next position in the current position .
{
reads the blob value from the database .
{
{
moves the position of the cursor position to the position .
{

sets the color of the color .
returns the default color for the current color .
sets the color of the fill .
validates the color of the given color .
creates a color from the given color .
get the for the given class .


sets the order of the .
set the order of the order of the order in order to sort the order of the order of the order of the order in order .
set the progress of the .
returns the number of elements in the given index .
index the index of the table
returns true if the given row index is a row index or the type of the list of columns .

deletes the given type from the given index .
deletes the specified row index .
deletes the specified id from the specified index .
delete a specific index .
returns true if the index is in the list of features .
deletes the given list of { @link } s .
returns true if the given index is a sub - index .
returns a list of types that are indexed .
returns the last indexed indexed indexed date - time .
query for the feature row index
count the number of bytes of the count of the count of count in the table .
get the bounding box of the bounding box
query for feature information
returns the type of the feature type .
{
get the tile tile from the tile and zoom level


get the geometry type of geometry type
set the geometry type for the geometry type .
checks if the given url is a tablet
/ * ( non - javadoc )

convert a string to a single component
replaces the given full string representation of the bounding box with the given path .
creates a tile descriptor for the tile and tile coordinates .
{
{
get the srid geometry for the given geometry .
create a { @link } for the { @link } .


finds the index of the specified geopackage .


deletes the record for the given table .
delete the spatial reference table .
checks if the given index is indexed .
get the last indexed indexed value for the field .
returns a cursor of { @link cursor } s .
returns the bounding box for the geometry .
count the bounding box of the bounding box
query for geometry column .
count the number of interior tiles in the geometry .
returns the bounding box for the bounding box .

get the bounding box of the bounding box
get the geometry metadata from the database .
get the feature row row .
get the feature row row .
get the tile menu table name
gets the for the tile table name
get the bounding box of the bounding box
{
{
creates a tile from the tile at the specified offset .
query by id
returns the list of all the unique identifiers that are not in the given row .
returns the list of unique unique ids for the given column id .
delete a global id from the database .
delete a specific id from the database .
delete the specified ids from the specified id .
builds a from a given id .
creates a new sub - package .
delete the database .
renames the given metadata .
renames the given column name .
returns all the edbobjects .
returns all the addons for the given package .
get the metadata for the given database .
returns the metadata for the given id .
get the geopackage metadata for the geopackage
checks if the database is a external repository .
get the metadata for the given path .


returns a list of all the unique keys for the given column name .
creates a new btc for the specified cursor .
{
creates a {
{
{
when the view is a view of the view and view the view and the view is not the same as the view .
attaches the given view to the listener .
adds a new { @code } to the view .
{
creates a custom view with the given name and attributes .
called when the activity is first created .

create a new {
append the given log event to the given stringbuffer .
finds the file s file system properties .
/ * ( non - javadoc )
configure the configuration .
checks if the resource is loaded .
connect to the server .
returns the address of the socket .
creates a new executorservice with the specified name and port .
<p > . < / p >
{
sets the policy to be used for the specified policy .
add a property to the list .
get the value of the property with the specified key . if the property is not found in the property list the property will be returned .
{
escapes the given input string and returns the escaped string .
<p > escape the characters in the given string . < / p >

compares two dbids .
compares the given values to the given collection of values . <p >
removes all occurrences of the given values from the given collection of values . <p >
removes all occurrences of the specified collection of values .
/ * [ deutsch ] <p > schreibt der angegebenen . < / p >
reads a byte - encoded int from the given byte array .
compile a list of generic type converters .
returns the next node in the tree .
gets the value of the property .
get the value of the literal expression .
render the html for the given event .
append the given escape escape sequences to the given buffer .
converts a date to a string representation .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
initializes the .

<p > . < / p >
returns the directory path for the file .
get the directory path for the given directory .
get the interprocedural database path .
sets the file to be used for the file .
start the file with the specified txid .
opens a file .

{
get the value of the <code > / code > property .
update the current mask .
get the for the given event .
run the given .
create a new random { @link ssrc } .
/ * ( non - javadoc )
create a new instance of the ssl provider .
creates a key store for the given context .
creates a trust managers .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the url of the resource url .
/ * ( non - javadoc )
process the specified component .
returns true if the given chain is a copy of the specified list of { @link } .
stops the context .
print the errors to the given { @code } .
print the errors to the .
/ * ( non - javadoc )
append a string to a string .
start the .
{
{
{
{
write the line to the stream .
get the value from the map .
find the value of the specified key .
get the value of the specified key or null if there is no such key or if it is not null .
ends the next entry in the map .
returns the value of the specified string .
renames src to trg
checks if the file is a valid target file .
replace the given property with the given property name and the given property name .
get system property .
returns the system property name .
get the system property from the system property .
get system property .
extracts the default value from the given key .
converts a string value to a boolean .
resets the state of the current state .
get the current stack trace of the given {
set the value of the <code > / code > property .

returns the value of the specified property .
{

returns true if the current class is a package - space .
add a new status to the list of inflight statuses .
add listener to the listener .
returns a list of all the actions of the given element .
returns a list of all element attributes of the given element .
sets the class loader for the classloader .
returns the value of the specified key .
returns the boolean value of the given key .
returns the string representation of the given string .
get the method corresponding to the given class .
this method gets the property name of the given class .
checks if the given socket is in the specified buffer .
/ * ( non - javadoc )
{
sets the target value for the target class .
start the .
closes the output stream .
set the output stream to close the output stream .
/ * write the current to the output stream .
resets the state of the component .
add a listener to be called when the app is launched .
ends the current value .
returns the value of the <code > / code > value that the <code > / code > parameter is used .
append the given escape escape sequences to the given buffer .
checks if the event is a loggable event .
/ * ( non - javadoc )
{
creates a new keymanagerfactory factory .
closes the given { @link closeable } .
closes the given socket .
closes the server .
configures the tls cipher suite with the given { @link } .
returns the protocols that are allowed to be enabled .
returns the cipher suites for the given ssl cipher suite .

returns a new { @code } with the specified capacity .
converts a scope to a scope .
sets the properties of the given properties .
add appender appender to the list of appenders .

checks if the appender is a child of this appender .

remove the specified appender .
called by the method .
add appender appender to the appender .
log the given event .

create a new child with the given name .
log a log message with the given log level .
filter the specified marker .
log a log event .
returns the socket .
create a parent directories .

converts the integer to a integer .
convert a level to a level .
converts the specified level into a level .
translate a level to a location .
returns a new <code > / code > that identifies the level of the specified level .
checks if the given object is a valid one .
creates a new keystore from the specified resource .
creates a new instance of the object .
returns a list of resource objects that match the given resource name .

get the class loader for the given object .
returns the class loader for the given class .

loads a class from the given class .
{
appends the given event to the given event .
returns the tag tag for the tag .
sets the logger .
runs the given .
writes the given attributes to the given attributes .
returns the index of the first occurrence of the specified separator string .
{
creates a new .
returns the name of the thread pool name .

start the daemon .
append the given event to the given object .
checks if the given is a valid .
sends the text to the output stream .
run the method .
<p > . < / p >
{



{
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ *
called when the is received .
call this method to perform a { @link } .
get the value of the property in the current props .
sets the name of the name of this { @code name } .
returns true if the current status of the current thread is currently running .
returns the last - modified time of the specified time .
adds the specified event to this one .
returns the value of the specified element in this buffer .
returns the value of the element in this list .
resizes the specified buffer to the specified size .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
get the map of the portlets that will be used to render the map of key - value pairs .
/ * ( non - javadoc )
{
the main method .
ends the specified .
{
stops the {
accept a list of { @link } objects .
returns a copy of the {
this method is called by the { @link } to perform the .
add client to the client .
removes a client from the client .
set the value to be used by the map .
removes a mapping from the map .
returns the value of the specified key .
returns the keys of the map .
returns a copy of the map of all the mappings in the mdc .
converts a string to a java object .

get a filter chain for the specified log level .
creates a new client with the given client id .
adds a rule selector .
returns the list of actions that match the given path .
returns a list of all the elements in the given path .
returns true if the option is a .
initialize the context .
creates a folder file matching the given regular expression .
starts the background thread .
stops the server .
/ * ( non - javadoc )


sets the text to be used for the textbox .
returns true if the node is in the tree of node .
returns the database file name for the file .
{
clears the cache .
checks if the last modification time is expired .
returns the log - time - dated strategy for the current thread .
{

update the map of the .
bind the event to the given event .
bind the event to the given <code > name< / code > .

returns the mask to the specified {
merges the map of properties into a map .
insert the properties into the map .
binds the given <code > / code > to the <code > / code > method .
insert a new exception to the specified value .
returns the prefix length of the given element .
get the effective level of all the elements in the current level .
introspect the class .
sets the value of the property .
set the property value .
returns true if the given class is a descendant of the given class .
returns the value of the specified property .
{
gets the next node in the current token .
<div end
{
/ * ( non - javadoc )
{
returns the stream of the url to the url .
removes a head element from the given element .
get the event name for the given event .

called when the stop is stopped .
returns true if the given code is a drpc { @link } .
sets the default host name .
/ * ( non - javadoc )
search for the search parameters .
get the content of an asset .
adds a new selection data item .
sets the selection query .
sets the cancel job that will be used to wait until the delay is exceeded .
ensures that the local index is not a local directory .
saves the settings to the map .

/ * ( non - javadoc )

{
region > homepage
executes the given query and returns the result .
asynchronously creates a new { @link } with the given options .
asynchronously creates a new { @link } with the specified { @link } .
asynchronously submits the query to the database .
returns a {
returns a new instance .
returns a new { @link } object that includes the given query and returns the results of the query .
{
creates a { @link } that encapsulates the { @link } .
{
gets the cached { @link } for the specified resource .
gets the bid {
gets the cached { @link } for the specified resource .
/ * ( non - javadoc )
gets the object that is associated with the given resource .
{
get the list of all tenants for the specified resource .
get the list of all the { @link sharerequest } .
get the list of online { @link sharerequest } .
get the { @link } for the given { @link } .
asynchronously creates a { @link } with the specified { @link } .
{
search for the specified { @link } and { @link } .
returns the lucene { @link } for the specified { @link } .
search for the given lucene { @link } and returns the results of the query .
/ * ( non - javadoc )
search for groups
asynchronously creates a new { @link } with the specified { @link } and { @link } .
search for the raw data
{
creates a { @link } that will perform a query and returns the result .
search for the specified field name and the specified range .
search for the matching { @link } s for the given { @link } and { @link } .
{
add a { @link } to the { @link } .
adds a { @link } to the { @link jsonobject } asynchronously .
add a { @link } to the list of { @link } objects .
asynchronously adds a { @link } to the response .
asynchronously creates a new { @link } with the specified { @link } and returns the results of the specified { @link } .
asynchronously creates a new object with the specified id and resource id .
creates a new { @link } with the given id and returns the result .
updates the specified { @link } with the specified { @link } .
updates the specified { @link } with the specified { @link } and returns the results of the specified { @link } .
creates a { @code } with the specified id and { @code id } and returns the result .
get the object from the given list of objects
get the async request for the specified iterator .
returns the list of all the objects in the specified iterator .
/ * ( non - javadoc )
asynchronously deletes the specified entity from the specified resource .
delete a specific async server
bulk delete method .
delete the given { @link }
delete a query from the database .
returns the settings for the given request
sets the optional settings for the specified options .
sets the settings for the specified options
creates a { @link } with the specified { @link } .
creates a { @link } with the specified options .
sets the index of the specified {
add a post - object to the jsonobject
{
get the object for the given id
get a list of objects
get the objects that are contained in the specified collection .
get all objects from the given collection of objects
create a new object with the given id and returns the result
update the objects in the input array

save a list of objects
delete a query string .
delete a query
search for the query results in the query .
search the raw search chunk and return the raw search result .
wait for a task to be sent to the client .
get the settings for a given request
sets the settings for this
clears all fields in the given request
creates a new { @link } with positional parameters .
builds a string representation of the parameters .
parse the query string into a { @link } .
sets the value of the parameter to the given name .
sets the bearing to be used for the .
set the radius of a radius .
sets the { @link } to be used for the { @link } .
gets a { @link set } of { @link } s that are associated with the specified { @link } .
returns the content of the parsed xml content as a facet .
sets the value of the { @link } to be used for filtering .
sets the bounding box for the given bounding box .
set the { @link } for the given { @link } .
sets the { @link } to use for the { @link } .
returns the value of the { @link } for the given { @link string } .
sets the type of the query query to query .
removes a set of { @link } s that are not included in the { @link } .
sets the lucene for the given type .
parses a query parameter .
executes the query and returns a list of results that match the query .
creates a {
creates a list of queries that match the given query filter .

/ * ( non - javadoc )
search for the query from the query and returns the result .
creates a { @link } for the given { @link } .

/ * ( non - javadoc )
returns the { @link } for the given { @link } .

creates a { @link } with the specified { @link } .
search for the given lucene { @link } and { @link } .
search for the results in the query and query results .
builds a { @link } from a file .
creates a new { @link } .
creates a { @link } for the given query .
delete a query
create a json object from a json object
write a json object to a json object

write a temp file to the output stream .
returns the index of the specified index .
returns the offline index for the given index .
returns true if the current directory is a local file .
/ * ( non - javadoc )

delete the specified index .
delete the offline synchronisation index .
delete the offline resource from the specified bucket .
remove the offline indexer from the given s3 bucket .
parses a json string .
deletes all sub - folders from the given file .
writes a file to the given file .
sets the url parameter to be used in the url parameter .
sets the header value for the given name .
adds a user agent to the agent .
reads a string array from the given stream .
reads a byte array from the input stream .
creates a new request and returns the result object .
creates a request for the url parameters .
consumes the next connection from the stream .

sets the location of the location of the poi s webview .
set the radius of a radius .
returns the radius of the radius of the radius ( i . e . the value of the ip rate is not a number ) .
sets the type of the property .
parses a query parameter .
sets the value of the <code > name< / code > property .
start the server .
query for the specified { @link } .
filter the query and return a list of .
query the text for the given name and parse it to the given name .
creates a { @link } for the specified { @link } .
delete the given index and returns the result .
creates a new index .
delete the specified index .
call to start the api .
creates a new { @link } with the specified parameters .
asynchronously creates a query with the specified criteria and query .
sends a { @link } asynchronously .
adds a batch of async analytics responses to the specified batch .
get indexes from the list
delete a specific index

puts a new expiration time into the cache .
returns the value of the cache entry with the specified key .
/ * ( non - javadoc )
adds the specified statistics to this interval .
creates a new { @code } with the given name and the { @code } .
awaits until the completion of the current thread is complete .
compare the version string .
reports a warning log .
copies all the files in the specified source file to the target destination .
initializes the configuration file .
set the value of the property to be used for the given property .
returns the value of the specified property .


launches the worker thread .
get the pid of the current thread .
sleep for a random exponential exponential exponential exponential exponential exponential exponential sleep exponential exponential exponential exponential backoff .
formats a long value in the given time range .
<p > . < / p >

this method is used to perform a public api over the key .
reads the character character from the input stream .

writes the json string to the output stream .
writes the given <code > long< / code > to the <code > long< / code > .
writes a json double value to the stream .
reads the json encoded string from the input stream .
read json octets .
reads the json value of the given {
reads the json representation of the object .
read json .
execute the method with the specified method call .
invoke the method on the remote server with the specified id .
read the message from the stream .
add a method call to this method call .
get the location of the given location .
updates the decoration painter with the given { @link } .
refreshes the view repository .
returns the historical view view of the current page .
opens a new page editor .
logs the authentication failure failure .
returns the prompt credits for the given login server .
returns a copy of this buffer s internal buffer .
puts a new buffer to the buffer .
creates a new page page .
toggles the default page name .
starts the thread .
add a property to the menu .
returns the properties of the current user .
checks whether the given { @link } is not { @code false } .
sets whether the { @link } is allowed to be used .
sets whether the given { @link } is a { @link } .
adds a lock to the current user .
returns the depth of the tree .
returns the lock for the current user .
get owner from the current child of the given {
sets the depth of the treewalker .
sets whether the shared position is a shared .
sets the owner of this node .
sets the timeout for the current thread .
/ * ( non - javadoc )
create a lock for the specified document .
returns whether the given { @link } is a shared { @link } .
adds a new unreplicated condition to the list of conditions .
creates a new term term .
checks whether the given term matches the given term .
get the content of the .
{
refresh the layout of the layout .
get a {
/ * ( non - javadoc )
get the current project .
check if the passed in is a list of
/ * ( non - javadoc )
loads the configuration from the input stream .
reads the xml stream from the input stream .

<p > . < / p >
returns a child of the given parent .
returns the child of the given parent .
returns a new element with the given url .
returns the last element of the file .
returns the parent of the specified url .
returns the root root of the url for the given url .
removes the trailing path from the file path .
checks if the given url is a url .
checks if the given url contains the given url .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
returns the content type of the content - type .
returns the body of the document .
returns the html code of the node .
add a response to the response .
creates a new instance of { @link } .
returns the for the .
checks if the given element is a resource .
adds a new link to the browser .
create a new <code > xml< / code > .
returns the first one that has the current one that the current revision is a .
inserts a new element into the given sitemap . <p >
removes the href and removes the href and removes the href and removes the href and removes the href and removes the first child of the given element .
/ * ( non - javadoc )
returns the value of the specified <code > / code > element .
adds a new href .
adds a to the list of .
update the status of the specified status .
returns the href for the current user .
returns the next enumeration of the first child element in the tree .
returns the value of the fist - property .
returns the status of the text .
returns true if the given property is a valid .
sets the response to the given value .
sets the status of the status .
adds a new value to the given string .
sets the value of the specified object to the specified value .

notify the listeners of a property change event .
get the stack of the given value .
checks if the given string is a subtype of the given string .

get the list of objects for the specified prefix .

get a list of all the objects in the list .
create a child element of a parent element .
create a child of a child element with the given name .
clones the given dom node .
create a dom element with the given name .
/ * public void ( string string string ) { ( ) ; }
creates a dom element with the given name and node name .
asserts that the given message is not null .
asserts that the given message is not null .
helper method to verify that the text node is a dom node .
extracts the element from the dom element .
extract a node from the dom tree .
returns the child element of the given element .
returns the child element of the given name .
get child element element .
returns the text of the first child of the given parent .
returns the innermost child of the given parent element .
get the first child of the child element with the given name .
get the first child of the given child element with the given name .
get the first child of the given parent node .
get the last child element with the given name .
returns the element of the given element .
returns a that is declared in the xml namespace .
get the next sibling sibling element .
returns the next sibling sibling element in the given element .
get the next sibling sibling element .
returns the name of the first occurrence of the specified name .
returns a string that contains the given element .
returns the element of the given element .

returns a string that contains the given element .
returns the qualified name of the element .
returns the element with the given element name .
returns the text of the given element .
get the element of the given element .
inserts a new element into an { @link } .
check if the node is a dom node .
check if the node is a dom node .
/ * create a midd with a given namespace .
resolves the given element into the given element .
sets the child element of the parent element .
sets the child element of the parent element .
reset the input stream to the output stream .
creates the actions for the given resource .
adds a connection to this connection .
returns the value of the property with the given property id .
removes a connection from the given connection .
sets the location of the location of the specified location .
set the value of the property to be used .
sets the size of the specified {

set the zoom level .
parse a map of string values from the classpath .
compare the given object to the specified value .
add lock to the parent .
returns the lock entries that are currently locked by the given iterator .
create the control control fragment .
add a child node to the given vertex .
remove a child vertex from the given vertex .
start the with the flag .
stops the process .
get a string from the bundle .
returns the resource bundle for the resource bundle
gets the form colors for the given colors .
sets the time in the timezone .
sets the date time in utc format .
get the default directory for the repository .
bundle unload of {

log a {
add a field to the editor .
adjust the grid layout and grid glyphs .
applies the to the .
returns the number of columns that are in the grid .
checks that the state of the given field is a valid state .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the .
initializes the .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
sets the visibility of the editor .
returns true if the specified value is a member of the specified value .
fire a property change event .
fires a propertychangeevent to the specified value .
add a value to the specified value .
sets the value of the specified property .
/ * ( non - javadoc )
initializes the .
set the active page of the active page .
set the active editor .
this method is called by the library .

returns the parameters of the rule .
decodes a url into a string .
decode a string to a string .
encode a byte array into a string .
creates a new context with the given context and context .
save the monitor .
creates the widget for the selection table .
creates the table and build the for the given panel .
gets the url of the requested url .
get the url of the url
get the cached table
returns the enumeration of all the keys in this database .
puts a value into the url .
adds a new value to the specified url .
put a { @link } into the { @link }
adds a new token to the node .
add a child node to the tree .
set the file offset .
/ * ( non - javadoc )
adds a condition to the list .
add a new condition condition .
checks if the given condition evaluates to true .
asserts that the given object is null .
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
get a property .
returns the status of the text .

sets the status of the status .
get the last line separator of the last line of the text line .
returns the last line separator separator of the last line separator .
returns the list of the given item .



encode a file into a string .
returns the url of the url that is the url of the url .
creates a new instance of the .
creates a new project file .
this method is called when the mojo is a file .
creates a new { @link } .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
returns the index of the first occurrence of the specified array .
runs the main method .
/ *
***********************************************************************************
recursively fills the specified node with the given node .
converts a string to a string .
add a new { @link } to the builder .
add a new to the underlying builder .
returns the first child of the specified node .
creates a new { @link } .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
creates a button with the given id and label .
{
get the for the .
get the content of the .
compares two objects .
returns true if the specified term contains the given term .
creates a condition .
creates a condition .
adds a property to the dom .
adds a property name to the given name .
returns the properties of the given element .
returns the names of the elements in the specified element .
creates a new { @link } .
add a wcheckboxselect to the document .
get the { @link } for the given { @link } .
delete a http delete request .
post post request to the server .
gets the status of the job .
called by the method .
/ * guarded
set the zoom level for the specified zoom level .
create a new { @link } .
create a version of the given document .
returns the version of the { @link } .
set the label name .
sets the name of the href .
execute the given mojo .
handles the list of results .
sets the value of the specified object to the specified value .
add lock to the .
returns the active transaction .
filter the prefix of the list of { @link } s .
reads a single {
creates a list of rows from the graph .
paint the foreground paint .
creates a new edit item for the given edit mode .
gets the part of the element .
replies the image descriptor for the image path descriptor .
declares a layer to be used for the specified image .
generates the credentials for the user using the specified challenge .
adds the given vertex to the graph .
{
gets the width of the data .
dumps the contents of this dataset to the specified output stream .

find the first matching object from the given { @link } .
sets the to the viewer .
get the value of the specified { @link } .

initializes the viewer .
this method is called by the to bend the .
draw a graph .
gets the property for the given source line .
/ * ( non - javadoc )


sets the href and tagname of the href .
/ * ( non - javadoc )
closes the response .
copies the destination of this destination .
copies the given source into a new one .

extracts the value of the property .
returns the content of the response .
/ * ( non - javadoc )
this method is called by the { @link ( string ) } method to get the parent of the { @link } .
gets the properties of the given properties .
/ * ( non - javadoc )
gets a property name from the swagger server .
gets the version of the document .
{
acquires a lock from the given lock .
/ * ( non - javadoc )
checks if the { @link } is not found .
checks if the response is not a valid .
refreshes the lock manager .
remove all properties from a collection of properties .
removes a property from the given name .
set response content type .
set the properties of the given properties .
sets the properties of the property .
release the lock token .
update the changelog version of a document .
/ * ( non - javadoc )
delete the response .
/ * package
/ * ( non - javadoc )
check if the current user is a working file .
/ * ( non - javadoc )
adds a binding to the list .
returns the for the given element .
/ * ( non - javadoc )
create a new instance .
{
returns the length of the content of the specified request .
writes the response to the stream .
converts a byte array into a hexadecimal representation of the array .
converts a hex int to a hexadecimal string

get the object from the parent .
returns the parent of the parent node .
returns the children of the parent of the parent .
{
returns true if the given { @link } is a child of the given { @link } .
sets the value of the property .
sets whether the property name is a valid property .

strip off the last word in the string .
returns the localized text of the text text .
checks if the method is a getter method .

get the name of the property name .
checks if the given method is a valid getter .
returns the class name for the given class .
updates the viewer with the specified options .
returns the length of the specified object .
writes the content of the specified output stream to the output stream .
perform the actual method .
process the markers of the .
/ * package
consumes the character at the specified character .
returns a string representation of the next character in the string .
returns a string that is a string literal .
skip all whitespace characters in the text space .
find the metadata for the given resource .
adds a resource to the file .
called when the file is updated .
find the metadata for the given resource .
collapses all of the keys and their values .
returns the value of the specified key .
returns the age of the age of the specified country .
returns the html content of the content of this {
returns the maximum number of bytes that are currently in the given range .
returns true if the current user is a .
returns true if the given string is a valid .
returns the timeout value for the specified timeout
returns the keys of the specified property .
add a new key value pair to the given value .
sets the value of the value of the <code > / code > property .
read the file from the file .
parses the file and returns the file .
strip out the text and strip the text from the given string .
returns the value of the specified text .
returns the meta - data for the text .
adds a new tokens to the builder .
add a phrase to the tree .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the children of the given list of children .
get all children of the given text .
add a child element to the list of children .
prints the tree to the root node of the tree .
prints the node of the given node .
prints the tabs to the output .
parses an { @link jsonvalue } .
creates a json value from a byte array .
/ * ( non - javadoc )
recursively add a directory to the list of registered processors .
get the parent of the object .
start the cacheloader .
{
replies the image descriptor for the given id .
adds a proxy hook to the proxy server .
returns a context with the current context url .
returns the server tunnels for the server .
returns the proxy url for the given url .
performs a http request .
set the context url to the server .
set the proxy server url for the proxy server .
returns the input stream for the response .
returns an outputstream for the specified field .
returns the value of the field - value header field .
get the header field name .
get the value of the specified {
returns the value of the specified field name .
set the proxy server url .
sets the value of the specified field .
set the url url to the url .
sets the socket factory .
create a from the page .
create rule for the project .
create a flow flow rule
create a new trainer .
creates a new page of { @link } .
returns a list of all the elements in the list .
/ * ( non - javadoc )
create a new image with the given image and size .
collapses all keys and their values .

returns the enumeration of the keys contained in this configuration .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
{
{
/ * ( non - javadoc )
{
starts the server .
restart the monitor .
restart the server .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
returns the html code of the given node .
get the name of the field .
returns the evaluator for the given node .
get the value of the property .
/ * ( non - javadoc )

set the session id .
creates a context with the given context .
returns a map of all the files that are not included in the classpath .
/ * ( non - javadoc )
add a resource properties to the resource file .
get the resource file for the given resource .
get the resource version of the api .
get the input stream for the given resource .
get the input stream for the resource .
create a new resource .
create a resource with the given resource and content .

get the resource versions for a resource .
delete a resource from the server .
/ * ( non - javadoc )
sets the baseline property .
bind the given member to the specified member .
binds the given member to the given { @link } .
get the named { @link } .
returns a list of members .

authorizes the url to authenticate with the given request .
/ * ( non - javadoc )
/ * ( non - javadoc )


returns the value of the scheme scheme .
generate a md5 digest of the specified string .
generate a md5 digest of the specified request .
returns a substring of the string value of the specified string .
creates a condition for the given <code > / code > .
{
initializes the dialog .
called by the to set the to the given .
this method checks if the resource is valid .
returns the bounds of the dialog s settings .
creates a new { @link } .
a convenience method to generate an entity tag for a single tag .
create a new xml document .
returns the { @link vertex } for the given vertex .
generate a pair key pair with a random key .










encrypt the data in the given byte buffer .
get the raw key for the pkcs#1 key .
encrypt a base64 encoded message
decrypt the with the given parameters .
create a new .
closes the executor .
initializes the .
imports all the documents in the given list of documents .

/ * ( non - javadoc )
commits the current user to the database .
logout the logout
initialize the subject and initialize the state of the client .
/ * ( non - javadoc )
validate the credentials for the given .
checks if the user has superuser rights .
returns a list of tokens that are not in the given list of tokens .
set the options for this process .
checks if the user has a superuser .
returns the username and the name of the file .
add a user to the file .
verifies a crl .
check if the user has logged in user .
set the options for this session .
initialize the { @link } .
/ * ( non - javadoc )
check if the user has the given user .
clear all the password .
this method is used to start the process .
set the urls of the urls in the url .
get the string id of the first letter of the specified string .

create a new node with the specified value .
create a new instance of { @link } .
returns the value of the specified property .

clears all caches .
returns true if the given class is a .
get the class for the specified object .
get the base name of the class .
returns a class name for the given class .
returns the package name of the class .
returns the package name of the class .
returns the string representation of the string .
get the string representation of the object .
returns the descriptor for the given object .
returns the list of items in the list .
returns the parameter types for the given method .
finds the best parameter for the given method .
returns the parameter types for the given class .
returns the permissions of the given method .
get the class argument for the given argument .

returns true if the specified type is a subtype of the given class .

call the method on the target object .
call the method on the target class .
/ *
sets the value of the target property .
returns the property map for the given class .
returns the propertydescriptor for the specified property .
returns the property descriptor for the given class name .
returns the value of the specified type with the given name .
sets the class for the .

returns true if the given context is a numeric numeric type .
returns the source source of the given source .
returns the source source of the given source node .
prints the stack trace of the given exception .
prints the stack trace of the given exception stack to the trace print writer .

reads the character data from the input stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > the following operation : <br > <ul > <li > <code > / code > < / li > <li > / li > <li > / li > <li > / li > <li > / li > <li > / li > <li > / li > <li > / li
/ *
/ * :: = ( <column > alias ) ;
/ * rule
/ * :: = ( ) = ( ) = > ( = ) ? ( = ) ? ( = ) ? ( = ) ? ) ;
/ * :: = ( ) ?
compare two objects .
compare two objects .

returns the value of the specified value in the given value .
convert a value to a value .
returns the value of the { @code value } { @code value } { @code value } { @code value } { @code value } { @code value } { @code value } { @code value } { @code value } { @code value } { @code value } { @code value } { @code value } { @code value } { @code
returns a { @link bigdecimal } value for the specified value .
returns the value of the <code > string< / code > value that is the <code > string< / code > value that is <code > null< / code > .

converts a { @link string } to a { @code string } .
converts a charsequence into a byte array .
convert a value to a { @link } .
returns the value of the specified value .

returns the numeric numeric type of the given object .
creates a new { @link bigdecimal } with the specified type .
creates a new big - endian value .
converts a throwable to a runtimeexception .
<p > . < / p >
returns the current type of the current class .
returns the previous type of the specified type .
returns the evaluation of the given location in the current position .
/ * set the current value of the current value to the current value .
returns the current state of the current node .
add a string to the context .
returns the type of the given type .
returns the expression for the expression tree rooted at the given expression .
returns true if the expression is a variableexpression .
checks if the method is a method call .
compile the expression .
generate the method name for the given method .
generate the html code for the given javascript snippet .
method to get the class loader
get the pool class .
remove the node from the stack .
dump the contents of the given writer .
flattens the tree into a tree .
/ *
set the value of the property in the given target object .
adds the child to this child .
initialize the node .

rehashes the specified capacity to the specified capacity .
escapes the character in the given character stream .
parse the given expression .
evaluates the expression rewriter expression .
creates a new context with the default context root .
create a new context for the given class .
creates a new context with the given resolver parameters .
creates a new context with the given root and parent scope .
@deprecated use { @link ( string ) } instead .
adds a new context to the map .
add a new context to the map .
returns the type of the {
sets the root context root to the root context .
get the value of the tree with the given tree .
/ * get the value of the {
get the value of the ognl expression .
get the value of the ognl expression .
get the value of the expression with the given expression .
@deprecated use { @link ( string object ) } instead .
/ * get the value of the specified type using the given root type .
get the value of the argument expression .
/ * ( non - javadoc )
sets the value of the <code > value< / code > th element of the <code > value< / code > s to the <code > type< / code > .
sets the value of the { @link } .
sets the value of the object to the given value .
sets the value of the specified value .
returns true if the given object is a constant .
returns true if the expression is a constant expression .
returns the default service id .
wait until the server is running on the server .
/ * ( non - javadoc )
{
reads the content of the file and returns the result .
/ * ( non - javadoc )
read content from the file .
resolves a file and returns it .
collect the files in a zip file .
returns the {
checks if the given { @link } is not a valid .
returns all the artifacts that are in the given groupid artifactid .
reads the given file and returns the result as a string .

/ * ( non - javadoc )
/ * ( non - javadoc )
create a new project .
add a system property to the system property .
add a system property to the system environment .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
sets the dependencies for the given file name .
increment the current value of the specified event .
returns the sum of the specified number of times .
returns the values of the specified event type .
returns the maximum value of the given .
if the bucket is not in the bucket then the last bucket is in the bucket .
adds a value to the list .
returns the maximum value of the specified <code > a< / code > in the specified range .
set the content of the .
create a new instance of this fragment .
opens a dialog to show the dialog .

refreshes the button state .
creates a new { @link } with the given path and writes it to the given path .
this method is called when the fragment is selected .
create a folder if needed .
checks if the given file is valid .
called when the activity is first created .

checks whether the given string is a valid .
returns true if the given string is a valid nmtoken
returns true if the given code is valid for the given country code .
returns true if the given string is a valid nmtoken
returns a string that is a valid string .
called when the activity is first created .
starts the background thread that starts the given job .
starts the background thread .
/ * start tag with

ends the current position of the .

ends the end of the list of .
get the html for the color of the given color .
returns the value of the specified x coordinate to the specified location .
handle the motion of a motion edge .
zooms the current position of the rectangle to the next rectangle .
grows the image to the specified position in the range of the image .
returns the amount of the zoomed cropped left corner of the camera .
calculates the layout of the given rectangle .
registers a listener for the given media .
returns the selection of the selection .
sets whether the text of the text is displayed in the text file .
sets whether the text of the text should be displayed in the page .
sets the text of the text .
get the text text for the given { @link } .
add a start span to the screen .
apply the given value to the selection .
converts the given text into a html string .
/ * ( non - javadoc )
{
get the view for a given view
{
converts a text into a { @link } .
converts the into a .

/ * ( non - javadoc )
creates a file with the given file name and path .
creates a new { @link } with the given path and path .
converts the uri to a file .
returns the namespace name for the specified attribute name .
returns the local name of the given name .
set a value to the given attribute .
normalizes the given string to the given string .
set an attribute value .
{
{
returns the font name for a file .
get the font name from the assets file .
this method is used to ensure that the buffer is read .
/ * ( non - javadoc )
/ * ( non - javadoc )
write the number of bytes to the stream .
writes the data to the output stream .
converts the input stream to a { @link inputstream } .
returns a stream that reads all bytes from the input stream .
returns the number of bytes that are in the buffer .
sets the font size size .
normalizes the given string and returns the separator string .
normalize the given filename and returns the result .
<p > . < / p >
returns the extension index for the specified filename .

update the legend position for the given event .
draw the outline of the specified view .
draws a text view .
update the current xml document .
scans the specified scan and returns the result .
validates a string against the given string .
returns true if the selection is selected .
returns true if the next line is read .
returns the next line in the current line .
{
attribute that is an attribute value element .

gets the type of an element .
get the entity id for a given name .
this method is used to run the upload file .

checks if the path is valid and the path is valid .
called by the to close the .
returns the absolute path for the given media type .
{
applies the selection options for the given selection .
check if the given email is valid .

get the index of the text at the given position in the text tree .
undo the {
optimizes the current stack .
called when the current operation is being executed .
pushes the stack to the stack .
replaces all occurrences of the given string in the given string with the given separator .
returns a thread - safe thread .
sets the rtfdocument mode .
returns whether the thread is ready to be used for the current thread .
returns the file descriptor for the specified file descriptor .
registers the fonts of the { @link } .
get the available fonts from the given uiviewroot .
returns the asset name of the specified font .
returns the system property from the system .
converts a byte array to a byte array .
converts a byte array to a byte array .
converts the given input stream into a byte array .
converts a buffered string into a byte array .
converts a url into a byte array .
converts the given url to a byte array .
converts the given input stream into a byte array .
converts a {
reads a reader from a reader .
reads the lines of the input stream into a list of lines .
reads the contents of the input stream into a string .
returns a new iterator that reads the specified input stream and returns the last line of the input stream .
reads the lines from the input stream .
writes a byte array to a byte array .
writes the given data to the given output stream .
writes a character to the output stream .
writes a { @link charsequence } to the output stream .
writes the given data to the given output stream .
writes a string to the output stream .
writes the given data to the output stream .
返回数据给客户端
writes a {
writes the given lines to the output stream .
writes a {
writes the given lines to the given writer .
copy all the characters in a input stream to a writer .
returns true if the specified <code > / code > is <code > true< / code > .
read a file from the stream .
{
setup the .
returns the reader for the specified input stream .
loads the input stream from the given inputstream and returns the input stream .
{
expand the character to the beginning of the list .
returns the entity id for the given index .
restart the next .
pop a string in the scope of the given namespace .
closes the .
returns the prefix of the prefix .

/ *


method declaration
creates a name for a given string .
called when the activity exits .
notifies all registered listeners that the is being destroyed .
registers the editor editor .
unregisters the specified editor .
attach toolbar .
unregister toolbar bar toolbar .
{
adds the specified image to the specified image .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
fling the peekview by the specified rectangle
calculate the of the zoomed .
calculate the maximum width of the specified zoom
checks if the selection is allowed in the selection set .
returns a list of all the items in the given set of .
removes all checkboxes from the specified .
returns the list of all selection ranges from the given selection .
apply the specified value to the selection view .

encode url into url
returns the url of the url encoded url encoded as url .
returns true if the specified character is a valid locpathiterator .
checks if the directory is in the sd path .
called when the activity is first created .
returns the bitmap for the specified path .
transform the bitmap to a left - centered rect .
creates a new bitmap with the given offset and height .
called when the activity is first created .
called when the activity is read from the drawer view .
sets the output writer .
/ * ( non - javadoc )
start writing the text of the document .
end
/ * ( non - javadoc )
end
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package
/ * ------------------------------------------------------------
write the given character to the output stream .
write a string to a string .
write attributes attributes
check if the given attribute name is a valid name .
/ * parse a string to a string
/ * ( non - javadoc )
write the name of the xml stream to the given uri .
/ * ====================================================================== interface lexicalhandler ======================================================================
$antlr start
clean up all the .
build the client client .
ensures that the stream is not supported .
creates a new stream of .
wait until the stream is completed .
returns the type converter for the given class .
returns a collection of all { @link } s that are not in the given { @link } .
completes the snapshot of the given snapshot .

wait for the caller to pause the current time period .
get the records from the database .
retries the given action with the specified number of seconds .
returns a {
builds a from the given .
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
returns the method {
loads the { @link } from the given { @link } .
reads the file and returns the result .
create a new filter collector filter from the given .
validates the given context against the given context .
removes the given files from the list of files .
replace the pattern with the given string .
>
delete a string in a string .
process the content of the file .
/ * ( non - javadoc )
factory method factory method to create a { @link } .
adds a new report to the report .
initialize script script builder .
validate the given data .
build the script script for the given script .
/ * ( non - javadoc )
update the properties of the specified properties object .
get the properties of the properties .
create a new instance of the
/ *
/ *
/ * ( non - javadoc )
creates a new { @link } .
creates a {
{
remove all import statements .
/ * ( non - javadoc )

creates a new { @link executorservice } with the given name .
submits the response .
process the content of the resource .
compile a string representation of the given string .
processes the given resource reader and writes it to the output stream .
{
checks if the given string is a valid .
reads the content of the xml stream .
/ * ( non - javadoc )
{
process the content of the resource .
<p > . < / p >
update the cache value for the .
update the model for the given value .
/ * ( non - javadoc )
creates a new fiber builder with the given name .
schedules a new { @code } .
destroys the datalogger .
get the input stream for the request .
/ * ( non - javadoc )
sets the { @link } .
sets the resources that are read from the request .
adds a post processor to the processor .
initialize the script script .
create a new instance of the type of the given type .
activate services on the given provider if the provider is not a provider .
returns a { @link } that is used to load the { @link classloader } that is returned by the { @link } .
{
resolves the path to the target folder . <p >
returns the context path .
create a { @link } for the given extension .
returns a new {
/ * ( non - javadoc )

returns the content of the given file or null if the content is not a file .
returns the file with the given uri .
{
returns a map that maps the map to the map .
on error output stream
/ * ( non - javadoc )
transform a pipeline .
processes the given resource and returns the corresponding .
resolves the folder name for the given resource .
creates a new { @link } .
{
returns the { @link inputstream } for the given uri .
initialize the script script engine .
compile the script string for compiling the spreadsheet .
creates a new { @link } instance .
creates a { @link } for the given { @link } .
register the mbean with the specified name .
registers the change listener for the change listeners .
process the request .
/ * ------------------------------------------------------------
sets the configuration for the configuration .
destroys the datalogger .
groups the groups of groups in the group .
merges the given model into the given model .
process the resource .
returns the first element in the given uri .
processes the specified resource reader using the specified reader and the specified reader and the specified reader .
apply the post - processing - to - .
process the { @link } for the given { @link } .
{
process the request .
process the specified process .
/ * ------------------------------------------------------------
returns the options for the option .
initialize the script script engine .
initialize script script builder .
loads the properties from the input stream .
parse properties from the properties file .
creates the context context .
returns the {
creates a new { @link } instance .
creates a new instance of the instance .
create a new instance of the
persist the specified resource .
returns true if the target group is a group .
scan the classpath for the classpath .
/ * ( non - javadoc )
returns the { @link } for the given resource .
create a new resource
removes trailing leading and trailing slashes .
returns the full url of the url .
processes the specified resource reader and returns the result as a reader .
creates a new instance of { @link } .
initializes the servicebuilder factory for the given factory .
initialize script script script engine .
sets the { @link } to be used for the { @link } .
{
{
/ * ( non - javadoc )
checks if the given url is valid .
processes a merge request .
processes the given resources and returns the result .
run the given list of resources and all the resources that have been submitted to the given list of resources .
applies the given { @link } to the given resource .
process the { @link } for the given { @link } .
called when the application is called .
/ * ( non - javadoc )
{
process the injection annotation .
get all fields of the class .
checks if field is annotated with the given field .
performs a validation of the image uri and returns the result .
returns the css css uri for the given css uri .
/ * package
add a key to the cache key .
process the reader to read reader .
called when the cache is changed .
called when the number of changed refreshes .
adds a new { @link } to the { @link } .

initializes the path for the request .
extracts the variables and returns the variables .
process the xml content of the specified resource .
parses the css css tags and returns a string representation of the given css .
replace variables in a string .
process the specified resource reader .
/ * ( non - javadoc )
renames a file .
/ * ( non - javadoc )
/ *
checks if the given type is a valid resource type .
this method is called when the exception is thrown .
/ * ( non - javadoc )
process the script .
process a reader .
returns a new {
{
/ * ------------------------------------------------------------
clear the current thread .
{
performs the request processing for the specified request .
process the response .
<p > . < / p >
creates a { @link } for the given { @link org . apache . flink . api . . } .
processes the given resource and extracts the xml content of the specified resource .
creates a new instance of the specified { @link } .
this method is called by the to get the resource from the resource manager .
<p > generates a xml file that contains the properties of the xml file . < / p >
this method is called when a resource is running .
get the hash of the given inputstream .
creates a new report with the given resource .

returns the name of the request that will be used to determine the request uri .
returns the resource type for the given resource .

returns true if the given request is a valid .
process the script code .
process the xml content of the given resource .
process the xml content of the specified resource .
extract resource resource from the classpath .
create a resource with the url name and uri and url .
returns the absolute url for the path .
checks if the last modified date is in the request .
creates a path for the specified request and resource name .
creates a string with the given items .
returns a list of alias objects .
creates a dircontext for the given object .
adds a new client to the server .
adds a script to the script engine .
evaluate the given string for the given source .
evaluate the script .
{
evaluates the script expression .
processes the .

perform a resource - path given a resource path .
destroy arouter
destroy all registered processors .
returns a map of all the
returns true if the request handler is a request .
creates a request path for the request .
renames a group .
returns destination folder for the given resource .
process the process group .
wraps the given exception wrap it with the given { @code throwable } and { @code exception } .
processes the given resource and returns the content of the given resource .
<p > . < / p >
check if the given uri is valid .
/ * ( non - javadoc )
{
initialize script script script .
/ * ( non - javadoc )
reads the contents of a path from the given root path .
initialize the script script .
validates the given data .

creates a new instance of the pool .
reads the content of the resource using the given resource and the given resource name and the given resource name and the given resource name and the given resource name and the given resource name and the given resource name and the given resource name and the given reader .
process the given resource using the specified resource reader and the given reader .
process the reader using the specified reader and writer .
gson invokes this call - back method during serialization when the resource is a json string .
/ * ( non - javadoc )
/ * ( non - javadoc )
finds the jar file and returns the jar file .
extracts the path from the path to the url .
create a cache key .
returns true if the given request is not a valid .
write a report to the output stream .
creates a new .
adds a { @link } to the { @link } .
<p > . < / p >
process the reader using the specified reader and reader and reads the content of the specified resource .
adds a new value to the list of .
processes the javascript code of the given content .
get the hash of the input stream .
log the log summary .
called when the resource is a .
process the css resource .
read lock lock .
this method is called by the builder to close the css .
creates a new .
{
{ @inheritdoc }
{

parses the properties of the input properties into a properties object .
returns the information of this task .
print the output of the .
returns the executable executable executable executable for the given input script .
{
creates a response with the given config and returns the resulting map .
parse the header header .
adds a header to the cache .
sets the headers to be used in the response .
/ * ( non - javadoc )
{
creates a { @link } for the given exception .
convert a string to a json string .
get path info from the request path .
converts a package name into a folder name .
returns {
get the servlet path from the given location .
checks if the response headers are supported .

returns true if the given path is a valid url .
creates a new { @link } with the given { @link } .

copy the contents of the given reader to a writer .
creates a temporary file .
joins the given string into a path .
>
returns the full path of the path .
normalize a path .
returns a { @code } instance that will filter the configuration from the jawr config .
returns the attribute name for the given attribute name .
sets the attribute to be used for the attribute that is a valid attribute .
clears all attributes from the underlying {
reads the content of the file from the input stream .
write a base64 encoded string .
create a new xml document document that is used to create a object .
creates a new .
{
creates a { @link } for the given resource .
creates a new .
filter the request to the given web context .
{
removes the internal state of the given id .
wrap the callable .
creates a cache with the specified strategy and cache strategy .
sets the value of the specified content to the given content .
checks if the cache is running .
checks that the cache key is not found .
called when the exception is thrown .
check if the resource change a resource change .
check if the given resource is lockable from the given resource .

returns true if the resource type is a resource type .
replace the resource with the given resource .
adds a new resource to the resource .
set the resources for the resource bundle
copies all entries from the source map to the target map .
process the command line .
get the command line for the file .
initialize the script script .
encodes the given byte buffer into the given byte buffer .
encodes the given object into a base64 - encoded string .
processes the xml document .
parse the group element .
creates a group element .
parses the resource name and the resource name and the resource name .
create a new resource
get the resources for the given group name .
returns a map that maps the keys to the map of keys and the keys in the map .
/ * ( non - javadoc )
{
creates a { @link collector } that transforms the results of a mapped stream to a { @link map } .

wait until a future is completed .
wait until the given time is completed .
get a new { @link } with the specified { @link duration } and performing the given { @link completionexception } with the given { @link duration } .
get a new { @link future } with the given { @link time } and returns the result of the specified { @code future } .
creates a new instance of { @link } .
log a log record .
stops the timer and stop it if it is not a valid counter .
returns the { @link } for the given { @link } .
returns a {
get a timer from the given timer .
prints the statistics to the log .
awaits the number of inflight threads and terminate the thread .
update counters for the specified partition .
update the tasktracker status .
update the value of the counter - value mapping .
add rule to the given rule .
removes a rule from the .
returns true if the rule is a rule .
<p > . < / p >
returns all the sub - projects that have the same references .
returns all the properties that have the same references .
create a { @link } for the given { @link } .

collects all properties of a property .
ensures that the {
restore the current state of the current thread .
returns true if the current state of the current user is a .
sets the {
returns a { @link } for the given { @link } .
returns a {
returns a {
returns a { @link } instance for the given { @link } .
returns a {
returns a { @link } for the given { @link } .
returns a { @link } for the given property .
checks if the expression is a booleanquery .
/ * ( non - javadoc )
returns the best match for the given class expression .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a set of nodes that match the given class .
this method is used to set the results of the to execute .
{
{
removes all the fields from the given list of entities .
<p > returns a { @link } that is a { @link } that is a { @link } . < / p >
registers a new .
this method is used to set the reasoner of the .
{
{
invalidate the lock .
/ * ( non - javadoc )
/ * ( non - javadoc )
removes all the elements from the given list of nodes .
returns the list of all of the elements in the given list .
removes all sub - nodes of the tree .
returns the collection of .
/ * ( non - javadoc )
get the for a given .
constructs a { @link } that is used to access the { @link } .
{
returns the initial capacity of the buffer .
removes the specified position in the specified position .
removes the eldest entry from the heap .
returns the position of the specified number of integers .
searches for the given object in the given array .
adds the specified element to the tree .
check the search for the message .
converts the to a .
adds a timer to this timer .
{
add rule to the rule .
/ * ( non - javadoc )
creates a { @link } for the given { @link } .
get the for a given .
add rule to the given { @link } .
removes the rule from the given { @code } .

removes the entry at the given key .
/ *
increases the cache size .
saves the configuration file to the specified config file .
advances the next position in the buffer .
prints the class for the given citation file .
prints the list of objects to the given list of classes .
gets the { @link } for the given { @link } .
gets the sub - nodes of the given collection of sub - nodes of a direct { @link } .
returns a new { @link } that is a { @link } that is a leaf type that is a leaf type that is a leaf type that is a nodeset of the given node .
returns a map that maps a map to a map of key - value pairs .
scans the specified entry in the specified list of objects with the specified entries .
adds an object to the list of cp definition links to the specified container instance .
removes the specified sub - entries from the specified list .
resizes the specified buffer to the specified capacity .
clears all elements of this list .
/ * ( non - javadoc )
returns the { @link } for the given { @link } .
returns the hash code of the given object .
returns a { @code hashcode } that is the number of bytes that are equal to the specified number of bytes .
returns a { @code hashcode } that is a hash of { @code hashcode } that are identical to { @code } .
returns a { @code hashcode } that is the concatenation of the specified { @code hashcode } . the { @code hashcode } is a hash of { @code } .
returns a hash of the specified hash of the specified hash .
returns a list of all the {
returns a list of hash of the specified { @code hashcode } and fills the specified { @code hashcode } .
copy the contents of the input stream to the output stream .
returns a list of files that match the given path .
get the for a given .
process the next process .
get a {
{
/ * ( non - javadoc )
clear all the active tasks that are currently active .
inject the start of rules to the target .
sets whether the given filter is enabled .
adds a rule to the given list of indexes .
remove disambiguation rules .
returns the index of the first occurrence of the given component in the given component .
get the { @link } for the given { @link } .
returns true if the given { @link } is a { @link } .
writes a file to the file .
dumps the given { @link } to the given writer .
writes a dump of the given file to the given file .
writes the given { @link } to the given writer .
returns the hash code for the given resource .
process the .
prints the member information for the given { @link } .

returns the hash code for the given { @link } .
apply the specified property to the given property .
{
append a new object to the appendable .
clear the hashtable of the .
writes the given input to the given list of the specified objects .
returns a copy of the specified {
increases the data in the array and store the result in the array .
get system properties from a system property .
runs the task with the specified task .
run the task in the given task .
<p > runs the specified task . < / p >
get the link for this curve .
{ @inheritdoc }

create a new rule for the given visitor .
gets a new rule from the given visitor .
process the current context .


registers a query expression for the given query expression .
returns true if the current node is a .
gets the classes of the expression .
returns the direct super classes that are not in the given class or null if none is found .
returns all sub - classes that are not found in the tree .
returns the direct direct instances of the given class .
{
returns a set of random numbers from the set of weights .
returns the hash code for the given { @link } .
adds a node to the list .
/ * ( non - javadoc )
checks that the given value is a valid expression .
combines the iterators of the iterable into a single iterator .
split the given collection into a single collection .
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
filter a list of objects with the given predicate .

dumps a {
returns a set of set of all the { @link } s that are not included in the set of { @link } .
returns the number of bytes that are in the given range .
/ * ----------------------------------------------------------------------------
returns a new array of booleans that are not in the same order .
shrinks the given storage into the cache .
adds a number of bits to the end of the list .
removes the specified element from the list .
clears all bytes from the buffer .
returns the best match for the given root .
adds a new { @link } to the graph .
log an { @link } .
log a {
log a { @link } .
log a {
logs the memory usage of the specified suite .
sets the options for this configuration .
shutdown the shutdown daemon shutting down the server .
returns the node of the given class .
returns the instance of the { @link } for the given { @link } .
gets the type of the { @link } .
returns the value of the property with the given property .
<p > returns the sole class expression for the given class . < / p >
returns the class of the class that is the same as the original node .
returns the sub - nodes of the given class .
<p > returns the sub - classes of the specified class . < / p >
returns the classes that are in the given class .
returns the top - level class of the given class .
returns all properties that have been marked as a child of the given property .
returns a <code > / code > that will be used to search for a property in the specified <code > / code > .
returns the instances of the given class .
returns the set of instances of the given class .
returns the set of { @link } s for the given node .
returns true if the given class expression is a { @link } .
prints the header of the header .
add padding to the output
prints the values of the specified object to the specified value .
get a string from the given string
compare two .
main method .

removes all sub - nodes of the given list of nodes .
removes all sub - entries from the graph .
adds a new rule to the graph .
process the process .
gets the body of the request .
writes the content of the given resource to the given writer .
/ * ( non - javadoc )
returns a property descriptor for the given property path or returns null if not found .
/ * ( non - javadoc )


adds a new rel to the list of rels of the given rel .
set the type of media type .
adds a new columnfamily to this database .
sets the title of the title .
sets the title of the title .
sets the media type for the media format .
adds a new revision to the list of .
sets the anchor anchor .
add a link to the list of values .
returns the header of the url .
{
<p > . < / p >
<p > . < / p >
gets the list of .
returns a list of all that are not supported .
returns true if the given {
creates a new { @link } instance .
returns the string representation of the string representation of the string .
{
{
check if property value is present .
returns whether the value of the given property is not a property value .
{
returns true if the request is not valid .
returns the default value for the given request .
get the values of the parametertype - value .
{
process the properties of the specified class .
returns the class name of the given class .
write the bindings to the given {
returns the property name for the given parameter .
get the property name for the property name .
converts a { @link representationmodel } into a { @link } .
returns a new instance of the given { @code uri } .
returns a new { @link } for the given { @code uri } .

returns the input parameters for the method parameter .
get the value of a property field .

returns the terms of the given element .
list all event listeners
returns the query string for the given query string .
method to append the form to the form {
called when a button is a string .
process the bean properties .
add a new input element to the list of children .
creates a new { @link } for the specified controller .
creates a new { @link } for the specified controller .
build a { @link } with the specified { @link } .
adds a new link to the document .
adds a new link to the document .
adds a resource to the existing bos rel .
adds a new link to the request .
get the builder builder for the given request .
get the current request instance for the request .
add a choice to this builder .
returns a copy of this template uri with the given uri .
replaces all variables with the given parameters .
applies the given parameters to the template .
returns the uri template template that should be used to render the given parameters .
method to get a list of all { @link } s for the given { @link template } .
get the first node that is a node .
returns the first node in the specified rel in the specified rel .
{

returns a new {
returns a {
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >

returns a new {
clones the given array of integers .
returns the number of occurrences of the given number of elements in the specified string .
returns a map of entries that are not in the tree .
returns a map that contains all the entries of the supplied map .
returns a { @code } that is a { @code treemap } whose value is a { @code treemap } .
returns a { @link treemap } that is a leaf of { @link } .
/ * ( non - javadoc )
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
returns the last element of the specified node if there is no such element .
{
adds a node to the list .
returns a new instance of { @code } .
returns a {
returns a new enumerable with the given source and the given source .
{
{
returns a new { @code } instance that will perform a new { @link } .
{
{
returns a {
returns a set of elements of the supplied element in the tree .
creates a new { @link treeset } instance .
{
{
{
/ * ( non - javadoc )
{
{
{
static factory method for creating a { @code a } .
returns a new { @code } with the specified entries .
returns the first element of the tree with the given index .
returns the first node of the specified size .
appends the specified text node to the given list of sub - paths .
applies a given { @link } to the specified { @link } .
creates a new range instance .
{
returns the index of the first occurrence of the specified element in the specified object .
{
{

static factory method for creating a new { @link } with the given { @link java . util . reactiveseq } .
returns a new { @link } instance .
returns a transposed vector by traversing the elements of the given iterable in the given iterable .
if the node is a leaf node is returned .
{
replace the element at the specified position in the receiver .
{
returns a vector that combines the elements of the specified iterator into the specified iterator .
{
create a new .
create a new { @code } with the specified value .
<p > . < / p >

returns a new {
returns a set of { @link } that is the same as { @code null } if not null .
returns a list of objects that are not null .
returns a {
returns a new {
returns a sorted sorted map of pairs that are not a sorted map .
returns a sorted set of elements sorted by a sorted list of elements .
returns a sorted set of items in the sorted set .
returns a list of items from the list .
<p > returns a list of { @link } objects that are the given items in the array . < / p >
returns a character - 1 - 1 character { @code char } array .
append indent to string .
converts a string array into a string array .
returns a string array of the given array of items .
creates a new instance of the
sets the .

insert a new item into the array .



split the given array into a single array .
split the given array into a new array .
parse the given { @link inputstream } into a { @link } .
suspend the current thread .
/ * ( non - javadoc )
/ * ( non - javadoc )
rollback the transaction .
/ * ( non - javadoc )
enlist whether the resource is in the current transaction .
rollback the transaction .
returns the state of the given state .
builds a list of { @link } instances that are not loaded from the classpath .
returns a list of files that match the supplied directory .
validates that the given directory is a directory .
creates a new interface that implements the interfaces implemented interfaces .
create a link for the given class .
adds a method to the method .

returns the jvm name for the given type .
copies the source code to the given source object .
copies the given source code to the given source code .
get the activity of the given .
parse the given container and return the descriptor .
returns the address of the specified {
returns a {
sets the timer to start with the given event .
sets the timer to be used when the timer is enabled .
/ * ( non - javadoc )
/ * ( non - javadoc )
check if the notification is allowed to be enabled .
parses the from the given input stream .

{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
get the object pool object that is associated with the specified .
/ * ( non - javadoc )
/ * ( non - javadoc )
removes the entity from the current scope and removes the from the given class .
starts the galaxy server .
/ * imeta
get the unit of web . xml
<p > get the array of <code > / code > objects . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the {
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > get the <code > / code > that is associated with the specified component . < / p >
returns the descriptor for the given {
get the { @link } for the given { @link } .
returns the descriptor for the given component .
returns the { @link componentdescriptor } for the given { @link component } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the number of registered runners .




get the time - of - speech of the

returns the number of tasks that have been read from the current time .



returns the number of tasks that were successfully completed .


returns the time - time - time of the .
{
returns true if the given parameter is enabled .
returns the state of the {
get all services that are associated with this service .
returns all the components that are associated with the given service .
/ * ( non - javadoc )
/ * ( non - javadoc )
ds method to deactivate this service .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
installs the given service to the given service .
/ * ( non - javadoc )
/ * ( non - javadoc )
invoke the { @link ( runnable ) } method to invoke the { @link () } method .

get average time correlation time for the average time period of the time period .
/ * ( non - javadoc )
get the time - ups event for the given .
get the average time - time - time interval of the property .
returns the finest level of the specified log level .
creates a new { @link } instance .
returns true if the given { @link } is not { @code null } .
<p > . < / p >
create a contextual fragment of the given activity .
<p > . < / p >
this method is called when a event is received .
fires an event to the event .
/ * ( non - javadoc )
creates a new parameter with the given name and value .
/ * ( non - javadoc )
creates a new { @link } instance .
removes the usage parameter from the given map .
get the usage parameters of the given { @link } .
{
{
/ * reset all parameters for the given component .
$antlr start
sets the { @link } for the given name .
sets the .

/ *
checks if the fields are valid for the given class .
check if the component is a valid .
creates a new { @link } instance with the given event and events .
create a new event context with the given eventtype and dispatches it to the given event object .
get the profile information for the specified database profile .
get the list of profiles matching the given criteria .
returns the state of the given state .
returns the service state for the given state .
get provider class from the joynr provider .
returns the provider that is used to access the .
writes the {
reads a {
get all profiles in the database .
/ * ( non - javadoc )
<pre > return all property names in the <code > / code > property . < / p >
{
displays the result of the result .
generate a string array with the given prefix and returns the array of strings .
compares this object with the specified object .
checks if the notification is allowed to be enabled .
clear all stale entries in the cache .
checks if the given notifications is allowed to be enabled .
/ * ( non - javadoc )

sets the value of the property .
unbind the given name from the given name .
{
returns the bindings for the given key .
register a jmx mbean .
/ * ( non - javadoc )
returns a {
returns a { @link } for the given { @link } .
returns true if the given level of the trace level is satisfied .
installs a profile to a new instance .
remove all the registered {
returns the profile table for the given profile .
/ * ( non - javadoc )
check if the component is a { @link } .
checks the transactionmanager of the current transaction .
<p > checks if the given object is a { @link } . < / p >
remove the transactional bloc .

builds a list of { @link } instances that are not in the given { @link } .
extracts the jar file from the jar file .
extract the jar files from the jar file .
reads the stream and closes the stream .
puts a new value into the object .
if the given entity is a reference to the model then the entity is not checked .
if not null is returned .
if the node is a node with a node name or node .
if not null returns null .
attaches the given { @code node } to the { @code } .
if the node is empty or not already created a new node will be cancelled .
if the node is not empty then the node is not visible .
if the given node is empty the node will be deleted .
if the node is not a node then the name of the node is not included in the child node .
{
checks if the node is a child of the given node .
if not null returns null .
sets attribute value .
if the attribute is not found in the parent s parent node the value is returned .
if the given node is null then null is returned .
appends a message to the buffer .
/ * ( non - javadoc )
get the current activitycontext context .
initializes the notification server .
send notification notification to the notification .
creates a new for the given option .
this method returns the object for the object .
/ * ( non - javadoc )
install the webdav webdav webdav webdav webdav mojo .

install the installation controller s configuration .


/ * ( non - javadoc )
start the .
uninstalls the for the specified unit .
process the undeploy - process .
this method is called by the user to ensure that the user s action is called .

/ * ( non - javadoc )
checks if the given log record is null .

returns the { @link } for the given component .
print help for the help .
/ * ( non - javadoc )
converts a {
returns the string representation of the option .
gets the .
get the activity context .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the transaction .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
deserialize .
parses the { @link } from the given { @link inputstream } .
returns the { @link } for the given { @link fathom . security . } .
loads the specified policy and the specified policy .
reads the content of the uri from the given uri .
performs the actual method .
returns the js code for the current user .

/ * ( non - javadoc )
creates a new instance of the object .
returns the {
returns all the managed databases .
removes a { @link } instance .
/ * ( non - javadoc )
find all profiles matching the given name .
get all profiles matching the given name .
get profile entities for a given attribute .
returns the { @link } for the given attribute name .
check if profile is enabled .
renames the name of the database .
remove the .
this method is used to set the annotation for the .
get the activity of the current transaction .
attach the {
detaches the object from the object .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the list of tuples that will be used to read the data from the input chain .
remove the unit from the given <code > / code > .
update the properties properties of the given properties .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
ends the end of the queue .
checks if the activity is in the activity hierarchy .
removes the { @link } from the given { @link resource } .
get the interface of the specified type .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > . < / p >
<p > . < / p >
configure the configuration properties .
update the configuration .
verifies that the properties of the given config properties are not valid .
this method is used to set the state of the current state of the resource .
this method is used to set the state of the resource .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the current context context .

build profile map attribute map .
this method returns the object for the object .
resume the future .
sets the last voted for the given id .
returns the activity - specific context of the given node .
{
compare the given object to a new one .

parse the given { @link } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
creates a new { @link } instance .
{
removes the usage parameter from the given list of parameters .
gets the value of the property .
parses the { @link } from the given { @link inputstream } .

create a new instance of this
get the value of the given parameter .
get the names of the data sources that can be used to retrieve the parameter .
removes the given data from the list of listeners .
/ * ( non - javadoc )
returns the relation for the given relation .

/ *

/ * ( non - javadoc )
create a contextual activity .
/ * ( non - javadoc )
returns the { @link } for the given { @code servicename } and { @code } .
adds the method to the set of methods that are not included in the class .
returns the string representation of the given string .
returns the class of the given type .
returns the {


returns the names of all methods in the class hierarchy .
returns the methods that implements the interface class .
get the methods that will be used to create a object .
create a pool pool for a transactional profile
removes the given profile from the manager .
remove a pool object from the database .
register mbean
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
check if the given notifications is allowed to access the service .
returns the { @link integer } value for the given integer value .
parses a string with a string value .
clear the current state of the alarm .
clear all the listeners that are currently active .
get all the ids of the currently active group .
get the target objects for the specified target .
gets the descriptor for the given id .
get the list of available tasks for the given resource .
returns true if the source of the notifications is a foreign owner .
issue a log message with the given violations .
get the value of the specified object with the given name .
{
{
this method gets called from .
/ * ( non - javadoc )
sets the service event that will be used to interact with the service .

initialize the jar files and classloader .
start the server with the given url and the .
stops the server and process the given url and return the file .
show the status of the response .
add a list of { @link } to the list of { @link } .
/ * ( non - javadoc )
{

/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
rollback transaction
/ * ( non - javadoc )
rollback the transaction .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the transaction context for the given transaction .
execute the action .
close the editor .
execute the action .
starts the actions .
close the editor .
returns the names of all the classes that are not found in the given class .
returns the names of the classes that are currently in the given class .
creates a tracer for a given class .
/ * ( non - javadoc )
/ * ( non - javadoc )
lookup a { @link } .
this method is used to set the to be used by the .

returns the {
get data from the database .
returns the members of the member .
returns the address of the remote machine .
remove the data from the storage .
registers the editor .
process the services .
compares this with the same name as the name of the .
shift the given number of bits .
get the object for the specified .
create a hikari pool for the given component .
remove a pool object from the pool .
returns the for the given activity .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * throw an exception if the { @link } is not null .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
generate the class object for the given class .
generate methods for a method .

convert a string to a byte array .
returns the local node s data for the given cluster .
{
returns the value mapped by key if this map exists or if not found .
{
{
checks if the notification is allowed to be enabled .
set the profile for the profile .
returns the address for the specified address .
/ * ( non - javadoc )
removes the events from the event .
{
returns the state of the given state .
returns the {

checks if the notification is allowed to be enabled .
clear all stale entries in the queue .
installs the given resource to the current resource .
installs the specified resource to the current thread .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
clear all the transactions .
removes the given object from the list of objects .
returns true if the specified collection contains all of the specified objects .
removes all the elements from this collection .
retains all elements of this list into the specified collection .
returns the value of the specified object in the specified array .
checks if the given name is a child of the given name .
/ * ( non - javadoc )
converts a {

compares this object with the specified object .
sets the value of the specified value .
sets the value of the stringvalue to the specified value .
set the value of the stringvalue to the value of the specified character .
sets the value of the { @link } .
sets the value of the attribute value .
sets the value of the stringvalue to the specified value .
sets the value of the specified value .
sets the value of the specified value .
sets the address value for this address .
set the timer count .
returns true if the given level of the given level is a new one .
reads a {
parses the jawr config config file .
parse the given { @link inputstream } .
clean up all classes in the classpath .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
add a to the server .
get the profile for a specific profile .
notifies the transaction that the transaction is transactionally .
{
check if the given interface is a valid .
checks if the given class is a valid .
checks if the given component is a valid schema .
validates the expression against the given rule and expression .
<p > replaces the text of the specified text . < / p >
execute the given task .
execute a task .
dispatch a sessioncommandexception to a sessioncommandexception .
create a new entity with the given id .
returns the ejb interface class for the given class .
generate methods for all methods in the class name .
creates a new instance of { @link } instance .

compares this object with the specified object .
this method returns the object for the given resource descriptor .
get configuration properties for configproperty .
returns the activity flags for the activity .
sets the attribute value .
adds a binding name to the list of registered { @link } .
removes all the instances from the cache .
removes a binding name from the cache .
attaches the given { @code } to the { @code } .
/ * ( non - javadoc )
removes all the registered listeners from the cache .
registers the entity with the given id .
/ * ( non - javadoc )
returns all the common subsets of the given set of .
update the last access time .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a new component to this component .
returns the dependencies for the dependencies .
returns true if the current scan is in the classpath .
checks if the given component contains the given id .
returns all the install actions for the given resource .
get all the actions .
check if the given component is a .
returns a jar of files that are already loaded .
close the connection .
constructs a jmx object object from a database .

closes the connection .
/ * ( non - javadoc )




{

method to handle a method invocation .
/ * ( non - javadoc )
issue a {
enables / disables the .
{

compare the given object to a resource .

compares this object with the specified object .
returns all the methods that are not already in the given resource .
delete a path from a path .
this method returns the { @link } for the given { @link chemcomp } .
sets the value of the property .
{
{
creates a constructor for the given class and the given .
sets the minimum free memory free memory for the given position in the given memory - memory range .
sets the minimum free memory free memory .
sets the period of the nano - time period . <p >
generate the class for the given class .
generate the class info class for the class .
creates the constructor for the given class .
creates default constructor for the given class .
creates a {
creates a object .

creates the event listener for the given event .
create the child method for the given child collection .

create a ejb interface interface for the given interface .
adds a query expression to the given expression .
checks if the given expression is a query expression

/ * ( non - javadoc )
/ * ( non - javadoc )

create a mbeaninfo with a given name .
sets the logger level for the logger .
creates a logger info for the given logger name .
sets the parent of the specified logger .
get the trace level trace level .
create trace message .
/ * ( non - javadoc )
{
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the given expression is a query expression

invoke the method with the given method name and arguments .
creates a constructor with the given class and the default constructor .
sets the time zone offset to be used for the given set of time .
start the activity .

get details of the activity .

returns the name of the field name for the given field name .
sets the value of the field field .

/ * ( non - javadoc )
/ * ( non - javadoc )
returns a connection to the specified connection .
set the profile context .
initialize the profile .

get the profile for this { @link } .
this method is called when a listener is being executed .
get the profile profile of the profile .
{
{
this method is used to get the fax4j descriptor from the .
create a ctclass class that is a class that is a class that implements the class name .
creates a { @link } for the given interface .
create the link class for the class .

adds a field to the class .
adds a field to the class .
generates a getter method for a given field .
generates the setter method for the given field .
generates a getter method for a field .
add an annotation to the set of set .
adds the values to the given annotation .
/ * ( non - javadoc )
get the pool class for the given class .
set the unit to be used for the unit .
clear the current thread .
initialize the server .
start the server with the webapps .
create a service instance of the given service .
/ * ( non - javadoc )
returns the rectangular symbol of the collator that is defined by the specified locale .

replaces the last - replace with the given string .

checks that the interface interface implements the interface interface interface .
get all methods declared by clazz .

{
sets the trace level to the trace level .
get the trace level trace level .
get the notification information for this .
get the trace level for the given source .
returns the value of the specified resource group .
returns the full csv of the uploaded source entries . <p >
sets the trace level to the specified source .
checks the specified correlation id from the given source .
registers a notification for the notification .
{
creates a tracer for a given event .

build the kjar .
f743 -
/ *
creates a new .
add event listener .
create a new { @link } instance with the given { @link } and { @link } .
removes the event context from the event dispatch listener .
run the given command .
send event to the given event .
/ * ( non - javadoc )
{
generate classes for the given class .
generate the given { @link } instance for the given { @code entity } .
compare the .
find the {
/ * ( non - javadoc )
get all profiles from the given query .
get all profiles matching the given criteria .
persist profile .
get profile information for the given profile .
delete the profile table .
installs the specified .
/ * package

/ * ( non - javadoc )
shuts down the server .
{
check whether the given component is a valid {
/ * ( non - javadoc )


returns true if the given { @link } is not { @code other } .
removes the specified transaction from the list of managed drivers .
checks if the transaction is running .
/ * public ( ) {
handle the { @link } to be used by the { @link } .

checks if the current thread is loaded .
returns the { @link } for the given { @link } .
get the list of logger names that match the given regular expression
reset the system property .
clears the server s server .
add a logger to the logger .
adds a socket to the client .
remove a handler from the specified logger .
adds a notificationhandler to the server .
called when the gui has been pressed .
converts a { @link integer } to a { @link } .
returns a new { @link } instance with the specified string value .
parse the given { @link } into a { @link } .


sets the .
sets the .
returns the value of the cached instance .
sets the priority .
removes the from the .
<p > . < / p >
/ * ( non - javadoc )
get the from the .
invoke the event handler for the given event .
/ * ( non - javadoc )
get the object pool pool .
returns the relation for the given name .
<p > . < / p >
<p > . < / p >
returns the next index in the buffer .
{

log the current level of the .
sets the level of the trace level .
reset the cache flags .
log a message with the specified message .
{
sends a message to the client .
sends a message to the client .
log a message .
log a message with the given message .
log a message .
log a message with the given message .
log an info message .
log an exception with the given message .
log a message .
sends a message to the client .
log a message with the trace level .
log a message .
log a message with the given message .
this method sends the given { @link throwable } to the given { @link level#info } .
checks the given for the given source .
writes the object to the output stream .
reads the object from the input stream .
adds a to the list of module .
get all dependencies from the list of dependencies .
finds the class with the given name .
returns the resource url for the given resource name .
finds the resource url for the given name .
/ * ( non - javadoc )
creates a new { @link } instance .
creates a new columnfamily table .
get the default profile for the given profile .
<p > . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
get the profile name of the managed database .
get the profile name of the specified database .
get all profiles from the given profile .
get all profiles from the given resource .
get all profiles in the given table .
get all profiles from the given query parameters .
<p > . < / p >
removes the profile table from the database .
<p > . < / p >
<p > . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new instance of { @link } .
this method is used to get the classdescriptor from the object .
returns all the components that are not in this repository .
returns the set of links for the given resource .
registers a resource with the given resource name .
dump the state of the transaction .
initialize the .
shutdown the logfactory .
validate the state of the .
sets the class name .
returns the { @link } for the current { @link } .
returns the profile name for the profile .
get profile table profile .
returns the name of the user .
/ * ( non - javadoc )
returns a tracer for the given name .
returns the component type for the given id .
returns the component that is associated with the given component id .
returns the component with the given id .
returns the component - wise component of the given component .
returns the component type of the resource .
/ * ( non - javadoc )
returns the component with the given id .
generate the method name for the given class .
creates a new instance of the class .
returns the { @link activity } instance that will be used to access the current thread .
query the query with the given query and query result .
query the result of the query .
query the query with the given query and query parameters .
/ * ( non - javadoc )
insert a query to the query .
update the query .
update the value of the field field .
sets the object to be used for the given object .
sets the object to be used for the given object .
build a {

orderby .
sets the { @link } object to be used for the given object .
adds a query to the specified value .
run the given operation on the given { @code } .
{
{
returns a {
get the region of the given rectangle .
resolves the image to the specified rectangle .
url - encodes the given string as a string .
returns the canonical form of the specified jpeg page .
returns the type of the given {
returns the { @link } for the given type .
set the .
add a hint to the list of subjects .
sets the list of edbobjects .
add a new { @link } to the list of { @link } .
merge the specified { @link } with the specified profile .
merges the { @link } into the { @link } .
converts a string into a {
create a converter for the given string
add a new member to the list of members .
add a new member to the list
returns the first value of the first occurrence of the specified locale . <p >
<p > . < / p >
returns the canonical form of the specified image .
resolves the specified dimensions and returns the dimension of the specified dimensions .
resolves a rectangle to the given { @link } .
initializes the device .
initializes the connection with the specified connection .
returns true if the given class is a primitive .
/ * ( non - javadoc )
get the dump of the file .
process the controller declaration .

clean up the output stream and wait for the output to the graphite server .
returns the file name for the specified device .
/ * set the value of the .
get log file for the command line .
replace all occurrences of a string with the given replacement string .
replace the literal text with the given replacement string .
replace all occurrences of a pattern with the given replacement .
sets the text to use for the given tab width .
indent the indent and indent the sequence<br >
returns a list of all tags that are included in the text .
returns a joiner with the text .
/ * <p > the text of the tag attributes< / p > <p > the text html stores the following : < / p > <ul > <li > <p > { @code > } < / li > <li > { @link } < / li > < / ul >

get the for the connection .
restore the state of the datalogger .

sets the name of the logger .
add exceptions to the underlying exception .
returns the exceptions that are associated with the given persistence .
get a listener that will be called when the { @link } is called .
{
returns a copy of the with the given .
{
returns a prepared statement that will be used to serialize the query .
creates a prepared statement for the given method name and the given method name .
{
/ * ( non - javadoc )
invoke the method on the given proxy and invoke the method on the target object .
sets the default values for the current transaction .

get the next available in the main thread .
get the pool name for the given config .
process the queue .
find the parent parent parent of the given type .
/ * get the for the given class .
writes the class to the .
generate style method for the given method .

write a { @link bitmatrix } to the stream .
appends the <code > string< / code > to a <code > long< / code > .
/ * ------------------------------------------------------------
read a single input stream from the given stream .



returns a list of type { @link } .
get all the filters for a given filter .
get the set of the property .
get a list of .
gets the list of all sets of all { @link } s .
gets all the sets of all { @link } s .
set the .
add screen path to the screen .
set the system system properties .
get the severity of the event .
<p > . < / p >
adds a new value to the end of this list .
{
sets the value of the element at the specified index .

sets the value of the specified element .
returns the value of the specified function with the specified name .
collects all fields of the given { @link } .
processes the given list of objects in the given list .
selects a list of objects in the record .
selects a list of objects in the given list of selectors .
create a selector that is a select statement that can be used to select a row matching the given name .
create a selector selector that can be used to select a select statement .
create a selector selector select statement .
flushes the queue to the queue .
flushes the log trailer to the queue .
extract annotations from list
extracts all annotations of the given class and returns the annotations that are annotated with the given class .
finds the annotations of the specified property in the given class and returns the annotation of the property .
returns the property descriptor for the given property name .
converts the given object to a { @link } .
evaluate the string expression .
sets the data for the remote proposal .
returns a {
returns a list of objects that match the given string .


creates a new instance of { @link } .


>


converts a collection of objects to a list of objects .
returns the value of the {
creates a { @link } for the { @link } .


<p > . < / p >
remove properties from the given properties .


{
{
returns the hash of the hashcodes of the hash table .
creates a new options instance .

{
{
{
/ * ( non - javadoc )
{
closes the underlying database .
returns the end index of the array at the given index .
returns the l1 probabilities from the given array .

returns the minimum value of the given array of integers .
returns the variance of the specified length .
calculate the index of the array at the specified index .

returns the minimum value in the specified array .
returns the mean value of the specified length of the specified array .
shuffles the variance of the specified array of integers .
returns the mean value of the given array of integers .
returns a median value of the specified length in the given range .
/ *

invoke method with arguments .
returns the squared sum of the specified array of doubles .
calculate the sum of the values in the specified array .
returns the maximum length of the specified length .
returns the standard deviation of a column .

test if the given object is a sub - filter .
method to check if the given object is a nominal value .
create a new { @link } instance .
creates a new { @link } for the given type and value .
creates a new { @link } for the given type and field .
creates a criterion from the given list of { @link } objects .
creates a { @link } from the given json string .
convert a collection of objects to a list of objects in the list .
adds a double value to the specified value .
add a new element to the end of the list .
adds a new array to the array .
/ * ( non - javadoc )
returns the value of the specified function with the specified name .
search for the list of items in the list .
search for the given item in the given index .
returns the maximum element of the array .





returns the number of elements in the list .
returns the minimum element of the list .
returns the minimum element of the array .
sort the array with the specified parameters .
{
process the fields in the list .
handles a collection of objects .
checks if the given argument is a list of type arguments .
handles a collection of fields .
process collection of fields .
{
{
/ * ( non - javadoc )
{
returns a string representation of the given label .
creates a label from a string .
creates a new tool tip for the given name and the given name .
generates the label label for the given label .
adds a hexadecimal value to the buffer .
handles the message received in the conversation .
{
searches the search entry for the key .
adds a key to the cache .
removes all keys from the list .
reads the queue and sends a read - ahead data .
/ * ( non - javadoc )
starts the background thread .

<p > . < / p >


add a new object to the list of objects .
compacts a string from the given string .
split a string into a string .
split a string into a string .
split the given string into a single string .
converts a string array into a string .


returns the first - specific { @code } .
compares two { @link java . lang . string } .


sort the given { @link } with the given sort order .
sorts the specified fields in ascending order .
sorts the items in the list .

sorts the specified elements into a sorted list .
sort the specified array of items .
returns a comparator that compares the fields of this field with the given fields .
sort the given field with the given field - name and returns the child of the given field .
returns a new { @code } if the specified map is empty .
returns a map that contains the specified index and put the map in the map .
returns a new <code > / code > that is backed by the specified map .

returns true if the two objects are equal .
checks that the two arrays are equal .
returns the sum of the specified length in the array .
returns the maximum value of the specified array .
returns the minimum value in the specified array .
returns the standard deviation of the given path .
returns the median value of the specified <code > string< / code > value .
rounds a number of times to the number of digits .
get the message bundle from bundle .
sort the specified list of fields and returns the result .
sort the specified list of fields in the specified sorted list .
/ *
{

{
matches a {
/ * ( non - javadoc )

creates a copy of the specified list of { @link list } objects .

returns true if the given object is a valid field name .
checks if a field is a string field .
checks if the field is a class .
returns the first {
returns the value of the first field in the given value .
returns the name of the first field of the given class name .
get the field value of the given field .
compares this { @link } to another { @link } .
compares the time - time - time filter to the given time .
sort the list of sort - sort sort .
sort the list by name and returns the result .
sort the given collection of objects with the given type and returns the resulting collection .
sorts the given map and returns a new <code > map< / code > with the specified <code > type< / code > .
sorts the given map into a sorted map .
sorts the given map into a sorted map .
sort the specified type using the specified type .
sort the specified array with the specified sort array and sort the array .
returns a comparator that compares the specified fields .
returns a comparator that compares the comparator to the specified comparator .
compare two objects .
get the cached value for the given key .
get the value of the { @link } instance .
removes the specified key from the map .
add a key value pair to the cache .
returns the number of items in the order .
evicts all entries from the cache .
validates a { @link } .
initializes the .

creates a new { @link collection } with the specified type and { @code type } .


allocates a buffer size .
check if the current thread is a .
closes the input channel .

waits until the transfer is finished .
starts the thread pool .
start the timer .
/ * ( non - javadoc )
validates a { @link } .
{

apply the filter to the query set .
sets the value of the <code > / code > object that contains all <code > / code > objects .
converts a list of { @link list } objects to a list of { @link map } objects .
{
closes the file .
close output stream .
writes the next data to the buffer .
writes the specified buffer to the output stream .

loads a key from the cache .
adds a key to the cache .
puts all values in the map into the map .
checks if the time is in the given time .
loads a byte from the specified key .
converts the given key into the cache .
adds a key to the cache .
removes all keys from the list .
reads the meta data from the given { @link } .
load properties from the given properties file .
extracts the meta data from the given string .


extracts all the meta data from the given annotations
converts a {
matches the { @link } for the given { @link } .
split the given string into a single string .
split a string into a string .
<p > . < / p >
remove a substring from the given string .
<p > . < / p >
parse float to rgb .
parses the given string from the given string .
parses the specified number of integers from the given buffer .
parse a long value from the specified buffer .
convert a list of properties to a list of objects .
adds a long value to the end of the list .
adds a long value to the list .
sets the value of the specified element at the specified index .
converts a list of properties into a list of objects .
adds a number to the end of the list .
adds a number to the list .
{
sets the value of the specified element at the specified index .
returns the value of the specified object in the specified object .
handles the message to be sent .
returns the field value for the specified field .

returns the value of the {

get the value of the property with the given path or null if the path is null .

returns a map that maps to map objects to map .
get property type for given property .

returns the value of a path property .
apply a property to a property .

get the value of the property at the given path .
get the value of the property with the specified name .
returns the int property value of the property .


get the type of the property path .
returns the field value of the given property .
returns the field value of the given property .
returns the context context .

returns a map that contains the keys of the field that is declared in the class name and the value of the field is returned .
initialize the { @link } .
creates a message with the specified key .
creates a message message with the given message .
converts a list of values into a list of keys .
returns the subject for the current subject .
parse the text into a single object .
sends a request to the response .
set the database name for the .

compact the response .

registers the given client .

returns a list of resources that match the given path .
triggers the .
creates a json object that represents the specified attributes .
returns the stream of the given uri .
returns the json representation of the json document .

returns a value that is a json object that is a json object .
performs a page query against the specified query and return the result .
sets the value of the to the given { @link } .
adds a { @link } to the list of { @link } objects .
update the document for a document .
set the .
get a document from a uri .
gets the list of all paragraphs that are present in the document .
returns a document that represents the { @link } s .
save the user to the database .
finds the document s document .
finds all the documents in the document list .
removes the document from the database .
finds a string in the cache .
finds a stream of the given id .
finds a stream of the given uri .

checks if the given id is a valid path .
performs a post - processing operation on the response .
{
removes a single id from the response .
<p > . < / p >
create a attachment with a uri .
create a attachment with fogbugz data .
sends a request to the uri .
execute the request
gets the response body from the response .
gets the response .
returns the value of the specified type with the given type .
performs a put request with the given uri and returns the result .
performs a put request .
execute post request
performs a delete request on the given uri .
validate the status of the response .
set the entity to be used for the entity .
initializes the { @link } for the { @link } .
adds a attachment to the attachment .
add the content to the api .
{
reads the next row and reads the sas7bdat state .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last :
gen - last :
gen - last :
gen - last :
gen - last :
gen - last :
gen - last :


converts a { @link } to a string .
converts a {
converts a {
shutdown all threads that have been idle or not .
create a listener that can be used to write to the specified output stream .
write the data to a single byte stream .
adds tags to the given { @link meter } .
/ * ( non - javadoc )
returns the namespace id for the given namespace name .
returns true if the request is a query
sends a login request to the client .
get the response
generate access to the server side .
called when the request is completed .
handle a request failure .
/ * ( non - javadoc )
update the state of the scheduler .
gets a list of jobs from the specified resource and returns the result .
creates a new list with the specified point and key .
submits the job to the given job .
matches the input string for the given regular expression .

handles the case where the response is a valid http response .
parse a string into a single interval .
returns a list of records that can be used to read all rows from the database .
applies a { @link } to the { @link } .
applies a retry policy to the given { @code } .
creates a new { @code start } with the specified number of millis .
creates a new { @link } .
send a message to the client .
send a message to the kafka message .
sends a message to the client .
scan the scan and return the result of the scan .
matches the given text against the pattern .
/ *
/ * package
sets the value of the property to be used .
adds a file to the file .
replaces the given text in the given text file .
builds a file from the zip file .
generate a new { @code } with the given { @code name } and { @code type } .
generate a new { @code } with the given { @code name } and { @code } .
generate a new { @code } with the given { @code name } and returns the { @code } .
generate a new { @code } with the given { @code } .
{
{
{
returns a new file that represents the file s file .

{

registers a for the given .
registers the renderer for the given class .
initialize the template for the given domain .
add a { @code } to the { @code } .
sets a property to the specified value .
add a collection of child objects to the list .
convert a date to a date .
convert a date to a date .
creates a new { @link } with the specified suffix .
returns a { @link } that identifies the given { @code } .
returns a {
returns a { @code } which is used to perform a { @link } .
returns a { @link } that can be used to create a { @link } .
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
returns a {
creates a new { @link } with the given { @link } .
copy the contents of the given buffer to the output stream .
creates a new xml document factory builder builder .
parses the given file and returns the xml document .
parse a xml document from a reader .
returns a stream of elements of the given element .
returns a stream of nodes that are not part of the tree .
get the first child element with the given name .
returns a stream of elements of the parent element .
validates a xml schema .
get a client application server .
creates a new { @link } instance .
deserializes a yaml yaml yaml yaml string into a { @link string } .
creates a yaml yaml object from the given yaml file .
main entry point .
<p > returns a content - length string .
reads a resource from the content of the content of the specified resource .
processes a zip entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry entry
<p > . < / p >
generates the authorization signature for the given authorization message .
generates a authorization authorization code for the given key and the given secret key .
generates the signature for the given key and signature .
generates a authorization authorization code for a given key and a secret key .
generates a signature with the specified key .

sets the signature of the signature .
encode the binary data to the given byte array .
decode a base64 encoded string .
remove a space character from the beginning of the list .
put a file into the file .
put a file into the file .
uploads a file to the specified file .

sets the data for the data .
uploads a multipart upload .
uploads a file to the file .
/ * ( non - javadoc )
returns the for the portlet .
set the visibility of the portlets .
returns the selected .
add a portlet to the list of listeners .
prepares a list of { @link } s .
prepare the for the given user .
/ * ( non - javadoc )
checks if the given entry is a live resource .
/ * ( non - javadoc )
returns the available proxy proxy for the specified resource .
add all the children to the list of attributes .
list the
create a new
gets the notification for the given request .
gets the for a given profileid

gets the value of the specified request .
gets a journey id for a notification .
gets the event id for the given { @link }
create a new event
returns the url of the url to the server .
{
process a list of { @link } s .
{
parse the authorization token from the request .
init method .
set the weight of the .
/ * ( non - javadoc )
returns a url representing the url of the url in the url .

find the notification that the given { @link } is found .
combine the { @link httpresponse } objects to the { @code } .
this method is called when a notification error message is reported .
filter the { @link } with the given { @link filter } .
gets the number of items in the list .
adds a categories to the list of categories .
creates a new instance of this .
{
{
sends a notification error message to the client .
converts the response headers to the given { @link } .

attach the actions to the menu .
<p > returns the url of the specified link resource . < / p >
get the { @link } for the given portlet type .
returns the for the given request .
returns the redirect uri of the request .
{
read the from the request .
/ * ( non - javadoc )
returns a list of urls that contains the given classpath .
reads a file from the file .
returns the response to the remote service .
{
get the id of the portlet portlet request .
extracts the user id from the given providerid .
{
/ * ( non - javadoc )
calculates the duration of the .
checks if the given {
hide the given notification .
returns the map of attributes that are not included in the attributes .
normalize the normalization of the given vector
returns true if the given point is inside the point of the given point .
returns true if the given box is a valid box of the given box .
draw a point from the given point .
returns the sky of the point in the binary representation of the .
sets the coordinates of this <code > / code > .
set the value of the given vector .
set the value of the x y z and z .
transform the given { @link rectangle2d } to the specified { @link rect } .
transforms src into src .
{
transforms src into src .
converts the given { @link bitmatrix } to the given { @link } .
converts the given input to the given output .
converts the given input to a rgb number .

applies the epipolar to the left - right right of the shapepath .
the main method of the given rectangle .
<p > rotates a point in a clockwise ( by the book point in point ) . < / p >
returns true if the points of the polygon is inside the plane of the plane .
computes the average of the observed corner matrices .
checks if the two triangles contains the same length .
checks if the given matrix is a good solution .
水平翻转图像
shift the specified linear motion .
shift the specified rectangle to the specified value .

removes the specified polygons from the given set of lines .
remove the specified number of corners from the given corners .
checks if the given number of corners is a valid tolerance .
computes the average of the points between two points .
converts a square matrix into a square matrix .
converts the given { @link } to a { @link matrix } .
computes the area between two tiles .
calculates the squared euclidean distance between the specified corners and the specified number of times .
<p > returns the point in point of point . < / p >
returns true if the points of the two points are colinear .
returns true if the two influential agree is the same .
returns true if polygon_a touches point_b .
returns true if polygon_a is outside the of the triangle .
computes the intersection of the intersection between two points .
computes the intersection of a point in a b c .
<p > returns a intersection of the intersection of a line . < / p >
returns the intersection of the intersection of the two <code > / code > .
intersect the intersection of two points inside the specified point .
returns the intersection of the line of the line .
computes the intersection of the intersection between two points .
returns true if the given rectangle contains the point in the passed point .
checks if the given point is inside the point of the given rectangle .
<p > checks whether the point is inside the ellipse . < / p >
checks if the given rectangle is inside the camera .
intersection of intersection
returns the squared area of the given <code > / code > .
returns the intersection of the intersection of the specified rectangular point in the specified region .
<p > . < / p >
<p > interpolates a matrix to a matrix .
converts the given type to a cardinal ordinal value .

<p > . < / p >
<p > returns the squared euclidean distance between the two points .
converts the given matrix to a matrix .
gets the value of the specified percentile in the given index .
<p > . < / p >
<p > . < / p >
<p > converts a real to a square matrix . <br > <br > a = { a<sub > ij< / sub > = 1 i / th > } where x is a square matrix . <br > <br > a<sub > i j< / sub > = 1 i j< / sub > = [ - 1 .. ] + &alpha
sets the center of the center of radians in the given radians .
<p > . < / p >
<p > returns the z - value of a rotation matrix . <p > the result is used to store the result in radians . < / p >
sets the z - coordinate of the negative radians about the z - coordinate of the point .
<p > converts a matrix to a complex conjugate matrix .
<p > returns the rotation of the given angle in radians . < / p >
<p > returns a new matrix that stores the result in the given matrix . < / p >
<p > returns the rotation matrix that is in the matrix that is in the matrix . the result is used in the rotation matrix to be used in the matrix to be used . < / p >
sets the angle angle .
<p > returns the point in point of point . < / p >
<p > transform / a > to a fundamental matrix multiplication . < / p >
<p > . < / p >

<p > computes the best way to perform the algorithm . < / p >
sets the current position of the given input .
calculate the jacobian for the given { @link } .
checks if the current point of the specified area is in the middle of the area .
<p > . < / p >
compute the biggest linear line of the line of the points in a list of points .
computes the jacobian of the points in the given input .
solves the point in the middle of the plane .
returns the length of the squared distance in the specified { @code } .

returns the line separator of the line segment .
converts the given { @link } to the list of { @link } objects .
sets the list of all pixels in the list .
converts a matrix to a square matrix .
converts the given { @link } to a { @link } .
converts a { @link } into a { @link } .
converts a { @link } into a { @link } .
converts the specified { @link } into a { @link imagegray } .
converts the specified { @link } into a { @link } .
converts a { @link } to a { @link } .
<p > quadratic interpolation around the specified point . < / p >
<p > returns a new matrix that is in the right - handed coordinate system the z - axis .
<p > performs the following operation : < / p > <ul > <li > <p > { @code } < / p >
<p > performs a complex multiplication between two vectors . < / p >
<p > adds a normalized value to the supplied { @link } . < / p >
adds the specified { @link } to the specified value .
<p > adds a new row to the specified value . < / p >
<p > subtract a two objects . < / p >
rotate a left - centered right of the specified point in the given point .
rotate a left - centered right of the specified point in the specified range .
<p > performs the following matrix : <br > <br > b<sub > i j< = a = a + b * b + b * b + b< / span >
<p > performs the following equation : <br > <br > <code > x< / b > < / p >
<p > performs the following operation : <br > <br > b<sub > i< / sub > = > j = > i< / sub > * b<sub > j< / sub > < / p >
<p > performs a linear matrix that is a square matrix and stores the result in <code > / code > . < / p >
<p > performs the following equation : < / p > <ul > <li > <p > <code > / code > < / li > <li > < / li > <li > < / li > <li > / li > < / ol >
<p > computes the inner product of the two matrices . < / p >
<p > computes the intersection of the two vectors . < / p >
<p > . < / p >
<p > computes the inner product of the two vectors . < / p >
scales the specified scalar value .
divide the given scalar to the given scalar value .

converts a { @link } into a { @link matrix } .
converts the result of isometric into a 3x4 matrix .
sets the parameter vector .

/ * ( non - javadoc )
/ * ( non - javadoc )
returns the approximate angle between the two specified angle .
returns a new <code > double< / code > of the <code > / code > .
returns the squared distance between the specified point and the given point .

calculates the approximate squared distance between the two .
calculate the number of pixels in the range [ 0 ] .


calculates the euclidean distance between the two points .
returns the value of the second { @code value } .
checks if the intersection point of the plane touches the intersection point .
checks if the camera is inside the plane .
checks if the two coplanar points are colinear of the camera .
returns the intersection of the given rectangle .
returns the intersection of the two points in a plane .
returns the intersection of the given rectangle .
performs a comprehensive normalization of the given { @link planar } .
checks that the is in the middle of the plane .
returns true if the given point is a rectangle .
returns true if the given point is inside the given point .
checks if the intersection point is inside the intersection point .
performs a linear convolution on the given pixel .
extracts the from the given
applies the given 2d - forward to the given input .

<p > performs the following operation : < / p > <ul > <li > <code > / code > < / li > < / ul >
sets the coordinates of the camera rig .

converts the homography to a square matrix .
creates a gaussian orientationhelper for a polygon
converts a 2d array to a dense one .
<p > returns the number of squares of the complex number of matrices . < / p >
returns a 3d perimeter of the given sphere with the given radius .
returns the square of the center of the center of the sphere with the center of the given point .
<p > returns true if the specified rectangle is outside of the given tolerance and the x y is the same as the same point . < / p >
<p > . < / p >
calculates the distance squared between the two points .
calculates the distance between the two points .
converts a vector of lat angular into a single vector of the given angle .
returns the evaluation of the circle .

calculates the angle between a circle and the
returns the closest point in the middle of the given point .
returns true if the line of the line is in the middle of the line .
returns the closest point in the middle of the line .
returns the closest point in the middle point of the given point .
<p > . < / p >
<p > returns the closest point in the plane . < / p >
<p > returns the closest point in the plane . < / p >

returns the closest point in the middle of the given point .
<p > returns the closest point in the specified vector and p1 p2 . < / p >
returns the closest point in the middle of the given point in the middle of the given point .
<p > transforms a point in the camera to a point . < / p >
performs the transformation on the plane .
transforms a into a single point .
transforms a <code > / code > to a <code > section< / code > .
transforms a list of points into a list of points .
<p > transforms a <code > / code > to the <code > / code > . < / p >
performs the transformation on the plane .
<p > transforms a rotation to a point in the plane . < / p >
converts the specified list of { @link } to a { @link } .
sets the list of classifications to control the list of classifications .
returns true if the two quaternions are equal .
{
returns the angle of the specified angle .

converts a line to a new line .
convert a line to a string .

converts the specified text into a { @link } .
converts the given { @link point } to a { @link imagegray }
converts the given { @code } to a { @code } .

convert the given line to the specified image .

converts the input to a { @link } .
converts the input to a { @link } .
converts the input to a dl4j .
converts the camera to a planar { @link } .
<p > performs the following operation : < / p > <ul > <li > { @link } < / p >
<p > returns the evaluation of the camera correlation plane performed by the camera rig . < / p >
evaluates the plane induced by the camera and returns the result of applying the camera to the plane .
the arc - wise inverse of the given { @link } .
rotates the angle between the specified coordinates within the plane specified by the supplied angle .
adjust the x y z components of the supplied angle into the center of the given angle between 0 and 1 .
calculates the plane of the plane foreground camera .
checks if the given { @link point } is a { @code } .
creates a copy of this object with the specified values .
returns the squared euclidean distance of the squared euclidean distance .
converts the given line number into the output format .
computes the line of the line of the line break line .
checks if the given point is a b .
checks if the given tolerance is a dot .

calculates the area of the specified area .
returns the center of the molecular formula .
calculates the angle of a line .
returns a list of polygons from the list of observations . observations are in a list of numbers .
robust to concats a tile from a list of points
checks if the result is a square - of - line .
returns a random list of random permutations of the given center .
<p > returns the { @link } for the given { @code } . < / p >
transforms the given { @link } into the output .
performs the transformation on the plane .
returns the value of the specified percentile in the specified range .
<p > returns a { @code } that is the point of the specified { @link point } . < / p >
<p > performs a qr decomposition on the ellipsoid with the given range . < / p >
set the bounding box of the given <code > / code > .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts the specified input to a { @link imagegray } .
converts the specified angle into the specified { @link } .
evaluate the transformation .
computes the evaluation of the ellipse and the nearest plane .
src / main / resources / org / drools / compiler / lang / drl6expressions . g : : 1 : : ( > > ) * > > > > > > > > > > > > > > > >
computes the angle angle between the specified angle and ellipse .
computes the l2 for a given plane .
the image of the ellipse and places the point in the image .
performs a normalization of the given image and places the results into the image center .
computes the orientation of the image .
initializes the specified ellipse and calculates the point of the specified shape .


returns the number of points in the given position in this vector .
<p > performs the best fundamental matrix and all the solutions in the matrix that is the point in the matrix . < / p >
returns the corner of the specified polygon .
calculates the euclidean distance between two points .
calculates the squared euclidean distance between the given coordinates and z .
calculates the squared euclidean distance between the two specified points .
calculates the distance between the two points .
calculates the distance between the two points .
returns the distance between the two points .
<p > returns the distance between the two points . < / p >
sets the point line of the line .
returns the point of the point in the given { @link } .
calculates the distance between the given line and the number of points .
calculates the distance between the two line numbers .
calculates the squared euclidean distance between the line and the squared distance between the line .
calculates the distance between the specified line and line points .
calculates the distance between the two points .
shift the given line .
returns the squared distance between the two specified points .
returns the squared euclidean distance between two points .
calculates the distance between the specified points and the specified distance .
returns the squared distance between the two points .
calculates the distance between the given coordinates and points .
returns the squared distance between the two points .
calculates the distance between the two points .
returns the squared euclidean distance between two points .
calculates the distance between two lines .
computes the squared euclidean distance between the two ellipses .
compute the euclidean distance of a ellipse .
adds a new node to the list of children .
<p > returns the closest point in the line . the point is the point of the point in the middle of the line . < / p >
<p > . < / p >
returns the closest point in the line .
returns the closest point in the line .
<p > . < / p >
<p > creates a point with the given point and the number of points in the image . < / p >
computes the jacobian of the decomposed procedure .
{
create a random uniform random ( rectangular ) region of a geographical point .
computes the absolute value of the two { @link quaterniondc } s by applying the supplied { @link planar } to the supplied { @link quaterniondc } .
<p > checks whether the two quaternions are equal . < / p >
normalizes this vector by dividing the rotation - value .
<p > creates a matrix that is a fundamental matrix . < / p >
converts a { @link planar } into a { @link planar } .
returns the closest to the given point .
$antlr start
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > liefert the absolute y and b and
<div color = red style = font - size : 24px ; color : red > <b > <i > i< / sub > = a<sub > i< / sub > * b<sub > i j< / sub > < / p >
checks if the given rectangle contains the given rectangle .
intersection of intersection
returns true if the specified perimeter is a convex hull .
checks if the given is a valid rectangle .
checks if the given coordinates lies within the point .
checks if the given point is inside of the given shape .
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the y - point vector of
returns the distance between the two points .
sets the gpio - norm of the specified .
performs a point on the point along with the point of the point in the plane .
normalizes this vector by the given angle .
{
calculates the beta point of the point in the given plane .
computes the point in the given radians .
returns the { @link polygon } for the given perimeter .
performs an in - place classifier around the specified number of observations .
performs an in - place linear projection transformation for the specified dimension .
performs a rotation transformation on the specified { @link planar } .


returns a list of 3d points in the planar image .
computes the homography from the input and store the results in the given list of solutions .
<p > returns a list of random tiles in the pyramid . < / p >
sets the value of the given double .
normalizes the equation system .
<p > removes the y - point of the two { @code y } < / p >


returns true if the given list of points is in the given polygon
水平翻转图像
checks if the convex hull of the convex hull is a convex hull .
returns true if the given point lies inside the point in the specified plane .
checks if the given perimeter is a { @link } .
checks if the given perimeter is a finite number of solutions .
returns the mean value of the specified list of { @link } s .
$antlr start
increment the value of a scalar .
returns the largest absolute value of the x y z .
performs a linear transformation on the input matrix and performs the normalization in the given array .
<p > computes the of the . < / p >
returns true if the specified array is inside the same length .
learns the image using the given dimension .
compute the squared distance between two points .
compute the squared euclidean distance of the cubic curve .
<p > interpolates a list of square and square ( square ) of the points in a list of . < / p >
returns a random list of random <code > / code > s .
randomly shuffles a list of random components of a peptide center
runs the algorithm .
runs the given { @link } .

invalidates all the registered listeners from the cache .
discards all { @link } s in the { @link } .
create a set of all { @link } s .
get all server features from the server .
returns all features from the classpath .
gets the server - side server from the given file .
parses the given file and returns the result set .
parses the node s .
returns the download of the given file .
download the database to the database .
returns true if the specified plugin is a parameter .
returns a set of feature files that are not in the repository .
checks if the given list contains the given location .
returns true if the given target contains the given target string .
installs the plugin to the given
get the bundle descriptor for the given resource .
returns the version version of the version of the version .
extracts the jar from the jar file .
returns the for the given installation file .
checks if the file is a jar file .
extracts the version from the file and returns the version .
compare two dbids .
check if the given is valid .
returns a list of install that is the same as the install directory .
checks if the given jar file is a functional functional checker .
get the properties of the specified card .
returns a property for the given key .
/ * ( non - javadoc )
returns a text message with the given text and text .
shows a title for the icon .

{
draw the outline of the graphics
draws the foreground color of the .
returns true if the stemming is in the .
adjust the length of the length of the first quadrant .
move to the end point of the linesegment .
move the specified angle to the specified location .
compares two objects .


returns the random number of repeated values for the given range .

returns true if the given is a .
returns true if the file is a directory .
creates a color palette .
draw the color of the given color .
verifies that the image is valid .
returns the distance between the two points in the given range .
copies the specified range of the specified range to the given target string .
returns the distance from the given { @code distance } .
sets the sound to the resource .
play the sound sound .
print a string with the given format .
prints a string to the given locale .
prints the output to the output .

rotate a line of the specified angle .
adjust the pixel at the given position in the given point .
draws a point on the specified point .
draw a circle with a circle .
applies the trigonometric factor to the given graphics .
draws a arc at the specified point .

scales the rectangle at the specified point .
concats two points in a polyline .
draws a pgm image with the given number of pixels .

sets the text of a text .
apply a text transformation to a string .


sets the color of the .
sets the color of the background color .
draw the rectangle .
draws the bulge to the shapepath .
draws the to the given .
draw the
draw the
adds a new to the panel .
creates the color palette .
adjust the color of the .
draw the .
set the .
/ * ( non - javadoc )
draw the specified length of the given length .
{
returns the approximate layer with the given length .
draw a number of
returns the number of times the specified value is less than or equal to the specified value .
returns the double value of the double .
returns the number of atoms in the given vector .

returns the approximate great - precision of the specified array .
main method to parse a string .
sets the asset path .
read the content of the file .
returns the first letter of the first word in the specified word .
returns the first letter of the word .
create a new user with the given username and password .
update the authorization code for a given user .
merge the user with the given jaas user .
creates a { @link } for all { @link } objects .
creates a query for the given search query .
search all the sub - entities matching the given search query .
search all the objects in the given search list .
finds all results matching the search search search results .
search for the results in the search query .
{

/ * ( non - javadoc )
create a new { @link } .
update the given client id
resume the given client .
joins a single string into a list of joins .

{

registers the given injector to register the given injector .
authenticates the user to the given request .
logs the user to the user .
retrieves the user profile for the given user .
check if the user has logged in user account .
/ * ( non - javadoc )
returns all the roles that are not granted .
returns a list of all the in the given repository .
get the logged in user - based on the specified database .
get the job s job from the given credentials .

pause the given client from the given group .
resume the job .
/ * ( non - javadoc )
adds a projection to the projection

create a new { @link } .
creates a new instance of the <code > / code > that is attached to the specified job .
creates a trigger that is a job .
sets the value of the trigger to the trigger .
sets the start time of the trigger .
send a message to the specified mail .
/ * ( non - javadoc )
{
initialize the scheduler factory .
returns all fields of the given class .
returns a map of field - name mapping .
/ * ( non - javadoc )
main method that will register the class for the .
get the permissions for a given user .
create a new role for the login user .
create the service for the credentials from the service provider .
refreshes the specified credentials from the specified credentials .
{
configures the { @link } instance .
generate attributes for a map .
generate a string for the given password .
sends a message to the roster .
/ * ( non - javadoc )
verifies that the user password with the given password is valid .
generates a password with the password and password .
called by the user to perform the authentication .
returns the user with the specified name .

verify that the given account name is found .
verifies that the given password is valid and verifies that the password is valid .
sets the asset path to the specified path .

loads the asset from the file .
loads the asset from the cache .

{
{
creates a {
scans the { @link } and { @link } and { @link } .
execute a transactional transaction
execute a {
/ * ( non - javadoc )
configures the session to be used to write to the session .
notifies the transaction that the given transaction is completed .
/ *
called when the session is closed .
start the .
returns a list of for a given .
finds all the user access for a given user .
create a new permission for the given user and providerid .

checks if the given { @link authentication } is a { @link } .
{ @inheritdoc }
checks if the given token is a valid .
create a new { @link } with the given parameters .

{
returns the response .
compares the given value against the given value .
returns a { @link } that matches the given value .
create a new instance of the given name .
creates a new { @link } with the specified name and value .
create a new instance of { @link } .
returns a {
returns a {
returns a { @link } for the given value .
<p > . < / p >
returns a { @link } for the given content .
/ * ( non - javadoc )
adds a link to this resource .
adds a link to the resource . <p >
<p > the link attributes for the specified resource . < / p > <p > the following are only a link that is associated with the link is not mentioned in the link - relation type . < / p > <p > <b > note : < / b > this method appends the values to the existing object if it
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new map with the specified values .
get the root cause of a { @link throwable } .
returns a list of all the throwable that are not the same as the original list of the returned list .
returns a stack trace of the given throwable .
returns a stack trace of the stack trace .
propagates { @code throwable } to { @code t } .
encodes the given object into a byte array .
decode the base64 encoded string .
returns true if the specified string is a valid uuid
decode a byte array into a byte array .
encodes a string into a byte array .
encode a string into a string .
write a byte array to a byte array .
write a byte array into a byte array .
decode a byte array into a byte array .
decode a long array into a long - encoded byte array .
copies the contents of the given input stream to the specified output stream .
copies the contents of the given input stream to the specified output stream .
copy the contents of the specified stream to the output stream .
copy the content of the given stream to the output stream .
compare two reader .
reads a string from the reader .
reads the contents of the input stream into a { @link bytearrayinputstream } .
read the content of the input stream .
read lines from the lines of the line .
reads all lines in the stream .
reads all lines in the specified stream .
creates a new with the given key and returns the value .
create a new { @link } instance with the given { @code } .
creates a new cemi mac from the specified mac .
create a new .
compresses src file and writes it to src .
writes the given file to the given file .
reads a file from src and writes it to the output stream .
compare the file to dst .


returns a byte array of the specified file .

compare two files .
get the base name of the file .
creates a new fileoutputstream .
reads a byte from the input stream .
parses the given string and returns the result .
creates a new instance of { @link mediatype } .
returns the charset for the given charset .
sets the value of a parameter with the given name and value .
returns a new {
returns a new path parameter with the given name .
returns a new instance of the configured media type .
returns whether the given media type is a subtype of the given media type .
returns a new iterable that combines the iterators of iterables into a single iterable .
returns a new {
returns a new { @code arraylist } instance that is contained in the specified { @code clazz } .
compare two iterables .
returns a new {
returns a {
新建一个arraylist<br > 提供的参数为null时返回空 { @link }
converts a iterable into a set of objects .
returns a new {
adds a padding to the buffer .
creates a new { @link linkedhashset } with the specified elements .
returns a copy of the given iterable with the specified elements .
creates a new list with the specified elements in the given iterator .
creates a new immutable list with the specified values .
returns a list of elements of the given list .
returns a list of file paths for the given file .
returns a list of head ( head ) of the file .
reads lines from lines of lines of lines .
returns a sublist of the specified file .
returns a sublist of the given { @code } .
creates a buffered reader for a file .
creates a buffered file for writing to the given file .
create a buffered file with the given file name and writing the output stream .
reads a file from the given file .
reads a list of lines in a csv file .
creates a new luis application .
finds a resource from the classpath .
finds a resource from the classpath .
copies all the contents of this stream to the specified output stream .
/ * ( non - javadoc )
reads the contents of the given { @code byte } into a { @link } .
reads the contents of the given { @link inputstream } as a { @link } .
reads lines from the given list of lines .





determines whether the given date is a valid .
checks if the given calendar is a week .


checks if the specified date is a year month .
checks if the calendar is a valid calendar .
parse a string into a date format .
<p > formats a date - time string into a date . < / p >

converts this date - time to a calendar object .
combines the iterators into a single iterator .
concats iterators that are iterators of the iterators of the iterators of the iterators of the iterators of the iterators of the iterators of the iterators of the iterators of the iterators of the iterators of the iterators of the iterators of the iterators of the iterators of the iterators .
creates an iterator that combines the iterators that are not guaranteed to be closed .
creates an iterator that is the first element of the given iterator .
compare two iterators .
yields the first element of the iterator .
skips the specified number of bytes in the specified iterator .
returns a set of set of elements in the iterator .
returns a new {

<p > abbreviates a string with the given length . if the given string is longer than the length of the string then the resulting string is returned . < / p >
concatenate strings to the given string .
returns the distance between two strings .

repeat the repeat count of the given number of times .
shuffles the string into a string .


removes trailing leading and trailing blanks .
remove a string from the given string .
trims the string to be a string .
<p > pads a string to a string . < / p >
<p > pads a string to a string . < / p >
quote the given string .

<p > counts of the number of occurrences of the string . < / p >
creates a url that is a url that can be used to create a url .

resolves the given url relative to the given url .
get the qualified name of the given class .
get the short name of the class name .
returns the package name of the given class .
returns all super classes that are not declared in the super class .
returns all the super types of classes that are burstable in the specified class .
verifies the validity of the password .
read a string from the stream .
append the count of the pad to the end of this buffer .
append the specified buffer to the end of this buffer .
returns a byte array that is the number of bytes that the given byte array is a byte array .
concatenate the given array into the array .
concats all elements of the given array into the array .
copies all of the specified portion of a given array to the specified array .
copies a portion of a array
copies a array with the given array of <code > / code > .
reverses the bits array .
reverses the elements of the array .
rotate the specified two dimensional array .
rotate the specified array of <code > / code > objects that have been computed by the given <code > / code > .
shuffles a list of integers from the specified array of integers .
sort the specified array of objects .
sort the specified array of objects using the provided comparator .
returns the long array of primitive objects .
returns the number of elements in the array .
returns the primitive value of the passed primitive array type .
converts a character array to a byte array .
converts byte array to byte array .
returns true if the array is a primitive .
returns the primitive float array of float .
returns the double array of the double array .
converts a long array into a long .
converts a array of ints to <code > null< / code > .

converts a char array into a string .

<p > converts a boolean array to a boolean . < / p >
converts a float array to obj1 obj2 .
converts a double array into a double array
decode a byte array into a byte array .


converts a string into a lowercase string .
returns a string representation of the separator of the given separator .
encode a string into a string .
decode a string to a byte array .
decode a base64 encoded string .
<p > returns a fraction of the denomination in the given <code > fraction< / code > object . < / p >
<p > parses the given string into a { @code string } . < / p >
<p > returns a new instance of { @link } . < / p >
<p > returns the value of the <code > y< / code > object with the value of the same value . < / p >
<p > returns a new { @link } with the specified fraction . < / p >
<p > returns a new instance of { @link } . < / p >
<p > returns the value of the <code > fraction< / code > value that is the exponent .
<p > creates a new instance of { @link } . < / p >
<p > returns the fraction of satoshis < / p >
creates a copy of this collection with the specified collection .
returns a copy of the given set of elements .
creates a copy of the given iterator with the given set of elements .
creates a copy of the specified set of values .
creates a new set with all elements of the specified set .
parses a duration string into a duration .
returns a { @code duration } representing a { @link duration } that is measured in nanoseconds . <p > the duration of the duration is calculated by truncating the time to { @code seconds } . <p > the duration of the duration is { @code seconds } . <p > the duration of the duration is { @code seconds } .
static factory method for durations durations .

returns the maximum value of the specified value .
returns the minimum value of the given long value .
returns the mean value of the given value .
returns the mean value of the given double array .
returns the number of times that the value is a valid time .
returns a number of integers that is less than or equal to the passed number .
returns the difference between two numbers .
multiply the value of the two {
multiply the given number of integers to a number .
returns the value of the two { @code long } objects .
returns a { @code int } whose value is the same as { @code b } .
returns a power of the two { @code } .
returns a { @code long } value of the specified { @code long } { @code b } .
returns the largest value of the two objects .
returns the value of the two {
returns the value of the { @code int } value in the { @code int } value .
ensures that a { @code } is not null and is not null .
checks that the condition is not met .
checks the type of the given object and returns the casted object .
checks that the given object is a valid object type .
checks if the given boolean is a boolean .
xor :
returns true if the string is a string

returns a lucene { @link } for the given pattern .
returns the specified number of characters .
returns a new prefix that omits the specified prefix of the specified prefix . <p >
returns a suffix of the specified suffix .
returns a new <code > / code > that will be used to create a new <code > / code > .
replace the given string with the given prefix prepended with the given prefix and the given prefix .
splits a string into a list of strings .
returns a comparator that combines the elements of the specified { @link comparable } .
returns a comparator that combines the specified { @link iterable } into a { @link iterable } .
returns a comparator that reverses the comparator .
returns a comparator that can be used to compare the natural ordering of the items in descending order .
returns a comparator that compares { @code comparable } objects with the specified comparator .
returns a new {
returns a joiner with the specified prefix .
returns a new comparer that is a new empty string .
returns a new version of this builder with the given prefix .
returns a new empty string with the given prefix .
returns a new {
joins the given iterable into a single string .
creates a new {
create a {
creates a new { @link linkedhashset } with the specified elements .
creates a new { @link linkedhashset } with the specified elements .
creates a new { @link iterator } with the specified elements .
creates a new instance of { @link } with the specified values .
creates a new instance of { @link } with the specified values .
returns the relation for the given executable link .
handles the exception of the given response .

{
returns the { @link client } instance for the given { @link } .
{
{
get resource from resource path .
get resource from resource resource .
invoke the given request with an instance of the specified resource .
/ * ( non - javadoc )
returns the object for the token .
{
{
{
{
/ *
returns the type of the type parameter for the given type .
convert a {
{
{
<p > gets a data file from a file . < / p >
get a content of a object .
get a content from a { @link } .
returns the biggest candidate point of the given .
finds the best match for the given date and time .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
<p > . < / p >


returns a location of the given location .
get the content of the .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
returns the for the given symbol .
finds the level of the given .
creates a new uri with the given uri uri and uri .
determines whether the given date is a valid .
returns the kontonummer for the given time range .
returns the period of the week of the week of the week .
returns a period of prediction results from the timephased banner time period .
get the content of a .
get a content of a .

returns a string representation of the given class name .

/ * ( non - javadoc )

acquires the given source from the given source .
get the object object of a given type .

{
perform a remote server using the specified name and the specified path .
{
get the configuration for the class
get the config value for the given class .

creates a new iterator that is a class that is a class that is a class that is a class that is a class that is a class that is a class that is a class that is a class that is a class that is a class that is a class that is a class that is a class that is a
{
returns a service that is a service method that is a service class that is a service module or an instance of the given type .
returns the service for the given interface .
returns a service that is assignable to the specified interface . if the given object is not a { @code null } it will be returned .
returns the list of { @link services } objects for the specified type .
gets the module type from the given interface .
acquires the given stream from the stream .
{
get the data from the given byte array .
returns the index of the specified index .
returns a prefix that is the index of the specified prefix .
checks if the given type is a reloadable type .
execute the given method .



specifies that the intersection is less than the specified number of elements .
compare the given {


returns true if the specified is a valid
eats the and of the given


calculates the difference between two .





returns the {
parse the given string and return the result as a string .


settle the given {

/ *


applies the given {

consumes the input .
this method is used to set the value of the <code > / code > property .

applies the given {
/ *
standardizes the given state to the given state .
sets the value of the specified <code > / code > .
compiles a pattern string into a pattern .
compile a locationpath .
returns the for the specified type .
get the value of the specified <code > pdfstring< / code > object .
calculate the color of the


/ *

adjust the of the .
this method is used to set the color of the .
generate a value for a symbol
calculate the value of the {
adjust the color of the and .
print the to the given color .

this method is used to replace the value of the .

advance to the next character in the string .
returns true if the path is a valid js regular expression
/ * this method is used to determine if the input is a valid .

get the value of a number .
initializes the state of the .
/ * ( non - javadoc )
returns the number of characters that are in a single character .
/ * package
returns a set of characters that are in the given character set .
returns a set of set of integers .

/ * private void ( ) { = . ( ) ;

reset the state of the .
returns the state of the state machine .
/ * @suppresswarnings ( ) ( ) { ( )) { ( ) { ( )) { ( )) { ( ) ; } ;
/ * @suppresswarnings ( ) ( ) { ( )) { ( )) { ( )) ; } { } { } { } { } { } { } { } { } { } { } { } {
/ * @suppresswarnings ( ) ( ) { ( )) { ( ) . ( )) { ( new ( )) ; }
/ * @suppresswarnings ( ) ( ) { ( )) { ( ) { . ( )) { ( new ( )) ; } { } { } { } { } { } { } { } { } {
/ * -------------------------------------------------------------------------------
/ *
adjust the value of a { @link } to a value .
ends the state of the specified state .

/ *


/ * -------------------------------------------------------------------------------
/ * -------------------------------------------------------------------------------
/ *
create a js js code chunk for the given state .

/ * ( non - javadoc )
/ * package

/ * package
pushes a new value to the .
combines the results of a single { @link } and { @link } .
cleanup the of the given .
step3 .
step3 .
/ * ( non - javadoc )

returns the parameters for the specified rule .
returns a list of rule resources for the plugin .
/ * package
returns the selected selection rule .
main method .
runs the command line arguments .
returns the error message .
creates a options for the given task .
adds options to the console .
/ * parse options : - - > - > - > - > - > - > - > - > - > - > - > - > - > - > - > - > - > - > -
returns a string representation of the task name .
parse the command line arguments and returns a string that can be used to print out the command line options .
parses the command line arguments .
execute the task .
read properties from the command line .
prints the usage message for the specified print .
returns the home directory for the home directory .
create a plugin classloader for the given classloader .
parses the resource bundle and returns the map of resources that are not in the classpath .
write a geometry to a given geometry .
create a polygon with the given polygon .
returns the set of geopoint that will be used to snap the minimum and maximum of the latlongs ids .
returns the set of points in the bounding box .
check if a point is inside a polygon

returns the uri of the given target uri .


adds a new target path to the path .
remove a pattern from the path .
removes all descendant patterns from the target list .
returns the number of items in the specified page .
adds a new target to the route path .
adds a path to the route path .
adds a new target path to the route path .
removes the given path from the path .
removes the target target element from the target target .
returns whether the given request matches the given path .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the file name for the file name .
get the file name from the store .
returns the organization with the specified portlet name .
returns a list of all children of this list .
compare two entries .
compares two entries .
/ * ( non - javadoc )
returns the preferences for the specified portlet preference .
get all children from a list of children
returns the short description of the string .
sets the last modified time for the last modified time .
loads the tag file and return the appropriate .

<p > . < / p >

parse the xml document from the given file .
add a child node to the list of children .
startelement method to start the start element .
/ * ------------------------------------------------------------
end tag
/ * ======================================================================
/ * ( non - javadoc )
report a sax1 sax1 declaration .
start the namespace prefix and validate the namespace prefix and the namespace prefixes .
ends the prefix and the namespace prefix and the prefix ends with the given prefix .
parse the xml document .
parse the xml description of the css .
add a to the page .
check that the node is a valid .
processes a cdata section and returns the result .
check relativepath against prefixes and check if the uri is not found .
check relativepath against the uri .
creates a saxparser that can be used for xml fragment .
loads a class from the given class .

loads the class data from the file .
wrap a callable .
wrap a callable on a callable .

/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
resolves the function name and the name of the prefix and the prefix and the name of the prefix .
sets the value of the specified character array .
sets the value of the specified <code > / code > object .
{
resolve a variable name .
parses a file from the file .
parse a file from the specified jar file .

parses the xml file and parse it into a .

returns the jsp page for the given file name .

returns the encoding for the given xml file .
get the page encoding from the xml content .
resolves the name of the file to the given filename .
returns whether the jsp page is a sub - tree .
creates a compiler compiler for the specified mode .
returns the { @link inputstream } for the given resource .
get the first location of the given uri .
removes the given <code > / code > .
compiles the compilation of the compilation of the compilation of the compile source .
loads the class from the classpath .
reads the next character in the stream .
reads a character from the input stream .

search for the class hierarchy .
checks if the given class is a reloadable class loader .

reads the header of the stream .
reads the specified byte array into the buffer .
returns the number of bytes available in the specified stream .
closes the underlying stream .

reads a file at specified position .
creates a key from the given string .
this method is called when the operator is created .
builds the { @link } instance .
returns the { @link } for the specified tag .
get the tag file .
parse the given xml path and returns the result .
get the checksum of the given file and return the content of the specified file .
{
validates the channel name and returns a channel name .
skips the next n bytes of the given input stream .
returns the memory usage of the memory usage of the given options .
returns the memory usage of the given options .
reads the specified buffer into the specified buffer .
returns the number of bytes available in the current thread .
seek to the end position .
seek to the block position .
seek to the next seek in the raf .
find the block at the given position in the buffer .
finds the block at the given block position .

scans the given and return the .
generate the for the given .
returns a list of pom version of the given maven artifact .
checks if the given artifact is a valid artifact extension .
returns the value of the property .
update the state of the .

/ * package

reads the contents of the specified byte array into the buffer .
returns the number of available bytes in the current thread .
{
{
reads the next character in the stream .
reads the specified character stream and returns the result .
consumes the given byte buffer to the given byte buffer .
consumes the specified byte at the specified position in the buffer .
returns the location of the specified uri .
scan the classpath for the jar files .
process the css files and .
scan the jar files and extracts the jar files and return it .

scan the path for the given resource .
scan classpath for tlds .
/ * ( non - javadoc )
adds a jsp element to the servlet builder .
get the parent classloader for the current thread .
set the .
returns the time of a time - time - value of the given name .
save the class name to the given class name .
checks that the is valid .
initialize the classpath for the main class .
initializes the security security context .
starts the thread .
called when the thread exits .
runs the {
finds the first matching element .
finds the { @link } for the given name .
finds the { @link } for the given { @code type } .
add a cache to the cache .
{
{
copies the contents of the given stream to the output stream .
copies the given { @code readable } to { @code readable } .
parse a file and return a parse tree .
parse the given attributes .
parse the given attributes attributes and parse attributes from the given xml tree .
parses the attribute value .
parses the name of a name .
parses the value of an attribute .
parses the given string .
processes the file and process the xml file .
parse the page page
parse the rule string and parse the parse tree and parse the parse tree and parse the parse tree and parse the parse tree .
add a list of files to the list of nodes .
<p > . < / p >
parse directive to parse the banner information from the xml file .
parse a document .
parse the tag .
parse the given attribute value .
parse the given variable name and parse it to parse the given node .
parses a comment to start with a comment .
parse a declaration .
parse the xml declaration .
parse a string literal .
parse the string representation of the node .
parse the text into a single node .
parse the xml parser .
parse the given node and parse it into a parse tree .
parse the given node and return the result .
parse the given property node .
parse the given property set .
parses a new body tag .
parse the given node .
parses the body of a template .
parse the body of the given tag and return the body .
parse the servlet parameters .
parse the given node and return it as a string .
parse the given node .
parses the .
parse an action .
parse the given tag and return the value of the tag .
parse the text template .
parse a tree of whitespace .
parses the element and returns the node list .
parses the xml element .
parses the text template template .

parse a tag body .
parses the body of a template .
parse body text .
parse the attributes attributes of the given xml node .
returns the value of the specified type .
get the text attribute for the attribute name .
returns the node that corresponds to the given name .
returns the nodes of the nodes of the node .
add a new parent node to the parent .
returns the list of { @link } objects for the given { @link class } .
adds a attribute to the list of attributes .
add a child node .
returns the value of the specified attribute name or null if no such attribute exists .
returns the attributes of the specified <code > collection< / code >
finds the child node for the given name .
returns the { @code treenode } that contains the children of the given { @code tree } .
returns the child node that matches the given name .
returns the {
returns the alias for the given variable name .
sets the thread to write the status of the {
returns the thread to read the thread .
returns the stream for the given bytearrayoutputstream .
writes a value to the given writer .
writes a string to the writer .
create a dom element .
create a new element with the given name and name .
returns the text of the given element .
write a number of bytes to the stream .
writes a portion of a portion of a portion of a portion of a portion of a portion of a portion of a portion of a portion of a portion of a portion of a portion of a portion of a portion of a portion of a portion of a portion of a portion of a portion of a portion of a portion
writes a portion of a string .
closes the underlying stream .
writes the given writer to the output stream .
sets the writer to close the writer .

create a map from the root node .
returns the parent of the given parent .
registers a new storage with the given key .
stream stream stream .
triggers the model monitor and returns the model that is the same as the .

authenticates the given request against the authenticate .
checks if the given request is a valid resource .
reads a number of bytes from the stream .
finishes this buffer .
creates a new { @link } for the given { @link } .
returns the distance between the given road points in the given slot .

get a value from the metadata
get the value of a property .

writes a file to the server .
get the throwable that is declared in the request .

creates a typed array with the given name and values .
handle a property .

returns the relative path of the request uri .
handles the servlet response .
consume the current thread .
release all the threads .
checks if the given { @code } is a string .
{
finishes the next buffer .
get the exception from the exception stack .
evaluate the xpath expression and return the result as a result .
creates a prefix that is used to configure the smsc prefix .
/ * ( non - javadoc )
parse a tag string into a .
compiles the given file and creates a new one .
load the document path .
remove the file type from the classpath .
main method that starts the program .
set the path to the local path .
/ * ( non - javadoc )
returns a list of all the .
processes the xml file .
scans files in the path and scans the path in the classpath .
returns the next argument in the string .
initialize the classloader for the given class .
find the uri of the path that is the root path of the file .
initialize the system class loader .
remove all the sub - fragment entries that are not already in the stack .
moves the position of the next block at the position position count .
parses the given expression and returns the expression that evaluates to the given expression .
sets the distance to the nearest minimum distance .
returns true if the given string is a string .
checks if the given string is a valid word .
skip the next character .
removes the start and end of the end of the given string .
/ * ------------------------------------------------------------
parses the token and return the token .
checks if the given character is a delimiter .


writes a file to the output stream .
returns true if the file is a root directory .
creates a new { @link } instance .
add a method to the .
returns the string representation of the file .
/ *
sets the compression preset .
sets the size of the data .
sets the number of samples in the given input .
sets the .
sets the mode of the mode .
sets the maximum number of bytes to the specified number of bytes .
sets the match for the .
returns the estimated memory usage of the memory usage of the memory usage of the memory usage in the memory - memory usage .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
called when the error code is closing .
process the output of the specified command line .
parse a message from the ast .
returns the list of { @link } objects that match the given filter .
returns a list of all the available tie - sets for the given group .
sets the prefix for the .
sets the prefix for the resource prefix .
returns a string representation of the given prefix .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a tree node into a tree .
/ * read schema from the document .
reads the schema from the schema and returns the schema .
creates a new eventhandler with the given data .
merges the given { @code } with the given { @code } .
adds a binder to the binder .
initializes the binder with the given arguments .
returns a new scan for the given class .
generate the html for the files .

/ * ( non - javadoc )
gets the array of { @link } s .
puts the specified { @link } into the heap .
returns the byte array with the specified size .
returns the int array with the specified size .
/ * ( non - javadoc )
/ * ( non - javadoc )
crawls to undeploy a directory .
returns a conjunction of {
reads the content of the resource from the given resource uri .
returns the { @link } for the specified tag .
process the url of the .
/ * package
create a tag info file .
validates the page of the given page .
pushes a stream to the output stream .
closes the current state of this queue .
get the encoding of the jar file .
creates a reader for the given reader .
returns the encodinginfo name for a byte array .

/ *
scans the given char and returns the result as a string .
reports a fatal error message .
helper method to create a for a given base and bind a list of { @link } s .
helper method to create a with the given base and offset and qualifier .
fills the given list of { @link } s for the given { @link } .
returns the path to the path .
{
returns the resource as a stream .
returns a set of paths that are not in the path of the path .
log a message with the specified message .
add a servlet servlet .
add a filter to the filter .
updates the filters with the specified filter filter .
filter the specified filter and return the result .
writes a byte array to the underlying stream .
ends the block of block blocks .
flushes the stream to the stream .
writes the data to the stream .
closes the underlying stream .
returns the size of the specified {
returns the memory usage of the memory usage of the memory usage in the given memory - memory usage .
returns a that is a new .
sets the water mark size for the given file .
moves the window to the next position .
fills the window at the given position in the specified array .

finds the match length of the specified number of sequences .
returns the match length of the specified number of sequences .
checks if the given value matches the given key .
moves the position of the specified position in the specified position in this node to the specified position .
recycle this object .
flush the buffer to the buffer .
clear the output stream .
flushes the content of the response .
closes the underlying stream .
writes the specified byte array to the specified buffer .
write a portion of a character .
writes a portion of a portion of a portion of a portion of a portion of a portion of a portion of a portion of a portion of a byte array .
writes a portion of a string .
allocates a char buffer .
acquires a lock lock lock .
called when a line is a line of the specified error message .
called when the error is encountered .
called when a failed error occurred .
resets the state of this buffer to the given buffer .
returns the message as a string .

returns the message code for the given argument .

creates a key - value map .
generates the .
generate the class file .
compiles the sourcecode .
checks if the file is a valid .

inits the compiler .
returns true if the given path is a jar file .
reads a byte array from the input stream .
returns the number of available bytes in the specified stream .
quote the character in the given string .
generates the .

generate the tag handler for the given tag .

dump the package of the package .
/ * ( non - javadoc )
generate code for generating a new .

generate the class for the .
generates the preamble of .
generates the html code for the xml document .
generate the constructor for the class .
append the common control to the output .
generates the .
generate a document .
generate the tag handler for the given tag .
generates the tag tag for the tag attributes .
generates the jawr context for the given tag .
generates the dynamic attribute attribute .
generates a page - scoped comment .
converts a getter name to a getter method name .
converts a getter name to a string name .
reads a properties file and returns the properties .
write the channel to the specified output stream .
replace all the contents of the given array of { @link } s .
validates the xml content of the xml document .
create a new { @link } instance .

release the specified tag .
parse a string literal .
/ * ### =
returns a string representation of the character .
parses a quoted string .
returns the property group .
/ * ( non - javadoc )
checks if the given html path is a sub - path .
prints a comment to the end of the list .
write a string to a string .
print a line to the output .
prints a string to a string .

returns the string expression for the expression .
asserts that the given node is a scope .
checks the attributes of the given type and checks if the attributes are not included in the .
escapes the xml string for xml html entities .

converts the given class to a class name .
returns a string that is expected to be a string literal .
validates that the given expression is a literal value .
get the class name for the given path .

split a path into a string .

returns a string representation of the character in the given character set .
checks if the given key is a valid keyword .
replaces all the xml characters in the given name .
returns the canonical name of the given class .
/ * package
creates a new token with the specified length .
add a property to the map .
writes the xml element to the xml stream .
writes the xml representation of the given {
/ * ( non - javadoc )

returns a set of all keys that are not in the given map .
initializes the servlet builder .

/ * ------------------------------------------------------------
increments the count of the current thread .
/ * ( non - javadoc )
check if the given artifact contains a given resource .
returns the basename of the specified name .
reads the specified byte array starting at offset <code > len< / code > bytes from <code > len< / code > bytes .
returns the number of available bytes in the current thread .
closes the underlying stream .
/ * ( non - javadoc )
returns a map of the
returns a string value for a given key .
puts a new value into the cache .
loads the cache from the cache .
build a list of metrics for the given instancetype .
resolve a number of integers .
serialize a string to a string
write a object to a stream .
inserts the given locator locator to the given locator .
{
returns the specified { @link } for the given type .
convert a map to a map
create a new .
/ * ( non - javadoc )
find the statement for a given locator .
{
schedule a metrics to be executed on the .
schedule a metrics in the database .
reads a number from the given input stream .
write a long value to the output stream .
returns all properties of the map .
creates the container for the container .
{
/ * ( non - javadoc )
updates the for the specified time .
schedule a repetitive poll for the given interval .
returns the next scheduled slot for the specified slot in the slot manager .
called by the () method .
clear the slot for the slot .
/ * ( non - javadoc )
{
{

/ * ( non - javadoc )

lock event .
emits a new event .
returns a list of listener events for this queue .
returns the remote name of the remote remote remote remote name .
append the given {
parses the timestamp of the file .
starts the server .
returns the {
creates a {

compute the minimum and maximum number of points .
helper method to compute the for a given polygon .
returns the { @link } for the given { @link } .
find the statement for the given locator .
returns the value of the specified <code > version< / code > object with the given <code > version< / code > .
formats the header of the given array of headers .
formats a string array into a string .
register metrics for the .
wait until a time is terminated by the specified time .
called by the to perform a lock on the underlying database .
wait until the task is terminated .
parse a string representation of the given string .
get all keys for the given key .
get all keys for the given key .
this method is used to get the for the given .
sets the name of the builder to be used .
handle the start of the event .
add a new pie value to the list .
returns the set of metrics that are in the given metric .
returns the set of all slots for the given shard .
returns a list of tokens that match the given locator .
/ * ( non - javadoc )
find the value of the specified column with the given locator and column family .
returns a table with given column limit and dbids
add a new batch of batch count .
removes a single { @link } from the given { @link } .
selects the result of all the given column family .

returns a new range of the given range of the given range .
constructs a { @link } from a { @link } .
constructs a { @link } from a given time range .
constructs a { @link } from the specified time .
calculates the average value of the two points in the two points .
calculates the for a given circle .
set the time of the server to the specified time .
adds a shard to the shard .
removes the shard from the queue .
returns a list of unique tokens that are not in the given list of tokens .
returns a list of all { @link } s for the given { @link } .
process a single { @link org . apache . gobblin . . } .

returns all hosts that have been registered with this .
returns a list of all that have been set for the given .
returns the {
returns the maximum number of bytes that will be used to determine the specified number of bytes .
serialize a {
returns the for the given query id .
returns the regex for the pattern .
index the url to the endpoint .
returns a {
parses the options from the options list .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
{
{
sets the result of the result .
get the { @link statement } for the given metric .
returns a set of all the metrics that have been removed from the given .
returns a list of all the metrics names of the given query .
returns the {

starts the .
stops the server .
computes the and the number of points in the
computes the for the given feature .
{
{
returns true if the given element is a nominal value .
removes the specified slot locator locator to the locator .
removes the specified slot locator locator to the specified slot locator .
/ * ( non - javadoc )
returns a new range of ranges that will be used to calculate the start of the start time of the time of the given time range .
returns a range of all ranges of the ranges in the range of ranges .
creates a ranges from a range of integers .
{
inserts a { @link } to the given { @link } .
inserts a { @link } into the given locator .
inserts a new column into the given buffer .
increment the metrics for a given tsdb .
{
returns the data points for the given range .
returns a map with the specified range of the given range .
{


checks if the given { @link } is in the { @link } .
inserts a { @code } to the given { @code } .
find a { @link statement } for the given { @code } .
returns a list of metric name for a given database id .
returns a map of metadata of the given locator .
get data from the given type .
returns the metric data for the given range .
returns a map of all the { @link } s for the given { @link view } .
{
returns a new instance of the given type .
checks if the content type is valid for the given { @link contenttype } .
returns true if the cors preflight accept accept headers are not supported .
insert a list of to a queue .
checks if the given is a valid .
increment the delay delay in the .
check if the timer is a valid .
==========================================================================
{
{
returns the socket for the specified server socket .
get the instance of a new instance .

get system property .
checks if the string is a valid java string

returns true if the version is a valid version number .
returns the type of the native port .
start the .
stops the process .
start the background thread .
stop the background thread .
splits this state into a single state .
suspend the current thread .
resume this state .
returns the time - time - time - time - time - time - dated ratio for the current time .
joins the given collection of strings into a single string .
checks the expected version of the expected string .
{
returns a {
returns a list of plugins that have been loaded from the list of plugins .
enables the plugin to the specified plugin .
disable the plugin .

copy a file to the given destination file .
copies the given source file to the given destination file .
{
converts a string to a plugin .
creates a new instance of { @link } .
add a connection to the server .
adds a connection to the server .
connect to the server .
closes the connection .
closes all connections .
sends a message to the .
generate message user

sends all messages to the peer .
gets the for the .
gets the user - defined configuration .
gets the user - defined configuration .
requests that the client will be used for the client .
gets the for the .
gets the status of the .
gets the status of the .
gets the status of the .
gets the .
gets the value of the property .
gets the value of the property .
main method that can be used to write a file to a pdf file .
creates a new instance of .
creates a new { @link } .
main method that processes the xml document .
create a useragent that is a modal - agent - agent .
create a instance .
create a new instance .
creates an image with the given id .
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link email } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
gets the .
sets the value of the <code > / code > object .
sets the value of the element to the specified value .
sets the value of the specified value .
sets the value of the value to the specified value .
gets the value of the set of gauges for the specified instance .
sets the value of the value of the property .
sets the value of the value to be set to the value .
sets the value of the value to be set to the value .
sets the value of the client to be set to the client .
sets the value of the option to the specified value .
sets the value of the template to be set to the specified value .
sets the value of the field to the specified value .
sets the value of the value to be set to the specified value .
requests that the agent id of the user agent will be set to the value of the specified value .
main method .
create a new record .
create a record for a
initialize the and .
write out a list of output stream .
write a {
sets the value of the value of the property .
sets the value of the value of the property .
sets the value of the value of the property .
sets the value of the property .
checks if the given string is numeric .
parse a number of numeric value .
parses a number of numeric formats .
print the number of digits to the given value .
formats the given number of digits in a given string .
sets the value of the value of the property .
creates a new document from the xml document .
create a document to be used for document .
creates a { @code } with the given encoding .
creates the object for the given stylesheet .
<p > get the <code > / code > object . < / p >
sets the value of the specified resource to the specified value .
sets the value of the value of the property .
sets the value of the value of the specified type to the set of values .
requests that the agent will be used to set the value of the specified object .
gets the value of the property .
reads the xml content from the xml stream .
reads the xml document from the given stream .
prints the docerrorreporter print the .
requests that the existing value for this <code > / code > object will be used to generate the set of values .
gets the value of the user - defined configuration .
checks if the document is a document .
create a new { @link } .
/ * ( non - javadoc )
sets the value of the value of the property .
gets the .
gets the .
gets the .
gets the .
gets the uptime .
gets the .
gets the .
gets the value of the property .
requests that the value of the value of the specified date - time value is specified in the set of values .
called by to remove all the elements of the document .
creates a new { @link } .
sets the value of the value of the property .
create a new document from the xml document .
{
sets the value of the value of the property .
returns the country code for the given country name country country country country country country country country name country country country country country country name country country country country country country country name country country country country country country country name country country country country country country name country country country country country name country country country country name country country country country

returns the country code for the given country name country country country country country name country country country country country name country country country country name country country country country country name country country country country country name country country country country country name country country country country country name country country country country country name country country country country country name country

returns the country name for a country name .
returns a name of the country of the given language .
gets the .
sets the value of the property .
sets the category value for the category .
gets the value of the property .
sets the value of the property .
main method that reads the given class and parses it into a directory .
reads the file and writes it into the file .
reads the { @link inputstream } from the given { @link inputstream } .
prints the docerrorreporter .
requests that the value of the specified object is a set of values .
sets the value of the value for the specified value .
gets the .
main method to set the .
creates a .
{
{
called when a cdata element is found .
recursively removes all elements from the given document .
removes all elements from the xml document .
main method to generate a .
gets the content of the content of the content .
returns the names of all fields that are declared in the field .
sets the value of the value of the property .
sets the value of the value of the property .
sets the value of the value of the property .
gets the .
create a .
sets the value of the value for the specified value .
gets the .
sets the value of the property .
reads the xml document from the given stream .
prints the focussed text to be printed .
gets the .
{
prints out the line separator .
returns the value of the specified default value .
parse the csv format .
prints the results of the csv file .
sets the value of the stringvalue to the given value .
sets the value of the value to be set .
reads the xml content from the input stream and writes it to the xml stream .
prints the errors to the list of .
sets the value of the value of the property .
reads the xml content from the input stream and writes it to the xml stream .
prints the print information for the given document .
gets the .
sets the value of the value of the property .
sets the value of the property .
requests that the value of the attribute in the set of attributes set in the value of the <code > / code > field .
sets the value of the property .
sets the value of the specified property . <p >
gets the value of the property .
gets the value of the property .
sets the value of the value for the specified value .
called when the revision is deleted .
{
removes all the variables from the xml document .
recursively removes all child elements from the given parent node .
called by the { @link } to ensure that the given list of elements is empty .
converts the xml document to a list of .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } .
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
main method to set the .
create a from the .
creates a for the
creates a object from the given { @link } .
main method to demonstrate the classifier .
create database database type .
create a new metadata record .
creates a new instance of .
creates a result of the result type .
creates a new row result row .
writes the text to the xml file .
create a document to be used for document .
reads the xml content from the input stream and writes it to the xml stream .
prints the print information for the given document .
gets the .
gets the .
sets the value of the property .
sets the value of the value of the property .
gets the list of email addresses for the email .
gets the .
sets the value of the property .
requests that the value of the attribute in the set of attributes set in the value of the <code > / code > field .
{
called by the to check the .
main method to set the .

writes the xcal document to an output stream .
requests that the client will be used for the client .
requests that the client will be used for the client .
requests that the client will be used for the client .
gets the value of the <code > / code > property .
requests that the value of the value of the property is specified as a set of values .
create a document to be used for document .
gets the .
gets the property .
gets the .
gets the property .
gets the .
main method that reads the nvd cve from the classpath .
reads the xml document from the xml file .
read the xml document from the given stream .
prints the focussed text to the print file .
prints the print information for the given .
gets the value of the propertylist that is used to retrieve the value of the property .
gets the .
sets the value of the specified property .
factory method for creating a new { @link } .
/ * ( non - javadoc )
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value to be set .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .

if the upgrade is a version of the same version then we have to release the version of the version .
converts a set of to .
gets the .
gets the .
gets the .
gets the property .
gets the .
gets the .
gets the value of the property .
gets the .
requests that the value of the value of the specified value will be used .
create a document to be used for document .
main method .
create a record for a
writes a csv file .
requests that the value of the attribute in the set of attributes set in the value of the <code > / code > field .
gets a map of the features of the feature property .
parses the file and parse the file into a { @link bufferedreader } .
prints the icalendar file to the output stream .
prints a record to the output .
write records .
replace the first occurance of a string with the given string separator .
create a document to be used for document .
create a document to be used for document .
parses a { @link } value .
parse a boolean value .

parses the value of a { @link } .
converts a value to a sld orientation value . <p >
parses the currency value .
parses a { @link } value . <p > the value is { @code null } .
parses the given value .
parses a string value .
parses a value type .
print a value to the given value .
prints a value to the given value .



prints the value of the specified { @link } to the given datapoint value .


prints the value of the given uri to the given uri .
converts a { @link long } into a year .
sets the value of the value of the property .
removes all child nodes of a given node .
returns the number of nodes in the given document .
returns the number of nodes in the given tree .
get the root element of the document .
creates a new dom document .
creates a new document with the xml document .
factory method for creating a new document with a xml document .
creates a new { @link document } with the specified { @link document } .
creates a new document with a xml document .
factory method for creating a new { @link } .
factory method for creating a new { @link } .
creates a new { @link } for the given xml document .
creates a new dom document from a file .
returns an xpath expression for the given expression .
evaluates a xpath expression for the given xpath expression .
returns an xpath expression for the given xpath expression .
prints the nodes to the document .
replace the namespace with the given namespace .
replace the namespace with the given namespace .

.
writes a document to the document .
writes a document to the output stream .
writes an xml document to the output stream .
writes a { @link document } to the output stream .
writes a xml representation of the given document to the given writer .

write this document to the xml stream .
convert a xml document to a string representation .
create a document for the document .
called by to remove the current version from the database .
{
visits all the elements of the given document .
/ *
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
sets the value of the value for the value of the value .
main entry point for the .
create a new instance .
creates a new {
creates a { @link } for the given { @link } .
creates a video from the video .
returns a random string .
returns a random string of the length of the specified length .
returns a numeric string that contains the given length .
gets the property .
/ * set the value of the property .
/ * set the value of the property .
gets the for the specified .
sets the value of the value of the property .
gets the .
creates a new document with the given revision .
creates a new document with the given document .
{
sets the value of the field .
sets the value of the specified object to the specified value .
requests that the specified value in the set of properties in the set are set to the specified value .
{
{
fills the elements in the xml document .
processes the specified lucene xml document .
sets the value of the property .
sets the value of the value for the value of the value .
===========================================
obtains the field type fields for the field .
main method to demonstrate the classifier .
create a from the .
create a .
create a .
creates a new { @link } instance .
create a new { @link project } .
create a new
create a new { @link } .
create a new { @link } .
{
{
method to remove all elements of a document .
removes all child elements from the xml document .
called to check the list of available elements .
gets the value of the property .
sets the value of the property .
requests that the value of the value of the specified value is used to convert the value to the specified value .
gets the .
gets the property .
gets the property .
gets the image for the specified type .
main method to set the diagram .
create a for the specified .
create a .
requests that the object is a map that can be used to convert the value of the value to the appropriate date / value pair .
requests that the value of the value of the value of the <code > / code > field be set to the specified value . < / p >
sets the value of the value to be set .
sets the value of the value to be set to the value .
sets the value of the property .
converts the value to a single value .
requests that the status of the property set value of the property set in the set of properties .
gets the .
sets the value of the property .
creates a new lucene document from the xml document .
reads the xml document from the given stream .
prints the focussed text .
sets the value of the property .
requests that the value of the attribute in the set of attributes set in the value of the <code > / code > field .
called by to remove the specified revision .
{
removes all elements from the xml document .
removes all child elements from the list of nodes .
/ * ///////////////////////////////////////////////////////// xml document /////////////////////////////////////////////////////////
/ * ///////////////////////////////////////////////////////// xml document /////////////////////////////////////////////////////////
/ * ///////////////////////////////////////////////////////// xml document /////////////////////////////////////////////////////////
sets the value of the property .
sets the value of the specified resource to the specified value .
create a new { @link } .
{
creates a new xmlreader from the document .
{
requests that the attribute value is rendered .
create a document to be used for document .
sets the value of the property .
requests that the value of the value of the specified object in the set of fields in this list .
reads xml document from the input stream .
prints the print information for the document .
sets the value of the property .
create a record record from a record .
sets the value of the property .
sets the value of the property .
create a document from the input stream .
create a document for the xml document .
create a document document for a xml document .
creates a document .
create a user - defined element with the given name .
gets the .
sets the value of the value for the specified value .
sets the value of the value for the specified value .
reads the xml content from the xml stream .
read the xml content from the input stream .
prints the docerrorreporter print the text .
prints the docerrorreporter print the text .
gets the value of the property .
gets the value of the property .
sets the minimum value for the specified value .
sets the value of the property .
gets the photo for a photo .
reads the xml document from the given stream .
prints the diagnostics to the given print file .
sets the value of the specified value .
sets the value of the specified property .
sets the value of the properties .
/ * package
creates a new { @link } .
creates a new { @link } for the given type .
writes the xml document to the xml document .
creates a new document with the xml document .
called when the document is deleted .
{
copy all elements from a list to a list of .
visits all the elements of the given list of xml elements .
recursively remove all elements from the xml document .
remove all the elements of a document .
creates the list of all elements in the list .
creates a new { @link } .
prints the docerrorreporter for the parser .
create a new document from the given document .
/ * ( non - javadoc )
{
called by the to remove all elements of the list .
/ * ///////////////////////////////////////////////////////// xml document /////////////////////////////////////////////////////////
gets the .
create a new xml document document .
gets the .
gets the .
gets the status of the status code .
sets the value of the property .
requests that the value of the value of the set of values in the set are the same as the value .
gets the .
gets the .
perform a single - byte value .
creates a new { @link } instance .
creates a new { @link } with the specified port .
creates a new instance .
sets the port to zookeeper .
creates a new from the given host .
writes the block to the output stream .
send a message to the given output stream .
read the response .
checks if the given interface implements the given interface .
get the generic type of the given class .
returns the fields of the given class .
get the class name of the given class .
returns the fields of the given class .
returns the name of the method .

returns the constructor of the given class .
returns the method with the given name and arguments .



get all super classes implementing the class hierarchy .

compares two objects .

reads the contents of the url from the given url .
reads a properties file and returns the properties file .
returns a new instance of the source object .
creates a new instance of xmlreader .
returns the { @link } for the given { @code } .
returns the .
generate a key pair pair .
encrypt a string
decrypt a base64 encoded string

decrypt a string using the provided key .
checks if the given string is compatible with the given predicate .
writes a { @link java . io . file } to the given { @link file } .
returns the index of the first character in the list .
reads the specified input stream and returns the result .
sets the bindings to be used in the bindings .
binds the given uri namespace uri to the given uri .
removes the binding prefix from the namespace prefixes .

returns the classes of the class with the given class name .
checks if the given class implements the interface interface .
parses the mime type of the given mime type .
parses the mime types of the given list of { @link namevaluepair namevaluepairs } .
sorts the list of { @link } s to match the given { @code list } .
reads the content of the input stream .
returns the validation mode for the given input stream .
checks if the given content is a tag tag .
/ * ( non - javadoc )
consumes the next line from the specified line .
/ *





returns the time - time for the given time string .



converts a date string to a date .
converts a date string to a date .
przez wywołania przez wywołania .


returns the hour - day - of - date - dd hh : mm : ss :
get the time - time from the current time .
returns the user date string as a { @link date } .
returns the for the specified monthly string .







checks if the specified date is a holiday .
get the week of the week in the calendar .
get the week of a week .
get the week of a gantt designer .
get the number of days in the mpp file .

returns a random string from the given byte array .

initializes the specified location and returns a new logging location .
initializes the logging file .
{
resolve the namespace uri for the given namespace name .
add { @code iterator } iterators to this { @link iterator } .
send a email of mail message
process the given collection of .
handles a list of messages .
adds the class to the class .
adds the specified interface to the class .


build a {


add a condition to this object .
returns a new condition with the given code and returns the result .




returns all classes in the classpath .
get the class of the class loader .
returns all classes in the given package .
returns all classes in the package that match the supplied package name .
scans the classpath for packages that match the given package name .



returns a {
returns the { @link } for the given { @link } .
print the thread dump of the stack trace .
get the singleton instance of this
add a { @link option } to the { @link option } .
<p > adds a string option to the form of the form : < / p > <ul > <li > <p > <code > value< / code > . < / p >
<p > adds a string value to the form of <code > name< / code > . < / p >
<p > adds a { @link } to the value of the <code > name< / code > option . < / p >
<p > adds a { @link } to the value of the <code > name< / code > option . < / p >
<p > adds a { @link } to the value of the <code > name< / code > property . < / p >
parse the given string and return the result of the given parse .
opens the url with the specified url .
prints the stack trace of the stack trace .
build a string stack trace .
get the stack trace of the given exception .
returns the { @link } for the given class .



returns the fields of the given class .
compare two strings .
returns a hashcode code for a string array .
returns the value of the fist - line property .
converts a string to a string
returns a string representation of the specified reader .
create a new instance of this class .
create a new instance of the specified class .
returns a decorated instance of the class .
reads the content of the input stream and returns the result as a byte .
get the target object from the target object .

converts a date string to a string .
sets the value of the specified value .
generates a file with the given name .
add a package package to the package .
scans the classpath for classes in the classpath .
returns true if the given file is within the given file .

converts the specified { @link bitmatrix } to a { @link bitmatrix }
decode a file .
/ * ( non - javadoc )
called when the is idle .
reads the {
invoke the given method with the given arguments .
invoke the specified method with the given arguments .


increment the next time in the calendar .
deletes all files in the given directory .
copy a file to a file .
copies all files in the specified source file to a destination file .
check if the collection is not empty .
process all properties in the given collection of properties .
{
process the given property map .
returns the proxy of a method invocation .
creates a proxy class for the given name .
returns the json encoding for the given character .
checks if the given method is a public method .
set the target object to be used for the target object .
/ * ------------------------------------------------------------
resolves the class name .
finds the method that matches the given method name .
invoke the method on the target object .
returns the difference of the given class .
converts a string to a string .
converts a byte array to a hex string .
get the file type of the file .
serialize a object to a byte array .
deserializes a byte array into a byte array .
prints the stack trace of the given object to the given object .
converts the given object to a string .
reads the content of the specified stream .
checks if the string is a string .

returns the elements of the given element .
returns the elements of the element in the child element .
returns the child element for the given element name .
returns the value of the element in the child element .
returns the elements of the given element .
returns a text value for a given element .
returns true if the supplied { @link node } is a { @code string } .
returns true if the node is a qualified name .
returns true if the given node contains a given name .
renders the header value of the cell .
renders the content of the content of the rendered csv with the given model .
<p > removes trailing trailing spaces . < / p >
append a number of spaces to the given string .
converts a string into a string .
convert a string to a string .
get the singleton instance of this instance .
test if the specified string is empty .
adds a list of objects to the list of objects in the list .
returns the number of occurrences of the given object .


adds a parameter to the request .
adds a value to the url .
returns the char of the specified character .
returns the paths of all methods in the given package .
/ * ( non - javadoc )
add a new entry to the list of threads .
notifies the thread that the timerhandle is ready to be stopped .
check if the file is a valid file size .
get mime type from file .

returns the file name for the url .
reads the file from the input stream .
returns the url of the file .
reads the file from the given inputstream and returns the file .
reads a file from the file .
checks if the file is a file .
reads a byte array from the input stream .
reads a file from the file .
writes a byte array to the file .
write a file to a file .
serialize a file to a file .
resolves the given text and returns the result .
finds the package name of the package .
check that the package name is a package - import .
check that the class is not found .
finds all interfaces that match the given interface .
checks that the given class is a valid interface .

check the status of the message .
check that the annotations is not found .
get the sha1 from the given registry .
convert a string representation of a string representation of a object to a string .
main method .

sets the { @link } to be used for the { @link } .
notifies all registered {

returns the name of the qualified name of the given name .
start the namespace prefixes and namespace prefixes .
{
add a callback to the callback .
notifies the completion of the result .
reports an exception to the given throwable .
加密

returns a copy of the url with the specified path .
returns a zip file with the given path separator .
returns the extension of the specified filename .
returns the default file name for the file name .
<p > . < / p >
read a file from the input stream .
checks if the passed file is a valid file .
reads a byte from the file .
remove a line from the file .
formats the given { @code int } and { @code } to the specified { @code } .
decodes the specified source offset and returns the resulting byte array .
generate a byte array .
returns the time bytes of this time .
generate a code chunk representing a byte array .
returns the minimum number of seconds for the given number of seconds .
parse the given tree .
get the path for a given node .
returns the list of all the files in the list .
returns the files that match the given file .
list files in the given directory .

<pre > {
sets the { @link } to be used for the { @link } .
add a { @link } to the { @link } .
returns a map of all the { @link } objects .
returns true if the current thread is a valid
creates a list of namespaces from the namespace uri .
creates a jackson mapper for the given class .


decrypt data from the specified byte array into base64 format .
add a class to the class .
returns true if the given file is a directory .
create a appender for the given appender .
checks if the given text is a valid text .
gets the text color of the specified { @code } .
sets the values of the data set .
returns the color of the dividers and the color of the specified position .
sets the text size of the text .
returns the bounds of the specified element in the range of the specified position .
removes trailing path separators .
main method .
get the current user s properties file .
get the names of the property .
execute the specified keyword and returns the json string .

get the keyword for the specified keyword .
returns the language documentation for the specified keyword .
main method that starts the .

adds a library to the library .
adds a library to the library .
stops the server and wait until the server is stopped .
start the server .

removes prefixes from the classpath .
convert a file to a file .
convert a file to a json string .
convert a json string to a json string .
convert the properties to a json formatted string
convert a map of properties to a json string .
convert a map of properties to json string .
convert a map of properties to a map of properties .
convert a { @link properties } to a json string .
sets the color of the background .
sets the color state of the colorholder .
this method initializes
calculates the shadow for the specified shadow .
returns a builder for {
returns a {
retrieves the revocation certificate for the given certificate .
returns a builder for {
execute the mojo .
process attributes of a string .
this method is called to determine if the files are not included in the file .
replace placeholders in a template variable .
process the given list of html files .
returns the title of the text .
adds a title to the html page .
replace the variables with the given variables .
updates the path relative to the given folder . <p >
copy all files from the directory to the specified directory .

checks if the path is a valid path .
inflates the view for the given position .
fades the animation and hide the animation .
fades the animation and hide the animation .
calculates the percentage of the percentage of the specified percentage .
helper method to calculate the number of .

launch the activity with the given activity .
get the list of .
get the list of movie pages .
sets the timeout of the connection .
sets the date format for this date format .
serialize a string into a map .
deserialize a response to a json object .
download a file from the file .

build a client client .
create a new access control entity access control for the specified entity .
update data model .
create a export assembly .
get the list of files in the specified data .
get the state of the state of this property .
set the host to use for the host .
sets the client credentials for the client .
/ * ( non - javadoc )
get params of parameters
list bookmarks .
{
{
merges the graph of the graph into the graph .
add permissions to the current user .
writes the permissions of the graph to the specified permissions .
adds a graph operator to the graph .
close the stream .
execute a select statement .
add a node to the tree .
create a plannode graph graph from the given .
creates a dataset graph for a given graph and password .
{
{
{
{
set the path to the path .
{
execute the command with a command .
/ * ( non - javadoc )

resizes the given { @link } to the given { @link } .
set the specified point to the specified range .
sets the value of the specified value .
whitelist the vip list of all the {
sets the specified color for the specified font .
draws a text text with the specified text and offset .
returns the image source for the specified chrono file .
adds a file to the file .
sets the quality of the quality query .
returns a { @code null } value for the given { @code name } .
sets the http response .
sets the value of the counter to be used .
parse the arguments for a single string .
prints the usage of the given output stream .


creates a directory recursively .
execute the given url and executes the specified { @link } .
execute the given url and executes the specified { @link } .
executes the given file .
{
sets the current index .
execute the given preparedstatement on the current thread .



returns true if the given class is a valid dn .
/ * ( non - javadoc )
checks if the input stream is a drag .
{
sorts the specified list of rectangles sorted by the specified { @link } .
caret
creates a proxy for the specified class .
render template .
returns the file name for the given number of the file .
returns true if the specified mouse event is inside the mouse of the mouse event .
filter the intersection of a given element .
{
{
<p > . < / p >
<p > . < / p >
{
send a message to the server .
polls the queue and returns the result of the message .
{
executes the given message .
get the manifest version of the jar file .
find the executable executable for the given name .
finds a file with the given name .
finds the executable file for the given name .
returns the executable executable executable for the given name .
checks if the given name is a valid target name .
loads the library s native library .
finds the file s file name .
checks if the file is a file .
finds the file at the given location .

{
/ * ( non - javadoc )
creates a new instance of the given log entry .
create a new instance of the given object .
log a {
log a message with the trace level and the default message .
log a message with the trace level and trace .
log a message with the trace level and trace level .
log a { @link string } with the specified message .
log a message with the specified trace data .
log a { @link string } with the specified { @link string message } formatted with the given { @link string message } formatted with the given { @link string message } formatted with the given { @link string message } formatted with the given { @link string message } formatted with the given { @link string message } formatted with the given
log a consumer .
log a message with the trace level and the default message .
log a message with the throwable and log .
log a message with the specified { @link string } .
{
log a { @link string } with a { @link string } .
log a { @link string } with the specified { @link string } .
log a message with the specified consumer .
log info message with the specified message .
log a message with the specified name and the default value .
log an { @link string } with the specified message .
{
{
{
log a { @link string } with { @link } .
log a message with the given consumer .
log a message with the specified message .
sends a message to the specified event .
sends a { @link throwable } to the specified { @code string } .
{
logs a string with the specified event .
{
log a warning message with the specified { @link } .
log a new consumer .
log an error message with the specified error log message .
log an error message with the specified error log message .
log an error message with the specified error message .
log a message with the specified error message .
log an error message with the specified error message .
log a { @link string } with the specified { @link string message } formatted with the given { @link string string } with the specified { @link string message } formatted with the given { @link string string } .
log a { @link } with the given log message .
log a log event .
create a collection of keys with the given collection of keys and size .
create a collection of values from the given collection of objects .
creates a {
creates a mutable array with the specified values .
check if the given array contains the specified values .
returns the number of queued bytes in the given array .
serialize a messageevent to a string .
serialize a messageevent to a string .
add a to the pipeline .
<p > . < / p >
log a {

write a key - value pair to the jsongenerator .
write a stringified generator to the specified json object .
serialize a object into a .
create a context event for the given context and the given context .
checks if the given object is a type .
returns a logger instance for the given class .

returns a logger with the specified name .


enables / disables the .
sets the current render policy .
creates a context with the given value .
{
checks if the marker is an event marker .
checks if the passed marker is a marker .




returns true if marker marker markers .

serialize a string to a string .
builds the format string for the given name .
escapes the values of the array and replace all values in the array .
creates a new { @link } with the specified name and the default value .
creates a new context for the given event .
creates a context context with the given context and values .
returns the message for the message .
serialize the specified pojo into the given { @link } .
serialize a messageevent into a json string .
get the first of the given event .
serialize a messageevent to a json string .
serialize a string to a string
creates a new context for the given { @link } .
creates a context with the given context and the given { @link } .
encode the given value to the given { @link string } .
encode the given {
encode the value to the given {
encode a string to a string .
encode a string to a stringbuilder .

/ * ( non - javadoc )
initializes the .
/ * ( non - javadoc )
checks that the given array of positions is not found .
opens the .
counts the given { @code count } with the given { @code count } .
initializes the applicationcontext
registers a { @link } with the specified { @link } .
registers the given serializer .

save the value of the current object to the given object .







sets the specified row to the specified column .

saves the specified attributes to the specified map .

{
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )

{
returns the number of digits in the string representation .
{
/ * ( non - javadoc )

stores the given { @link string } into the { @link } .
sets the .

returns the { @link } for the given { @link } .



called when a tab is pressed .
this method is used to set the value of the tab - page .
export the output stream to the output stream .
save the current to the output .
called by the main thread to submit the .
/ * ( non - javadoc )
get the current configuration sheet .
reads the object from the stream .
{
{
returns the locale for the given component .
returns the content of the current { @link } .
returns the cell cell .

returns the validation handler .
returns the chart value of the chart .
creates a shared {
get the number of rows in the given input stream .



returns a list of all the rows in the list .
converts a list of { @link } into a list of rows .
/ *

build the dynamic row row .

returns whether the given value is a positive integer .
get the from the .

returns the color for the given .


returns the composited - of the given .

/ *
returns the ratio of the given index .
convert a color to a color
returns the index of the string .


find the name of the component .
processes the property .
returns the method matching the given type .
sets the property name to the given property .
get the value of the specified property .
method .





get the cell value from the cell .
creates a that is a .
returns the title for the radar .
sets the magnetic coordinate of the given chart .
creates a chart with a given chart .

creates a trend generator for the chart data .
returns a new chart with the given data .
set style .

sets the color bar .
creates a dataset from the data set .

get the id of the given .


transforms a {
get the full name of a row .
build the macro .


returns a list containing all the mappings in the given configuration .
sets the value of the <code > / code > property .
sets the best level of the .
sets the number of column numbers .
sets the name of the .


split a list of mappings into a single map .
returns a list of all the children of the given list of { @link } s .
find the item at the given index in the list .

checks if the specified data is a row .
checks if the given value is a row .
returns the full name of the command line .






build the configuration for the given configuration .








/ * ( non - javadoc )
sets the value of the specified child to the given command .
returns true if the command line is a command line .




processes the method line .



builds a map of all the command line options .

sets the footer of the .
sets the body of the .
sets the .
adds a new row to the builder .

remove all the ranges from the map

returns the command line arguments for the given command line .
insert a value into the list .
remove the given command from the list .
this method will be called when the data is found in the context .
adds the given range to the list of .

insert a template into the specified .
evaluates the value of the expression .


returns true if the given string is a valid user name .
evaluates the expression and returns the result as a string .

evaluates the script expression and returns true if the script is not a valid expression .



removes all rows from the specified chrono list .
loads the cell from the list of cells in the specified column .
render the chart .

/ * ( non - javadoc )





sets the value of the specified cell .
sets the value of the specified cell to the given value .
sets the value of the specified cell to the given value .
sets the value of the specified cell to the specified value .
sets the value of the specified value .
copies the specified source into a { @link } .


copies the given cell value from the given cell .

clones the given source and returns a new comment .
create a new
create a new .





{ inheritdoc } .

get the key for the cell key column value .

get row from the target row
get the number of rows in the given configuration .
get the row row row from the row .




get the cell value for the given cell .
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the current context name .
evaluates the expression against the expression .
evaluates the expression utilizing the expression .
/ * ( non - javadoc )
adds a row to the row .
remove a row row from the row .
merges the { @link } into a { @link map } .


converts the css style to a css style - style notation .




returns the {
returns the id of the child node in the given node .
writes the object to the output stream .

{
builds the initial data structure from the given object .
saves the data to the .
called by the to run the .

sets the geographic cell for a given cell .
get the cell cell with the specified cell .
restore the data context .

checks if the current user is a .
process the .

sets the first row of the first row of the first row of the row .

builds a list of .
build the list of cells in the list .
build the cells .


writes the serialization data to the serialization .
reads the object from the stream .





set the map .




generate a style for the style .
generate a style style for a gantt style .

adds a new cell to the map .
<p > sets the specified attributes for the specified cell . < / p >


returns the pattern for the given expression .
this methods generates the html code of the menu . <p >
returns the chart content of the current theme .
/ * ( non - javadoc )



get the font color of the font .
returns the font font font font font font font size .



get the horizontal alignment of the cell .



sets the property .




returns a set of paths for the path .
returns the value of the given resource as a string .
evaluates the expression coercion to coerce the expression to the expression .
removes a prefix prefix from the path prefix .
returns true if the input is a string literal .
<p > . < / p >
evaluates the expression against the expected expression and returns the result as a string .
evaluates the expression to evaluate against the expected expression .

rounds a value to the specified value .
returns the type of the tab .
returns the tab style for the tab tab . <p >
returns the default value for the given pattern .
returns the decimal separator separator for the specified locale .
returns the default locale for the specified locale .
sets the value of the <code > / code > property .


adds a list of markers to the list of children .
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > checks if the given string is a valid command . < / p >
<p > checks if the specified string is a valid string . < / p >
<p > checks if the string contains a valid <code > string< / code > that contains the specified string . < / p >
<p > checks if the given string is a javascript method . < / p >

widget attributes .


returns the string for the given comment .
finds the position of the given string .
parse the command - level string to extract the attributes from the map .
parses the input input .
validates the attributes of the given .
extract the attributes attributes from the given attribute .



process the attributes of the given tag .
/ * private void ( pagecontext pagecontext pagecontext ) {

finds the first occurrence of the specified string in the specified string .
remove a substring from the given string .




remove the cell name from the database .
convert a string to a long integer .

<p > . < / p >
converts pixels to pixels .
converts a { @code planar } to a { @code bufferedimage } .

parse a date string from the given string .

returns true if the given character is a valid character .
sets the property to be used for the property in the given property .

returns true if the specified range of the given range is within the specified range .


removes the row column from the row .
removes the cell from the row and row .
returns the column widths of the given sheet .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
process event .







check if the current page is a valid page .


method to set the value of the <code > / code > to the <code > action< / code > and the <code > action< / code > and the <code > action< / code > and <code > uicolumn< / code > . < / p >
performs the actual search .
update the grid row .
set the view to be used for the view .

clear the template for the panels


fills the list of columns in the list of columns .

returns the width of the style of the cell .


clear the current and clear the current state .
{
creates a new workbook with the specified {
initializes the tabs .
this method is called by the gui to create the data .
refreshes the data for the current user .
refreshes the row data row .
refreshes the cell data for a row .
find the index of the specified index in the specified index .
load a work work in the table .
prepare the cache for a specific tab .
sets the page table .
saves the current to the view .

loads the body of the content of the specified data set .

refreshes the specified data .
processes the and .
create a dynamic columns .
add a new row to the list of .

sets the status of the status .
checks if the given resource is a valid .

parse a string representation of a { @link } .
parses the given string and returns the result as a string .
/ * ( non - javadoc )
returns whether the given dependency is compatible with the given dependency .
determine the binding of the given bindings .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a new binding to the list .
returns a { @code } instance for the given macro .
returns a new { @code } instance .
/ * private methods
returns a {


returns the { @link } annotation for the given type .

returns true if the given class is a class .
returns a { @code } which is equivalent to { @code } .
returns a constructor that matches the given type .
compares two texts to compare two strings lexicographically .
returns a new instance of { @code nullable } if the specified value is { @code null } .
returns the root path for the root element .
returns a { @code } that is equivalent to { @code } .
writes the input stream to the output stream .
writes a long value to the specified writer .
writes a string to a writer .
send a { @link } .
writes the specified buffer to the buffer .
/ * ( non - javadoc )
sets the tag .
add a binary binary content to the uri .
adds binary content to contenttype .
adds a bitmap to the file .
adds a file descriptor to the given file name .
removes the parameter from the given name .
adds a header to the response .
clears all the values of the current thread .
{
called when the current stop is stopped .
bind the bind to the bind .
unbind the given data .
notifies the listener that the listener is being destroyed .
store the to the file .
adds a new url to the url .
add a new image to the url .
build the uri builder for a single builder .
creates a new { @link } with the given charset and stream name .
reads a string from the stream .
transfers data from the input stream into the specified output stream .
reads the input stream from the input stream .
get inputstream from inputstream .
get the inputstream from the given inputstream .
checks that the given name is not valid .
/ * ( non - javadoc )
/ * ( non - javadoc )
closes the underlying input stream .
reads the next byte from the stream .
reads the specified byte array starting at the specified offset .
resets the stringreader .
{
send a start start end of the end of the stream .
send a header to the output stream .
send the content type header .
/ * ( non - javadoc )
send a header to the output stream .
send an end - end marker .
send a {
returns the length of the header of the stream .
send a string to a string .

checks if the given redirect uri is redirected to the url .
sends a {
sets the header of the response header .
sets the date / time header to the given file .
sets the content type header .
closes the channel .
/ * ( non - javadoc )
/ * ( non - javadoc )
installs the specified version of the file .
ensure that the directory is in the directory .
/ * ( non - javadoc )
creates a new input stream that is the same as the input stream .
reset the bitmap .
create a new instance of the ssl engine .
validate pgp keystore
scales the { @link } with the specified type .
sets the scale type .
start the .
stop the listener .
gets the .
disconnect the connection to the given connection .
bind the bind to the bind .
unbind the registered .
notifies the listener that the listener is actually a listener .
sends the { @code } to the underlying websocket handler .
performs a response on the response body .
{
waits for the specified resource to be executed .
add a new { @link } to the { @link } .
removes the target element from the list of all the { @link } s .
sets the image to be used for the specified image .
sets the { @link } to be used for the { @code } .
sets the text text .
sets the text to be displayed in the text view .
hide the keyboard text view .
show the keyboard text view .
sets the text to the screen .
returns the number width in pixels in pixels .
finds the best view for the view .
finds the best activity with the given id .
handles the exception of the given handler .
this method is used to read a position in the buffer .
sets the limit of the limit .
resets the current state of the token .
skip the specified number of bytes in the specified range .
clears the cache for the given url .
renders a textview .
called when a view is a thumbnail of the specified view .
creates a new { @link } with the given { @link } .
sets the image to the given image .
{
starts the specified .
performs a bitmap with the specified url .
returns the model type for the given type .
releases the buffer to the specified buffer .
adds the given url to the request .
opens the connection .
add a request parameter to the request .
open the connection to the server .
get the md5 md5 digest of the given string .
checks whether the intent is available in the intent .
generates a multipart - coded representation of the multipart request .
returns the string identifying the given
returns the string identifying the given
checks if the given result is a valid .
sets the vector of the vector values .
calculate the vector of sparse vector in a vector .
set row pivoting to a column family .
get matrix factors
sets the vector of the data store .
returns a vector of data in the given stream .
returns a coefficient with the given row indices .
returns a matrix that can be used to compute the row values for the specified row and column .
<pre > nvgraph a to a . < / pre >
<pre > nvgraph a to a . < / pre >
<pre > nvgraph a to a . < / pre >
<pre > nvgraph a to a . < / pre >
<pre > : hamming - 1 for < / p >
<pre > : ( ) . < / pre >
<pre > : ( ) . < / pre >
<pre > : ( ) . < / pre >
<pre > : ( ) . < / pre >
<pre > : ( ) . < / pre >
<pre > import a ( b ) a ( inverse ) ( x fn ) from a given vector .
<pre > nvgraph a to a . < / pre >
<pre > nvgraph a to a . < / pre >
<pre > nvgraph a to a . < / pre >
<pre > nvgraph a to a . < / pre >
<pre > nvgraph a to a . < / pre >
<pre > nvgraph a to a . < / pre >
<pre > nvgraph a to a . < / pre >
<pre > nvgraph a to a . < / pre >
<pre > nvgraph a to a . < / pre >
<pre > nvgraph a to a . < / pre >
<pre > nvgraph a to a . < / pre >
<pre > : ( ) . < / pre >
<pre > : ( ) . < / pre >
<pre > : ( ) . < / pre >
<pre > : ( ) . < / pre >
<pre > : ( ) . < / pre >
<pre > : ( ) . < / pre >
<pre > import a to a native pointer object .
<pre > import a to a native pointer object .
<pre > import a to a native pointer object .
<pre > import a to a native pointer object .
<pre > : ( ) . < / pre >
<pre > : ( ) . < / pre >
/ * package private
/ * package private
function to tranform a a object into a binary buffer .

<pre > cumemallocmanaged < / p >
compute the vector vector of a vector b .
calculate the vector of the length of the given vector of operands .
returns a matrix that can be used to compute the matrix multiplication .
returns the matrix with the specified number of columns .
compute the vector vector of a vector of .
calculate the vector of a vector of .
returns a matrix that can be used to compute the matrix multiplication .
returns the matrix with the specified number of columns .
/ * [ deutsch ] <p > bestimmt die angegebene ( ) . < / p >

/ * [ deutsch ] <p > bestimmt die angegebene ( ) . < / p >

packs a sparse exponent in a linear n - d ( n - n )
packs a sparse exponent in a linear n - d ( n - n )
compute the for a given exponent .
/ * [ deutsch ] <p > bestimmt die angegebene . < / p >
/ * [ deutsch ] <p > bestimmt die angegebene ( ) . < / p >
compute the for a sparse vector x y z .
compute the for a given exponent .
/ * [ deutsch ] <p > bestimmt die angegebene betrag . < / p >
sets the host and ipv6 .
/ * [ deutsch ] <p > bestimmt die angegebene . < / p >
/ * [ deutsch ] <p > bestimmt die angegebene ( ) . < / p >
/ * [ deutsch ] <p > eine . < / p >
/ * [ deutsch ] <p > bestimmt die angegebene ( ) . < / p >
/ * [ deutsch ] <p > bestimmt die angegebene ( ) . < / p >
/ * [ deutsch ] <p > liefert eine . < / p >
sets the .
/ * [ deutsch ] <p > bestimmt die angegebene ( ) . < / p >
/ * [ deutsch ] <p > bestimmt die angegebene ( ) . < / p >
/ * [ deutsch ] <p > bestimmt die angegebene . < / p >
/ * [ deutsch ] <p > bestimmt die angegebene ( ) . < / p >
/ * [ deutsch ] <p > bestimmt die angegebene ( ) . < / p >
returns the complex number of for a given exponent .
returns the complex number of for a given exponent .
packs a sparse exponent in a linear n - d ( n - n )
packs a sparse exponent in a linear n - d ( n - n )
compute the for a given exponent .
compute the for a given exponent .
/ * [ deutsch ] <p > eine . < / p >
compute the complex number for the given 2d y and x y z .
compute the complex number for the given 2d y and x y z .
/ * [ deutsch ] <p > liefert eine . < / p >
/ * [ deutsch ] <p > bestimmt die differenz zwischen ( ) . < / p >
compute the regularized - 1 ( p - p ) of a coefficient n - th value .
sets the .
/ * [ deutsch ] <p > eine neue betrag . < / p >
/ * [ deutsch ] <p > bestimmt die angegebene ( ) . < / p >
packs a sparse exponent in a linear n - d ( n - n )
packs a sparse exponent in a linear n - d ( n - n )
compute the regularized - 1 ( p - p ) of a coefficient n - th inverse of the input function .
a sparse matrix in csc order by a problem .
performs a rotation on a sparse matrix in csc ( sparse ) - ( x y ) - beta * x + beta * x y * z * x * y * z * x * y * z * x * y * z * z * z * z * z * z * z * z * z *
multiply a rotation matrix to a sparse matrix
multiply a four - op ( s ) from a given vector .
compute the reciprocal of the matrix .


multiply a four - op ( a - a - alpha ) a * x y z * x + y * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z
multiply a rotation matrix to a sparse matrix
multiply a four alpha value of a b ( x y z )
compute the elimination of tridiagonal perplexity for a sparse matrix .
compute the elimination of tridiagonal perplexity for a sparse matrix .
perform a single - step - step to a single element .
perform a single - step - step to a single element .
compute the inverted for a sparse matrix .
compute the inverted for a sparse matrix .
compute the inverted for a sparse matrix .
<p > a a complex number with a single numerical part of a complex number . < / p >
compute the elimination of tridiagonal perplexity for a sparse matrix .
compute the elimination of tridiagonal perplexity for a sparse matrix .
multiply a * x * y * x * y * z * x * y * z + &beta * x * y * z + &beta * x * y * z + &beta * x * y * z + &beta * x * y * z + &beta * x * y * z + &beta * x *
multiply a linear part of a given exponent .
<p > performs a complex multiplication ( dot product ) of a complex number in a complex number . < / p >
perform a single - step - step to a single element .
perform a single - step - step to a single element .
<p > performs a complex multiplication ( dot product ) of a complex number in a single - line . < / p >
<p > a a complex number in a sparse matrix .
multiply a * x * y * x * y * z * x * y * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z *
multiply a * x * y * x * y * z * x * y * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z *
compute the inverted for a sparse matrix .
compute the elimination of tridiagonal perplexity for a sparse matrix .
perform a single - step - step to a single element .
compute the inverted for a sparse matrix .
compute the elimination of tridiagonal perplexity for a sparse matrix .
perform a single - step - step to a single element .
multiply a four alpha value of a b and c + alpha * x y z and alpha * x y z and alpha * x + y .
multiply a four alpha value of a b and c + alpha * x y z and alpha * x y z and alpha * x + y .
multiply a rotation matrix to a sparse matrix

<p > performs a linear transformation on the left - and right of the right - operand . < / p >
multiply a * x y z * x y * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z
function to store a single - dimensional double array with a alpha value of the
function to store a single row with a number of digits .
function to store a single row with a value
function to store a single inverse - representation of a matrix .
function to compute the gradient for a sparse matrix
function to compute the gradient for a sparse matrix
adds a new complex number to a given complex number .
power ( a * b ) a * b where x is a b c c d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d
power ( a * b ) a * b where x is a b c c d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d
power ( a - b ) a * x ( b ) where ( p ( x ) = a * b ) * ( i * ) * ( p ) g h = alpha * f * beta * > ( > i< / font / > ) .
function to store a single row with a value
power ( a * b ) of a complex number with a number of operands and a number of operands and a number of operands and a number of operands and a number of 1 - 1 2 and second is computed .
function to compute the integral of a complex number with a number of operands and a number of operands .
power of two matrices .
power of two matrices .
compute the regularized - 1 ( p - p ) of a coefficient n - th inverse of the input function .
/ * [ deutsch ] <p > bestimmt die differenz ; . < / p >
/ * [ deutsch ] <p > bestimmt die angegebene ( ) . < / p >
compute the regularized - 1 ( x y ) - vector value .
compute the regularized - 1 ( p - p ) of a coefficient n - th value .
/ * [ deutsch ] <p > bestimmt die differenz zwischen angegebenen zeitpunkt . < / p >
sets the host and ipv6 .
/ * [ deutsch ] <p > bestimmt die differenz zwischen ( ) . < / p >
/ * [ deutsch ] <p > bestimmt die angegebene ( ) . < / p >
packs a sparse exponent in a linear n - d ( n - n )
packs a sparse exponent in a linear n - d ( n - n )
performs a rotation matrix for a sparse matrix in a normal normal ( x y ) - ( x y ) - ( x y ) - ( x y ) - beta * x + beta * x y * z * x * y * z * x * y * z * x * y * z * x *
sparse conjugate
multiply a rotation matrix to a sparse matrix
compute the alpha * * x * y * x * y * x * y * z * x * y * z x * y * z x * y z x * y z .


compute the inverted for a sparse matrix .
compute the inverted for a sparse matrix .
compute the elimination of tridiagonal perplexity for a sparse matrix .
perform a single - step - step to a single element .
perform a single - step - step to a single element .
compute the elimination of tridiagonal perplexity for a sparse matrix .
multiply a four - op ( a - a - a - a - unit ) with a value of x y z and a 4x4 value .
multiply a vector of n m m n - multiply ( where n ) is the beta value of the y - z - axis .
compute the beta value of a matrix .
function to compute the gradient for a sparse matrix
power of two matrices .
function to compute the gradient for a sparse matrix
function to store a single row with a number of digits .
power ( a * b ) a * b where x ( y ) - ( ( op ) fn ( a * b ) * ( i * ) * ( fn ) i * t * t * t * b * c + beta * ( * ) * ( ( fn ) * ) ? ( (
function multiply ( p ) g ( n ) beta pivoting ( s )
power ( a b ) a a b c g d ( a ) a ( x ) c * b ( x y ) - ( p ) beta ( x ) ( x ) fn ( a ) ( x ) = a * b c + g ( d ) ( x ) fn ( i * t ) *
power ( a b ) a a b c g d ( a ) a ( b ) ( x y ) - ( p ) - > ( ) - ( p ) g : ( > > > ) ( p ) - > ( ) * ( p ) - >
compute a * cross - part of the linear matrix .
multiply a rotation matrix to a sparse matrix

<p > multiply a point of a complex number in the matrix . < / p >
multiply a * x y z * x * y * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z *
function to store a single inverse - symm variable with the and
function to define a single complex number with a number of operands .
power of two matrices .
multiply a four alpha value of a b ( x y z )
multiply a four alpha value of a b ( x y z )
function multiply ( p ) g ( n ) beta pivoting ( s )
power ( a * b ) a * b where x ( y ) - ( ( op ) fn ( a * b ) * ( i * ) * ( fn ) i * t * t * t * b * c + beta * ( * ) * ( ( fn ) * ) ? ( (
compute the inverted for a sparse matrix .
multiply a * x * y * x * y * z * x * y * z * x * y * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z * z *
returns a word with the given word .
get all the available for a given
adds a new unique id to the list of .
adds a new amount to the list .
writes all the objects to the output stream .
returns the estimated percentile estimate for the given attribute .
checks if the character is a space character .
tokenize a { @link } .
tokenizes the given { @link } to the given { @link } .

prints the description of the given writer .
prints the description of the xml description of the given { @link outputstream } .
/ * ( non - javadoc )
converts a {
/ *
/ *
remove a string from the html code .
create a new attribute value from an xml document .
returns a stream that contains the given string .
write a list of characters to a single character .
converts a word to a string .
returns the list of metrics for the specified resource .

process the data in the given node .
parse the json string and return the list of info objects .
process the process data point data from the given { @link } .
get config config for the given user .
executes the given { @link } and collects all data from the { @link } to the given { @link } .

get a list of designdocument entities .
get a list of designdocument objects .
get a set of valuedata .
get a list of { @link } s .
get a list of { @link } s .
get a {
convert the column of column to a column
get the passed row in the passed row .
get all columns columns that are not contained in the passed column .
get all the columns of the passed in column
create a new { @link } .
set the column to be used for the column
get column of column - column
get all keys for a column in the passed column .
get all public keys for the given column
set the column of the passed in column
get the column key from the given column .
check if the column is a column column
create a short name from the passed value .
create a new { @link } instance .
create a new { @link } instance .
create a new { @link } for the given column .
create a column column .
creates a key for the given key .

add a column to the list of columns .
get a list of { @link } s .
get a list of { @link } s .
create a new .
create a new { @link } .
get a list of { @link } s .
create a new ods document .
get a {
get a list of { @link } s that do not have a { @link } .
get a set of converters .
convert a { @link } to a { @link } .
convert a { @link } to a { @link } .
set the { @link } to be used for the { @link } .
returns the last value of the last occurrence of the specified value .
send logs to the server .
sets the context to the current thread .

sets the log level .
/ * ( non - javadoc )

returns true if the given { @link queuemanager } is a { @link } .
sets up the camera to close the thread .
returns true if the given { @link inmemoryformat } is a { @link } .
sets the maximum size of the log file .
send a { @link } .
/ * ( non - javadoc )
check if the current thread died is a valid signal of the .
logs a log message .
/ * ( non - javadoc )
create a new {

append a {
helper method to create a file with the given { @link } .
initializes the application .
initializes the application with the given application name and the application context .
log a file .
sets the user identity for the given user identity .
log a file .
reads a file from the file .
starts the .
region >
/ * private void ( ) { = new ( ) ; }
/ * private void ( ) {
returns the first matching string for the given resource .
list all urls that match the given url .
/ * ( non - javadoc )
returns a list of all instances of the specified instance .
returns all the for the given service .
reads a record from the underlying data sink .
/ * ( non - javadoc )
writes the csv file to the output file .
dump the contents of the current thread to the specified output stream .
returns the estimated time of the .
returns the user profile of the user .
converts the given file to a file .
calculates the statistics of the statistics .
checks if the given region is a valid .
factory method for creating a new { @link } object .
get the pool for a server .
get the pool by name .
gets the region for the region .
returns a list of all regions in the specified region .
get client cache from cachekey .
checks if the given region is valid .
/ * private static ( string name ) { = . ( ) ; . ( ) ; . ( ) ; . ( ) ; . ( ) ; . ( ) ; . ( ) ;
get the named property from the given object
/ * package

get all the hosts that are in the same name .
returns the host host name .


execute the given execution .
flatten a collection of objects into a collection of objects .
returns a collection of { @link } objects .
query for a given query string .
creates a new { @link } with the specified { @link consumer } .
creates a new { @link } that deletes the specified consumer listener .
/ * ( non - javadoc )
update the weak event listener .
put a variable .
deletes a key from the specified region .
get a map of key - value pairs .
handles exceptions of exception handler .
/ * ( non - javadoc )
<p > returns the list of objects for the specified region . < / p >
{
read the content of the file .
<p > returns the user profile name . < / p >
compares this object with the primary key .
returns the number of region ( s ) .
{
returns a list of all the .
checks whether the server s member status is a valid .
{
{
returns the app name for the given resource .
check if the file is a valid security .
create a serializer for the given class and the given class .
returns a map that contains the results of a single paging query .
clear the search results in a page of historical search query .
creates a new instance of the .
gets the region name for the region .
gets the region for the region name .

registers the listener for the given region .
registers a listener for the given region .
> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
execute the callback method .
returns whether the given list of {
checks if the given region is in the region of the region .

returns the security username and password .
returns the user name for the user .

returns true if the specified time is within the specified time .
returns the memory memory of the specified value .
add a sample value to the set of values .
{
get the value of the specified property .
update the token .
close the data store .

main entry point for the compilation unit .
method to do a reconnect to the client .
method to get the instance of from the given .
get the singleton object .
stops the server s host and port .
notifies the server .
<p > . < / p >
returns a string representation of the given service .


list all the keys in the specified page .
converts a page into a page key .
list the keys in the page .
returns a map of keys and values that are not included in the specified region .
execute the specified function and executes the given function .
region helpers
imports the region into a single region .
imports the region into the database .
check if the remote remote matches the remote remote remote remote filter .
returns the host name of the given element .
parses the port of the given locator .
/ * ( non - javadoc )
returns the class name for the given class name .
returns the memory - memory memory of the data set .
returns the values of the specified type .
shrinks the next time to the next one .
execute the given function in the database .

execute the callback method .
checks if the given arguments are not included in the region .
query the search results in a collection of objects .
clear all occurrences of the given criteria .
search for the parameters in the given search query .
execute the callback for the given { @link } .
this method is used to sort the region s region of the current user .
imports the region into the database .
starts the cluster .
shutdown the server
start the .
wait until the server has finished .
adds a query to the search query .
adds a list of results to the collection of items .
{
builds the map of all values for the given map .
query for a query request
query for the query string .
closes the underlying input stream .
returns a value for the field name .
checks if the type of a type is a reloadable type .
serialize object []
deserializes a byte array into a byte array .
creates a new instance of the given class .
checks if the given table is a valid .
checks if the column is present in the column .
checks if the given element type is a supertype of the given type .
get schema name from the schema .
writes the given css class to the output stream .
write a to the log .
creates a new table with the same name as the same as the same as the parameter .
drop table and write the contents of the given writer .


update the column id of the method .


/ * ( non - javadoc )
called by to write a to the .
converts a { @link } to a { @link observable } .
checks if the column name is valid .
returns the value of the { @code string } that is the default value of the specified string .

checks if the type of the given type is a symbol .
returns a builder for the given { @link } .
reads the file and writes it to the data file .

prints a message to the console .
prints a message to the console .
logs a message with the given message .
gets the icon font icon .
get all icons of the icon .
{
adds a data point to the data point .
calculate the number of sectors in the given location .
create a new layout widget .
gets the background color for the given html page .
returns the squared euclidean distance between the two parameters .
copies all values in the array to the array .
sets the values of the data .
returns the result of this matrix .
prints the values of the <code > / code > .
returns a bigdecimal value for the specified power .
returns a bigdecimal that is the number of times the specified number of times the given point is less than the specified number of times the specified number of times the second point is the nearest power of 2 .
rounds a bigdecimal value to the specified value .
rounds a bigdecimal value to the power of two numbers .
rounds the given value to the specified value .
calculate the number of digits in the given scale .
calculates the tangens of a decimal point in a decimal scale .
calculates the value of the given bigdecimal .
returns the bigdecimal value of the rounded decimal point .
prints the output to the output stream .

sets the minimum limits .
adds a new value to the set of values .
prints out the number of samples .
adds a complex value to the complex multiplication .
subtract a float value from the specified complex value . <p >
<p > this method is equivalent to : < / p >
returns a complex value of the same complex value as a complex value . <p > the result is equivalent to { @link ( float ) } . <p > the result is equivalent to : <p > <p > the result is equivalent to : <p > <p > if a rotation is a complex is thrown the result is a
copy the contents of the array into the array .
sets the diagonal values of the <code > / code > .
returns the value of the <code > / code > th percentile in the vector .
prints the values of the <code > / code > .
/ * ( non - javadoc )
get the row from the matrix .
get the column of the decomposed
copies all values in the array to the array .
set the value of the specified <code > stringvalue< / code > value .
sets the values of the values in the array .
sets the matrix to the specified row .
set the column elimination .
returns a transposed matrix .
adds a matrix to the matrix .
returns the matrix that contains the matrix .
multiply this value to a column
multiply this matrix to a multiplication of the given matrix .
multiply the multiplication column of the vector to the specified vector .
multiply the multiplication factor of this matrix to the given matrix .
print the specified number of words in the format .
/ * ( non - javadoc )
{
sets the image to be used for displaying the image .
adds a data point to the data point .
checks the input and the data .
{
clears all the variables .
/ * ( non - javadoc )
/ * ( non - javadoc )
validates the input and validate the given layer .
{
parse the xml document from the given { @link org . apache . hadoop . api . . } .
{
calculate the number of times the result is a negative value .
calculate the area of the current music .
sets the rows of the matrix .
sets the values of the matrix to the specified values .
fires a tagsinput event .
fires a { @link } on all registered handlers in the handler manager .
returns the inverse of the inverse of the matrix market .

returns the sum of all the weights of the decomposed .
{
{
set the column of the column .
solve ux = b
prints the number of samples at the specified width and ending at the specified width .
decompose the matrix to be used by the .
/ * ----------------------------------------------------------------------------
solve ux = b
shift the matrix market vector
calculate the drainage matrix of the matrix market .
converts the given matrix to a sparse matrix .
returns the next pseudorandom uniformly number of integers in the range [ 0 - 1 ] .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
{
/ * ( non - javadoc )
checks if the bounds of the two intervals are not equal .
increment the number of times and adds the result to the next one .
multiply the given int value .
returns the number of integers between the two specified integers .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a long to a char array .
/ * private methods
prints the value of the <code > / code > to the <code > / code > .
validates the exponent of the specified number of integers .
validates the exponent of the exponent .
validates the number of numeric comparisons to the specified value .
validates the exponent of the floating range of integers .
/ * ( non - javadoc )
returns the next value in the specified .
returns the next n - th triple of the next n - th element .
returns the next pseudorandom number of samples in the range of the specified value .
returns true if the given array contains all of the bits in the array .
returns a new dense vector with the given factors .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
sets the to the .
sets the configuration file .
sets the default configuration for the .
gets the value of a converter .
<p > . < / p >


gets the event definition for the given resource .
<pre > send to qiniu kodo . < / pre >
set the region to the given location .
appends the result of the request to the list of parameters .
returns the host port of the server communication .
returns a {
evaluate a filter attribute expression .
processes the given { @link } and returns the result .
check if the payload is a valid event type .
polls the event and wait until the last poll request is completed .
remove a tag from the specified string .
gets all the states that have been updated .
<pre > send to the endpoint . < / pre >
sets the address of the address .
sets the compartment of the map .
converts the given builder to a builder .
converts a serviceinstance to a serviceinstance .
returns all the resources that match the given name .
returns all the instances that are not allowed in the given name .
/ * ( non - javadoc )


{
{
creates a new { @link issuecategory } .
gets all the alerts related to this .
retrieves the list of all for the specified user .
{
{
converts a json object to a json object
{
returns the data for the specified data .
creates a new user .
updates the user s user s user s user s user s user s user s user s name .
creates a new user instance with the given user id .
creates a new user instance with the given user id .
login to user s user to login .
{
delete a { @link } .
gets the { @link } for the given user .
retrieves the user s user s user s user s user s user s user - supplied user name .
retrieves a user - specific user - defined address .
retrieves the user id from the given user id .
get all users from the .
get the users from the { @link } .
get all users from the service .
get the user s
retrieves the user field values for the user .
get the message with the specified name and length .
get the from the user .
checks if the user has access to the role .
checks if the user has a role access token .
{

get the value of the field property .
{
returns the value of the field property .
returns the value of the field value .
returns the value of the field named <code > field< / code > .
returns the value of the field in the field .

returns the value of the field field value .

gets the value of the field property .
returns the field value of the field table .
sets the field value .
sets the type of the field type .
returns the type of the field type .
{
{
{

{
gets the search field type .
checks if the given { @code } is a valid { @link } .
{
sets the value of the property property .
get the value of the property property .
{
{
create a flow flow expression
update the flow flow .
get flow flow
get the flow flow flow .
get the job state for a specific step .
gets the view for a given flow and return the appropriate view .
get the job state for a specific step .
get the job view that will be used to perform a { @link } .
returns the job view that will be used to perform a { @link } .
get the job view that is in the current thread .
get the current steps for a flow
a {
a {

search for the specified index in the query string .
search for the index in the query parameter .
query for the given parameter with the given name .
query for the specified suggestion and the specified parameter . <p >
query for the specified suggestion and the specified params .
fills all fields and fields of the specified field . <p >
checks if the given index is a submodule .
closes the connection .

{
gets the list of table objects for the specified field .
gets the descendants of the given field .
returns the first ancestor of the specified field . <p >
gets the fields for the given field .
converts the given string to uppercase brackets .
returns the latitude and longitude of the text .
gets the latitude and ean - th occurrence of the specified text .
returns the longitude from the text .
converts a string to a double .
converts a string to a string .
decode the base64 - encoded byte array to represent a byte array .





/ * ( non - javadoc )
{
adds a new {
returns the list of messages from the list of messages .
returns true if the given message is the same as the .
uncompress the output data .
gets the list of inventory items .
removes the specified photo from the current user .
{
creates a new { @link } .
create a new record record .
/ * ( non - javadoc )
perform a single action action on the specified tag .
perform a post - processing operation on the specified html form .
perform a { @link } .
get the list of data flows for this user .
get the list of commented field data for the given form .
get the current for the specified .
returns the form of the .
perform the form of the form { @link } .
returns the form of the { @link } for the given user .
returns a new { @link } for the given form . <p >
perform a new { @link } . <p >
perform a new { @link } . <p >
returns a { @link } for the specified user . <p >
gets the for the given form .
{
returns the right - side - of - speech form for the given { @link } .
returns the container for the given component and .
/ * ( non - javadoc )
converts the {
{
creates the form form for the form submission .
/ * ( non - javadoc )
returns the form form for the given form .
returns the form definition for the specified name .
gets all the for a given user .
gets all the user s user s user s person s user - defined user s workgroups .
/ * ( non - javadoc )
returns the value of the specified field from the specified field .
get the cached value for the given object .

invoke the method with the given method .
returns the key for the given key .
/ * ( non - javadoc )
shuts down the server .
{
returns a list of all the children of the specified tree .
get the property name from the properties object .
returns the property value of the property with the given property key .
parses the given string to represent a value .
{
{
returns the list of all available files .
{

returns the ancestor of the specified field . <p >
get the list of all the children of the given field .
get the list of table objects for the specified field .
gets the form fields for the field .

returns a list of all field - form - > - > - >
closes the database .
{
convert a json object to a json object
returns the date as a date .
returns the date of a date field .

create a flow expression
/ * ( non - javadoc )
create a flow expression
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
filter the flow control flow .
get the current time step rules .
execute the crawl operator .
/ * ( non - javadoc )
execute crawl process .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
a {
get the next list of the rule sequences that match the given rule string .
login to login user s credentials .
login to authenticate with twitter authentication .

encrypt a ticket token from the specified service .
{
{

create a new { @link } .
/ * ( non - javadoc )
delete a { @link } .
get user s query .
get the user profile of the user .
execute the query and return the results of the query .
execute a query .
gets the form form of a form - > > > > > > > / a > .
gets the form form of a form - based on the given .

gets the form fields .
gets the value of the form { @link } .
validates the field mapping .
creates a new role .
/ * ( non - javadoc )
deletes the role .
/ * ( non - javadoc )
<p > retrieves the role of the roster that are currently associated with the role . < / p > <p > <b > note : < / b > this method appends the values to the existing list ( if any ) . use { @link ( java . util . collection ) } or { @link ( java .
{
execute the command line arguments
execute command .
{
converts the given object to a json object .
{
get the value of the field field field .
returns the value of the field property .
returns the field value of the specified field .
get the value of the field property .
returns the value of the field field in the specified field .
returns the value of the field field named field name field value .
get the value of the specified field property .
returns the value of the field property .
get the value of the field field named <code > fieldname< / code > .

sets the value of the field field field value .
sets the value of the field field field value .
returns true if the form is a form of a form - urlencoded form a form .
{
{
{
converts the given object to a json object
{
sends a { @link } to the { @link } .
returns the service ticket status for the ticket .
converts a byte array to a hexadecimal string .
{
creates a new field text field .
creates a new textbox with the given text and field .
create a new field .
creates a { @link } object .
creates a field - wise field of the specified field .
creates a new columnfamily with the given field and fields .
updates the given text field .
sends a request to the facebook text .
create a new field from the response .

create a new { @link } .

creates a new field with the given field and returns the result .
get the field name from the service .
<p > . < / p >
get the fields for a given user .

delete a { @link field } .
returns the meta data for the form field .
{
creates a field from a field .
creates a new date instance .
create a field from a { @link } .


updates the current date - time field .
update the value of the { @link } .
get the field name from the service .

deletes the given field .
/ * merge the original index into the target string .
sets the value of the {
get the response to the server .
{
{
add a new to the database .
creates a flow flow with the given { @link } .
creates a new { @link } .
gets the flow flow flow .
gets the flow flow flow flow .
deletes a flow .
deletes a flow from the current thread .
update the { @link field } .
get the field value from the field name .
returns the field value of the field .
get all the fields in the service .
returns the right - formed html for the given field . <p >
/ * ( non - javadoc )
returns a list of all the for the given form . <p >
returns a list of form <code > / code > .
returns the title for the given .
{
{
{
{
returns true if the expiration time is expired .
create a new user notification builder .
updates the user notification of the user .
/ * ( non - javadoc )
removes the user notifications from the user .
gets the user notification for the given user .
gets the list of all the available user notification for the given user .
query by user .
gets all the users that are allowed to be included in the request .
generate random number generator



returns the bytes that are not in the request .
decrypt a base64 encoded string .
decrypt data using aes .
encrypt the data using aes - 256
returns a byte array for the given byte array .
sends a message to the client .
closes the connection .


sets the to be used when the is changed .
returns the exception message for the given message id .
creates a new user with the given password .
{
{
get the access token for the given client client .
get the user profile of the user .
returns the html form for the given field . <p >
{
executes a request using the given http response body and returns the result .






delete a json document from the database .



execute the given { @link httpurirequest } and executes the given { @link httpurirequest } .
execute validation .
execute the postmethod and execute the request against the body and return the result .
executes the http request and returns the result .

parses the response handler and returns the response handler .
encode a string to a string .
checks if the given connection is valid .
checks if the given kind is a error .
gets the client .
returns the trust store for the given { @link org . apache . hadoop . tools . ssl . } .
closes the connection .
closes the connection .

closes the preparedstatement .
closes the preparedstatement .
retrieves the item for a specific form .
creates a new { @link } .
returns the frequent item for the given field .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
called when a message is received .
sends the message to the client .
send a message to the remote server .
closes the session .
{
gets the form fields for a given field .
/ * ( non - javadoc )

<p > getinstance . < / p >
returns the sql statement for the given .

checks if the text is a valid xhtml .
checks if the text is a select .
{
{
get the license for the given resource .
apply the license to the specified license .
{
creates a new { @link } object .
creates a field field field .
creates a new { @link } .

creates a new field .
creates a new { @link } object .
creates a new date instance .
creates a new date instance .
creates a field field .
/ * ( non - javadoc )





/ * ( non - javadoc )

/ * ( non - javadoc )
creates a field value .
get the field id .
gets the field values for the given item .




get the configuration key for the configuration .
get all configuration for this instance .
{
creates the form { @link } .
returns a string representation of the list of available files .
creates a new attachment object .
gets the attachment .
get the attachment of a multipart form .
deletes the attachment .
deletes a roster attachment .
checks if the given value is a valid value .
replace the attributes of the given element .
{
parses the jar file and returns the jar file .
sets the jar file to the classloader .
parse the given { @link node } as a { @link methoddeclaration } .
returns true if the node is a schematron node .
returns the {
replace the element with the given name .

adds a file to the list of .


checks if the given value is a valid value .
returns all the globs that this group has been matched .
method
method that is called by the method .
check if the given restriction is subsumed by the oldprefix .

{
parses the xml schema file .
get the schema node of the given file .


{
parse the given xml element into a { @link } .
converts a map of node names to a map of nodes .
replaces all the elements in the list with the given element name and the list of elements .
returns the raw content of the content of the given node .
checks if the given value is a valid value .
returns the value of the {

validates that the given string is a valid integer value .
validates a string value .
validates a given element .
validates a given attribute value .
validates a value for a given element .
returns the default value for the given parent element .
returns the default value for the given parent element .
get the default value for the given parent element .
creates a new .
{
{
create a {
creates a new instance of { @link } .
parse the given arguments .
parse the given arguments .
{
returns the date date eee dd mmm yyyy hh : mm : ss :
add a builder to the builder builder .
add a new header view to the view .
removes a footer view from the drawer view
sets the point in the center of the center of the center of the center of the center of the center of the center of the center .
sets the end point of the given point .
get the value of the <var > / var > .
returns the value of the specified {
calculate the gradient of the given <code > / code > .

calculate the number of components of a given value .
calculate the value of a floating - point value .
gets the value of the .
returns the value of the declination with the specified percentile range .
computes the ideal test interpolation between the given path and surfaces the given ratio .

calculates the stability of the interpolation that is the same as the original .
sets the bounds of the current sky to the given .
process the event .
handles the process event .
get the list of ids for the given event .

reads the specified string from the specified string .
reads a list of { @link string } s from the specified { @link string } .
applies rule rules to all views with the given rule and all the rules .
build the instance of the specified { @link } .
get the serializer for the given stream .
{
/ * ( non - javadoc )
{
{
resolves the { @code } to be used for the given { @code target } .
create a file from the given file .
creates a new directory that is a directory .
/ * ------------------------------------------------------------
{
{
returns the {
/ *
creates a namespace context for the given context .
{
/ * ( non - javadoc )
returns a list of { @link } s that are annotated with { @link } .
restore the properties of the properties .
returns a stream that combines the supplied stream as a stream of entries in the stream .
reads all dependencies from a given input stream .
converts a {
adapts a {
converts a { @link } to a { @link } .
returns a {
creates a map of all { @link } s .
add a object to the queue .
creates a new object .
sets a property name .
returns the value of a property .
returns the default value for the given string .
returns the next state in the current state .
process the queue .
get the generic type of a type .
get a named class from the specified class loader .
returns the parameterized type of the given type .
returns the type of the type variable in the type variable .
returns the value of the specified type .
puts a new value into the cache .
returns the class for the given class .
if the given class is not null the class loader is returned .
put the given result into the cache .
returns a cache object that is used to store the cache class for the cache .
prints the stack trace of the given stack trace .
prints the stack trace to the output writer .
sets the value of the specified text .
/ * ( non - javadoc )
run the task .
set the task to be called on the task .

check if the current thread is running .
returns true if the current thread is running .
waits for the given exception to be retried .
stops the task .
unschedule the job .
returns the item for the given {
puts the job - dependant - related - data into the job .
get the mode value of the specified <code > / code > .
this method is used to read a object from the underlying buffer .
creates a new object .
get the list of members with the specified name .
lists all files in the given directory and all the given sub - directories .
creates a new url that is a directory with the given filename .
/ * ( non - javadoc )
add a new reader to the list of .
copy the contents of the source into a compressed file .

load a from the catalog .
parse the catalog file and return the catalog file .
read the catalog from the input stream .
parse the given url into a { @link } .

parse the given file name and return the result .
adds a new entry to the list .
{
parse the given xml schema and return the .
resolve a type .
resolves the document to be included in the document .
resolve a qualified identifier .
resolves a local id .
resolves a maven - specific namespace .
resolves the given system id and returns the appropriate version of the given id .
returns the uri of the uri .
get the url of the element .
resolve a maven namespace .


returns the encoded byte of the specified character .
adds a delegate entry to the list of entries .
create a socket to the server .
sets the text to be used for displaying the text .
creates a new { @code } with the specified { @code key } .
get the value of the specified property .
fire the listener to the specified type .
add a throwable to the stack .
creates a new instance of the
adds a object to the list .
create socket for the given host .
create a socket .
compares this mutable to another .
get the value of the property with the specified name .
checks if the given file is a file .
get the object at the given index .
{
inserts the specified object at the specified index .
removes the specified index at the specified index .

adds a new entry to the given type .
returns the number of the named property .
returns the number of entries in the given type .
returns the entry entry for the given argument .
insert a new value into the array .
extracts the value of the specified <code > / code > object from the given <code > object< / code > .
sets the text value of the text field .
set the context class loader .

swaps the specified ordinal at the specified position .
removes the node at the given index .

checks the tree node of the given node .
loads the class from the parent class .
awaits the and of the

/ * ( non - javadoc )
get the value of the specified class .
creates a new {
closes the input stream .
returns a counter with the given counter .
creates a new counter - only function for the specified counter .
/ * ( non - javadoc )
start the document .
receive notification of the start of an element .
handles the end element of the given element .
this method is called from the .
lookup a key .
lookup a lookup value .



{
returns a string with the given token .
split a string into a string .
returns a byte array containing the bytes of the specified array .

<p > removes character characters from the specified string . < / p >
<p > removes trailing leading and trailing spaces . < / p >
get the value of the text field .
checks if the given directory name is a valid directory .
create the .
get the value of the entry in the map .
peek at the given key in the map .
inserts a key value pair into the specified value .
removes the entry from the map .
flushes the output of this thread .
returns a list of all the keys that are not included in the map .
sets the resolution for the resolution of the specified .
returns a {
returns the child of the given element .
get the child element for a given tag name .
get the child element for the given element name .
get the content of the element .
returns the content of the element in the given tag element .
get the content of the element with the given name .
stops the .
set the maximum size of the queue .
set the value of the .
set the value of the .
execute the given task .
receive notification of the given start element .
schedule a timer with a new timer .
puts the given task into the queue .
sets the value of the text property .
adds a new entry to the list of the specified entry .
returns the { @link } for the given uri .
resolves the given system id and the given id .
resolve a namespace declaration .
resolves the external system - specific dissemination system for the given bundle .
resolve a external external external external external namespace .
creates a new { @link } from the given { @link } .
appends the vector to the vector .
{
{
{
resolves the given system id and its associated components .
resolves the given constraint to the given namespace .
sets the value of the { @link } .
get the value of the { @link } .
reads the given file from the catalog file .
reads the catalog from the catalog .
receive notification of an element .
receive notification of the start of an element .
receive notification of the end of an element .
receive notification of the end of the source .
start the prefix with the given prefix prefix prefix prefix and prefix .
{
acquires the next available in the pool . if the current thread is interrupted or the timeout is reached the number of queued attempts will be returned .
wait until the current time is running .
connects to the underlying file .
returns an output stream for writing to the specified file .
get the header of the header field .
compareandset
deletes the specified node .
returns the value of the header in the header .
creates a new { @link } .
compareandset value pair .
unlinks the value of the specified {
logger . getlogger

returns the short name of the class name .
returns a string representation of the given class .
returns the default property map .
add listener to the listener .
add a propertychangelistener to the system manager .
load a load property .
load a property .
loads a property from the reader .
load a load property .
sets a property to the given name .
removes a property from the manager .
returns the property name for the given default .
returns an iterator that combines the iterator of the { @link } s .
get the property group property .
returns the constructor constructor for a constructor .
copy the object to the object .
/ * ( non - javadoc )

returns the object array that is returned by the given object array .
initialize the context menu .
update the cache of the given class .
adds a new value to the list of properties .
removes the value of the specified object from the map .
returns a set of set of set of preference objects .
returns a set of all the entries in this set .
add listener to the listener .
adds a propertychangelistener to the listener .
remove a listener from the listener .
notifies the listener that the event is fired .
notifies the listener that the event is fired on the given propertychangeevent .
notifies the listener that the changed event is changed .
notifies the listeners that the event is fired on the property of the property .

loads the properties from the specified prefix and returns the value .
loads the properties from the specified reader .
loads the class from the given class name .
/ * ( non - javadoc )
returns the value of the <code > property< / code > property .
get the property group name .
registers a local entity .
resolve a entity to an external dtd entity .
returns whether the given entity is a { @link } .
loads the source from the xml file .
returns a sax inputsource object for the given source .
returns a sax inputsource for the given <code > / code > .
resolves the classpath for the given classpath .
loads classpath resource from the classpath .
sets the text to the document .
normalizes a string to a string .
replaces the language with the given id .
replaces the given string with the given urn .

start the stopwatch with the start time of the current time .
stops the stopwatch and stop the current time .
creates a new { @link } .
compares the object of the object with the given object .
generates a byte array from the given byte array .
returns the array of booleans .
creates the new data .
sets the value of the specified field .
/ * ( non - javadoc )
reads the catalog from the file and returns the result .
reads the next token from the input stream .
returns an iterator over the iterators that have been computed .
initializes the date / time format .
/ * ( non - javadoc )
adds a vertex to the graph .
sets the root vertex to the root vertex .
adds a new edge to the graph .
inserts the given edge into the specified edge .
remove the specified atlasvertex from the graph .
remove all edges from the specified edge .
find the first search at the specified position .
searches for the first matching element in the list .
traverse the given matcher and removes all the elements from the list .
/ * ( non - javadoc )
find the vertices that are in the specified {
finds the intersection of a vertex .
receive notification of the start of an element .
receive notification of the end of an element .
normalizes the given string to a string .
parses a string into a dom tree .
parse the xml stream from the given inputstream .
parses a jdom document from the source file .
create a new element
returns a { @code qname } instance for the given name .
returns the value of the element with the given attribute name .
returns the attribute value .
copy attributes to the element .
returns whether the given child node is a child of the given child node .
returns the value of the given node .
returns the content of the text node .
returns the child node of the given node .
get parent element .
add a new resource to the pool .
reads the catalog from the given input stream .
reads the given file from the file system .
returns the address of the host port .
resolve the entity to an entity .
resolves the url of the classpath .
creates a new instance of the class .
set the value of the <code > name< / code > property .
print the info of the given class .
returns the classpath for the given class .
returns the description of the given object .
<p > . < / p >
<p > . < / p >
returns the package name of the package .
returns the package name of the given class name .


gets all interfaces implemented interfaces implemented by superclasses .
returns all interfaces implemented interfaces that are burstable in the given class .
returns true if the given class is primitive .
instantiate a class by using the specified class name and class name .
loads the class from the given class name .
loads the class from the class loader .

get getter getter method for the specified attribute .
get setter method for a class .

returns the value of the system property .
sets the text value of the text field .
get the value of the property name .
checks if the given directory name is a valid resource .
/ * ( non - javadoc )
returns an iterator over the iterator .
adds a new object to the queue .
returns the class of the specified protocol .
returns true if the given file is a file .
/ * ( non - javadoc )
log a message at the finest level .
puts a value into the object .
gets the value of the object property .
removes the specified property from the object .
returns a set of entries that are associated with the specified object .
add listener to the listener list .
remove a propertychangelistener from the listener .
binds the given name to the given name .
adds a method name to the given name .
reads the catalog from the given catalog .
returns the cached instance of the specified class .
returns a cache for the cache class .

finds the { @link class } with the given name .
returns the editor editor for the given class .
returns the editor editor for the given property name .
registers the editor with the given name .
convert a string to a class .


create a new server socket server socket .

returns the exception that caused the given exception .
schedule the specified time - on this queue .
run the work thread .
create a new instance .
/ * ( non - javadoc )
looks up a class and returns it .
looks up a lookup by using the specified class name .
looks up a lookup by using the specified class name and the context class .
create a new link with the given name and name .
create a new link with the given name and name .
remove a reference from the given name .
remove a reference to the given name .
checks the given object and returns the object .
appends a class to the given class .
returns the transition transitions .
reads a properties file from the properties file .
/ * ( non - javadoc )
returns true if the specified git query is a query .
/ * ( non - javadoc )
{
returns true if the specified database is in the specified database .
checks if the catalog property is not found .

get the catalog property .
check if the resource is not a valid
get the catalog name from the specified class .
{
resolves the given url and resolves the given base uri .
creates a new url - encoded string .
resolves the class s class name .
returns the propertydescriptor for the given property name .
sets the value of the <code > class< / code > object to the given value .
/ * ( non - javadoc )
returns the prefix of the element .
returns the local name of the element .
returns a dom element that is a node .
returns the string representation of the element .
sets the text value of the text field .
returns a list of all the elements in a list .
returns the input stream for the given filename .
load properties from the given file .
reads a properties object from the given map .
adds a new edge to this graph .
adds a new edge arriving to the graph .
adds a { @link } to the graph .
returns true if the edge is not a primary edge .
remove this element from the graph .
finds a edge from the specified edge .
finds the edge of the edge of the connected edge of the graph .
/ * ( non - javadoc )


/ * ( non - javadoc )
attempts to load the jar file from the given jar file .
/ * package
returns true if the next time the next time is read .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the tag that is used to trace the trace tag .
process the queue .
installs the given { @link } to the given { @link } .
installs the given { @code addon } to the given { @code } .
installs the given { @link } to the given { @code addon } .
checks if the folder is a folder and the path of the folder .
callback for the callback when the callback is called .
returns a stream that is a { @link } that is not a generic type .
create a path for the specified type .
updates the .
update the view .
subscribe to a consumer
returns a logger with the specified name .
log a message with the specified format .
log a message with the specified format .
log a { @link string } with the specified format { @link string } .
log a message with the specified trace level .
log a debug log message with the specified format string .
log a formatted string with the specified format string .
log a formatted string with a formatted string .
log a debug level message .
log a message with the specified format .
log a message with the given format .
log a { @link string } with a { @link messageformat } .
log a message with the specified message .
log a warning message with the given format .
log a warning message with the given format .
log a warning message with the specified format .
log a warning message .
log a error message with the specified error message .
log a error message with the given error message .
log a error message with a custom error message .
log a throwable with a throwable .
read records from the input stream .
get a stream of tuples that contains all keys and streams of the specified fields .
returns a stream consisting of the elements of this stream with the contents of the given { @code collection } .
returns a stream consisting of the elements of the given collection of elements in the specified collection .
returns a stream consisting of the elements of the given collection of elements in the specified collection .
returns a stream consisting of the elements of the given { @code stream } that contains the given { @code stream } .
bootstrap that is a <code > / code > that is a <code > config< / code > .
launch a { @link } .
launch a { @link } .
returns the last modified time of the current page in the current page . <p >
/ * ( non - javadoc )
/ * ( non - javadoc )
finds a tag with the given name .
main method that reads the lines from a file into a file .
main entry point .

loads the file from the given file .
returns the first argument in the given string .
adds a last modification time to the last modified time .
returns true if the file is a file .

matches the word s word word to match the word .
search for the given node at the given offset .
returns the file path for the given path .
reads the character at the end of the buffer .
converts a string into a stringbuffer .
returns the ascii code point of the specified code point .
main method that writes the data to the file .
get the length of the specified word .
returns the count of all records in the specified word .
calculates the variance of the variance of the current word .
returns the approximate approximate degree of the number of words in the given word .
prints the chunk of chunk .
search for the offset in the search tree .
search for the search pattern .
returns the maximum bytes found in the range of the array .

main method to run the main method .
creates a new instance of { @code } .
helper method to isolate api key
set the { @code host } to use for communication with { @code } .
set the context of the specified resource .

/ * ( non - javadoc )
check if the connection is ready to be closed .
{
{
handles a single drop .
/ *
get datasource .
creates a jndi source data source .
creates a { @link } for the given parameters .
creates a new instance of { @link iterable } with the given { @link iterable } .
creates a new array with all elements in the given array .
returns a list of all { @link } s that are not in the given class .
creates a new { @link } instance .
converts a {
creates a set of { @link } objects .
creates a new { @link } for the given class .
creates a { @link } for the given type .
creates a new { @link } instance .
creates a new { @link } instance .
returns a sortedset representing a { @code } .
returns a set of { @code } objects that are identical to { @code } .
returns a map that contains all the keys that are not included in the map .
creates a map that contains a map that contains a mapping for a map .
returns a {
returns a list of all the { @link } s .
generate a value for the given type .
returns a list of all { @link class } objects of the specified class .
creates a {
creates a {
sets the { @link } for the given class .
sets the given class .
returns a sortedset representing the given class .
creates a map that contains the keys of the map key .
creates a map that maps a map of key - value pair into a map that maps a map to a map .
creates a {
returns a { @link } for the given type .
creates a { @code } that is a { @code } .
returns a { @code } instance for the given type .
checks that the given type is a { @link } .
validates that the given type is a { @link } .
creates a { @code } instance .
{


returns true if the array is a primitive int array

{
/ * ( non - javadoc )

restore the database and save it to the specified database .
get the blob blob from the byte array .
sets the text to be displayed in textview .
dump the results to the database .
add a new expression
add a statement to the builder .
adds a new { @link } to the builder .
adds a new statement to the set of statements .
<p > . < / p >
unescapes the escaped csv file and unescape .
returns a list of worksheet .
read a string value from the reader .


joins the given list of strings into a single string .
joins the given array of strings into a single string .
render the text .
read data from a reader .
writes the database to the database .

returns the for the given entity .
get the base dao for the given entity .
returns the bind type for the given type .
returns the first letter of the specified name .


parse the csv text into a row .
{
/ * ( non - javadoc )
if the given version of the database is a valid version of a version of a version of a version of a version of a version of a version of a version of a version of a version of a version of a given version of a version of a version of a given version of a version of a given version of
/ * ( non - javadoc )

/ * ( non - javadoc )
reads the index of the given index .
writes the index of the given to the given list of .
adds a converter to the given converter .
creates a { @link } for the given query .
creates a { @link } for the given type .
sets the value of a {
sets the date parameter for the date - time .
sets a parameter to the specified value .
sets the parameter to be used by the query .
sets the parameters to be used for the query parameters .
render the query string .
delete a table
gets the value of the specified id .
insert a new value into the database .
insert a new database to the given database .
save the object to the database .
updates the current row value .
perform a query with a query string .
perform a query and return the result .
returns a list of all the objects in the list .
returns the object in the current cursor .
sets the value of the builder builder builder builder builder builder .
adds a new item to the list .
{
/ * ( non - javadoc )
adds a collection of objects to the collection of items .
adds a value to the expression .
add a collection of objects to the collection .
adds a value to the expression
add a subquery expression to the subquery .
{
/ *
returns the next unused index .
returns the .
add a new to the plan .
returns a plan that can be used to compute the plan for the specified number of operations .
returns a random plan for the given index .
sets the value of the field in the set of assignments .
returns the result of the results of the results of the results of the results of the genome .
returns the parent of this node .
returns the children of the given children .
big endian or motorola format .
create a logger with the specified name and name .

sets the current state of the .
adds a to the .
closes the input .

initialize the selection .
start the thread .
backfill the .

register a summernote to be used in the .
/ * ( non - javadoc )
parse string to string .
reset the .
load the agent from the given class .
process the .
returns true if the plan is a forest .
create a from the given agent .
get the annotation for the given annotation .
get the value of the { @link } .
get the plan for a given plan .
loads the class from the class name .
loads the extension from the classpath .
checks if the given { @link } is a name .
returns the usage banner .
parses the { @code commandline } argument .
parses the argument string for the given options .
parse a string from the given string .
main method to create a csv file .
executes the given query .
get the index of the given index .
finds a name in the database .
pushes a new source into this one .
pop the next component from the list .
grows the pollfd object from the buffer .
{
this method sets the value of the variable to the specified value .
get the nth value in the element at the specified index .
pushes the given object into the array .
pop the first element from the list .
rehash all the elements in the heap .
/ * ( non - javadoc )
{
{
{
{
gets the type of the object .
checks if the given { @code rhs } is a { @link } .
main entry point for the command line .
get the field name from the given index .
converts the string to a byte array .
call
sends a message to the specified chat .
sends a message to the specified tag .
start the specified start of the appender .
get the current position of the
sets the .
/ * ( non - javadoc )
adds a new projection to the list of .
evaluate a query .
suspend the current thread .
{
gets the field name .
returns the index of the field in the given bdd .
/ * ( non - javadoc )
parses the arguments and returns the string representation of the argument string .
/ * ( non - javadoc )
registers a probability for the specified probability .
build the name of the .
parse the arguments for a given string .
this method is called by the method .
checks if the given agent is a valid agent .
removes all the agents from the given set of {
checks if the given node is a .
called when the agent is a valid plan .
removes all agents from the list of active resources .
add all active active active active active active active active active active active active active active point .
waits until the current thread is closed .
shutdown the server .
set the idle connection idle .

main method to run the method .
initializes the { @link } .
start the yarn process with the given config and yarn config .
wait until the current time of the current thread is running .
called when the server exits .
returns true if the pool is idle .
returns true if the given {
set the idle connection idle .
returns the number of times the number of bits in the given integer .
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the expression that is a primary
sets the expression to be used for the expression .
joins the given attribute value into a composite string .
joins the given properties with the given properties .
joins the given { @link } with the given { @link } .
/ * ( non - javadoc )
returns true if the specified character is a valid end of the given buffer .
{

returns the class name of the given class .
/ * ( non - javadoc )
handles the request to handle the request .
returns the path of the request url .

returns the content type of the content type .
checks if the given value is a parameter .
returns the parameter name with the given name .
parse parameters and return a map of parameters to the expression .
{
returns a target file with the given name and the given filename .
writes the given { @code } to the { @code } .
/ * ( non - javadoc )
scan the annotations for the given class .
loads the class from the given class descriptor .
loads the interface of a class .
load a scope from the given {
returns instance of {
returns the value of the {
returns a constructor that is declared by the constructor .
scans the dependencies for a collection of classes .
initializes the fields for the .
build a string representation of the given class descriptor .
returns the annotation for the given annotationclass .
returns true if the given annotation is annotated with annotationclass
returns the annotation type of the given annotationclass .
returns the method method that is declared in the method .
returns the interceptor class for the given class .
returns the interceptor method for the given method .
creates a { @link } for the given type .
returns the handler for the given type .
registers the given { @link optionhandler } .
the main method of the file system .
sets the value of the property value .

get the value of the specified class .
checks if the given { @link } is a proxy .
persists the current state of this file to the disk .
returns a list of observable that will be used to determine the candidate subscriptions .
sets the default link to the given rel . <p > the <code > / code > method is called by the link relation to the right - hand - link .
sets the rel link to the given rel . <p >
executes the specified request and executes the specified request .
execute the request .
handle response body .
validate that the response is valid .
handles the links for the given response .
handles the form header of the request body .
handles links to the body builder .
parses the given link into the { @link } .
get a map of key - value pairs .
handles the capabilities of the response .
checks if the given method is a valid access method .
returns the rows of the specified object .
get the full message from the exception .
create a new instance of the { @link } instance .
/ * ( non - javadoc )
registers the class .
registers a factory factory .
registers a factory factory method .
registers a batcher .
registers the class of { @link } .
{
/ * ( non - javadoc )
destroy the .
/ * ( non - javadoc )
gets the instance of the instance .


adds a argument to the list

write a cyclonedx bom .

writes the given xml writer to the writer .
initialize the { @link xpathfactory } for the given variable .
checks if the given file exists .
creates a new { @link } instance .
creates a new { @link } instance .
/ * ( non - javadoc )
set the request path .
{
waits until the given method is called on the target object .
{
/ * ( non - javadoc )
get the full string representation of the given type .
{
/ * ( non - javadoc )

method to start the observer .
{
parses the given string as a date .
set the value of the given field .
saves the specified .
add a appender to the specified appender .
get appender appender appender appender .
remove a appender from the appender .
clear all the appender fields .
{
close the database .
parse the model .
resolves the given { @code } to the given { @code } .
get a file from the directory .
parses the given directory and returns the corresponding { @link } .
returns true if the given { @link uiviewroot } is a model .

sets the model directory of the given file .
sets the extension of the file extensions .
set the { @link } .
{

iterate over the given list of group elements .
checks if the list of rows is present in the list of rows .
compare the given row and returns the result .

parses the string representation of the given <code > value< / code > .
{
returns a log event for a given cell .
{

#ifdef java6
#ifdef java6
{
test if the passed arguments argument is a string argument .
returns the string value of the argument string .
{
merges the given template into a template .
/ * ( non - javadoc )
{
get the .
returns the file path for the given template .

{
this method is called by the to the url .
starts the browser .
configures the application .
hide the window menu . <p >
prints the text to the output stream .
save the file to the file .
返回数据给客户端
opens the window .
{
this method is used to set the { @link } to use for the request .
detaches the object from the current object .
get the cookies for the cookies .
/ * ------------------------------------------------------------
dumps the message header .

returns a list of all the that will be used to run the .
{
pushes a queued event to the event queue .
closes the underlying connection .
sets the remote host to be used for the remote host .
waits until the process is stopped .
returns the parameter value for the given type .
send event to the specified event .
removes a prefix from the path .
checks if the given directory exists in the directory .
returns the root directory of the directory that is in the directory .
finds the parent directory of the given directory .


returns the depth of the file .
/ * ( non - javadoc )
{
returns true if the request is empty .
send a login page .
send the request to the client .
send an {
send an error message to the client .
prints the error message to the given exception .
send json object to the client .
adds a template parameter to the builder .
adds a list of templates to the template .
initialize the template engine .
finds the list of roboconf references in the given { @link } .
{
/ * ( non - javadoc )
enables / disables the disabling preferences .
deletes the dialog .
notifies the write listeners that the is being read .
initializes the variables with the given variables .
opens a reader for the given encoding .
creates a new instance of the class with the given object .
creates a {
convert a string to a pem encoded string
returns the {
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the count of file or null if the file is not null .
returns all files that are not included in the file .
returns the summary of the summary count of the given result .
returns a row of the given file .
get the summary of the summary of the given project .
/ * ( non - javadoc )
get the summary of a file .
/ * ( non - javadoc )
gets a factory for the given interface .
gets a instance of the specified class using the specified interface .
returns a {
get the remote instance of a remote remote server interface
returns the { @link } for the current thread .
adds a new row to the grid grid .
creates a new instance of { @link } .
get the class of the class .
returns the list of directories that are known to be included in the classpath .
returns the model resources that are in the classpath .
{
sets the set of objects .


parses a xml file into a sax inputsource .
handles a notification validation .
parse the given reader .
gets the arguments for the given formal arguments .
converts a string to a value .
returns true if the given type is a primitive type .
/ * ( non - javadoc )
{
process the arguments .
process the arguments .
/ *

<pre > : < / p >
{





returns true if the given request is a http header .
checks if the given request is a valid http request .
/ * ( non - javadoc )
{
removes the specified index at the specified index .
inserts a row into the given index .
/ * ( non - javadoc )
called when the instance of the instance key is not stored in the cache .
called when the event is received .
{
get the properties of the given type .
get the property from the given annotation type .
returns the annotation type of the given annotation .



--------------------------------
lookup a domain .
returns whether the given host is a valid .
handles the request processing .
gets the class from the interface .
returns the invokable method for the given name and the given name .

handle the given exception .
processes the specified parameters .
#ifdef java4
{
initializes variables with the given variables .
/ * ( non - javadoc )
returns the value of the specified cookie name .
add cookie value .
adds a new value to the registry .
removes cookies from the cookie stream .
returns an iterator over the specified {
/ * ( non - javadoc )
returns the list of file { @link } .
adds a new field to the given type .
compile the class with the given class name .
verifies that the specified token is valid .
returns the value of the specified file or null if the file is not null .
relativize a uri
creates a properties object from the properties file .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the http servlet request .
/ * ( non - javadoc )
executes the given method .
executes the given method .

returns the file with the given filename .
returns the files that are not included in the jar .
returns the last file in the file .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
clears all pools in this pool .
/ * ( non - javadoc )
handles the http request handler .

saves the current user to the current user .

get the config object from the config .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns {
<p > . < / p >
returns the given date string as a date string .
parse the given string as a date string .
/ *
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the session instance for the given instance .
/ * ( non - javadoc )
{
{
{
read the meta meta meta data .
writes the data to the output stream .
{
handles the request to handle the request .
returns the resource bundle for the resource .
gets the content of the response .
sends a response to the content of the content .
delete the content of a file .
<p > compare two <code > object< / code > objects . < / p >
{ @inheritdoc }
{
/ * ( non - javadoc )
{
{
this method is called by the {
upload the given .
deletes the dialog .
{
returns the value of the argument with the specified name or defaultvalue if the argument is not null .

extracts the parameters of the given row .

returns the names of the arguments that are not included in the argument .

task scheduling task .
/ * ( non - javadoc )
/ * ( non - javadoc )
{
{
{
returns the next file in the cache .
{
<p > . < / p >
creates a new user with the given name .
set the password for the given password .
/ * ( non - javadoc )
{
returns the challenge of the .
verify challenge response .
returns the image resource for the given resource .
returns a map of the { @link } s that are not in the session .
configure the application .
prints the banner fields .
prints the banner status .
creates a new instance .
get the directory for the given resource .
registers a shutdown hook .
check if the given arguments are enabled .
{
start the scan .
returns a method with the given arguments .
waits for the given time to acquire .
transforms the given {
triggers the trigger to start the trigger .
called when the trigger is called .
filter the specified event .
inserts the specified element into the specified row .
returns the counts of the counts of the given count .
/ * package
formats the given { @code string } to a { @link string } .
setter for - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
called by the class .
getter for - gets
getter for deprel - gets
setter for fullname - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for lemma - gets
setter for pos - sets
getter for - gets main system home .
setter for - sets whether the reference is a reference to a reference .
getter for - gets
setter for - sets an identifier
getter for - gets
setter for - sets
getter for details
setter for details
getter for details
indexed setter for details
getter for - gets
setter for label - sets
indexed getter for pos - gets an indexed value -
indexed setter for scalar - sets an indexed value - list of section 4 . 1 .
getter for - gets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for mentions - gets the c
setter for - sets
getter for - gets the of the mmax annotation type .
setter for - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
indexed getter for - gets an indexed value -
indexed setter for - sets an indexed value -
getter for - gets
setter for - sets
getter for - gets list of mmax occurence of list
setter for - sets an indexed value - list of wikipedia article .
indexed getter for - gets an indexed value - list of entities that are contained in the search list .
indexed setter for - sets an indexed value - list of mmax - search objects in the search list .
getter for - gets
setter for - sets
getter for - gets
setter for - sets
setter for fullname - sets
getter for - gets the offset of the section of the section of the section of the section of the section of the section .
setter for - sets
getter for - gets the offset of the section of the section of the section of the section of the section of the section of the section of the section of the section of the section of the section of the section of the section of the section of the section of the section of the section of the section of the
setter for - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for the mmax object .
setter for - sets
getter for - gets the subject that corresponds to the given value .
setter for - sets the operator for
getter for - gets
setter for - sets
getter for - gets the object of the type of the object
setter for - sets
getter for - gets
setter for - sets sets
getter for - gets a function that returns the operator for equality .
setter for operator - sets
getter for - gets operator for - gets
setter for operator - sets investigation of operator
<p > . < / p >
<p > . < / p >
getter for - gets the mmax item of the mmax annotation
getter for - gets the name of the field of the mmax expression .
setter for - sets
getter for - gets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for - gets the id of the object with the id of the type of the type of the type of the type of the type of the type .
setter for - sets the identifier of the concept of the object type .
getter for fullname - gets .
getter for - gets
setter for - sets
setter for - sets the operator for the concept of the concept of the concept of the concept of the concept of the concept of the concept of the concept of the concept of the concept of the concept of the concept of the concept of the concept .
getter for - gets
setter for - sets
getter for - gets the html of the entity types that the document is contained in the document .
setter for - sets
getter for - gets the list of the concept of the concept of the concept of the concept of the concept of the concept of the concept of the query .
setter for - sets
returns a instance for the given class .
getter for - gets
setter for - sets
setter for - sets
getter for - gets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for - gets
setter for - sets
getter for - gets the label of the label of the label
setter for - sets the label of the label of the label
returns the index of the next bit in the range of integers .
sets the bit value at the specified index .

{
registers a buffer to the underlying buffer .
create a new instance of this class .
extends the given bean in the given bean .
/ * ( non - javadoc )
create a new record .
create a new record .
find a record in the record .
{
/ * ( non - javadoc )
returns a list of elements in the list .
concatenates this { @code array } to a { @code array } .
joins a string into a single string .
joins the given collection of strings into a single string .
merge the specified array into a list of elements .
merges the provided list into a list of sublists .
removes the elements from the specified array with the specified elements .
removes the elements from the list .
yields the array of elements in the array with the specified indexes .
returns a list of all elements in the list .
returns a new array with the same indexes as the specified array .
transform a collection of string into a list of strings .
partitions { @code } to { @code n } s .


find the next separator .
returns the next separator character .
returns the helm notation for the spreadsheet notation .
returns the helm notation for the given helm string .
{
returns a string representation of the string .
/ * ( non - javadoc )
checks if the given {
adds a to the list of groups .
returns the id of the target group id .
adds a constraint to the given string .
{
{
parses the command line arguments .
{
check if the given id is a valid id .
check if the given connection is a valid .
check if the given user is a valid .
check if the pattern id is valid .
check if the pattern is valid .
check if the string is a valid
returns true if the given {
serialize a string
{
{
{
returns the inverse of the given string
returns the current { @link } for the given { @code } .

returns the string representation of the .
returns the string representation of the string representation of the string .
returns the string representation of the string representation of the string .
returns the string representation of the annotation .
returns a list of pdb ids for the helm2notation
returns a list of pdb ids for the helm2notation
returns a list of pdb ids for the given {
returns the polymernotation of the given polymernotation
sets the .
{
{

sets the value of the specified <code > annotation< / code > to the specified <code > value< / code > .
sets the count of the specified string .
method to add a phosphate to the given group
<p > . < / p >
returns the entity instance for the given string .
{
{
returns a list of {
parse the given string .
{
{

{
{
/ * ( non - javadoc )
{
<editor - fold defaultstate = collapsed desc = generated code > // gen - begin : initcomponents
gen - last :
sets the .
initialize the .
gets the .
pushes a new task to the next call to the next call to the next call to the next call .
create a { @link } .
create a new graph from the nodes of nodes .
initializes the builder .
returns a list of all nodes that are in the specified .
returns a {
subscribes to the given object name and method name .
subscribe to the given method .
subscribe the given pattern
returns the count of messages in the given { @link } .
sends a message to the remote server .
sends a request to the client .
sends a synchronous request synchronously .
sends a push request to a remote server .
get the revocation list of the request .
perform a synchronous call on the specified request .
sends a request to a remote server .

send a remote client to a remote server .
sends a response to the client .
sends a response to the client .
sends a response to the client .
sends a response to the client .
sends a response to a stream .
poll for the specified timeout
closes the remote server .
checks whether the given exception is a static or indirect local .
returns a new { @code t } instance with the given { @code t } .
/ * -
awaits the lock state of the given lock state .
awaits the state of the given state with the given state .
create a worker worker from the current thread .
adds a worker worker to the worker .
create a worker from a worker pool of the given worker .
removes a worker from the queue .
/ * ( non - javadoc )
release the current thread .
this method is called by the main worker thread .
scans the given { @code } and returns the { @code } .
await the number of outstanding blockencoderequest processing .
this method is called from within the same thread as the method of the given task .
returns true if the given queue is a spare buffer . if the scan is not a spare buffer we have to acquire a spare buffer .
returns the number of up to the current thread .
terminate the timer .
/ * ( non - javadoc )
called when a push task is started .
returns a { @code } recovering the queue of the given { @code } .
this method is called by the { @link ( runnable ) } method to determine whether the task is in the queue .
this method is called by the { @link } to find the first available slot in the given { @code taskqueue } .
invoke the specified task with the given arguments .
submits a forkjointask to run the task .
returns the number of tasks in the pool .
creates a pool with the given { @code name } and { @code } .
applies the given { @link } to the given { @link } .
pushes a task to the given {
returns a { @code } blocking blocking { @link future#get () } on the given { @link time } .
returns a new { @code } instance .
/ * ( non - javadoc )
{
build a string with the given code and
/ * ( non - javadoc )
{
returns a view of the elements in the list .
creates a new list with the elements in the supplied list of elements .
<p > creates a new <code > list< / code > element . < / p >
returns a {
{
returns a set of elements that the elements of the specified collection is empty .
creates a set of elements of the specified { @link iterable } .
creates a set of elements from the given iterator .
creates a set of elements of the given iterable and returns the set of elements of the given iterable .
returns the first string of the specified separator .
finds the best candidate for the given element
returns true if the given iterable contains all of the elements in the given iterable .
mostly to () on the specified function2 and the given multiset .
applies the given { @code } to the given { @code type } .
mostly to wrap a collection of elements in a collection .
sets the set of { @code iterable } s to the supplied { @code iterable } .
flatten a collection of { @link iterable } s into a collection of { @link iterable } s .
returns a list of all elements in the iterable .
returns a set of all {
collects all elements of the supplied collection of objects in a collection .
collects the elements of the supplied multiset using the provided multiset .
collects all of the supplied objects in the given collection of elements and then closes the supplied collection of elements .
returns a collection of objects with the specified elements .
returns a list of all elements in the given collection of objects .

mostly a collection of objects to a collection of objects .
mostly a function to a map of objects and return a map containing the elements of the collection .
<p > applies the combinator { @code iterable } to the given { @code iterable } . < / p >
<p > applies the combinator { @code } to the given { @code list } . < / p >
returns a new array with all the elements in the given collection of objects .
returns a new {
新建一个hashset
creates a new {
converts a list of { @link iterable } into a { @link list } of { @link iterable } objects .
<p > returns a collection of objects that contains all the elements of the specified collection . < / p >
returns a list of all { @link } objects .

creates a { @link linkedhashmap } instance with the specified { @link } .
将键列表和值列表转换为map<br > 以键为准，值与键位置需对应。如果键元素数多于值元素，多余部分值用null代替。<br > 如果值多于键，忽略多余的值。
returns a { @code hashcode } that applies the given { @link consumer } to the provided { @code keyselector } .
partitions { @link } into a { @link sparsearray } .
compute the leaf entries for the tree .
pushes the given task onto the stack .
pushes a new { @link } to the given { @link } .
removes the first second from the given { @link } .
pops the given <code > / code > to the given <code > / code > .
returns a {
returns a { @code hashcode } that stores the specified values in the given { @code iterable } .
collects the { @link } with the given { @code key } .
merges the leaf nodes in the tree into the specified tree .
returns a new { @code } that is a { @code } .
returns a new { @code } with the given elements .
returns a new <code > collection< / code > of <code > crl< / code > elements the given iterator with the provided key .
sequentially iterate over keys from the supplied multimap .
{
{
creates a new instance of the given elements .
returns a set of keys contained in this dataset .
loads a model from the given name and returns the result .
normalizes the given name and returns the result .
{
initializes the .
/ * ( non - javadoc )
{
append a char array to the buffer .
returns a new array with the specified length .
returns the index of the first occurrence of the specified character at the specified index .
returns a subsequence of the specified substring in the specified range .
appends the specified string to the buffer .
returns a list of binary elements .
returns a comparator that compares the elements of the list .
find the first element in the stream .
serialize a type to a json string
{
{
{
{
add a method to be used .
add a new handler to the given endpoint
ends the patterns that match the given regular expression .
sends a email message to the given email .
sends a message to the supplied message .
bind the given binding to the list of methods .
bind the given binding to the given binding .
checks if the given request is a valid httpservletrequest .
checks if the etag is valid and returns true if the etag is valid .
sets the response header to the content of the response .
returns the parameters of the request . <p >

encode a string using the
{
returns the app configuration for the given application .
render the given string .
render the template and return the template string template .
generates a html html code for a html page .
get int int int value .
returns the filename of the file name .
returns the extension file extension for the given path .

clean up path segments .
trims the array of <code > array< / code > that is the array of <code > array< / code > .
removes all the occurrences of the specified array of strings .


fill the string with the specified width and height .
fill a number of hex chars .

converts the string to a digit string .

converts the given string to a binary string .

remove the first occurrence of the specified string .
******************* beginning of function ******************** //
escapes html characters .


run the .
{
login to the user using the given login user and password .
logs a logout request .

get the user s login user .
sets the login login for the session .

saves the login - to - cookie using the .

returns the user from the given request .
加密
returns a {
decrypt the given string .
decrypt the specified byte array to the specified byte array .
create a new { @link } with the given message and message .

creates a new { @link } with the given message .
creates a new { @link } with the given data .
creates the { @link } for the given data .
creates a new { @link } with the given message .
constructs a new { @link } instance with the specified message .
/ *


generates a key code for a given .
encrypt password with pbkdf2 .
{
returns all methods in the set of methods that match the given method name .
creates a new { @link } .
validate that the list is empty .
create the rsa key for the given controller .
returns the annotations annotated with {
returns the annotations annotated with {
<p > checks if a method call is present . < / p > <p > if the annotation is not found in the annotation that is not found in the annotation are not present in the annotation . < / p >
logs a token .
login to login using username and password .
<p > <span class = changed_modified_2_2 > | | | | | | | | | | | | | | | | | | | | | | | | | | | |
append the separator to the beginning of the file .
/ * ( non - javadoc )
/ *
returns the ip address from the request .
/ * ( non - javadoc )
gets the cookie from the request .
set a cookie .
returns the server name for a hostname .

returns the port of the request .



checks if the request is not a valid ajax request .

log a message with the given message .
get the command line level for the given level .
sets the error level .
sets the color of the .
sets the color of the .
gets the hints hints for the given .
sets the response to the given context .
sets the validator to be used for the validator .


create a column with a date .
replace the pattern with the given pattern .
converts a byte array into a byte array .
converts a charsequence into a byte array .
converts a byte array into a java array of hexadecimal flags .
converts a byte array into a byte array .
converts a charsequence into a byte array .

checks if the given character is a valid netmask .
returns the index of the specified character in the given string .
returns the index of the first occurrence of the specified character sequence .
checks if the given string contains a string value .

returns the locale data for the given locale .
returns the locale specific country for a country .
returns the locale of the specified locale .
<p > . < / p >

returns the number of formats that are the same as the given locale .
binds the content to the given context .

render the template using the specified freemarker template .
/ * ( non - javadoc )
awaits the task s { @link } and { @code }
{ @inheritdoc }
create a new resource from the classpath .
returns the media type for the header of the given request .
resizes the specified compressed file to the specified destination .
resizes the specified output file .
writes a file to the given file .
converts a file to a base64 encoded file .
add a file to the file .
creates a macro resolver resolver .
parse a template string .
invokes the stubbed executing method .
invokes the invokable executing method . <p > the invocation of this method is called by the invocation of the main thread . <p > the invocation of this method is called by the invocation of the main thread . < / p >
set the credentials for the client .
get the { @link } for the given { @link httpclient } .
renders the render error validation error .
render the text in the ajax request .
returns a string that contains the name of the page .
parses the current path and returns the path .
render the data for the given page .








gets the login login .
get the { @link } for the user .
get a datetime from the request .
returns the date time for the specified time . if the value is null the default value is returned .
sets the given list of items in the given list .
sets the response to the status code .
/ * ( non - javadoc )
registers a {
decode a base64 encoded string .
encode a string into a string .
encode a url to a url
decode a url .
returns a list of all the { @link injector } objects .
returns the full method name .

> > > > > > > > > > > > > > > > > > > > > > > > > > > > > > >
returns the { @link } for the metrics in the { @link } .
checks if the request is valid for the given request .
escape the given string with the given string .
wrap a {
returns a string representation of the stack trace .
checks if the given exception is a subclass of the given exception .
[ start ]



returns a charset from the file system .
returns a list of all the entities that match the given name
finds a list of a query from a query .

closes the xmlstreamreader .
closes the underlying writer .
copy the contents of the input stream to the output stream .
copy the contents of the specified stream to the output stream .
copies the given input stream to the given output stream .
copy the contents of the specified reader to the output stream .
copy the contents of the given input stream to the specified output stream .
copy the contents of the input stream to the output stream .
copies the content of the specified { @link inputstream } to the given { @link outputstream } .
reads a byte array from the input stream .
streams the stream to the stream .
compare two streams .
applies the given <code > / code > to the <code > / code > .
sets the value of the specified function to the set of functions .
sets the value of the specified <i > operation / i > <i > function - on / i > <i > i j< / sub > - all = value value in the argument set to <i > i . i . e . the function assigns the function to be a function .
sets the value of the specified function to the set of keys .
sets the value of the specified object with the specified name and index .
sets the elements of this predicate to the specified predicate .
sets the elements of the specified element in the specified value .
sets the value of the specified <code > name< / code > element with the given name .
sets the value of the specified element in this fluent iterable .
removes all the elements from this map .

unmarshals the given source into a { @link } .
apply the apply to the request context .

returns true if the given url is a jar file .

zip the file into a zip file .
unzips a file into a directory .
sets the response content to the content type .
initialize the logging manager .
factory method for creating a new instance of .
{
compares two strings with the given match .
returns true if the given type is a {
returns true if the given type is a collection of type { @code null } .
returns true if the given type is supported by the { @link } .
returns true if the type is a primitive type .
returns the type of the type of the type of the type .
returns the default { @link } for the given type .

checks if the given type is a user or type .
add a value to the given class .
returns the raw raw type of the raw type .
matches a regular expression pattern against the regex .
checks if a value is valid and is a valid value .
<p > checks whether the specified value is a valid postal string . < / p >
check if a value is a boolean .
check if a value is a phone number .
checks if the given value is a valid cron expression .
checks if the given string is a valid identity .
returns true if the given code is a zip file .
checks if the given value is a valid currency value .

checks whether the given value is a url .

<p > checks if a value is blank . < / p >
creates a { @link } with the specified content .
renders a graphviz image .
returns a string representation of the given file .
converts a file into a string .
converts a url into a string .
converts a buffered image into a bufferedimage .

{

<p > process a netscaler . < / p >
/ * ( non - javadoc )
{
/ * ( non - javadoc )
{
returns the servlet configuration .
returns the version of the package .
returns the template path for the given template .


converts a hex string to a byte array .
reads the properties from the input stream .
read content of a string .
read a string content from the file .
reads the content of the file from the file .
read the content of the input stream .
writes the given byte array to the output stream .
write the given stream to the output stream .
write a file to the output stream .
copies the given source file to the target source .
opens a new { @link } .

compares this { @link } to the specified { @code } .
adds the specified currency to this one .
subtract the given { @code money } and returns the difference of the same currency .
a signed bigdecimal with the specified rounding mode .
divide a currency into the result of this one .
allocates a new instance of the specified { @link } .
allocates a number of bytes that have been read .
creates a new instance of { @link } with the specified { @link } .
creates a new handler handler for the specified user .
loads a list of usernames from the source resource bundle .
serialize a document to a xml document .



validate the digital signature .

get the default class loader for the current thread .


checks if the given class is a cache .
returns the file name for the given class name .
returns the package name of the class .
returns the package name of the given class name .
returns the qualified name of the specified class .
returns the name of the method that is a method name .
returns a constructor that is annotated with {
returns the number of methods that are not declared in the class hierarchy .
checks if the given method is a privileged method .
checks if the given class is a primitive wrapper .
returns true if the given class is a primitive primitive int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int primitive int int long short long short long short long .
returns true if the given array is primitive .
resolves the given { @link class } to a { @code } .
<p > checks if the given type is assignable to the specified type . < / p >
checks if the given value is a primitive type .
converts a resource path into a resource path .
converts a grails class path to a path .

returns the interfaces implemented by the given instance .
returns all interfaces implemented by the given instance .
returns all interfaces implemented by the given class .
creates a {
initializes the context filter .
write a file to the file .
add a key to the list .
apply the apply to the endpoint .
get pid of pid
logs a file to the specified file .
returns a map of variables for the given uri .
compares the given to the given .
/ * ( non - javadoc )
checks if the given class is a subclass of the specified class .
checks if the given interface implements the interface interface .
returns a map of fields that are not in the same field .
creates a new { @link } instance .
{
creates a {
returns the extension of the specified class .
compares two objects with the same type .
/ * return the value of the given list of type or null if not found .
returns the raw type for the given type .

/ * ( non - javadoc )

convert a string value to a string .


invoke the session with the given name .

initialize the database if needed .
set the .
set a field value .
sets the value of the field .





checks if the card is valid for the card .
validate the

validate the id of the .


returns the number of characters in the given array of characters .
returns the sum of all the number of 1s in the given array .
returns the code for the given .


gets the { @link } for the given id .
returns the display name of the specified id .

/ * [ deutsch ] <p > erzeugt ein neues kalenderdatum am . < / p >
returns the value of the parameter with the given key .


set the .
/ * ( non - javadoc )
sets the { @link } instance to the specified { @link } .
<p > . < / p >
checks if the current user has the permission granted to the current permission .
show dialog .
starts the user with the given permission .
perform the {
returns true if the given value is a list of values .
checks if the given value is a valid value .
returns the method invocation handler method invocation .

returns true if the given object is a public key .
select a select select from the given select select .
find the first record in the given sql select statement .
delete the given model id .
returns true if the given column is a valid column .

/ *
returns true if the given method is a public method .
process the queue .
{
constructs a new { @link } with the specified { @link } .
visit a parameter .
{
matches the given string with the given pattern .
initializes the gui .
main method to run the main script .
/ * ( non - javadoc )
registers a {

this method is called to set the properties of the current .
this method is called to set the property .
returns a new instance of the interface instance .
read arguments .
reads the next reader from the stream .
associates the specified value with the specified key in this map . if the value is not present in the map the value will be replaced .
removes the specified key from the map .









<p > filter . < / p >
this method is called to set the properties of the current .
this method is called to set the property .

/ *















converts a json string to a json string .
close the connection .
closes the prepared statement .
closes the database .
get the property value of the specified <code > / code > property .
<p > fill the specified field . < / p >
sets the border of the border .
create a constructor with the given constructor .
get the access token for the token .
send a request to the target string
send a { @code } with the given { @code name } and { @code string } .

send a { @link } with the given { @link } .
send a request to the specified string .

send a body request to the specified target .
send a request to the target body .
send a message body to a remote output .
send a request to the provided string using the provided stitch method .
send a body of a user to a client .
send a body of a user to a user using the provided url .
send a body to the specified client using the given password .
get the http method for the given request and response .
method to get the httprequest value from the given request .


returns the user - configured credentials for the given username .


resolves the url to the given url .
returns a filtered filter that matches the given collection of elements .
returns a list of elements in the specified element .
specifies that the elements of the given element is a descendant of the given element .
{
authenticate with the given user and password .
get the full record record for a given user .
get database database .
add a single value to the specified range .


multiply a double value from the given { @code double } .
multiply a double value from the specified { @code double } .
提供 ( 相对 ) 精确的除法运算 当发生除不尽的情况时 由scale指定精确度
提供 ( 相对 ) 精确的除法运算 当发生除不尽的情况时 由scale指定精确度
rounds a rounded scale to the nearest scale .
rounds the specified scale and scale to the nearest value .
converts a float to a float .
converts a double value to a double double double .
register a controller on a controller .
parses the given date string and returns the date .

copies the attributes of the given target object to the target object .
copies attributes of the given attribute to the target object .

visit a class declaration .
<p > fill the request . < / p >

{
converts an array of elements into a single array .
returns the collection of elements of the collection of elements in the specified collection .
returns a list of elements of the given elements .
specifies that all elements of the specified collection is not a list of elements .
copy the contents of a stream to the output stream .
copy the contents of the given stream to the output stream .

convert date to str date
converts a date string to a string .

get the properties of this property .
set a property .
adds a new frame to the toolbar .
{
{
prints the help menu .
parse the command line arguments .
initialize the properties of this object .
initialize the properties of the specified properties file .
/ * ( non - javadoc )
{
{
initialize the properties .
initialize the properties file .
adds a file to the file .
adds the controls to the menu .
this method is called by the user to configure the .
this method is used to set the properties of the current component .
returns the url of the classpath that is loaded from the classpath .
get the specified jar file .
get authenticator for a given { @link } .

loads a class from the given class loader .
loads a class from a class loader .
returns the canonical class name of the class name .

get resource stream from classpath resource .
get the input stream of the given class .
returns the file name for the specified class .
initializes the uri with the scheme .
initialize the uri and return the uri of the uri .


initialize the path for a uri path .
returns the part of the url .
sets the scheme to be used for the scheme of the scheme . if the scheme is not null then the scheme will be set to the scheme .
sets the value of the specified section .
sets the host and port of the host .
sets the port to be used for the port .
sets the path to the path .
append the path to the path .
sets the query string to be used for parsing .
sets the fragment fragment .
returns the uri of the uri .
checks if the given string is a valid string .
encode a string to a byte array .
encode a string to a string .
<p > . < / p >
creates a prepared statement by applying the given query parameters .
creates a prepared statement for a prepared statement .
initializes the object .

/ * ( non - javadoc )
get the clipboard contents .
set the clipboard contents .
removes the menu item from the given component .
opens a stream of file .

sets the service parameters .
get the parameters of the given service parameters .
returns the service reference for the given clientid and id .
find a single instance of the class with the given class .

parses the response query and returns the response .

returns a list of span for the specified user .
shrinks the buffer to the buffer .
appends the specified element to the buffer .
append the buffer to the buffer .
returns the contents of this buffer as a { @code int } .
{
format a string .



format a string in the format of the xml document .
get the xml xml string from the xml string .




parse the given value to the given value .
initialize the for the given .
returns the driver class name for the url .
{
returns a map of keys and values .
returns the last modified time of this date / time .
sends a message to the client .
{
<p > . < / p >
returns true if the specified class is a fully qualified class name .
<p > checks if the given <code > object< / code > is a <code > java . lang . object< / tt > value . < / p >
returns a new instance of the connection manager .
/ * ( non - javadoc )
creates a callable statement for a callable .
returns the entry at the specified index .
<p > . < / p >
get a {
{
visit a package declaration .
visit a visitor for all classes declared in the class tree .
visit a class declaration .
visit a class .
adds a new to this panel .
add all the screen listeners .
/ * ( non - javadoc )
this method is called by the jsf framework . () and () to reset the state of the menu .
/ * ( non - javadoc )
builds the properties from the properties object .
returns the option value for the given key .
<p > update entity . < / p >
returns a {
<p > returns a { @link } that is a { @link methoddescription } that is a { @link } . < / p > <p > the class is a { @link } that is a class that is a { @link methoddescription } instance .
returns a new { @link } for the specified filter and any other super classes .
returns a new { @link } for the given filter and clauses .
returns a list of all { @link } s .
returns a list of all elements in the given collection of { @link } s .
returns the map of map entries that are not in the map .


get super class for the given class .
get the super type for the given class .
get the class of the super class .
get the interfaces that the given class is a public interface .
returns the { @link } for the given type .
get the interfaces implemented by the given class .

adds the controls to the menu bar .
this method is called to set the properties file .
this method is called to set the contents of the current menu .
initialize the recordowner .
initialize the data store .
adds a file to the file .

{
returns true if this stream contains the next element .
/ * ( non - javadoc )
adds the controls to the menu bar .
restore the current properties and the default value .
print the properties of this file .
/ * ( non - javadoc )


builds a properties object from properties .
copy map source map to source map .
initialize the properties .
initialize the properties file .
{
add a file to the file .

associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
{
match the given path against the given path .
audit notification event for the given audit audit logged in .
main entry point for the properties file .
run the command line .
processes the source file and transforms the list of files into the destination file .
/ * ( non - javadoc )
replaces all the occurrences of the specified with the given string .
convert a byte array into a string .
<p > read . < / p >
<p > read attributes . < / p >
returns a list of indexes for the given name .
parse a string representation of a sql element .
get the form of the form .
returns a model instance for the model .
{
<p > . < / p >
process the given list of { @link } s .
authenticate with the given user and password .
<p > . < / p >
initialize the properties of the specified properties .
{
adds a file to the file .
/ * ( non - javadoc )
returns true if the column is a column in the geopackage .
returns true if the columns of the given type is a valid column .
returns the sql type of the given type .
returns the identifier of the specified name .
checks that the given executable executable is a list of type <code > / code > .
find the best search for the given parameter name .
<p > checks if the specified array is a parameter type . < / p >
writes the character to the beginning of the character array .
normalizes the given path to a path .
concatenates the parent parent parent path .
returns the relative path of a path relative to the given path .
<p > . < / p >


create a new instance of the class .
returns the constructor of the specified class .
returns the first constructor that matches the given class parameter .
get the method name of the given class .
search for the method name and class name .
returns the {
create a new instance of the {

serialize a object to a object .
serialize a given entity to a dto .
convert a collection of objects to a collection of objects .
set the value of the property .
sets the value of the specified field to be used for the given field .
checks if the given file is a valid file .
{
<p > . < / p >
returns a new instance of the class .
returns a map that maps labels to the nearest label of the given labels .
extracts the values of the values in the given map and returns the values of the values in the map .
{
returns raw raw type for the raw type of {
resolves the type of the given variable into the { @link } .
returns the type of the given type .
get the generic type of the given class .
<p > fill the record and add it to the map . < / p >
returns the last modified time of the given node .
initialize the properties of the client .
initialize the transfer properties .
{
adds the next file to the file .

returns the next poll .
checks if the process is in the process of the process .
returns a instance of the specified class .
gets the instance of the given class .
循环向上转型 并强制设置为可访问 .
returns the declared methods declared by the given class .

returns a constructor that is declared in the super class .
returns the constructor of the given class .
returns the declared methods annotated with the given annotation .
get the declared constructors for the given annotation class .
{
{
closes the database .
creates a new instance of the callablestatement
{
adds the specified component to the panel .
this method is called when the property is set .
this method is called to set the property .


initialize the properties of this object .
{
{

/ * ( non - javadoc )
create a job from the url .

/ * add a cookie to the url .
prints the bytes to the output stream .
returns the class of the given class name .
/ * ( non - javadoc )
sets the last date to the last date .
read class file .
resolves the given string to a string .
trims a string to be a string .

returns a default string for a given string .
returns a default string for the given string .
compares two strings ignoring case considerations .
returns {
test if the given string ends with the given suffix .
returns the index of the first occurrence of the specified string .
returns the index of the specified substring of the specified string .

returns the index of the specified character in the given string .
returns the last index of the last index of the specified startindex and returns the index of the last index .
returns the index of the last index of the last element in the specified string .
returns the index of the last index character in the string .
returns the index of the last occurrence of the specified string .
returns the index of the last occurrence of the specified substring of the specified index .
returns a substring of the specified substring of the specified string .

returns the substring of the separator string .
returns the substring of the separator string .
returns the last separator of the specified separator .
returns the last separator separator of the separator string .
returns a substring of the given tag .



repeat a string in a string .
repeats the given string with separator .
trims the whitespaces from the given string .
removes a substring from the specified string .
removes a substring from the specified string .
remove a trailing whitespace from the specified string .
remove a trailing whitespace from the specified string .
removes a string from the specified string .
remove a string from the specified chars .
<p > . < / p >
{
{
{
/ * ( non - javadoc )
/ * ( non - javadoc )
cleans up the state of the current state of the database .

initialize the queue message queue .
initialize the validator .
initialize the .
<p > update entity . < / p >
{
/ * ( non - javadoc )
adds the controls to the menu .
this method is called by the method .

returns the locale specific locale .
returns the locale specific locale .
returns the locale of the specified locale .
======================
resolves the locale for a locale .
returns a string representation of the given locale .
returns the date format for the given locale . <p > this is used by the method .
returns the number of formats that are not in the format of the given locale .
returns the locale info for the given locale .
returns a statement that is a statement that is a statement that is a statement .
clear the size of the list .
pushes the element to the element at the end of the list .
pop the element stack from the stack .
returns the stream to close the stream .
returns the { @link charset } that is read from the { @link charset } .
read properties from the file .
write properties to a file .
parse the properties and arguments .
add the given properties to this request .
registers the given action .
get value of the specified type .
initialize this properties .
creates a new { @link } .
adds a new selection item to the criteria specified in the combo box .
creates a new panel with the specified panel .
get the path info for the servlet request .
encode a string using the given username and password .

checks if the server is valid for the given request .
sets the parameter .
{
/ * ( non - javadoc )
builds the properties for the given properties .
matches a path expression
returns the path of the path in the path .
returns true if the tokens match the given tokens in the given string .
moves the next block to the next block .
returns true if the current position of the given element is the same as the other .
returns true if the given <var > x < / var > is a rectangle .
returns the intersection of this .
returns the union of this union of this union of this one .
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > return the right - side of this
replaces the nearest coordinates of this object with the specified value .
returns the overlap of this .
returns the highest overlap of this .
get filename from path .
get the file extension of the given path .
this method is called to set the properties of the current .
this method is called to set the property .
get the column value of the specified column .
get the row at the specified position .
get the relative position of the specified location .
get the area of the area specified by the specified rectangle .
returns the area of the area that is in the area .
find the first cell of the given cell .
returns the cell index of the specified <code > / code > .
calculates the columns to the grid .
calculates the rows of the rows in the grid .
replace the name of the parameter with the given name .

get the singleton instance of the object .
<p > . < / p >
adds the given <code > / code > to the panel .
returns a {
append the given element to the buffer .
append a bytebuffer to the buffer .
digest the bits from the digest .
dumps the specified byte array to a byte array .


add a bean to the bean builder .

adds a bean to the bean builder .
<p > adds a bean to the specified object . < / p >
add a bean to the class .
adds a bean to the java . lang . string .
{
{
unwraps the given type of the specified type .
main method .
update the specified code chunk .
copy the contents of the buffer to the buffer .
renders a list of commented to all instructions .
visit a .
visit a symbol .

{
initializes the current runlevel .

query the results of this query .
adds a child node to this tree .
clear all children of the given parent node .
returns the next element in this iterator .
returns the next element in the list .
adds a new rewrite body to this symbol .
adds the given instructions to the given list of instructions .

/ * ( non - javadoc )
registers a panel for the given panel .
process the given { @link } .
add a layout component component .
remove a component component from the map .
returns the preferred width of the specified parent .
/ * ( non - javadoc )
update the component properties .
returns a new instance of the specified url .

visits the visitor to be used by the visitor .
starts the server .
{
applies the transformation to the .

compare two collections of objects .
method to get the .
get the content of the response content .
method to get the url to the url .
method to generate a boolean value for the given value .
method to get the long value of the
method to get the value of the property .
method to get the value of a .
checks if the current response is a valid .
/ * ------------------------------------------------------------
render the html tag .
renders the button of the button .

test if the current step is the first step .
resets the state of this builder .
initialize the properties of the specified instance .
returns the value of the element at the specified key .
returns the index of the specified key in the specified key .
puts the specified value into the specified value .
set the value at the specified position in the specified value .
removes the mapping from the key .
removes the mapping from the specified bucket .
checks if the property is a getter .
sets the value of the property in the given object .
/ * ( non - javadoc )
checks if the given type is a subtype of primitive type .
init method .
called when a change event is received .

{
initializes the .
returns a list of { @link } s that are not included in the { @link } .
checks if the given term is a valid assignment .
returns true if the given { @code } is a variable of { @code } .
ends the scope of the given { @link } .
compiles a statement to a statement .
compiles the given clause to the given clause .
/ *
finds the maximal maximum length of the given clause .
/ * ( non - javadoc )

/ *
/ *


/ * ( non - javadoc )
returns a string representation of the given length .
sets the id of the node .
returns the value of the value of the given class .
sets the value of the stringvalue to the given value .
parse a {

returns a list of item items for the specified type .
checks if the given class is a valid class name .
checks if the given class name is a parent class .
checks if the given parent is a parent .
checks if the given class is a parent class .

create a new instance of the class .
creates a new instance of { @code } with the specified constructor arguments .

call method on the given object .
invoke the method with the specified parameters .
returns the first constructor found in the constructor .
finds the best matching class for a given class .
render the table columns .
returns the action to the url .
returns a queue with the specified queue .
returns a queue that contains the queue of the queue .
returns a new <code > function< / code > object that contains the queue that will be used to create the queue .
returns a queue that returns a queue that is associated with the queue that is associated with the queue .
<p > creates a new <code > any< / code > that will be used to create the queue . < / p >
<p > creates a new <code > any< / code > that will be used to create the queue . < / p >
returns a new <code > function< / code > object that contains the queue that will be used to create the queue .
get the type of object .
resets the state of the current thread .
adds a new { @link } to the list of states that will be used to run the { @link } .
search the path in the search chain of the search filter .
search for the value in the path .
{
creates a new instance of the specified type .
returns all the values in the set of integers .
returns an iterator over the elements in the iterator .
returns the result of {

creates a {
{
/ * ( non - javadoc )
{
{
{
check if the given dimension is valid and the dimensions of the given dimensions .
{
/ * ( non - javadoc )
sets the name of the property .

add a dimension to the table .
build the {
{
finds all variables in a given query .
finds all variables that are not declared in the given { @link } .



compare two search .
read a file from the file .
read a file from the file .
writes a file to the output file .
reads a stream from the stream .
adds a new element to the front of the list .
removes the specified element from the list .
inserts the specified element at the specified index .
removes the specified index from the specified index .
adds all of the elements in the specified collection to the specified collection .
called when the statement is in the statement .
visit a { @link predicate } that will be called when the { @link } is called .
search the node of the given state .
{
generate the trace indentation of the .
/ * ( non - javadoc )

creates a new { @code } with the radix { @code part1 } .
create a that is a sub - tree .
check if the given variable is a local variable .

learns the { @link } for the given { @link } .
get the classification statistic for a given property .
checks if the given property is a descendant of a property .
returns the best match for the given property name and value .

/ * ( non - javadoc )
returns the variable name for the given variable .
execute the action .
returns a list of the elements in the specified list .
paints the foreground of the mouse light .
paints the background of the mouse over the zoomed grid .
returns the minimum size of the current dimension .
sets the texture for the .
/ * ( non - javadoc )
paints the foreground of the rectangular region .

creates the graphics for the graphics frame .
create a bitmatrix with the given and dh
this method is used to set the dct for the .
visit a predicate .
returns a new instance of a { @link } .
{
process a json string .
process the process .
/ * package private
handles the error message code and returns the response .
handles a { @link } .
split a key and a pair key .

restore the current restore state .

called when the statement is in the statement .
visit a predicate that will be called by the () method .
this method is used to add a new algorithm to the queue that is used to compute the algorithm for the given algorithm .
finds the search for the given search step .
opens the grid window .
method to generate a relationship for a given .
method to generate a url for the url
the method is used to perform a request .
checks if the given object is a valid .
finds the search from the given search step .
resets the {
/ * ( non - javadoc )
<p > . < / p >
negates the given source .
{

gets the term from the source .
<pre > : < / p >
/ * ( non - javadoc )

gets the variable term with the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a literal literal literal .
advance to the next token in the current token .
/ * ( non - javadoc )

initialize the .
consumes the next token from the token stream .
consumes the next token in the input stream .
{
rolls back this transaction .
iterates over the iterator in the iterator .
/ * ( non - javadoc )
call this method to call {
converts a julian day to a { @code int } .
converts a julian calendar to a long .
converts the specified time into milliseconds .
converts a julian time to a long .
converts a { @code long } to a { @code } .
sets the specified number of hours to the specified number of hours . <p > this method is similar to { @link ( long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long
sets the specified amount of time to the specified duration in nanoseconds . <p >
sets the specified time to the specified number of seconds .
sets the value of the specified year to the specified year .
sets the value of the specified { @code year } to a { @code int } .
sets the specified date to the given date .
returns the millisecond year for the given year .
write a 64 - bit long value into the buffer .
encode a byte array into a byte buffer .
returns the year - year for the given year .
reads a byte from the stream .
reads a byte from the specified byte array starting at offset { @code off } .
returns true if the given key is present in the specified key .
removes the mapping for the specified key .
clears all entries in this map .
this method is called by the method .
returns the key for the key .
finds the entries of the specified entry in the map .
rehashes the hashtable to the next one .
thomas
thomas

called when the view is a child of the given layout .
this method is called when the action is pressed .
sets whether the change is available to the fire - channel .
enables / disables the property . <p > this is a convenience method that is called when the change is called . this is used to set the property . <p > this is a convenience method that is called when the change is called . this is used to set the property . <p > this is a convenience
sets whether the change event should be run . this is used to write the changes to the change listener .
get the for the given symbol table .
returns a {
returns the expected value of the given probabilities .
computes the integral of the specified array of doubles .
calculate the squared probabilities of the probabilities of the probabilities of the probabilities of the given probabilities .
returns the number of observed correlated between the two specified values .
accept the visitor for the given visitor .
compares this date - value to the specified date . <p > the comparison is based on the day - of - year . < / p >
sets the time - year and day - of - year and day - of - year .
/ * ( non - javadoc )
/ * ( non - javadoc )

creates a new url with the given name .
get the information for the given page .
returns the value of the request .
get the value of the <code > / code > .
returns the parameters of the request .
returns the scope for the request .
returns a page of scope name .
returns a scope for the session name .
returns the application scope for the current context .
get the user principal name from the current user .
render the html tag .
generate a string representation of the property value .
tostring method .
finds the node with the given search filter .
sets the current state of this .
{
compares the search at the specified search range .
update the .
/ * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
notifies listeners that the change event is fired .
inserts character at the specified character at the specified position .
insert a string into the specified string .
creates a rectangular grid with the specified widths .
creates a new table with the given table and the specified table .
enter a variable reference to the given variable .
called when the is a new .
<p > removes all the { @link } s in the given clause . < / p >
returns true if the current scope is a parent scope .
returns true if the current level of the current level is visible .
adds all of the elements in the specified collection to the specified collection .
removes the specified element from this list if it is present .
returns an array containing all of the elements in this list with the specified objects .
returns the specified array in the specified array .
returns the element with the specified element .
get a document from the specified url .
accept the visitor for the given visitor .
applies the functor to the target class .
sets the arguments to be used for the arguments .
returns the for the given .
returns true if the given { @link } is a { @code } .
compares this object with the specified object .
/ * ( non - javadoc )
enables the buttons for the button .
/ * ( non - javadoc )
adds a controller flow to the controller .
perform the actual step of a step .
returns the factory for the given class .
set the color of the background .
creates a component factory that will be used to create a component factory that will be used to create a component factory that is used to create a component factory that is used to create a component factory that is used to create a component factory .
returns the binding key for the given variable .
returns true if the given variable is a valid .
get the value at the specified value .
sets the column column column value .
sets the row attributes .
get the column column value from the column
get the row attribute .
insert a value into the cell .

creates the grid panel .
creates a panel with the specified colors .
creates a panel with the color .
create a new instance of the type of the specified type .
creates a new instance of { @link } .
visit the given visitor visit the given visitor and return the result .
create a new instance of { @link } with the specified name and maximum length of the specified type .
<p > checks if the given value is a valid instance of the specified value . < / p >
returns true if the current position of the current top level top level position is visible .
returns true if the head of the current position is the first letter of the current head .
returns true if the last chunk is not a valid .
get the term from the current jsdocinfo .
returns the position of the current position in this buffer .
returns the parent context for the current context .
/ * ----------------------------------------------------------------------------
/ * ( non - javadoc )
creates a for the given <code > / code > .
creates a clause with the given clause and operator .
create the context context .
update the .
/ * ---------------------------------------------------------------------------- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
{
find the first node that matches the search algorithm .
performs a depth - first traversal of the ast .
transforms the variable into the variable .
get the index of the specified block .

get the properties from the property name .
sets the rate count .
reads the specified number of bytes from the specified byte array .
reads a byte array from the specified byte array .
skips the specified number of bytes in the specified stream .

applies a rule to the given set of predicates .
evaluates the given {
{

visit the
returns the element with the specified key .
returns the value of the {
reads a 32 - bit integer from the given byte array .
writes a 32 - bit integer to the byte array .
converts a byte array into a byte array .
read four bytes from the given byte array .
get the short short short short from the byte array .
writes a short - byte to the byte array .
applies the rule to the given list of predicates .
returns the value of the node that is the first element of the specified node .
returns a traversal that combines the iterators of the given operator .
returns a new nodeset that contains the elements of the tree .
returns the id of the given attribute .
returns the value of the {
sets the value of the attribute value .
converts a string to a comma - separated list of strings .
converts a string array into a list of strings .
converts a camelcase string to a camelcase string .
converts a string to a string .
returns a list of items that match the given type
unwraps the given type .
returns the current configuration .
creates a new instance .
sets the response indicator for the given message .
checks for the control and the result of the .
{
visit a .
visit a variable .
visit a predicate .
visit the clause of the {
visit a classnode .
visit a literal .
resolve the given { @code } to the { @code } .
checks if the label is not a label .
resolve the label label with the given label .
sets the .
sets the .
returns true if the given category is a sub category .
returns the id of the tree .
sets the id of the node .
returns the value of the specified level of the specified level .
get the last value of the path .
/ * ************************************************************************* java . sql . jackson . .
reads the attributes of the given object .
compute the corridor for the given node .
puts the specified value into the map .
checks if the given key is a bucket .
associates the specified value with the specified value in the specified value .
removes the specified value from the bucket and return the result .

adds a new error message .
throws an exception if the exception is not a valid error .
writes a string to the output stream .
called when the user has finished .
read a byte buffer .
write the data to the stream .
flush the stream to the stream .
shutdown the server socket .
traverses the predicates that the predicate is a sub - element of the tree .
traverses the and returns a that traverses the tree .
traverses a { @link plannode } that is a sub - tree traversal .
notifies the global symbol table .
returns true if the current node is a .
inserts a value into the specified attributes .
select the grid row of the grid select box .
/ * ( non - javadoc )
/ * ( non - javadoc )
method to generate a .
method to generate a typereference type for a given type .
method to add a property property to the server .
checks if the given type is a .
compares this object with the specified value .
creates a new node with the specified priority .
traverses a and returns a new that is a sub - tree traversal .
traverses a { @link plannode } that is a sub - tree traversal .
visits a symbol to be used for the symbol table .
visit a variable .
visit a predicate .
visit the clause of the {
visit a .
visit a literal .
{







returns the number of characters that are encodable .
returns the number of bytes that are not in the given value .
returns the number of digits in the range of the specified value .
creates a new { @link } with the given color .
set the color of the graphics foreground
perform the query step of the query step .
sets the head of the head of this node .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the order of the .
this method is called by the edt to run the { @link } and { @link } .
discards the given {
set the screen screen .
evaluate the predicate .
get the property name from the current thread .
get a property .
get the value of the property in the specified property .
get the properties of the specified key .
get the properties of a class .

returns the key iterator for the given key .
create a properties object from the properties .
build the term .
sets the rate value .

returns the {
set a property .

find the properties that are not found .
get properties for a property .
get the properties of the classpath .
returns the properties of the properties .
removes the given { @link } from the given { @link } .
returns the value of the {
{
{
/ * ( non - javadoc )

returns a subsequence of the specified substring in the specified range .
compares this slice into a { @code } .

computes the hash code for the given hashcode .
creates a new node with the specified priority .
clean up all threads .
append the event to the given log .
connect to the server .
/ * ( non - javadoc )
visit all { @link predicate } s that visit the visit predicate .
visit all {
visit a .
visit a variable expression .
initialize the for the given
print the table columns .
gets the items of the .
method to generate a link for the link .
method to generate the form form of the form .
checks if the given {
method to get the control control for a .
method to get the control value of the property .
sets the value of the property .
method to add control group control group to the .
starts the server .
checks if the given type is a .
called when the is a .
drops the given source and the current state of the line .
fills the current variable with the given variable name .
returns the value of the control property .
/ * ( non - javadoc )
commits the transaction to the specified transaction .
rolls back the transaction .

/ * ( non - javadoc )
acquire a lock .
release acquired lock .

{
inserts a { @code int } to this queue .
inserts a new amount of time into the queue waiting until the specified time elapses .
removes the head of this queue waiting until the element is closed .
waits until the specified time is completed . if the queue is empty then the timeout is returned .
returns the element that was previously stored in this queue .
inserts the specified element into the queue .
inserts the specified element into the queue .
waits until all elements of this queue is complete .
removes the specified collection of elements from this queue .
creates a new { @link } with the specified { @link } .
creates a new { @link } with the specified collection of { @code } .
inserts the specified element into the specified element .
this method is called by the method .
/ * ( non - javadoc )
sets whether the value of the specified property is not a valid value .
sets the value of the specified property to the specified value .
sets the value of the property to be used for the given value .
sets the value of the property to be used for the long property .
sets the value of the specified property .
sets the value of the property to be used .
sets the value of the property to be used for the given property .
sets the value of a property .
sets the value of the specified property to the specified value .
sets the value of the property to be used for the given value .
sets the value of the property .
sets the value of the specified property .
sets the value of the property to be used for the property .
sets the value of the property to be used for the property .
sets the value of a property .
sets the value of the specified property to the specified value .
sets the specified value to the specified value .
sets the value of the specified property to the specified value .
sets the value of the specified property to the specified value .
sets the value of the property to the specified value .
returns true if the property is not a boolean property .
returns the value of the property in the specified property .
returns the value of the property in the specified property .
returns a new node scope with the given name and node name .
sets up the node hierarchy .
/ * ( non - javadoc )
returns the url for the url .
search for the given search step .
/ * ( non - javadoc )
remove the element from the list of .
/ * ( non - javadoc )
get the code point of the specified point .
get the buffer of the buffer .
execute all variables in a set of .
returns a {
captures all fields in the given class .
restore the value of the specified object and returns the value of the specified object .
get the value of the specified attribute from the cache4id map .
add a character to the map .
get the list of all field names .
main method to demonstrate the main method .
execute the script interpreter on the server side .
appends the given script string to the output directory .
sets the buffer to the buffer .
get the value of the specified key .
add a new key value pair to the buffer .
inserts a item into the tail of the queue .
returns the element at the head of the queue if there is no such element .
creates a new node node .
creates a new node with the specified priority .
opens the grid window .
create a new {
{

{

adds a new domain to the list of { @link } s .
sets the query to be used for the query .
resolves the reasoner of the current context .
resets the query list to the builder .
search for the paths and returns the result .
returns a {
get the properties of the given input stream .
get the properties file .
get properties from url
get the properties of the specified properties file .

returns true if the specified name is a live name .
paints the foreground of the foreground grid .
calculates the grid size of the image .
initializes the font metrics .
add a propertychangelistener to the list .
adds a vetoablechangelistener to the list .
remove a propertychangelistener from the given property .
notifies the listeners that the event is fired on the given propertychangeevent .
creates a new instance of the specified type .
matches a .
/ * ( non - javadoc )
{
returns a {
accept the visitor for the given visitor .
show the main window .
displays the focus of the gui .
show the screen .
displays the focus of the scrollpane .
displays the title of the component .
set the key for the .
displays the horizontal bar orientation .
shows the layout of the bar panel .
shows the bar bar of the bar components .
get items from the list of items .
returns all links that match the given rel .
unwraps a type of type { @code type } .
sanitizes the given xml document to a xml document .
/ * ( non - javadoc )
wait until the delay is completed .
wait until the timeout is reached .
execute the script interpreter on the server side .
append the file to the output file .
creates a new instance of the specified type .
visit the given visitor visit the given visitor and return the result .
free the given {
returns the links for the given link relation .
called by the method to read the results .
prints the to the output .
read the command line options .
evaluate the query expression
/ * ( non - javadoc )
returns a {
get the type of a byte array .
get the type of a character .
get the {
returns a {
get the { @link } object .
get a { @link } instance .
get { @link } .
parses the string data .
get the type data from the object .
convert a binary type to a symbol .
converts a type to a single type .
adds a value to the map .
checks if the given column family is a column family .
called when a new { @link } is found .
enter a variable name .
returns true if the key is present in the key .
returns the value of the object associated with the key or null if the key is not found .
puts a new value into the map .
clear the clear of the specified key .
removes the specified key from the map .
clears the data .
returns an iterator that iterates over the elements of this iterator .
expands the index of the buffer at the specified position .
sets the value of the stringvalue to the specified value .
insert a string into the specified string .
returns the character at the specified position in this buffer .
creates a rectangular grid with the specified width and height .
creates a table with the given table and the given table .
updates the listeners .
inserts a character into the buffer .
parses the given { @link } .
checks if the given state is a { @link } .
compare two search .
accept the visitor for the given visitor .
{
sets the name of the .
gets the symbol name for a given name .
checks if the given symbol is a symbol .
expands the hot cues to the given node .

write the given stream to the stream .
writes a byte array to the specified byte array .
pad a string to a string .
returns the errors for the errors .
returns the options for the specified property .
get the usage banner in the option .
parse the command line arguments .
add a trailing - key pair .
{
add a new option to the list of arguments .

checks that the command line arguments are not included in the command line .

returns a { @link } for the specified tag .
set the options for this command line options .
returns the options for the given options .
sets the value of the tag property .
returns the {
returns the word s word s string representation of this word .
main entry point .

creates a new instance of the with the given name and maximum values .
sets the state of this state .
reset the current state of the buffer .
/ * ( non - javadoc )
get the memory footprint .
execute the given search .

print the stack frame to the given output stream .
/ * ( non - javadoc )
call the function to perform a function call .
call this method to perform a call to the .


returns a stack frame with the given position .
returns true if the next call to the next call to the next point .
bind the given byte to the given byte array .
remove a single occurrence of the specified value .
compares the specified value to the specified value .

checks if the given value is in the tree .
returns true if the given is a valid
prints the code to be used in the code .
returns a random state of the specified {
checks if the given state is a valid .
returns a new { @link } for the given operator .
returns a that is a css operator .
prints the output to the output .
this method is used to convert a tile to a tile coordinate .
update the operator .
/ * decrease the boundary of the line segment .

converts a list of { @link } into a { @link } .
log a logrecord with the specified log level .

converts the given level to a level .
inserts the specified element into the queue .
removes the head of the queue .
remove the element from the list of receivers .
returns the next record in the queue .
{
release the object to the specified object .
accept the object with the specified state .
returns the queue that is associated with the queue .
drains the specified element into the queue .
inserts the specified element into the queue .
puts a queue into the queue .
returns the number of queued buffers that are currently in the queue .
{

increment the size of the counter .
move the given count count to the given { @code count } .
wait until the number of samples exceeds the maximum size of the log .
lookup a lookup by name .
bind a jndi lookup .
bind the specified object to the specified object .
add a property to the object .
unbind the given name and its name .
renames the given string .
renames the specified name .
returns the name of the element .
returns a new enumeration generator that represents the given name .
returns a name of the name of the given prefix .
add a value to the environment .
remove the value from the database .

************* ****************
************* the right - hand side of the right - hand side of the number of the number of .
************* this method to set up the right hand side of the .
************* this as a string .
************* ****************
************* ****************
************* quotes ****************

:: = | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
select the selector .
************* expressions ****************
************* expressions ****************
************* this method to switch to the right - hand side .
expression
************* this function to switch to the right - hand side of the expression .

************* rule .
/ * ( non - javadoc )
************* stems ****************

/ * ( non - javadoc )
************* quotes ****************
************* :: = | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
*************
/ * ( non - javadoc )
************* stems ****************
:: = | | | | | | | | | | | | | ================================================================== | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
************* stems ****************
************* stems ****************
returns true if the given node name is a qualified name .
push a variable declaration .
write a stack trace to the log .
sets the maximum height of the row .
add a column to the column .
get the value of the specified row .
removes the grid row with the specified row .
get the maximum column size of the column .
adds a label to the cell .
update the listeners for the given column .
updates the column width and column width and column values .
execute the action and executes the response .
compiles the parser to explain the transformation expression
/ * ( non - javadoc )

execute the action .
compiles the given {


if the top level of the top level is present in the ast .
execute the given query expression
returns a string representation of the given .
clears all the fields in the map .
checks if the given key is a member of the given primary key .
adds the specified key to the map .
removes the key from the map .
returns a new scope with the given key .
returns the symbol key for the given key .
returns the value of the specified key in the specified key . if the field is not a { @code null } then the new value is returned .
increment the value of a key with the specified key .
clears the state of the specified key .
{
opens the .
{
wait until the current thread is running .
disconnects the current state of the current state of the current thread .
awaits the state of the current thread .
await termination of the given timeout .
adds a listener to be informed of the listener .
removes a listener from the list of listeners .
creates a new { @link jobstate } with the given state and the given state .
inserts the specified element into the head of the queue if it is not already present .
{
returns the number of n - th bits of the given integer .
/ * decrease the minimum and maximum value of the node .
compare two nodes .
inserts node into node .
pause the timeout .
restart the daemon .
get the value of the object with the specified key .
puts a value into the cache .
removes the mapping for a key .
puts all the mappings into the cache .
evicts all the threads in the cache .
method to generate a for a given .
method to get the control for a given .
returns a {
<p > returns a set of { @link } s that are not included in the given method . < / p >
returns a collection of method names that are not included in the method .
find all the sub - nodes of the given method .
finds all methods in the given collection of method s { @link list } .
opens the scroll pane .
returns the next element in the sequence .
get the buffer s raw buffer .
matches the given expression to the given { @link } .
/ * ( non - javadoc )
/ * set the value of the property to be used for the given values .
get the value of the specified property .
add a property to the value .
add a property to the map .

main method to parse a parser for a given .
called when the mouse button pressed mouse button .
mouse over the mouse dragging .
get the path .
gets a link for the given link .
pop a newline from the list .
returns the next sequence of the next sequence in the source buffer .
called when a is called .
update the specified .
prints the table s table .
defines the key - value pair with the given key .
converts a string to a string .
inserts a value into the specified attributes .
insert a column column column into the column index .
add a row row to the attributes .
update the change change event .
converts a string to a integer .
converts a string to a date format .



returns a { @link } for the given tokens .
returns a {
returns a { @link } for the given { @link inputstream } .
returns the next token from the token pool .
advance past the next token .
applies the given {
returns true if the instruction constant has a constant name .
returns true if the given instruction is a symbol .
checks if the given instruction is a symbol .
creates a new builder for a builder .
render the table columns .
returns the children of the given parent node .
query for the given query expression
accept the visitor for the given visitor .
evaluates the given { @link elementselector } to be applied to the given { @link } .
returns a union of the union of the union of the specified iterator .
check if the given number of matches .
returns the argument indices for the given index .

returns the children of the given children .
returns a copy of this query with the specified id .
{
returns the matched element for the given element .
converts the string to a string .
get the summary of a query .
query for a single evaluator query .
execute sql query .
called when a is changed .
called by () to update the buffer s buffer .
/ * ( non - javadoc )
called when the is changed .
returns a list of code chunk that contains the specified length and length of the specified block .
/ * ( non - javadoc )
returns the default instance of the default instance .
returns a random instance of the specified class .
sets the type of the type of type <code > type< / code > .
method to close the stream .
prints the results of the given solution to the given solution .
print the variables to the given set of variables .

applies all variables to the given set of variables .
sets the name of the .
<p > . < / p >
run the crawl .
reads the stream and returns the stream .
initializes the .

gets the time value of the time in msec time .

stops playback .
update the track info .
update the track information of the player playlist .
update the information of the volume
update the current progress information .
/ * ( non - javadoc )
{
{
handle the for the given resource .
handles the event dispatch event .
called when the dispatch of the request is ready .
start the watching request .
/ * ( non - javadoc )
initializes the thread .

/ * ( non - javadoc )
resets the parser .
read a { @link } from the specified thread .
process the packet .
set the option to be used for the option .
creates a new chat message .
get the login chat for the given
returns a human - readable list of inetsocketaddress that can be used to create a domain .
/ *
reset the content of the content of the .
set the property for the given key .
adds a filter to the list of filters .
processes the file and uploads the request to the file .
reset all properties of the given property .


add a acl ticket to the acl .
remove a permission from the acl .
remove a acl from the given acl .
get the principal value for the given principal name .
returns a list of permissions for the given permission .

commits the result .
initializes the connection .
sends the packet to the client .
returns the next packet in the queue .
opens the stream .
{
retrieves the correspondent schema for the given { @link } .
create a httpcomponents client client .
creates a { @link eventhandler } with the given type .
creates a { @link eventhandler } with the given type .
/ * ( non - javadoc )
creates a new { @link } .
{
add a listener to be executed on the listener .
/ * ( non - javadoc )
starts the dcp asynchronously and awaits until the given { @link } is received .
shuts down the server .
creates a new { @link } with the specified collection .
returns a filtered collection of { @link filter } objects .
compare two files .
removes the direct - memory - safe method that is used to perform a lazy delete operation .
rolls back the existing transaction .
checks if the entry is deleted .
returns the {
returns the hash of the given hash .
returns true if the given object is a point .
{
returns the entry for the key .
associates the specified value with the specified key in the map . if the map is empty the map is updated to be updated .
adds a mapping to the map .
resizes the specified capacity to the specified capacity .
/ * ( non - javadoc )
{
removes the entry identified by the given key .
remove the mapping from the map .
clears all the mappings from this map .
adds a new entry to the map .

creates a map from key to the map .
parses the date string .

parse the given string to represent a name .
parse a server - string - name into a server - side string .
parses the given string .

check if the given jid is a valid .
escapes the given node and returns a string representation of the given node .
unescapes the pegasus node of a given node .
encode the binary string to a string .
hashes a string with the given data .
encode a byte array into a byte array .
encodes a string into base64 format .
encodes a byte array into base64 notation .
decode base64 encoded string .
returns a random string from the given string .
{
pauses the controller controller on the controller .
sets the controller selector controller for the controller .
sets the current previous page of the current thread .
sets the current status of the .
set the controller for the controller .
sets the current location controller to the current thread .
called by the method to perform a custom .
handle the command line event .
handles a volume with the current value .
handles a request .
handles the response .
returns the cache of the specified cache scope .
returns a cache cache for the given name .
returns a request cache for the cache key .
deletes the specified user .
sends a topic to the specified user .
returns the value of the specified field from the given stream .

returns a map containing all entries that match the filter and exclude values from the map .

returns a pairtree path for a given path .
escapes the escaped string .
escapes the escaped string with the escaped string .

returns the {
{
returns a {
/ * ( non - javadoc )
get a new instance of a connection .

handles the delegation connection .
handle the outbind of the connection .
sets the ping interval to elapse .
ping server ping .

clears the server s object .

remove a specific thread
{
removes all children from the cache .
add a {
adds all options for the given options to the given options .
adds a option to the option list .
checks if the given option is visible .
parses the command line arguments .
display the usage banner .
parses the given string and returns the result as a { @code string } .
closes the presence of the connection .
initializes the connection .
reset the connection to the specified client .
/ * reset the current user to the server .
returns the compression handler for the given decoder
returns true if the specified {

close the stream .
connect to the server .
notifies the connection to the connection .
notifies the listeners that the amqp hook is sent .


authenticate the given username and returns the result .
authenticate with the given username and password .
returns the authentication information for the given {
get the value of the property
create a new lock .
/ * ( non - javadoc )
{
returns the home directory for the command line .
parses the command line arguments .
-------------------------------- info --------------------------------
--------------------------------
prints a string to the specified log stream .
creates a start event with the given start and end .
create start event start event .
notifies the listeners that the event is fired .
{
{
{
{
{

returns the cached map for the specified key .
returns the cache key for the given key .
remove a cached cache from the cache .
puts a new value in the cache .
clear the filter to exclude the filter .
get the breakdown of the stylesheet .
the method is responsible for closing the file .
the method is called from the jar file .
add the given element to the list of active providers .
adds the given {
create a .
/ * ( non - javadoc )
executes the specified rest api .
registers the listener for the { @link } .
registers listener for event listener .
writes a file to the output stream .
handle a file with a given consumer .

{




get a new instance of a given cluster .
get a new instance of a given cluster .
creates a new { @link } instance with the given name and password .
creates a new cluster instance with the given configuration and password .
creates a new { @link } instance .

starts the .
stops the monitor .
sends a new { @link } .
create a playlist .
create a new { @link } .

log a message at the specified level .
append the url to the url .
query the query parameter with the given name .
query the query parameter name .
query the query parameter name .
add a query parameter to the specified value .
get the { @link } for the given { @link } .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last :

checks if the given object exists in the given string .
< / editor - fold > // gen - end : initcomponents
creates a new image icon with the given path .
get the text label for the given path .
starts the main - heap .
adds a new array to the array .
exports the data to the data structure
returns the presence information for the given resource .
get the value of the value at the given index .

returns the default value for the given integer value .
returns the default value for the given value .
gets the string value for the given value .
create a command for the command and returns the command name .
checks if the given command is a command line .
checks if the given command is a valid .
verifies that the command is valid .
creates a new cluster cluster with the given cluster id and create the cluster .
creates a session for a session .
returns the cluster with the specified name .
gets the cluster with the given cluster name and password .
returns a session object that will be used to authenticate with the given session id .
returns the session id .
returns a session for the given user .
set the value of the { @link } for the given { @code value } .
set the value of the { @link } for the given { @link } .
{
{
{
query for all the given { @link dataset } .
execute the given query .
execute a statement .
creates a callback for the given callback .
execute a callback .
perform a batch of { @link } and returns a { @link } .
creates a new row .
executes a query synchronously .
{
execute a batch statement .
perform a batch of { @link } .
sets the jar file to be used for the filter .
returns all classes that are not found in the class hierarchy .
returns a list of all classes that are currently in the class hierarchy .
search for classes in the given package and subpackages .
search for files in the classpath .
search for the jar files and return the result as a map .
sets the resource to be used for the specified resource .
sets the provider to be used for the provider .
sets the consumer to use for a consumer .
returns a list of resources that match the given resource
returns the number of entries in the specified iterator .
{
{
waits until the next time request is received .
process the packet .
returns a set of { @link } s that are not the specified set of { @code } .
get volume value from the resource adapter .



create an error response with the given type and status code .
checks if the given {
returns a { @code map } that is the same as { @code } .
returns a comparator that can be used to sort the specified { @link comparator } .
returns true if the current subject is allowed to access the user .
sets the login login for the specified time .
accept { @link packet } .
/ * package
sets the name of the roster .
update the state of the given type .
returns a roster group for the given group .
returns true if the object is a valid .
returns the value of the cached element with the specified key . if no value is specified the value will be returned .
puts a { @link imodel } in the cache .
removes all children from the cache .
returns the list of all keys in the cache .
add a css element to the page .
/ *

/ * ( non - javadoc )
creates an empty event .
refreshes the connection to the database .
creates a new roster entry .
creates a new entry with the given name and password .
removes a roster entry from the specified entry group .
returns all roster entries for the given group .
returns the roster entry for the given user .
returns the presence presence of the presence of the presence of the presence of the presence of the presence of the presence of the presence of the presence of the presence of the presence of the presence of the presence of the presence of the presence of the presence of the presence of the presence of the presence of the presence of the
returns the roster presence information from the user .
returns all the roster that have been granted to the specified user .
returns the map key for the given user .
sets the roster of the user .
fire the event to the roster listeners .
sets the digest of the given .
{
sets the value of the value to the specified value .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a presence event for the given event .
creates a presence event for the given event .

clear all the existing keys .
set the current volume .
{
creates a { @link } for the player s players .
creates a { @link } for the player and creates a { @link } .
creates a { @link } for the given players .
create a request for the given players .
get the time from the given event .
register a listener for the listeners .
initializes the properties file .
reload properties properties from config file .
parses the error code and returns the error stream .
/ * ( non - javadoc )
parses the given { @code } and returns the { @code string } .
parse a packet extension .

creates a new { @link } instance .
creates a new { @link } with the given { @link } .
creates a start request and starts the knxnet / https fname .
creates a new { @link } with the given { @link } and { @link } .
creates a start request and starts the target resource .

creates a filter that is a filter that will be applied to the given { @code filter } .
creates a filter that is a sub - object that is a filter that matches the specified filter .
creates a new { @link filter } that is less than the specified range of values .
creates a new { @link filter } that is used to compare the specified { @code predicate } .
get the playback state of the given resource .
returns the key for the specified key .
checks if the specified string is a valid .
returns the value of the entry in the map .
puts a new value into the map .
removes the specified key from the map .
/ * ( non - javadoc )
returns a set of keys contained in this set .
returns the collection of values in this map . if the collection is null the collection is returned .
purges the queue .
purge the reference to the specified reference .
returns the entry for the key .
returns the hash of the specified object .
creates a new entry with the given key .
write object to the output stream .
reads the object from the stream .
/ * ( non - javadoc )
sets whether the given { @link } is currently set .
update the status of the
sends the text to the specified message .
deliver the message to the client .
generate a script .
initializes the configuration file .
initializes the target editor .
initializes the application directory .
initialize the .
initializes the output directory for the output directory .
load properties from the classpath
write a file to the file .
get the progress of the given event .
creates a new collection with the specified elements .
add a { @link } to the list .
returns the { @link inetaddress } for the given { @code inetaddress } .
resolves the { @link uricontext } s to the specified { @link } .
get the configuration for the specified { @link } .
/ * ( non - javadoc )
get the attributes of the specified element .
sets the attributes of the given attributes .
{

verifies the given .
{
/ * ( non - javadoc )
{
returns a cluster with the given cluster id .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a session that is a new { @link } with the given name .
returns a session that is a new { @link ssrc } object for the given user .
returns a session that is a default implementation of the current thread .
{
/ * ( non - javadoc )
adds a listener to the stream .
adds a new stanza listener to the .
notifies the listeners that the event has occurred .
/ * ( non - javadoc )
notifies the listeners that the client has been received .
initializes the debugger for the class .
converts a string value into a value .
connects to the server .
closes the connection .
update the status of the given .
{
returns the current thread id .
checks if the node is a node .
returns the key value associated with the given value .
returns a set of entries that are not included in the map .
returns a set of keys that are not included in the map .
returns the value of the collection that matches the given value .
remove a node from the given object .
get the value of the given object .

looks up the value of the given value in the given object .
compare two objects .

returns the node at the given index .
returns the next node in the subtree rooted at the given index .
returns the next node in the subtree rooted at the given index .


copies the color from the source node to the specified value .
checks if the node is a node in the given index .
checks if the node is a node .
creates a node at the specified index .

returns a new parent node if the node is a parent node .
returns the parent node of the given node .
returns the node at the given index .
returns the child node at the given index .
checks if the given node is a child of the given node .
checks if the given node is a child of the given node .
rotate the node at the given index .
rotate the node at the given index .
rebalances the subtree of the given node .
adapting the node with the given key .

swaps the specified position in the subtree rooted at the given index .
check that the object is not null .
insert value into the value .
{
{
{
associates the given value with the specified key in this map . if the key is not found the old value is returned .
{
clears all the entries in the given list .
returns a set of all the elements in the map that are currently contained in the specified set of elements .
returns a new collection of nodes that satisfy the specified element .
returns a set of entries that are not the same as the original iterator .
copy all entries from the current iterator to the end of the list .
returns the node with the given value .
removes the mapping for the cache entry with the specified key .
removes expired entries from the current thread .
evicts the cached valuedata .
{
/ * ( non - javadoc )
/ * ( non - javadoc )
processes the response headers that will be used to read the response from the response .
get the playlist information from the playlist .
get the request for the player playlist .
get the { @link } for the { @link } .
creates a roster store that is used to store the bundle .
opens a roster that will be used to open a new file .
returns the value of the specified {
returns a list of the ip addresses of the ip addresses of the host .

returns a { @code } with the specified subnet name .
returns a new <code > / code > that is used to apply the specified map of { @link } s to the specified { @link map } .
returns a map that contains the keys of the map entries .
{
read a document from the document .
read a xml document from the url and returns the result .
read a document from the xml document .
read a document from the reader .
read text from the text .
read a document from the document .
read a document from xml document .
parse xml document .

filter the results in a map .
checks if a player is a new .
<p > . < / p >
updates the album of the response .
exports the data from the data stream .

import the track information from the resource .
creates a mapbuilder map from key value .
sets the jar filter to use for the filter .
adds a application to the application .
add all classes to the set of classes .
executes the given command line arguments .
executes the given application .
prints the list of all rdns .
prints the usage of the program to the given list of options .
main method .
creates a new { @link } instance .

refreshes the cache for the given schema .
get the schema for the given schema .
write file to output file .
returns true if the jar file is a subtype of the manifest .
add a {
get all schema fields from the list of fields .
returns the field name for the given field name .
returns the package name of the jar file .
gets the response body .
returns the response body as a string .
closes the input stream .
returns a map containing all {
get client .
releases the client client to be used when the client is closed .
creates an { @link } with the given name and name .
sets the state of this { @link jobstate } .
{
this method is called by the iterator to perform the iteration on the given iterator .
get the track info for the given event .
exports the data to the data
import the data from the given model to the given model .
draws a bufferedimage with the given image .
get the image from the url .
returns a {
returns a url that is a url that is a url that is a url that is a url .
get a from the given path .
{

creates a new { @link } for the given source .
returns a copy of this set of functions .
starts the specified .
execute the given runnable on the given object .
/ * ( non - javadoc )

static helper method to map the original map to a new instance of .
creates a new event .
get the current { @link } .
returns the name of the first element of the name of the given name .
gets the data for the given data .
update a playlist .
shuffles the pq points of the given .
checks if the given target mode is logged in .
exports all data from the data source to the data source .
import the resource from the eureka resource .
decodes the specified source into the destination byte array starting at the specified offset .

import the capabilities from the resource .


parse the given string to represent a name .

hashes a string with the given data .
encode a byte array into base64 notation .
authenticate with the given username and password .
authenticate with {
authenticate with the given username and password .
/ * ------------------------------------------------------------
serializes the { @link java . io . } to the { @link outputstream } .

/ * ------------------------------------------------------------
handles the event handler .
join the given { @link } .
sets the value of the property with the specified name .
removes the property from the key .
add principals to the set of principals .
removes the specified principal from the list of principals .
process the current thread .

pop the menu and close the listener .

process the response .
/ * ( non - javadoc )
get a fresh instance of a given user .

/ * ( non - javadoc )
{
moves the specified record to the specified bucket .
/ * ( non - javadoc )
get the input stream for the version of the specified path .
get the input stream for the given file .
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the given value is a child of the given value .
checks if the resource is a valid resource .
sets the name of the roster .
returns the roster entry from the given roster .
adds a roster entry to the roster group .
returns the value mapped by key if this is a key or null if the key is not found .
{
returns <code > true< / code > if the given value is <code > null< / code > .
puts a new value into the map .
{
removes the mapping for a key .
clears all the values in this list .
returns the hash code of the key .
returns true if the specified key is not a key or not .
checks if the given value is equal to the specified value .
returns the entry for the given key .
updates the entry in the map .
************************************************************************ * decrease entry value for entry
add a mapping to the mapping table .
removes mapping entries from the map .
removes entries from the map .
removes all entries from the map .
checks if the specified capacity is valid .
increases the capacity of the given capacity .
returns the number of threads that are currently in the buffer .
returns the next entry in the map .
returns a map that lazily returns the value of the map that matches the given iterator .
returns an iterator that iterates over the entries in the map .
returns a set of keys contained in this multimap .
writes the given object to the output stream .
reads the object from the input stream .
loads a streaminfo from the stream .
reads a gzipped stream from the given stream and returns the stream .
write map to a map
{
{
reconnect to the server .
notifies the listeners that the given connection is received .
notifies the listeners that the given listener is being used .
