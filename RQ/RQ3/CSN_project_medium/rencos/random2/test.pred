runs tasks until the queue is busy .
mirrors the source publisher into an observable that emits the termination notification . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that mirrors the source publisher and emits the first one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a concatenated { @link flowable } that emits the concatenation of the source iterables until all of them terminate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . f . png alt = > <dl > <dt
concatenates the source publisher into a single publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . concat . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
concatenate the single items into an array . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd >
returns an observable that emits an error if the source maybe emits an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . png alt = > <dl > <dt > <b > scheduler : < /
concatenates a sequence of singlesources eagerly into a single stream . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . eager . png alt = > <dl > <dt > <b > backpressure : < / b > <
concatenates a sequence of eagerly into a single sequence of values eagerly . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . f . png alt = > <dl > <dt > <b > backpressure : < / b
concatenates a sequence of publishers into a single sequence of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . f . png alt = > <dl > <dt > <b > backpressure : < / b
returns an observable that emits an error in an observable that emits an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . delay . png alt = > <dl > <dt > <b > scheduler : <
maps the upstream items into a single sequence of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . png alt = > <dl > <dt > <b > backpressure :
returns a concatenated { @link flowable } that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . f . png alt = > <dl > <dt > <b > backpressure
returns a concatenated { @link flowable } that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . f . png alt = > <dl > <dt > <b > backpressure
returns an observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a completable which indicates an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / from . png alt = > <dl > <dt > <b > backpressure : < / b > <
creates an observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a single that emits a single item from the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / from . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a cold synchronous and stateful generator of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
returns a cold synchronous and stateful generator of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / generate . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
returns a flowable that emits the items emitted by the source publisher after a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . s . png alt = > <dl > <dt > <b > scheduler
returns a single { @link observable } that emits the result of { @link <unk> ( long timeunit ) } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the items emitted by the source publisher with the specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . s . png alt = > <dl > <dt > <b > scheduler
returns a maybe that mirrors the specified { @code maybe } and emits the result of the specified { @code unit } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher with the specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . s . png alt = > <dl > <dt > <b > scheduler
returns a single that emits the given item . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
returns a concatenated { @link flowable } that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . f . png alt = > <dl > <dt > <b > backpressure
returns a new flowable that emits all items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
concatenates the source observable into an observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd >
concatenates a sequence of { @code sources } into a single { @code observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . f . png alt = > <dl > <dt > <b > scheduler :
returns an observable that emits items emitted by the source observable . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
returns an observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a range of integers starting at the specified offset . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = >
returns a range of integers starting at the specified offset . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = >
returns an observable that emits items emitted by the source observable . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
returns an observable that emits items emitted by the source observable . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
returns an observable that emits items emitted by the source observable sequence . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
returns a flowable that emits all items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits the concat of {
creates an observable that emits the items emitted by the source observable . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that mirrors the source publisher using a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that mirrors the source publisher using a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
wraps the given { @link observable } into a single { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : <
concatenate single single single single single single single single single single one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
concatenate single single single single single single single observable sequence . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a single { @link observable } that subscribes to the provided { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a single that emits true if all of the items emitted by the source observable are all of these values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt >
signals that the other singlesource terminates normally as soon as the other singlesource signals that observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler
returns a single { @link single } that emits the items emitted by the source if applicable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler :
subscribes to this completable and returns an { @code throwable } instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
subscribes to the given { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns a flowable that emits the items emitted by the source publisher into a sequence of items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
subscribes to this completable and returns an { @code throwable } instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns an { @link observable } that emits the results of an { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a single { @link flowable } that emits the single item emitted by the source { @link publisher } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt
returns a single that emits the single item emitted by the source publisher and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b >
returns an { @link observable } that emits the results of an { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler
subscribes to all items emitted by the source maybe until success . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
subscribes to a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
subscribes to a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
subscribes to the given observer . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / subscribe . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd >
returns an { @link observable } that emits the results of an { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns an { @link observable } that emits the results of an { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits all items emitted by the source publisher into a sequence of items . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a single { @link single } that emits the results of applying a given { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a { @link observable } that emits the items emitted by the specified { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt >
returns a single that emits the result of applying the specified timeout to the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the results of applying a given timespan to the specified scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the results of applying a given timespan to the specified scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns an observable that emits an { @link iterable } of { @link <unk> } s . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a single { @link single } that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a single { @link observable } that emits the items emitted by the source observable into a single { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <p >
returns an observable that emits the items emitted by the source observable buffer with the specified initial capacity . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure
returns a single { @link single } that emits the given { @link <unk> } and emits the result . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns an observable that calls { @code <unk> ( throwable ) } for each value emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns an observable that emits the results of replacing each item in this sequence with an initial capacity . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b
collects the single item emitted by the source publisher into a single { @link single } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
collects the items emitted by the finite source publisher into a single { @link single } instance . <p > <img width = 640 height = 330 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / collect . png alt = > <dl > <dt > <b > backpressure :
returns a { @link <unk> } that emits the results of applying the given { @code <unk> } to each item emitted by the source { @code observable } and emits the resulting { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava /
returns a { @link <unk> } that emits the results of applying the given function to each item emitted by the source { @link publisher } and emits the results of applying the provided mapping function to each item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex /
returns a flowable that emits the results of applying the given function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . png alt = > <dl > <dt > <b
returns a single { @link single } that emits the results of applying the given function to each item emitted by the source { @link <unk> } and emits the resulting results . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators
returns a flowable that emits the results of applying the given function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt
maps the upstream items into a single publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b > backpressure : < / b >
maps the upstream items into a single publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b > backpressure : < / b >
maps the given { @code <unk> } to a { @code completable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
maps the given { @code <unk> } to a { @code completable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @link completable } that returns a flat map of { @link <unk> } s that is a { @link completable } that emits the result of { @link <unk> () } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx
maps the upstream items into a single { @link flowable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt >
returns a { @link <unk> } that emits the results of applying the given function to each item emitted by the source { @link iterable } and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk>
returns a flowable that emits the results of applying the given function to each item emitted by the source publisher that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> .
returns a flowable that emits the results of applying the given function to each item emitted by the source publisher and emits the results of applying the provided mapping function to each item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns a flowable that emits the results of applying the given function to each item emitted by the source publisher and emits the results of applying the provided mapping function to each item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns a { @link <unk> } that emits the results of applying a function to each item emitted by the source { @link maybe } and emits the resulting values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk>
returns a flowable that emits the results of applying a function to each item emitted by the source stream and emits the results of applying a function to each upstream item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a single { @link single } that emits the results of applying the given function to each item emitted by the source { @code <unk> } and emits the resulting { @code onsuccess } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images /
returns a flowable that emits the results of applying the given function to each item emitted by the source publisher and emits the results of applying the provided mapping function to each item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
maps the upstream items into a single sequence of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b >
maps the upstream items into a single sequence of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt >
returns a completable that subscribes to this completable and all of the provided completable instances . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler :
delays the given { @code this } to the next single { @link single } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a single that emits the value of the specified value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
delays the given { @code predicate } to a single { @link <unk> } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a maybe that mirrors the specified { @link maybe } and emits the resulting value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the first item emitted by the source { @link scheduler } and emits the result of { @link <unk> ( long timeunit ) } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> .
returns a flowable that emits the items emitted by the source publisher if it is empty . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / defaultifempty . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher that emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher before the specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . delay . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher after the specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the items emitted by the source publisher after a delay . <p > <img width = 640 height = 451 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > scheduler :
delays the given { @link <unk> } to a single { @link <unk> } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that delays the subscription to the specified scheduler and emits the specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler
returns an observable that emits an observable emitting { @code observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a { @link <unk> } that emits the items emitted by the { @link publisher } and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns an observable that emits the results of replacing each item in this sequence with an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / distinct . png alt = > <dl > <dt > <b > scheduler :
returns a { @link single } consisting of the items emitted by the source publisher and emits the results of applying a function to each item emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a { @link <unk> } that emits the results of applying the given function to each item emitted by the { @code <unk> } and emits the distinct results . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk>
returns an observable that emits the results of replacing each item in this sequence with an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a single that emits the items emitted by the source observable before applying the given { @code keyselector } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt
returns a single that emits true if the given predicate holds true . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the { @link <unk> ( java . lang . throwable ) } with the specified downstream { @link maybe } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the { @code <unk> ( throwable ) onerror } method . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the specified action after this maybe signals onsuccess onerror or oncomplete or onerror . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls { @code action } on { @code onerror } and { @code oncomplete } when it invokes { @code oncomplete } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the { @link <unk> ( object ) onerror } method on each { @link maybe } and calls { @link <unk> ( throwable ) onerror } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
subscribes to an { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
calls the { @link <unk> ( java . lang . throwable ) onerror } and { @link <unk> onerror } methods . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
subscribes to the given { @code observer } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
calls the provided { @code onerror } when it invokes { @code onerror } on success . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
calls the { @link <unk> ( consumer ) onerror } when it invokes the { @link <unk> onerror } method . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
calls the { @code onerror } when it invokes { @code onerror } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the { @link <unk> ( java . lang . throwable ) } with custom { @link <unk> } s . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the { @link <unk> ( java . lang . throwable ) } with custom { @link <unk> } s . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a single that emits the element at the specified index . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
returns a single that emits the element at the specified index in this sequence . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a single that emits the element at the specified index in this sequence . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a { @link <unk> } that evaluates to true if the given predicate evaluates to true . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a single that emits the first item emitted by the { @code onsuccess } if it emits an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the source publisher and emits the resulting results . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt =
returns a flowable that emits the results of applying the given function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . png alt = > <dl > <dt > <b
returns a { @link <unk> } that emits the results of applying a given function to each item emitted by the source if applicable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . maybe . png alt =
returns a flowable that emits the results of applying a function to each item emitted by each item emitted by the source publisher into a single flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt
returns a { @link completable } that returns a flat map of { @link <unk> } s that is a { @link completable } that emits the result of { @link <unk> () } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx
returns a flowable that emits the results of applying a function to each item emitted by each item emitted by the source publisher into a single stream using the provided mapping function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the left and right if applicable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt =
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the source publisher and emits the resulting results . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png
returns a single { @link single } that emits the results of applying the given function to each item emitted by the source { @code <unk> } and emits the resulting { @code onsuccess } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images /
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the source { @link maybe } and emits the results . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk>
subscribes to an { @link <unk> } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a { @link single } that emits the items emitted by the source publisher into a single { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl
returns a { @link single } that emits the items emitted by the source publisher into a single { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl
returns a { @link single } that emits the items emitted by the source publisher into a single { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl
returns an observable that emits items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
calls the { @link <unk> ( java . lang . throwable ) } with the specified { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt
returns a single that emits the items emitted by the source if any . <p > <img width = 640 height = 451 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that mirrors the source publisher and a sequence of results . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
calls the { @link <unk> ( throwable ) onerror } method { @link <unk> ( throwable ) } and emits the last emitted item . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a single that emits the single item emitted by the source if it emits a default item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b
returns a single that emits the last item emitted by the source { @link <unk> } and emits a single error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl >
returns a flowable that emits the results of applying the given function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns an observable that emits items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
delays the given { @code <unk> } to all other completable items . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
delays the given { @code this } to the next single { @link single } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that invokes { @link <unk> } on the specified { @link scheduler } asynchronously on the specified { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl
returns a flowable that emits the items emitted by the source publisher asynchronously . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
instructs a single { @link single } to be resume when it encounters an error . <p > <img width = 640 height = 451 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler :
instructs a publisher to emit an error . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
instructs a publisher to emit an onerror or oncomplete event . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
instructs a { @link publisher } to be an { @link <unk> ( throwable ) } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns an observable that emits items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the items emitted by the source if applicable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the items emitted by the source if applicable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a single { @link single } produced by applying the given function to each item emitted by the source { @link <unk> } and { @link <unk> } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a single { @link single } that emits the results of applying the given function to each item emitted by the source { @link maybe } and emits the results of applying the provided mapping function to each item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex
returns an { @link observable } that emits the results of an { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the result of a given number of times . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the items emitted by the source publisher after a call to { @link <unk> } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / repeat . <unk> . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns an { @link observable } that emits the items emitted by the { @link publisher } and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl >
returns an { @link single } single { @link observable } that emits the items emitted by the source { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = >
returns a flowable that emits the items emitted by the source publisher asynchronously . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits items emitted by the source publisher . <p > <img width = 640 height = replays src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <p
returns a single { @link single } observable that emits the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl > <dt > <b > scheduler : < /
returns a { @link <unk> } that replays the given { @link <unk> } and the specified { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl >
returns a flowable that emits the items emitted by the source publisher asynchronously . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a { @link maybe } that invokes the { @link <unk> } on the specified { @link scheduler } asynchronously on the { @link maybe } <dl > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt =
retries until the retry is complete . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the items emitted by the source publisher that satisfies the given predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . <unk> . png alt = > <dl > <dt >
returns a flowable that emits the results of replacing each item emitted by the source observable and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / cache . s . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher that satisfies the given predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the success value of the given { @code throwable } that satisfies the given predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . retry . png alt = > <dl > <dt
returns a flowable that will retry when an item emitted when a subscriber subscribes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl > <dt >
returns a maybe that emits the values emitted by the specified { @code unit } and emits the resulting value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl > <dt
returns a { @link flowable } that emits the first item emitted by the source { @link scheduler } and emits the result of { @link <unk> () } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> .
delays the given { @code this } to the current single { @link <unk> } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that applies an accumulator to the provided accumulation function and accumulation functions . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the items emitted by the source publisher using the provided initial value and a accumulation function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher where each item can be emitted . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns an observable that emits items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
calls the provided { @link <unk> } on each item emitted by the source { @link maybe } and emits the result . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a single that emits the single item emitted by the source if it emits a default item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b
returns a single that emits the single item emitted by the source observable if it emits an error or an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl >
returns an observable that emits items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <p >
returns a maybe that emits the values emitted by the specified { @code unit } and emits the result . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl > <dt >
returns a { @link maybe } that emits the last emitted items emitted by the { @link scheduler } and emits the result . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = >
returns a flowable that emits the last item emitted by the source if it emits an item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the last emitted item emitted by the source observable and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b
returns a single { @link flowable } that emits the last emitted items from the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b >
returns a flowable that emits the last emitted items from the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
delays the given { @code this } until the first { @code other } is subscribed . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler
returns an observable that emits the items emitted by the source if applicable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a single that emits the items emitted by the finite source publisher into this sequence item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a single that emits the items emitted by the finite source publisher into this sequence item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / startwith . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / startwith . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / startwith . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items in the specified array . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / from . png alt = > <dl > <dt > <b > backpressure : < / b > < /
calls the provided { @link <unk> } on each item emitted by the source { @link maybe } and emits it as soon as it encounters an item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png
calls the { @link <unk> ( consumer ) onerror } when it invokes the { @link <unk> ( throwable ) } method . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
subscribes to a publisher and returns a subscribes to the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
asynchronously subscribes the { @link scheduler } to a { @link maybe } that subscribes to the { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl >
delays the given { @link <unk> } to a single { @link <unk> } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the results of applying the given function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . png alt = > <dl > <dt > <b
returns a { @link completable } that returns a flat map of { @link <unk> } s that is a { @link completable } that emits the result of { @link <unk> () } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx
returns a { @link completable } that returns a flat map of { @link <unk> } s that is a { @link completable } that emits the result of { @link <unk> () } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx
returns a flowable that emits the results of applying the provided function to each item emitted by the source publisher and emit a transformed value if present . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt
returns a flowable that emits the results of applying a function to each item emitted by the source publisher and emit a transformed value if the resulting publisher emits another error . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators /
returns a flowable that emits the results of applying a given function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the results of applying a given function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the results of applying the given function to each item emitted by the source observable and emits the results . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt =
returns a flowable that emits the items emitted by the source publisher that satisfies the specified predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the last emitted item emitted by the source if it emits an item . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the last emitted item emitted by the maybe in the specified time period . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl > <dt > <b
returns a single that emits the last item emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the last emitted items from the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a single that emits the first item emitted by the source observable and emits the result . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns an observable that emits items emitted by the source observable . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a maybe that mirrors the { @link <unk> } and emits the result of { @link singlesource } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl > <dt >
returns a flowable that emits only the first item emitted by the source publisher after the first item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = >
returns a flowable that emits the first item emitted by the source scheduler and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt >
returns a { @link observable } that emits the result of { @link <unk> () } and { @link <unk> () } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl
returns a maybe that mirrors the { @link maybe } and emits the result of { @link <unk> () } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl > <dt
returns an { @link observable } that emits the values emitted by the { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b >
returns a { @link maybe } that emits the value emitted by the { @link maybe } and emits the result . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl >
returns a { @link flowable } that emits the first item emitted by the source { @link scheduler } and emits the result of { @link <unk> () } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> .
returns a flowable that mirrors the source publisher and other item emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = >
returns a flowable that mirrors the source publisher and other item emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = >
returns a maybe that mirrors the source publisher and emits the result of the specified timeout . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the items emitted by the source publisher before applying a specified timeout . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the values emitted by the specified { @code publisher } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the items emitted by the maybe in the specified scheduler . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns an { @link observable } that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timestamp . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the results of a specified time unit . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timestamp . <unk> . png alt = > <dl > <dt > <b > scheduler :
converts this maybe to a single { @link single } buffer . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a single { @link single } that emits the result of { @link <unk> () } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a { @link single } that emits the items emitted by the source publisher into a single { @link <unk> } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
instructs a publisher that is emitting items faster than calls to { @link <unk> onerror } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a single that emits the items emitted by the finite source publisher into a sorted list . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a { @link maybe } that observes the items emitted by the { @link scheduler } and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . observeon . png alt = > <dl >
returns an observable that emits the results of replacing each item in this sequence with the specified initial capacity . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the items emitted by the source publisher after a single window of the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a flowable that emits the results of a window of the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a single { @link observable } that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the results of applying a given timespan to the specified scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt >
returns a flowable that emits the results of applying a given timespan to the specified scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b >
returns an observable that emits items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
returns a flowable that delays each item emitted by the source publisher and emits the results of applying the provided { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl
returns a flowable that emits the items emitted by the source publisher where each item emitted by the source publisher can occur in the window . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a flowable that emits the items emitted by the source publisher into a window . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure :
combines two { @link maybe } instances into a single value using the supplied { @link bifunction } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
combines two { @link maybe } s at the provided one . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
{ @inheritdoc }
invokes the { @link <unk> ( observable ) } on the { @link <unk> } interface . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a { @link maybe } that mirrors the specified { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl > <dt > <b > scheduler : <
returns an { @link observable } that emits the items emitted by the { @link scheduler } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher after a given amount of time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler
calls { @link <unk> ( object ) } on each item emitted by the source { @link com . github . gwt . <unk> . <unk> } or { @link <unk> } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> .
sends a { @link subscriber } to a { @link subscriber } .
returns a { @link dataset } that is backed by a { @link list } of { @link list } s .
returns a { @link flowable } which is the concatenation of the elements of the source { @link publisher } .
returns a { @link flowable } which completes when the source publisher completes eagerly . <dl > <dt > <b > backpressure : < / b > < / dt > <dd > the operator honors downstream backpressure . < / dd > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the results of applying the given function to each item emitted by the source { @code converter } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a flowable that emits the results of applying the given function to each emitted item . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a { @link flowable } which applies an { @link flowable } to each emitted item emitted by the source publisher and emits the results of a { @link maybe } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators
returns a { @link <unk> } that evaluates to true if the given predicate evaluates to true . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
uses the { @link <unk> ( predicate ) } to apply the specified { @code predicate } to each item emitted by the source { @code predicate } and the given { @code predicate } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images /
returns a { @link flowable } which is subscribed to the specified { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / subscribe . png alt = > <dl > <dt > <b > scheduler : <
maps the specified { @link publisher } to a { @link completable } and returns a { @link completable } that emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . observeon . png alt =
returns a { @link flowable } which applies a { @link bifunction } to each item emitted by the source { @link <unk> } and emits the result of the resulting { @link java . lang . stream } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns a { @link flowable } which applies an { @link <unk> } to each emitted item . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the items emitted by the source publisher which emits the items emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a flowable that emits the items emitted by the source publisher before completing the specified selector . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher once a retry is complete . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher before completing the specified selector . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a stream consisting of the elements of this stream according to the specified comparator .
returns a { @link single } data which is a { @link list } of { @link java . util . concurrent . <unk> ( object ) } or { @link java . lang . comparable } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx
returns a { @code list } of { @code <unk> } which is the result of applying a given { @code <unk> } to each element of this stream . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> .
calls the provided { @link <unk> } on each item emitted by the source { @link maybe } and emits its result . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the { @link <unk> ( java . lang . function ) onerror } method . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the { @link <unk> ( java . lang . throwable ) } with custom { @link <unk> } s . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the provided { @link <unk> } on each item emitted by the source { @link maybe } and emits its result . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls { @link <unk> ( object ) onerror } and { @link <unk> ( throwable ) } on success . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls { @link <unk> ( java . lang . throwable ) } and { @link <unk> ( object ) } on success . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls { @link <unk> ( java . lang . throwable ) } on a { @link maybe } when subscribed to it . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the { @link <unk> ( java . lang . throwable ) } with the specified { @link <unk> } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the { @code action } on each item emitted by the source { @code oncomplete } and invokes the { @code onerror } function . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
collects the items emitted by the source publisher into a single { @link flowable } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / collect . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items from { @code items } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / from . png alt = > <dl > <dt > <b > backpressure : < / b > <
converts a { @link function } to a { @link list } of { @link class type t } .
returns a { @link <unk> } that emits the items emitted by the source { @link <unk> } and the given { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a flowable that emits the results of applying the given function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
returns a { @link flowable } which completes when each item emitted by the source publisher completes eagerly . <dl > <dt > <b > backpressure : < / b > < / dt > <dd > the operator honors downstream backpressure . < / dd > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a stream consisting of the results of replacing each element of this stream with the contents of a mapped stream produced by applying the provided mapping function to each element .
returns a flowable that emits the results of applying the given function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . png alt = > <dl > <dt > <b
maps the upstream items into a single sequence of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
maps the upstream items into a single publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b >
returns a { @link collector } that emits the contents of a { @link <unk> } using a { @link <unk> } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
returns a { @link observable } that invokes the { @link <unk> } on the given { @link scheduler } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > { @link <unk> ( scheduler ) } < / b > <dl > <dt > <b > scheduler : < / b > < /
creates a <unk> { @link observable } that calls the { @link <unk> ( observable ) } method on the given source { @link observable } then calls { @link <unk> ( observable ) } and { @link <unk> () } . <p > the { @link <unk> ( observable ) } method will create a { @link <unk> } . <p > this
creates a transformer that calls { @link <unk> ( observable ) } with the given { @link <unk> } and { @link <unk> } .
creates a new { @link <unk> } with the given age and size . <p > if the { @link scheduler } is not { @code null } the { @link <unk> () } will be called .
creates a new { @link <unk> } with the given age and size . <p > if the { @link scheduler } is not { @code null } the { @link <unk> () } will be { @link <unk> () } . <p > if the { @link scheduler } is non - null the { @link <unk> () } will be { @code
create an observable that calls { @link <unk> ( observable buffer ) } and { @link <unk> ( observable buffer ) } and { @link <unk> ( observable buffer ) } . <p > the { @link <unk> ( observable ) } method can be used to create a { @link <unk> } . <p > a { @link <unk> } will be created
sets the resource at the specified index .
replace the subscription with the given index .
creates a new { @link <unk> } with the given size .
returns a flowable that uses the { @link <unk> () } method of this { @link <unk> } .
creates a { @link <unk> } instance . <p > this method is similar to { @link <unk> ( int ) } but allows you to use { @link <unk> ( int ) } instead . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators
return a new { @code publisher } which is the result of applying the given function to the source publisher .
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
creates a { @link <unk> } that schedules a { @link <unk> } from a { @link <unk> } .
creates a { @link maybe } from a { @link <unk> } .
converts a { @link future } into a { @link disposable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
converts a { @link future } into an observablesource . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
creates a new { @code <unk> } from a { @link subscription } .
performs blocking delete operation .
returns a single { @link flowable } that subscribes to the default { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler
returns a { @link scheduler } that subscribes to the default { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a new { @link observable } that subscribes to the default { @link scheduler } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a single { @link scheduler } that subscribes to the default { @link scheduler } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
provide a {
{ @link <unk> ( throwable throwable ) }
create an instance of {
create a new { @link scheduler } on a { @link scheduler } .
returns a {
returns a single { @link scheduler } which wraps the single { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
reset the {
/ * ( non - javadoc )
sets the { @link <unk> } to be called when the { @link <unk> ( callable ) } method is called .
sets the { @link <unk> } to be called when the { @link <unk> } is called .
sets the { @link <unk> } to be called when { @link <unk> () } is called .
set the default single exception handler . <p > the default behavior of this method is to call {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
defers to { @link <unk> ( function ) } but returns a { @link completable } that defers to { @link <unk> ( java . util . function . <unk> ) } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators
subscribes to the given { @link <unk> } .
returns a new { @link flowable } that emits the items emitted by the source { @link publisher } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a { @link <unk> } that emits the items emitted by the { @link maybe } passed as a { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . <unk> . png alt =
disable <unk> flowable .
returns a { @link <unk> } that subscribes to all items emitted by the source { @link maybe } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
returns a new { @link <unk> } that subscribes to the { @link maybe } when it completes .
sets the { @link <unk> } to be emitted when { @link <unk> () } is { @link <unk> } .
modifies this { @link <unk> } { @link <unk> } and { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } {
sets the given { @link <unk> } to the given { @link <unk> } .
instructs a single { @link single } to be on the single of the given { @code throwable } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler
sets the { @code <unk> } to be used for single { @link singlesource } s .
wraps the given subscriber into a { @link subscriber } .
<p > <unk> . < / p >
returns a { @link single } that emits the result of { @link <unk> ( single promise ) } or { @link single } as { @link <unk> } .
creates a { @link completablefuture } with the given { @link <unk> } and the given { @link <unk> } .
returns a { @link <unk> } that subscribes to the given { @code source } { @code observer } asynchronously . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . s . png alt = >
returns a new { @link maybe } that combines the source maybe if it emits an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a { @link <unk> } that emits the items emitted by the source { @link <unk> } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
returns a { @link observable } that emits the items emitted by the source observable . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a { @link <unk> } that emits the { @link <unk> } { @link <unk> } and { @link <unk> ( observable ) } or { @link <unk> ( observable ) } or { @link <unk> ( observable ) } or { @link <unk> ( observable ) } . <p > the { @link <unk> ( observable ) } method can be used
wraps a single { @link singlesource } into a single { @link single } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
creates an { @link completable } on the specified { @link completablefuture } and the given { @link function } .
/ * ( non - javadoc )
wrap a {
returns { @code true } if { @code <unk> } is set to { @code false } .
create a new { @link scheduler } for a { @link java . io . scheduler } .
apply the given function to the given function and return the result .
wrap a {
returns a { @link scheduler } that wraps a { @link scheduler } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / callable . <unk> . png alt = >
returns an { @link observable } that emits the result of calling { @link scheduler } or { @link scheduler } if it is not null . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / scheduler . scheduler . png alt = >
concatenate the two iterable sources . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . concat .
concatenate a single value into an array . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd >
concatenates the source publisher into a single flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . f . png alt = > <dl > <dt > <b > backpressure : < / b > < /
concatenate a single value into a single array . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
concatenates a sequence of { @code sources } into a single { @link flowable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < /
concatenates all of the source iterables into a sequence of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . f . png alt = > <dl > <dt > <b > backpressure : < / b
converts a { @link maybe } into a { @link maybe } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns an { @link observable } that always returns an { @link observable } that always returns an { @link observable } that emits the results of invoking a { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns a maybe that emits the items emitted by the source if applicable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns an { @link observable } that emits the value of the specified { @link throwable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler :
converts a { @link callable } to a { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromcallable . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that defers to the given completable supplier . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
wraps a single { @link singlesource } into a single { @link <unk> } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
converts a { @link callable } to a { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromcallable . png alt = > <dl > <dt > <b > scheduler : < / b > <
converts a { @link future } into a single { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
converts a { @link future } into an observablesource . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
converts a { @link <unk> } to a { @link maybe } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a single that emits the given item . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd
concatenates the source publisher into a single flowable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt > <dd
returns a concatenated { @link flowable } that emits the error emitted by the source { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . f . png alt = > <dl > <dt >
returns a concatenated {
returns a maybe that emits the items emitted by the source if applicable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the items emitted by the source publisher and emits the resulting values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits a sequence of items from the source single source . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a single { @link single } { @link transformer } that emits the result of { @link <unk> ( long timeunit ) } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . timeout . png alt = > <dl >
returns a flowable that emits the items emitted by the source publisher after a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . s . png alt = > <dl > <dt > <b > scheduler
creates a new { @link maybe } from the specified { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that mirrors the source publisher using a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that mirrors the source publisher using a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
wraps the provided { @link maybe } into a single { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : <
combines the given iterable into a single value using the provided { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler :
combines two or more of the supplied sources into a single array . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
signals that the other singlesource wrapped with this one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <p >
subscribes to this completable and returns an { @code throwable } instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a blocking { @link throwable } that subscribes to the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
calls the { @link <unk> ( throwable ) onerror } function { @link <unk> ( throwable ) } and emits the result . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a { @link <unk> } that emits the results of applying a given function to each item emitted by the source { @link maybe } and emits the results of a { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the source publisher and emits the resulting value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > backpressure : < / b > <p
converts an { @link item } to a single { @link single } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a single that emits the last item emitted by the source if it emits a default item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b
returns a single { @link maybe } for the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the items emitted by the source publisher after a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that delays the subscription to the specified publisher and emits the result of overlapping events . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher with the specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . s . png alt = > <dl > <dt > <b > scheduler
calls the { @code onerror } when it s success . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
invokes the given { @code onerror } on each single item . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the specified { @code <unk> } on each item emitted by the source { @code maybe } and emits its result . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
returns a flowable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <p
returns a maybe that emits the items emitted by the source if applicable . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a { @link completable } that returns a flat map of { @link <unk> } s resulting from a { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt =
returns a single that emits the items emitted by the source if it emits a default value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b >
returns a { @link <unk> } which applies an { @link <unk> } to each element of this { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl
returns a { @link <unk> } that maps items emitted by the { @link <unk> } and { @link <unk> } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the type of the specified type . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
returns a { @link <unk> } that emits the next value emitted by the source if applicable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
converts this maybe to a { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
converts this maybe to a single { @link single } value when subscribed to it . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
invokes the { @link <unk> onerror } and emits onerror condition . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . s . png alt = > <dl > <dt > <b > scheduler :
instructs a publisher to emit an error . <p > <img width = 640 height = 451 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd >
instructs a { @link maybe } to resume an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
instructs a publisher to emit an onerror or oncomplete event . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
calls the { @link <unk> ( throwable ) onerror } function { @link <unk> ( maybe ) } and { @link <unk> ( throwable ) } on success . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits items emitted by the source publisher after a given amount of times . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / repeat . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the results of applying a given predicate to each item emitted by the source publisher that satisfies the given predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = >
retries until the given { @code count } is { @code true } or if it encounters an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry
returns a flowable that emits the results of applying a given predicate to each item emitted by the source if applicable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . retry . png alt = > <dl >
returns a flowable that mirrors the source publisher and emits the result of the specified type . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl > <dt >
calls { @link <unk> ( java . lang . throwable ) } with custom { @link <unk> } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
subscribes to an { @link <unk> } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a maybe that emits the item emitted by the source maybe until it completes . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
delays the given { @code this } to the next single { @link single } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a maybe that emits the item emitted by the source maybe until it completes . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a maybe that mirrors the { @link maybe } and emits the resulting value . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl > <dt > <b > scheduler :
returns a maybe that mirrors the { @link maybe } with a custom { @code timeout } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
delays the current { @code onsuccess } until it completes . <dl > <dt > <b > backpressure : < / b > < / dt > <dd > {
returns a delays that signals when this maybe signals completes emitting items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > backpressure :
returns a { @link maybe } that subscribes to the specified { @link scheduler } and emits the result as a { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . observeon . png alt
returns a cached { @link flowable } that emits the items emitted by the source { @link flowable } and the given { @link publisher } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
wrap a observer .
ensures that an object reference passed as a parameter to the calling method is not null .
returns a predicate that evaluates to {
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
convert a value into a valueholder that caches its value .
<p > memoize . < / p >
<p > cast . < / p >
appends the stack trace of a stack trace to the stringbuilder .
returns the root cause of the given root cause .
creates a new { @link <unk> } .
creates a new { @link <unk> } .
creates a new { @link transformer } that uses { @link <unk> () } and { @link <unk> () } to convert to a { @link subject } .
creates a new { @link <unk> } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . create . png alt = >
perform a foreach operation over the queue .
/ * ( non - javadoc )
/ * ( non - javadoc )
invoke the {
given mode and return the qr code .
wait for the main thread to complete .
/ * ( non - javadoc )
waits for a command to be executed .
creates a { @code <unk> } with the given { @code <unk> } . <p > the { @code <unk> } will be { @code null } if the { @code <unk> } is not { @code null } .
creates a { @code <unk> } with the given maximum size .
creates a {
creates a new { @link <unk> } with the given age and size . <p > if the { @link scheduler } is not { @code null } a { @link <unk> } will be generated . <p > if the { @link scheduler } is non - null the { @link <unk> () } will be { @link <unk> () } .
/ * ( non - javadoc )
/ * ( non - javadoc )
release all open probability factories from the given mode .
creates a { @code <unk> } object .
returns the value of the {
returns an array containing all of the elements in this list in proper sequence ( from first to last element ) . if the list fits in the specified array it is returned therein . otherwise a new array is allocated with the runtime type of the specified array .
returns an array containing all of the elements in this list in proper sequence ( from first to last element ) . if the list fits in the specified array it is returned therein . otherwise a new array is allocated with the runtime type of the specified array . if the list does not contain the element it is returned therein . otherwise
returns { @code true } if { @code value } is { @code true } otherwise returns { @code false } .
runs the given {
creates a new { @link java . util . concurrent . <unk> ( int ) } with the given maximum capacity .
maps a subscription to a single subscription .
marks the given { @code stream } as completed .
returns true if the queue is cancelled .
posts a { @link func1 } to { @link <unk> ( object ) } { @link <unk> ( object ) } and { @link <unk> () } .
creates a { @code <unk> } with the given { @code <unk> } . <p > the { @code <unk> } will be { @code null } if the { @code <unk> } is not { @code null } .
creates a { @code <unk> } with the given maximum size .
creates a {
nonsymmetric reduction to hessenberg form .
gets the value of the specified object .
returns an array containing all of the elements in this list in proper sequence ( from first to last element ) . if the list fits in the specified array it is returned therein . otherwise a new array is allocated with the runtime type of the specified array .
/ * ( non - javadoc )
gets the error .
creates a { @code notification } with the given { @code elements } .
creates an observable that emits the items emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
atomically sets the { @code <unk> } of the upstream atomicreference to { @code <unk> } if { @code null } otherwise .
atomically sets the { @code <unk> } of the upstream atomicreference to { @code <unk> } if { @code <unk> } is { @code null } otherwise { @code false } .
sets the { @code next } and { @code next } { @code next } and { @code next } depending on the type of { @code next } .
atomically sets the { @link atomicreference } to the given { @link subscription } .
atomically adds the specified number of messages to the cache .
remove the specified value from the cache .
/ * ( non - javadoc )
add a long to the set of longs .
returns the product of { @code a } and { @code b } and { @code b } unless { @code b } is { @code 0 } .
atomically adds the given number of bytes to the current request and adds them to the current request if the requested requested number of request exceeds the requested number of requests .
atomically adds the given number of milliseconds to the current request and adds it to the current request if the requested requested number of request exceeds the requested number of requests .
atomically adds the given number of milliseconds to the current request and adds the requested number of requests to the current request .
subscribes to the { @link <unk> } .
subscribes to the given { @link observable } .
subscribes to the given { @code onerror } and { @code onerror } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a completable which terminates as soon as one of the source completables terminates . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a completable that subscribes to all completables in the source iterable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a completable instance that completes when the source publisher completes when the source publisher completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure
returns a completable that subscribes to all completables emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure : < /
creates a single { @link single } that emits the items emitted by the source { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . create . png alt = > <dl > <dt >
returns a completable which indicates an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
converts a { @link <unk> } to a { @link maybe } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a completable instance that subscribes to the given { @code throwable } and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
converts a { @link future } into an { @link flowable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a maybe that emits the upstream items emitted by the source if applicable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
converts a { @link <unk> } to a { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a single that emits the single item emitted by the source publisher and emits the resulting single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt >
returns a completable which terminates as soon as one of the given sources leave terminates . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a completable that subscribes to all completables in the source iterable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a completable instance that subscribes to all completables emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a completable instance that subscribes to all completables emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a completable that subscribes to all completables emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure : < /
returns a completable instance that subscribes to all completables emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a completable instance that completes immediately when subscribed to . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . complete . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a completable instance that emits the value of the specified { @link scheduler } and emits the result . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
converts the given { @link throwable } to a { @link nullpointerexception } .
returns a completable instance that invokes { @code <unk> ( predicate ) } with a { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt >
wraps the provided { @link singlesource } into a single { @link completable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a completable that subscribes to this completable and all of the other completable instances . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler :
delays the given { @code <unk> } to the next single { @link <unk> } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that skips items emitted by the source publisher and emits the result of { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
instructs a single { @link single } to produce a single { @link maybe } that emits a single value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt
instructs a maybe to emit an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd >
defers the given { @code <unk> } to the current completable and returns the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that subscribes to this completable and all its children emitted by the source { @code converter } into a { @link completable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png
subscribes to this completable and returns an { @code throwable } instance . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a completable that subscribes to this completable and all of its children . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that subscribes to this completable and all of its children . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a completable instance that completes with the specified { @code delay } and the specified { @code timeunit } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt
returns a completable instance that completes when the specified { @link scheduler } emits a { @link completable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt >
returns a completable which emits the value emitted by the specified { @code unit } and emits the result . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a completable instance that completes with the specified { @code delay } and { @code unit } with the specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl
calls { @code onerror } when it invokes { @code oncomplete } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls { @code action } on { @code onsuccess } when it invokes { @code oncomplete } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the { @code onerror } when it is success . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
subscribes to all items emitted by the source publisher and then calls { @link <unk> ( consumer ) } on them . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
calls { @code onerror } when { @code onerror } is called . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the { @code <unk> ( throwable ) onerror } method . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the { @code <unk> ( throwable ) onerror } method . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
terminates the specified { @link scheduler } on the specified { @link scheduler } on its current subscription . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b
invokes the given { @code predicate } on each of the provided { @code throwable } until it completes successfully . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a { @link completable } that returns a flat map of { @link <unk> } s resulting from a { @link maybe } to a { @link completable } and { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images /
returns a flowable that emits the result of the given { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that repeats the items emitted by the source publisher and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that calls the { @link <unk> ( predicate ) } with the given { @code predicate } and returns the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl
returns a completable that retries when this completable completes emitting the given number of times . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler :
retries until a given predicate returns an { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits a sequence of { @code throwable } emitted when the source publisher completes when the source publisher completes . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / startwith . png alt = > <dl > <dt > <b > backpressure : < / b > <p
subscribes to an { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
returns a completable that subscribes to the given { @code <unk> } and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler
terminates the specified { @link scheduler } on the specified { @link scheduler } asynchronously until the subscription terminates . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt >
returns a flowable that subscribes to this completable and all of its children . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a completable which emits the value emitted by the specified { @code unit } and emits the result . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl > <dt
returns a completable which emits the value emitted by the specified { @code unit } and emits the result . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a completable instance that completes with the specified { @link scheduler } with the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a completable instance that waits for the specified timeout to complete . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
converts a { @link function } to a { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the results of applying the given function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . png alt = > <dl > <dt > <b
converts this maybe to a { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < /
try to convert the given source to the given source .
returns a new { @link <unk> } with the given { @link publisher } .
adds the specified element to the end of this list . if the list does not contain the element it is added to the end of the queue .
reset the current thread pool .
creates a new { @link java . util . concurrent . scheduledexecutorservice } .
sets the missing subscription .
emits all the elements in the queue .
{ @link <unk> ( throwable ) }
propagate the given throwable if it is a fatal error or throw an exception if it is a fatal error .
wrap a {
flatten a throwable into a single list .
wrap the given exception if it is an exception .
atomically adds the given number of batches to the cache .
removes the dense { @link <unk> } from the cache .
replays the elements in this { @link chunk } .
todo : explain
returns { @code true } if { @code <unk> } is { @code null } .
performs null checks and disposes of assets .
performs the actual removal of a { @link disposable } .
disposes the server .
disposes this object . this method is called by the { @link <unk> ( object ) } method .
returns the size of this { @link <unk> } .
subscribes to the specified stream .
subscribes to a { @link publisher } .
subscribes to the items of an { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
subscribes to the items of an { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
whiteboard bind .
returns a flowable that emits the results of applying the given function to the source observable . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a { @link <unk> } that emits the results of applying a given function to each item emitted by the source { @link maybe } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
wrap a {
creates a new { @link <unk> } from a { @link <unk> } .
<p > start generate <unk> . < / p >
adds the specified value to the end of this list .
applies a { @link <unk> } to each element of the list .
/ * ( non - javadoc )
/ * ( non - javadoc )
iterates over the elements of this stream and returns the results of each element in the list .
returns a flowable that mirrors the source publisher but emits its termination state . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the first non - null value emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits a single { @link flowable } which is a concatenation of { @code sources } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . concat . pn . png alt = > <dl
returns an observable that calls { @code <unk> ( throwable ) } with the given { @code supplier } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a completable which indicates an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
converts the given { @link callable } to a single { @link observable } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
converts a { @link future } into a single { @link observable } . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
converts a { @link future } into a single { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
converts a { @link future } into a single { @link observable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a maybe that emits the items emitted by the source if applicable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the concat of a single { @link publisher } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . concat . pn . png alt = > <dl > <dt > <b > scheduler
wraps the given { @link <unk> } into a single { @link single } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the specified { @link scheduler } for the specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . s . png alt = > <dl > <dt > <b > scheduler :
wraps a single { @link singlesource } into a single { @link single } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a single instance of { @code single } and { @code <unk> } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the results of applying a given function to each emitted item . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > scheduler : <
returns a single that emits the last item emitted by the source if it emits a default item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b
returns a single { @link single } that emits the results of applying the given { @code <unk> } to each item emitted by the source { @code <unk> } and emits the resulting single element . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images
returns a single that emits the last item emitted by the source if it emits a default item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b
mirrors the source publisher into a single stream of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > backpressure : < / b > < / dt
returns a single that emits the result of applying the specified timeout to the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . timeout . png alt = > <dl > <dt > <b > scheduler
returns a single { @link single } single { @link single } produced by { @link <unk> () } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the last emitted items to the specified scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a single { @link single } that emits the items emitted by the source { @link <unk> } and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl >
returns a single that emits the result of applying the specified timeout to the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . timeout . png alt = > <dl > <dt > <b > scheduler
returns a single that emits a single { @link single } in the { @link single } and emits the result . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a { @link <unk> } that emits the items emitted by the { @link maybe } and emits the resulting values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl
calls the { @link <unk> ( java . lang . throwable ) } with success value and calls { @link <unk> ( throwable ) } on success and returns a success value . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the { @link <unk> ( java . lang . throwable ) } with the specified { @link maybe } that calls the { @link <unk> } and emits that result . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the specified action after this maybe signals onsuccess onerror or oncomplete . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the { @link <unk> ( java . lang . throwable ) onerror } and { @link <unk> ( throwable ) } method . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the specified { @code <unk> } on each item emitted by the { @code onerror } and { @code oncomplete } if it encounters an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk>
calls the { @link <unk> ( throwable ) onerror } method on success and after success . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
invokes the given { @code onerror } if it encounters an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
invokes the given { @code onerror } on each single item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a single { @link single } that emits the results of applying the given function to each item emitted by the { @code <unk> } and emits the resulting { @code onsuccess } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the source publisher and returns a flowable that emits the resulting values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single
returns a single { @link single } that emits the results of applying the given function to each item emitted by the source { @link maybe } and emits the results of applying the provided mapping function to each item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex
returns a { @link flowable } which applies an { @link <unk> } to each element of this { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl
returns a single { @link single } that emits the results of applying the given function to each item emitted by the source { @link <unk> } and { @link <unk> } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a single that emits the last item emitted by the source observable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a single that emits the specified value . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt
returns a flowable that emits items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . png alt = > <dl > <dt > <b > backpressure : < / b > < /
returns a { @link maybe } that observes items emitted by the subscriber subscribes to the specified { @link scheduler } asynchronously with the specified { @code scheduler } asynchronously . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe
instructs a single { @link throwable } to be emitted when an error occurs . <p > <img width = 640 height = 451 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a single that emits the last item emitted by the source { @link maybe } that emits the last item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt =
returns a flowable that emits all items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
converts this { @link maybe } to a single { @link single } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the items emitted by the source publisher that satisfies the given predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the results of applying a given function to each item emitted by the source publisher and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . s . png alt =
returns a flowable that mirrors the source publisher when a subscriber subscribes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl > <dt > <b > scheduler : < / b > <
subscribes to an { @link <unk> } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
subscribes to an { @link <unk> } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a single that subscribes to the specified { @code other } until the first non - null item is emitted . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . subscribe .
subscribes to the { @link <unk> onerror } { @link maybe } and the specified { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt >
returns a single that emits the first item from this maybe until the first non - null result is { @code false } whichever comes first . <p > <img width = 640 height = 380 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk>
returns a single that emits the result of applying the specified timeout to the specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl > <dt
returns a single that emits the values emitted by the specified { @code scheduler } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a single { @link completable } that emits the results of a single { @link completable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b
returns an { @link observable } that subscribes to all items emitted by the { @code <unk> } and { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = >
returns a { @link maybe } that observes the items emitted by the { @link scheduler } and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . observeon . png alt = > <dl >
combines two { @link maybe } s at the first one . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
creates a { @link <unk> } instance . <p > the { @link <unk> () } method is used to create a { @link <unk> } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . create . png alt = >
creates a new { @link <unk> } with the given { @link <unk> } .
add a new { @link <unk> } to the queue .
starts the reading handler .
offer an item to the subscriber .
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
gets the { @link disposable } .
create an observable that calls { @link <unk> ( observable ) } on a { @link observable } and creates a { @link <unk> } . <p > the { @link observable } can be used to create a { @link <unk> } . <p > a { @link <unk> } can be used to create a { @link <unk> } . <p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a concatenated { @link flowable } that emits the concatenation of the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . f . png alt = > <dl > <dt >
returns a flowable that mirrors the source publisher and emits the first one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > backpressure : < / b
concatenates the source publisher into a single publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . concat . pn . png alt = > <dl > <dt > <b > backpressure : < / b
returns a concatenated { @link flowable } that emits the results of a { @link iterable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . f . png alt = > <dl > <dt > <b >
returns a concatenated { @link flowable } that emits the concatenation of the source iterables until all of them terminate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . f . png alt = > <dl > <dt
concatenates a sequence of publishers into a sequence of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . f . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / from . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromcallable . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / fromcallable . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a cold synchronous stateful and backpressure - aware generator of values . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / generate . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher after a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . s . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the items emitted by the source publisher after a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . timeout . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the items emitted by the source publisher after a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . s . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the items emitted by the source publisher after a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the items emitted by the source publisher after a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . s . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . f . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits all items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a concatenated { @link flowable } that emits the concatenation of the source iterables until all of them terminate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . f . png alt = > <dl > <dt
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the range of items from the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <p
returns a flowable that emits the items emitted by the source publisher into a single sequence of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher where each item emitted by the source publisher is returned . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = >
returns a flowable that emits a sequence of items from the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > backpressure : < /
returns a concatenated { @link flowable } that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . f . png alt = > <dl > <dt > <b > backpressure
returns a concatenated { @link flowable } that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the items emitted by the source publisher after a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timer . s . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that mirrors the source publisher using a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
concatenate single single single single single single single single single single one . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a single { @link flowable } that emits the first non - overlapping { @link singlesource } emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . f . png alt = >
returns a flowable that calls the { @link <unk> ( subscriber ) } method and emits the result of the returned { @link flowable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a flowable that emits the results of applying a function to each item emitted by the source publisher and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl >
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher when the source publisher completes when the source publisher completes . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
returns a flowable that emits the last item emitted by the source publisher that subscribes to the current item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a single that emits the last item emitted by the source publisher and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a single that emits the last item emitted by the source publisher and emits the last item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl >
returns a single that emits the single item emitted by the source publisher and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b >
returns a single that emits the single item emitted by the source publisher and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b >
returns a completable instance that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the items emitted by the finite source publisher into a buffer . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
subscribes to the source publisher and returns a subscribes to the resulting publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that subscribes to all items emitted by the source publisher into a publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the items emitted by the source publisher asynchronously . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the items emitted by the source publisher where each item is emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a flowable that emits the items emitted by the source publisher where each item emitted by the source publisher completes when the source publisher completes . <dl > <dt > <b > backpressure : < / b > < / dt > <dd > {
returns a flowable that emits items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the items emitted by the source publisher which emits the items emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt >
returns a flowable that emits the results of applying a given timespan to the specified scheduler . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b >
returns a flowable that emits windows until a given timespan completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that mirrors the source publisher and a sequence of results . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <p
returns a flowable that emits the items emitted by the source publisher into a window . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher into a window . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the boundary emitted items from the source publisher followed by the boundary of the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher if it encounters an error . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher asynchronously . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
collects the items emitted by the finite source publisher into a single { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / collect . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that maps each item emitted by the source publisher into a publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
maps the given { @code <unk> } to a { @code completable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
maps a sequence of { @code <unk> } to a { @code completable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure : <
maps the upstream items into a single { @link flowable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that maps each item emitted by the source publisher to a publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . <unk> . png alt = > <dl > <dt > <b >
maps the upstream items into a single publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . png alt = > <dl > <dt > <b > backpressure : < / b > <p
returns a flowable that emits the results of applying a function to each item emitted by the source publisher that emits the results of applying the provided mapping function to each item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators
returns a flowable that emits the results of applying a function to each item emitted by the source publisher and emits the results of applying a function to each item emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images /
returns a flowable that emits the results of applying a function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . f . png alt = > <dl > <dt >
returns a flowable that emits the results of applying the given function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt
returns a flowable that skips items emitted by the source publisher with the given other publisher and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . png alt = > <dl > <dt > <b
returns a flowable that skips items emitted by the source publisher and emits the result of { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . png alt = > <dl > <dt > <b > backpressure :
returns a single that emits the single item emitted by the source publisher and emits the result . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b >
returns a single that emits the number of items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that delays each item emitted by the source publisher and emits the result of overlapping events . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the first item emitted by the source publisher after the first item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl
returns a flowable that emits the items emitted by the source publisher before the specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the items emitted by the source publisher after a specified delay . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that delays each item emitted by the source publisher and emits the result of the specified type . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / delay . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that maps each item emitted by the source publisher to a publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a concatenated { @link flowable } that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . f . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the finite source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / distinct . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the results of applying a function to each item emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a concatenated { @link flowable } that emits the items emitted by the source publisher that emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / distinct . png alt = >
returns a flowable that emits the items emitted by the source publisher into a single { @link flowable } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the results of applying a given predicate to each item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . <unk> . png alt = > <dl > <dt > <b > scheduler :
calls the specified action after this maybe signals onsuccess onerror or oncomplete or onerror . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the items emitted by the source publisher after the lifecycle of the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
calls the { @code <unk> ( throwable ) onerror } method . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that emits the items emitted by the source publisher when the source publisher completes when the source publisher completes . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
calls { @code onerror ( oncomplete ) } when it invokes { @code oncomplete } . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
returns a flowable that subscribes to all items emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the items emitted by the source publisher once the lifecycle of the source publisher completes . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that calls the { @link <unk> ( subscriber ) onerror } function on each item emitted by the source { @link publisher } and emits its result . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk>
calls the { @code onerror } when it s success . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
calls the { @code onerror } when it is success . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > < /
returns a flowable that emits the items emitted by the source publisher when the source publisher completes when the subscriber subscribes . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher when the source publisher completes when the source publisher completes . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
instructs a publisher to a { @link flowable } that subscribes to all items emitted by the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a single that emits the element at the specified index in the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < /
returns a single that emits the element at the specified index in the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the results of applying a given function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher if the source publisher is empty . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure
returns a single that emits the first item emitted by the source publisher or null if it encounters an error . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the finite source publisher into a buffer . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the results of applying the given function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / concat . png alt = > <dl > <dt > <b
returns a flowable that emits the results of applying the given function to each item emitted by the source if applicable . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . maybe . png alt = > <dl >
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the source publisher into a flat stream of values . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt
returns a flowable that emits the results of replacing all the values emitted by the source publisher into a single { @link completable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt =
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the source publisher and then completes the resulting { @code <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk>
returns a flowable that emits the results of applying a function to each item emitted by the source publisher and emits the resulting results . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl >
returns a flowable that emits the results of applying a provided { @code <unk> } to each item emitted by the source publisher and emits the results of a { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx -
returns a flowable that subscribes to all items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
instructs a publisher to a { @code <unk> } when it encounters an error . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that subscribes to all items emitted by the source publisher until it encounters an error . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler
subscribes to the items of an observable that emits items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that emits the items emitted by the source publisher into a single { @link flowable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher into a single { @link flowable } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt >
returns a flowable that emits the results of applying a function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a completable instance that subscribes to the specified publisher and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a single that emits the items emitted by the finite source publisher into a single { @link list } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a single that emits the last item emitted by the source publisher after the last item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt
returns a single that emits the last item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that emits the items emitted by the source publisher that satisfies the specified predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b > backpressure : < / b > <p
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / merge . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that calls { @link <unk> ( subscriber ) } on the specified { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / observeon . png alt = > <dl > <dt > <b >
instructs a publisher that emits the items emitted by the source publisher into a buffer . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
instructs a publisher that is emitting items faster than the buffer s capacity . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the items emitted by the source publisher when the source publisher completes emitting items . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher when the source publisher completes emitting items . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
instructs a publisher to emit an additional function on each item . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that mirrors the source publisher and emits the first item emitted by the source publisher . <p > <img width = 640 height = 385 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / amb . png alt = > <dl > <dt > <b >
returns a { @link completable } which emits the items emitted by the source publisher to the specified { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher to a publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < /
returns a flowable that emits the items emitted by the source publisher asynchronously . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the items emitted by the source publisher asynchronously . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
maps the upstream items into a single { @link maybe } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <p
returns a flowable that emits the items emitted by the source publisher where each item emitted by the source publisher can occur in the resulting publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt =
returns a flowable that emits the results of applying the provided mapping function to each item emitted by the source publisher and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a flowable that emits the items emitted by the source publisher once a retry completes . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher that satisfies the specified predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that mirrors the source publisher . <dl > <dt > <b > backpressure : < / b > < / dt > <dd > {
returns a flowable that emits the items emitted by the source publisher before completing the specified selector . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher before completing the specified selector . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher asynchronously . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b >
returns a flowable that mirrors the source publisher after a specified amount of time . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl > <dt >
returns a flowable that emits the last emitted items from the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the items emitted by the source publisher asynchronously . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the items emitted by the source publisher once a retry completes . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher once a retry completes . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . retry . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher that satisfies the given predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . <unk> . png alt = > <dl > <dt >
subscribes to the given observer . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / subscribe . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt > <dd >
returns a flowable that mirrors the source publisher after a specified timeout . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > scheduler : < / b > <p
returns a flowable that emits only the first item emitted by the source publisher after the first time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b
returns a flowable that delays each item emitted by the source publisher and emits its result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a { @link flowable } which applies an { @link <unk> } to each item emitted by the source publisher produced by { @link <unk> () } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a single that emits the single item emitted by the source publisher and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b >
returns a single that emits the single item emitted by the source publisher and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / single . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher after a given amount of times . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / repeat . <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits a specified amount of time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b > scheduler : < / b > <p
returns a flowable that emits the last emitted items from the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the items emitted by the source publisher that satisfies the specified predicate . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the last emitted items from the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the last emitted items from the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the items emitted by the source publisher that satisfies the specified predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the finite source publisher into a single { @link flowable } . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the finite source publisher into a single { @link flowable } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / startwith . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / from . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns a flowable that subscribes to all items emitted by the source publisher into a publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
instructs a publisher to a { @link <unk> } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > < / dt >
subscribes to all items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b > <
returns a flowable that subscribes to each item emitted by the source publisher and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
returns a flowable that subscribes to the specified { @link scheduler } that subscribes to the source publisher . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / subscribe . png alt = > <dl > <dt > <b > scheduler
returns a flowable that skips items emitted by the source publisher with the given other publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : <
returns a flowable that emits the results of applying the specified function to each item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / completable . <unk> . png alt = > <dl > <dt
returns a flowable that emits the results of applying a function to each emitted item . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the items emitted by the source publisher that satisfies the specified predicate . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher after a specified amount of time . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a flowable that emits the last emitted items from the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the last item emitted by the source publisher that satisfies the specified criteria . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure
returns a flowable that emits the items emitted by the source publisher after the last item emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt >
returns a flowable that emits the last emitted items from the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns a flowable that emits the last emitted items from the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : < / b >
returns an observable that emits items emitted by the source observable . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that skips items emitted by the source publisher and emits the result of the given other publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b
returns a flowable that emits the items emitted by the source publisher where each item emitted by this flowable will occur . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / retry . png alt = > <dl > <dt >
returns a flowable that emits the items emitted by the source publisher after the specified duration . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits only the first item emitted by the source publisher after the first item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = >
returns a flowable that emits only the first item emitted by the source publisher after the first item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = >
returns a flowable that mirrors the source publisher with a fixed duration of time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the results of a specified time unit . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / time . <unk> . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that emits the results of a specified time unit . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timestamp . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that mirrors the source publisher and other item emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = >
returns a flowable that mirrors the source publisher after a specified timeout . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . png alt = > <dl > <dt > <b > scheduler : < / b > <p
returns a flowable that mirrors the source publisher after a specified timeout . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl > <dt > <b > scheduler : < / b
returns a flowable that mirrors the source publisher and other item emitted by the source publisher . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = >
returns a flowable that emits the results of a specified time unit . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timestamp . <unk> . png alt = > <dl > <dt > <b > scheduler :
returns a flowable that calls the { @link <unk> ( subscriber ) onerror } method when it encounters an error . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = >
returns a single that emits the last item emitted by the source publisher and emits the result . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that emits the items emitted by the source publisher asynchronously . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a single that emits all of the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a { @link single } that emits the items emitted by the source publisher into a single { @link map } . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
returns a flowable that emits the last item emitted by the source publisher and emits the last item emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl >
returns a single that emits the items emitted by the finite source publisher into a sorted list . <p > <img width = 640 height = 310 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b >
returns a flowable that subscribes to the first item emitted by the source publisher and emits the items from the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b >
returns a flowable that emits items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt >
returns a flowable that emits windows until a given timespan completes . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt >
returns a flowable that emits windows until a given timespan completes down . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt >
returns a flowable that emits items emitted by the source publisher into a window . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher where each item emitted by the source publisher can be emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt
returns a flowable that emits the results of a window from the source publisher . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher into a window . <p > <img width = 640 height = 315 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / window . png alt = > <dl > <dt > <b > backpressure :
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / maybe . png alt = > <dl > <dt > <b > scheduler : < / b > <p
returns a flowable that emits the result of applying the provided bifunction function to each value emitted by the source stream to the other maybe . <dl > <dt > <b > scheduler : < / b > < / dt > <dd > {
/ * ( non - javadoc )
/ * ( non - javadoc )
schedules the given task for execution of the given runnable .
send a single request to the list of documents .
executes the { @link <unk> ( object ) } method on the given { @link <unk> } .
creates a single { @link <unk> } object . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
/ * ( non - javadoc )
converts an { @link <unk> } to a { @link <unk> } .
/ * ( non - javadoc )
returns a flowable that emits the items emitted by the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b
returns a flowable that mirrors the source publisher emitting items from the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = > <dl > <dt > <b > scheduler : <
returns a flowable that emits the items emitted by the source publisher before a specified timeout . <p > <img width = 640 height = 305 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / timeout . timeout . png alt = > <dl > <dt > <b > scheduler
returns a flowable that emits the last emitted items from the source publisher . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = > <dl > <dt > <b > scheduler : < /
returns a flowable that emits the items emitted by the source publisher after a given amount of time . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > scheduler
instructs a publisher to auto - connect using { @link <unk> ( <unk> ) } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < /
request a new { @link subscription } .
sets the resource at index { @code index } and returns { @code true } if { @code index } is { @code null } .
replaces the resource identified by the given { @code <unk> } with the given { @code <unk> } .
borrow an object from the blocking queue .
add a {
removes the ------------------------------------------------------------------
returns a { @link flowable } that emits the items emitted by the source { @link publisher } and emits the resulting values . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . s . png alt = >
returns a flowable that calls { @link <unk> ( subscriber ) } on the specified { @link scheduler } . <p > <img width = 640 height = <unk> src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b >
create a { @link <unk> } . <p > this method differs from { @link <unk> ( java . util . function . <unk> ( java . util . list ) } ) . <p > the { @code source } can be { @link <unk> } or { @link <unk> } . <p > the { @code source } can be { @code
writes a { @link flowable } to a { @link <unk> } .
creates a new { @link <unk> } with the given age and size . <p > if the { @link scheduler } is not { @code null } a { @link <unk> } will be generated . <p > if the { @link scheduler } is non - null the { @link <unk> () } will be { @link <unk> () } .
creates a { @link <unk> } with the given age and size . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . create . png alt = >
returns a { @link <unk> } that subscribes to the source { @link <unk> } . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
parses the given { @code <unk> } to a { @code <unk> } .
creates a scheduler using the specified scheduler .
creates a new { @link serializer } for the given type .
get the generic declaration of the given class .
creates a new { @code future } from the given { @code callable } .
create an implementation of { @link <unk> } .
creates a new {
gets the response converter for the specified type .
{ @inheritdoc }
gets the response converter for the specified type .
/ * ( non - javadoc )
gets the response converter for the specified type .
gets a response converter for the specified type .
if the given <code > jaxbcontext / code > is a <code > <unk> / code > the given <code > value< / code > is converted to a <code > <unk> / code > .
registers the {
creates an instance of { @link <unk> } matching the given { @link runnable } .
returns a new instance of { @code <unk> } with the given value .
<p > <unk> . < / p >
creates a new instance of { @link <unk> } .
sets the default delay for the specified amount of time .
sets the { @link exceptionhandler } to be used by the { @link <unk> } .
wait for the server to finish .
returns the number of milliseconds between the lower and upper bound .
sends a response to the cache .
creates a new { @link <unk> } with the given { @link response } .
sends an error response to the http response .
creates a new { @link <unk> } with the given { @link response } .
/ * -------------------------------------------------------------------------------
returns true if the given character is a cjk character of the given character .
/ * package
returns a list of {
/ * ( non - javadoc )
reset the input stream .
process <unk> file .
returns <unk> .
parses a { @link <unk> } .
parses the path .
{ @link <unk> ( string ) }
reads a buffer from the buffer .
initializes the cursor .
adds a path to the <unk> .
/ * <unk>
parses the char .
returns the next { @link <unk> } .
<unk> <unk> <unk>
/ * ( non - javadoc )
parses a bidirectional version .
adds a not cross rule .
removes the tail .
/ * ( non - javadoc )
gets the <unk> .
vars doc end
[ variable <unk> ]
adds a collection of words to the end of the dictionary .
<unk> <unk> () <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
<unk> + <unk>
returns a cp segment matching the character at the current position .
<unk> <unk> () <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
load the main dict .
<unk> > <unk>
load the remote extension .
<unk> <unk> <unk>
<p > <unk> . < / p >
create the <unk> dictionary .
/ * ( non - javadoc )
parses the request and sends it to the server .
adds a { @link <unk> } .
removes all of the elements from the head .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * block count .
<unk> <unk> <unk>
/ * ( non - javadoc )
appends { @code chars } starting at the { @code start } and { @code length } to this { @code <unk> } .
appends a new segment to the stringbuilder .
<unk> <unk> .
get the children map .
migrate segments .
compares this { @code instant } to another .
gets the qualified name of a typemirror .
/ * ( non - javadoc )
sets the status mapping .
sets the error parameters converter .
/ * ------------------------------------------------------------
sets the clock skew .
checks if the current user has the given role .
/ * ------------------------------------------------------------
<p > startup . < / p >
sets the algorithm to be used for generating the secret key .
/ * ( non - javadoc )
@deprecated use { @link <unk> ( string ) } instead .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
encrypt a password with the given password .
/ * ( non - javadoc )
/ * ( non - javadoc )
disable the specified {
get the maven version from spring s classloader .
return the { @link mono } of { @link authentication } for the specified { @link mono } .
returns true if the given class is supported by this array .
loads a { @link <unk> } from the specified { @link userdetails } .
/ * ( non - javadoc )
builds the iterator .
create a { @link collection } of { @link <unk> } s .
creates a session map for the given request .
refresh the access status of an access control entry .
exchange the current { @link javax . context . context . <unk> } instance using the specified { @link <unk> } .
/ * ( non - javadoc )
returns a list of <code > <unk> / code > representing a new <code > <unk> / code > request .
gets the authentication details service .
initializes the default login page .
configure endpoint access requests .
/ * ( non - javadoc )
create the <unk> from configurer .
create a <unk> from configurer .
/ * ( non - javadoc )
add filter after
adds a filter before
{ @inheritdoc }
add filter at
loads the { @link <unk> } from the given { @link string } .
{ @inheritdoc }
前序递归列出所有文件 <unk> .
<p > <unk> . < / p >
/ * ( non - javadoc )
searches for multiple attribute values for multiple attribute values .
searches for multiple attribute values for multiple attribute values .
/ * ( non - javadoc )
returns a { @link list } of { @link <unk> } s that match the given arguments .
search for a single { @link <unk> } .
prints the { @link searchcontrols } object .
<p > <unk> . < / p >
updates the primary keys of the query .
read acl by id .
create a new instance of { @link <unk> } .
converts the acl attributes to an { @link acl } .
create a new sid .
returns the roles associated with the given portlet request .
<p > <unk> . < / p >
<p > sets the { @link <unk> } to be used by the { @link <unk> } . < / p >
runs the provided jws algorithm resolver .
create the bean definition from the given xml element .
/ * ( non - javadoc )
creates the servlet api filter .
/ * ( non - javadoc )
parse the <unk> .
/ * ( non - javadoc )
{ @link <unk> }
invokes the { @code <unk> } method on the given { @code targettype } .
/ * ( non - javadoc )
build a list of roles with the given authentication profiles .
<p > <unk> . < / p >
this method is called when the servlet context is created .
inserts the given spring security filter into the web security chain .
validate filters .
/ * ( non - javadoc )
returns the { @link javax . servlet . web . web . <unk> } of the web application context .
/ * ( non - javadoc )
get token for a specified series .
<p > <unk> . < / p >
{ @inheritdoc }
<p > <unk> . < / p >
returns the property name for the given attribute .
/ * ( non - javadoc )
validate the jwt against the specified token .
creates a new { @link <unk> } with the given { @link <unk> } .
sets the { @link <unk> } to use .
data managers ///////////////////////////////////////////////////////////
update the client policy policy
determines whether the session has been created .
returns the {
{ @inheritdoc }
/ * ( non - javadoc )
called when the authentication process is successful .
called when the client is successfully initialized .
initializes the { @link org . apache . beehive . netui . pageflow . security . <unk> } thrown by the { @link org . apache . beehive . netui . pageflow . annotations . <unk> } .
/ * ( non - javadoc )
factory method for creating a new { @link secretkey } .
生成 { @link secretkey } <unk>
factory method for creating a new { @link cipher } from the given { @link string } .
visible for testing
returns the { @link cipher } represented by the specified { @link cipher } .
creates a new { @link cipher } from the given parameters .
visible for testing
encrypts or decrypts a byte array .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
called when the authentication process is successful .
called when the client is successfully initialized .
/ * ( non - javadoc )
checks if the content length is specified .
this method gets the { @link <unk> } .
sets the allowed http methods .
sets the request url .
convert authorities to groups .
sets the http request url .
/ * ( non - javadoc )
sets the authentication failure url .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
configure the { @link <unk> } .
create a { @link net . dv8tion . jda . webhook . webhookclient webhookclients } .
set the { @link <unk> } for the given { @link <unk> } .
create a new { @link credhubtemplate } for the authorized client .
add a collection of {
validate the jwt against the given jwt .
/ * ( non - javadoc )
/ * ( non - javadoc )
--------------- protected methods ---------
transform an { @link object } to a { @link collection } of { @link <unk> } .
sets the { @link <unk> } associated with this { @link <unk> } .
sets the { @link resttemplate } passed as { @link <unk> } .
/ * ( non - javadoc )
gets the annotation of the given type .
/ * ( non - javadoc )
get all <code > <unk> / code > elements
add a {
/ * ( non - javadoc )
verifies the gitkit token in the given request .
sets the authentication cookie .
decode cookie value
encode a collection of query parameters into a url - encoded string
/ * ( non - javadoc )
extract the requested parameter from the request .
add a cookie to the request .
add a cookie to the request .
/ * ( non - javadoc )
<p > <unk> . < / p >
creates a new { @link converter } instance containing the given { @link <unk> } .
/ * ( non - javadoc )
returns a list of {
<p > <unk> . < / p >
load { @link authorities } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> }
authenticate a user .
saves a csrf token into the cache .
evaluate the decision vote for the given resource . this method can only be called if the <unk> is not <unk> .
/ * -------------------------------------------------------------------
sets the error page url .
/ * ( non - javadoc )
resolve the security context .
returns the query string for the local artifact .
create a pattern for the given artifact parameter name .
gets the service port .
authenticate and return the principal .
/ * ( non - javadoc )
log an exception .
{ @inheritdoc }
/ * ( non - javadoc )
<p > initializes the list of invocation invocations . < / p >
this method implements the { @link <unk> ( <unk> ) } method .
/ * ( non - javadoc )
initializes { @link <unk> } .
before call after {
sets the { @link <unk> } annotation for the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
set the { @link claims } for the specified { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets all the headers of the exception .
add a { @link <unk> } to the list of { @link <unk> } .
build the {
process the logout request .
/ * ( non - javadoc )
sets the { @link <unk> } to use .
attempts to create a { @link authentication } instance for the given { @link authentication } .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new { @link runnable } from the given { @link runnable } .
returns all the configuration attributes for this element .
transform the authorities to a collection of strings .
creates a new {
/ * --- protected methods ---
/ * ( non - javadoc )
set the environment properties .
partition the limit by request parameter .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the converter s converter .
sets the request class converter .
/ * ( non - javadoc )
gets the jwt from oidc .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * public void <unk> ( <unk> parser ) { <unk> <unk> = new <unk> ( <unk> ) ; }
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a new { @link <unk> } with the given name .
factory method for creating a new { @link userdetails } instance .
/ * ------------------------------------------------------------
/ * package
generate a digest based off the digest based on the rfc <unk> and rfc 2617 based on rfc <unk> . if no md5 digest generated for the specified username is specified then the challenge is generated .
{ @link <unk> ( string ) }
splits the { @link string } into a { @link string } array .
authenticate with {
{ @inheritdoc }
/ * ( non - javadoc )
checks if the authentication has been authenticated .
add the credentials to the registry .
initializes the { @link <unk> } for the given type .
adds the parameters to the authorization challenge .
/ * ( non - javadoc )
checks if the request requires authentication .
/ * ( non - javadoc )
/ * ( non - javadoc )
check if authenticated user is authenticated .
/ * ( non - javadoc )
checks if the proxy object is configured .
returns a list of users .
returns the <unk> for the web application context if any throws an exception .
finds the <unk> for the web application context . if the web application context is not a web application context it will be returned . otherwise the application context is returned .
creates a new {
create a {
/ * ( non - javadoc )
returns the { @link mono } of { @link mono }
converts a jwk string to a comma - separated string .
redirects to the specified url .
authenticate the given { @link authentication } .
create a new { @link authentication } instance .
votes on the security based on the security policies .
create a new { @link <unk> } from the { @link <unk> } .
handles an authentication request .
build the connection string .
obtains the username from the servlet request .
url encode a string .
/ * ( non - javadoc )
gets authenticated app instance .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new <unk> object .
create and return a new instance of the { @link <unk> } .
/ * --- private methods ---
create the authenticator .
transform password encoder .
sets the request entity converter converter .
prepare logout .
/ * ( non - javadoc )
set the status mapping .
sets the response response converter .
<p > <unk> . < / p >
/ * ( non - javadoc )
sets the { @link <unk> } to be used by the { @link <unk> } .
/ * ( non - javadoc )
loads the user details for the given assertion .
create a { @link net . dv8tion . jda . webhook . webhookclient webhookclients } .
set the { @link <unk> } for the given { @link <unk> } .
create a new { @link credhubtemplate } for the authorized client .
gets the web server url .
gets pre authenticated principal .
<p > <unk> . < / p >
loads a user s data from the data .
create a {
build a { @link java . util . map } of { @link map } of { @link map } of { @link map } of { @link map } .
creates a { @link map } of { @link map } s registration id .
creates a { @link map } of { @link map } s .
<p > <unk> . < / p >
<p > <unk> . < / p >
returns true if the specified { @link resource } has the given permission .
/ * ( non - javadoc )
computes the signature for the given username and password .
concatenate two byte arrays .
splits a byte array into a byte array .
<p > returns the <code > <unk> / code > for the given user . < / p >
----- private methods -----
<p > returns a collection of <code > <unk> / code > objects . < / p >
<p > <unk> . < / p >
/ * protected void <unk> ( string request ) { string <unk> = null ;
gets or creates a new object or creates a new one if it doesn t exist .
create a new { @link <unk> } for the given { @link <unk> } .
{ @link <unk> }
sets the shared object of the shared object to be shared .
get the shared object of the given class .
create a new { @link <unk> } .
get a new { @link list } of { @link <unk> } objects .
get a new instance of { @link <unk> } .
remove a { @link <unk> } from this { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a domain provider instance .
/ * ( non - javadoc )
{ @link <unk> ( httpservletrequest httpservletresponse ) }
/ * ------------------------------------------------------------
/ * ( non - javadoc )
this method returns a list of <unk> matching the given parameters .
normalizes a role .
/ * ( non - javadoc )
sets the username for the user .
/ * ( non - javadoc )
handles an auto login cookie .
handles an authentication request .
/ * ( non - javadoc )
handles an authentication request .
login to the user .
create a <unk> .
checks if the given role is in the role of the current user .
sets the location of the context .
sets the switch in the context .
sets the url of the switch failure .
/ * ( non - javadoc )
get the list of recently uploaded contacts for this user .
/ * --- private methods ---
authenticate with { @link <unk> } .
executes { @link <unk> } using { @link <unk> ( <unk> ) } .
/ * ( non - javadoc )
create an instance of { @link <unk> } .
validate jwt token
/ * ( non - javadoc )
returns true if the given class is supported by this <unk> .
/ * ( non - javadoc )
check if the access token is authorized to access the given exception .
create a new access expression
/ * ( non - javadoc )
change password .
get the { @link <unk> } .
authenticate the given { @link jsonparser } .
initialize the default login filter .
/ * ( non - javadoc )
create an remember - me service for the given key .
create token based on { @link username } { @link username } { @link username } { @link <unk> } and { @link <unk> } .
create an { @link userdetails } for the specified key .
gets the user details service .
set the { @link <unk> } for the given { @link function } .
login after a set of properties have been set .
transform this authorities to a collection of roles .
/ * ( non - javadoc )
tries to authenticate the given { @link <unk> } .
<unk> <unk> . <unk>
/ * ( non - javadoc )
sets the { @link <unk> } for the header .
disables default options .
{ @inheritdoc }
returns a { @link list } of { @link <unk> } s for the given { @link <unk> } .
add filter after
add filter at
add filter before
returns the annotation for the given class .
<p > <unk> . < / p >
returns a list of all oauth scopes .
sets the {
encode user details .
create a {
/ * ( non - javadoc )
/ * ( non - javadoc )
display admin page
display a new permission page .
add a permission .
delete a permission .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
creates a new builder for the given code .
returns a new error with the specified error code .
/ * ( non - javadoc )
create a {
create a { @link <unk> } bean from a resource .
create a list of <unk> from a list of users .
<p > <unk> . < / p >
creates a default access control manager for the given http request .
<p > getter for the field <code > <unk> / code > . < / p >
executes grails interceptor .
{ @link <unk> }
creates a new { @link <unk> } from a resource .
create a new { @link <unk> } from a string .
creates a <unk>
construct a dateintervalformat from <unk> .
get the list of mappings for the given element . <p >
returns the value of the first attribute with the given name .
{ @inheritdoc }
encode a string to a byte array .
decodes a byte array into a { @link string } .
gets ticket .
finds the { @link method } from the given { @link method } .
returns the names of the parameters of the given method .
returns the name of the parameter to use for the given parameter annotation .
add a token to the account
/ * ------------------------------------------------------------
add a map of status mappings to the map .
add a pin to the specified pin .
sets the report scheme to use .
/ * ( non - javadoc )
adds a secure method to the bean .
creates a new { @link java . util . list } of { @link class } s .
adds a new method to the registry .
adds the secure method to the registry .
/ * ( non - javadoc )
returns true if the host name is a match .
gets the <unk> .
saves a csrf token to the session .
loads the csrf token from session .
gets the username from oidc .
checks if the given { @code exchange } matches the given { @code exchange } .
create an { @link <unk> } with the given authority and client id .
create a { @link <unk> } with the given authorities .
<p > <unk> . < / p >
{ @inheritdoc }
configures the given request to be authenticated .
specifies the specified ant - processor analyzer matchers .
<p > <unk> . < / p >
/ * ( non - javadoc )
returns a {
resolve the given { @link <unk> } to the given { @link <unk> } .
create login context .
authenticate the given { @link authentication } .
logs an unexpected exception .
/ * ( non - javadoc )
process the incoming request with the given { @code <unk> } .
/ * ------------------------------------------------------------
returns a list of {
sets the list of users .
called when an application event is received from the application .
creates a set of request type mappings for the given { @link <unk> } .
/ * ( non - javadoc )
check permission for allowed authentication
determine if the controlled security context should be allowed to access the given uri .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> <unk> <unk>
/ * ( non - javadoc )
invoke the method .
runs a example .
create a new { @link <unk> } .
performs a post to the specified object using the specified classloader .
called by the authentication process when an embedded filter is successful .
clears the authentication attributes .
returns the field of the specified class or null if not found .
get the value of the field with the given name .
/ * ( non - javadoc )
create a service url .
create the redirect url .
set the { @link <unk> } hierarchy .
checks if the current user is reachable from the current user .
checks if at least one of the authority of the authority is in the role .
checkstyle : off
build a collection of roles .
returns a copy of the given byte array .
adds the specified { @link net . dv8tion . jda . webhook . webhookclient webhookclients } to this cluster .
logs the current user .
creates a new { @link <unk> } for the specified { @link <unk> } .
get the callback handler for the specified credential .
create single logout filter .
/ * ( non - javadoc )
method to generate a md5 hash for a given byte array .
encode the password using the salt .
/ * ( non - javadoc )
/ * package
/ * ------------------------------------------------------------
login for login .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the given path is a normalized path .
checks for duplicate filters .
private methods :
registers a new { @link <unk> } .
returns all interfaces of the given class .
get the throwable s cause chain .
sets the cause of the specified {
returns true if the given exception is an instance of the given type .
checks if the given { @code throwable } matches the given { @code throwable } .
get the superclasses of the superclasses .
/ * ( non - javadoc )
set the retry policy directives .
sets the request entity converter converter .
sets the user - defined contexts .
gets a { @link map } of { @link map } of { @link string } s .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
convert authorities to groups .
compare two byte arrays .
{ @inheritdoc }
/ * <unk>
the implicit authorization request for the authorization request .
create a { @link net . dv8tion . jda . webhook . webhookclient webhookclients } using the { @link net . dv8tion . jda . webhook . webhookclient webhookclients } .
/ * ( non - javadoc )
this method is called by the { @link <unk> ( portlet ) } method of the { @link <unk> } .
sets the default failure url .
performs basic authentication on the specified { @link authentication } .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
create a { @link <unk> } for the given { @link authentication } .
creates a new { @link ioexception } .
retrieve the { @link <unk> } from the { @link <unk> } .
returns the full url of the request .
create a base url for the given http server .
expose the request url .
returns the relative url of the request .
returns true if the given callback is a valid absolute url .
see { @link <unk> ( map ) } for a set of data .
/ * ( non - javadoc )
<unk> ( <unk> )
convert a { @link <unk> } to a { @link <unk> } .
convert a long value to long .
create a new { @link <unk> } .
common implementation of {
builds a { @link authentication } instance .
/ * ( non - javadoc )
sets the { @link <unk> } to the given { @link <unk> } .
sets the { @link <unk> } to be used by the { @link <unk> } .
sets the { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the http request cache .
submits a { @link map } to the given { @link map } .
create a new { @link acl } object .
performs the creation of a { @link <unk> } .
create an object identity .
/ * ( non - javadoc )
create a new { @link <unk> } .
set the primary key for the next alarm .
returns the primary key for the given identity .
create a new { @link acl } object .
create an instance of the { @link <unk> } .
/ * ( non - javadoc )
schedules the given { @link callable } to the given { @link threadlocal } .
sets the { @link <unk> } to use .
maps a { @link list } of { @link <unk> } instances .
creates a { @link mono } that contains a { @link <unk> } that contains a { @link <unk> } .
creates a standard { @link bytes } encryptor .
creates a standard { @link bytes } using the password using the provided password .
creates an encryptor which allows the salt to be encryptor .
creates an encryptor which allows the salt to be used for encrypting text .
creates an encryptor which allows the salt to be used for encrypting text .
methode d ajout de <unk>
gets the { @link <unk> } .
evaluate the decision vote for the given resource . this method can only be called once .
gets a { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
obtain the subject of the given request .
sets the csrf content .
sets up to {
cas additional security configurer .
returns a {
returns the {
get the default { @link <unk> } for the specified { @link <unk> } .
get the { @link <unk> } for the given { @link <unk> } .
creates a { @link org . apache . commons . security . <unk> } handler for the given { @link <unk> } .
/ * ------------------------------------------------------------
determine the target url for the given path .
writes the target url to the target url .
sets the secure target url .
sets the target url parameter .
gets the { @link directory } from the { @link <unk> } .
/ * ( non - javadoc )
set the visibility of the controlled object .
construct a distinguished name from a string .
creates a new builder for the authorization request .
/ * ( non - javadoc )
/ * ( non - javadoc )
tries to initialize the { @link <unk> } .
configure jaas details .
configure jaas details service .
creates a shared object with the given name .
{ @inheritdoc }
publish the jaas environment url .
/ * ( non - javadoc )
put an invocation context .
update service uri .
/ * ( non - javadoc )
binds the { @link datasource } to the specified { @link directory } .
/ * ( non - javadoc )
<p > <unk> . < / p >
gets the current { @link mono } of { @link <unk> } .
<p > <unk> . < / p >
/ * public void <unk> ( <unk> <unk> ) { if ( disposable . <unk> () . <unk> () . <unk> () . <unk> () ) ; }
tokenize the given string as a list of strings .
sets the id of the <unk> service .
converts a long value to a date object .
gets the current date .
/ * ( non - javadoc )
converts a string to a datetime object .
{ @inheritdoc }
<p > invoke . < / p >
gets the method invocation method .
gets the static method invocation method .
handles an authentication request .
<p > <unk> . < / p >
maps a { @link list } of { @link <unk> } instances to a <unk> .
maps a { @link list } of { @link <unk> } instances .
format a set of {
maps a { @link list } of { @link class } instances to a { @link constraint } .
add a { @link <unk> } handler handler .
create a set of { @link <unk> } .
create a { @link authentication } object with the given authentication information .
/ * ( non - javadoc )
configure the { @link <unk> } .
/ * ( non - javadoc )
adds a folder to the keystore .
/ * ( non - javadoc )
sets the password .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
method to abort the authentication process .
{ @link <unk> ( string ) }
loads a { @link <unk> } from a resource .
converts a comma - separated list of strings to a list of alertdto objects .
{ @inheritdoc }
/ * ( non - javadoc )
create a { @link annotation } instance for the given { @link method } .
returns the principal name for the given subject .
returns a list of all the web properties of the given security group .
change password .
build the { @link distinguished name } for the specified group .
/ * ( non - javadoc )
returns a list of <code > <unk> / code > s that match the given <code > <unk> / code > .
/ * ( non - javadoc )
/ * this method is called when a session is being purged .
send exceeded sessions exceeded .
/ * ( non - javadoc )
refresh the auth token
calls { @link <unk> ( com . <unk> . client . client . client . client . <unk> ) } with the given { @link <unk> } .
/ * ( non - javadoc )
creates a new authentication token .
/ * ( non - javadoc )
called when the session is closed .
/ * ( non - javadoc )
returns the list of { @link <unk> filters } for the given { @link <unk> } .
returns a list of filters .
this method will be called when the data has been initialized .
<p > <unk> . < / p >
creates and returns a { @link authentication } object with the given authentication token .
checks if the current user has the given permission .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the relative name of a distinguished name .
returns the full dn of the specified dn .
set the <unk> converter .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a copy of this form .
<p > <unk> . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
marshall the given parameter to the given log .
create a new authentication scheme with the given username and password .
<p > <unk> . < / p >
adds a filter to the web server .
adds a list of filters to the server .
sets the optional filters .
{ @link objectmapper }
creates a list of arguments for a list of arguments .
get response .
get response .
calls { @link <unk> ( string object ... ) } with the given parameters .
<unk> > <unk>
get response .
delete a model .
creates a new { @link <unk> } with the given parameters .
perform an http head call with the specified path and path parameters .
creates a new { @link <unk> } with the given parameters .
calls { @link <unk> ( string object ... ) } with the given parameters .
creates a new { @link <unk> } with the given parameters .
/ * ------------------------------------------------------------
creates a new { @link <unk> } instance for the given path parameters .
creates a { @link httprequest } with the given { @link method } .
creates a new { @link httprequest } .
creates a new request builder .
creates a new request builder .
/ * ( non - javadoc )
/ * ( non - javadoc )
retrieve the { @link <unk> } for the given user name and password .
{ @inheritdoc }
get the { @link sslsocketfactory } from the given { @link <unk> } .
creates a new instance of { @link <unk> } .
creates a new instance of { @link sslcontext } .
<p > <unk> . < / p >
/ * ( non - javadoc )
build an {
reset the <unk>
sets the ssl configuration for ssl configuration .
initializes { @link <unk> } and { @link <unk> } asynchronously .
generate key store key
configure trust store
new truststore .
configure trust store
configure trust store
checks if the given string is a valid uri scheme .
sets the proxy host and port of the proxy .
apply the filter to the given uri .
prints the response to a string .
configures the { @link <unk> } for the given { @link <unk> } .
creates a new encoder for the given content - type header .
returns a list of { @link encoder } s that contains the given content - type .
returns a list of { @link encoder } s that contains the given content - type .
returns a default {
create a new uri template with the given charset .
create a new {
send a { @link encoder } to the given { @link contenttype } .
returns a new {
gson invokes this call - back method during deserialization when it encounters a field of the specified type .
returns a new {
returns a new {
<p > <unk> . < / p >
create a new instance of { @link <unk> } .
create a { @link <unk> } for the given { @link session } .
create a { @link <unk> } for the given { @link <unk> } .
create a new { @link <unk> } for the given { @link config } .
create a new instance of { @link <unk> } .
create a new instance of { @link <unk> } .
creates a new instance of <unk> with the given header config .
creates a new instance of { @link <unk> } .
creates and returns a new <unk> with the given configurations .
creates a new instance of { @link <unk> } .
configures the {
creates a new instance of the { @link <unk> } .
url decodes a string into a { @link <unk> } .
creates features if needed .
gets the certificate authentication settings .
{ @link <unk> () }
creates a new instance of {
create a new { @link <unk> } for the given { @link map } .
create a logging configuration for the given uri .
returns a { @link <unk> } for the specified { @link <unk> } .
create a new { @link <unk> } instance for the specified { @link java . util . properties } .
disable the loading of the loading entity factory .
parse the default { @link <unk> } .
declare a new { @link <unk> } .
executes the api action .
perform a get operation on the server .
{ @inheritdoc }
perform a post .
perform a patch operation on the authenticated user .
perform a patch request .
delegates to {
executes a request .
factory method for handling <code > <unk> / code > action .
/ * ------------------------------------------------------------
build the default response handlers .
this method is called when a successful call to {
sets the series of series of series of series of uris .
replace all the headers in the specified map .
<strong > [ icu ] < / strong > sets the value of the proxy parameter to be used by the client to interact with the client .
sets the name of the runtime runtime property .
add a header to the whitelist .
/ * ( non - javadoc )
sets the content of the { @link inputstream } to the given { @code charset } .
sets the charset of the media type .
changes the password of the default { @link <unk> } .
/ * package
sets the end point of the uri .
sets the credentials for the user .
initializes the ntlm session .
connect to the server .
creates a new instance of { @link sslcontext } .
<p > configures the <b > crest< / b > instance to authenticate all requests using oauth 1 . 0< / p >
<p > <unk> . < / p >
returns the content type of the response .
creates a new array of { @code headers } with the given headers .
creates a default {
reset the {
get the { @link method } for the given path and path .
creates and returns a new { @link <unk> } instance with the given path parameters .
http : // stackoverflow . com / questions / <unk> / how - do - you - create - a - resource - with - the - path - in - <unk>
create a new { @link <unk> } with the given parameters .
http : // www . <unk> . com / <unk> / <unk> / <unk> . html
delete the shipments with the given path .
creates a new { @link <unk> } with the given parameters .
create a mock object that contains a head of the given path .
creates a new { @link <unk> } with the given parameters .
<p > patch . < / p >
create a new { @link <unk> } with the given parameters .
mock a single { @link <unk> } .
creates a new { @link <unk> } instance for the given path parameters .
creates a new { @link methodhandle } for the given { @link method } .
creates a new { @link httprequest } .
request the received { @link <unk> } .
creates a new request builder .
create a new {
create a new { @link <unk> } object .
create a new {
{ @link <unk> } .
create a new { @link <unk> } .
{ @link <unk> } <unk>
creates a { @link predicate } for { @link <unk> } s .
create a {
create a {
creates a { @link matcher } for { @link <unk> } s .
sets the content type of the query .
sets the content type of the response .
adds a header to the response .
/ * ( non - javadoc )
creates a { @link org . hamcrest . matcher } for a jsoup { @link org . apache . annotation . <unk> } .
returns true if the given string is a comment comment .
set the { @link org . <unk> . <unk> . <unk> . <unk> } for the subscription .
returns a matcher that matches the given simple matcher .
returns a {
inject a { @link org . <unk> . <unk> . transport . <unk> } from the { @link org . apache . beehive . <unk> . <unk> }
returns a matcher that matches the given matcher .
returns a matcher that logically ands the specified matcher with the specified matcher .
sets the maximum age of the invite .
adds a condition to the builder .
add a header to the response
adds a condition to the builder .
removes the cookie with the given name .
asserts that the provided cookie name matches the expected value .
sets the { @link <unk> } to be used by the { @link com . <unk> . api . queue . <unk> ( int ) } method .
sets the target hosts from json .
appends a path to the patch spec .
creates a matcher for {
sets the {
adds a rate specification to the response .
creates a new { @link <unk> } for the specified { @link <unk> } .
/ * ( non - javadoc )
returns a {
returns a {
/ * ( non - javadoc )
returns a {
creates a { @link org . hamcrest . matcher } for the given { @link <unk> } .
creates a { @link <unk> } that matches the given { @link <unk> } .
creates a { @link matcher } for the given { @link <unk> } .
returns the entity with the given name .
returns the value of the entity with the given id .
returns a list of entities with the given name .
returns a list of all the values of the specified name in this list .
creates a { @link <unk> } instance .
creates a new { @link <unk> } for the given host and password .
<p > connect . < / p >
registers a proxy with the given username and password .
returns a {
returns a { @link <unk> } instance for the given { @link jsonparser } .
returns a { @link <unk> } instance for the given { @link <unk> } .
unmarshal config object .
creates a { @link <unk> } instance for the given { @link <unk> } .
creates a { @link <unk> } instance for the given { @link <unk> } .
checks if the given location is absolute .
returns a default {
marshall logging and response .
returns the top - level value for the given { @code <unk> } .
{ @link <unk> }
create the mock object .
returns a copy of the {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a default { @link <unk> } instance .
updates the default { @link <unk> } .
create a new instance of { @link <unk> } .
/ * ( non - javadoc )
add a new header to the response .
adds an attribute to the spec .
add a request header to the request
add a new header to the request
the file with the upload path
set a multi - part header .
adds a multi - part form .
sets the session id for the given session id .
sets the { @link <unk> } for the given { @link <unk> } .
adds the specified result handlers to the validator .
creates a new instance of { @link <unk> } .
/ * ( non - javadoc )
executes the http client request .
returns a new {
start building a head request .
create a new { @link <unk> } with the given { @link <unk> } .
<p > <unk> . < / p >
returns the int value associated with the given key as an integer .
returns the byte value for the given key .
returns the value mapped by {
returns the float value for the given path . if the value is a float or cannot be converted to a float then the defaultvalue is returned .
returns the value associated with the given key as a double .
returns the value mapped by {
/ * ( non - javadoc )
get a set of entries from the specified map .
returns the object associated with the given <code > key< / code > .
get object property by path .
adds a parameter to the request .
/ * ( non - javadoc )
create a new configuration of { @link <unk> } .
creates a { @link <unk> } from a { @link map } of properties .
creates a new instance of { @link <unk> } with the given parameters .
creates a new configuration object with the given name and value .
configures the {
executes the api action .
creates a new { @link <unk> } from the given { @link documentbuilderfactory } .
parse the given { @link reader } into a { @link <unk> } .
parse a { @link document } from a { @link reader } .
parse the xml representation of a { @link <unk> } .
creates a default { @link <unk> } for the given content - type .
sets the default charset for the decoder .
sets the default charset for the decoder .
returns a default {
reads the content of the { @link java . io . serializable } object .
create a {
gets attribute value .
gets list as list list .
returns a deep copy of a pdef map .
gets object meta data .
gets the value of the property as an integer .
gets the boolean value of the specified property path .
get char value by path .
get byte value .
gets the short value for the property path .
get float value .
returns the value mapped by {
returns the value mapped by {
gets the value of a property as a string .
registers an object in the cache .
create a new param with the given key and value .
gets the head of the document .
/ * ( non - javadoc )
set the { @link mapper } object to be used by { @link <unk> () } .
sets the value of the given object to the request spec .
updates the value of a cookie with the specified key .
添加命名的参数 : propertyname - > 命名的参数
添加命名的参数 : propertyname - > 命名的参数
adds a query parameter to the request .
添加命名的参数 : propertyname - > 命名的参数
添加命名的参数 : propertyname - > 命名的参数
adds a parameter to the request .
<p > setter for the operation . < / p >
adds a query parameter to the url .
sets the default { @link <unk> } to be used to connect to a client .
<p > sets the { @link <unk> } to be used to connect to the client using the given password . < / p >
adds a header to the request .
adds an input stream to the request .
set a multi - part content .
sets the session id for the given session id .
{ @inheritdoc }
forward to the main <unk> server .
set the default proxy for this request .
returns a new {
middleware that creates a { @link <unk> } that matches the given path .
middleware that creates a { @link middleware } that ends with a { @link <unk> } .
middleware that creates a { @link middleware } that starts with a { @link <unk> } .
middleware that creates a { @link <unk> } with the given path .
creates a mapping from the specified {
creates an { @link sslconfig } from the given { @link file } .
<p > <unk> . < / p >
{ @inheritdoc }
creates an sslcontext that trusts all certificates .
creates an sslconfig from the specified { @link <unk> } .
returns the cookie with the specified name .
/ * ( non - javadoc )
add the given cookie to the list of cookies .
constructs a guice provider with the given type and name .
clean up the given set of keys .
adds all the types of the given types to the map .
returns the { @link <unk> } represented by this { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the given key is a member of the given type .
creates a { @link <unk> } for the given { @link key } .
returns the key of the given { @code key } with the given { @code key } .
creates a new { @link binding } for the given binding .
returns the <unk> for the given ip .
returns true if the given binding is singleton .
creates a binding with the given key .
creates a {
/ * ( non - javadoc )
returns an {
creates a { @link <unk> } from the { @link <unk> } .
/ * ( non - javadoc )
find all parameters of a given list of { @link <unk> } s .
create a sub context .
utility method to get the value of the parameter bindings .
creates the label label for the given node .
returns a new { @link <unk> } for the given { @link <unk> } .
creates a new validation set for the given arguments .
<p > <unk> . < / p >
returns a new {
returns a new {
binds the {
binds a {
returns a new {
returns a new { @link <unk> } for the given { @link constructor } .
returns a new { @link <unk> } for the given { @link constructor } .
returns the constructor for the given method .
returns an instance of { @code <unk> } for the given { @code method } .
returns a set of { @link <unk> } s for the given { @code type } and { @code <unk> } fields .
returns a set of { @link <unk> } s for the given { @link type } .
returns the value of the { @link <unk> } annotation for the given { @link <unk> } .
returns the { @link <unk> } for the given { @link type } .
returns true if the given method is a method of the given class .
check whether the given method is of the given type and if the given method is public i . e . if the target class is a public interface and the target class is a public interface .
initializes the resolution callback .
returns a {
creates a new { @link <unk> } with the given { @link <unk> } .
returns a new instance of the given { @code instance } with the given { @code <unk> } .
invokes the given {
invokes the { @link <unk> ( eventtype ) } with the given { @link bimap } .
get the generic type parameter of a subclass .
returns a {
gets a type token .
resolves the type arguments for the given types .
returns the generic type of the given generic type .
returns the { @link <unk> } for the given { @link field } .
returns the list of {
returns a list of {
/ * ( non - javadoc )
/ * public void <unk> () { return <unk> () ; }
creates a new instance of the given type literal .
returns true if the given type is an array .
returns the raw type for the given {
resolve the given { @link typevariable } .
initialize the servlets .
visible for testing
matches the {
create a new instance of this class for a given member .
create a new class for a given member .
checks if the given class has the same version as the proxy .
returns true if the specified class is a public nullary constructor .
/ * ( non - javadoc )
returns the value of the given {
gets the key .
gets the binding annotation .
/ * ( non - javadoc )
/ * ( non - javadoc )
loads all of the registered { @link <unk> } s and adds them to the { @link <unk> } .
<p > newinstance . < / p >
finds all { @link <unk> } s for the given type .
/ * ------------------------------------------------------------
resolve aliases for a given set of aliases .
returns true if this stage is eager singleton .
/ * ( non - javadoc )
returns true if the given binding is scoped to the given scope .
normalize a path .
decodes a string using % encoding .
returns true if the given binding is singleton .
returns the { @link annotation } instance for the given { @link class } .
checks if the given annotation is equal to the given annotation type .
finds the hash code of a class .
creates a string representation of the given annotation type .
get retention policy from class type .
returns the {
returns the { @link <unk> } annotation for the given annotation .
checks whether the given { @link <unk> } is a { @link <unk> } .
returns the key of the given {
returns the { @link annotation } for the given annotation .
returns the name of the named annotation .
checks if the given class is an annotation of the given type .
returns the name of the given {
initializes the resolution callback .
/ * ( non - javadoc )
returns the type of the member .
returns a new {
returns a new {
returns a new {
shortcut for {
returns the constructor for the given injector .
returns true if the given annotation has an annotation of the given type .
returns a new {
returns a { @link <unk> } for the given { @link <unk> } .
returns a { @link <unk> } for the given { @link key } .
returns a new {
returns a { @code <unk> } for the given { @code key } .
factory method to construct a new { @link <unk> } from the given { @link method } .
/ * package
get the source stylesheet from the stack .
/ * ( non - javadoc )
create a new instance of the { @link <unk> } .
create a {
returns a {
/ * ( non - javadoc )
create a new { @link <unk> } for the given module .
/ * ( non - javadoc )
/ * ( non - javadoc )
finds a constructor that matches the given method .
returns true if method has parameters that have any parameters .
returns a set of dependencies for the given constructor .
creates a { @link set } of { @link dependency } s for the { @link set } of { @link dependency } s .
returns whether the constructor is valid .
returns true if the constructor should be created .
intercepts the {
checkstyle : off
/ * ( non - javadoc )
determine whether the given method can be applied to the given { @link method } .
ensures that an object reference passed as a parameter to the calling method is not null .
throws a { @link illegalstateexception } with the given message .
returns a copy of the source .
/ * ( non - javadoc )
formats the given message using the given arguments .
convert the given { @link object } to the given { @link class } .
create a new <unk> for the given binder type .
initialize the <unk> .
get the next filter for the given request .
returns { @code true } if { @code member } has { @code member . injection } .
/ * ( non - javadoc )
returns a provider for the given {
/ * ( non - javadoc )
returns a set of dependencies for the specified injection points .
{ @inheritdoc }
create a new instance of the property with the given name and default value .
get the system property <code > key< / code > or <code > system . getproperty< / code > .
/ * ( non - javadoc )
creates a parameterized type for a parameterized type .
creates a parameterized type for a parameterized type .
creates a { @link classnode } for the given { @link class type } .
returns true if the given type is a { @link <unk> } .
factory method for creating a { @link set } of { @link module } s for the given module .
finds the method with the given annotation .
binds a list of properties to the specified binder .
binds properties .
creates a guice injector using the given modules .
creates a new injector using the given { @link <unk> } .
this method returns the set of modules that should be used for <unk>
get the stack trace of the stack trace .
gets the config number for the given member .
/ * package
create a { @link map } from a collection of { @link key } s .
returns a composed { @link callable } that performs the given { @link callable } and returns the result of { @link ttlcallable } .
wrap a { @link callable } in a { @link callable } with a { @link <unk> } .
returns the value of the specified key in the given object .
returns the key of the given { @code key } if it exists .
implements the {
helper method for { @link <unk> ( class ) } .
process a { @link <unk> } .
returns a {
returns a type reference for the given type .
<p > <unk> . < / p >
binds the given { @link <unk> } to the given { @link <unk> } .
<p > <unk> . < / p >
<p > <unk> . < / p >
binds the given { @link <unk> } to the given { @link <unk> } .
binds the given { @link <unk> } to the given { @link class } .
binds the given { @link <unk> } to the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an annotation of the given type .
returns the strategy for the given annotation type .
<unk> { @link org . <unk> . <unk> . util . <unk> }
returns a list of modules in the given { @code modules } .
create a list of {
prunes the given exception with the given throwable .
create a { @link <unk> } .
creates a new { @link <unk> } .
/ * ( non - javadoc )
returns the list of {
returns the set of raw types of the members of this { @link <unk> } .
returns a list of { @link <unk> } s that match the supplied sources .
<p > <unk> . < / p >
formats a collection of error messages to a string .
ensures that the message is formatted according to the given arguments .
constructs and initializes a new { @link <unk> } with the given { @link throwable cause } and { @link string message } formatted with the given { @link object [] arguments } .
constructs and initializes a new { @link <unk> } with the given { @link throwable cause } and { @link string message } formatted with the given { @link object [] arguments } .
----- private methods -----
returns the cause of the given collection .
get the names of all classes in the given module .
/ * ( non - javadoc )
liberty change end
/ * ( non - javadoc )
returns a list of all patterns from the given strings .
get the stack trace of the given method .
register a list of additional modules .
unregisters the management module .
register the given { @link <unk> } .
main method .
converts a { @link <unk> } into an array of { @link stacktraceelement } s .
converts an array of { @link <unk> } s into an array of { @link <unk> } s .
evaluates the {
<pre > { @code key : { key : key } < / pre >
<code > <unk> ( com . google . inject . dependency . <unk> ) < / code >
returns a provider for the given instance .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
add a { @link <unk> } to the { @link <unk> } .
returns the result of calling {
<p > <unk> . < / p >
<unk> { @link <unk> } <unk>
add a { @link <unk> } to this { @link <unk> } .
<p > <unk> . < / p >
sets the url of the url .
decode protocol code .
unregisters a connection from the registry .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the { @link connection } object for the given { @link url } .
method <unk> .
create a connection pool for the given pool key .
remove a mail account .
<unk> or <unk>
method <unk> .
initializes the thread pool .
shuts down the connection manager .
ask the <unk> 同步调用
method called by <unk>
method called by <unk>
invokes <unk> synchronously .
invokes <unk> synchronously .
invokes <unk> synchronously .
invokes <unk> synchronously .
invokes <unk> synchronously .
invokes <unk> synchronously .
<unk> { @link <unk> } <unk>
invokes <unk> sync with given timeout .
<unk> invokes <unk>
invokes the {
create a standalone connection .
create a new { @link <unk> } .
fetch an <unk> from the given url .
opens a connection with the given url .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the connection to the given address .
enables the given connection to the given url .
<p > <unk> . < / p >
/ * ( non - javadoc )
initialize the channel .
wait for the entity to be closed .
close the channel
/ * ( non - javadoc )
calls the {
calls the {
register user attributes .
register a { @link <unk> } with the { @link <unk> } .
processes a { @link <unk> } if necessary .
/ * ( non - javadoc )
calls { @link <unk> ( <unk> ) } on the given { @link <unk> } .
sends a <unk> to the client .
create a directory context .
writes a command to the output stream .
handle <unk> .
requests a <unk> synchronously .
sends a { @link <unk> } to a { @link com . <unk> . common . client . <unk> } .
connect to a connection
switch to a protocol
converts an array of children to a protocol array .
convert bitset to byte array .
converts a int to a bitset .
try to obtain a {
opens a new connection to the given endpoint .
stop the timer .
create a one way to handle a <unk>
perform a serialize request .
invokes <unk> synchronously .
<unk> invokes <unk>
do asynchronous rpc procedure .
invokes <unk> with given timeout .
invokes the { @link <unk> ( request ) } method .
builds a <unk> command
adds all descendants of the given connections to the given list of connections .
/ * ( non - javadoc )
this method is used to close the select task .
handle a { @link <unk> } .
performs the opening handshake
returns a boolean value for the specified key .
de - serializes the {
/ * ( non - javadoc )
add a user event listener .
log a message at info level .
/ * ( non - javadoc )
<p > <unk> . < / p >
return a random { @link <unk> } with the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value associated with the given key .
compute the crc32 checksum of the given data .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
converts a { @link response } to a { @link <unk> } .
converts a { @link response } to a { @link throwable } .
returns the status of the given { @link <unk> } .
create a { @link <unk> } given an exception and an exception .
/ * ( non - javadoc )
creates a new { @link eventloopgroup } .
set the {
start the scan .
gets the remote address from the channel .
returns the remote address of the given channel .
returns the remote address of the given channel .
returns the remote host name from the channel .
returns the remote address of the given channel .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the string representation of the given socket address .
returns the host name of the given address .
<p > <unk> . < / p >
/ * ( non - javadoc )
shuts down the connection and attempts to close the connection .
/ * ( non - javadoc )
<p > <unk> . < / p >
returns the custom serializer for a given class name .
<p > <unk> . < / p >
returns the custom serializer for the given command .
start the clock .
/ * ( non - javadoc )
method called by <unk>
ask the <unk> 同步调用
perform a one - way call on a url
<unk> rpc sync
<unk> rpc sync
invokes the {
invokes the {
<unk> { @link <unk> }
invokes <unk> synchronously .
check if the remote address is connected .
download the connection to the given url .
attempt to initialize the {
converts a byte array to a hex string .
returns the <unk> corresponding to the specified opcode .
batch termination .
/ * ( non - javadoc )
/ * ( non - javadoc )
encode a message
find the sip connector state among the requested protocols .
consume a single payload metadata
translate a single frame length .
translate single frame size .
generates a md5 key for a compressed string .
process a non - <unk> frame .
process a websocket frame .
close the websocket .
process a websocket frame .
/ * ( non - javadoc )
sends a frame to the server .
process the websocket frame .
checks if the buffer size is exceeded .
returns the payload from the given byte buffer .
serializes the { @link bytebuffer } to a { @link byte [] } .
perform the handshake process .
ensure that the buffer is large enough to hold the specified number of elements .
return a buffer from the specified buffer .
decrypt a password using the given password .
decodes the given handshake response .
this method is used to decrypt the remaining data
decodes the handshake measurement .
closes the connection due to invalid errors .
closes the connection due to an error .
returns the default reason phrase for the given error code .
/ * ( non - javadoc )
sets the name of the stream .
/ * ( non - javadoc )
writes a sequence of { @link java . nio . channels . filechannel } s to the given { @link iterable } of { @link bytebuffer } s .
execute the program .
connects to the server .
blocks until the connection is complete .
returns the default port number for the given uri .
send a websocket handshake .
/ * ( non - javadoc )
/ * ( non - javadoc )
pauses the connection lost .
stops the connection lost timer .
starts the connection lost timer .
restart connection lost .
close connection lost .
shuts down the connection lost timer .
/ * ( non - javadoc )
sets the websocket handshake request .
/ * ( non - javadoc )
returns a new {
this method is invoked by the client to process the handshake .
meant for non - handshake processing
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
handle the accept () method .
this method is the same as {
write selection key .
/ * ( non - javadoc )
loads a class from the pool .
/ * ( non - javadoc )
remove a connection from the database .
/ * ( non - javadoc )
stores data in a { @link list } of { @link <unk> } s .
broadcast message to clients .
/ * run
fills the frame with the current state of the stack .
creates a copy of the specified { @link bytebuffer } from the given { @link bytebuffer } .
/ * ( non - javadoc )
configures the persistence unit .
removes emf .
this method is called by the { @link <unk> ( consumer ) } method .
creates a new { @link <unk> } with the given { @link org . apache . flink . api . <unk> . property . <unk> } and { @link org . apache . flink . api . <unk> . transaction . <unk> } .
execute a transaction on a vert . x transaction .
this method is called when a transaction is registered .
executes the given { @link path } with the given { @link supplier } .
gets the proxy target .
get a read - only position of type t .
convert a { @link linkedlist } to a scala { @link tuple2 } .
wrap varargs .
<p > returns the value of the supplied key and arguments . < / p >
/ * ( non - javadoc )
returns true if the specified key is defined at the specified key .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the value of the language property .
create a new { @link <unk> } .
create a new engine .
updates an existing update .
creates a new {
calls { @link <unk> ( java . lang . object java . util . list java . util . list java . lang . object java . util . list java . util . list java . lang . object java . util . list java . util . list java . lang . object java . lang . object ) } with the
creates a new { @link bindings } for the given { @link <unk> } .
register a set of guice modules .
calls { @link <unk> ( com . google . guice . api . guice . api . guice . <unk> java . util . guice java . io . module java . util . list java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang .
calls { @link <unk> ( java . lang . string java . lang . object ) } with the given { @code bindings } .
disable scala { @link class } instances .
/ * ( non - javadoc )
calls the specified {
returns the { @link file } represented by this { @link <unk> } .
<p > <unk> . < / p >
static factory method for wrapping a value of type <code > b< / code > in a { @link these } .
constructs a { @link tuple } value from a { @link tuple4 } value .
returns a {
decodes a quoted header .
add a list of skipped classes to be skipped .
returns the list of strings as a list of strings .
capture the stack trace from the bugsnag library .
get a local unit .
returns a comparator that uses {
converts a { @link properties } map to a { @link <unk> } .
get flow .
constructs a { @link flow } from a { @link jsonnode } .
create a new { @link <unk> } with the given name .
create a new { @link <unk> } for the given class .
send a verbose message .
send an error log message .
send an error log message .
send a debug log message .
send a debug log message .
log a debug log message .
send a debug log message .
send an info log message .
log a info message .
send a verbose message .
log a message with level { @link loglevel#warn } .
log a message at the warn level .
send an error log message .
send an error log message .
log error .
/ * ( non - javadoc )
creates a new instance of the specified class .
shows the dialog with the given id .
<unk> video <unk>
<p > <unk> . < / p >
returns an accessible method ( that is one that can be invoked via reflection ) with the given name and parameter types .
<unk> <p > <unk> / p >
/ * ( non - javadoc )
called on bad request
region > autocomplete
gets a not found message .
invoke the { @link <unk> ( request ) } method on the given { @link request } object .
/ * ( non - javadoc )
converts an { @link throwable } to an { @link object } .
on development state .
on internal servers error .
/ * ------------------------------------------------------------
create a { @link <unk> } from a { @link file } .
creates a new { @link <unk> } from a given { @link file } .
create a new { @link <unk> } based on the given { @link <unk> } .
creates a handler for the given jar file .
/ * ------------------------------------------------------------
submits a request to the cluster .
consumes a set of data from a given <unk> .
creates a new { @link mimemessage } from the given { @link content } .
<unk> > <unk>
creates a {
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> > <unk>
<unk> > <unk>
creates a { @link result } with status { @literal 200 - ok } .
sends a status message to the response .
creates a new instance of { @link <unk> } .
sends an http response status response .
creates a new result with the given content and content .
creates a new result with the status { @literal 400 - bad request } with the given content .
sends a file status to a file .
creates a new result with the given content and content .
creates a new result with the given content and content .
create a new result status file .
creates a new result with the status { @literal 200 - ok } with the content of the specified { @code node } .
creates a new result with the status { @literal 200 - ok } with the status of { @literal 200 - ok } .
creates a { @link result } with status { @literal ok } and { @literal content - type } .
creates a new result with the status { @literal 200 - ok } with the content of the given { @code document } .
creates a new result with the status { @literal 200 - ok } with the content of the given { @code content } .
creates a new result with the status { @literal 200 - ok } with the content of the given { @code content } .
creates a new result with the status { @literal 200 - ok } with the content of the given { @code content } .
creates a new { @link result } created from the given { @link content } .
<p > <unk> . < / p >
creates a new { @link result } instance .
creates a <code > <unk> / code > object with the given content .
creates a new { @link result } instance .
creates a new result with the given content and content .
creates a new result with the given content and content .
sends a request to a bad request .
sends a request to a bad request .
creates a bad request with the given content .
sends a request to a bad request .
sends a request to a bad request .
sends a request to a bad request .
sends a request to a bad request .
returns the unauthorized result as a result .
returns the unauthorized result as a result .
returns the unauthorized result as a result .
returns the unauthorized result as a result .
returns the unauthorized result as a result .
returns the unauthorized result as a result .
returns the unauthorized result as a result .
creates a { @link <unk> } object for the given { @link string } content .
creates a { @link <unk> } object for the given json content .
creates a { @link result } from a { @link string } .
delegates to { @link <unk> ( string boolean ) } .
creates a { @link <unk> } object for the given { @link file } .
delegates to { @link <unk> ( string boolean ) } .
creates a { @link <unk> } object for the given { @link string } content .
creates a forbidden result instance .
creates a new result instance .
creates a forbidden result instance .
creates a new result instance .
returns a newly - created result of a forbidden response .
creates a forbidden result instance .
creates a new result instance .
returns a result object with the given content .
returns a result object with the given json content .
creates a <b > <unk> / b > operation that is not found in the result set .
creates a new result instance .
creates a { @link result } with the given content and content .
creates a new result instance .
creates a new result with the given content and content .
return a result object with the given content .
<p > not . < / p >
return a result object with the given content .
<p > not . < / p >
return a result object with the given content .
creates a { @link result } with the given content and content .
return the result of not found .
creates a { @link <unk> } based on the given { @link string } content .
creates a { @link result } with the given json payload .
creates a { @link <unk> } based on the given { @link file } .
creates a { @link <unk> } based on the given { @link string } content .
creates a { @link <unk> } based on the given { @link file } .
creates a { @link <unk> } based on a { @link path } .
creates a { @link <unk> } based on the given { @link string } content .
performs an http post and returns the result .
a utility method that extracts the value from the given json content .
checks the required preconditions for a file .
a convenience method for { @link <unk> ( boolean ) } .
check the content of a file .
a convenience method for { @link <unk> ( boolean ) } .
retrieves a syntax result from a file .
calculates the status of multiple requests .
calculates the status of multiple requests .
calculates and inlines the given number of requests .
calculates and returns a new instance of { @link <unk> } .
delegates to { @link <unk> ( int file ) } .
calculates and inlines the given number of requests .
calculates the appropriate requests for a given error content .
returns true if the given content is too large large large text .
<unk> - 8
returns a request header fields of {
creates a new { @link <unk> } instance with the given { @link file } .
returns a request header fields of {
returns a request header fields of the given {
request a {
creates a server error with the given content .
creates a server error with the given json content .
creates a server error with the given content .
creates a { @link <unk> } with the given content .
creates a server error with the given content .
creates a { @link <unk> } with the given content and content .
creates a server error with the given content .
creates a { @link <unk> } with the given plain text content .
<p > <unk> . < / p >
creates a new result with the given content and content .
creates a { @link xdom } instance for the given content .
creates a server error for the given file .
creates a {
creates a { @link <unk> } with the given content .
<p > <unk> . < / p >
<p > redirect . < / p >
<p > <unk> . < / p >
returns a { @link result } object .
<p > redirect . < / p >
<p > redirect . < / p >
<p > redirect . < / p >
creates a { @link result } that redirects to the specified url .
creates a { @link <unk> } for the given url .
<p > <unk> . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
returns the username for the given id .
language of the language .
example of usage :
creates a new {
/ * ( non - javadoc )
creates a <unk> .
disposes the { @link <unk> } .
returns a new { @link <unk> } for the given { @link connection } .
/ * ( non - javadoc )
creates a { @link router } for the given { @link <unk> } .
creates a { @link httpserver } for the given { @link datastream } .
build a { @link httpserver } for the given { @link <unk> mode } .
tag :: json []
converts the given { @link object } to a { @link jsonnode } .
create a new instance of a given { @link jsonnode } from a { @link class } .
parses the given string into a jsonnode using the { @link <unk> ( string ) } method .
parses the given { @link inputstream } into a { @link jsonnode } .
sign a message with rsa private key .
creates a new { @link <unk> } with the given parameters .
creates a new script with the given parameters .
creates a new zone with the specified name and id .
returns an array of all the annotations found in annotation .
<unk> { @link annotation } <unk> { @link <unk> } <unk> { @link <unk> } <unk> { @link <unk> } <unk> { @link <unk> } <unk> { @link <unk> } <unk> { @link <unk> } <unk> { @link <unk> } <unk> { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> }
<p > relativize . < / p >
returns a {
tag :: hello - <unk> - <unk> []
converts a list of constraints into a list of tuples .
converts a set of constraints to a set of constraints .
converts a constraint to a stream .
executes the given { @link <unk> } on the given { @link <unk> } .
executes the given {
obtains an instance of { @code <unk> } from a { @code temporalamount } . <p > this obtains an instance of { @code <unk> } . <p > the { @code <unk> } must be { @code null } . <p > the { @code <unk> } must be { @code null } .
{ @inheritdoc }
returns a { @link java . util . concurrent . <unk> } that wraps the given { @link <unk> } .
returns a { @link completionstage } that wraps a { @link <unk> } with a { @link <unk> } .
<p > <unk> . < / p >
creates a { @link date } from a string .
sets the cron expression for the given cron expression . <p >
get a view to a snapshot of the given table .
tag :: hello - json []
{ @inheritdoc }
converts a scala { @link applicationcontext } to a scala { @link <unk> } .
gets the results for the given request .
@deprecated use { @link #set ( string ) } instead .
adds a key / value pair to the flash .
returns a {
<p > <unk> . < / p >
<p > <unk> . < / p >
returns the { @link java . lang . object } for the given { @code implementation } .
returns a {
java wrapper for { @link java . util . concurrent . supplier } .
returns a scala {
shortcut for { @link <unk> ( class ) }
/ * ( non - javadoc )
calls { @link <unk> ( java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string ) } with the
publishes an application line version .
<p > <unk> . < / p >
creates a new threadcontextclassloaderbuilder using the specified classloader .
loads the specified { @link <unk> } from the specified { @link classloader } .
creates a new <unk> from the specified map .
initialise <unk> <unk>
apply the specified database to the specified database .
applies the <unk> to the play db
cleanup the database .
creates and initializes a new { @link <unk> } with the given { @link <unk> } .
create a new {
load the given { @link <unk> } .
creates and returns a new instance of { @link <unk> } .
load a { @link <unk> } from the specified modules .
load all bindings in the given { @link <unk> } .
<p > <unk> . < / p >
/ * ( non - javadoc )
encodes the given cookies into a string .
encodes the given cookies into the cookie map .
/ * ( non - javadoc )
creates a new { @link com . google . common . util . concurrent . <unk> } from the given { @link <unk> } .
/ * package
from json .
tag :: hello - json []
tag :: hello - json []
/ * ( non - javadoc )
/ * ------------------------------------------------------------
create a { @link flow } from the given { @link <unk> } .
binds the { @link <unk> } to the given { @link <unk> } .
binds the given user to the specified request .
binds the given { @link map } to a list of { @link form } objects .
adds a binding to a form data .
binds the specified { @code data } to the given { @code data } .
<p > bind . < / p >
gets the message for a constraint violation .
deep bind data .
creates a new { @link form } object .
binds the data to the data binder
convert a list of arguments to a list of { @link <unk> } objects .
register a { @link form } object with the given value .
gets the validation errors .
pulls a number of messages from sqs .
/ * ( non - javadoc )
returns a {
factory method for constructing a new { @link form } with the given parameters .
returns a new instance of the given {
returns the value of the <code > key< / code > or <code > null< / code > if not found .
<unk> > <unk>
gets configuration value .
<p > <unk> . < / p >
normalizes a key / value pair .
<p > parse . < / p >
converts the given { @link field } into an instance of { @link class type } .
converts an { @link object } of { @link class type s } into a { @link string } .
gets the value of the field with the given class and object .
converts the given value to a string .
registers a { @link converter } with the specified { @link converter } .
register a { @link <unk> } instance .
registers a { @link converter } with the given { @link <unk> } .
encodes a cookie into a cookie header value .
encodes the given cookies into a list of string - cookie values .
encodes the given cookies into a list of cookies .
encode cookies into a list of cookies .
/ * ( non - javadoc )
creates a new { @link inputstream } for the given { @link inputstream } .
creates a { @link attachment } from the given { @link inputstream } .
add a path to the request .
creates a buffered result for the specified path .
opens a new { @link inputstream } for the given path .
creates a { @link <unk> } instance for the given { @link file } .
creates a new { @link inputstream } from the given { @link file } .
creates a { @link <unk> } instance for the given { @link file } .
sets the content of the given file .
creates a { @link part } from the given { @link inputstream } .
creates a { @link payload } from the given { @link string } and content type .
get a list of nodes from a node .
converts a linkedlist into a scala iterable .
convert an array of objects into a scala seq .
create a new scala { @link arraylist } from the given values .
create a collection of messages from the given column .
creates a { @link <unk> } with the given { @link <unk> } .
checks if the given member is accessible by the given member .
returns true if the given { @code member } is accessible .
returns a { @code list } of type { @code left } { @code left } and { @code right } .
compares two methods .
compare parameter types for the given arguments .
gets the total number of public methods from the source class .
get the total number cost weight .
gets the cost of the object transformation cost based on the type of the source class .
<unk> <unk> <unk>
<p > gets the value of the <code > key< / code > property . < / p >
sends a get request to the given list of keys .
<unk> > <unk>
creates a new database from the given parameters .
creates a new database from the given parameters .
returns a database in the given { @link map } of values .
generates a pipe separated list of pipe - separated values separated by key .
returns the { @link config } in the given { @link map } of values .
create a database in the given map .
creates a new instance of the { @link <unk> } in the given { @link java . lang . object } .
creates a new instance of { @code <unk> } .
creates a new instance of <code > <unk> / code > .
returns a copy of this set .
creates a new <unk> instance .
performs a quick sort algorithm .
/ * sort
emit index .
/ * ( non - javadoc )
creates a new instance of { @link <unk> } .
creates a new instance of {
creates a new { @link <unk> } for the given classloader .
creates a provider for the specified type .
creates a <unk> from the two classes .
adds a url to the specified classpath .
invokes the method with the given arguments .
<p > invoke . < / p >
convert a primitive type to boolean .
loads an argument at the specified index .
load arguments .
adds a field to the field definition .
convert the return type of the return type to the type of the stack .
<p > <unk> . < / p >
create a new array from an array of arguments
generates code to load a blank value .
coerce this expression to a boolean .
generates the body of an array
asserts that the specified { @link <unk> } is not equal to the specified { @link <unk> } .
coerce this expression to a boolean .
wrap the given {
/ * ( non - javadoc )
set the superclass of the superclass .
initializes the <unk> .
sets the job type .
creates a new instance of the given argument types .
get the recursive methods recursively .
creates a new instance of { @link <unk> } with the given { @link throwable cause } and { @link throwable cause } .
returns true if the given type is an instance of the given class .
creates a new instance of the specified class .
<p > <unk> . < / p >
returns a proxy factory for the given class .
returns a transport factory for the given class .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds the given method to the wrapped object .
find the first method in the target class .
/ * ( non - javadoc )
sets up the naming policy for this policy .
adds a strategy to the generator .
creates a new { @link <unk> } instance .
finds all the methods in the result set .
resolves a child string with the given child string .
parse a { @link path } into a { @link <unk> } .
sets the host header .
@deprecated use { @link #set ( string ) } instead .
creates a { @link httprequest } .
creates a { @link httprequest } .
creates a { @link httprequest } .
creates a new { @link httprequest } .
creates a { @link httprequest } .
creates a new request object with the given parameters .
creates a { @link httprequest } .
creates a { @link httprequest } .
creates a { @link httprequest } .
creates a new { @link httprequest } .
/ * ------------------------------------------------------------
converts a cookie into a cookie object .
adds a query parameter to the request .
creates a { @link form } with the given parameters .
<unk> > <unk>
adds a query string parameter to the request .
<unk> > 将需要转换的内容（ascii码形式之外的内容），用十六进制表示法转换出来，并在之前加上%开头。<br > <unk>
returns a string representation of this request .
/ * ------------------------------------------------------------
sets the http basic authentication header .
sets the { @link <unk> } to use .
<unk> > <unk> > <unk> > <unk>
<unk> > <unk>
/ * ------------------------------------------------------------
send get http request .
/ * ( non - javadoc )
executes the request and receive the response .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
sets a header .
adds an exception to the list .
removes the handler from the given handler .
get the length of the exception table .
/ * ( non - javadoc )
sort the interceptors for the { @link <unk> } .
collect filters by type .
to collection action results .
adds decorators to the action .
read nested properties .
/ * ( non - javadoc )
<p > <unk> . < / p >
returns the value of the index property .
gets the object index property .
set the index property .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
reset the journal .
/ * ( non - javadoc )
get attribute value .
lookup an object reference .
get the class descriptor for the given table .
finds all exported variables in the table .
returns the class of the given bean .
register a table reference .
adds a parameter to the request . <p >
get the { @link <unk> } for the given entity name .
lookup table reference .
<p > <unk> . < / p >
sets the hint to the hint . <p >
{ @inheritdoc }
/ * ( non - javadoc )
finds the <unk> for the given servletcontext .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
{ @inheritdoc }
converts a property name to a column name .
converts column name to a property name .
/ * ( non - javadoc )
converts an object to an array .
/ * ( non - javadoc )
<p > <unk> . < / p >
returns a set containing all the values contained in the container .
<p > resolve . < / p >
returns an array containing all of the elements in the given array .
<p > <unk> . < / p >
creates a { @link <unk> } instance .
add the given base path to the base path .
converts a separator to a system separator string .
returns the extension of the last dot in the file .
returns true if the file exists .
splits the given filename into an array of strings .
returns the home directory of the given path .
add a relative path to a file .
{ @link <unk> ( string string ) }
add a { @link <unk> } annotation .
adds a new { @link <unk> } annotation .
set the privilege config for the given type .
register a { @link component } with the { @link <unk> } .
starts the web application .
registers the {
/ * ( non - javadoc )
add one or more jars to the excluded list .
<p > <unk> . < / p >
adds the given include entries to the classpath .
exclude attributes from this scanner .
<unk> > <unk>
this method scans the given { @link file } s dependencies for the given { @link <unk> } .
<unk> > <unk>
prepare entry .
scans the classpath for the specified class path entry .
returns the type of the {
/ * ( non - javadoc )
add files to scan .
<unk> > <unk>
convert a string to a char array .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the scope of the given scope type .
register the given scope type .
returns the scope of the scope specified by the given scope type .
push a message to the pipe .
returns the file info for a message .
fills the message with the given multipart / form - data .
factory method to create a { @link part } from the specified { @link string } .
gets the charset from a part .
parse the inline message part .
adds an attachment to the emailmessage .
adds an attachment to the emailmessage .
upload attachment info .
encodes a byte array into base64 notation .
decode a byte array .
encode a byte array to a byte array .
encodes a string into a base64 encoded string .
/ * ( non - javadoc )
/ * ( non - javadoc )
check if the token is valid for the given token .
checks whether the given token value matches the given token value .
creates a new instance of <code > <unk> / code > .
creates a copy of the given object from the given source object .
<unk> . <unk>
assign the given value to the given value .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns all scopes of the given type .
creates a new instance of the specified type .
add scope bindings to the scope .
/ * ( non - javadoc )
posts a bean to a bean definition .
create a new { @link <unk> } for the given name .
creates a bean definition if it is not null .
create a bean definition for the given type .
registers the given bean type .
register a { @link <unk> } for the given type and consumer .
registers an { @link <unk> } .
register a bean with the given name .
<p > <unk> . < / p >
register a bean with the given name .
<p > <unk> . < / p >
<p > registers a new constructor for the specified bean type injection point . < / p >
initializes the <unk> .
converts a { @link <unk> } to a { @link <unk> } .
registers a method injection point for the specified method name .
returns the init method points of the given bean class .
<p > <unk> . < / p >
register a bean provider class .
/ * ( non - javadoc )
invokes the bean definition for each bean in the bean definition registry .
checks if the bean is not null .
merges the current { @code properties } into this one .
adds a set of properties to the properties map .
parses and returns the current thread context .
sets the environment variable .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
print before { @link <unk> ( httpservletrequest httpservletresponse string ) }
helper method to print the directory rules .
/ * ( non - javadoc )
convert a method to stack
validates the given method at the given index .
returns the field name for the given field .
calls { @link <unk> ( string int int ) } with the given name .
load the class argument .
generates code to load the special method arguments for a method .
add static method arguments .
/ * ( non - javadoc )
create a load method for a method descriptor .
creates a load method for the given method descriptor .
returns true if the given opcode is known to store the store operation .
convert a primitive type to boolean .
prepare the given method descriptor .
creates a type signature for the given method .
convert a constant value to boolean
convert array to boolean .
convert a primitive array to boolean .
checks if the given method is a getter method .
<unk> > <unk>
returns the dashboard rest url .
extracts the mime - type from a string .
returns the { @code list } of the given { @code contenttype } .
<p > <unk> . < / p >
returns the file info for the given part .
returns a string representation of the given flags .
convert an object to an array .
returns <code > true< / code > if the request is a multipart request .
returns the {
resolve the auth bearer token from the given request .
sends an http request to the response . <p >
---------------------------------------------------------- getters and setters end
/ * ( non - javadoc )
adds the given cookie name to the request .
reads the post data from the request .
read request body from request .
returns the context path of the request .
gets the context path .
stores a context path in the given context .
returns the object name for the jawr configuration manager mbean
get the value of the specified parameter from the request .
returns the value of the image with the specified name .
resolve event from request .
sets the value of a variable scope .
removes the scope attribute from the request .
checks if the given url is an absolute url .
removes the session from the given url .
gets the request parameter value from the request .
creates a { @code <unk> } from the given { @code httpservletrequest } .
<p > <unk> . < / p >
returns <code > true< / code > if the request is a multipart request .
creates a map of request parameters from the request .
invokes the <code > <unk> () < / code > method . <p >
render the body of the body .
render the body as a string .
sets the value of a scope attribute .
sets the value of a scope attribute .
invoke init method on the init method .
destroy method .
/ * ( non - javadoc )
internal search thus case sensitive .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
add a value to the list .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the raw value of a property .
sets the value of the specified argument to the argument list .
count the keys in the profile map .
adds a new mapping to the specified type .
returns the map for the given profile .
<p > <unk> . < / p >
resolves the macros in the given url .
<p > <unk> . < / p >
/ * converts a byte array into a word - length word .
<unk> the password .
generate a hash from a string .
reads the header of a header .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
初始化<br > <unk>
初始化<br > <unk>
resolves the action configuration for the given annotation values .
saves the aliases for the given structure id . <p >
methode permettant de charger toutes les action sur l <unk>
<p > <unk> . < / p >
read package action path .
初始化<br > <unk>
generator method .
{ @link <unk> }
returns the { @link <unk> } annotation for the given method .
create a runtime runtime action .
{ @inheritdoc }
{ @inheritdoc }
/ * ------------------------------------------------------------
removes the given converter from the registry .
converts value into boolean or returns default value if conversion is not possible .
converts value into boolean or returns default value when conversion is not possible .
/ * ( non - javadoc )
cast a object to a integer value ( default value )
cast a object to a integer value ( default value )
convert a value to a long .
cast a object to a long value ( default value ) .
cast a object to a long value ( default value ) .
gets attribute value as <code > float< / code > . if there is a { @link converter } registered for the attribute that converts from class <code > s< / code > to class <code > java . lang . float< / code > given the value is an instance of <code > s< / code > then it will be used otherwise
<p > convert a <code > string< / code > to a <code > float< / code > . < / p >
cast result object to a float
gets attribute value as <code > double< / code > . if there is a { @link converter } registered for the attribute that converts from class <code > s< / code > to class <code > java . lang . double< / code > given the attribute value is an instance of <code > s< / code > then it will be used
<unk> > 如果给定的值为空，或者转换失败，返回默认值<br > 转换失败不会报错
<unk> > 如果给定的值为空，或者转换失败，返回默认值<br > 转换失败不会报错
remove a converter from the registry .
<p > convert a <code > string< / code > to a <code > short< / code > . < / p >
cast a object to a short value ( default value ) .
/ * ( non - javadoc )
cast a object to a character object .
cast a object to a char value .
return the value converted to a byte .
<p > <unk> . < / p >
cast a object to a byte value .
<p > <unk> . < / p >
converts the given value to a string array .
convert a value to a class .
get biginteger .
/ * ( non - javadoc )
gets attribute value as <code > java . math . bigdecimal< / code > . if there is a { @link converter } registered for the attribute that converts from class <code > s< / code > to class <code > java . math . bigdecimal< / code > given the attribute value is an instance of <code > s< / code > then
/ * ( non - javadoc )
/ * ( non - javadoc )
main method .
registers a { @link <unk> } as consumer .
/ * ( non - javadoc )
sets the target field of an object .
visit a annotation .
----- private methods -----
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the { @link annotation } of the given { @link class } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the <unk> for the specified class .
returns <code > true< / code > if the <code > file< / code > is <code > true< / code > .
/ * ( non - javadoc )
copy bootstrap methods .
get the class loader for the given package .
puts all constant pool values into the constant pool .
put bootstrap methods .
puts a new entry into the cache .
adds a new entry to the list .
adds a field to the constant map .
add constant method entry to map .
adds a type reference to the symbol table .
adds an entry to the constant pool of a constant pool .
adds a type declaration to the symbol table .
adds an entry to the constant pool of an entry .
adds a type to the symbol table .
adds a long value to the constant pool of an entry .
adds a type constant .
adds an entry to the constant pool of the given index .
adds a type constant .
adds an entry to the constant pool of the given index .
adds a type entry to the constant pool .
adds a ref to the constant pool .
adds a dynamic constant .
adds a dynamic constant .
adds a constant reference type .
adds a dynamic constant .
adds a type to the symbol table .
adds an entry to the constant pool of an entry .
add a bootstrap method to the symbol table .
add bootstrap method to the buffer .
adds a type declaration to this symbol table .
adds the given type to the list .
converts an object to an array .
converts a string to a string .
returns true if the given string is a case - insensitive string .
remove all elements from the list .
<unk> > <unk>
sets the value of the named property .
get the value of the named header .
returns the entry corresponding to the specified key in this map .
removes all values matching the specified predicate .
{ @inheritdoc }
returns a list of all the entries in this map .
increases the capacity of this <tt > arraylist< / tt > instance if necessary to ensure that it can hold at least the number of elements specified .
{ @inheritdoc }
append a char to the buffer
/ * ( non - javadoc )
visit an annotation .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
get the absolute path to a path separator .
write a { @link charsequence } as { @link string } .
/ * ( non - javadoc )
initialize the {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
f743 - <unk>
returns a map of fields for the given class .
returns an array of all the fields contained in this descriptor .
returns a <code > boolean< / code > in the java programming language . <! -- end generic documentation -- >
{ @inheritdoc }
test the scalability of a bean .
sets the transaction isolation level .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
<p > <unk> . < / p >
sets the common { @link <unk> } for the given { @link email } object .
builds the service document .
append a buffer to the buffer
rehashes the contents of this map into a new capacity .
associates the specified value with the specified key in this hashtable . if the map previously contained a mapping for this key the old value is replaced .
/ * ( non - javadoc )
removes all of the mappings from this map .
append a buffer to the buffer
returns an array containing all of the elements in this list in the given range .
/ * ------------------------------------------------------------
puts the specified <unk> into the buffer .
minimizes the current size of the string .
prettyprint the object to a writer .
<unk> > <unk>
write the content of this { @link <unk> } to the given { @link outputstream } .
<unk> > <unk>
returns the value associated with the given key as a string .
returns the value of the <code > name< / code > property as a <code > int< / code > .
get long .
gets the double value for the given name .
get the value of the <code > name< / code > property as a <code > double< / code > .
gets the value associated with the given key .
returns the value as a { @link jsonarray } .
decodes a base64 encoded string .
returns the value of the specified key in this context .
returns the value associated with the given key as a string .
returns the value associated with the given key as an integer . if the key does not exist this method returns the default value .
returns the value associated with the given key as a long .
returns the value associated with the given key as a double .
gets the prefixed key and parse it to a float .
returns the value associated with the given key as a boolean .
returns the value of the command property with the specified name if it exists .
returns the value of the property with the specified key . if the key does not exist in the specified default definition the default value is returned .
returns the value associated with the given key as an array of bytes .
returns the value associated with the specified key in the specified map or returns <code > null< / code > if there is no such key .
adds a header to the request .
sets the length of the { @code key } and { @code value } .
adds a key / value pair to the response .
returns the value associated with the given key .
sets the value of the given key as a string .
returns a list of all the files in the specified folder .
creates a folder with the given name .
creates a bundle for the specified folder .
returns a cursor of datapoints specified by the given filter .
receive notification of receive <code > <unk> / code > from the <code > <unk> / code > .
receive notification of the <code > <unk> / code > .
get the messages from the { @link <unk> } object .
on flush email .
/ * ( non - javadoc )
find parameter with given name .
returns the size of the attribute with the given name .
{ @inheritdoc }
prepares the alias for a string expression .
adds the alias to the target class .
validate violations .
add a new violation to the list of violations created by this builder .
given a tag name and a tag name return true if tag <code > <unk> / code > is given .
/ * ( non - javadoc )
creates a raw raw file from a file .
sets the target property .
/ * ( non - javadoc )
sets the target { @link class } .
returns the class name of the class name .
read the class file .
compile the query .
define the proxy class .
/ * ( non - javadoc )
load a folder in debug mode .
create a new { @link <unk> } object from the given { @link string } and { @link string } .
sets a recipient address .
<p > <unk> . < / p >
sets the value of the reply property .
sets the reply to reply to .
sets the value of the reply property .
add a cc recipient address .
adds an email address .
<p > <unk> . < / p >
sets the subject for the given subject .
creates a new { @link contenttype } .
create a new { @link email } instance .
adjusts the given html email entities .
设置一个header<br > <unk>
sets all headers and headers to be sent .
appends headers to the given outputstream .
<p > <unk> . < / p >
/ * ( non - javadoc )
sets the attachment for the given { @code <unk> } .
adds an embedded attachment .
adds an embedded attachment .
checks if an email address is empty .
get the value of the specified system property . if the system property is not found or the system property is not found null is returned .
returns the boolean value for the specified key . if the key does not exist a default value will be returned .
returns the value of the <code > name< / code > property as an <code > int< / code > .
returns the long value for the given property name . if the property does not exist or is empty the system default value is returned .
adds the given content element to the given path .
parses the given xml document and returns true if it is not available .
writes the <code > null< / code > element to the buffer at the end of the array .
appends a float array to the specified byte array starting at the specified offset .
append a buffer to the buffer
summarize string .
get resolved parameters .
serialize key value .
lookup the alias for the given alias .
converts a string to an underscored name .
resolves the hadoop {
returns the default value for the given path .
returns the index of the last dot in the string .
<p > returns the index of the last character in the string . < / p >
returns the index of the first slash in the string .
returns the name of the last camel case property .
d366807 . 3
replies the starting point for the <unk> .
{ @inheritdoc }
resolves the table name for the owner entity .
resolves the schema annotation for the given field .
{ @link <unk> ( class class ) }
resolves the column descriptors .
<p > <unk> . < / p >
remove quotes if required .
computes the real part of the real <unk> algorithm .
@see <unk> ( boolean )
weighted mix of two texts .
/ * ------------------------------------------------- [ misc ] ---------------------------------------------------
damerau - levenshtein distance between two characters .
/ * <unk>
/ * ( non - javadoc )
this method encrypts a byte array into a byte array .
convert a byte array to a long .
<p > converts a character to its hexadecimal representation . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a string to a internetaddress object .
converts an email address to an internet address .
parse an email address .
/ * <unk>
construct a <unk> from a matcher .
extracts the native title of the given text .
appends a suffix to the end of the string .
factory method for creating a new { @link reflecter } instance with the given target class .
/ * ( non - javadoc )
returns the md5 of the specified file .
gzip compress a file .
extracts the data from the specified file .
<p > download . < / p >
reads the contents of a zip file into a list of strings .
<p > unzip . < / p >
add a zip to a zip file .
zips the contents of a zip file into a zip file .
get a fielddescriptor .
/ * ( non - javadoc )
returns the { @link propertydescriptor } for the given property name .
/ * ( non - javadoc )
gets a constructor with the given arguments .
set the request attribute .
sets the locale of the request .
returns the { @link locale } for the given { @link httpservletrequest } .
/ * ( non - javadoc )
/ * ( non - javadoc )
reports the value of a ------------------------------------------------------------------------
compute the size of the annotation .
puts the given annotation values into the given byte vector .
returns the size of {
puts { @code <unk> } into { @code <unk> } .
returns true if the specified { @link <unk> } supports the specified { @code profile } .
little - endian or intel format .
hashes the given byte array using the murmurhash3 128 - bit value .
sets the designated input stream to a byte array .
returns the array of all interfaces implemented by this class .
adds the given attributes to the context .
reads the module attributes and visit the module .
reads the field attribute of the given classreader .
reads the given module and visit it .
read instructions .
read a label from the given offset and labels .
creates a label for the given offset and labels .
creates a debug label with the given offset and labels .
read type annotations .
returns the index of the annotation annotation instruction .
read annotation meta data .
read parameter annotations .
reads the values of the given module descriptor .
read an annotation value .
visit the implicit first frame .
read the stack frame from the stack .
visit the implicit verification type info .
update the first attribute of an attribute .
reads the bootstrap methods attribute .
reads an attribute .
read an int from the byte array at the given offset .
reads a long from the byte array .
reads a string constant .
reads a utf - 8 string from the constant pool .
read a utf - 8 string from a utf - 8 encoded string .
reads constant pool constant .
reads a string constant pool entry .
/ * ( non - javadoc )
method <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
get all of the constructors in this class .
/ * ( non - javadoc )
gets the request map .
/ * ( non - javadoc )
returns the current { @link httpservletrequest } instance .
converts an object to an array .
convert an array to an array .
convert primitive array to array .
/ * ( non - javadoc )
removes the specified file consumer .
adds a path to the search path .
merges the file with the specified path .
set the search path .
define a list of parameters for the sorting . <p / > <p > <b > note< / b > : < / p > <p > <b > note< / b > : < / p > <p > <b > note< / b > : < / p > <p / > <p > <b >
define a list of parameters to be excluded from sorting entries . <p > <b > attention : < / b > <br > please prefer dependency - injection instead of using this method .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
stop the class loader and reset it .
return the next file in the list of files .
returns a list of all files equal to the current file .
initialize the {
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
<p > <unk> . < / p >
resolve bean scope type .
<p > <unk> . < / p >
find the { @link <unk> } annotation for the specified { @link <unk> } .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
<p > <unk> . < / p >
creates a java object type signature .
returns the descriptor corresponding to the given return type .
returns the argument types for the given method descriptor .
gets the return type .
returns the type name of the descriptor .
returns the class name .
returns a descriptor corresponding to the given constructor .
returns the descriptor corresponding to the given return type .
returns the descriptor corresponding to the given method .
returns the descriptor corresponding to the {
returns the size of the given type .
returns the return type of the given method descriptor .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
loads all resources from the <unk> .
rollback all resources .
/ * ( non - javadoc )
returns the resource corresponding to the specified resource type .
split a line into a push stack .
writes a { @link <unk> } to the output stream .
write name .
encodes the given string as a json string .
read a unicode character .
prints a character sequence .
set the value of { @link <unk> } .
converts a string to an unsafe character .
adds a tag to the matched tag .
<p > sets the start and end of the region . < / p >
returns true if this tag is inside the other tag region .
returns true if the input value is contained in the input string .
registers a pseudo - state function .
applies a reduce function to the pseudo function .
determines whether the given results should be accepted .
/ * ( non - javadoc )
/ * ( non - javadoc )
visit a annotation .
this method should be called after the class has been initialized .
sets the constructor to be used .
get method param names .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the index of the first element in the array .
returns the index of the first element in the array .
returns the index of the first element in the array .
creates a sequence of comma separated values .
returns a string representation of the given string .
visit a class .
/ * ( non - javadoc )
replaces the given class file with the given class file .
/ * ( non - javadoc )
visits a method instruction .
adds a dynamic constant .
adds a dynamic constant .
creates a new { @link <unk> } with the given name and descriptor .
visits a method instruction .
returns the common super class of the given types .
registers default converters .
registers a { @link converter } with the given { @link type } .
returns the type of the given class .
{ @inheritdoc }
set proxy authenticator .
sets the proxy to use for a proxy .
creates a { @link <unk> } instance for the given host and password .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
remove a transaction .
returns the median value of this list .
associates the specified address with the given transaction .
factory method to create a new { @link <unk> } .
/ * ( non - javadoc )
f743 - <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
borrowed from org . <unk> . <unk> . <unk>
/ * ( non - javadoc )
register the resource manager .
gets the { @link <unk> } for the given { @link resource } .
close { @link <unk> } { @link <unk> } { @link <unk> } and { @link <unk> } .
creates a new proxy instance .
/ * ( non - javadoc )
<unk> > <unk>
encodes a byte array into base64 encoded representation .
returns a string with the specified number of elements aligned to the specified size .
returns a human readable human readable version of the given bytes in human readable format .
returns a string representation of the given attribute value .
converts the given { @code charsequence } to a { @code string } .
converts a string to lower camel case .
<p > <unk> . < / p >
replaces tabs with tabs .
escapes the given string as a json string .
<p > <unk> . < / p >
returns a new {
traverses and returns the <unk> .
returns the component of the specified type .
invoke the implementation of the <code > <unk> / code > method with the specified <code > <unk> / code > .
get bean .
initializes the bean definition .
registers a <code > <unk> / code > for the specified <code > <unk> / code > .
wires up the <unk> and put them into the wire .
<unk> a method .
initializes the context .
li3294 - 25
/ * ( non - javadoc )
sets the value of a property .
gets the mapped bean property of the given name .
purges all the resources .
configure session properties
creates a new mail session .
/ * ( non - javadoc )
gets the logging level for the given level .
/ * ( non - javadoc )
{ @inheritdoc }
resolves a method .
/ * ( non - javadoc )
add a value to the injectable object .
/ * ( non - javadoc )
/ * ( non - javadoc )
create an element node .
tag : <unk>
try to remove the last child node from the current node if it is empty .
returns the { @link <unk> } for the given tag name .
returns the next parent node .
{ @link <unk> ( string ) }
/ * ( non - javadoc )
queues a picture index to be sent in binary .
visits a type instruction .
returns the number of arguments for the given method .
makes the given method on the top of the stack .
makes the given method argument on the stack .
generate the call method .
generate a class array .
makes the given method visitor method .
makes the target visitor method .
writes the fields to the operand stack .
<unk> method .
<blockquote > <unk>
parses the query string .
save query string .
<p > <unk> . < / p >
/ * ( non - javadoc )
<p > <unk> . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
replaces all occurrences of a substring in a string with another string .
<p > removes all occurrences of a character from the given string . < / p >
<p > removes all occurrences of a character from the given string . < / p >
replaces all occurrences of a substring in the string with another string .
<p > unwraps a string until the first character is replaced . < / p >
replace the last substring of the string with the given string .
<p > replaces the last character in the given string . < / p >
replaces all occurrences of a substring in the string with the end of the string .
returns the index of the first non - quote character in the given string .
checks if the given string is empty or not .
checks if the given string is empty .
returns true if the given string contains no whitespace .
check if the charsequence contains only digits .
<unk> <p > <unk> / p >
converts the first character of a string to a string .
<p > <unk> . < / p >
returns a sub - path from the given path starting at the specified index .
<p > checks if the string is a substring of the given string . < / p >
split the given string with the given delimiter .
<p > converts a string into an array of strings . < / p >
returns a string with all the characters of the specified string .
returns the index of the first occurrence of the specified character in the specified string .
returns the index of the first occurrence of the specified substring in the given string starting from the specified index .
<p > replaces the first occurrence of { @code source } in { @code src } with ignore case . < / p >
<p > case in - sensitive find of the last index within a string . < / p >
<p > case in - sensitive find of the last index within a string . < / p >
returns the index within this string of the first occurrence of the specified string .
returns the index within this string of the last occurrence of the specified character .
returns true if the source string starts at the specified index ignoring case .
<p > checks if the charsequence ends with a specified character . < / p >
reads a string from the string .
returns the index of the last occurrence of the specified string in the given string .
returns { @code true } if the given string array contains the given value .
replaces all occurrences of a substring in a string with another string .
replaces all occurrences of a substring within a string with another string .
find the index of the first occurrence of the specified { @code src } in { @code target } .
get the index of the first occurrence of the specified value in the given string array
returns the index of the first occurrence of the start of the source string .
returns the index of the first occurrence of the start of the source string in the given array .
return - 1 if the string ends with one of the one specified .
return - 1 if the string ends with one of the case
returns the index of the given string if it is not whitespace .
removes the trailing leading and trailing whitespace from the given string .
removes the trailing character from the given string .
summarize the characters in the string .
<p > strips the trailing { @code string } from the given { @code string } . < / p >
removes the first occurrence of the specified character from the given string .
interns all strings in a string .
interns all strings in a string .
trims a string and replaces it with the specified string .
crop all strings in the given strings array to the specified array .
removes leading and trailing whitespace from the given string .
remove all trailing whitespace from the specified string .
<p > gets a string from a string . < / p >
this method reads the entire region of a region .
joins a list of strings into a single string .
<p > joins the elements of the given array into a single string . < / p >
<unk> > <unk>
returns <code > true< / code > if the given <code > string< / code > is <code > null< / code > .
surrounds the given string with the given prefix and suffix .
returns { @code true } if the given { @code string } starts with { @code prefix } .
removes the suffix from the given string .
cuts the given string from the given string .
cuts the given string from the given string .
gets the suffix from a string .
removes the suffix from the given string .
<p > <unk> . < / p >
summarize the string .
<p > checks if the given string is a parsable number . < / p >
inserts the given bytes into the byte array replacing the existing character with the given offset .
<p > repeat a string with the given number of times . < / p >
capitalizes the first character of a string .
returns a string representation of the two characters .
implements { @link <unk> ( java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang .
shortens all characters in a string according to the length of the string .
converts a string to a string .
removes the leading and trailing single quotes from the given string .
convert a byte array to a hexadecimal string
if the string is not blank it will return false .
convert a string to a byte array .
remove quotes from a string .
/ * ( non - javadoc )
append a buffer to the buffer
<p > <unk> . < / p >
visits an { @code enum } value .
visit a {
returns the { @link <unk> } for the given type .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
remove an entity from the database .
/ * ( non - javadoc )
creates a new dto instance .
merge the given target interface configuration .
get the <unk> annotation for callback .
inject target into target .
<p > <unk> . < / p >
new database connection pool .
detect the database
/ * ( non - javadoc )
/ * ( non - javadoc )
writes a byte array to the front of the pushback buffer .
writes <code > len< / code > bytes from the specified byte array starting at offset <code > off< / code > to this output stream .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
encodes the given string into a { @link string } .
<unk> > <unk>
processes the given { @link file } .
<unk> > <unk> > <unk>
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
returns the string representation of the given type descriptor .
returns a list of strings for the first argument .
utility method to change return type .
{ @link <unk> ( string ) }
registers default converters .
registers a converter for the given type .
gets a converter for the given type .
convert the given { @link object } into the given { @link class type } .
converts the given { @link type } into a { @link collection } of { @link class type t } .
returns a list of { @link node } s with the given kind .
helper method for { @link <unk> ( list ) }
processes a list of { @link <unk> } s .
returns the value of the first node in the list of nodes .
/ * ( non - javadoc )
selects the first node that matches the given filter .
walk the dom tree using a breadth - first traversal .
returns a list of all descendants of the given node .
walk the context of the node .
recursive method .
----- protected methods -----
encode a string to a quoted string .
refills the input buffer .
resumes scanning until the next regular expression is matched the end of input is encountered or an i / o - error occurs .
sort a page from the specified page .
/ * ( non - javadoc )
count the number of elements in the given sql connection .
/ * ( non - javadoc )
returns a string containing the last value of the {
unescapes the given html entities .
find the name of a char array .
/ * ( non - javadoc )
{ @inheritdoc }
builds a sql query for the given sql query .
{ @inheritdoc }
resolves all required columns and properties .
/ * ( non - javadoc )
returns the { @link propertydescriptor } for the given property name .
/ * ( non - javadoc )
returns the column name for the given property .
<p > <unk> . < / p >
sets the value of the specified id .
returns the value of the given { @code object } as a string .
appends a string to the end of the array .
inserts the specified <code > int< / code > into the specified <code > <unk> / code > .
returns the character at the specified position in this buffer .
increases the capacity of this <tt > arraylist< / tt > instance with the specified capacity .
returns an array containing the length of the colors in the array .
looks up the injection scope in the given container .
<p > <unk> . < / p >
create a new proxy bean
----- private methods -----
/ * ------------------------------------------------------------
this method processes all the files in the directory .
checks if the given file is a process config file .
<unk> > <unk>
/ * ( non - javadoc )
called by the {
add an enumeration to the given collection .
/ * ------------------------------------------------------------
convert an object to an array .
computes the size of the field .
writes the field information to the given byte vector .
matches a length .
append a char to the buffer
creates a json representation of the target object .
creates a target object from a method object .
creates a { @code target } object from a { @code <unk> } .
write listeners .
checkstyle : off
parses the { @link <unk> } .
parse a pdf page .
writes the source tag to a writer .
resets the region .
returns the value of the <code > name< / code > property as a <code > string< / code > or <code > null< / code > blank .
start the server .
converts an object to an array .
runs the given command and returns the result .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
generates the sql alias for a spatial entity .
<p > <unk> . < / p >
adds a new rule to the list of rules .
checks if the specified value matches the specified value .
applies the given value to the properties file .
process the specified value .
process the specified value .
{ @inheritdoc }
returns the name of the descriptor .
/ * ( non - javadoc )
appends all of the elements in the specified collection to the end of this list in the order that they are returned by the specified collection s iterator .
~ methods ------------------------------------------------------------------------------------------------------------------
translates a tinylog severity level to a log4j level .
create a new { @link <unk> } with the given { @link node key } .
create a {
binds an annotation configuration to the specified { @link <unk> } .
returns a new { @link <unk> } for the specified { @link <unk> } .
returns the scope config for the given type .
adds action to action config .
/ * ( non - javadoc )
configure system properties .
{ @inheritdoc }
checks if the element name is one of the given table elements .
returns true if the given node is a table element .
determines whether the given node is a child of the given parent node .
parses the create table and returns it .
returns true if the given node is a child of the given node .
insert the prerequisite elements into the specified spec .
/ * ( non - javadoc )
returns a {
gets the session map .
returns the current { @link httpservletrequest } instance .
initialize the proxy .
calls { @link <unk> ( string ) } with a { @link <unk> } .
add init init method .
{ @inheritdoc }
{ @inheritdoc }
process a bundle link .
creates the bundles .
replaces the resource with the given content id . <p >
encodes the given string to the given writer .
<p > converts a { @link java . io . writer } to a { @link properties } object . < / p >
parse a string .
adds the given value to the specified { @link <unk> } .
<p > <unk> . < / p >
----- protected methods -----
/ * ( non - javadoc )
acquire a typedesc from a type descriptor .
checks if the given string is a valid method descriptor .
convert a descriptor to a <unk> .
<p > <unk> . < / p >
append the given field to the given visitor .
convert the given long value to the given visitor .
append the given field to the given visitor .
append the given field to the given visitor .
convert the given field to the given type instruction .
append the given field to the given visitor .
append the given field to the given visitor .
append the given field to the given visitor .
add items to consumers .
{ @inheritdoc }
converts a collection to a collection .
convert a collection of entities to a collection .
convert a value to a collection .
convert a collection into a collection of objects .
convert an array to a collection .
get the <unk> annotation for callback .
adds a line offset to the line .
visit a line number .
puts a reference to the bytecode of a method .
adds references to a forward reference .
resolves the given byte array using the given bytecode .
recursively marks the given subroutine in the given subroutine .
/ * package private
create a new { @link label } for the given { @link label } .
compare two digits .
returns true if the given character contains the specified character .
decode a percent - encoded string .
puts the given string as a utf - 8 byte vector .
puts the given string as a utf - 8 byte vector .
puts the given string as a utf - 8 byte vector .
puts the given string as a utf - 8 byte vector .
puts the given string as a utf - 8 byte vector .
puts the given string as a utf - 8 byte vector .
puts the given string as a utf - 8 byte vector .
puts the given string as a utf - 8 byte vector .
writes the given byte array to the byte array .
increases the capacity of this <tt > arraylist< / tt > instance to ensure that it is smaller than <tt > size () < / tt > .
/ * ( non - javadoc )
handles an authentication request .
authenticate the given user via basic authentication .
{ @inheritdoc }
{ @inheritdoc }
helper method to clean up the index .
returns the formatted string for the given locale . <p >
find the default message for the { @code locale } in the { @code locale } .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
increments the element at the given index in the array .
/ * ( non - javadoc )
setter for the { @link <unk> } .
/ * ( non - javadoc )
saves the given entity to the database .
deletes the specified persistencecapable objects .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
{ @link <unk> ( object object ... ) }
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
find by id .
delete entity by id .
{ @inheritdoc }
increase the specified property .
increase the specified property .
creates a list of related entities .
/ * ( non - javadoc )
add soft - evidence to the given node .
add soft - evidence to the given parent node .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the stack trace of the current stack trace .
get the stack trace of the given stack trace .
simplify the stack trace .
returns the root cause of the given {
get the stack trace of the exception .
returns the first stacktrace of the exception stack .
constructs a string representation of the given message and the cause of the given throwable .
returns the root cause of the given throwable .
returns the cause of the given throwable or null if it is not .
returns the number of unique parameters in the given list of exceptions .
unwraps a presentation of a throwable .
wrap a {
<p > unwraps a wrapped { @link throwable } . < / p >
returns an {
registers a class reference .
checks if the given class is an interface or not .
初始化<br > <unk>
gets the annotation factory for the given class .
returns the default classloader for the current thread .
loads the class loader from the specified class .
get the manifest for a zip file .
returns the classpath resource .
<p > <unk> . < / p >
creates a reader for the specified resource .
try to load a resource as a stream .
opens an input stream for the given resource .
get an input stream for the given class .
get an input stream for the given class name .
load a class by name .
load a class by name .
/ * ( non - javadoc )
finds or creates a child { @link <unk> } by its name .
get the value of the <unk> property .
create a list of <unk> objects .
creates a map of request parameters from the request .
/ * ( non - javadoc )
converts the given { @link object } to the given { @link class type } .
<p > invoke . < / p >
inserts the bean at the specified index .
<p > <unk> . < / p >
returns the number of elements in the { @code name } in this { @code <unk> } .
extract qpathentry from a bean .
<p > <unk> . < / p >
extract the component type from the given result type .
convert the index to a map key .
extract the type of a bean .
gets the { @link <unk> } from the request .
add a cookie to the request .
/ * ------------------------------------------------------------
converts a { @link localdate } to a { @link date } object .
converts a { @code localdatetime } to a { @code localdatetime } . <p > this returns a { @code localdatetime } based on this one with the value of { @code localdatetime } . if the local date - time is null then the returned { @code java . util . date } is returned .
formats the given { @link long } value as a { @link string } .
<unk> > <unk>
creates a new { @link <unk> } for the specified { @link class } .
adds a query to the list .
compute validation context .
returns a list of all available { @link <unk> } s of the specified class .
collect all { @link org . apache . commons . view . <unk> } annotation for the given { @link java . lang . reflect . <unk> } .
loads the constraint .
<p > invoke . < / p >
read default check properties .
executes the given { @link <unk> } with the given timeout .
returns the value of the designated column in the current row of this <code > resultset< / code > object as an <code > object< / code > .
/ * ( non - javadoc )
encodes a byte array into an ascii string .
url - encodes the given text .
encodes the given uri port with the given encoding .
encodes the given uri scheme with the given encoding .
encodes the given uri host with the given encoding .
encodes the given uri port with the given encoding .
encodes the given uri path with the given encoding .
encodes the given uri query with the given encoding .
encodes the given uri query parameter with the given encoding .
encodes the given uri fragment with the given encoding .
encodes the given uri string into an encoded string .
encodes the given http url into an encoded string .
encodes the given uri path with the given encoding .
inspects a {
add property .
build a { @link propertydescriptor } for the given property name .
get a { @link propertydescriptor } for the given class name .
returns all the { @link propertydescriptor } s for the given { @link <unk> } .
{ @inheritdoc }
add cookies to a list of cookies .
<unk> > <unk>
/ * ( non - javadoc )
reads the { @link inputstream } from the given { @link inputstream } .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
prints the usage of the arguments .
converts a byte array to a byte array .
decrypts samples .
/ * <unk>
return the list element of the given type .
sets the value of the property .
returns a deep copy of the given { @code map } .
/ * ( non - javadoc )
converts an object to an array .
/ * ( non - javadoc )
add a header with the given name and value .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * package
sets the cookies .
converts the given http cookies to a list of cookies .
sends a message to the email .
creates a new { @link mimemessage } instance for the given { @link email } .
sets the subject part of the email .
set the sent date for the email .
set the message headers .
set the people to send to the email .
send the email to the recipients list .
adds a mime message to the email .
creates a new {
sets the content of the email .
creates an { @link <unk> } from a { @link attachment } .
creates a list of { @link <unk> } s from the given { @link <unk> } .
adds the attachments to the emailmessage .
/ * ( non - javadoc )
gets the value of a data field .
<unk> - <unk>
<p > <unk> . < / p >
returns a new {
initialize jdbc preparedstatement
closes the surrogate resolver .
/ * ( non - javadoc )
release an exception
{ @inheritdoc }
/ * ( non - javadoc )
sets the fetch size .
sets the maximum number of rows to store .
/ * ( non - javadoc )
executes the update .
/ * <unk>
return a list of objects from the resultset .
execute the query and return the result .
/ * -------------------------------------------------------------
returns the columns .
/ * ( non - javadoc )
returns the query string for this query .
creates an email address from a string .
converts an email address to an email address .
converts an array of { @link emailaddress } to an array of recipients .
converts an array of strings to an array of addresses .
<unk> { @link <unk> ( object ) }
creates a proxy for the given aspect .
<p > parse . < / p >
/ * documented <unk>
returns an iterator over the elements of this stream .
creates a list from the given iterator .
convert an iterator to a stream .
convert an iterator to a stream
create a stream out of the given iterable
/ * ( non - javadoc )
/ * ( non - javadoc )
add the content to a zip file .
adds a folder to the zip archive .
<p > <unk> . < / p >
resolves the {
writes a log message to the logger .
build the stack trace of the stack trace .
adjusts the class name of the given class .
sets the serializer for the given path .
gets the serializer for the given type .
returns a { @link jsonelement } that is excluded from the excluded list .
adds the specified type names to the serializer .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> > <unk>
serializes the given object to the given file .
de - serializes an object from a file .
convert an object to a byte array .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an array of { @link java . lang . <unk> } s of the specified types .
<p > <unk> . < / p >
resolves the mapped types of the types of the types of the given types .
creates the names of the types table .
read the column value .
{ @inheritdoc }
caches the result set entities .
resolves a provider by name .
{ @inheritdoc }
convert table name to entity name .
get the { @link <unk> } for the given { @link <unk> } .
initialize the websocket
/ * ( non - javadoc )
check if the connection is valid .
close remaining connections
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the specified target exists .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the content of the buffer as a string .
/ * ( non - javadoc )
writes the content of the given input stream to the response .
sets the content type resolver . <p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
login to the user .
<p > <unk> . < / p >
resets the user s password to the given credentials .
shortcut for { @link <unk> ( httpservletrequest httpservletresponse ) }
/ * ( non - javadoc )
<unk> > 是 { @link <unk> ( map ) } 的逆方法<br > 比如传入数据：
initializes the file system .
converts the given url to a byte array .
converts the given url to a file name .
converts the given url to a { @link <unk> } .
creates a directory if it does not exist .
tries to create a new { @link java . io . file } with the specified { @link file directory } .
<unk> > 此方法不对file对象类型做判断，如果file不存在，无法判断其类型
copies a file .
copies a file to a file .
copies the given source file to the specified destination directory .
copies a directory and all its sub - directories into the destination directory .
moves a file to another .
moves the given source file to the given destination directory .
unzip a file .
moves all the files in the given directory to the target directory .
<unk> > <unk>
<unk> > <unk>
write the contents of a byte array to a file .
append the contents of the given text to the given file .
<unk> > <unk>
<p > <unk> . < / p >
reads the contents of a file into a string .
saves a string to a file .
saves a file to a file .
copies a string to a file .
copy the contents of the given input stream to the output stream .
reads the contents of a file .
read a number of bytes from a file .
/ * ( non - javadoc )
/ * ( non - javadoc )
copies data from a byte array into a file .
returns true if the first character of the first file is equal to the second file .
returns <code > true< / code > if the two files are equal . returns <code > true< / code > if <code > <unk> / code > equals <code > <unk> / code > . returns <code > true< / code > if <code > <unk> / code > equals <code > <unk> / code > . returns <code > false< / code
determines if the reference { @link file } reference points to the given file .
checks if the given reference is newer than the specified file .
<unk> > <unk>
copy a file to a file .
deletes the specified file .
determines if the given file is an ancestor of the given file .
gets the parent file of the given file .
<unk> > <unk>
creates a temporary directory with the given prefix .
creates a temporary directory with the given prefix .
<unk> > <unk>
increments the value of the given file .
get an input stream from the specified file .
encodes the given input stream to a string .
checks if the given directory exists .
ensure writeable directories .
<unk> <unk> <unk>
copies a file to a destination .
append a buffer to the buffer
print the example text .
<p > <unk> . < / p >
初始化<br > <unk> action
初始化<br > <unk>
register action .
add a resource to the action .
adds a cache alias to the cache .
returns true if the given position is less than or equal to the given position .
create a copy of a char array .
append a buffer to the buffer
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link <unk> }
/ * ( non - javadoc )
wrap a {
converts the given { @link callable } into a { @link runtimeexception } .
returns the index of the first occurrence of the specified character from the given target character sequence .
finds the index of the first occurrence of the specified index within the target char array starting at the specified index .
returns true if the given array of string contains the given component .
<p > <unk> . < / p >
returns a copy of the given character sequence .
returns the position of the document .
borrowed from org . <unk> . <unk> . <unk> . <unk>
returns true if the transaction is active .
/ * ( non - javadoc )
set up the jars in the set
this method is used to encode a string into a base64 encoded string .
add an email address .
add an email address .
add an email address .
/ * ( non - javadoc )
registers the default values for the <unk> .
<p > <unk> . < / p >
returns the serializer for the given class .
adds a file to the map .
returns a new {
<unk> > <unk>
gets the value of a parameter with the given name .
returns the file with the given name or null if not found .
returns an array of all the files found in this request .
/ * ( non - javadoc )
parse template into template .
splits the given string using the given separator .
count the number of escapes .
on table .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the name of the first word in the given string .
strip off parameters from the content type .
extracts the value of a header parameter from a header value .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
process the given action path .
write the given styles to the given appendable .
write the given styles to the given appendable .
get the value of the header .
<unk> > <unk>
removes an entry from the cache .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
starts the web application context .
/ * ( non - javadoc )
unregisters web application .
load parameters from classpath .
creates a new instance of the <unk> class .
<p > <unk> . < / p >
reset the bean .
<p > <unk> . < / p >
add a product extension .
add a modification to a class .
adds a new { @link <unk> } to the { @link breadcrumb } .
extract the class name from a class name .
<p > parse . < / p >
parses the given string as a list of type t .
returns a { @code map } whose keys and values are the values in the given { @code map } .
<p > parse . < / p >
parses the value of the { @link <unk> } .
gets the default value for the given type .
this method will skip the next character in the input buffer .
reads a quoted string .
parses the string as a string .
write the text to the buffer .
decodes a unicode character from base64 format .
returns the string representation of the string form as a string .
--- number reader ---
<p > <unk> . < / p >
<p > <unk> . < / p >
/ * ------------------------------------------------------------
<p > <unk> . < / p >
utility method to create an { @link <unk> } .
/ * ( non - javadoc )
this method creates the empty object mapper for object creation .
get method param names .
creates the trait method for the given method .
{ @inheritdoc }
get the raw type name for the given type .
resolves a reference to a bean .
<p > <unk> . < / p >
reads a reference from a { @link propertydescriptor } .
allocating and returns a list of beans from a method or constructor .
returns the value of the given annotation value .
/ * private <unk> <unk> () { return <unk> ; }
evaluates the given { @link <unk> } .
evaluates the given bean references .
set references to references .
converts a proposition - id value to an array of references .
----- private methods -----
this method is used to start attempting to start a new transaction
gets the declared method .
finds a constructor matching the given parameters .
checks if the given types are assignable from the given types .
returns an array of objects of the specified objects .
<p > <unk> . < / p >
<p > <unk> . < / p >
get all interfaces of the given class .
replies all the superclasses of the given class .
<p > <unk> . < / p >
returns all methods supported by the given class .
compare two methods .
/ * ( non - javadoc )
<p > compares two parameters . < / p >
force the constructor to be accessible .
returns true if the given member is accessible by the given member .
<p > newinstance . < / p >
creates a new instance of the given class .
returns true if the given member is assignable from the declaring class .
get the superclasses of the given class .
<p > <unk> . < / p >
returns the name of the bean property .
<p > getter for the field <code > <unk> / code > . < / p >
gets the component type of the specified type .
returns the array of { @link type } s for the given { @link class } .
creates a string representation of the given type .
returns the value of the named attribute .
get the implementor class for the caller .
discover the caller class for the caller .
returns true if the given class has a primitive type .
returns true if the given class is a parent class .
returns the summary of the given class .
convert a class name to a message type name .
returns true if the given type is annotated with {
returns true if the given type is numeric .
causes the current thread to sleep for the specified number of milliseconds .
causes the current thread to sleep for the current thread .
causes the current thread to sleep for the specified number of milliseconds .
causes the current thread to sleep for the current thread .
returns a thread factory for the given group name .
gets the value .
visits a ldc instruction .
visits an annotation .
visits a type annotation .
visits parameter annotation .
visit a frame .
visits a method instruction .
visits a method instruction .
visits a ldc instruction .
visits all the instructions in the stack .
mark the descriptor with the given number of dimensions
visit a catch block .
visits a local variable annotation .
writes the properties to the specified writer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
----- private methods -----
returns a new array containing all of the elements in the specified array .
adds the given array of arrays to the given array .
<unk> > <unk>
creates a new array that is a copy of the given array .
resize array .
inserts the given element into the buffer .
creates and returns a new array sized to fit and populated with the concatenated subset of values from indexes <code > 0< / code > to <code > offset - 1< / code > and <code > offset - 1< / code > to <code > offset - 1< / code > ( inclusive ) .
splits a boolean array into an array of booleans .
returns an array containing all of the elements in the specified array .
returns an array containing all of the elements in the given array .
creates a new array of strings .
inserts the specified array into an array of strings .
inserts the specified array into the destination array at the specified offset .
inserts the specified array into the given array .
converts the given byte array into a byte array .
casts <code > byte [] < / code > to <code > byte [] < / code > .
copies the contents of the given array into an array of characters .
returns a copy of the given array .
<p > 包装类数组转为原始类型数组
casts <code > short [] < / code > to <code > short [] < / code >
convert an array of doubles to an array of integers .
convert an array of doubles to an array of integers .
returns an array containing all of the elements in the given array .
convert an array of doubles to an array .
convert an array of ints to a float array .
convert an array of ints to a float array .
convert an array of doubles to a double array .
convert an array of doubles to a double array .
returns an array containing all of the elements in the array .
convert an array of ints to a float array .
answers the index of the first occurrence of the specified character in the given character array starting at the given index . answers - 1 if there is no such index .
returns the index of the first occurrence of the specified character in the given array .
returns the index of the first occurrence of the specified value in the array .
returns the index of the first occurrence of the specified value in the array .
returns the index of the first occurrence of the specified value in the array .
returns the index of the first occurrence of the specified value in the array .
returns the index of the first occurrence of the specified element in the array .
/ * ( non - javadoc )
returns the index of the first element in the array .
<p > <unk> . < / p >
utility method to convert an array of char [] to string array .
{ @link <unk> }
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
compute all the frames .
finds the maximum flow instruction .
adds a successor to the basic block .
ends the current block .
visible for testing
/ * ( non - javadoc )
put the frame in the current frame .
sets the type of the frame .
puts a frame into the stack .
returns true if the given method can be copied to copy method attributes .
returns the size of the method method .
put method information .
add attribute prototypes .
/ * ( non - javadoc )
liberty change for cxf begin
/ * ( non - javadoc )
parses a query string and returns a list of { @link <unk> } objects .
registers pseudo - abstract pseudo classes .
returns the pseudo class for the given class name .
/ * ( non - javadoc )
/ * ( non - javadoc )
closes the given { @link closeable } .
copy the contents of this <code > reader< / code > to a <code > writer< / code > .
copy bytes from the input stream to the output stream .
reads the contents of an input stream into a byte array .
writes the given <code > reader< / code > to the given <code > file< / code > .
copy the contents of the given input stream to the given output stream .
copy the contents of a stream to a byte array .
copies the content of the given { @link inputstream } to the given { @link java . io . inputstream } .
copy the contents of a reader to a writer .
creates a writer from the specified input stream using the given encoding .
creates a writer for a stream .
returns a list of all bean property names .
this method is used to find all the { @link properties } instances in the specified { @link java . util . properties } .
sets the property value .
returns { @code true } if the specified property is present .
/ * ( non - javadoc )
<p > <unk> . < / p >
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
process the bundle manager .
<unk> > <unk>
main method .
registers the bean as consumer .
/ * ( non - javadoc )
returns the folder path .
<p > <unk> . < / p >
move the gzip bundle to the destination directory .
registers a bundle .
create a digest using the given password .
create a bundle .
start <unk> .
fixes the relative path .
returns the base url for the given url .
insert an entity into the database .
updates the table with the specified entity .
updates the column with the specified key .
<unk> > <unk>
delete an entity from database .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
check to see if a table exists .
<unk> export <unk>
<p > <unk> . < / p >
finds all rows in the database .
<p > <unk> . < / p >
find by id
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
write column .
gets the table reference name .
/ * ( non - javadoc )
returns a dummy version of the given object .
find field value in hierarchy .
/ * ( non - javadoc )
<unk> > <unk>
converts an object to an array .
converts an array of objects to an array .
<p > <unk> . < / p >
<p > <unk> . < / p >
add a value to the bag .
set the value of a variable .
/ * ( non - javadoc )
initializes the serializer .
returns true if the property is to be ignored .
closes the {
start the connection
{ @inheritdoc }
disposes the transaction bindings .
start the transaction
/ * ( non - javadoc )
replace the action name macros in the given path .
creates an action definition .
checks if the given path is absolute .
read properties from a file .
loads a file from a properties file .
load properties from a file .
writes the given string to the given file .
write a file to a file .
extract the zip file to a file .
writes a properties file to a file .
loads properties from a string .
load arguments from a string .
<p > <unk> . < / p >
creates a new { @link properties } instance based on the given parameters .
load properties from classpath .
<p > getproperty . < / p >
returns the value associated with the given key as a string .
store properties file .
returns the value of the specified property with the specified key if it exists .
returns the resolved scope for the given hostname .
<unk> > <unk>
sorts a { @link servicereference } by its parameters .
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
<p > perform a javascript <strong > unescape< / strong > operation on a <tt > string< / tt > input . < / p > <p > no additional configuration arguments are required . unescape operations will always perform <em > complete< / em > javascript unescape of secs and u - based escapes . < / p >
this method builds the list of standard packages .
returns the java version number for the java version number .
----- protected methods -----
adds the given parent node to this node .
add a child to this node .
adds children to the list of sibling nodes .
inserts the given child node into the child list .
inserts the specified child node into this node s children .
----- interface <unk>
inserts the given child node into the child list of this node .
inserts a new child of this node into the child list .
remove the node at the specified index .
removes all child nodes from this node .
get attribute value .
remove the attribute with the given name .
returns the value of the <code > name< / code > property as a <code > string< / code > . if the attribute is not found <code > null< / code > is returned .
sets the attribute value .
returns the attribute with the given name .
gets the node with the given name .
get child node by index .
updates the first child with the given id .
gets the element at the given index .
get the first child of this node .
get the number of sibling nodes .
returns the last child element of the given parent element .
check to see if this node is a child of this node .
iterates over the children of this node and returns the index of that child .
<p > <unk> . < / p >
initializes the names of the sibling nodes .
initialize the child nodes .
change the owner of the <unk>
get the next sibling node .
returns the children of this node .
diagnostics function .
get the next sibling node .
returns the index of the previous sibling .
get the previous sibling .
returns the text content of this node .
append the text content of the parse tree .
get the html for this record .
get the html for the inner html document .
visits all children of the given node .
/ * ( non - javadoc )
returns the {
reads the start tag of the id .
define a schema tag .
/ * ( non - javadoc )
/ * ( non - javadoc )
this benchmark attempts to measure the performance of the script .
returns one <code > resultset< / code > object as a <code > java . sql . timestamp< / code > .
{ @inheritdoc }
returns the mime type of the given uri .
parse the given mime type into an array of mime types .
read a boolean value from the resultset .
/ * ( non - javadoc )
-------------------------- other methods --------------------------
初始化<br > <unk>
this method returns the mapping of the variables in this package .
-------------------------- other methods --------------------------
begins a transaction .
commits a transaction .
rolls back a transaction .
create an instance of { @link <unk> } .
resolve validation message .
copied from <unk> . <unk> ()
{ @inheritdoc }
/ * ( non - javadoc )
create a hierarchical { @link props } instance from the given configuration .
iterate over all the entries in the target map .
iterate through all targets in the target scope .
append a list of suffixes to the string buffer .
<p > <unk> . < / p >
<unk> > <unk>
creates an action method .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
returns the value at {
returns the value of the <code > name< / code > property as a <code > int< / code > .
get long .
get double .
returns the value at {
gets the element at the given position .
returns the value as a { @link jsonarray } .
commits the given <code > key< / code > .
gets the value .
adds a new value to the list .
adds a new value to this array .
adds all the elements in the specified array to the end of this array .
/ * ( non - javadoc )
/ * ( non - javadoc )
resolve target .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
process the start of the input tag .
converts the given { @code name } to a { @code string } .
/ * ( non - javadoc )
gets an annotation interceptor instance .
returns the { @link filter } for the given field .
{ @link <unk> ( java . util . list java . util . list java . util . list java . util . list java . lang . function ) }
/ * ( non - javadoc )
/ * ( non - javadoc )
this method gets the value of the designated column .
{ @inheritdoc }
<p > <unk> . < / p >
create a datagram socket .
reads a single attribute from a reader .
<p > <unk> . < / p >
count the number of attributes .
computes the size of the attribute .
returns the size of the attribute .
puts the given attributes into the given byte vector .
writes the bytecode of the given class as a byte vector .
gets all action results .
registers the given result result .
write the action result .
looks up the action result .
retrieves a new instance of <unk> .
<p > <unk> . < / p >
<p > finds the substring of the substring in the given source string . < / p >
finds the first occurrence of { @code source } in the source array starting from the specified { @code index } in the given { @code array } .
<p > <unk> . < / p >
set a css property .
runs the given { @link <unk> } .
invokes the given listener with the given listener type .
pushes a frame to the stack .
/ * package
acquire a typedesc from a type descriptor .
initializes the input frame with the given parameters .
sets the input frame s input frame .
returns local permutations of local variables .
sets the local variable pointer to the given frame .
pushes the given type onto the stack .
pushes the given method to the receiver .
pushes a new element into the stack .
pop a descriptor from the stack .
adds the given { @code <unk> } to the list of { @code <unk> } .
this method merges the given symbol table into the given symbol table .
------------------ asm helpers
merges the given frame with the given types .
processes the given method .
put the abstract instructions in the given symbol table .
/ * ( non - javadoc )
schedules the auto - prune prune amount of time to prune .
visit a module .
/ * ( non - javadoc )
visits an outer class descriptor .
visit a annotation .
this method is called by the { @link <unk> ( string ) } method .
/ * ( non - javadoc )
visit a field .
initialize jdbc driver
gets the { @link <unk> } .
closes the session .
handles the execution of the execution action .
invoke the method --------------------------------------------------------
<p > <unk> . < / p >
<unk> > <unk>
creates a new page request dto .
----- private methods -----
returns <code > true< / code > if this <code > count< / code > appears in this <code > <unk> / code > .
convert a string to a byte array .
find the first substring of the source array that matches the given text .
resolves the type name of a node .
returns the name of the attribute with the given name .
add suppresswarnings attribute .
/ * ------------------------------------------------------------
loads the contents of the given file from the given file .
loads properties from the given input stream .
loads properties from a map .
--- implemented parser method ---
returns the sub - properties of the given { @code prefix } .
get a map of environment variables .
/ * ( non - javadoc )
returns the value associated with the given key as a string .
returns the value associated with the given key as a double .
<p > <unk> . < / p >
adds a key / value pair to the data store .
extract properties from a map .
extract properties from a map .
extract sub - props from target map .
/ * ( non - javadoc )
add a { @link map } of { @link map } s to a { @link map } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of profiles with the given profile name .
adds the specified property injection point .
add the given set of { @link <unk> } s .
add a { @link method } to the given { @link <unk> } .
add init method points .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > setter for the field <code > obj< / code > . < / p >
inject target model into target bundle .
extract field from target class .
<unk> > <unk> > <unk> > <unk> > <unk> > <unk>
get a fielddescriptor .
returns the type of the field .
<p > getter for the field <code > <unk> / code > . < / p >
returns the getter method for the given method .
<p > getter for the field <code > <unk> / code > . < / p >
<p > <unk> . < / p >
add a fielddescriptor to this class .
add a fielddescriptor to this class .
/ * ( non - javadoc )
creates a { @link jsonobject } containing a json representation of the given { @link object } .
creates a list of { @link <unk> } s from a { @link exception } .
resolve the http method from the method name .
<p > checks if the string starts with the specified pattern . < / p >
/ * f743 - <unk>
match one pattern against a regular expression .
tests whether a path matches a pattern .
returns true if the given name matches any of the rules .
evaluates the dependencies of the given class .
resolves a resource loading strategy .
/ * ( non - javadoc )
returns the url of the resource with the given name . if the resource is not found in the context class loader is returned .
wait for the main thread to complete .
finds the validation groups of the given annotations .
create a new scope data object .
build the injection point .
<unk> method .
clones this bean .
/ * ( non - javadoc )
adds the specified class to the classpath .
sets the bean .
set a bean property .
load property descriptor .
gets the read method .
<p > getter for the field <code > name< / code > . < / p >
create a {
adds the given iterator to the end of comp .
returns <tt > true< / tt > if there are more than <tt > <unk> / tt > objects .
{ @inheritdoc }
{ @inheritdoc }
start <unk> .
print the version of the logo .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a socket .
create a new ssl socket .
helper method to set the { @link sslsocketfactory } to trust all certificates that are not in use .
gets a default socket factory .
returns a random string that is a copy of the given number of characters .
splits a string into a sequence of characters .
returns a substring of the string .
parse email .
/ * ( non - javadoc )
load the cache from the given file .
parse an email .
creates a new { @link collection } of { @link class type } .
get the default constructor for the given type .
inject the given value into the target object .
<p > <unk> . < / p >
visit a provider .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
gets the default implementation of the { @link <unk> } .
associates the specified value with the specified key in the map . if the map previously contained a mapping for this key the old value is replaced .
get value from map .
{ @inheritdoc }
{ @inheritdoc }
returns an array of { @link org . apache . bcel . api . <unk> . api . <unk> } instances for the specified { @link methoddescriptor } .
invokes the method with the given name and parameter types .
returns an array of { @link methoddescriptor } s for the given name .
returns all the { @link methoddescriptor } s methoddescriptors .
returns the ip address of the machine .
12 . 1
checks if the given string is a valid address .
returns the ip address of the given inetaddress .
<unk> > <unk>
read a string from the given url .
download the contents of the given url to a file .
/ * ( non - javadoc )
returns true if the path of the request should be matched .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > inject . < / p >
create an action request .
/ * ( non - javadoc )
connect to socket .
<p > <unk> . < / p >
gets the package name from a fully qualified class name .
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ------------------------------------------------------------
/ * ( non - javadoc )
binary search for the given array .
/ * documented <unk>
returns the index of the first element in the array .
includes the given prefixes .
checks if the include patterns should be included in the result .
specifies that the {
start the tag .
<unk> - <unk>
increases the size of the attribute .
appends the text to the given appendable .
registers a { @link component } with the given { @link class } .
registers a { @link consumer } with a { @link <unk> } .
registers a { @link component } instance as a { @link <unk> } .
add a { @link <unk> } to this { @link <unk> } .
/ * ( non - javadoc )
gets the component of the specified type .
/ * ( non - javadoc )
/ * ( non - javadoc )
resolves the component role for the given component class .
/ * ( non - javadoc )
this method is used to set the column information for the database .
appends a sql query string to the database .
resolves the row for the given row .
converts a result set into a { @link <unk> } .
finds the generated key for the generated columns .
liberty change start
creates a new { @link <unk> } .
/ * ( non - javadoc )
sets the column index .
/ * ( non - javadoc )
<p > sets the value at the specified position in this list . < / p >
set the value at the specified index .
set a long value .
set the byte at the given index .
/ * ( non - javadoc )
move the given value to the specified value .
get the optional float value associated with an index .
set the value of the <code > <unk> / code > as a <code > short< / code > .
set the {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
set the value of the {
set the value of <code > <unk> / code > as a <code > java . math . bigdecimal< / code > .
sets the value of the dtd field .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the designated parameter to the given <code > inputstream< / code > .
set the bean properties .
set the parameters of the query .
sets the object s parameter values .
sets the object s parameter values .
sets the object s parameter values .
{ @inheritdoc }
set the objects in the given object .
sets an array of attribute names and values .
set the last target batch query .
sets the last target batch query .
inserts a new line into the end of the list .
get the { @link <unk> } for the given entity name .
/ * ( non - javadoc )
returns the column descriptor for the specified table .
resolves the table name and returns the table name .
/ * define a template parameter
<p > <unk> . < / p >
coerces a value to a boolean .
<p > <unk> . < / p >
liberty change for cxf end
initialize the connection .
/ * ( non - javadoc )
returns an array of all files with the given name .
/ * ( non - javadoc )
checks if the request should be included in the request .
/ * ( non - javadoc )
forward to the specified page .
sends a redirect to the specified page .
forward to the specified page .
sends a redirect to the specified page .
/ * ------------------------------------------------------------
redirects to the specified url .
redirects the specified url to the specified url .
returns the full url of the request .
returns the url of the request url .
sends a redirect to the server .
returns the request uri as a string .
returns the full url of the request .
returns the names of the parameters of the given method .
creates and returns a new { @link <unk> } for the specified action path .
<p > create a new factory instance . < / p >
todo <unk> :
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
sets the subject criterion . the { @code subject } must be { @code null } .
method <unk> .
appends a {
{ @link <unk> }
add a cc recipient address .
add a bcc recipient address .
add a new { @link <unk> } .
add the given { @code flag } to the given { @code flag } .
method allow to parse an { @link <unk> } parameter .
create a new address filter for the given parameter .
add a { @link <unk> } .
sets a header .
convert a set of { @link operator } objects to a { @link <unk> } .
add a { @link <unk> } object .
add a { @link <unk> } to the { @link <unk> } .
add an email filter .
parses the search term and returns the result .
performs a logical search of the search term .
parses a search term .
convert a byte array to a byte - tuple .
decode a base32 hex string to a byte array .
convert a value to a byte array .
/ * ( non - javadoc )
{ @inheritdoc }
returns a boolean indicating whether the request should be gzip eligible .
adds a violation to the list of violations found .
perform validation .
<unk> > <unk> { @link <unk> } <unk>
set the optional profile .
sets the authentication profiles .
returns whether the given { @code <unk> } is a child of { @code <unk> } .
parse request type .
/ * [ deutsch ] <p > wandelt ( <unk> ) <unk> ( milliseconds ) <unk> ( milliseconds ) < / p >
/ * [ deutsch ] <p > f&uuml ; r das angegebene <unk> . < / p >
/ * ( non - javadoc )
get ( f ) from hsv .
/ * [ deutsch ] <p > ermittelt die <unk> <unk> der <unk> . < / p >
creates a word from the specified index .
packs the rgb color into an rgb value .
creates a new standard { @link <unk> } initialized with the specified index .
todo : <unk>
returns the index of the first occurrence of the specified range from the specified index .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package
parse an error message .
returns true if the next header name matches the given key .
creates a salted pbkdf2 hash of the password .
computes the pbkdf2 hash of a password .
converts a hex string to a byte array .
resolve provider identifier .
sets the name of the argument .
gets the { @link <unk> } .
creates an attachment from the given { @link inputstream } .
create a new {
see https : // github . com / <unk> / <unk> / blob / master / src / main / java / <unk> / <unk> . html
a wrapper for {
sets the name of the content - id .
returns the mime type of the given content type .
/ * ( non - javadoc )
parse a type signature .
computes the size of the method method .
writes a byte vector to the given byte vector .
decodes a string into a string . <p >
url encode a string .
/ * ( non - javadoc )
returns the connection to the database .
prints undocumented entities .
look for a method signature for a method signature .
/ * ( non - javadoc )
visit method .
overrides the visitor to visit a class .
create a method signature for the given method .
returns a string representation of the given elements .
<p > <unk> . < / p >
/ * ( non - javadoc )
sets the advice to use .
puts the {
get the names of calls to {
<p > encrypts . < / p >
<p > decrypt . < / p >
sets the logger provider .
returns the logger with the given name .
checks if the table name is a valid table name .
<unk> > <unk>
render the result of the request .
/ * ( non - javadoc )
create action request .
creates an { @link <unk> } .
return whether or not the specified component is <unk> .
register <unk> .
destroy the given bean .
/ * ( non - javadoc )
creates a { @link <unk> } instance for the specified { @link <unk> } .
get the <code > <unk> / code > from the given <code > <unk> / code > .
copies an array of bytes to this buffer .
the main method .
allocates a new counter .
/ * ( non - javadoc )
creates a new <unk> handler with the given stream .
print an error message .
prints out the progress of a number of messages .
creates a new mappedbytebuffer for an existing file .
closes the session .
/ * ( non - javadoc )
poll for a fragment of a fragment .
returns the position of the first token in this sequence .
wrap a buffer .
offer a buffer to the shard .
returns the number of bytes consumed by {
/ * ( non - javadoc )
{ @inheritdoc }
attempts to claim a tag .
{ @inheritdoc }
/ * ( non - javadoc )
close the { @link <unk> } .
open a new {
create a {
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a message to the aeron context
this method is called to add a fixed exclusive request to the aeron context
start recording the recording
--- stop recording ---
sends a message to the recording queue .
stops the recording identified by the given id .
sends replay to the journal .
stops a replay packet .
replay the given { @link graph } for the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the recording position of the given recording .
returns true if the last matching state of the given stream matches the given session id .
truncates the recording of the given recording to the specified recording .
returns the number of calls to the recording subscriptions .
sends a message to the socket .
prints an image to an image .
prints an image to an image .
creates a new { @link <unk> } instance with the given stream id .
/ * ( non - javadoc )
creates a { @link <unk> } for the given { @link <unk> } .
creates a { @link <unk> } from a { @link <unk> } .
sets the maximum number of bytes that should be returned by {
append a buffer to the buffer .
/ * ( non - javadoc )
creates a { @link krati . store . arraystorepartition arraystorepartition } with the given parameters .
reads a fragment from the buffer .
returns a snapshot of the keys in the stream .
print the state of the stream .
generate a delta consisting of a tile .
driven when the status message is received .
/ * ( non - javadoc )
resets the stack traces for a given distribution .
reads a single observation from the buffer .
creates a new header .
allocate a new counter .
allocate a new counter .
poll for a fragment of the given fragment .
picks up the list of {
get the image from the block .
return true if the specified block needs to be rebuilt .
finds an image by id .
iterate over all images and pass them to the consumer .
launches the given { @link <unk> } with the given { @link <unk> } .
returns true if the channel has been normalized .
refresh the catalog s catalog .
/ * ( non - javadoc )
/ * ( non - javadoc )
transmit a message to the buffer .
append a number of bytes from the given { @link <unk> } to the given { @link <unk> } .
creates a new {
tries to connect to a specific response .
/ * ( non - javadoc )
implementation of <unk> rest api .
stops the recording
stops a recording event .
method to write a retention packet .
publish a journal event to the journal .
lists all records associated with the specified recording id .
list all of the existing records .
publish a recording event for a recording .
implementation of <unk> rest api .
publish recording event .
uploads a new recording to the specified recording .
publish stop position .
returns true if the recording is in progress .
lists the recording subscriptions for a given stream id .
parse the {
formats the given { @link inetaddress } into a { @link string } .
connect to channel .
executes the given { @link <unk> } .
returns a string description of the product .
read the data from the <unk> .
add a { @link subscription } object to this { @link <unk> } .
remove a subscription from the list .
this method is called when a gap is detected .
create a new { @link <unk> } .
/ * package
{ @inheritdoc }
check if the given <unk> is active .
selects a list of posts for a post .
resolves a { @link <unk> } to a { @link <unk> } .
/ * ( non - javadoc )
/ * package
/ * ( non - javadoc )
creates a new instance of { @link <unk> } .
iterate over all the meta data .
associates the specified value with the specified key in this map .
<strong > [ icu ] < / strong > adds a tag to the channel tag .
<strong > [ icu ] < / strong > returns the tag value of the tag .
runs the given initial position .
construct a list of forwarded channels from a charsequence
adds a new ssh session to the cache .
returns the tag with the given parameter value .
claim a claim .
appends a padding to the end of the buffer .
/ * ( non - javadoc )
append a number of bytes to the given buffer .
update the <unk> .
returns an array of {
allocate a bytebuffer with the specified alignment .
export the export buffer for a given stream .
returns the name of the property for the given type id .
scans the given { @link buffer } for the given { @link <unk> } and { @link <unk> } .
resets this instance to a temporary server .
validate line .
sets the cache prefix .
sets the value of the { @link net . dv8tion . jda . core . entities . binary attributes } .
/ * ( non - javadoc )
sets the default ttl to be used by { @link #sethttpengine ( clienthttpengine ) } .
creates a new <unk> .
sets the length of the message .
sets the length of the term .
sets the bitrate .
returns a list of { @link net . dv8tion . jda . core . entities . message } from the given { @link <unk> } .
execute the given { @link reader } .
sends a { @link <unk> } to the given { @link inetaddress } .
opens a datagram channel .
close playback .
/ * ( non - javadoc )
initializes a <code > <unk> / code > instance for the specified <code > <unk> / code > .
/ * ( non - javadoc )
invoked when a { @link <unk> } is received .
process timeout .
resets the state of this layer .
reads a fragment from the buffer .
returns the status of the given action as a string .
allocates a new counter data buffer .
transmit message fragment .
wrap the specified { @link <unk> } with the specified offset and length .
returns a copy of the buffer at the specified offset .
validate the length of the vector
get the length of the window
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new instance of { @link <unk> } .
this method will create a new { @link <unk> } based on the { @link <unk> } class .
creates an instance of { @link <unk> } .
creates a new instance of <unk> .
validates the length of the chunk .
creates an instance of { @link <unk> } .
check socket buffer length
validates that the page size is valid .
validate that the argument is in the range [ low high ] .
validates the given amount of time .
<p > <unk> . < / p >
returns a { @link set } of { @link <unk> } instances .
----- package methods -----
returns the event code for the given { @link <unk> } .
resets the context of the context .
parses the given string array .
creates a string representation of the strings in the array .
add { @link <unk> } to the { @link net . dv8tion . jda . core . cluster . member . <unk> }
close the members .
add a { @link <unk> } .
creates a new { @link <unk> } with the given { @link net . dv8tion . jda . core . entities . member member } .
checks if the given cluster is active .
returns the first position of the given arrays .
resets the log positions .
check to see if the given candidate is a <unk> position .
updates the candidate for a candidate .
sets the state of the ensemble .
checks if the members of the given ensemble is a <unk> .
returns true if the cluster is a fuzzy set .
replies the cluster member .
validates the given { @link net . dv8tion . jda . core . entities . member member } for the given { @link net . dv8tion . jda . core . cluster members } .
compare two { @link comparable } objects .
return true if the given member is accepted by the given member .
checks if a candidate member is a quorum .
sort log .
<p > compares two <code > <unk> / code > s . < / p >
return true if the given members are not duplicated .
returns the index of the given member .
returns the { @link <unk> } for the given { @link <unk> } .
adds a new member to the list of members .
creates a new { @link <unk> } for the given member .
returns the high - high high - high member id for the given mapping .
converts a string array to a client - side client name .
/ * ( non - javadoc )
this method will close the current { @link org . apache . lucene . nio . buffer . <unk> } and { @link org . apache . commons . nio . <unk> } s .
creates a new list of custom encryption manifest files .
indicates whether a driver is active .
indicates whether the driver is active .
@return true --------------------------------------------------------------------------
<p > sets the maximum version of the file . < / p >
<unk> > <unk>
/ * package private
returns the length of a frame .
returns the length of the frame length in the given buffer .
writes a { @link compoundtag } to the given { @link compoundtag } .
pads the given flags to the given buffer .
writes a { @link <unk> } to a { @link <unk> } .
writes a { @link compoundtag } to the given { @link compoundtag } .
helper method to register a network summaries
send a byte buffer to the client .
iterate over the counter by recording .
allocate a counter id by session id .
allocate a recording id .
gets the source data for a given counter .
allocate a counter for a given counter key .
parses a { @code <unk> } from a { @code charsequence } .
called when the activity is first created .
scans the supplied buffer for gaps .
launches a { @link <unk> } for the given { @link <unk> } .
sbob_sl64 [ 64 ]
gets the row key .
append a simple feedback message .
samples a simple feedback message .
fills the buffer with the given leadership .
returns the id of the last added term .
returns the entry s long constant .
returns the entry for the given type .
/ * ( non - javadoc )
creates a recovery plan .
appends the given term to the end of the cluster .
runs the example .
commits the log .
tombstone the given entry .
connect to the aeron context
launch a connect asynchronously
/ * ( non - javadoc )
offer a message to the specified buffer .
offer a vector to the queue .
reads data from the queue .
runs a new leader .
sets the current position of the term to the given buffer .
returns { @code null } for slice /////////////////////////////////////////////////////////////////////////
/ * ( non - javadoc )
discrete wavelet transform .
checks that the page size is a power of 2 .
stores the active term count .
returns the { @link long } position of the given { @code <unk> } .
computes the length of the log .
transmit the buffer header .
{ @link java . nio . <unk> () } .
rotate the histogram .
initialises the state of the { @code <unk> } with the given { @code <unk> } .
sets the value of the {
write the {
call { @link <unk> ( int buffer ) } with { @link <unk> () } and { @link <unk> () } .
returns the relay probability of the current { @link java . nio . buffer . <unk> } .
/ * ( non - javadoc )
the main method .
appends a token to the builder .
allocates a new { @link <unk> } for the given { @link <unk> } .
allocate a counter id .
returns the log position for the given counter .
allocate a counter for replay .
allocate a snapshot recording id .
converts a boolean array to a soundex string .
create a new { @link <unk> } object .
offers a message to the closest receiving queue .
/ * create a message asynchronously
/ * ( non - javadoc )
reads a message from the buffer .
writes the contents of this { @link java . io . bytebuffer } object as a { @link java . nio . bytebuffer } .
offers the given message to the shard .
wrap the specified byte buffer at the specified offset .
wrap the specified { @link <unk> } into the specified { @link <unk> } .
commits the current transaction .
abort the stream .
the main method .
launch the {
closes the { @link <unk> } .
seeks to the given fragment .
reads a message from the buffer .
reads the next message from the buffer .
reads the next message from the buffer .
returns the number of bytes read from the given { @code handler } .
returns the position of the sequence represented by this { @link <unk> } .
/ * ( non - javadoc )
creates a new { @link <unk> } with the given { @link <unk> } and { @link <unk> } .
creates a new { @link <unk> } .
allocate a new { @link counter } with the given parameters .
allocate a counter id .
returns the snapshot of the stream .
{ @inheritdoc }
scans the contents of the given source buffer starting at the specified position .
writes a { @link <unk> } to the { @link <unk> } .
writes a two - byte buffer into the buffer at the given offset .
attempts to claim a key / value pair .
scans the contents of the given buffer and returns the length of the frame .
the main method .
allocates a new counter with the given label and key functions .
start a subscriber in another thread based on the given parameters
increments the counters by calling { @link <unk> () } .
adds a subscription to the given channel handler .
allocate a new counter .
creates a new instance of { @link <unk> } .
/ * ( non - javadoc )
echo back the frame descriptor .
inserts the given message type into the buffer .
creates a new { @link <unk> } with the maximum number of millis .
adds a number of slab to the pool .
writes all of the <unk> to the <unk> .
resets the slab of the <unk> to <unk> .
read number of bytes from the <unk> array .
adds the statistics to the statistics .
test whether the given { @link <unk> } is a descending value .
initializes this buffer with the given offset and length .
@deprecated use { @link <unk> ( byte [] int int ) } instead .
/ * ------------------------------------------------------------
sets the requested projection .
set the avro schema for a job .
set the { @link <unk> } class for the job .
/ * ( non - javadoc )
<p > <unk> . < / p >
set thrift class .
convert a {
returns the standard java object inspector
convert a {
expands a list of glob patterns .
creates a new instance of { @link <unk> } .
creates a new instance of { @link <unk> } .
evaluate a list .
returns the intersection of two ranges .
adds a range to the ranges .
package - private for testing
/ * <unk>
dumps the given { @link <unk> } to a { @link string } .
end <unk> .
adapt a {
returns a {
binds the passed { @link predicate } to a { @link <unk> } .
creates a { @link <unk> } in the given { @link <unk> } using the provided { @link configuration } .
------------------------ <unk> methods
reads in a list of footer files in the given topology .
creates a list of files in the specified directory .
load a list of footer files in the specified lexicon
read tokens from a file .
read a list of <unk> files .
/ * --- private methods ---
creates avro schema from parquet file .
create avro schema from parquet file .
creates avro schema from parquet file .
creates a { @link <unk> } from the parquet file .
creates a { @link <unk> } from the parquet file .
creates a { @link <unk> } from the parquet file .
get the next item group .
read next record group group .
get the next word from the dictionary .
reads a dictionary from the content stream .
adds a <unk> to the memory writer .
remove a writer from the cache .
returns the allocation state of this object .
registers a new { @link <unk> } for the given { @link <unk> } .
/ * ------------------------------------------------------------
start reading the block .
start a column .
/ * ( non - javadoc )
writes data page to the message .
writes data page to the output stream .
writes data page to the stream .
write a data chunk chunk .
end the column .
end the block .
copy bytes from a { @link inputstream } to a { @link randomaccessfile } .
serializes the {
<p > <unk> . < / p >
writes the given { @link path } to the given { @link path } .
writes the given metadata to the given path .
writes the given { @link <unk> } to a { @link path } .
/ * package
merges the given { @link <unk> } into a { @link <unk> } .
returns a new instance of { @link <unk> } .
reads the next value from the network .
returns true if the field is null .
aggregates all elements from the head of the deque .
merges two {
merges two {
returns a new instance of {
creates a {
returns a nullable {
creates a new instance of { @link field } .
/ * documented <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
given a {
creates a new instance of {
/ * ( non - javadoc )
creates a map value map from the keys and their values .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
writes the data to the {
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the given path matches the given path .
ends the { @link <unk> } .
add a field
sets the end of the field at the specified index .
/ * ( non - javadoc )
ends the {
adds a binary value to the stream .
/ * ( non - javadoc )
returns a new { @link transformer } that uses the given { @link observable } type .
{ @inheritdoc }
/ * write all the values in the mini bucket to the mini - bucket .
propagates the next layer size .
merges the attributes of the rendered model into a map .
from original type .
create a new detached jpqlquery instance with the given projection
{ @inheritdoc }
checks that the argument is a valid argument .
throws a { @link illegalstateexception } with the given message .
adapt a {
{ @inheritdoc }
/ * ( non - javadoc )
initializes a { @link <unk> } object .
/ * ( non - javadoc )
/ * ( non - javadoc )
calculates the bit width for the given <unk> .
this is cheap and cheap .
/ * ( non - javadoc )
creates a {
records that the object is not not released .
checks if the given exception is an instance of the given exception ; otherwise throws an exception .
returns statistics based on the given type .
convert a {
returns a builder for reading the given {
aggregates statistical statistics .
returns the {
returns true if the specified type is a valid map type .
creates a new { @link classloader } .
creates a new instance of the { @link <unk> } .
convenience method to get the value of the given method .
delegates to { @link java . lang . illegalargumentexception } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a new { @link schema } for the given { @link <unk> } .
initialize the {
/ * ------------------------------------------------------------
closes the given { @link closeable } .
get the { @link pathfilter } for the given { @link configuration } .
/ * ( non - javadoc )
defers to {
/ * ( non - javadoc )
get the list of <unk> files for the given path .
generates a list of {
returns a new { @code comparable } instance for the given { @code value } .
returns a new object that is equal to the specified value .
construct a &lt ; &lt ; = &lt ; &lt ; = &lt ; <unk> ; &lt ; = &gt ; &lt ; = &gt ; &lt ; = &gt ; &lt ; = &gt ; &lt ; = &gt ; &lt ; = &gt ; &lt ; = &gt ; &gt ; &lt ; <unk> ; &gt ; &lt ; = &gt ;
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new user - defined { @link <unk> } .
create a new aggregating map expression using a backing treemap
/ * ( non - javadoc )
log a message at the debug level .
/ * ( non - javadoc )
log a message at the info level .
/ * ( non - javadoc )
log a message at the warn level .
/ * ( non - javadoc )
log a message at the error level .
cached version of { @link <unk> ( string ) } .
/ * ( non - javadoc )
gets the parquet schema for the given schema .
serialize a { @link message } into a single { @link descriptor } .
creates a { @link tserver } .
creates a {
<unk> method .
<p > <unk> . < / p >
/ * ------------------------------------------------------------
/ * ( non - javadoc )
sets the structtypeinfo that declares the schema to be created .
add a parquet type to parquet .
/ * ( non - javadoc )
joins a { @link iterable } into a single { @link string } .
joins a collection of strings into a single string .
joins the given array with the given delimiter .
expands a comma - separated list of {
requires that an { @code int } can be represented as an unsigned { @code short } .
create a { @link <unk> } instance .
create a {
writes the given { @link <unk> } into a { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new {
constructs a { @link <unk> } from a parquet schema .
creates a new { @link schema } for the given { @link schema } .
<p > <unk> . < / p >
converts a {
converts a {
/ * private boolean <unk> ( int type ) { return <unk> ; }
returns the byte representation of the given type .
convert a {
collects meta data for a component .
decodes rows from a meta data definition .
package private for testing
generates a {
writes a {
writes a long value to the output stream .
advances to the current state .
serializes the given object to a base64 - encoded string .
reads an object from a byte array .
adds the given number of rows to the list .
adds the given offset to the given offset .
returns the {
associates the specified value with the specified key in this cache . if the map previously contained a mapping for this key the old value is replaced .
puts a new value into the cache .
get the current value for the given key .
write simple value .
creates a regex pattern for the specified glob pattern .
writes the content of the { @link <unk> } to the given { @link <unk> } .
create a new { @link path } from the given { @link filename } .
converts a file into a properties object .
opens a { @link inputstream } to the specified { @link java . io . file } .
load a class loader from a list of paths .
creates a classloader for the given jars .
creates a classloader for the given paths .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
package private for testing purpose
inits the message type .
converts a {
returns true if {
creates a {
creates a new instance of {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a { @link map } of key - value pairs for this { @link <unk> } .
opens a { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
reads a two - byte pair from the stream starting at the current stream pointer .
reads a long from the input stream .
creates a { @link list } of { @link <unk> } s from a { @link list } of splits .
creates a list of { @link <unk> } s from the given { @link org . apache . flink . api . common . <unk> . <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a primitive group type to a primitive type .
converts a primitive type to parquet primitive type .
convert a primitive type to a primitive type .
returns a new {
returns a new {
creates a copy of {
returns an iterator for the <unk> from the pool .
determines the version of the given {
factory method to create a { @link <unk> } .
process field .
returns true if the specified type is a valid map type .
/ * ( non - javadoc )
write a struct
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
write a boolean
write a byte
write a single byte
put a prepared statement
void execute () .
/ * ( non - javadoc )
write string to <unk>
/ * ( non - javadoc )
resolves the schema for the given {
{ @inheritdoc }
/ * ( non - javadoc )
sets the end of the field at the specified index .
get the list of files from the input file .
checks if the parquet files are valid .
get a list of files that have been expanded .
/ * ( non - javadoc )
{ @link <unk> ( long long ) }
/ * ( non - javadoc )
reads a number of bytes from the given input stream .
reads the contents of an { @link inputstream } into a { @link bytebuffer } .
transfers data from the given input stream into the given buffer starting at the specified absolute { @code index } .
read the requested number of bytes from the input stream .
runs a {
initialize the <unk> .
create a new { @link <unk> } instance for the given { @link <unk> } .
convert a {
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new instance of { @link schema } for the given { @link schema } type .
set the { @link <unk> } class for this job .
set the { @link <unk> } class for the configuration .
merge the given columns
returns the summary of the summary of the given tuple .
/ * ( non - javadoc )
generate a {
read a struct
reads a { @link <unk> } from the specified { @link <unk> } .
/ * ( non - javadoc )
read map content .
read map entry .
/ * ( non - javadoc )
/ * ( non - javadoc )
reads 4 bytes from the stream .
little - endian version of { @link <unk> ( int ) } .
<p > unpack . < / p >
<p > reads the suffix from { @code in } . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
set the {
----- interface <unk> -----
wraps a { @link <unk> } into a { @link <unk> } .
converts a collection of objects to a string .
{ @inheritdoc }
dumps the jvm metrics to a file .
{ @code get ( x ) }
creates a pipeline .
configure the thrift stage .
creates a binding bean .
creates a list of { @link <unk> } s for a given stage .
creates a new interceptor instance .
parses the given avro schema .
converts a number of days to a number of milliseconds .
returns number of milliseconds since january 1 1970 00 : 00 : 00 : 00 : 00 : 00 : 00 : 00
get the avro schema from the input header .
deserialize a { @link bigdecimal } from the given { @link bytebuffer } .
registers a new { @link <unk> } with the { @link <unk> } .
/ * ( non - javadoc )
create a file in blobstore
/ * ( non - javadoc )
send a message to the registry .
register a new thread .
create a config file based on the <unk> config file .
{ @inheritdoc }
gets the entry with the given username .
creates a list of the roles associated with the specified user .
build fetch filter .
authenticate the web credential .
login the web credential .
/ * ------------------------------------------------------------
create a props from a list of configurations .
creates a new { @link <unk> } from the given { @link map } .
{ @inheritdoc }
re - login the tgt in the { @link org . apache . hadoop . security . client . <unk> } .
return a {
checks if the { @link stage } has findings .
create a {
helper method to generate a new { @link <unk> } .
returns the { @link <unk> } for the given { @link <unk> } .
notifies the { @code <unk> } s of the given { @code <unk> } .
/ * ( non - javadoc )
returns a list of {
returns true if the given class is a system class .
/ * ( non - javadoc )
/ * ( non - javadoc )
inserts the specified element into the deque at the specified { @code priorityqueue } if it is { @code null } .
creates a new { @link keyvalue } from the given { @link key value } .
returns a list of {
gets the descriptor .
gets the descriptor .
returns a map of all fields for the given {
gets the descriptor .
construct a map of <unk> for the given {
/ * ( non - javadoc )
associate a {
convert a mmcif message to a protobuf message .
initialize the {
checks the existence of the <unk> .
converts the <unk> .
gets the field .
adapts the list of { @link records } s in the { @link <unk> } .
gets the original string .
tells whether or not the given { @code config } is satisfied .
adds a script alias to the stage .
resolves a list of { @link stage } aliases .
important : this method is only meant to be invoked by the { @link <unk> ( stage ) } method .
/ * ( non - javadoc )
/ * ( non - javadoc )
processes the given batch .
process the response .
parses the script response .
add the response headers to the response .
write response header to a field .
write response header to record header .
creates a new { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the position of the page .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
parses a {
/ * package
/ * increment the offset of the source line .
attempts to rename the response .
returns the current position of the record .
<p > run . < / p >
gets the response headers for the given http header .
initializes the serde
creates a new { @link response } from the { @link <unk> } .
get the value of a property .
converts an exception to a data object .
convert a <unk> to a <unk> .
returns the credentials provider for the given credentials .
gets the credentials for a set of credentials .
gets a list of users .
copy a string to a new line
finds all the classes in the given classloader
removes duplicate entries from the given set .
{ @inheritdoc }
/ * ( non - javadoc )
expand the lhs of the next line .
/ * --- private methods ---
returns a connection to the database .
closes the connection to the database .
/ * ( non - javadoc )
/ * ( non - javadoc )
skips <code > n< / code > bytes <code > n< / code > <code > n< / code > <code > n< / code > <code > n< / code > <code > n< / code > <code > n< / code > <code > n< / code > <code > n< / code > <code > n< / code > <code >
copies the content of this { @link readablebytechannel } to the given { @link bytebuffer } .
convert a string to a member name .
get the {
gets the channel provider .
creates a { @link <unk> } for the specified { @link <unk> } .
/ * ( non - javadoc )
generate column type definition .
put the given { @link java . util . throwable } object as a { @link <unk> } .
compile the given expression .
converts the given local expression into an expression that can be used to match the given expression .
creates a { @link <unk> } from the given { @link inputstream } .
/ * ( non - javadoc )
called by {
creates a new { @link <unk> } for the given { @link <unk> } .
get the data for this aggregator .
serialize an object to json string .
deserialize an object of type t .
converts the given json string to an object of the specified type .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
execute eval .
/ * private void <unk> ( <unk> <unk> ) throws <unk> { super . <unk> ( <unk> ) ; }
/ * ( non - javadoc )
returns the qualified name of a hive table .
get the type of the {
create a { @link linkedhashmap } object from a { @link <unk> } .
get the partition name for the given partition .
checks if the record is a schema record .
returns a {
returns the table name of the partition .
<p > <unk> . < / p >
/ * ( non - javadoc )
returns the location of the partition stage .
returns whether the given { @link record } has a custom location .
returns the avro schema of the avro schema .
returns the string representation of the { @link <unk> } .
creates a new instance of { @link <unk> } .
creates a new instance of {
evaluates the given content expression and returns the result .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
generate avro schema from a { @link map } .
fill the partitions of the partition
formats a map of key / value pairs in the given map .
/ * --- private methods ---
get the cache info for a given <unk> .
/ * ( non - javadoc )
handles a batch update exception .
gets the logs for a single request .
behaves like {
/ * ( non - javadoc )
/ * ( non - javadoc )
batch open as a batch of records .
initialize table context .
claim a gauge if needed .
returns the {
/ * ( non - javadoc )
method to read a timestamp from the cache .
/ * [ deutsch ] <p > interpretiert den angegebenen format zu einer <unk> . < / p >
causes the current thread to sleep for the specified number of milliseconds .
formats the specified template with the specified args .
/ * ( non - javadoc )
deserialize a live directory from a string .
refresh the {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
parse a string representation of a domain port string .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of all field names of the given document field .
returns a list of missing fields .
log an error .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
returns the value of the given url parameter .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
process the records .
gets the label length from the given string .
/ * ( non - javadoc )
/ * ( non - javadoc )
fetch the credentials from the specified credentials .
build client configuration .
create a new kinesis data db instance .
creates a new { @link <unk> } from the specified { @link <unk> } .
calculate the public ip address for inetaddress .
submit a topology to the vault .
<unk> implementation .
add a document to the document .
helper method to write a topology
build the batch mutation .
<p > <unk> . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
create a { @link bytebuf } from the given { @link bytebuf } .
extract the { @link bytebuf } from the { @link bytebuf } starting at the specified index .
/ * ( non - javadoc )
re - login the tgt in the { @link <unk> } .
attempts to start the background .
take a { @link <unk> } .
commits the committed offset .
/ * ( non - javadoc )
render the given accumulo constraints string .
closes the connection .
creates a snapshot of the error stage .
creates a detached stage of {
liest ein function <unk> ein function ein . <br / > ebnf : <br / > <code > { variable spaces } < / code >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
clones this record .
clones this record .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the list of saved searches for the current user .
/ * ( non - javadoc )
ensure that the column name starts with the given prefix .
replaces the value of the tag with the given value .
gets the list of alert information for the specified identifier .
create or update a billing plan .
returns the list of pipelines in the account .
create a list of alert for the specified identifier .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
package private for testing
checks to see if there are any columns in the <unk>
/ * ( non - javadoc )
returns a sorted set of all the vertices that are sorted in ascending order .
{ @inheritdoc }
get the xmx value for the xmx option
compress a directory and all of its sub - directories .
release the lock .
retrieves an item from the queue and removes it from the queue .
{ @inheritdoc }
/ * ( non - javadoc )
ensure that the <unk> is not destroyed .
/ * ( non - javadoc )
gets the last shard for the given kinesis data stream .
process a list of segments .
{ @link hudson . <unk> . <unk> . <unk> }
calculates the hash of a record .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
compare two files .
parses the given { @link <unk> } .
create a new <unk> directory .
<p > <unk> . < / p >
checks if the given { @link record } is annotated with { @link <unk> } .
/ * ( non - javadoc )
helper method to download the current statistics .
behaves like {
opens a directory if it doesn t already exist .
{ @inheritdoc }
returns a string representation of the exception stack .
get the catalog from the drivermanager .
retrieves a description of the table with the given name and table name .
retrieves a description of the table and view metadata .
retrieves a description of the table with the given name and table name .
retrieves a list of all primary keys contained in the database .
creates a set of relation tables .
process the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
drop federated partition information .
return a list of all partition names in the given {
generate a new partition record for the given location .
adds a record to an avro file .
processes the given model with the given name and value .
checks if the given { @link stage } is the same as the { @link stage } annotation .
main entry point for <unk> .
stops the server .
methods declared in <unk>
replace http header values in the request map .
/ * ( non - javadoc )
/ * ( non - javadoc )
index a set of {
get the index provider for the given field and the given path .
<unk> { @link <unk> ( object ) }
/ * ( non - javadoc )
/ * ( non - javadoc )
register a schema with the latest schema .
/ * ( non - javadoc )
get the schema id from the given subject .
/ * ( non - javadoc )
write a schema id to the output stream .
reads the size of the schema .
get the default values for a schema .
parses a message from the given { @link <unk> } .
get the <unk> for the given <unk> .
find the field name for the given field path .
/ * ( non - javadoc )
process the response .
find the field offset for a message .
/ * ( non - javadoc )
compare this version to another version
/ * ( non - javadoc )
get the topological edges of a vertex
get the topological edges of the vertices in the graph .
set <code > <unk> / code > for the vector <code > <unk> / code > and <code > <unk> / code > .
converts the given map to a json string .
returns a map of strings representing the contents of the specified offset to the specified schema .
main method .
request a report .
parse the given file .
add offsets to the <unk> file .
retrieves the whitelist offset for a file .
creates a new { @link <unk> } .
[ variable my_blob_name ]
[ variable <unk> ]
handles a single blob list .
allocate a lob from the given space .
create a new named { @link <unk> } .
release reader .
set the host to use for authentication .
adds a custom header to the request .
parse the given string into a { @link date } object .
selects the accept header for the given array of strings .
selects the content - type header for the given string array .
encode a string to a url encoded string .
serialize an object to a json string .
deserialize a json response .
gets the client .
creates a { @link <unk> } for the given { @link <unk> } .
gets the reference to the table reference .
creates a bulk consumer thread .
/ * ( non - javadoc )
creates a new { @link schema } for the given { @link map } level .
creates a new { @link <unk> } for the given error code .
add all jars in the given jar .
$non - nls - 1$
/ * ( non - javadoc )
process the records in the {
{ @inheritdoc }
returns the request uri for the request .
append field order by list .
returns true if the condition evaluates to true .
/ * ( non - javadoc )
returns a string representation of the { @link <unk> } .
get the offset for the file
entry point to the instrumentation class .
build a list of white list .
returns a list of {
traverses the classpath .
gets the total weight of layer .
in case of usage :
[ variable <unk> ]
returns the { @link <unk> } represented by this { @link <unk> } .
~ methods **************************************************************************************************************************************
creates a list of <unk> from a repeated field .
returns the description of the table .
writes a list of { @link <unk> } s to the table .
get the routines .
get path from endpoint type
get the attributes of a table .
get the column properties for a table .
<p > <unk> . < / p >
helper method to initialize the list of { @link <unk> } s from the given { @link <unk> } .
/ * ( non - javadoc )
convert a string to a list of java strings .
loads a command line .
/ * ( non - javadoc )
create a {
----- protected methods -----
/ * init path pattern
releases the lock .
/ * ( non - javadoc )
returns a { @link outputstream } for the given { @link file } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
create a {
returns the {
dump all available services .
creates a new instance of the { @link <unk> } .
create a new { @link <unk> } for the given { @link class } .
creates an instance of { @link <unk> } .
registers an { @link state } for the given { @link <unk> } .
/ * ( non - javadoc )
stops the aggregator .
roll up the time window .
returns the decimal value for the specified field .
acquire a login manager from the login manager .
release the <unk> .
invokes the {
converts a glob pattern to a regular expression .
decode a standalone buffer .
package private for testing
returns a list of <code > <unk> / code > objects for the specified <code > <unk> / code > .
create the principals related to the given user .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
produces empty batches for leases .
creates the failure snapshot .
/ * example :
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
lookup thrift key .
create a new { @link <unk> } instance .
this method converts a list of <unk> to a <unk> .
send a table to the table .
/ * ( non - javadoc )
retrieves the next table for the given thread number .
this method {
returns true if no more data event event should be generated .
return the audiofileformat from the given logrecord .
reads a single line from a reader .
sets the value of { @code multiplier } to { @code multiplier } .
delete the user auth token .
/ * ( non - javadoc )
<p > <unk> . < / p >
returns the base url for the given url .
retrieve the user token from the response .
gets the user s access token from facebook .
returns instance of { @link <unk> } .
updates the properties of the <unk> .
{ @inheritdoc }
pull the field from xml file .
returns a unauthorized { @link <unk> } object with the given { @code <unk> } and { @code <unk> } .
creates a { @link schema } for the given field name .
returns the schema for the given field .
----- private methods -----
obtains the decimal value for the given field .
gets the default value for the given schema .
this method is used to emit metrics about all the metrics in the given { @link <unk> } .
compare two file paths .
returns the index of the specified group .
returns an unmodifiable list of the names of the group names .
returns true if the given string is a digit at the given position .
/ * visiblefortesting
returns true if the string is a quote or a quote .
/ * returns true if the string is inside a string .
/ * --- private methods ---
returns the number of open tags in the given string .
/ * --- private methods ---
splits the input string into a string builder .
splits the input string into a string builder .
parse a named assertion .
/ * ( non - javadoc )
list the attributes of a mbean
this method is used to update the schema of the <unk> .
get list of schema names from schema and tables .
check if the worker id is expired .
/ * ( non - javadoc )
fills the buffer with the given amount of data .
initialize the default exchange .
returns a detached { @link <unk> } that can be used to simulate rendering of a detached stage .
reads the contents of an input stream into a byte array .
/ * ( non - javadoc )
converts a string to its nearest object .
parse the part of the frame .
returns the length of the dbf file .
returns the field field as a field .
/ * ( non - javadoc )
returns the name of the <unk> for the specified type .
returns the metric table name .
creates a fully qualified table name from a table name and q table .
installs the initial <unk> .
returns a list of all the tables from a database .
{ @link <unk> }
creates the default field mappings .
creates the mapping of <unk> to <unk> .
get the sql type for the given field .
/ * ( non - javadoc )
add this record to the database .
/ * ( non - javadoc )
/ * ( non - javadoc )
classify a batch of records .
helper method for processing files
/ * ( non - javadoc )
returns a {
returns a map of <unk> to a single record .
create a detached stage .
/ * ( non - javadoc )
gets the field alias from the hive table .
/ * ( non - javadoc )
this method is used to build a query and return a list of {
listen for a partition column .
returns a map of key - value pairs from the given uri .
----- public static methods -----
{ @link <unk> ( string ) }
creates a list of all columns that are not part of the <unk> .
generates a war bundle based on the properties provided .
generates a bundle based on the provided bundle .
upload a list of resource bundles to a bundle
see { @link <unk> ( list bundle ) }
send leader to leader .
read the requested number of bytes from the input stream .
returns a list of { @link <unk> } s that contains a list of { @link <unk> } s .
parses a query string into a { @link map } object .
/ * ( non - javadoc )
gets the command line arguments .
gets the operation .
returns a string representation of the size of the file .
scans the specified {
/ * ( non - javadoc )
test if a token is whitelisted .
returns true if the provided versions match the expected versions .
/ * ( non - javadoc )
/ * ( non - javadoc )
the main method .
retrieve the issue .
/ * ( non - javadoc )
gets the description of the <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
process a single { @link <unk> } .
/ * ( non - javadoc )
/ * converts a string to a string
creates a { @link <unk> } for { @link <unk> } .
creates a { @link <unk> } for a jdbc connection .
/ * <unk>
/ * ( non - javadoc )
start a new commit command .
return a <unk> object for the given object
creates a network instance associated with a given id .
creates a new { @link <unk> } for the given { @link record } .
/ * ( non - javadoc )
wrap the given { @link <unk> } with the given { @link <unk> } .
/ * ( non - javadoc )
creates a gauge based on the name of the gauge .
remove the service from the given pipeline .
{ @inheritdoc }
/ * ( non - javadoc )
generates a list of attributes for a given file .
validates a record .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an input stream for the given input stream .
returns a read - only { @link <unk> } for the given { @link inputstream } .
/ parquet parquet parquet parquet <unk>
/ * ( non - javadoc )
validate resource spec .
validates a resource .
extract field from target .
<unk> { @link <unk> } <unk> { @link <unk> } <unk>
<p > <unk> . < / p >
<p > <unk> . < / p >
calls { @link <unk> ( java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string ) } with the
write a { @link <unk> } to the { @link <unk> } .
<unk> method .
initialize the gauge if it is needed
/ * -------------------------------------------------------------------------------
returns true if the graph is reachable from the graph .
use this method to specify the pattern for this matcher .
matches a string that matches the replacement string .
returns a list of all the named groups .
replaces all the occurrences of a string in the given string with the given replacement .
creates a new { @link java . util . properties } for the { @link <unk> } .
loads the last field name from the given path .
/ * <unk>
in cblmanager . m - ( nsstring * ) <unk> : ( nsstring * ) - ( nsstring * ) - ( nsstring * ) - >
normalize a class path .
ensures that an avro schema exists in the given list of configs .
returns the global variable size .
converts a proto type status into a { @link <unk> } .
creates the start event for the request .
creates a new {
get all references to a connection partner .
read a field from a byte array .
convert a value to a runtime type .
adds a query to the partition .
drop the alter table with the given name .
gets the partition specification .
{ @inheritdoc }
get the next databases .
/ * ( non - javadoc )
executes the {
executes the {
read a batch of records .
execute a batch task .
/ * ( non - javadoc )
utility method to get the { @link <unk> } for the { @link actor } .
/ * ( non - javadoc )
accepts a table and passes it to the pipeline .
/ * example :
populate the <unk> for a record .
gets value from field .
checks if the port is valid .
handles an { @link <unk> } .
handle an error .
remove a fragment from the catalog .
add a document to the database .
process a single { @link <unk> } .
attempts to find the pid of the given process operation .
download the s3 object from the s3 object
update the gauge if it is needed
check if an <unk> contains an <unk>
returns a new instance of the specified class loader with the given classloader .
parses the given { @link inputstream } into a { @link <unk> } .
returns a new instance of the specified { @code <unk> } using the specified { @code supplier } .
returns a new instance of the specified {
create a new login context for the given class loader .
registers the given { @code <unk> } with the given { @code creator } .
returns a map of key - value pairs .
read request attributes .
/ * ( non - javadoc )
log out the login context .
create a {
normalizes and replaces the variables in the given path .
ensures that the given path is a { @link java . util . printstream } .
creates a new { @link <unk> } for the given class .
/ * ( non - javadoc )
generate column type definition .
called by declarative services to activate service
/ * ( non - javadoc )
returns the path to the given { @link <unk> } .
rename a file .
issue the file
handle version of {
commits the given <tt > logrecord< / tt > .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
returns the string matcher that matches the given pattern .
join a collection of strings to a string .
returns true if the pattern string matches the pattern .
set the specified offsets to the specified offsets .
get the offsets for the environment .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a map of the offset to the specified offset .
creates a { @link stage } for the given { @link <unk> } .
/ * ( non - javadoc )
<p > <unk> . < / p >
configure the http client .
refresh the access token .
@param metric @param <unk>
create a {
the main method .
serves response .
parses the header .
return a <code > <unk> / code > with the specified <code > <unk> / code > .
decode the parameters .
reads the end of the header .
/ * boundary
/ * ( non - javadoc )
handle activity download .
initializes the ssl engine factory .
<p > <unk> . < / p >
creates and returns a new {
returns the mime type of a file .
/ * ( non - javadoc )
override this to customize the server .
stops the server .
parse the {
sends the given { @link outputstream } to the given { @link outputstream } .
send a file body to the output stream .
factory method for creating a new { @link response } from the given { @link inputstream } .
factory method for creating a new fixed length response .
factory method for creating a new { @link <unk> } .
sends a http response response .
returns true if the mime - type should be accepted .
reads the websocket handshake .
encodes a byte array into base64 notation .
/ * ( non - javadoc )
read payload information from input stream .
encodes the payload .
adds a cookie to the session .
/ * ------------------------------------------------------------
remove a session
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
encrypt a base64 encoded string .
set the name of the <unk> property .
sets the table space .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a jackson { @link objectmapper } for serialization .
/ * ( non - javadoc )
gets the geo location .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
registers a {
/ * ( non - javadoc )
resolves the principal name of the session .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the jndi name of the given operation .
returns the canonical form of the given parameter types .
register a new {
called before the completion of the <code > <unk> / code > .
encode the <unk> .
/ * ( non - javadoc )
returns the raw text of an attribute .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list containing all of the elements in this list .
/ * ( non - javadoc )
{ @link <unk> ( <unk> boolean ) }
validate credential .
checks whether the specified class has the given data .
initialise the orb
/ * ( non - javadoc )
handle registration of removal .
utility method to ===================================================================
utility method to ===============================================================
process an object .
utility method to ===============================================================
writes the changes to the context .
/ * ( non - javadoc )
checks if the {
wait for read lock count .
increment the read lock count .
add a set of bdas to the deployment
add a set of bdas to the deployment
add a set of bdas to the deployment .
{ @link <unk> ( string ) }
{ @inheritdoc }
registers a new { @link <unk> } .
/ * ( non - javadoc )
get the { @link java . util . method } of the given { @link <unk> } .
/ * ( non - javadoc )
attempts to authenticate a credential and return a { @link <unk> } object .
/ * @param <unk> @param <unk> @param <unk>
returns a list of persistence provider support .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the { @link <unk> } and the bean archives .
add all the bdas to the deployment .
{ @inheritdoc }
create a {
write the config file
updates the security metadata object with the given agreement agreement .
returns a map of servlet url patterns .
gets the servlet class mappings .
resolves the {
select a list of nodes .
{ @link <unk> ( org . jboss . as . controller . context . <unk> ) }
/ * ( non - javadoc )
/ * package private
/ * managamentxmldelegate methods
creates and returns a new builder .
checks if the { @link org . osgi . service . event . <unk> } is available .
creates a pathaddress from the given operation .
{ @link <unk> ( modelnode pathaddress ) }
convienence method that creates an { @link org . jboss . dmr . modelnode } from a { @link org . jboss . dmr . modelnode } .
returns { @code true } if the given { @code operation } is a success .
creates a batch request node .
create write attribute .
convienence method that creates a new { @link modelnode } node .
convienence method that allows you to create read - attribute operation
convienence method that creates an { @link org . jboss . dmr . modelnode } for a write attribute .
creates an undefine - attribute operation using the specified address and name .
/ * ( non - javadoc )
adds a componenthandler with the specified componenttype and renderertype aliased by the factory .
method to get the { @link org . apache . ojb . broker . context . <unk> } instances .
get a list of {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the canonical form of the given request uri .
adds a { @link <unk> } to the { @link <unk> } .
modify the {
configure endpoints .
returns the root context root for the deployment .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * [ deutsch ] <p > ermittelt den wochentag . < / p >
filter activation .
returns the endpoint for the given resource adapter name .
<p > <unk> . < / p >
attempts to load the security context from the given { @link <unk> } .
gets the security context associated with this { @link <unk> } .
clears the security context .
returns a new instance of the { @link run } that the { @link run } instance is exiting .
returns a new instance of the { @link run } that the caller is exiting .
/ * ( non - javadoc )
replies the path of the deployment unit .
returns the description of the certificate chain .
installs a service target service .
installs a service target service .
registers the add operation .
<p > invoke . < / p >
returns true if the given string is a constant type .
gets the method .
get the { @link field } of the given class .
<p > process . < / p >
{ @inheritdoc }
/ * ------------------------------------------------- [ <unk> ] ---------------------------------------------------
parse the command line options
get the description of the certificate chain .
/ * ( non - javadoc )
get info from http request
/ * ( non - javadoc )
creates a new instance of the { @link url } given the host and port .
the main method .
/ * ( non - javadoc )
unregister resource adapter deployment
handle <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the account is authenticated .
returns the real { @link <unk> } for the real request .
build the message info from the request .
----- private methods -----
read a single name attribute .
read a single value attribute .
/ * package private
add a module to the deployment unit .
create a { @link com . buschmais . xo . commons . xomanagerfactory } for the given { @link <unk> } .
register the transformers .
creates a stub { @link stub } for the given types .
writes the given parameters to the given output stream .
reads an exception from an input stream .
returns { @code true } if { @code target } is { @code target } .
/ * ( non - javadoc )
minioclient . <unk> () example .
/ * ( non - javadoc )
returns a list of potential <unk> interfaces for a given class .
/ * package private
put the entity manager in transaction registry .
write a content .
selects order by order by clause .
create a new { @link <unk> } .
clears the security context .
writes content to the writer .
sets the value of the specified key to the specified value .
removes all the attributes of this <code > <unk> / code > .
releases the lock .
release the given instance .
releases the lock .
/ * ( non - javadoc )
{ @link <unk> ( java . io . inputstream java . io . inputstream ) }
starts the scheduler .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
create a new instance of the given module .
add a { @link <unk> } .
/ * ( non - javadoc )
<p > create a new { @link <unk> } . < / p >
invokes the method with the specified arguments .
generates the { @link method } for the specified { @code view } .
returns true if the specified method is equal to the given method .
creates the management statistics resource .
/ * ( non - javadoc )
add a { @link <unk> } to a bridge supplier .
/ * ( non - javadoc )
method <unk> .
this method is called by the {
/ * ( non - javadoc )
finds the security domain for the given deployment .
returns true if the given endpoint is a secure wsdl .
/ * ( non - javadoc )
gets the <unk> for the specified endpoint .
creates a <unk> from the given old security domain .
ensure that the <unk> is the same .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the omg idl exception name for the given class name .
/ * ( non - javadoc )
----- private methods -----
process the deployment .
handles a proxy request .
/ * ( non - javadoc )
checks if the transaction is in the transaction state .
get the { @link <unk> } instance
sets the connection factory .
get the name of the extension .
checks if the given name is empty .
/ * ( non - javadoc )
converts the given { @link string message } of { @link class cause } to { @link naming } .
get an exception reporting a { @link <unk> } .
<p > <unk> . < / p >
/ * documented <unk>
<p > unbinds an object . < / p >
unbinds a name from a context .
{ @link <unk> ( operationcontext org . jboss . dmr . modelnode org . jboss . dmr . modelnode org . jboss . dmr . modelnode org . jboss . dmr . modelnode org . jboss . dmr . modelnode org . jboss . dmr . modelnode org . jboss . dmr . modelnode org . jboss . as . controller . operationcontext .
execute an operation .
/ * ( non - javadoc )
parse connection attributes ===========================================
parse timeout ===========================================
parse connection definitions .
parse a xa pool
/ * ( non - javadoc )
construct a {
construct a new instance of the <code > <unk> / code > from the given <code > <unk> / code > .
call this method to stop the lpbt .
merge the given interceptor class with the given annotation .
liberty change end
resolves the runtime name of the given { @code <unk> } .
{ @inheritdoc }
checks whether the given class is a managed bean .
connect to a resource definition .
initialize the { @link <unk> } .
/ * ( non - javadoc )
returns the corresponding value of a primitive analysis object .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
get the servlets .
get the servlet mappings for the given servlet name .
get { @link <unk> security constraints }
configure jaas login config .
----- protected methods -----
/ * ( non - javadoc )
convert the params to a dictionary .
creates a new security constraint object with the given list of security constraint objects .
factory method for create a new { @link <unk> } .
{ @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> }
create a servlet mapping descriptor .
factory method for creating a new { @link <unk> } .
determines if ssl is required .
factory method for creating a new { @link <unk> } from a { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
parses the given { @code reader } and returns it as a { @code <unk> } .
registers the {
/ * get the contents of the apimessageid field from the message header .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a { @link <unk> } object for the given { @link <unk> } .
creates a new { @link <unk> } for the given { @link <unk> } .
creates an { @link <unk> } as a { @link <unk> } .
/ * ( non - javadoc )
<unk> > <unk>
this method verifies that the input requires a method to be invoked .
/ * ( non - javadoc )
{ @inheritdoc }
/ * double
encode the initial context token .
decode the initial context token .
decodes a byte array into a byte array .
attempts to get a compound out of the <unk> .
/ * ( non - javadoc )
d429866 . 2
f49213 . 1
initialize the extension for the given module .
returns the jndi name of the given model node .
<unk> implementation /////////////////////////////
returns the permissions attribute for the given attribute .
{ @inheritdoc }
parses an xml file and returns the permissions object .
returns the {
returns the type of the given url pattern .
analyzes the meta - data and adds them to the <unk> .
associate a transaction with the given transaction .
/ * package private
get the default {
/ * package
parse the persistence unit .
parse the persistence unit .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > pause the given { @link <unk> } . < / p >
resume the current thread .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
add the given { @link <unk> } to the server .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
get the service destination service name .
creates a { @link <unk> } for the given { @link virtualfile } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
build a lucene { @link <unk> } instance for the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
process session annotations .
{ @inheritdoc }
/ * ( non - javadoc )
reads a class file transformer .
switch to bindings d511673
checks if the persistence unit is enabled .
creates and returns a new instance of the {
skip synchronization .
checks if the { @link <unk> } is a { @link <unk> } .
/ * package
performs the removal of a { @link <unk> } with the given { @link <unk> } .
create an orb instance from the given properties .
bindview annotated fields and methods in the specified { @code <unk> } .
f743 - <unk>
returns the current { @link <unk> } associated with this { @link <unk> } .
configure the naming manager .
{ @link <unk> }
/ * ( non - javadoc )
<p > bind . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
rename a jndi name .
/ * ( non - javadoc )
/ * ( non - javadoc )
destroy the jndi associated with the given name .
creates a mapping from the jndi name mapping .
lookup a {
create a new ldapname instance with the given name .
{ @link <unk> ( string string string ) }
/ * ( non - javadoc )
add a split listener to the naming store .
add a message listener to the naming queue .
/ * ( non - javadoc )
registers a new { @link <unk> } .
checkstyle : off
returns a {
/ * <unk>
/ * ( non - javadoc )
returns the default value for the annotation .
liberty change for cxf end
/ * ( non - javadoc )
{ @inheritdoc }
initializes the { @link <unk> } for the given { @link <unk> } .
creates an array of { @link provisionoption } s .
returns the status of the given status as a string .
check that all attributes of a given attribute are defined .
factory method to create an { @link <unk> } .
factory method to be called after { @link <unk> ( classification ) }
start the given { @link <unk> } .
creates an instance of { @link <unk> } .
creates a new instance of { @link <unk> } .
/ * ( non - javadoc )
<p > <unk> . < / p >
generate the {
determine the type of the database based on the name of the parameter .
checks to see if the database exists .
convert a timestamp to a date
sets the name of the { @link preparedstatement } .
mark the given deployment as a child application .
returns true if the deployment is part of the process application .
returns a description of the given inputstream .
/ * ( non - javadoc )
write an exception to an output stream .
method called to get the reference to the {
description : < / p >
/ * ( non - javadoc )
transform a list of cards into a list of cards .
/ * ( non - javadoc )
begin <unk> <unk>
end <unk> <unk>
get the delta value of the current map .
creates a new instance of { @link <unk> } .
removes the call to { @link <unk> ( java . util . map ) }
/ * package
add a module to the deployment module . <br / > <br / > <br / > <br / > <br / > <br / > <br / > <br / > <br / > <br / > <br / > <br / > <br / > <br / > <br / > <br / > <br / > <br / > <br /
process the artifact map xml stream .
process the {
get the class name for the given class .
check if the given class represents an instance of the given class .
write simple type .
get the name of a digit .
<p > <unk> . < / p >
returns true if the given string is a valid java keyword .
calculates whether a given character is a valid password char .
adapted from {
<p > <unk> . < / p >
get method descriptor string .
returns the omg idl text for the given class . <p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates an instance of { @link <unk> } .
gets the value of the { @link <unk> } .
gets or creates the entity manager .
/ * ( non - javadoc )
/ * ( non - javadoc )
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
copies all of the mappings from this map into the specified map .
/ * package
finds the clustering
returns the name of the simple name of the given class .
returns the most recent transaction version .
returns a map of timers associated with the specified event .
returns the working directory for the working directory .
{ @inheritdoc }
matches a string with a replacement pattern .
/ * ( non - javadoc )
checks if the exception is an application exception .
adds a listener to the list of listeners .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
returns a function that close the underlying { @link java . util . function } .
/ * ( non - javadoc )
create a new { @link subject } for the specified authentication context name .
{ @inheritdoc }
returns the current { @link <unk> } for the current { @link <unk> } .
add a private connection to the given module .
/ * ( non - javadoc )
get the modifiable { @link datasource } for the given { @link operationcontext } .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
prints a method on the stack .
adds the given { @link <unk> } to the snapshot .
returns the default class for the given name .
generate a random string from the given string .
substitute sub - strings with side effect .
{ @inheritdoc }
stop the service
/ * ( non - javadoc )
adds a prefix to the dynamic module bean .
gets the root deployment unit .
<p > getter for the field <code > <unk> / code > . < / p >
creates a { @link <unk> } for the given component configuration .
create a new { @link <unk> } for the given { @link service } .
gets the reference to the { @link <unk> } .
returns a list of { @link <unk> } s that are members of this { @link <unk> } .
schedules a new { @link <unk> } .
/ * ( non - javadoc )
returns a list of { @link <unk> } s for the given method .
add a reference to the { @link <unk> } .
add a chained interceptor .
puts a new private key into the map .
create a combined list of class loaders .
get an exception reporting an unexpected xml element .
removes all children of a given resource .
define a connection factory .
<unk> > <unk>
returns true if the deployment unit is well - formed .
gets the host name .
get the pathfilter class for the input path .
gets the servlet for the given servlet name .
returns the required attachment of the given { @link deployment } object .
get an optional attachment from the deployment dependency object .
{ @link <unk> ( <unk> <unk> ) }
{ @link <unk> }
<p > <unk> . < / p >
get the context root for a deployment .
transforms a { @link changeset } into a { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the inactive overlay directories
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
transform a server - side operation .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of { @link resource } s as a list of { @link resource } s .
/ * ( non - javadoc )
jpa <unk> .
gets the {
/ * get the <unk> for the transaction
/ * ( non - javadoc )
{ @inheritdoc }
process the annotations .
{ @link <unk> ( string string boolean ) }
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
start transaction queue .
d413752 . 1
returns true if all of the fields are public static fields .
get the reference to the {
returns a list of all the temporary messages that match the given search name .
/ * ( non - javadoc )
sets the type code for this type .
this method is used to ===============================================================
url - encodes a string .
decode a string to a string .
encode a string using the given encoding .
/ * ( non - javadoc )
<p > start . < / p >
{ @link <unk> }
create a new { @link uri } for the given { @link <unk> } .
{ @inheritdoc }
returns true if the deployment is part of the process application .
{ @inheritdoc }
returns a handle to the timer . <p >
returns the next time at which the timer will be executed . <p >
sets the next time in milliseconds .
/ * ( non - javadoc )
returns true if the timer is active .
throws a {
sets the {
<unk> <unk> .
get a set of roles declared by the <unk> .
utility method to get the reference to the stub .
update the description chain .
add dependencies for modules
/ * ( non - javadoc )
update the {
returns a list of {
/ * ( non - javadoc )
adds the {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
初始化<br > <unk>
add an attribute to the view .
set the attribute .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link <unk> ( string boolean ) }
installs a service name .
verifies that the given class is of the correct type .
returns the class name for the given type .
/ * ******************************************************************** / * factory methods ********************************************************************
verifies that the { @link <unk> } class is of type { @link <unk> } .
verifies that the { @link <unk> } class is of type { @link <unk> } .
merge the {
this method determines if the given elements are equal to the given element .
clean up all executions
/ * ( non - javadoc )
define a connection factory .
factory method to create a { @link <unk> } from a { @link <unk> } .
creates a new { @link <unk> } for the given class .
/ * ------------------------------------------------------------
returns the type argument of the given type .
{ @link <unk> ( java . lang . string java . util . collection ) }
get the modifiable key store resource .
/ * get the {
get the { @link <unk> } for the { @link <unk> } .
documentation inherited from interface
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
splits a string into a vector of <unk> .
converts a string to lower case .
returns the index of the first occurrence of the specified string .
transform a server - side operation .
/ * ( non - javadoc )
method <unk> .
configure the { @link <unk> } .
attempts to authenticate the specified user and password .
checks if the given value is compatible with the given type .
/ * ( non - javadoc )
/ * ( non - javadoc )
instantiate a bean .
configures bean properties for the given node .
liberty change for cxf end
add an object to the receiver .
create a reference to a service .
/ * ( non - javadoc )
gets the current selector .
get the { @link <unk> } for the given { @code name } .
create a new instance of { @link <unk> } .
finds all methods annotated with {
get the <unk> for the specified method name .
detect an existing {
checks if the class is visible .
{ @inheritdoc }
/ * ( non - javadoc )
post parse steps .
normalize persistence unit .
/ * ( non - javadoc )
define a connection factory .
returns a list of {
acquire a methoddesc from the descriptor .
add a { @link <unk> } to the { @link <unk> } .
create a new { @link com . twotoasters . android . support . v7 . widget . recyclerview . <unk> } instance .
creates a new { @link <unk> } from the { @link <unk> } .
create the web application mappings .
/ * ( non - javadoc )
create servlets .
create servlet mappings
create security constraints
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
handles a stateless session bean .
configure stub class .
<pre > scope . < / pre >
get the signature of an anonymous object id .
/ * returns the name of the classname .
transform a server - side operation .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
removes all registered {
/ * ( non - javadoc )
returns the class loader for the given classloader .
this method is called to read a single element from an xml element .
/ * managamentxmldelegate methods
/ * parse an ldap - xml element .
write an element to an xml element
reads the server - side attribute of the given node .
/ * package
/ * ( non - javadoc )
/ * ----------------------------------------------------------------------------- internal methods : //////////////////////////////////////
/ * parse a naming config element .
/ * parse a single configuration element and parse it into a closure .
/ * package private
/ * managamentxmldelegate methods
parse users .
/ * parse an ldap access token .
/ * parse an ldap property .
/ * package private
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
write a decorator .
/ * ( non - javadoc )
write a content element .
returns true if the attribute definition is writable .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the persistence context .
add dependencies for modules
<p > run . < / p >
/ * ( non - javadoc )
{ @inheritdoc }
returns the current {
adds an application to the persistence unit .
detect persistence unit .
detect persistence unit phase .
/ * ( non - javadoc )
finds the root { @link <unk> } for the given { @link <unk> } .
transforms a { @link <unk> } to a { @link <unk> } .
returns the provider for the specified persistence unit .
{ @link <unk> ( <unk> ) }
adds a { @link <unk> } to a { @link <unk> } .
get or create a resource .
/ * ( non - javadoc )
update the deployment .
build the meta data .
build enterprise assertion .
{ @inheritdoc }
/ * package
replies the path of the deployment unit .
gets the path of a deployment unit .
this method is called by <unk>
returns the description of the certificate chain .
/ * ( non - javadoc )
/ * package private
/ * ( non - javadoc )
150727 - rewrote entire method .
bind listener .
registers the given resource .
get the {
looks up the {
create a new { @link <unk> } instance .
returns the package name of the given package .
converts an integer to its hexadecimal representation .
converts an integer to a hexadecimal string .
returns the getter method for the given method .
returns true if the method is marked as mutator method .
returns true if the given method has non - ioexception exceptions .
get the error codes .
this method is invoked by the { @code <unk> } method .
analyzes the methods of the class .
returns the name of the base name of the given name .
returns the name of the base name of the given name .
analyze constants .
analyze the given attributes .
get the names of all the overloaded method names
this method is used to fixup names from one node to another .
calculate the hashcode for the class
convert a string to a string .
recursive method for <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * this method is used to parse an xml worker container using the given <code > reader< / code > .
/ * read a default context element
process an element attributes .
loads all persistence providers from a module name .
the main method .
gets the reference to the {
returns the description of the certificate chain .
create add operation .
/ * ( non - javadoc )
add dependencies for modules
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
write a single attribute .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
invokes the { @link <unk> ( string object ... ) } method .
performs the authentication .
initializes a { @link org . apache . beehive . netui . common . spi . <unk> } from the given { @link <unk> } .
f743 - <unk>
helper method to create a jca session .
/ * @override public <unk> <unk> ( string address ) { string <unk> = jndi . <unk> () ;
/ * ( non - javadoc )
{ @link <unk> ( deployment <unk> ) }
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if rollback is enabled .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
generate code to generate code code .
generate the code for the given analysis analysis object .
<unk> <p > <unk> / p >
compiles the given interface to a class .
builds a {
get the names of the full surname .
try to create a new {
<p > <unk> . < / p >
create a { @link <unk> } .
this method is ===============================================================
create an orb
create an orb instance .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
( non - javadoc )
bind an object to a jndi binding .
/ * ( non - javadoc )
internal method to publish bound resources .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a <code > java . util . <unk> / code > of the specified <code > name< / code > s .
create a custom converter instance .
create a sub - context for the given name .
create a new context .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the value of {
remove a property from the environment .
adds the { @link <unk> } to the given { @link <unk> } .
/ * parse security
/ * parse security
{ @inheritdoc }
method used to write a content attribute .
writes entity bean .
writes the content .
write a content .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
remove a security domain .
create the security context .
get a security domain context
/ * ( non - javadoc )
create a {
create a <unk> .
create a <unk> .
create a { @link net . dv8tion . jda . core . managers . <unk> identity } instance .
create a <unk> .
used only with java 7 do not set
returns the { @link <unk> } for the specified { @link <unk> } .
creates a { @link <unk> } for the specified type .
create a new instance of the class with the given name and factory .
creates a { @link <unk> } for the specified type .
/ * ( non - javadoc )
/ * ( non - javadoc )
the main method .
/ * parse an <unk> receiver
/ * ===========================================
wait for a service to be registered .
factory method for creating a new password .
initializes the security vault .
create a session context .
/ * ( non - javadoc )
add a named attribute to the vault .
/ * ( non - javadoc )
remove a boolean attribute from the vault .
gets a page image from the specified vault . retrieves the image specified by the <code > <unk> / code > and <code > <unk> / code > attributes .
this method is called when a {
prints the results to the standard output .
generate a json representation of the object .
/ * ( non - javadoc )
checks that the given value is not null .
get the service name
register resource adapter identifier .
expect a value to be inserted into the table .
/ * ( non - javadoc )
determines whether this { @link <unk> } is an instance of this { @link <unk> } .
checks the mqtttopicpermission implies a given name .
/ * ( non - javadoc )
creates a new instance of the {
returns true if the argument is an instance of this class .
returns the id of the given uri .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link <unk> } { @link <unk> }
{ @inheritdoc }
checks if any of the registered classes should be removed .
checkstyle : off
/ * ( non - javadoc )
resolve the value of the given generic type .
/ * ( non - javadoc )
returns all { @link interceptor } s associated with the given { @link <unk> } .
gets the { @link <unk> } for the given class name .
add a { @link <unk> } to the interceptor chain .
add a { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
sets the naming mode for this destination .
add a new { @link <unk> } to this { @link <unk> } .
get a list of interceptor interceptors for the given method .
get a list of { @link <unk> } s for a given { @link method } .
/ * ( non - javadoc )
liberty change end
creates a new { @link <unk> } .
add interceptor interceptors .
add interceptor .
creates interceptor instances .
add a { @link <unk> } to the { @link <unk> } .
get the { @link <unk> } level of the given { @link <unk> } .
add a { @link <unk> } to the { @link <unk> } .
/ * ( non - javadoc )
add a pre destroy interceptor .
creates a list of interceptor instances interceptors that are pre - pre - invoked .
add a { @link <unk> } to the interceptor chain .
returns a list of interceptor factories for the { @link <unk> } .
add a { @link <unk> } to the list of registered { @link <unk> } .
sets the servicedirectorymanagerfactory .
returns the { @link org . jboss . as . controller . component } for the specified { @link org . jboss . as . controller . component } .
this method loads and returns the { @link org . <unk> . model . module . module } for the given original class .
get the protection domain .
find the exported licenses for the given module .
render a list of {
sets the {
/ * ( non - javadoc )
{ @link <unk> }
get the service name based on the deployment name .
<unk> <unk> .
binds the specified { @link <unk> } for the given application .
/ * ( non - javadoc )
----- private methods -----
returns the raw text of an attribute as a string .
/ * ( non - javadoc )
installs a service object .
get the complete list of <unk> .
get reference to reference .
return the appropriate type code .
this method is called by <unk> .
returns a copy of the given {
this method returns the members of the type members .
/ * ( non - javadoc )
creates the subsystem { @link <unk> } .
/ * parse an ldap - domain controller .
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new { @link <unk> } .
{ @inheritdoc }
adds a destination to the given destination .
returns a new set of { @link java . util . set } of views for the given view .
get the components for the given component .
gets the view descriptions for the given view and view name .
run the generators on the given <unk> .
build the <unk> for the given resource .
add the <unk> to the <unk> .
adds the appropriate { @link <unk> } to the builder .
reject the attribute values .
renames an attribute .
/ * ( non - javadoc )
create a new { @link <unk> } for the given { @link principal } .
<p > <unk> . < / p >
creates a new { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package
computes and returns the { @link <unk> } value of the { @link <unk> } .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
finds and returns the { @link method } for the given { @link <unk> } .
destroy the page flow .
configure credential .
/ * ( non - javadoc )
/ * package
/ * ( non - javadoc )
get the type code for the given class .
implements the visitor to add a type code .
/ * ( non - javadoc )
initialise the orb
gets the value of the <unk> property .
/ * ( non - javadoc )
/ * ( non - javadoc )
add attributes to the given container .
f743 - <unk> methods
add all interfaces of the given class .
add the abstract base atoms to the set of abstract base atoms .
{ @link <unk> ( object ) }
returns the omg value of an array .
add an interface to the <unk>
add value to a value .
resolve an exception .
gets the class level of injection type .
register a new <unk>
method to check if a resource is enabled .
/ * ( non - javadoc )
close the context .
{ @inheritdoc }
add dependencies for modules
/ * private methods
checkstyle : off
{ @link <unk> ( java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string
checkstyle : off
creates a new { @link <unk> } for the given message type .
throws an exception if the method has already been invoked .
/ * ( non - javadoc )
get all component classes that are part of the <unk> .
{ @inheritdoc }
{ @inheritdoc }
create a timer for the timer with the given initial time and duration . <p >
create an interval with the specified interval and duration . <p >
create a timer for the single timer . <p >
create a timer for the single timer timer . <p >
create a timer descriptor . <p >
create a non - persistent timer . <p >
create a timer object with the given initial duration and duration . <p >
create an instance of { @link timer } . <p > this method is invoked in the constructor from the derived classes and can be overridden so users can provide their own version of the timer .
returns all active timers . <p >
li2281 . 07
create a timer .
f743 - 506
returns a timer handle for the specified { @link timer } .
/ * ( non - javadoc )
cancels all timers associated with the current thread .
restore all timers .
starts the non - persistent timers .
this method is called by the { @link org . apache . beehive . netui . client . client . <unk> } interface .
/ * ( non - javadoc )
cancel the timer .
return a map of timer events to the specified transaction .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the given bean class implements {
returns all interfaces implemented by the given class .
filters the specified interfaces .
/ * ( non - javadoc )
adds extra parameters to the parameters .
creates a map of parameters for the given project .
/ * ( non - javadoc )
{ @link <unk> ( string ) }
creates a new { @link service } for a { @link <unk> } .
returns the class for the given type .
convert the given value to an object of the given class .
returns an array of { @link java . lang . string [] } of all the arguments .
finds a method by name .
locates a method in a class .
returns true if the given type is simple .
/ * package private
switch to the next binding .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
add properties to the given properties object .
processes the {
notifies all registered listeners about the agent destruction .
clears the current health reporter .
difference to picocontainer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * documented <unk>
returns the value of the specified { @code value } .
returns an { @code optionaldouble } describing the result of applying the given { @code optional } if it is .
returns the value of the specified { @code value } .
returns an { @code optionalint } value of the specified { @code value } .
returns an { @code optionallong } describing the results of { @code null } if it is present .
returns the value of the specified { @code value } .
returns the value of the specified { @code value } .
returns the value of the specified { @code value } .
returns the first element of the given { @code list } .
/ * documented <unk>
creates a { @link <unk> } for the given { @link virtualfile } .
create a <unk> for a given operation .
create a new operation builder
<p > <unk> . < / p >
skips the given number of bytes from the input stream .
/ * ( non - javadoc )
this method checks the given { @link <unk> } and { @link <unk> ( <unk> element ) } and throws an { @link <unk> } if the given element is not contained in the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * invokes the given method with the given parameters .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package
{ @inheritdoc }
/ * ( non - javadoc )
add a collection of { @link classloader } s to the { @link classloader } .
returns an operation that implements the { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a message listener to the stack .
reset the { @link <unk> } to this { @link <unk> } .
get the principal associated with the caller .
read the server element for a given server element .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
add a set of bdas to the deployment
initializes the bean . <p >
create a security realm .
creates the { @link io . <unk> . jboss . <unk> . <unk> } for the given { @link <unk> } and { @link <unk> } .
create { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> }
get the default resource adapter name .
try to acquire an object from the pool .
release the manifest .
returns a list of all the elements in the list .
read operations for operations .
/ * private void <unk> ( int [] args ) { return <unk> . <unk> () ; }
refines patterns by clustering .
collect the {
{ @inheritdoc }
/ * ( non - javadoc )
add a { @link <unk> } to the { @link <unk> } .
stop the web application .
starts the weld container .
initialize the extension .
get the bean archives
create a new { @link <unk> } for the given service type .
/ * ( non - javadoc )
adds the {
{ @inheritdoc }
/ * ( non - javadoc )
--- retry ---
/ * ( non - javadoc )
/ * ( non - javadoc )
get the classes declared in the given class .
get all declared classes .
/ * package private
returns the constructor of the specified class .
returns the field of the specified class or null if not found .
record an operation steps .
add an operation to the context .
check if a parameter is allowed for the given resource type .
method <unk> .
returns true if the attribute is marshallable .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
cancel the given value .
set the maximum number of concurrent requests .
/ * ( non - javadoc )
reads data from a byte buffer .
creates a new { @link <unk> } from the given { @link <unk> } .
copied from org . apache . hadoop . util . reflectionutil . <unk>
load a graph from a file .
/ * ( non - javadoc )
creates an instance of { @link <unk> } .
extract field name from a field definition .
returns true if the request can be executed without index .
counts the number of nodes in the graph .
find all classes in the given directory .
/ * ( non - javadoc )
gets the generic type argument .
returns the generic type of the given generic type .
returns true if the given method is a java . lang . array .
execute a function .
{ @inheritdoc }
<unk> method .
execute the command .
updates the record in the cache .
returns the record for the given identifier .
execute the drop index .
/ * ( non - javadoc )
reads an object from the given { @link bytebuffer } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
begin le <unk>
execute the command .
calculate the sharding strategy for the given query .
search for nodes with a sharded query .
pause all of the <code > { @link <unk> } < / code > with the given { @link <unk> } .
execute <unk> .
translates a projection object into a { @link <unk> } .
replies if the given type is distinct .
check if the <unk> is minimal
splits a {
returns a list of {
find order by t
{ @link <unk> } <unk>
splits the select clause into a list of <unk>
add group by expressions
extract sub - queries nodes .
checks if the passed {
handle the class index of the nodes that have changed .
<p > <unk> . < / p >
create the order .
returns true if the given {
finds the best index for the specified {
finds all elements of the given collection that match the given predicate .
returns true if the left - hand side of the left - hand side of the right - hand side of the left - hand side .
build index search descriptor .
/ * ( non - javadoc )
returns the common factor for a specific index .
change the type of <unk> .
re - create any object if the class has a public constructor that accepts a string as unique parameter .
serialize the class name + class name + object + name + class name + class name
execute a function .
checks if the user has access to the requested resource .
check that all required roles are defined
<p > <unk> . < / p >
initializes the jdcp database .
loads the local databases .
save memory removed from the collection .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
re - create or create a new version of the fragments .
called by cluster iterator .
initialization for file creation
copies all directories from the source path to the target .
returns a list of { @link pattern } s that are disjoint from this node .
<unk> <unk> .
/ * ( non - javadoc )
parse a date string .
/ * ( non - javadoc )
execute the command .
merges the given { @link <unk> } into a { @link <unk> } .
merges the given { @link bytebuffer } into a { @link <unk> } .
merges two { @link org . apache . common . io . <unk> } s .
{ @link java . io . <unk> ( int int ) }
split a box into a buffer .
split a long into a byte buffer .
execute the create property .
execute the alter class .
{ @inheritdoc }
{ @inheritdoc }
executes the put command .
execute the given bean .
returns the entry at the given index .
flushes the memory pool to disk .
deserializes this fst .
/ * ( non - javadoc )
/ * ( non - javadoc )
close the file .
close the file .
replaces the content of the given file with the new content .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * <unk>
process host .
connects to a remote server .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new database session .
creates a string representation of an index .
<p > initialize . < / p >
connect to a connection .
send a token to the remote server .
/ * ( non - javadoc )
/ * ( non - javadoc )
stops the server .
/ * ( non - javadoc )
disconnect the connection to the given channel .
/ * ( non - javadoc )
/ * ( non - javadoc )
closes the lock .
applies the update edge to the model .
unlinks all vertices in the graph .
applies the projection to the record class .
/ * ( non - javadoc )
/ * ( non - javadoc )
overrides the visitor to create and register a new entity
execute the schema .
update the metadata .
move the cursor to the previous record .
move the cursor to the previous record .
{ @inheritdoc }
<unk> method .
/ * ( non - javadoc )
execute the command .
returns the next character in the input stream .
execute the create property .
creates a database to a database .
evaluate a database to a database .
parse a value from a string .
{ @inheritdoc }
get the {
/ * returns the number of open files on the cluster
/ * ( non - javadoc )
gets the total memory size .
append a new { @link <unk> } for a given { @link <unk> } .
execute the command .
write a number of bytes to a byte array at the given offset .
<p > inserts the specified element at the specified position in this buffer . < / p >
returns the byte array representation of this node .
/ * ////////////////////////////////////// public api //////////////////////////////////////
fill the buffer with the given length .
execute the given { @link <unk> } .
this method is used to set the location of this step .
converts an object to a pojo .
<p > <unk> . < / p >
{ @inheritdoc }
execute the command .
/ * ( non - javadoc )
encodes a byte buffer into a string .
writes the item to the given channel .
method allow to specify a string that has been serialized to a remote server .
serialize a response .
returns <tt > true< / tt > if this array contains the specified number of elements .
returns <tt > true< / tt > if this array contains the specified element .
/ * ( non - javadoc )
converts a map of filters to a list of filters .
assigns aliases to the default aliases .
/ * ( non - javadoc )
execute the create algorithm .
updates the start of the node starting at the given node .
get the list of pages sorted from last search query
adds a single record to the list .
builds the select statement .
/ * ( non - javadoc )
returns the {
adds an index definition to this index .
returns a list of { @link <unk> } s that can be used to create the child { @link <unk> } .
{ @inheritdoc }
creates a info message .
{ @inheritdoc }
binds the document to a stream .
generate ddl .
execute the command .
splits the select clause into a <unk> object .
reads the object from the given source .
/ * ( non - javadoc )
returns the link to the { @link <unk> } .
replaces the value of the tag with the given value .
sets the string representation of the string .
pseudo - randomly advances and records the given probe value .
/ * ( non - javadoc )
execute the drop class .
/ * package
execute the command .
generate { @link <unk> } .
<p > <unk> . < / p >
check the price of a password .
creates a hash of the input string .
get the url of the algorithm supported by this class .
creates the index .
rebuilds the index .
add a new { @link <unk> } instance .
/ * ------------------------------------------------- [ vertices ] ---------------------------------------------------
{ @inheritdoc }
gets the total number of partitions of the partition .
/ * ( non - javadoc )
returns sql string representation for the given index .
serialize a { @link response } object to a { @link byte } stream .
get the features of the features .
remove edge from edge
execute the create class .
/ * private boolean <unk> ( <unk> > <unk> ) { if ( <unk> == null ) { if ( <unk> == null ) { if ( <unk> == null ) { <unk> = 0 ; } else return false ; }
{ @inheritdoc }
parse a timeout value .
/ * ( non - javadoc )
build ddl query .
<p > <unk> . < / p >
execute the command .
rebuild guaranteed delivery target streams
returns a copy of this set of results from this one .
execute the command .
returns the size of the entry .
/ * ( non - javadoc )
frees the specified extension .
start the usage hook .
registers all running metrics in memory .
converts an object into a singleton object .
check that the specified resource has to be added to the specified resource
remove the specified rule from the specified resource
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
converts logs to modifiable result .
/ * ( non - javadoc )
/ * ( non - javadoc )
binds the given parameters to the given arguments .
convert the index of the class to the document .
/ * internal methods
convert the item to the record .
convert a string to dialect s type . note that this method is designed for short types .
gets the date type .
convert a string value to a java type .
increments the popularity of each entry in the counter .
increments the value at the specified index .
resets the internal state of this <tt > <unk> / tt > .
returns the index of the first occurrence of the specified item in the given index .
applies a supplemental hash function to the specified value .
creates an index gfs .
checks if the index of the property index corresponds to the index of the property that corresponds to the property index .
returns the index of the type that corresponds to the type of this factory .
returns the { @link <unk> } instance for this { @link <unk> } .
execute the command .
adds the specified { @code key } to this { @code <unk> } .
creates an index .
binds the ttl of the document to the second time ttl - millis .
/ * ( non - javadoc )
add a field to the list of node ids .
sets the server owner .
/ * ( non - javadoc )
converts a { @link string } into a list of { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
remove forest listener .
aligns a database between two servers .
dispatches a response to the database .
waits for a request to be processed .
/ * ( non - javadoc )
create a new <unk> .
deletes the record .
save the record at the requested index .
/ * ( non - javadoc )
insert a new pointer into the history .
adds the given items to the merge list .
/ * ( non - javadoc )
/ * ( non - javadoc )
execute the create class .
closes all the databases .
notifies the storage for the given storage .
get the names of the function names .
returns a set of all collate headers .
returns a set of all the commands .
gets the size of the field size and type .
write response status .
start creation of a next request .
writes vcf records .
deletes a record .
this method is used to send an incoming response message to the database .
write part of a stream .
{ @inheritdoc }
move the cursor to the next record .
/ * ( non - javadoc )
/ * ( non - javadoc )
opens a new database connection .
create a new attribute with the given name .
sets the value of the element at the given index .
/ * ( non - javadoc )
/ * ( non - javadoc )
process the command .
visits all components of the given component type .
{ @link <unk> ( component predicate ) }
gets the <unk> for the given component .
gets the <unk> from the file in the file system
/ * ( non - javadoc )
/ * ( non - javadoc )
get the <unk> in the cache .
/ * ( non - javadoc )
gets the hits for the specified component .
gets the amount of pages per operation .
add union states to the given map .
closes the given <code > <unk> / code > .
{ @inheritdoc }
closes the given <code > doc< / code > .
push performance metrics to { @link <unk> } .
serialize the record .
increment the performance of a { @link <unk> } .
/ * ( non - javadoc )
stop the number of intervals in the cluster .
stops a page page from cache .
stop the backup timer .
stops the page scale in cache .
stop the timer .
adds a record to the other <unk> .
returns the number of sync ts in the current sliding time .
update the current snapshot if needed .
register the mbean server .
execute sql statement .
get the result of the sql statement .
execute a sql statement .
/ * ( non - javadoc )
starts a new consumer thread .
start the ping ping .
start the daemon .
initializes the <unk> .
serialize matrix name into <code > outputstream< / code > .
/ * <unk>
/ * package
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
save a list of connections to flickr .
create a proxy object from the given byte array .
get the link to the registry .
returns a { @link <unk> } object .
detaches the {
remove the link between the current vertex and the target graph .
returns the { @link <unk> } of this { @link <unk> } .
validates a property .
execute the given class .
converts a { @link <unk> } to a { @link <unk> } .
returns the { @link enum } value for the given { @link enum } type .
<p > wraps a <code > <unk> / code > to a <code > <unk> / code > . < / p >
{ @inheritdoc }
returns the set of { @link <unk> } s of the incoming { @link <unk> } .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
adds an attribute to the <unk> .
adds an attribute to the section .
construct a graph from an input stream .
input graph input graph .
counts the number of lines in the specified file .
read a {
load the signing graph from the given { @link inputstream } .
create a new { @link <unk> } .
/ * ( non - javadoc )
deserializes a { @link java . io . bytebuffer } into a { @link date } object .
/ * ( non - javadoc )
called by class iterator .
called by cluster iterator .
adds an index entry to the index .
merges the { @link set } of { @link set } s into the { @link <unk> } .
/ * ( non - javadoc )
configure server configuration .
/ * ( non - javadoc )
check if the subject is allowed to execute .
execute the query .
applies the update edge to the graph .
parses the return value .
create an { @link extractfromrow } instance that will extract the values of the given { @link <unk> } .
estimates the index of the given { @code currentpath } from the { @code <unk> } .
this method determines if the given { @link <unk> } can be inlined .
serializes the object into the buffer .
attempt to deserialize .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
opens a database connection to the database .
opens a database with the given password and password .
registers a database column with the default configuration .
creates a new remote database with the specified type .
creates a table if it does not exist .
/ * ( non - javadoc )
create a new { @link collection } of { @link <unk> } that created a new { @link alter } .
finds the best index of the given iterable .
create a new version of the given index .
{ @inheritdoc }
prepare the index converter .
update <unk> statistic
writes a page of pages to the page .
/ * ( non - javadoc )
finalize the page .
reads a page from the given file .
closes this output stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the provider is active .
/ * ( non - javadoc )
returns the value of { @link <unk> } .
replies the raw value of the given attribute .
returns a new map with the given list of column names .
assigns declarations to the given node .
returns a set of all keys in the cluster .
returns <code > true< / code > if the given <code > <unk> / code > is <code > null< / code > .
checks if the server contains the given server id .
refresh the list of servers in the cluster
returns { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk>
get a set of configured locations .
/ * ( non - javadoc )
returns all clusters owned by the given workspace .
updates the cluster owner .
/ * ( non - javadoc )
get a list of configured configured servers .
gets the value of the <unk> property .
converts a map of servers to a simple set of servers .
returns a map of all entries in the database .
returns the active <unk>
returns a boolean indicating whether all servers are sharded .
/ * ( non - javadoc )
gets the data center of a server .
returns a read - only { @link com . <unk> . <unk> . <unk> } field for the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the cluster configuration .
gets the data center configuration .
returns the <unk> for a quorum of <unk> .
clear the list of {
returns the number of classnames contained in the given strings .
returns the list of edge classnames associated with {
encode the class name of the class .
decode a class name .
configures repository with default settings .
execute index .
drop index .
/ * ( non - javadoc )
execute the given { @link <unk> } .
saves the given vertex to the database .
adds a link to the graph .
/ * ( non - javadoc )
create a link to the work graph .
return the number of vertices that can be used for the given class .
execute the create operator .
execute the given index .
returns an iterable of { @link vertex } s for the given label .
return the number of edges that can be saved .
returns an {
tries to create a new { @link <unk> } object .
reuse <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the { @link <unk> } count for the specified { @link <unk> } .
creates a new instance of { @link <unk> } .
creates a new instance of the vertex class with the specified class name .
creates a new { @link <unk> } for the given class name .
execute the drop class .
returns the { @link <unk> } count for the specified { @link <unk> } .
creates a new { @link <unk> } for the given class name .
/ * ( non - javadoc )
creates a { @link <unk> } for the specified class name .
returns the link to the given object .
drop the index .
internal method used to create a new { @link <unk> } .
/ * ( non - javadoc )
gets the keys of the indexed property .
remove all edges in the graph .
reloads the edge file .
deletes the record .
this method is called by the { @link <unk> } when a { @link <unk> } is received .
fires a { @link <unk> } event on all registered listeners .
this method seeks to be sure that the free space has been freed .
gets the name of the name .
returns true if the specified property matches this pattern .
execute the alter class .
starts the thread monitoring thread .
/ * ( non - javadoc )
/ * ( non - javadoc )
initialize the jmx server
unregister the jmx server
/ * ( non - javadoc )
gets the hits for the specified component .
get the list of cache metrics .
invokes the {
creates the counters for the specified component .
update the datasource counters
returns the position of the entry .
lidb2018 - 1 . 1
returns the value associated with the given property name .
create a new instance of the class .
saves an object to a document
saves an object to the database .
saves the given object to the database .
saves an object to the database .
saves an object to the database .
returns the version number of the object in object or object version of object .
close the <unk> .
create a new instance of the configured { @link <unk> } .
prints the command line arguments to the arguments .
gets the version of the document .
returns the version number of a pojo object .
convert a parameter to a map .
returns a set of all factories created by the class loader .
returns a set of all the factories created by the class loader .
creates an { @link <unk> } from the given parameters .
collects the buckets for a given response .
set the local result for the local node .
waits for a connection to be processed .
/ * ( non - javadoc )
answer a list of literal conflict responses .
returns the <em > best - <unk> / em > number of the given responses .
send a quorum for a quorum .
/ * ( non - javadoc )
execute a client .
sets the value of a property .
<p > <unk> . < / p >
gets whether or not the { @link <unk> ( target object <unk> ) } with the given { @link <unk> } .
/ * ( non - javadoc )
creates a new { @link <unk> } for the given database depth .
release authorization engine .
build the database .
/ * package
{ @inheritdoc }
adds a new value to the queue .
/ * ( non - javadoc )
attempt to convert an object to a socket .
returns the value at the specified position in this buffer .
checks to see if the index of the index of the given index is used by the index .
<p > <unk> . < / p >
move the position of the record to the given position .
get the character at the given position .
returns true if the given string starts with the given target string .
sets the fetch plan for the specified fetch plan .
deletes the record .
{ @inheritdoc }
{ @link <unk> ( int ) }
execute the command .
/ * package
/ * --- private methods ---
gets the default aliases for the given columns .
creates an instance of { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > set the <code > <unk> / code > for this <code > <unk> / code > . < / p >
acquires a database from the pool .
get the list of active connections .
acquires a database .
execute the command .
dumps the contents of the report to a log file .
create an instance of { @link <unk> } .
gets the maximum jvm heap memory available for the jvm .
gets the jvm heap memory available for the jvm .
calculates the common configuration problems .
creates a new { @link vertex } from the given { @link inputstream } .
get a { @link vertex } from the given { @link jsonnode } .
converts a json object to a { @link kamedge } .
creates a new { @link <unk> } from json data .
convert a { @link <unk> } to a { @link kamedge }
create a jsonobject from its xml element .
create an object node from an xml element
creates a json object from an existing json element .
create a new { @link jsonobject } from an { @link <unk> } element .
create a json object from an xml element
create a json object from an xml element
execute a job .
returns the cluster status .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
gets the comparator for the given class .
returns a map of the active cluster operations .
get the list of active data center map .
check if the transaction is dirty
generate ddl for an individual index .
/ * ------------------------------------------------------------
private static final string <unk> = new <unk> () ;
loads a file from a file .
creates and returns a new { @link <unk> } from the given { @link inputstream } .
create a new { @link authenticator } from the given { @link <unk> } .
{ @link <unk> ( inputstream string string ) }
decode a string .
encrypts / decrypts a message using the specified secret key .
decrypts the provided string .
restores the payload of preferences .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
save a keystore to a keystore
/ * ( non - javadoc )
deserializes the { @link <unk> } into a { @link uuid } .
/ * ( non - javadoc )
add a child to this node .
adds an object to the graph .
/ * ( non - javadoc )
converts a { @link bytebuffer } into a { @link bigdecimal } .
/ * ( non - javadoc )
encode a { @link bytebuffer } as a { @link bigdecimal } .
/ * ( non - javadoc )
convert the field value to a map .
copies a database to a remote server instance .
get the index of the index .
return true if the current item has the same content .
returns true if the current item has the same content .
returns the remote address of the remote connector .
returns the record for the operation .
read the current record .
imports a transaction .
high - accuracy complementary version of { @link <unk> ( double double double double ) } .
computes the simple heuristic costs of a simple heuristic heuristic .
computes the heuristic heuristic cost of the segment .
computes the sum of the dashed line cost .
computes the heuristic costs of the dashed line .
get the squared error of this { @link edge } to this one .
gets the default { @link <unk> } .
returns a {
/ * ( non - javadoc )
/ * ( non - javadoc )
stops the { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * <unk>
returns the next token in the current token .
returns the next token in the list .
generate parseexception .
--- factory method ---
returns the name of the inverse connection field of the given name .
replace all the links in the specified vertex .
retrieves edge from graph record .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
serialize the link .
adds a new edge to the graph represented by this { @link <unk> } .
adds an edge to the graph .
adds an outgoing edge to the link .
returns the number of edges in the graph .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a connection .
gets the connection fields .
delete the <unk> from the file .
execute the command .
get the console methods
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
installs a database from the database .
/ * ( non - javadoc )
creates a new role .
execute the create property .
execute the command .
wait for a random retry .
returns the argument at the given position .
returns the number of parameters present in the request .
connects to a remote server .
lists databases .
get the server info .
creates a database .
creates a database from a remote server .
checks if a database exists in the remote server .
drops a database .
creates a new database .
releases a database .
returns the cluster status .
execute the create index .
get instance of { @link hudson . model . graph . graph . <unk> } .
<p > <unk> . < / p >
directs the doclet to reset the doclet s state .
save the record .
deletes the record .
configures the server config for a specific json configuration .
returns the name of the authentication header .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
close the service .
inits the .
<unk> a stream .
<unk> a stream .
performs the initialization of a file .
<unk> a stream .
inits the .
<strong > [ icu ] < / strong > sets the start of the begin of a line .
this method serializes the specified composite object to the given { @link <unk> } object .
read the metadata .
/ * ( non - javadoc )
sets the current position of the page .
gets the { @link <unk> } .
{ @inheritdoc }
formats a single operation to the log .
/ * ( non - javadoc )
/ * ( non - javadoc )
exclusive called when the operation is complete .
calculates the maximum amount of memory for a given amount of memory .
{ @inheritdoc }
/ * ( non - javadoc )
writes the filestore state .
listen to bind .
<unk> > <unk>
{ @link <unk> }
shuts down the configuration manager .
attempts to add an item to the cache .
/ * ------------------------------------------------------------
acquires a { @link <unk> } from the { @link <unk> } .
executes runnable in the open thread .
returns the value associated with the given key .
clears the log .
returns true if the given key is close to the specified key .
check if there are any tasks that are currently running .
record a read - write node .
adds a { @link runnable } to the { @link <unk> } .
/ * package
record a read - write record from the read buffer .
returns the next power of two greater than or equal to zero .
/ * ( non - javadoc )
/ * ( non - javadoc )
attempts to evaluate the record .
re - create any object if the class has a public constructor that accepts a string as unique parameter .
serialize the class name + class name + object content
re - create any object if the class has a public constructor that accepts a string as unique parameter .
serialize the class name + class name + object + name + class name + object size of the string object .
----- private methods -----
<p > <unk> . < / p >
returns the { @link <unk> } for the given type .
process a request to be sent to the client .
/ * ( non - javadoc )
starts the shutdown queue .
register the {
returns the engine with the given name .
get the script engine if it exists .
get the engine with the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a new {
acquires a shared lock .
applies the shared {
--------------------- checkpointing --------------------------
returns { @code true } if { @code <unk> } is { @code false } .
try to acquire a shared lock on the thread pool .
--------------------- checkpointing --------------------------
try to acquire a lock on the thread pool .
authenticate the user
execute the { @link <unk> } .
returns the list of tokens in the graph .
sets the logback to an external file .
tries to acquire a read lock .
checks if the given array of labels is a directory array .
get the label from the incoming edges .
remove a record from csv .
/ * ( non - javadoc )
unlinks the vertex from the graph .
get the reference to the vertex in the graph .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
removes chessboard edges from graph .
unlinks all the edges in the graph .
converts the edge graph to a document
returns the class name for the given class .
execute the alter database .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
execute the command .
/ * ( non - javadoc )
/ * ( non - javadoc )
run the algorithm
/ * ( non - javadoc )
creates a new { @link <unk> } .
creates a new edge from the graph .
execute the command .
serialize the link .
parse the request .
<p > <unk> . < / p >
/ * ( non - javadoc )
read a byte array from the given bytebuffer .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a list of <unk> .
execute the create statement .
serialize the link .
returns the javax . persistence . transaction type .
execute the create property .
returns a new { @link sslengine } with the given { @code username } and { @code password } .
fill the record .
sets the record id .
deletes the record .
updates the record version .
get the record type .
initializes the database instance .
on message .
/ * ( non - javadoc )
--- exception stack trace ---
executes the index operator .
convert a record to the record .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
add entity .
creates a new user user .
/ * ( non - javadoc )
check if the user has access to the user .
gets the user identity .
computes the subset of a set of filters .
create a new <unk> .
this method is called when a field is detached from a document id . this method is called by the object obj of the object contained in a transaction id .
detaches all objects contained in this document from the given map .
<p > attaches the given object to the end of the document that has been contained in the given object . < / p >
returns a list of properties for a given header list .
execute the create index .
returns the { @link <unk> } for the specified { @link <unk> } .
reads and returns the next value in the list .
interprets the given
execute the command .
remove a record .
truncate the indexes of all of the specified databases .
called by class iterator .
<p > checks if the specified { @link class } is a subtype of { @link <unk> } . < / p >
adds the base class to the base class if one does not exist .
add a new cluster id to the cluster .
{ @inheritdoc }
serialize the link .
build a { @link sort } instance for the given { @link map } .
/ * ( non - javadoc )
reads the next byte from the input stream .
acquires a pointer to a single stream .
releases the specified {
attempts to check that the storage is valid .
removes all partitions of the partition .
unserializes an int from a byte array at a specific offset in big - endian order
find persistence unit .
parses the persistence unit .
/ * ( non - javadoc )
writes an unsigned variable value as an unsigned integer value .
read a signed varint from the given byte array .
reads a long from a byte array .
{ @inheritdoc }
installs a database from the database .
updates computers .
/ * ( non - javadoc )
dump the server status
returns the index of the first occurrence of the specified { @code object } in the { @code list } .
returns the index of the first occurrence of the specified array in the given array .
returns the index of the first occurrence of the specified value in the array .
parse the query string .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is used to sort the partial order by applying a sort of the object .
reports a set of gui networks .
parse the plan .
/ * ------------------------------------------------------------
{ @link <unk> }
applies the expansion of the function to the database .
returns the cluster status .
executes the execution of the execution of the configured { @link <unk> } .
create a link .
/ * ( non - javadoc )
read a series of records .
perform a lock on a record .
shuts down the reader and then calls { @link <unk> () } on it .
/ * ( non - javadoc )
save the record .
{ @link <unk> } .
validate the value for the given index .
/ * ( non - javadoc )
renames a cluster .
/ * ( non - javadoc )
execute the alter cluster .
check whether the log segment is in only <unk> state .
setter for the property .
execute the create class .
returns the number of nodes in the graph .
execute the alter database .
execute the command .
loads the index .
deletes the record .
{ @inheritdoc }
deletes the specified command
executes the query .
get the number of cluster elements in the specified cluster .
{ @inheritdoc }
check that the specified resource has the specified resource .
check if the specified resource is allowed to access to the specified resource
check that the specified resource is allowed to access to the specified resource
sets the status of the database .
sets the user to use for the given transaction .
register a change hook .
register a list of actions .
unregister a previously registered hook .
/ * ( non - javadoc )
set whether or not the database is enabled .
register the record with the current record .
load the record .
serialize the given record to the database .
/ * ( non - javadoc )
get the number of items to load .
{ @inheritdoc }
{ @inheritdoc }
saves the record without checking the current transaction .
saves the record to the database .
save the record .
get the number of records the index of the given class .
get the number of records for the specified class .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > checks to see if the matrix is orthogonal or isometric . < / p >
returns the relative position of the current chunk .
internal method to parse an optional word .
parser method for parsing required word .
/ * -------------------------------------------------------------------------------
<p > <unk> . < / p >
/ * -------------------------------------------------------------------------------
returns the path from the root node .
execute the create property .
creates the data file .
----- private methods -----
returns the index of the last occurrence of the specified position .
prints a token to a string .
/ * ( non - javadoc )
obtain a { @link <unk> } that can be used to obtain an access token from the current token .
copies the access token to a { @link java . util . map } .
register a bean with the given class .
parse the specified node .
converts a object to a string .
converts a string to a date object .
获取 { @link <unk> } <unk>
completes this task with the given parameters .
completes the task .
process the execution of a task .
taskmanager use only
resume an existing task .
/ * ( non - javadoc )
<p > <unk> . < / p >
withdraw the task with the specified task .
/ * ( non - javadoc )
assign a dicom task to an actor
creates a new task instance .
get the task model for the given task .
create a task for execution .
creates a list of tasks for a given task .
save a task to a task .
retrieves the inferred type of the task .
convert actors to a list of actors .
returns true if the given task is allowed for the specified task .
loads a resource from the classpath .
copies the content of the given { @link inputstream } to the given { @link outputstream } .
copy bytes from the input stream to the output stream .
gets the plugin configuration .
creates a new { @link <unk> } instance .
<unk> > <unk>
query the {
parse the json representation of the <code > <unk> / code > .
externalizes a { @link <unk> } to this { @link datasource } .
get data source .
returns a connection to the database .
returns the first non - null value in the collection .
returns the index of the first column in the given result set .
returns a result set value from the resultset .
returns the value of the first column in the resultset .
gets the database product type .
{ @link <unk> } <unk>
<unk> <br > <unk>
/ * package
/ * ( non - javadoc )
factory method for creating a new { @link <unk> } .
starts a new instance by its id .
starts an instance by id .
same as { @link <unk> ( string object ... ) } but allows you to create an instance of the { @link symbol . <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
executes the group start .
get the tasks assigned to a task .
executes a task context .
executes the given task for execution .
creates a new { @link task } for the given { @link <unk> } .
execute a task .
handle the execution of a new execution .
execute a script .
run a script .
<unk> <p > <unk> / p >
sets the order of the orders in order to sort the order in order by order .
returns a list of elements of the given node .
<p > <unk> . < / p >
replaces all invalid characters in the xml content .
{ @link <unk> ( string ) }
checks that the given string is not empty .
returns a string representation of this task .
transmits the difftask .
collect type names from a {
returns a string representation of the worker names .
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > remove an order by
returns the default engine .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the default value for the given class .
<p > <unk> . < / p >
get a single attribute by its name .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the task callback .
<p > <unk> . < / p >
return true if count is less than or equal to {
tries to load a class from the current thread s context classloader .
<p > newinstance . < / p >
creates a new instance of the given class .
returns a list of { @link <unk> } s that implements the given { @link <unk> } .
/ * ( non - javadoc )
converts a list of edbobjects to a list of model objects .
returns the start of the node .
returns the node with the given name .
returns the { @link <unk> } for the given { @code node } .
looks up an instance of the given class .
transforms a list of objects into a list of beans .
looks up the setters with the given name and returns the result .
add a job .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * package private
get the value of the field with the given name .
<unk> 无视private / protected修饰符 不经过setter函数 .
<p > invoke . < / p >
checks if a method exists in the given class .
schedule a job .
start datasource .
adds the model to the executor .
called by {
performs the execution of the process .
helper method to parse a user - defined decision .
/ * ( non - javadoc )
transform a row .
initializes the mapping table for the specified mapped property .
convert a string to an underline style string .
returns an array of { @link <unk> } s for the given class .
/ * ( non - javadoc )
get weboperation by id
get weboperation by name
{ @inheritdoc }
sets the { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } and { @link <unk> } .
<p > <unk> . < / p >
gets the document from the history .
returns a list of <unk> that match the given filter .
get a list of pages from page
/ * ( non - javadoc )
inserts the given entity into the cache .
parses a byte array into a { @link <unk> } .
parse appenders and return appender .
构建 from <unk>
returns the model models for the given target entity .
creates a new { @link <unk> } for the given topology .
/ * ( non - javadoc )
this method is called by the { @link <unk> ( context ) } method .
fires packet interceptors .
returns true if this node can be rejected .
/ * ( non - javadoc )
{ @inheritdoc }
create a new connection provider for this connection .
returns a proxy instance for the given class .
/ * ( non - javadoc )
returns true if the given string matches the given string .
get the next line from the process .
gets cached metadata object .
add an order .
runs a {
saves the order of the { @link order } in the { @link order } s .
runs a { @link <unk> } for the given { @link <unk> } .
runs a breadth - first - search starting at the given id .
complete the order of the history
terminates the task .
resume the specified order .
collect the { @link <unk> } s from the { @link <unk> } .
build a map from a string .
build the map of simple values for the given entity .
<p > <unk> . < / p >
{ @inheritdoc }
update the statistics for the given process .
/ * ( non - javadoc )
converts the given json string to an object of the specified type .
returns the string representation of the given enum .
gets the system property for a system property .
loads the configuration of the current thread .
/ * ------------------------------------------------------------
reads until one line is encountered .
/ * ( non - javadoc )
reads out a line .
/ * ( non - javadoc )
skips over the specified number of bytes from the input stream .
skips <code > n< / code > bytes of bytes <code > inputstream< / code > .
ensures that the given { @code range } is { @code to } and { @code toindex } .
ensures that the given offset is equal to the given offset .
returns the last valid ranges of the given range .
returns the index of the first occurrence of the specified <code > from< / code > in the specified <code > <unk> / code > .
returns the index of the first occurrence of the specified <code > <unk> / code > in <code > <unk> / code > .
merges the specified { @code indexes } into the given { @code indexes } .
swaps the n - th elements of the q and swaps them in the provided q
creates a new { @link <unk> } using the specified { @link comparator } .
subroutine for {
compute the hash of a 32 - bit power of h
applies a hash function to the power of a long value .
/ * ------------------------------------------------------------
transfers bytes from {
opens the file with the given size .
/ * ( non - javadoc )
sets the position of the file at the given position .
{ @inheritdoc }
retry end metrics reporting the metrics to reporting .
cancels all inflight transfers .
create a { @link reader } that wraps a { @link <unk> } .
todo : explain
this method finds the {
infers all the { @link <unk> } s that are part of a { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the segment at the given index .
removes all backups from the given directory .
todo : <unk>
todo : <unk> <unk> <unk> <unk>
{ @link <unk> ( <unk> map ) }
this method removes all imported schemas from the given schema .
todo : implement <unk>
this method is the same as {
process cycle failures .
note : this method must be called from within the {
note : this method always returns {
loads the tags from the binary stream .
prettyprint the specified object to the specified object .
returns a { @link java . util . <unk> } for the specified { @link <unk> } .
returns the primary key for the given token .
/ * ( non - javadoc )
returns the significant content of this segment .
calculates bit of null hypothesis
creates a {
gets the segment for the given segment .
this method is called when a {
close the <unk>
the main method .
loads a set of { @link <unk> } s from the { @link <unk> } .
returns the { @link <unk> } represented by this { @link <unk> } .
returns the size of this bit set .
decrypt a snapshot
this method loads a delta from the given input stream .
replies the value of the field s value .
sets the segment at the given index .
copies all of the elements from the source buffer into the specified buffer .
sets the data at the given index .
determines if this range equals the specified range of bytes .
copies the contents of the given region into the given byte array .
copies data from the given byte array into the given byte array .
/ * ------------------------------------------------------------
write a portion of the segment .
ensures that the { @code segment } is at least { @code <unk> } .
get the index of the named field .
creates a new { @link <unk> } for the given { @link <unk> } .
this method is for testing purposes only .
create a {
creates a new file for the given directory .
this method generates a {
returns true if the key matches the given key .
returns an array of all the expressions in this set .
this method registers the given { @link pair } of { @link class } instances .
this method registers all schemas in the specified schema .
returns a {
/ * ( non - javadoc )
publish a listener .
perform a <unk> .
<p > add a type listener for the specified type . < / p >
create a field path for a given primary key .
returns a {
returns a {
returns a {
puts an object into the hash table .
todo : <unk>
find the next value in the specified property .
return the audiofileformat from the { @link <unk> } .
<p > <unk> . < / p >
topological method documentation for { @link <unk> ( string ) } .
----- public methods -----
get the percentage of the change .
<p > <unk> . < / p >
todo : rename to <unk>
adds a field to the specified field .
adds a field to the collection of subtypes .
todo : <unk>
create a list of { @link <unk> } s from a header string .
adds a listener to the end of the list .
returns a list of all enum classes in the specified sequence .
this method is used to initialize the {
sets the segment at the given index .
returns the bit at the specified index .
finds the set of { @link <unk> } s that match the given field name .
gets the set of { @link <unk> } s that match the specified field name .
/ * ( non - javadoc )
sets the list of paths to use .
run the <unk>
/ * ( non - javadoc )
main method .
/ * ( non - javadoc )
sets the { @link <unk> } of this { @link <unk> } .
executes the given {
decodes protobuf message .
returns an instance of this class
summarise a { @link <unk> } from the given { @link <unk> } .
returns a {
get a { @link <unk> } consisting of the given { @link object } as a { @link <unk> } .
static factory method for { @link <unk> ( long ) }
static factory method for {
create a {
returns the latest version of the specified {
/ * ( non - javadoc )
creates a new {
converts the specified { @link <unk> } to a { @link <unk> } .
returns the list of all the blocks in the specified subroutine .
writes the given header to the specified stream .
returns the value of the required field that has the specified field name .
gets the type of { @link <unk> } .
sets the primary keys for the given primary key .
perform an <unk>
write data to the output stream .
creates a { @link bytebuffer } for the given { @link <unk> } .
writes an int to the buffer .
writes a long value to the buffer .
returns a sequential ordered { @code intstreamex } produced by iterative application of a function to an initial element conditioned on satisfying the supplied predicate .
add a cell to the specified cell .
sort the elements in reverse order .
calculate the hash of a key / value pair .
parse a value for a primitive type .
adds a node to the node .
returns the elements of the given node .
resizes the input byte array to a new node .
tokenizes the given file and returns the result as a { @link <unk> } .
get the ordinal value of the given serialized representation .
calculates the ordinal value of the given subspace .
find the unreachable { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
compacts the <unk> according to the { @link <unk> } .
/ * ( non - javadoc )
increases the capacity of this <tt > arraylist< / tt > instance if necessary .
/ * ( non - javadoc )
figure out how much going to be inserted into our image
return an empty atomic array
returns true if this value is a match .
/ * ( non - javadoc )
find the first match of the given key .
create a { @link reader } with given { @link <unk> } .
generates a swap state for the read state .
gets a list of all <code > <unk> / code > in the specified reader .
static method to parse a schema .
returns the default indexer for the given field .
calculates the hash table for the given number of elements .
todo : <unk>
completes the compaction at {
<p > <unk> . < / p >
perform a get operation on the specified output stream .
将 schema <unk>
returns a timestamp version of the version of this version .
build a wavefront line from a schema with primary key .
removes the prefix from the given { @code name } .
converts a string to a member name .
utility method to parse a hash index .
todo : <unk>
returns a random int between min min and max .
this method is thread - safe .
<p > filter . < / p >
executes the diff .
this method updates the data version of the specified argument .
this method follows :
/ * ( non - javadoc )
serialize a long value into the buffer .
encode a long value in variable length format .
writes a single int to the byte array using a variable - length encoding variable .
writes a single int in a byte array to the byte array .
writes a byte array to a variable - length byte array .
read a number from a byte array .
unmarshall the size of the tag .
reads a long encoded tag .
writes a string to the byte array at the given position .
reads a tag from the stream .
returns 0 - 1 if value is not a power of 2 .
counts the number of bytes in the given byte array .
called when the activity is first created .
add a view to the view .
creates the loading layout . <p >
invoke the next {
this method is called when a new layout is reset .
refresh the scroll view size
sets the visibility of the header .
/ * ( non - javadoc )
pull the event .
called when the activity is first created .
called when the activity is first created .
called when the activity is first created .
called when the activity is first created .
called when the activity is first created .
called when the activity is first created .
call { @link <unk> ( view int ) } to handle scroll events .
listen to events on the view by checking the refresh value .
called when the activity is first created .
sets the empty view .
creates a new builder for the given predicate .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the configuration value for the given key .
returns the value of this property as a string .
coerces a value to an integer .
returns the value of the given name as a double .
set the value of a property .
{ @inheritdoc }
create a new parameter builder for the given value .
create a new instance of { @link rule } .
returns a new rule builder for the given { @code <unk> } .
creates an instance of { @code <unk> } .
creates a new rule builder for the given class .
adds a { @link <unk> } to the rule .
adds the given result type to the builder .
/ * ( non - javadoc )
shrinks a rule to a rule .
get a {
shrinks the rule to the specified size .
shrinks a rule to the rule .
this method determines if the given { @code <unk> } is annotated with the given { @code <unk> } .
creates a new instance of the given class .
/ * ( non - javadoc )
/ * documented <unk>
methode d ajout de la restriction ge
adds a new rule to the tail rule .
<p > <unk> . < / p >
<p > <unk> . < / p >
returns a list of methods annotated with a given annotation .
returns a list of methods annotated with given annotation .
returns a list of { @link annotation } s for the given { @link class } .
returns a new instance of the given { @code <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the reference to the service .
update the status of the rule .
returns the normalized status of the rule .
{ @link <unk> ( org . <unk> . core . rule . <unk> ) }
synchronized { @code consumer }
add a rule to the book .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
<p > <unk> . < / p >
sets the {
updates the rule with the given { @code action } and { @code action } .
construct a new <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
one of ways of creating builder . this might be the only way ( considering all _functional_ builders ) that might be utilize to specify generic params only once .
add a rule to the <unk> .
returns an instance of { @code <unk> } for the given { @code <unk> } .
/ * package private
returns an array containing all of the elements in the given arrays .
adds all elements of the given arrays to the given array .
parse a empty line dataset .
skip until a breakpoint is found .
creates a {
add a service to the list of services .
convert a list of service objects to an array of service objects .
/ * ( non - javadoc )
extract ports from an image .
build a list of ports from the configuration .
extract port values from the config .
normalize a port mapping .
adds the given port to the set of available service ports .
vote a list of service ports .
get the default service name for the given service .
add the missing service options to the service .
<p > <unk> . < / p >
/ * ------------------------------------------------------------
returns true if the given service is <unk> .
converts the given { @code <unk> } to a { @code <unk> } .
parse a service environment variable and return a list of <unk> .
<p > <unk> . < / p >
----- private methods -----
过滤<br > <unk>
adds the value to the given map if the value is not null .
ensures that the template specs can be parsed .
<p > <unk> . < / p >
merges the image with the given containers .
wait until the pipeline is ready .
get the image name suffix from the docker config file .
creates a new { @link <unk> } for the specified kubernetes resource .
validates a metric name .
returns the kind of {
returns the version of the resource with the given metadata .
counts the number of occurrences of the given int .
/ * ( non - javadoc )
check if the pod is ready .
get the context property from the context .
check if a kubernetes resource exists .
replaces all the properties in the given map with the given properties .
adds a shutdown hook to the process .
forward the given object to the list of available pods .
create a list of urls that can be used as a class path .
creates a new { @link plugin } for the given artifact id and artifact id .
get the project version from the given maven project .
finds the plugin configuration for the given plugin and artifact id .
create a nested {
method to get the version of the artifact
/ * ( non - javadoc )
read a resource from a resource file .
converts a file url to a file .
reads and returns a { @link map } representation of the given { @link file } .
get the metadata for the given fragment .
convert a map of environment variable names to a list of environment variables .
<unk> <p > <unk> / p >
creates a new { @link <unk> } .
create a { @link list } of { @link map } s from the given { @link map } .
updates the containers in the pod .
/ * ( non - javadoc )
converts a map of key / value pairs to a string .
returns a { @link map } of string keys to { @link map } .
parses a query string and adds it to the map .
returns the url of the specified url .
gets the registryauth for the server .
{ @inheritdoc }
returns a { @link map } of values for the given path .
download the content of the given { @link path } to the given { @link <unk> } .
returns a free port of the given number of attempts .
compare two strings .
load a profile from a jar file .
sets the { @link <unk> } .
creates a list of profiles from the specified classloader .
returns a list of profiles from the classpath .
/ * ( non - javadoc )
recursive method to recursively find the profile yaml file .
adds a list of filenames to the list of strings .
convert a { @link inputstream } to a { @link map } .
finds all main classes zip files .
executes git merge .
returns the image pull policy .
/ * ( non - javadoc )
returns the number of replica nodes in the classpath .
returns the first child element of the given element or <code > null< / code > if the element doesn t exist .
returns the text content of a node .
/ * ( non - javadoc )
{ @link <unk> } { @link <unk> }
/ * ( non - javadoc )
wait for a template to be deleted .
apply a service account to the service account .
removes a tag from the list of tags .
{ @link <unk> }
read project properties .
implementation of <unk> rest api .
gets the labels and labels of the metadata .
this method is called by the {
add a { @link <unk> } to the rule .
ensure that the spring - boot - boot - resources are present in the spring boot application .
deletes a kubernetes resource .
enriched <unk> .
parse the given { @link map } to a { @link map } .
{ @inheritdoc }
/ * [ deutsch ] <p > erzeugt eine neue verschiebung auf die <unk> . < / p >
gets the duration of the given duration .
package private for testing purposes .
/ * ( non - javadoc )
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
determine whether or not the rule should be <unk> .
find the root directory for the project .
returns the parent directory for the project .
{ @inheritdoc }
create a map from the given input stream .
initializes the latke .
initializes a new { @link <unk> } .
extract the generator configuration .
return a new <unk> object .
obtain a {
sets the icon ref .
returns the default version of the specified { @link <unk> } .
populates a list of files in the given directory .
/ * ( non - javadoc )
get the spring boot application properties
loads properties from a resource .
get the spring - boot - boot - boot - boot - boot - boot - boot - boot - boot - boot - boot - client .
creates a list of service objects from a comma - separated list of service descriptor strings .
enrich a {
set the list of registered {
get the { @link properties } for the given { @link <unk> } .
get the raw value of the {
get the value of a configuration property . if the system property is not found the default value will be returned .
create a new {
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the bundle symbolic name .
extract the watchers from the <unk> .
update the api version .
resolves the given image to resolve images .
/ * ( non - javadoc )
analyze two objects .
returns a map of read methods from a bean .
adds the given parameters to the given list .
gets the value associated with the given key .
gets the value of the metadata property .
/ * ( non - javadoc )
prepare the list of named classes .
merges the { @link <unk> } into a { @link <unk> } .
create a list of integers from a list of strings .
load the dictionaries .
initializes latke .
returns the secure image name .
returns the registry path .
gets the absolute path from a url .
checks if the configuration is online or not .
create a kubernetes resource .
finds all the exceptions that are thrown by the given throwable .
returns the value of the specified property as a boolean .
creates the default namespace context .
creates a new { @link <unk> } instance .
parses and returns the transport node .
scans the classpath for the specified plugins .
/ * <unk>
adds a single field mapping to the given field .
marshals the field into the given map .
create a { @link <unk> } from json .
gets client metadata id .
create a client metadata id .
create a { @link <unk> } from a { @link string } .
creates a { @link <unk> } from a json string .
fetch capabilities from a session .
starts a new <unk>
tokenize the given { @link <unk> } with the given { @link <unk> } .
creates a { @link <unk> } from a { @link string } .
get the document from the json object .
intent that can be used to open an intent to the google play api .
{ @link <unk> ( <unk> boolean ) }
creates a { @link <unk> } from a json object .
get rewards for a specific <unk>
convert a { @link <unk> } to a { @link <unk> } .
/ * ( non - javadoc )
set the presence of the specified data .
creates a new hellosign client account .
creates a { @link <unk> } from a json string .
gets the { @link <unk> } from a json string .
notifies the listener that the device fragment has been hidden .
collect the device data .
collects the parameters of a { @link <unk> } .
creates a downloader for downloader .
returns true if the certificate is valid .
generates a { @link reporter } for the given { @link <unk> } .
deletes a paymentmethod method from the fragment .
returns a {
handle response result .
gets the { @link <unk> } for the given <unk> providerid .
perform a verification on a card .
perform the verification code verification .
perform the browser verification .
creates a { @link <unk> } from a json object .
tokenize the given { @link <unk> } with the given { @link <unk> } .
returns the value mapped by {
parses a json - encoded { @link paymentmethod } object .
create a { @link <unk> } from a json string .
parses a paymentmethod object .
get the network endpoint configuration .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the <unk> config .
get the browser agreement agreement .
creates a { @link jsonobject } from a json string .
main method .
creates a { @link jsonobject } from a json object .
tokenize a {
sends a request to the server .
posts data to the main thread .
posts data to stackify
checkout the json from json .
start a payment .
approve a payment
returns the { @code authorization } authorization token from the given string .
gets the error for the given field .
create a <unk> from a json string .
converts a json object to a <unk> .
creates a new instance of the { @link <unk> } .
this method is called when a { @link <unk> } has been registered .
removes a { @link <unk> } from the list of { @link <unk> } s .
get google api client .
create a { @link <unk> } from a json object .
request a {
create the payment resource
<p > <unk> . < / p >
parses a { @link <unk> } .
create a <unk> from a json string .
converts a { @link jsonobject } to a { @link <unk> } .
transforms a list of strings to a dictionary .
remove a word from the dictionary .
convert the input tokens to a list of tokens .
returns a list of tokens from the tokenized list of tokens .
extract phrases from <unk> input text .
converts a list of strings into a json string .
returns a copy of the given set .
reads the contents of a { @link readablebytechannel } as a { @link byte } .
generate a <unk> based on q .
return the q matrix .
return a 32 - bit integer from buf .
returns a big - endian buffer that can be used to read bytes from the buffer .
set the length of the tag .
create a new byte buffer from the given <unk> .
reverses the video tag information .
/ * ( non - javadoc )
this method is used to encrypt a list of { @link java . io . bytebuffer } s into a { @link bytebuffer } .
this method is used to encrypt a list of <unk> into a list of lists .
encode bz byte [ ] .
encode a byte buffer .
creates a copy of the given list of buffers .
serialize a list of buffers to a bytebuffer .
compute a block buffer
compute a compressed version of the <unk> buffer
compute a 32 - bit integer buffer
<unk> : <unk>
<unk> : <unk>
compute a buffered block from a block of a compressed raster
compute a buffered block from a block of a compressed raster
<unk> pcm <unk>
get the matrix stride for the specified block
/ * <unk>
<unk> pcm <unk>
<unk> pcm <unk>
/ * <unk>
draws a submatrix in the block
converts a block of compressed data into a { @link <unk> } buffer .
block the signature of a block belonging to the specified value .
draws a submatrix in the block
recursive helper for <unk>
compute the compressed block buffer
compute the compressed data buffer
<unk> - <unk>
generates the channel map for a channel .
returns the { @code profile } corresponding to the given { @code integer } .
updates the weight of each element in the model .
converts a buffered image into an planar image .
reads a dictionary from the dictionary
/ * <unk>
compute the frequency table for a matrix .
/ * ( non - javadoc )
apply filter to <unk>
generate a <unk> table based on the cardinality
reads the next marker from the given buffer .
reads the next page of bytes from the given {
inits the .
returns the maximum number of available regions .
/ * draws a solid message .
split a range of samples into a new array .
/ * ( non - javadoc )
run a copy of a file .
dimensiona il <unk> <unk> <unk> <unk>
build the <unk> variable based on a ch value .
decode the window
gets the edit duration of a <unk> .
converts a { @link <unk> } to a { @link <unk> } .
converts a { @link <unk> } to a { @link <unk> } .
converts a collection of <unk> to a <unk> .
convert a byte array to a long .
<p > creates a frame that has been added to the <unk> . < / p >
converts a <unk> to a human - readable string .
creates a string representation of a movie graph .
returns the marker descriptions which are part of the given <code > <unk> / code > .
converts a <unk> to a stack frame .
formats a particular value into a string .
returns the number of unique values in the two specified values .
decode image data into a byte array .
returns true if the input color matches this .
sets the size of the image to the specified size .
get video frame with specified metadata .
returns the next frame in the stream .
reads a frame from a file .
this method returns a { @link picture } from the given { @link <unk> } .
reads a frame from a file .
get a { @link picture } from a { @link <unk> } .
get a native frame at a given position
returns the native frame at the given position in the given <unk> .
utility method to construct a <unk> from the given <unk> and <unk> .
returns the native frame at the given position in the given <unk> .
creates a new { @link <unk> } .
writes a window to the bean
/ * ( non - javadoc )
reads an int from the network .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the original buffer as a clone of this buffer .
/ * ______________________________________________________________________
/ * <unk> kernel
creates a { @link <unk> } opcode .
sets the {
returns the number of bits in big - endian order .
/ * ( non - javadoc )
find the levenshtein order of bits .
creates a <unk> object based on the header information .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a {
/ * <unk>
******************************************************************** / * <unk> - 1
creates a copy of the input image .
creates a pair of <unk> objects for a movie .
this method is used to dump the bytes from the input stream to the output buffer .
returns the big - endian representation of this big - endian .
/ * <unk>
/ * {
encode a native frame .
encode a long value into a byte array .
returns the varint from the given byte array .
get the length of v in bytes .
symmetric householder reduction to tridiagonal form .
copy data from a byte array into another .
adds a new vector adds indexes to the given destination .
/ * ( non - javadoc )
computes the jacobian given .
get the internal localdatetime of a given bdd .
get a single channel .
private method for generating a <unk> .
this method computes the number of bytes for a given <unk> .
deletes the specified instance of <unk> .
/ * ------------------------------------------------- [ mode ] ---------------------------------------------------
/ * <unk>
/ * for <unk>
special special encoding for <unk> noise .
/ * <unk>
add a rtp packet .
reads a number of bytes from a { @link bytebuffer } .
reads a file .
<p > reads the value of the <code > <unk> / code > name of a <unk> name . < / p >
/ * perform the mutation operation
<unk> to <unk>
/ * ------------------------------------------------------------
reads a marker from a buffer .
get a { @link <unk> } .
shift coefficients .
reads the discrete fourier transform ( dft ) of a vector into a long array .
reads a channel from the network
resize the matrix
/ * -------- initializing routines
returns the 16 16 bit in 16 - 16 encoding .
returns true if the given value is within the bounds of the clip .
find the delta in the given index .
<p > performs the following operation : <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk>
this function is used to check that the internal data structures are valid .
/ * private
{ @inheritdoc }
returns the frequency frequency of an integer .
this method is used to perform a prediction .
creates a copy of the given gpathresult . <p >
called when the <code > <unk> / code > has already been specified in the given <code > <unk> / code > .
/ * private void <unk> ( int [] int [] arr ) { arr [ i ] = dst [ i ] = block [ i ] ;
/ * performs the following steps :
computes the inverse of an array .
create a <unk> copy of the given codec .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
returns the value of the specified portion of the given integer .
/ * documented rewinds
this method is used to decode a new document .
schedules a flush task .
parses a single frame from a file .
reads a frame from the given { @link <unk> } .
creates a bitmap with metadata from the encoded image .
get a bitmap from the web .
get the bitmap with metadata from the given { @link <unk> } .
读取整个excel文件 <unk> <unk> { @link <unk> } <unk> { @link <unk> ( string int ) }
get a frame from the given { @link <unk> } .
returns a frame from the given <unk> .
create a frame from a given <unk> .
renders a { @link <unk> } to the given { @link <unk> } .
creates a { @link bitmap } from the given { @link <unk> } .
factory method to create a { @link <unk> } from the given { @link <unk> } .
******************** methods *******************************************
/ * [ <unk> <unk> ]
split a picture to a picture .
computes the cosine of a window .
calculates the <unk> of a given <unk> .
/ * --------------------------------------------------------------------------
returns the index of the marker at the specified index .
interpolate a gain interpolation .
converts a byte array into an array of bytes .
transcodes an int array to a byte array .
creates a float from the specified stream .
creates a <unk> container from the given { @link <unk> } .
<unk> samples missing
encode a single audio frame into a four - byte buffer .
return the size of each element in the map .
find the active bits in the group .
stackblur by java . util . bitmap . <unk>
look at all the <unk> in the given <unk> .
read a row of data from a bytebuffer .
gets an array of integers from the given bytebuffer .
reads a frame from the given file .
creates a buffered frame from the given { @link <unk> } .
gets the image from the native frame .
reads a checksum from a file .
returns a buffered frame based on the given start frame number .
returns a buffered frame based on the given <unk> and <unk> .
returns the frame of the given <unk> .
returns a frame that is relatively to a given <unk> .
returns a frame that is ion followed by two given components .
returns a new { @link <unk> } with the given { @link <unk> } .
solve a least - squares c operator .
encodes the bounds of a floating point form .
returns a list of nodes that can be read from the given reader .
<p > reads the scaling list matrix . < / p >
encode a single frame into a single frame .
encode a {
/ * <unk>
get the metadata for a given property .
gets the metadata for a given property .
sets the value of the databaseowner .
/ * ( non - javadoc )
gets the value of the property with the specified name .
<p > sets the value of the <code > <unk> / code > property of the given <code > <unk> / code > . < / p >
{ @inheritdoc }
{ @inheritdoc }
returns a {
returns the number of pinned blocks .
dumps the given { @link <unk> } to the { @link <unk> } .
this method is used to add a reference to a spin .
removes all internal data structures from the queue .
start a daemon thread .
/ * ( non - javadoc )
polls the specified size and returns the result .
add a picture to a picture .
load the native library file .
unpacks the specified library .
cleans up temporary files .
return the default layout for the given number of channels .
returns the index of the first channel in the channel .
get a { @link <unk> } based on the given { @link <unk> } .
returns the { @link <unk> } for the given { @link <unk> } .
returns a descriptor descriptor for an installed format descriptor .
creates a new <unk> object based on the provided format
compute the minimum cache size needed for the specified size .
make a new media packet .
create a new token packet from the given buffer .
create a new { @link packet } from a { @link packet } .
make a packet packet from the specified size .
get the data packet .
splits this <unk> into a buffer .
returns the {
if not already created a new <code > <unk> / code > element will be returned .
/ * ------------------------------------------------------------
reads a byte array from the file .
seeks to the given url .
/ * ( non - javadoc )
check if a given url is streamed to a streamed object .
gets the { @link descriptor } descriptor for the specified component .
returns the version of the bus interface .
returns the default time base .
returns a {
/ * ( non - javadoc )
make a {
/ * ( non - javadoc )
implementation of open rest api .
/ * ( non - javadoc )
/ * ( non - javadoc )
read the given packet .
/ * ( non - javadoc )
/ * ( non - javadoc )
this is a shortcut for {
/ * [ deutsch ] ----------------------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
return a copy of this copy of this rational .
compares this <code > rational . compareto ( <unk> ) < / tt > instance by comparing the values of this <code > <unk> / code > and <code > <unk> / code > .
add a new value to this matrix .
computes the reduced value of this function .
computes a bernoulli sum of the specified number of steps .
multiply this rational by the given argument .
creates a binomial version of the specified <code > <unk> / code > .
power of this rational number to the power of this rational number .
binomial ( s )
binomial ( n - m )
binomial ( s )
add an argument to this matrix .
binomial ( n choose m ) .
/ * ( non - javadoc )
creates a new instance of the { @link <unk> } represented by this { @link <unk> } .
creates a rational number of the specified number of bytes .
creates a rational number of the specified double .
creates a rational number of the specified rational numbers .
creates a rational number of the specified number of exponent .
performs a pre - multiplication on the specified value .
rescale the given value using the specified numerator and longitude .
performs a pre - multiplication on the specified { @link long } value with the specified { @link <unk> } and { @link <unk> } .
play a video frame .
load a texture from a stream .
creates a collection of <unk> objects .
creates a converter for the given input stream .
create a converter for the given type .
create a new encoder with specified codec .
<unk> > <unk>
open options .
encodes the { @link <unk> } into a { @link <unk> } .
encodes the media packet .
encodes the given { @link media } into a { @link outputstream } .
converts a decoded picture into a { @link bufferedimage } .
decode a buffered image file to an image file .
make a { @link codec } .
/ * ( non - javadoc )
parses the given { @link org . apache . commons . io . <unk> } and prints it to the given { @link org . apache . commons . config . <unk> } .
/ * ( non - javadoc )
configure the given file .
get the passed base date as { @link <unk> } .
<p > <unk> . < / p >
creates a { @link contenttype } .
creates a buffered converter for the given image .
<p > creates a new converter with the specified <code > <unk> / code > and <code > <unk> / code > . < / p >
append an image to the converter .
creates a new instance of { @link <unk> } .
converts a buffered image into a bufferedimage .
$antlr end <unk>
/ * ( non - javadoc )
opens the file for reading .
reads the contents of a list of bytes into a byte buffer .
writes the given { @link readablebytechannel } to the given { @link bytebuf } .
<p > creates a <code > <unk> / code > . < / p >
gets the unique html code for the given object .
<p > <unk> . < / p >
converts the input data input to a string .
map from url to a string
map the input data to a string .
sends a mapping to the given url .
<unk> > <unk>
creates a new instance of { @link <unk> } .
maps a { @link readablebytechannel } to a { @link string } .
returns a string representation of the specified { @link readablebytechannel } .
maps a { @link channel } to a { @link string } .
do a mapping from a url to a string
returns a string representation of the given channel .
returns a string representation of the specified { @link channel } .
read properties from a file .
<unk> download .
<p > <unk> . < / p >
<p > download . < / p >
<unk> download .
<unk> a { @link io . <unk> . channels . <unk> }
<unk> download .
creates a new { @code uri } from the given { @code url } .
/ * ( non - javadoc )
sets the <code > <unk> / code > of the <code > <unk> / code > to <code > <unk> / code > .
/ * ( non - javadoc )
returns a logger with the specified name .
get a named logger .
log a message .
convert the audio rate to the audio stream .
this method wraps the given { @link media } as an { @link <unk> } .
return the base 64 - bit of this media .
adds a unit to the <unk> .
gets the index entries for the index entry .
compares the frame rates of this frame .
return the base 64 - bit of this matrix .
get the ratio of the <unk> ratio .
get the container .
get the metadata for this <unk> .
parses the given time stamp and returns the index entry .
returns the index entry corresponding to the given position .
get attached {
<p > <unk> . < / p >
<p > returns a list of <unk> objects . < / p >
get the supported video formats for each pixel in this image .
get a list of sample rates for this sample .
creates a list of supported audio formats .
get a list of the supported audio channels for the given audio channel .
find the codec for the given codec .
returns a codec object for the given id .
create a compression codec for the given codec .
create a codec with specified codec id .
returns a codec object for the given id .
create a codec codec with specified name .
guess the codec attempt to use {
return the available codec .
return the <unk> rate at the specified index .
get or create a <unk> for supported formats
/ * ( non - javadoc )
get the { @link <unk> } for the given { @link <unk> } .
/ * [ deutsch ] <p > liefert die l&auml ; nge des <unk> <unk> . < / p >
this method wraps the given media samples .
this method wraps a {
make a {
tries to open a file .
reads bytes from the input stream .
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new <unk> object .
/ * ( non - javadoc )
/ * ( non - javadoc )
get a codec instance .
get the base 64 - bit base .
set the base time base .
sets the value of the flags field .
/ * ( non - javadoc )
this method returns a copy of this decoder .
gets the {
returns a collection of <unk> objects .
guess the bigdecimal value for the given filename and filename .
returns a {
returns a format object for the specified index .
make a {
add a filter to the filter .
adds a new audio file to the audio graph .
adds a picture source to the { @link <unk> } .
adds a new audio to the database .
[ target <unk> ( <unk> ... ) ]
queues the command .
creates a new index entry from the given parameters .
create a new { @link bit } that will filter the given { @link <unk> } with the given name .
make a {
returns a {
compress the given input and output stream to the specified output buffer .
filter the packet .
copies the data from the given byte array into this one .
creates a bytebuffer for the specified offset and length .
get a list of <unk> objects .
constructs a buffer from a {
constructs a buffer from a {
creates a buffer for a given ref .
creates a buffer for a range of bytes .
get an audio format for the given audio type .
/ * ( non - javadoc )
/ * resample media segments
build the image type from the image .
validates the picture based on the picture algorithm .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
return the base - time base of this <unk> .
<unk> a filter .
return the base ( n - 1 ) of the specified time base .
get the metadata value associated with this {
set the base time base to the given time base .
creates a new { @link <unk> } for the given protocol id .
/ * ------------------------------------------------------------
returns the normalized url of a url .
returns the normalized url of a url .
calculates the current operating system architecture from the os .
calculates the platform type based on the platform .
returns the operating system linked to the operating system .
returns the type of operating system .
/ * ( non - javadoc )
return the base - time base of this mojo .
/ * decode the given sound .
the main method .
delete the object .
load the specified library .
loads the native library .
set the versions of the given library .
try to load a candidate library .
returns the list of available library names .
initializes the { @link url } of the { @link <unk> } .
try to load a native library .
create a new decoder with specified codec .
make a decoder for a coder .
decodes the packet from the given { @link mediatype } .
builds a { @link <unk> } from a { @link video } .
builds a { @link <unk> } from the given { @link mediatype } .
export a screen to a screen .
delete the <unk> .
adds an audio source to this call .
this method wraps the given { @link media } as an { @link <unk> } and wraps the { @link <unk> } with the given { @link media } .
/ * ( non - javadoc )
creates an alternate format for the audio format .
creates a new <unk> for the given audio format .
creates a new <unk> for the given audio format .
ensures that the buffer size is needed .
returns how many bytes are available for the given number of channels .
<unk> <unk> <unk>
returns a {
open the key value
add a new <unk> to this stream
gets the value of the <unk> property .
write packet .
creates a new instance of the pro class .
returns the number of supported codecs for the given codec .
find the pre - parsed { @link <unk> } with the given short name .
gets the format that corresponds to the given id .
/ * ( non - javadoc )
gets a <code > <unk> / code > from the coder .
creates a new <unk> .
creates a new { @link <unk> } with the given { @link <unk> } and { @link <unk> } .
decodes the given base58 string into the original data bytes .
generates a random seed .
/ * ( non - javadoc )
returns the flows matching the given address .
returns the list of transactions that match the specified criteria .
get zone header sequence .
returns the block with the given signature .
executes a transaction .
created a { @link checksum } of { @link checksum#type } with amount in the given currency .
compile a script .
/ * ( non - javadoc )
returns a string containing the text of a string .
/ * ( non - javadoc )
reads a utf - 8 byte array from the input stream starting at the given offset .
format an array .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
write a class tag .
/ * ( non - javadoc )
converts an object to a byte array .
todo : move to <unk>
/ * ( non - javadoc )
returns the package name of the given class .
{ @inheritdoc }
get the lineage {
get the lineage { @link <unk> } for the given class .
resizes the given store to the local file system . <p / > <p / > <p / > <p / > <p / > <p > <b > note< / b > : this method is called from the generated code . < / p >
get the binary value associated with the given key .
remove the given key from the list .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * ( non - javadoc )
sets the string representation of the given string .
write a 4 - byte integer to the buffer
向工作簿中写入beans，所有bean写在一个sheet中 默认以bean中的所有属性作为标题且写入第0行，0 - >
create a new {
/ * ( non - javadoc )
creates a json configuration with the specified { @link <unk> } .
prints the given object to stdout .
register a serializer for the given class
create an instance of { @link <unk> } .
/ * ( non - javadoc )
serialize an object .
/ * ------------------------------------------------------------
reads an object from a stream .
decode a list of bytes to a list of credential objects
read a copy of an object from a byte array .
get a {
convert this string to a string .
get the class mapping
get the url of a class .
/ * ( non - javadoc )
creates a copy of the given object as a byte array .
create a shared byte array with the given name and length .
gets a { @link string } representation of the given { @link object } .
/ * ( non - javadoc )
reads the next bytes from the stream .
gets the custom serializer for this class .
write a long to the output stream .
encodes the given number of bytes into the given byte array starting at the given offset .
writes an integer data object to the stream .
writes an array to the given array .
/ * ( non - javadoc )
read new array .
write an object .
<unk> <unk> .
remove an object from the object .
<p > <unk> . < / p >
/ * package private
gets the <unk> .
writes out a json object to the given map .
<p > <unk> . < / p >
/ * ( non - javadoc )
returns a copy of the buffer .
introspect method .
converts a string to a byte array .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
this method is used to initialise the <unk> .
/ * ( non - javadoc )
detaches the pointer from the given pointer .
creates a new <unk> .
/ * ------------------------------------------------------------
returns a bytebuffer that can be used to write a channel to the server .
create a new array
create a new array of { @link java . util . string java . util . string java . util . string java . util . string java . util . string java . util . string java . util . string java . util . string java . util . string java . util . string java . util . string java .
breadth - first traversal of the current version of the matrix .
writes the given object to the given writer .
returns an iterator over the values of this stream .
/ * ( non - javadoc )
{ @inheritdoc }
<p > <unk> . < / p >
adds a file to the storage .
retrieves and removes the head of the timer specified by <code > <unk> / code > and <code > <unk> / code > .
removes the specified number of bytes from this buffer .
reads a 32 - bit integer from the stream starting at the current stream pointer .
/ * ( non - javadoc )
registers a class with the given class .
set the { @link <unk> } to use .
/ * ( non - javadoc )
cleans up a {
creates a copy of the given resource .
print all the threads in the current thread .
returns the class of the given object .
returns true if the given port is on the given port .
returns an empty subscriber .
symmetric householder reduction to tridiagonal form of vector y and op .
<unk> solves a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha *
<unk> solves a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha + a * x = alpha *
symmetric householder reduction to tridiagonal form of a general matrix multiplication .
<unk> solves a * x = alpha * a * x = alpha * a * b * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha *
creates and performs an lu decomposition of the given matrix
symmetric matrices : - alpha * x = alpha * op ( <unk> )
creates and performs an lu decomposition of the given matrix
<unk> solves a * x = alpha * a * x = alpha * a = alpha * a = alpha * x = alpha * a = alpha * a = alpha * x = alpha * a = alpha * a = alpha * x = alpha *
<unk> solves a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a = alpha * x = alpha *
<unk> solves a * x = alpha * a = alpha * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha * a * x = alpha *
get the op descriptors for the op .
get the allocation mode from the context
sets the allocation mode for the context .
/ * ( non - javadoc )
calculate the shape of the shape
computes the probability of the logistic loss function
execute the graph graph
<p > creates and returns a new <code > <unk> / code > array with the specified number of data structures . < / p >
returns true if the data is a logical or nearest one .
performs and checks if and only if the given condition evaluates to true .
create a new array with first n elements given an array of dimensions
create a new array with the logical index of a given array of dimensions
applies the specified { @link <unk> } to the specified { @link <unk> } .
<p > applies the specified { @code condition } to the specified { @link condition } . < / p >
this method returns {
this method returns an ndarray with the given arguments
applies the specified { @code function } to the specified { @code <unk> } using the specified { @code function } .
applies the <unk> function to the dataset .
create an index of the last element of an ndarray .
returns the flatbuffers format of the specified { @link <unk> } as a flat file .
load a confusion matrix from a flat flat string .
returns a { @code int } containing the properties of the { @code <unk> } represented by this { @code <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
normalize a float value .
merge the points in the given arrays .
returns the x - coordinate of a vector .
splits a list of samples into a list of lists .
returns the x - coordinate of given vector
convert an <unk> type to the proper nd4j type
shut down this instance .
<b > <unk> / b > <br > <b > <unk> / b > <br > <b > <unk> / b > <br > <b > <unk> / b > <br > <b > <unk> / b > <br > <b > <unk> / b > <br > <b > <unk> / b > <br > <b > <unk> / b > <br >
<b > <unk> / b > <br > <b > <unk> / b > <br > <b > <unk> / b > <br > <b > <unk> / b > <br > <b > <unk> / b > <br > <b > <unk> / b > <br > <b > <unk> / b > <br > <b > <unk> / b > <br >
/ * ( non - javadoc )
returns a subset of this array based on the specified indexes
return the indices of the indices in the array
rearrange matrix columns into blocks
pooling 2d implementation
implement column formatted images
this method returns 3d wise 3d color for the given 2d array
create a { @link <unk> } from the given { @link bytebuffer } .
convert a { @link bytebuffer } to a { @link bytebuffer } .
get a list of { @link batch } instances for the given partition size .
update the gradient and retry rate
validate the concat of the arrays .
sets the data optype
convert an array of ndarray data to evenly spaced values
this method converts the given vectors into a flattened matrix that contains all of the elements in the given ndarray . the returned value is the sum of the elements in this vector . the returned value is the sum of the elements in the array .
calculates pca products from a matrix
return the pre - multiplication matrix of the given ndarray
this method returns a copy of this matrix and associate it with the bias of the given model
creates a random ndarray with the specified columns
random normal using the specified seed
/ * ( non - javadoc )
create an ndarray with the given shape
creates an ndarray with the given shape
concatenate ndarrays along a dimension
create a copy of the ndarray
create a copy of the ndarray
create a complex shape with the given shape and stride
create a random ndarray
create a random ndarray with the given shape and min and max values
create a complex ndarray with the specified shape and stride .
create a scalar nd array with the specified value and offset
/ * ( non - javadoc )
create a scalar nd array with the specified value
create a scalar nd array with the specified value
/ * ( non - javadoc )
create a complex scalar ndarray with the given shape .
/ * ( non - javadoc )
complex component complex value
multiply this complex by another result
<p > computes the complex component of a complex number . < / p >
2 - d discrete fourier transform .
2 - d discrete fourier transform .
computes the 函数具体逻辑
~ methoden ----------------------------------------------------------
negative values 函数具体逻辑
<p > returns the absolute value of the complex component in absolute form . < / p >
raises a { @code bigdecimal } to a power of complex number .
converts a {
pdf of weibull distribution
pdf of weibull distribution
get a context from the aeron context
this method frees specific chunk of memory described by allocationpoint passed in .
returns a subset of this array based on the specified indexes
returns a new { @link dataset } that contains all the features in the specified { @link dataset } .
<unk> a dataset s <unk> .
returns the { @link dataset } of the given examples .
returns a data set containing all of the elements in this dataset .
sample examples :
get the memory footprint of this topology
formats an exception to a string .
returns the name of the name if it is a valid hostname .
<p > formats a { @code message } with the specified { @code format } . < / p >
<p > <unk> . < / p >
converts a byte array to a hex string .
returns a string representation of the time portion of the task .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
returns a set of all class names that are contained in the given class .
<p > <unk> . < / p >
split a string into an array of strings arround a character separator .
split a string into an array of strings arround a character separator .
<p > <unk> . < / p >
<p > escapes all the characters in the specified string . < / p >
<p > unescapes the given { @link charsequence } in the specified string . < / p >
escapes html entities with html escapes .
joins the given { @link charsequence } into a single { @link string } .
<p > <unk> . < / p >
replaces all tokens in the text with the given text .
formats a stack trace as a string .
checks if two strings are equals ignoring case .
<p > checks if the string contains only whitespace characters . < / p >
inverts the given matrix to the given matrix
/ * [ deutsch ] <p > erzeugt eine <unk> <unk> <unk> . < / p >
returns true if the specified host is actual .
returns true if the specified date is actual .
create the shape information for the given shape
create the shape information for the specified shape
returns true if the given shape is a vector
return a new instance .
get the offset from an ndarray .
get the double value for the given ndarray .
given an array of indices returns an array of indexes
get the shape for the given buffer
unzips the input stream to the given destination directory .
sets the value of the <code > short< / code > value as a <code > short< / code > .
create a new ndarray with the given pointer
this method executes datasource
copy the contents of a view into a new buffer
start the server .
/ * ( non - javadoc )
please note : this method should not be called directly
this method replicates the given data buffer to this device
compute the strides of the given indexes
/ * ( non - javadoc )
returns the cosine similarity of a 2d computationgraph
atan2 ( x y ) matrix
ceiling function to ceiling
broadcast sin function
sin function for <unk>
sinh function .
element - wise sigmoid function
sigmoid function function
element - wise power function
log function with duplicate base
element - wise less than or equal to ( see { @link <unk> ( indarray ) } )
greater or equal to greater than or equal to <unk>
element - wise floor function
maximum function with a scalar
element wise maximum function between 2 indarrays
element - wise minimum function :
element wise maximum function between 2 indarrays
maximum function with a scalar
return sigmoid function
generate sigmoid function
sigmoid function : sigmoid function
element - wise sigmoid function
negative euclidean length
element - wise sigmoid function
sigmoid function : sigmoid function
sigmoid function .
compute the euclidean distance of op .
pre - assign an op to a given op .
compute a lower triangular matrix which is a power of 2 i . e . if the input matrix is not square and a square matrix is returned . if the input matrix is not square then the result is a power of 2 . otherwise the result is a power of 2 .
generate an array of the specified bounds of an ndarray .
calculate the scheme recall from the given input
returns the next element in the iteration .
{ @inheritdoc }
cholesky decomp vector :
cholesky decomp :
returns allocationshape for an ndarray .
this method returns allocationshape for the given databuffer .
checks if the given directory exists in the given directory .
/ * ------------------------------------------------------------
the main processing of the <code > <unk> / code > .
create a new ndarray with the specified shape
create a complex view of the given arrays .
{ @inheritdoc }
create a new ndarray with the given pointer
create an ndarray from the given file .
this method returns a chunk of memory allocated from memory
/ * ( non - javadoc )
/ * ( non - javadoc )
update the gradient and retry rate
serializes an { @link streamable } into a { @link outputstream } .
this method reads the specified data from the given input stream .
/ * ( non - javadoc )
push given op into grid .
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is deprecated . please use { @link <unk> ( buffer ) } instead .
this method is deprecated . please use { @link <unk> ( buffer ) } instead .
this method returns the device pointer corresponding to the current chunk pointer
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the next available device for the given thread id .
loads the library .
writes the given resource to the given file .
loads a temporary file from the classpath .
write a resource to a file .
returns the default library extension .
gets the os name for the platform .
calculates the current operating system architecture from the os .
publishes an ndarray to the producer .
loads the library from the jar .
create a data buffer based on the given pointer .
this method executes the given op for execution
computes the complex component of a complex number .
<p > multiply a complex number in another complex number . < / p >
divide the complex component in the complex domain .
read unknown data from a data input stream .
/ * ( non - javadoc )
local response normalization operation .
element - wise <unk> for all the inputs . <br > for example : <br > [ c ] <br > [ 1 2 3 ] <br > [ 1 2 3 ] <br > [ 1 2 3 ] <br > [ 1 2 3 ] <br > [ 1 2 3 ] <br > [ <unk>
get the l2 norm of the input : <br > out [ i ] = i i . e . output [ i ] = <unk> [ i ] [ i ] = <unk> [ i ]
average pooling 2d operation .
max pooling 2d operation .
avg pooling 3d operation .
max pooling 3d operation .
element - wise <unk> ( <unk> ) function : out [ i ] = i i . e . output [ i ] = <unk> [ i ] = <unk> [ i ] = i < = i < = i
element - wise depth - per - out function : out [ i ] = x [ i ] = <unk> [ i ] = i < = i < = i < = i < = i + <unk> ( i . e . output values )
element - wise <unk> ( <unk> ) function : out [ i ] = i i . e . output [ i ] = i + <unk> [ i ] = i < = i < = i < = i
calculate the covariance matrix for the given input
calculates the principal components of the given covariance matrix .
this method prints out dashboard state .
this method pushes the given op to the given op .
create a complex view of the given arrays .
creates a new array and returns it as a new array with the same shape as the original array
get an ndarray with the same shape and variable name .
get the shape of this variable .
create the gradient function .
this method creates compressed indarray from indarray
computes the transpose of a window
convert an ndarray to an offset
convert a {
convert an array of {
find the index of the vector element in this vector .
broadcast an ndarray to all devices
/ * ( non - javadoc )
calculates the factorial of a { @link mathcontext } .
calculates the gamma function .
calculates the root of a bigdecimal .
variations of asin ( bigdecimal )
calculates the root of a bigdecimal .
calculates { @link bigdecimal } x to the power of { @link bigdecimal } y .
variations on <unk>
variations on asin ()
calculates { @link bigdecimal } x .
variations on asin ()
calculates the factorial of a {
calculates the natural logarithm of { @link bigdecimal } x .
calculates { @link bigdecimal } x to the power of { @link bigdecimal } y .
calculates the root of a complex number .
variations on asin ()
variations of asin ()
variations on asin ()
variations on asin ()
variations on asin ()
variations on asin ()
variations on asin ()
calculates the root of a { @link bigdecimal } x .
calculates the root of a bigdecimal .
gamma function .
variations on asin ()
calculates the variations of the given { @link bigdecimal } .
variations on asin ()
calculates the root of a { @code bigdecimal } whose value is { @code n } .
static version of the <unk> function .
/ * ( non - javadoc )
calculates the variations of the given real { @link bigdecimal } x .
subtract the specified { @link bigdecimal } from the given { @link mathcontext } .
calculates { @link bigdecimal } x .
calculates the root of a { @link bigdecimal } x .
returns a { @code bigdecimal } whose value is <code > ( x y ) < / code > .
calculates the cosine of the { @link bigdecimal } x .
returns a { @code bigdecimal } whose value is { @code ( x y ) } .
calculates the root of a complex number .
calculates the root of a { @link bigdecimal } x .
calculates the root of a bigdecimal .
/ * ( non - javadoc )
update the opname for the variable with the given name .
get a function by id
add a new function for the given id
get an array of inputs for the specified function
update the shape for the given vertex in the given shape
associate the given shape with the given shape name with the given shape .
get the shape for the given variable name .
update the original shape for the given vertex id .
put the given shape with the given shape name with this shape s shape
associate the given array with the given variable with the given variable .
add a set of arguments for the specified differential function to the graph
add a new variable mapping for the specified differential function .
adds an outgoing request function to the graph for the specified differentialfunction also sets the output function to the specified graph for this function
add a set of arguments for the specified differential function to the graph
/ * ( non - javadoc )
this method evaluates the given input and output arrays of inputs
create a new variable with the specified shape
return a variable with the same shape as the input variable with the same shape as the input variable . note that if the input shape is not null then this will return the same shape as the input variable . if the input shape is not null then this will return the same shape as the input variable .
return the specified input variable with all zeros i . e . the specified input variable with the same shape as the input variable .
create a new variable with the given name and name<br > if this variable is out of the array shape it will be set to { @code null } . <br > note that the { @code name } must be set to { @code null }
create a new variable with the given shape
remove an argument from the arguments
set the gradient for the given variable name and variable name .
average pooling 2d operation .
see { @link <unk> ( string ... ) } for the operation .
max pooling 2d operation .
avg pooling 3d operation .
max pooling 3d operation .
max pooling 3d operation .
element - wise reduction operation : <br > out [ i ] = input [ i ] = i < = i < = i < = i < = i < = i < = i < = i < = i < = i < = i < = i < = i < = i < = i
element - wise size reduction operation : out [ i ] = > [ 1 2 3 ] sdvariable - > [ 1 2 3 ] sdvariable - > 2< / pre >
local response normalization operation .
log normalization operation : <br > out [ i ] = x [ i ] = sum ( x [ i ] = sum [ i ] ) <br > returns [ i ] = sum ( x [ i ] )
element - wise reduction operation : <br > out [ i ] = input [ i ] = input [ i ] = input [ i ] = input [ i ] = input [ i ] = input [ i ] = input [ i ] = input [ i ]
todo : implement <unk>
element - wise depth - per - merge operation : out [ i ] = i ( i ) . <br > for example if input has shape [ a b c ] <br > [ a b c ] <br > [ 1 2 3 ] <br > [ 1 2 3 ] <br > [ 1 2 3 ] <br > [
element - wise reduction operation : <br > out [ i ] = input [ i ] = input [ i ] = input [ i ] = input [ i ] = input [ i ] = input [ i ] = input [ i ] = input [ i ]
element - wise merge operation : <br > out [ i ] = i . e . output [ i ] = [ a b c ] <br > note : supports broadcasting if x and y have different shapes and are broadcastable . <br > returns an array with the same size as the input variable
todo : implement <unk> .
element - wise merge operation : <br > out [ i ] = i . e . output [ i ] = [ a b c ] <br > note : supports broadcasting if x and y have different shapes and are broadcastable . <br > returns an array with the same size as the input variable
element - wise reduction operation : <br > out [ i ] = input [ i ] = input [ i ] = i < = i < = i < = i < = i < = i < = i < = i < = i < = i < = i < = i
element - wise size reduction operation : out [ i ] = [ i ] = <unk> [ i ] = [ i ] = <unk> [ i ] = [ i ] = <unk> [ i ] = i < = i < = i < = i
batch norm operation . <br > note : supports broadcasting if x and y have different shapes and are broadcastable .
batch norm operation . <br > note : supports broadcasting if x and y have different shapes and are broadcastable .
element - wise <unk> ( <unk> ) <br / >
get an array with the specified { @link <unk> } and { @link <unk> } . <br > <b > note : < / b > this method is equivalent to calling { @link <unk> ( string ) } .
generate an output variable for op
return an array of differential functions .
calculate differential functions
creates a while condition while {
get the variable gradient for the variable gradient function .
get a list of all differential functions
create the gradient function .
get the sub - graph of the graph .
adds the specified variable to the place holder for the given variable name .
resolve all the variables in the specified arrays
this method is called when all variable operations are resolved .
generate place holder for variable arrays .
execute map of inputs
generate a list of differential regions which are associated with the current samediff instance
update an input variable name and reference it to the new variable name and reference it to the new samediff instance
execute the functions
print an ndarray function
add triples for the file format
get the gradient for the given variable name
create flatbuffers buffers for flatbuffers
returns a string representation of this data as a flat string .
get the data type from byte
this method returns the byte representation of the given { @link <unk> }
this method returns the op for the given op .
converts a byte type to an operation type .
returns the type of the operator that corresponds to the type of the given op .
/ * ( non - javadoc )
convert a float array to a float array
returns the length for the given data optype
get the allocation data type
returns the allocation length for the given data type
get the allocation data type from the context
sets the allocation mode for the given context .
/ * ( non - javadoc )
this method is called by the garbage collector when a { @link <unk> } is received from the workspace .
/ * ( non - javadoc )
print channels for current thread
symmetric householder reduction to tridiagonal form of vector y and op .
computes the product of a general matrix a * x * y + beta * beta * op
creates an lu decomposition of the given matrix
{ @inheritdoc }
creates an lu decomposition of the given matrix
creates an lu decomposition of the given matrix
performs a rank - wise eigenvalue decomposition of the given vector
performs a rank - 1 update of a general matrix and a combination of the given matrix
performs a rank - 1 - - - - - - - - - - - tuple - tuple - matrix for <unk> - a - a - 1 - 1 - a - 1 - 1 - a - 1 - tuple for a given <unk>
creates a symmetric matrix that is a rank of the general matrix multiplication .
creates an lu decomposition of the given general matrix and a combination of the general matrix and a combination of general vectors .
<unk> solves a * x = b - 1 - n - b * n = n - a * n * n * n * n * n * b * n = n - a * n * n * n * b * n = n
receives a message from the network .
this method is used to calculate the bernoulli coefficients for the given labels and label based on the label distribution given the target label and the label for the given label
variance array reduction operation
this will execute the given rng
finds the threshold for the given input
finds the threshold for the given input .
compute the threshold for the given input vector
rearrange matrix columns
rearrange matrix columns
get the names of the class meta - inf / node meta data .
/ * <unk> execution
executes the given aggregate operation
this method creates an instance of { @link java . util . properties } for the current environment
execute the given rng
this method executes given { @link <unk> }
/ * ( non - javadoc )
send a message to the shards .
assert that no workspaces are active
see { @link <unk> ( indarray int int int [] int int [] int int [] int int [] int int [] int int [] int int [] int int [] int int [] int int int int int int int int int int int int int int int int int int int int int int int int int int int int int int
this method is used to compute the gradient for the given input
{ @link <unk> ( long long timeunit ) }
returns true if the current state of the current session can be discarded .
releases the current playback state .
returns the current state of the current thread .
this method builds the { @link java . util . concurrent . <unk> } instance
/ * ( non - javadoc )
initializes the training data from a list of examples .
this method sets the value of the specified { @link field } for the specified { @link field } .
initialize the <unk> .
this method is deprecated . please use { @link <unk> ( buffer ) } instead .
/ * ( non - javadoc )
this method allocates memory from memory
convert a {
add a data buffer to the buffer
convert a { @code <unk> } to a { @code databuffer } .
this method returns a chunk of memory allocated from memory
/ * ( non - javadoc )
get the gradient of the opname
/ * ( non - javadoc )
<pre > {
broadcast addition op ( see { @link <unk> ( indarray ) } )
broadcast copy op . see : {
broadcast divide op . see : {
broadcast equal to op . see : {
broadcast greater than op . see : {
broadcast greater than or equal to op . see : {
broadcast less than op . see : {
broadcast less than or equal to op . see : {
broadcast not equal to op . see : {
broadcast max op . see : {
broadcast reverse subtraction op . see : {
broadcast max op . see : {
broadcast min op . see : {
broadcast absolute max op . see : {
broadcast absolute min op . see : {
attach a function to a function .
returns true if the samediff instance has placeholders for place holder arguments .
compute the difference between two arrays .
convert an array of indices to an array of ints .
format an ndarray based on the following settings : <ul > <li > { : <unk> } : <ul > <li > { @link <unk> } < / li > <li > { @link <unk> } < / li > <li > { @link <unk> } < / li > < / ul >
/ * ( non - javadoc )
convert an ndarray to a blob
{ @inheritdoc }
save the ndarray with the given id .
convert an ndarray to a real offset
convert an ndarray to an offset zero or offset
<p > creates a <code > <unk> / code > which calculates the value of the other number . < / p >
this method calculates the factors of a given variance
/ * ( non - javadoc )
computes the dot product of this vector with the smallest absolute value .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates an lu decomposition of the given matrix
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
convert an array of rows to a matrix
saves the inheritance container . <p >
{ @inheritdoc }
/ * ( non - javadoc )
creates an lu decomposition of the given matrix
get the strides of the given column strides
divide the row by the clustering
calculate the determinant .
rotate a matrix vector .
calculate the <unk> vector for the given variance
rotate the vector vector
add a determinant to the front of the matrix .
add a row to the front of the matrix
/ * ( non - javadoc )
divide this matrix by another matrix
multiply this vector with another
perform a matrix multiplication . mmul ( this )
add other function to perform matrix multiplication
computes the dot product of a matrix .
multiply this ndarray with another variance
iterate on this matrix and store the result in <unk>
add the ndarray to the dataset
/ * ( non - javadoc )
perform a matrix multiplication of this matrix and copy the result of this matrix to be a copy of this matrix .
/ * multiply an array with another matrix
see { @link <unk> ( indarray boolean ) }
perform a matrix multiplication of this matrix and store the result in projection matrix
/ * ( non - javadoc )
/ * ( non - javadoc )
computes the eigenvalues of a general matrix .
computes the eigenvalues and eigenvectors of a general matrix .
compute generalized eigenvalues of the problem a x = l x = l x = l ( x ) .
poisson probability mass function .
finds the element in the vector that has the largest absolute value .
swaps x and y .
computes the dot product of two vectors .
add a vector to the vector .
computes the product of a vector by a scalar .
rearrange matrix columns
evaluate the network
merge the specified features and mask arrays ( i . e . concatenate the features )
get a 3d 2d array of { @link pair } s
get a 3d 2d array of { @link pair } s
/ * ( non - javadoc )
returns true if this tensor can be assumed to be in a place in the shape [ i ]
returns true if this tensor can be assumed to be in the same order .
create a tensor along the dimension
todo : explain
cosine distance operation .
see { @link <unk> ( string sdvariable <unk> ) } for a { @link <unk> } .
get the non - zero mean error
see { @link <unk> ( string ) } for a { @link <unk> } .
initializes this {
creates a new instance of the specified class .
returns an instance of the specified class .
invokes the given method on the given target object .
creates a new instance of the given class .
get the value of the given field from the given object .
<p > returns <code > true< / code > if <code > type< / code > is an instance of <code > <unk> / code > . < / p >
<unk> { @link annotation } <unk>
returns a { @link annotation } instance for the given { @link method } .
checks if the given annotation is present on the given class .
returns a new instance of the specified { @code target } class .
/ * ( non - javadoc )
loads the entity from the cache .
marshals the embedded entity represented by the given entity .
saves the given { @link net . sf . mmm . net . entities . <unk> } to the given { @link <unk> } .
/ * ( non - javadoc )
adds a filter to the given string .
converts a { @link <unk> } to a { @link <unk> } .
/ * package private
[ variable <unk> ]
sets the value of the stringvalue to the given value .
adds a { @link <unk> } to the project .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
[ variable <unk> ]
<p > <unk> . < / p >
adds a projection to the provided projection builder .
/ * ( non - javadoc )
creates new instance of { @link <unk> } .
/ * ( non - javadoc )
creates a new { @link extractfromrow } consisting of the given { @link <unk> } and { @link <unk> } .
wait for all pending tasks to complete .
/ * ( non - javadoc )
get the class metadata for a given key .
executes the query and returns the result .
[ variable my_kind ]
executes the query and returns the results as a query .
executes a query and returns the results .
[ variable <unk> ]
writes an iterator to the given iterator .
loads rows from the iterator .
returns an array containing all of the elements in this list in proper sequence ( from first to last element ) .
this method is called by the { @link <unk> ( object ) } method .
converts the given { @link path } to a { @link string } .
<pre > { @code google . google . com / key } < / pre >
create a new { @link key } with the given parameters .
create a new { @link key } with the given name and name .
<pre > { @code google . util . map . <unk> } . < / pre >
creates a new { @link <unk> } .
/ * ( non - javadoc )
compare two keys and values .
<pre > key = > key = value < / pre >
<pre > { @code <unk> . get ( key ) ; } < / pre >
gets the package name .
returns the table name for the given class .
gets the kind of the given class .
returns true if the given type is a generic type .
returns true if the given type is a generic type .
returns the {
returns the return type of the given method .
capture the type of a type .
create rest callback implementation .
create a wrapper around a new component .
/ * ( non - javadoc )
{ @link <unk> ( object ) }
gets the index of the element .
returns true if the given field is an instance of {
returns true if the annotation is an instance of an annotation .
returns a list of {
returns a {
/ * ( non - javadoc )
entry point for <unk>
fetches pending entities .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
register a subclass of { @link <unk> } s .
gets the collection type of the given collection type .
resolves a generic type for the given generic type .
returns the path of the given path .
get the final path .
returns a string representation of this relative path .
determines the depth of this node .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
<p > <unk> . < / p >
returns a { @link list } of { @link key } s of the given { @link <unk> } .
put the given updates to the cache .
handles a bootstrap operation .
invert the cache if it is a collection .
/ * ( non - javadoc )
converts a collection of items to a set of events .
find the key fields of a class .
/ * ( non - javadoc )
returns a new { @link serializer } instance .
@see <unk> ( <unk> )
gets an incompletekey of the given pojo .
gets the complete key for encryption .
marks the given { @code pojo } with the given { @code <unk> } .
create a { @link <unk> } for the given { @link <unk> } .
register a subclass of { @link java . util . concurrent . <unk> } .
create a new { @link parameterizedtype } .
traverses a type and returns the type of the inner class .
returns a new { @link <unk> } for the given { @link class } type .
check that the given type is bound to a bound type .
returns true if the given type is common .
<p > <unk> . < / p >
returns a {
returns a {
<unk> <p > <unk> / p >
/ * ( non - javadoc )
adds a new value to the parameter map .
/ * ( non - javadoc )
<pre > { @code key . key } < / pre >
helper method to create a { @link counterdata } associated with this { @link <unk> } .
/ * ( non - javadoc )
helper method to create a new { @link ref } .
/ * ( non - javadoc )
converts the given { @link <unk> } to a { @link map } .
/ * ( non - javadoc )
adds the given { @link filter } to the filter list .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<pre > { @link <unk> } < / pre >
<pre > { @link <unk> } < / pre >
creates a key for the given key and kind .
<pre > { @code <unk> . get ( key ) ; } < / pre >
create a list of indexes for a given node .
returns the p - value value of the given { @code <unk> } .
convert a { @link <unk> } to a { @link <unk> } .
returns a {
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
appends the specified ids to the end of the stream .
/ * ( non - javadoc )
prints the given ids .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
helper method to obtain the lock associated with the given <code > <unk> / code > .
an implementation of {
helper method to get the { @link counterdata } associated with the given { @link <unk> } .
/ * ( non - javadoc )
creates a new instance of the specified type .
creates a new instance of the given type .
factory method .
<p > newinstance . < / p >
allocate a mapping for the given class .
[ variable <unk> ]
returns the incompletekey of the entity .
allocates a new { @link <unk> } .
<p > <unk> . < / p >
{ @inheritdoc }
inserts the specified { @link <unk> } into a single { @link <unk> } .
<p > <unk> . < / p >
/ * ( non - javadoc )
run a {
trims the list of { @code string } values .
convert a number to a number .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<pre > { key : key } < / pre >
<pre > { @code <unk> > } < / pre >
/ * ( non - javadoc )
adds a new value to the cache .
{ @inheritdoc }
asserts that the target class is a generic type .
run all tasks .
/ * ( non - javadoc )
this method is called by the {
/ * ( non - javadoc )
gets the stat for the given type .
gets the exception from the given future .
rethrow the given { @link throwable } . throws { @link runtimeexception } if the given { @link throwable } is an instance of { @link runtimeexception } .
----- private methods -----
creates a new { @link translator } with the given { @link <unk> } .
create a new { @link net . dv8tion . jda . core . entities . alias } for the given class .
create a new { @link translator } .
load the given portlet url into the given container .
check if the name of the given container is not already in the container .
this method gets the { @link <unk> } for the given { @code value } .
sets the specified { @code <unk> } to the specified { @code value } .
/ * ( non - javadoc )
create value .
<unk> > <unk> / code >
returns true if the given category contains the given category .
write a list of categories to a list of categories .
finds the snippet of the given snippet .
converts the given operation to a json string .
/ * ( non - javadoc )
serialize the object to an outputstream .
write the bid request to disk generator .
converts the given node to a json string .
serialize the object to an outputstream .
writes the given json - ld object to the specified writer .
writes the <unk> to the geojson generator .
returns the <unk> .
creates a new { @link <unk> } for the specified { @link <unk> } .
returns a list of <unk> objects representing the bid of the bid .
returns the { @link <unk> } .
returns a factory that returns the bid of the {
returns a {
updates an existing updater .
updates the metadata of the bid .
converts a { @link <unk> } to a { @link <unk> } .
remove <unk> .
transfomiert eine implication ( imp ) operation . <br / > ebnf : <br / > <code > <unk> / code >
deletes an existing digital object .
return an iterable of <code > <unk> / code > s that matches the specified <code > <unk> / code > .
eventfilter based on predicate .
compares two strings for equality .
converts the given node to a json string .
/ * ( non - javadoc )
serialize a native request to an outputstream .
writes the native request to the given generator .
converts the given node to a json string .
serialize a native object to an outputstream .
writes the given native response to the given writer .
write native response to disk generator .
get a <unk> object .
return true if the next token is null .
register <unk> .
/ * ( non - javadoc )
register a { @link <unk> } with the given interface .
creates a representation of the given { @code charsequence } .
reads a native request from the given reader .
reads <code > <unk> / code > and returns <code > <unk> / code > .
constructs a <unk> from a complex parser .
creates a native response from the given { @link charsequence } .
read native response from reader .
read native response from input stream .
constructs a complex response from the given parse request .
runs the example .
returns the bid of a specific criterion .
creates a representation of the bid .
reads the bid of the given reader and returns it as a request .
reads the bid of the bid .
this method is used to get a request parameter stripped of white space .
creates a representation of the bid .
reads the bid of the given reader and returns the bid of the bid .
reads the bid of the bid .
imports a credential .
/ * ( non - javadoc )
returns a new instance of { @link <unk> } .
builds a new { @link <unk> } with the given { @code i } and { @code updater } .
mostly it s designed for one - step operation to complete the operation in one step .
filter a message .
returns the name of the field as a string .
parses a json object .
skip the end of a field .
parses a json array .
skip the end of a field .
return the next token in the json .
advance to the next token in the array .
writes a {
adds { @link <unk> ( string ) } to { @link <unk> } .
write a list of measurement items to a byte array .
write long data to disk .
writes a list of point points .
writes a { @link long } list to the given { @link <unk> } .
write an enum value to the given jsongenerator .
returns the value of the { @link <unk> } field of the given { @link <unk> } .
<unk> > <unk>
returns a string representation of a parameter .
join a url using the base url .
package private for unit tests .
/ * ------------------------------------------------------------
checks if the given url matches the host name .
try to get the host path from a string .
try to create a url from a url .
returns a list of { @link <unk> } s for a given { @link <unk> } .
extract the configuration element from storm s configuration .
checks if the given url matches the protocol . <p >
@throws <unk> @throws <unk>
/ * ------------------------------------------------------------
<unk> - <unk>
returns the capture time of the given { @link metadata } .
parse a { @link string } into a { @link long } value .
{ @link <unk> ( string ) }
filter and return the filtered metadata .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a key / value pair to the cache .
add a file to the queue .
get the id from the url .
checks if the given string is a valid space id .
/ * ( non - javadoc )
<unk> > <unk>
loads a text from a byte array .
read charset from text .
get the charset from a buffer .
determines the content of the beginning of a byte array .
<p > <unk> . < / p >
sets a parameter .
gets the first value of the given key .
/ * wait for the command to complete and return the command if it exists .
main method .
parse the cookie strings .
parse a domain domain .
returns the base url for the given url .
get a <unk> from the cache .
tries to retrieve an entity from the cache .
recursive method to extract the meta tags from a document .
extracts tags from content .
check the given metadata for the given { @link metadata } .
ack method for { @link tuple }
returns true if the specified url matches the specified url .
/ * ( non - javadoc )
creates a list of rules for the specified style property .
loads the match rules from the jar file .
parses a query string and returns the query string .
/ * public static string <unk> ( <unk> <unk> ) { return <unk> ; }
un - escape path .
converts a path to a hex string .
creates an s3 client from the configuration .
create a new navigation filters with the specified configuration .
sets the { @link serializationformat } s supported by this client .
returns the amount of time required by the query .
trigger a query on the query .
create a parse config object from storm s configuration file .
receive notification of the end of a node .
receive notification of ignorable whitespace .
receive notification of a processing instruction .
receive notification of a comment .
receive notification of cdata .
report the start of dtd declarations if any .
/ * ( non - javadoc )
/ * --------------------------------------------------------------------------
parse a request
<unk> robots . <unk>
filters the given metadata value . <p >
executes the given tuple and returns it as a string .
removes the placeholder text from the given text .
/ * ( non - javadoc )
/ * ( non - javadoc )
deserialize a querycriterion .
create a <unk> from storm s configuration
create a new instance of the <code > <unk> / code > .
submit a job to the jobmanager .
the main method .
读取整个excel文件 <unk> 全部返回
unmarshals a { @link <unk> } into an { @link consumer } .
读取整个excel文件 <unk> 全部返回
from interface <unk>
unmarshals the given data from the given <code > <unk> / code > .
向工作簿中写入beans，所有bean写在一个sheet中 默认以bean中的所有属性作为标题且写入第0行，0 - <unk>
from interface <unk>
get the type information for the given field .
<unk> <p > <unk> / p >
set the value of the <unk> item .
returns the default size for the specified size .
sets the drawable at the specified index .
sets the drawable at the specified index .
sets the <unk> color of the slider .
******************** private methods ***********************************
invalidate the item at the given position .
sets the position of the item .
calculate the velocity penalty for the given velocity time .
returns the color value for the given atom .
convert a value to an integer value .
checks if the given text matches the given pattern .
creates a new { @link <unk> } .
execute goal .
returns the element name for the given storage .
produce the end of a single xml element array from an array iterator .
/ * ( non - javadoc )
returns the string representation of the rank - 1 property .
returns the value at the given index .
get the string representation of a string .
/ * ------------------------------------------------------------
bind a string value to a string .
sets the value of this rank as a string .
get the font size of the outer font .
convert a string to a long .
returns a new <code > <unk> / code > .
returns a new instance of the given { @code array } instance .
solve a * x = b . b is overwritten by b .
solve a * x = m1 * b * b .
solve a * x = b .
/ * <unk>
/ * ( non - javadoc )
给图片添加文字水印<br > 此方法并不关闭流
show the first page displayed in the panel .
show if the first frame in the panel is active .
creates a copy of the file .
reads the compressed data from the file 上传文件
helper method for {
<p > <unk> . < / p >
this method extracts the access file from a list of bytes .
main method .
get the unit name for the specified unit .
same as { @link <unk> ( string string string ) } .
convert a hash to a syllables .
/ * private static int <unk> ( double timeunit ) { if ( time . <unk> () ) { return 0 ; } else return 0 ; }
/ * ( non - javadoc )
checks if the given date is within the given date .
/ * [ deutsch ] <p > ermittelt ob die angegebenen parameter ein . < / p >
returns the intersection of this range .
/ * [ deutsch ] <p > <unk> <unk> <unk> f&uuml ; r <unk> . < / p >
returns true if the given date is <code > <unk> / code > .
/ * [ deutsch ] <p > f&uuml ; gt einen <unk> ; < / p >
/ * [ deutsch ] <p > f&uuml ; gt die angegebene intervall . < / p >
sets the change duration .
******************** private methods ***********************************
gen - last : <unk>
add a bean to the data panel .
this method is called when the user is running .
reads a single coordinate from the supplied index .
create a list of <code > <unk> / code > from the given <code > <unk> / code > .
get the size of a file .
returns the next token in the stream .
/ * ( non - javadoc )
tries to open a database for the given location .
create a {
returns the name of the extension .
updates the cache with the given name .
gets the { @link <unk> } for the given short name .
returns the string representation of the parameters .
note : this method is called when the <unk> is never called .
returns the <unk> value of the given latitude
package - private for <unk>
get the crossover point of the solution
variations of the <unk>
creates a <unk> from a file .
create a new { @link <unk> } object from a byte stream .
get a clone of the aliased aliased variables .
adds the maximum value of this partial to the specified partial instant .
validates that the maximum value of this partial is less than or equal to the specified values .
returns a list of {
/ * ( non - javadoc )
creates a new { @link <unk> } .
main method .
print the low - level metadata to the console .
reads a chemfile object .
/ * [ deutsch ] <p > ermittelt die <unk> <unk> <unk> f&uuml ; r <unk> . < / p >
calculate the electronegativity of orbitals pi .
register the given path .
process the event .
set a reference to a time unit .
returns true if the given class can be generated .
register the given class name .
register a new instance of the given class .
create a { @link <unk> } for the given { @link <unk> } .
method <unk> .
check if the { @link <unk> } is a { @link <unk> } .
this method is used to iterate over the elements in the passed in file .
/ * ------------------------------------------------------------
write text to response .
assembles the html for the given catalog .
returns the html for the empty html table . <p >
generates the start of the page .
get the catalog s catalog .
/ * --- private methods ---
add all the crl services to the crl .
replies the global user configuration .
执行http <unk> ( <unk> )
http : // docs . oracle . com / javase / 7 / docs / api / java / util / concurrent / <unk> . html
read the contents of a url into a string .
returns true if {
/ * <unk>
creates a { @link <unk> } from the given { @link <unk> } .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
create a property name from a method name .
$example off : <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
computes the geospatial region of homography .
find a dataset based on a set of paths .
reads a dataset and writes it to a printstream .
get an immutable {
check if two values are equal .
creates a unit symbol .
/ * <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
read the top - level header from the file .
reads the code from the input file .
/ * ( non - javadoc )
/ * package
<p > <unk> . < / p >
convert a byte array to an int .
converts a date to a date
sets the value of a property .
/ * returns true if the given string is a valid <unk> object .
returns a valid character name for the given input string .
checks if the given string is a valid class name .
opens the file for writing .
reads the data from the input op .
read a single record .
read a single record data structure .
{ @inheritdoc }
writes the data to a variable .
/ * ( non - javadoc )
fill the list of variables
/ * ( non - javadoc )
closes the file .
create generated {
/ * ( non - javadoc )
/ * ( non - javadoc )
get the date suffix from the calendar .
get a file template from a <unk>
returns true if the given string contains any time characters .
returns true if l1 and <unk> are positive .
todo add unit test
takes a point and calculates the destination point of the destination .
/ * <unk>
returns the angle in degrees of the hash of the receiver .
add a { @link <unk> } to this { @link <unk> } .
returns a function with the given name .
returns the function with the given name .
loads a new instance of the given class .
returns the coordinate of the coordinate of the given axis .
generates the generated process name .
get the { @link <unk> } type from the given { @link <unk> } .
fetches the <unk>
create a <unk>
/ * ( non - javadoc )
get a model parameter .
returns the name of the next record .
get the level description of the geometry
get the level unit of the given {
returns the projection type for a given {
returns true if the given record is a primitive coordinate .
returns true if this { @link <unk> } is a { @link <unk> } .
build a { @link <unk> } from a { @link <unk> } .
add a { @link <unk> } to the { @link <unk> } .
/ * ( non - javadoc )
encodes the { @link <unk> } .
deletes { @link <unk> } from the given { @link <unk> } .
build a { @link <unk> } for the given { @link <unk> } .
/ * [ deutsch ] <p > <unk> einen { @link <unk> } . < / p >
convert a { @link <unk> } to a { @link <unk> } .
encode the coverage data to a { @link <unk> } .
{ @inheritdoc }
creates a new { @link <unk> } for the given { @link class } .
sets the class name .
creates a new { @link <unk> } .
make a transform uri .
creates a dummy transform variable .
create a projection descriptor out of the description file .
fires a property change event .
factory method for creating a { @link jdialog } object .
main method .
creates a <code > <unk> / code > for an <code > <unk> / code > .
gets the location location of the request .
/ * ( non - javadoc )
write a sequence of values .
/ * ( non - javadoc )
locate the extended identifier .
initialize styles .
<p > returns a copy of this { @code chronology } . < / p >
serialize a { @link <unk> } to a { @link bytebuffer } .
reads count bytes from the stream .
write an array of bytes to a byte array .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
reads { @code <unk> } from { @code <unk> } .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
returns true if the accept compressed request accepts the request .
/ * ( non - javadoc )
finishes the initialization .
this method initializes <unk>
paint process .
/ * ( non - javadoc )
load a list of words .
returns a new instance of { @link <unk> } .
aes / ecb / code >
returns the power of the power line .
package - private for <unk>
calculates the coverage of the next projected point in the projected lat / lon region .
update an affiliation .
locate a list of capabilities .
adds a text node .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package
/ * ( non - javadoc )
initializes the <unk> .
initializes the grid header .
reads a new grid
/ * ( non - javadoc )
the main method .
/ * ( non - javadoc )
writes the preamble header to the given writer .
/ * ( non - javadoc )
execute the analyzer with the given filename .
reads all files from the given directory and returns them in a list .
deserialize a log file .
writes a <unk> instance to a <unk> .
initializes the graph .
<p > main . < / p >
method to get the parser type .
create a grid coverage data structure from the github <unk>
reads a float array from the input stream
/ * ( non - javadoc )
/ * ( non - javadoc )
calculate the number of vertices in l ( <unk> ) .
apply filter to a <unk> .
get the data from rgb
loads a <unk> file from the file .
minioclient . <unk> ()
minioclient . <unk> ()
prints out the grid list .
<p > <unk> . < / p >
<unk> <unk> <unk>
/ * ( non - javadoc )
reads the next character from the stream .
adds a new variable to the map .
print <unk> .
print the stack trace .
this method checks to see if this is a headless object .
externalizes a {
returns a cloned <unk> instance with the given key .
/ * [ deutsch ] <p > erzeugt ein neues <unk> kalenderdatum . < / p >
/ * [ deutsch ] <p > erzeugt ein neues <unk> kalenderdatum . < / p >
/ * [ deutsch ] <p > erzeugt ein neues <unk> kalenderdatum . < / p >
/ * [ deutsch ] <p > erzeugt ein neues <unk> kalenderdatum . < / p >
parses a date from iso - 8601 format .
/ * [ deutsch ] <p > erzeugt ein neues <unk> kalenderdatum . < / p >
/ * [ deutsch ] <p > interpretiert den angegebenen iso - 8601 - <unk> . < / p >
returns a string representation of the time instant .
/ * [ deutsch ] <p > interpretiert den angegebenen text zu diesem <unk> . < / p >
/ * [ deutsch ] <p > subtrahiert den angegebenen <unk> datum . < / p >
sets the date to the given value .
get the difference in milliseconds .
associate a { @link <unk> } with the given { @link <unk> } .
create a new { @link <unk> } object with the given data .
create a new { @link <unk> } for a given { @link <unk> } .
create a <unk> from a <unk> .
get the file associated with a request .
/ * ( non - javadoc )
/ * ( non - javadoc )
save a file to a file .
encodes a string into a json string .
see contentresource . <unk> ()
create a list of slices from a list of ranges .
splits a byte array into a <unk> object .
converts a list of { @link <unk> } s into a { @link string } .
given a list of { @link <unk> } s return the corresponding <unk> .
performs a file upload .
check if a list of { @link <unk> } s is a { @link <unk> } .
run the algorithm on a subgraph .
/ * ( non - javadoc )
returns the value of the { @link type } in { @link <unk> } .
/ * ( non - javadoc )
converts a byte array to a string .
parses a list of { @link <unk> } s into a { @link <unk> } object .
convert the given value to seconds .
get first date from current date
subtracts a unit from this unit .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a { @code double } to this { @code <unk> } .
performs a single conversion of the conversion matrix .
convert a value to a derived unit .
gets the coverage string .
append a converter to the converter .
returns a {
set the {
create data from a <unk>
returns a {
reads the records from the <unk> .
gets the javadoc .
{ @inheritdoc }
get a list of { @link point } s from a { @link <unk> } .
look up service configuration by name .
/ * package
<unk> - <unk>
get the start of the constant stack .
returns the start of the constant stack .
get the number of constant channels .
reads data from the file .
convert the byte array into a short array .
write the xml model to an output stream .
desirialize a variable object .
create a subset of a subset of the given subset .
returns preferred size of target container .
/ * package
returns the { @code <unk> } of the given { @code <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package - private
translate a string to a stand - alone stand - alone .
/ * package
/ * ( non - javadoc )
/ * package
loads a hash map from an input stream .
returns the center of the center of the given center .
returns the name of the center of the center .
/ * ( non - javadoc )
resizes the <unk> on the application .
extract the global variables from a dataset .
write ifd variables .
converts a <code > calendar< / code > to a <code > java . util . calendar< / code > using the specified <code > <unk> / code > .
converts a { @link calendar } to a { @link calendar } .
/ * [ deutsch ] <p > erzeugt ein neues <unk> kalenderdatum . < / p >
creates a new time value based on the given date - time .
/ * ( non - javadoc )
the main method .
gen - last : <unk>
gen - last : <unk>
constructs a { @code <unk> } from a { @code <unk> } .
the main method .
returns true if the file is a valid snapshot file .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
read data from file .
<p > <unk> . < / p >
run the init method .
run a <unk> on a file
reads the contents of a { @link section } into a { @link <unk> } object .
reads a chunk of data from the table .
reads the contents of this { @link <unk> } and returns the { @link <unk> } value .
increase the amount of rotation .
returns the number of bytes that should be displayed in the given range .
<p > returns the position of the real position in the given range . < / p >
calculate the data of the pathfindable .
this method is used to parse a binary line from a byte array .
calculate the cosine distance .
see { @link <unk> ( <unk> <unk> ) } .
remove the given partition .
this method is used to store the contents of a randomaccessfile into a <unk> .
helper function to set debug flags .
set the extend mode .
/ * ( non - javadoc )
reads a data range from the model .
calls { @link <unk> ( float float int ) } with the given { @link <unk> } .
run a single column in a flac database .
this method is used to process a <unk> object .
returns the bounding box of the largest sre .
/ * ( non - javadoc )
returns the bounding box of the bounding box
method used to calculate the scale offset for the given algorithm
add samples to the given array .
puts the given structure as a byte array .
<unk> - <unk>
<unk> - <unk>
<p > returns the specified <code > int< / code > in the specified dimension . < / p >
<p > returns the specified <code > string< / code > in the specified <code > string< / code > . < / p >
/ clover : off
returns a string representation of the given time unit .
/ * ( non - javadoc )
/ * }
creates a string representation of the given document .
write the xml representation of the given document to the output stream .
run a <unk> .
extracts the grid form from a pdf document .
writes axis to axis .
returns a string representation of the given widths .
{ @link <unk> }
main method .
<unk> > <unk> > <unk> > <unk>
get the number of elements in this queue .
returns a string representation of this object .
returns a slice of the specified slice .
locates the specified number of bytes from the specified input starting at the specified index .
/ * ( non - javadoc )
serializes the object .
/ * ------------------------------------------------------------
compute the <unk> corresponding to the given <unk>
updates the recent menu .
decode a { @link <unk> } into a { @link <unk> } .
decode the structure .
decode the <unk> data into a data structure .
parse the contents of a url into a { @link <unk> } .
writes the text to a file .
debugging function .
/ * ( non - javadoc )
receive notification of the start of a node .
method <unk> declaration
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
gets a list of the offsets in time units in milliseconds .
add a listener to a listener .
invoked when an action is received .
/ * ( non - javadoc )
try to load a { @link com . <unk> . <unk> . <unk> } from the given properties file .
read a variable .
print the balance to the given printwriter .
read this object from a stream .
externalizes a { @link inputstream } to a { @link <unk> } .
returns <code > true< / code > if this <code > <unk> / code > is empty .
/ * ( non - javadoc )
compute the chunk shape for a given chunk .
adds the given value to the heap .
parse the cmd line value as a date .
parse a date time string .
/ * ( non - javadoc )
/ * [ deutsch ] <p > liefert die <unk> der <unk> des <unk> . < / p >
converts { @code val } to { @code date } .
/ * ( non - javadoc )
/ * ( non - javadoc )
parse unit spacing .
add dimension to <unk> file
/ * ( non - javadoc )
convert coordinates to a coordinate iterator .
add a mass axis for a dwg object .
run the projection .
/ * package
add a tsuid to a tsuid .
update the record properties of a record .
adapted from http : // www . w3 . org / protocols / rfc2616 / rfc2616 - <unk> . html
/ * ------------------------------------------------------------
print the lat / lon pair to the console
/ * <unk>
parses the record for <unk> record .
parse the decomposition axis .
sets the vertical and vertical points for the given distribution .
returns the vertical chart coordinates .
/ * ( non - javadoc )
read a dataset from the <unk> .
read a dataset from a dataset .
used to create a <unk> for a <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
write the given catalog to a xml file .
method <unk> .
gets the level of the level 1 . 0 level .
checks to see if the file is a valid header file .
opens a new <unk> .
adds the <unk> attribute to the <unk> .
read the data from the {
/ * ( non - javadoc )
serializes the {
touch [ <unk> ]
/ * ( non - javadoc )
/ * ( non - javadoc )
prints the type notation .
/ * ( non - javadoc )
print the doc declaration .
writes the xcal document to an output stream .
runs the <unk> .
create an instance of { @link datetime } .
given a {
returns the context name for a coordinate dimension .
----- private methods -----
gets a <unk> .
builds a list of <unk> .
generate a list of dimensions for a dataset .
create new variables .
create a { @link <unk> } from a { @link <unk> } .
returns the <i > <unk> / i > bits of a byte value in the direction of the specified direction .
the main method .
{ @link <unk> { @link set } { @link set } { @link set } { @link set } { @link set } { @link set } { @link set } { @link <unk> } { @link <unk> } { @link set } { @link <unk> } { @link set } { @link <unk> } { @link <unk> }
initialize memory cache used by <unk> .
wrap a {
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> .
open a dataset .
create a new { @link <unk> } from the given { @link dataset } .
enhance <unk> .
cancels a { @link <unk> } .
method <unk> .
reads a { @link <unk> } from the given location .
opens a file for the specified <code > <unk> / code > .
<p > <unk> . < / p >
<p > <unk> . < / p >
open a file or open a new one .
<p > <unk> . < / p >
clear the special location systems .
finds the coordinate version of the given urn .
returns the node with the given name .
finds a permission by its name .
returns the node with the given name .
{ @inheritdoc }
/ * ( non - javadoc )
add a coordinate axis to the current bundle .
if the given { @code <unk> } is { @code true } then { @code false } is returned .
adapted from {
sets the value of the specified values to the specified values .
creates a new array of {
/ * ( non - javadoc )
dumps the given object to the writer .
prints debug text to a given output stream .
the main method .
get a resource dataset from the given request .
send a resource file to the file system .
get a resource file .
send a file to the file system .
send a { @link resource } to the { @link <unk> } .
open a static resource .
opens a { @link <unk> } .
/ * ( non - javadoc )
/ * <unk>
gets the index of the configuration .
reads the classpath file .
method to find the enum constant for the given class name .
<p > <unk> . < / p >
/ * ( non - javadoc )
start <unk> .
/ * <unk>
write a list of beans to a file .
returns the list of { @link <unk> features } for the given { @link <unk> } .
symmetric householder reduction to tridiagonal form .
/ * ( non - javadoc )
this method <unk>
dump a single { @link <unk> } .
adds the documentation of the documentation .
remove documentation declaration
get the entropy of a file .
/ * ------------------------------------------------------------
/ * [ deutsch ] <p > liefert einen { @code calendarperiod } f&uuml ; r das angegebene <unk> . < / p >
prints the value of this <code > <unk> / code > to the specified <code > <unk> / code > .
/ * ( non - javadoc )
externalizes a { @link <unk> } to a { @link <unk> } .
externalizes a byte array to a stream
determines the input stream for the given resource name .
parses the given uri to determine if it is a path .
creates a <unk> object with the given name and value .
/ * ( non - javadoc )
creates a new { @link <unk> } for the given { @code cls } .
register a class with the given name .
convert a string to a list of strings .
build a string representing the end of a new location .
<p > <unk> . < / p >
/ * ( non - javadoc )
find the z - axes .
<p > <unk> . < / p >
<p > <unk> . < / p >
end <unk> .
gets the <unk> from a <unk> .
reads the coordinates of a coordinate system .
refresh the coordinate systems .
this method is used to create a new <unk> .
returns true if the given variable is a coordinate axis .
gets the z - coordinate of the transform .
prints a z - coordinate .
add a coordinate to the contact .
/ * ( non - javadoc )
find the { @link <unk> } for the given { @link <unk> } .
sets the { @link <unk> } for the given { @link <unk> } .
given a set of columns return true if <unk> is true .
/ * delete a java . util . concurrent . <unk>
delete the dataset .
get time base and factor suffixes
converts a duration expressed in units to a number of seconds .
/ * --- private methods ---
/ * [ deutsch ] <p > interpretiert das angegebene <unk> . < / p >
run database server .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
{ @inheritdoc }
gets the record values .
this method is used to open a file .
sets the details of the detail items .
increments the value of the counter with the given name and value .
creates a new instance of <unk> .
write a class definition .
main method .
this method compares two rows and returns the result as a boolean .
compare a boolean to another .
retrieves the current { @link <unk> } for the specified { @link <unk> } .
/ * ===============================================================
pass the given <unk> to the <unk> .
get a sax event .
/ * ( non - javadoc )
search for an attribute s attributes .
method <unk> .
/ * ( non - javadoc )
returns true if the given string has a valid date range .
/ * ( non - javadoc )
get attribute .
checks if the given property has the specified property .
/ * ( non - javadoc )
adds an attribute to the list .
appends the specified <code > <unk> / code > to the <code > <unk> / code > .
add a new container connection .
/ * ( non - javadoc )
parse a set of attributes .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
sets the value of the <unk> attribute .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the location of the { @link location } to this { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
registers subclasses of { @link <unk> } .
checks if the given class is a supertypes of a class .
unregisters the given <code > <unk> / code > from the given <code > <unk> / code > .
creates a *************************************************************************
get the <unk> for the given time
get the p - time estimated time in hours .
evaluates the specified time interval offset and returns the results
{ @link <unk> }
/ * ( non - javadoc )
validates a group node .
returns a list of beanspec for all fields in the specified order .
removes all of the types in this list .
sort a list of <unk> into a <unk> .
serialize tables .
get a random block from the disk .
/ * ( non - javadoc )
/ * [ deutsch ] <p > versucht den angegebenen <unk> zu <unk> . < / p >
opens the file .
reads the data from the {
tries to find the variable regardless of the attribute value .
find the variable value in the variable value .
/ * ==================================================================== private methods ====================================================================
find the variable with the given attribute value .
<unk> [ <unk> ] [ <unk> ] [ <unk> ] [ <unk> [ <unk> ] [ <unk> [ <unk> ] [ <unk> [ <unk> ] [ <unk> [ <unk> ] [ <unk> [ <unk> ] [ <unk> [ <unk> ] [ <unk> [ <unk> ] [ <unk> [ <unk> ] [ <unk> [ <unk> ] [ <unk> [ <unk> ] [ <unk> [ <unk>
translates a throwable to a <unk> .
returns the data type of a dataset .
/ * package
{ @link <unk> } { @link <unk> }
/ * ( non - javadoc )
{ @link <unk> }
/ * package
get a coordinate value .
connect to a <unk> .
returns the index of the coordinate system .
returns a list of { @link <unk> } s that overlap the given range .
method to create an array of <unk>
point to the bounds of the <unk> rectangle .
static method to create an array of <unk>
returns the bounding box of the geometry
returns the range of the values in the given range .
gets the index of the given target symbol .
/ * ( non - javadoc )
sets the instance factory .
/ * ( non - javadoc )
transfomiert eine <unk> <unk> <unk> .
sets the action to be fired when the action is fired .
add an action to this activity .
add an action to this button .
gen - last : <unk>
finds all keys matching the given path .
resolves a method name by name .
<p > <unk> . < / p >
this method is used to create a new <unk> .
run the algorithm
read data from buffer
/ * ( non - javadoc )
read a heap from a heap .
append the given data to the table .
create a new {
classify a dataset .
returns the center point of the projection .
run a coordinate check .
adds a new segment to this cell .
the main method .
returns the index of the first occurrence of the specified pattern in the table .
compute the failure log .
classifies a {
/ * ( non - javadoc )
add a url to the classloader
/ * ------------------------------------------------------------
deactivates all callback handlers .
stop the loading of a class .
show the column visible .
{ @inheritdoc }
moves the column at the specified index to the specified index .
get the columns returned by this method .
returns the column editors for the given column .
this method initializes <unk>
returns the x .
this method is meant to be called only once .
create a new {
/ * ( non - javadoc )
create a new partition - based partition .
{ @inheritdoc }
{ @inheritdoc }
returns a pseudo - random uniformly distributed int value between min and max ( inclusive ) .
/ * ( non - javadoc )
returns a list of all the variables in this scope .
reads the given { @code <unk> } from the given { @code <unk> } .
/ * ( non - javadoc )
generate a { @link <unk> } for the given { @link uri } .
reads a candidate table and adds it to the list .
parse a line of text .
creates a new <unk> from the specified file .
lazy initialization of the <unk> .
get the index of a vertex
the main method .
removes the variable with the given name .
converts a string to a human - readable string .
check that a diff between two tables
/ * ( non - javadoc )
/ * ( non - javadoc )
reads the number of colors in the specified color .
returns the value of the specified color .
sets the minimum and maximum scaling index .
writes the given value to the writer .
/ * ( non - javadoc )
set the {
<editor - fold defaultstate = collapsed desc = image related >
<editor - fold defaultstate = collapsed desc = visualization >
draw the transformation
verify that the host name matches the given pattern .
performs an http upgrade .
create a { @link <unk> } with the given { @link uri } .
/ * example :
returns { @code true } if the given { @code <unk> } is equivalent to this one .
creates a new instance of { @link <unk> } .
/ * ( non - javadoc )
prepare the request context for logging purposes .
setup the current request context string .
{ @inheritdoc }
<code > <unk> / code > < / p >
get the index of the cells in the <unk> .
build a <unk> for a given url .
read a jdom element from a <unk> element .
adds the content of the <unk> to the <unk> .
/ * ( non - javadoc )
parses a <unk> from a <unk> .
return the <unk>
generate a dataset source element .
parses the xml element .
parses a {
reads the result of a { @link <unk> } .
create a <unk> element
desirialize a {
creates a new <unk> element
creates a new <unk> for the specified topic .
@param <unk> @param <unk>
/ * returns true if the given node is set in the store .
/ * ( non - javadoc )
adds the given menu to the menu .
documentation inherited from interface
{ @inheritdoc }
gets the <unk> arguments .
the main method .
read a utf - 8 string from an input stream .
reads the contents of an input stream into a byte array .
determines the input stream for the constructor parameter .
initialize the concept units .
returns the constant conversion factor for the given units .
<unk> - <unk>
make the {
/ * ( non - javadoc )
return pivot permutation vector .
returns a template template for a <unk> .
sets the local station info .
this method reads all the elements in the grid and converts it to an <unk>
add a propertychangelistener to the listener list .
method to get a plain string for this fieldvalue .
fills the byte buffer with the given buffer .
returns a boolean value indicating whether this value is equal to the specified value .
/ * ( non - javadoc )
sets the value of the submitted value .
fire the event .
print the format info for the classifier .
~ methods <unk>
reads a single byte from the file .
creates a { @link datawriter } .
finds a method constant by name .
returns the type of the given { @code name } .
create a instance of { @link point } .
set the value of the <unk> property .
get the coverage axis converters for the given subset .
emits the string representation of the given record to the given output writer .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
get the url of the url .
renames the global attributes .
parses a group group .
/ * package
helper method to flush the top - level variable
sets the parent variable . <p >
return true if the server is a server group .
add a tag to the list of attributes .
desirialize a <unk> object
creates a { @link jscrollpane } for the vertical dimension of the { @link jscrollpane } .
create a list of additional dimensions for a specific <unk> .
/ * private void <unk> ( byte [] <unk> ) { if ( <unk> == null ) return <unk> ( <unk> ) ; }
gets the scalar value of a product page
{ 0 . <unk> ( datatype ) }
creates a data type from the <unk> data type
sets the data optype
for testing purposes
{ @inheritdoc }
/ * ( non - javadoc )
this method is called to monitor the details of this monitor .
creates an image icon for the given name .
loads an image from the classpath .
creates a new cursor of the specified type of { @code <unk> } . the { @code <unk> } is the same as { @link <unk> () } .
/ * ( non - javadoc )
the main method .
reads data from the file .
reads data from the file .
get data from an {
reads data from an input stream .
compute the size of a data fill .
read data from the table
copy the contents of the given subject to the given channel .
cast a value to a primitive array .
/ * package
encode bz byte array .
convert a char array to a byte array .
convert a string to a byte array .
prepare a split - array from a <unk> .
create a <unk> from a <unk> object .
store the fields of a field
/ * ( non - javadoc )
/ * ( non - javadoc )
generic method to get a scalar value for a given field .
gets the array representation of the matrix .
/ * <unk>
create a new { @link <unk> } object for a { @link <unk> } object .
print a float value .
add dimension to <unk> file .
/ * ( non - javadoc )
creates a new instance of { @link <unk> } .
normalize a path .
gets the x .
<unk> . <unk>
add a new { @link <unk> } to the explicit dataset .
add a dataset to the dataset .
add a collection of bytes to the file system .
/ * ( non - javadoc )
create a set of datasets .
get the final dataset for this dataset .
enhance a { @link dataset } object .
create a {
retrieves a resource control .
adds a point to the polygon .
sets the next indentation .
remove an entry from the list .
sets up the index of the line .
get the upper left corner of a point
get the value of a polygon
{ @inheritdoc }
/ * ( non - javadoc )
perform a foreach query by applying a filter to each element in the list .
merge all points in a {
gets the copy factory for the given feature .
this method is used to parse a serializable constraint object .
parse a resultset object .
analyzes a dependency .
/ * ( non - javadoc )
loads the properties of the cache .
prints the constraint constraint .
convert a <unk> group to a bundle .
performs the actual <unk> .
set the shared dimensions for the given groups .
returns <code > true< / code > if <code > <unk> / code > is <code > <unk> / code > .
returns the group with the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
initialize the {
parse the <unk> file .
/ * ( non - javadoc )
/ * ( non - javadoc )
******************* beginning of function ******************** //
sets the value of the <unk> property .
creates a new tab content panel .
returns the name of the name of a javascript name .
this method prints the entries of the <unk> .
paints the given <unk> .
fill the shape with the given shape .
adds a layout component to the constraints for the specified component .
print warning message .
/ * ( non - javadoc )
documentation inherited from interface
/ * ( non - javadoc )
returns the size of the target container .
returns true if <code > <unk> / code > is <code > <unk> / code > and <code > system . <unk> / code > .
/ * ( non - javadoc )
sets the maximum number of radial angles .
get the time unit .
the main method .
/ * [ deutsch ] <p > berechnet die position des <unk> . < / p >
this method sends the performance of performance report .
update the affiliation
launches the connection .
converts the given <unk> to geographic wsg84 data .
given an in - line ( x y ) coordinate of an ellipse .
returns the <a href = http : // en . wikipedia . org / wiki / <unk> > <unk> / a > <a href = https : // en . wikipedia . org / wiki / <unk> > http : // en . wikipedia . org / wiki / <unk> > http : // en . wikipedia . org / wiki / <unk> >
elliptical arc curve to the given coordinates .
translate a coordinates to an array of coordinates .
get a line of the specified element symbol .
elliptical arc curve to the given coordinates .
given the major and scaling of an axis this method converts the current model to an array of values .
calculates the rotation under the location of the exponential distribution .
process a scan geometry from a pair of scan coordinates .
convert a sweep angle to a <unk> string .
todo ( <unk> )
executes a script and writes it to the given output file .
writes the data of a { @link <unk> } to a { @link <unk> } .
main method to rewrite a feature file .
writes a {
add a fuzzy member to the variable . <p >
add a field to this variable . <p >
cast a value to a scalar value .
convert a fuzzy member to a float .
get the scalar value for the given member .
get the scalar value for the given member .
returns the member with the given name . <p >
returns the sequence sequence of the given member .
/ * ( non - javadoc )
/ * ( non - javadoc )
discover the location of the filesystem .
get the <code > <unk> / code > associated with this <code > <unk> / code > .
gets the <code > <unk> / code > for the given <code > <unk> / code > .
removes the tag .
gets the path of the <unk> .
gets the descendants of the <unk> .
get the modelservice .
get the access to parent queue .
get a { @link <unk> } object for the given vocabulary
/ * ( non - javadoc )
computes the projection of the specified projection from the given coordinates .
todo add unit test
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * <unk>
creates a list of <unk> .
/ * ( non - javadoc )
<p > returns an array containing all the coordinates contained in the specified array . < / p >
get the coordinate mask of the given coordinate
nonsymmetric classifier from hessenberg to <unk> .
get the x - axis from an array of doubles .
creates a copy of the <unk> response . <p >
calculates the quaternion .
returns the distance of the poi to meters for the given point .
returns the <unk> value of the given latitude
returns the distance between the two points .
computes the ps shape of the point in the projected lat / lon >
calculates the angle of the bounding box around the given point .
calculate the angle in degrees between the two specified coordinates .
<unk> upper bound
/ * <unk>
restricts the stemmer to the specified writer .
writes a pdf document to the document
the main method .
/ * ( non - javadoc )
opens a file .
/ * ( non - javadoc )
creates a { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
create a pharmacophore property .
add the global attributes to the global index .
get the names of the elements in the stack .
creates a list of variable variables for the stations .
internal method to convert java . util . arrays .
{ @inheritdoc }
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
unquote a string .
/ * private void <unk> ( <unk> > <unk> ) { if ( <unk> == null ) { <unk> = new <unk> () ; }
/ * ( non - javadoc )
/ * <unk>
/ * <unk>
parse a constraint .
<p > parser . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
downloads the contents of the specified input stream as a stream of bytes .
reads a chunk of bytes from the configuration file .
reads up to <code > len< / code > bytes of data from a byte array into a byte array .
receive a packet from the stream .
initialize the <unk> .
formats the date / time in yyyy - mm - dd t hh : mm : ss .
@deprecated use { @link #gettimemillis ( string ) } instead .
converts a { @link calendar } to a { @link date } object .
/ * ( non - javadoc )
/ * package private
<p > <unk> . < / p >
creates a list of records from the given file .
transfers data from the source file to the target location .
transfers a {
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link group } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> }
returns the file or null if it does not exist .
/ * ( non - javadoc )
reads the data from the {
/ * ( non - javadoc )
returns the index of the first occurrence of the specified character in the given array .
returns <code > true< / code > if the given character is a valid english letter .
replaces all occurrences of a character in the given string .
converts a string to an integer .
converts a string to a double .
get the next long value from a string .
convert a double to a number translator .
checks if the beginning of the beginning of the beginning of the beginning of the beginning of the string starts at the specified index .
returns the index of the last node in the past .
dssat <unk> .
create an index .
create a { @link <unk> } for the given { @link formatter } .
create a list of all atoms in the given chain .
/ * ( non - javadoc )
method to get the value of the edit value .
/ * ------------------------------------------------------------
gets the data type for the given format .
augments a dataset in a dataset .
solves the cubic problem .
<p > calcola am <unk> <unk> / p >
calculate the julian date between two points .
geodetic time time windows . <p > <em > note : < / em > the mean time is limited to hh : <ul > <li > <b > <unk> / b > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li
a faster implementation of <unk>
<p > obtains the value of the <b > <unk> / b > constant given a set of time . < / p >
compute the sine of the given ellipse .
adapted from <unk> . <unk>
/ * [ deutsch ] <p > formatiert die angegebene dauer . < / p >
remove system name from string .
<p > <unk> . < / p >
check if the max age is a valid age from a string .
scans the classpath for the given url .
creates a list of { @link com . <unk> . <unk> . <unk> . <unk> } from the given xml file .
returns the shape of the atom at the specified location .
optimize the projection
this method is used to get the projected projection
initialize styles .
rewrites the <unk> to <unk> <unk>
factory method to get the cancel var id .
a factory .
method to parse an enumeration .
/ * ( non - javadoc )
parse the arguments .
adds an entry to the table .
find the fringe with the given name .
refresh the auth token .
/ * ( non - javadoc )
main method .
returns the coefficients of the coefficients .
get the common parent of this group .
returns the name of the dimension .
get the index of the layer with the given name .
$non - nls - 1$
returns the { @link list } of all the { @link <unk> } s that are included in the section .
returns a new list of { @code <unk> } objects .
convert this { @code <unk> } to a { @code <unk> } .
returns a copy of the specified indices .
documentation inherited from interface
sets the {
read a section from the stream .
read a range of ranges .
<editor - fold defaultstate = collapsed desc = area >
/ * ( non - javadoc )
reads data from the cache .
recursive method to read a { @link <unk> } from a { @link <unk> } .
reads a { @link <unk> } from the given { @link section } .
reads a { @link <unk> } and returns it as a { @link <unk> } .
reads <code > <unk> / code > from the section <code > <unk> / code > .
creates a string representation of the name and dimensions .
returns the simple name and dimensions of this class .
get the pdb representation of the given stringbuffer .
<p > <unk> . < / p >
get the name of the file selector and dimensions .
returns a string representation of this node .
/ * ( non - javadoc )
sets the data type to be used by the input data .
<p > <unk> . < / p >
infer the shape of the shape
sets the dimensions of the { @link <unk> } .
reset the dimensions to the given dimensions .
set the identity of the given shape
sets the dimension of the dimension .
/ * ( non - javadoc )
loads data from cache .
returns a list of all dimensions of the given dimensions .
returns true if the class is a valid coordinate .
sets the bounding box of the score .
/ * package
adjusts the specified temporal object .
/ * ( non - javadoc )
checks if a file is a file extension .
connect to a <unk> .
records a leadership at a specific moment .
sets the <unk> to be used by the given <unk> .
record a collection of <unk> on the <unk>
method to be called by the <unk>
start a new <unk>
get all the {
creates a new { @link <unk> } object for the specified { @link <unk> } object .
create a protein sequence from a <unk> .
returns an {
rewrite an expression to a specific <unk> object .
find the {
create a <unk> displaying the specified location .
run a <unk> on a given database .
validate the session .
<p > <unk> . < / p >
prints the constraint constraint .
create a instance of { @code jaxbelement } { @code < } { @code <unk> } or { @code <unk> } .
this method scans the file looking for a snapshot of the specified number of bytes .
converts a <unk> message to a dataset .
process values .
creates the list of {
writes a {
this method is used to rewrite the data in a file .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an { @link iterator } that iterates over all the features in the given iterator .
returns a transform that can be applied to the specified slot .
paints the specified resolution .
set the transform area
calculates the zoom level of the given set rect .
converts a point from the world space to a screen location .
converts the specified point to the end of the end point .
converts a clipping point to a geoposition .
pan to the margin in <unk>
calculates the zoom level of the current screen
******************** private methods ***********************************
add a connection listener .
removes a listener from the list of listeners .
/ * ( non - javadoc )
<p > <unk> . < / p >
parses a command line .
parse a { @link <unk> } into a { @link <unk> } .
prints a stream to the specified output stream .
prints out all of the variables in the <unk> .
prints a { @link <unk> } to an { @link appendable } .
<unk> tag .
this method writes tag data to a string .
prints the structure to the given writer .
convert the box box box box .
write the specified array to the specified printwriter .
writes the given { @link <unk> } to the given { @link writer } .
<unk> - <unk>
get the factor of false - compressed scale factor .
read a matching attribute .
reads the sparse matrix attribute value .
add a parameter to the module .
/ * ( non - javadoc )
the main method .
obtains the list of operation uris for this dataset .
/ * package private
/ * ( non - javadoc )
formats a list of dataslices for a specific list of slices .
ensures that the destination of the specified destination is a partial me .
/ * ( non - javadoc )
creates a new { @link <unk> } .
/ * ( non - javadoc )
save the state of the data grid .
set the enabled state of the table .
tries to show the job graph .
redraws the waveforms of the monitor .
replies the parameter with the given record .
test if a record is positive or not .
gets the checksum of the given property .
<editor - fold defaultstate = collapsed desc = action >
creates a popup menu
converts the value of the given { @link double } to the given { @link unit } .
converts the given value expressed in the given unit to the output unit .
subtracts the given { @code unit } from this unit .
<p > <unk> . < / p >
initialize the {
returns a <code > list< / code > of <code > <unk> / code > that represent the given <code > name< / code > as a <code > <unk> / code > .
gets a list of lines of the specified file from the database .
returns a list of points in the given index starting at the specified index .
sets the next bit in the file .
read a <unk> in the dwg format .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
<unk> method .
execute a class .
*********************************************************************** <unk> () returns a string from a url .
generates a string containing the text contained in the input string .
locate an instance of a class .
/ * ( non - javadoc )
execute the api action .
execute the analyzer .
/ * ( non - javadoc )
performs a cross - transformation on the given projection .
/ * ( non - javadoc )
this method is used to draw the axis in degrees .
~ methods **************************************************************************************************************************************
this method returns the bounding box of the given point .
returns a list of { @link point } s of a given point
/ * [ deutsch ] <p > wandelt diese instanz in ein <unk> um . < / p >
reads the octet string and returns the tuple
checks if the { @link <unk> } is a { @link <unk> } .
generate a catalog s catalog name
returns a total time range for the given date range .
creates a <unk> instance .
deletes a recoverableunit file .
read the header .
/ * pp
/ * ==================================================================== private methods ====================================================================
authenticate a { @link <unk> } .
this method is used to handle the <unk> .
returns a string containing information about the header information .
reads the root node from the given reader .
returns a string representation of this value .
checks to see if the file is a valid file .
converts the iso - 8601 formatted string to a <unk> object .
add a <unk> attribute to the list of global attributes .
checks the format of the file .
reads data from the file .
read the data from the table .
convert a utf - 8 string into a utf - 8 string
returns the full url of an ce or url query .
converts a string to a utf - 8 string .
split a string into a backslash .
convert a string to a string .
write out one or more pharmacophore queries .
<unk> <unk> <unk>
set the value of the templates suffix .
print all the entities in the document .
print the text of the xml document to the output stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the {
find the start of a dimension .
reads the font information from the input stream .
reads a word from the byte array at the given offset .
convert a byte array to a long .
convert a byte array to a long .
writes a float value to the sortable int .
atomically sets the value of the specified double to the given value .
convert a string to an array of bytes .
convert an array of bytes to a byte array .
convert a long to a byte array .
/ * ( non - javadoc )
return a new array that is the union of two ranges .
open a new { @link <unk> } .
get the coordinate of the given axis .
/ * ( non - javadoc )
returns the coordinate converter for the given id .
write the last xml document to a string .
<unk> - document
/ * <unk>
reset the iteration .
parses the next token .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------- [ misc ] ---------------------------------------------------
returns the complete height of the resulting height of the model .
/ * ( non - javadoc )
performs the actual work of the task .
adds a list of <unk> to the beginning of the list .
/ * this method is used to get a list of <unk> from a list of records .
add the specified dimensions to the <unk> file .
get the dimensions of a jsonarray .
find the header transform .
gets the index of the attribute .
returns { @code null } if { @code <unk> } is { @code null } .
gets the user s local m2 directory .
prepare the root directory .
returns true if the log file exists .
check if the given file exists in the cache .
creates a log file for the given file .
get a file from the cache .
creates a temporary file with the given prefix and suffix .
open cache path
open the next file
<unk> - <unk>
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
calculates bearing from left to right
calculates the bearing from {
returns bearing from ( lat1 lon1 ) to ( lat2 lon2 ) in degrees .
compute the bearing between two points .
todo : move this to <unk>
an implementation of {
an implementation of {
returns the point on the input geometry .
compute the point between two points .
load an image from the specified image .
给图片添加文字水印<br > 此方法并不关闭流
generates a picture from the image .
/ * ( non - javadoc )
stop the loading .
return the size of the image .
/ * ( non - javadoc )
remove a listener
/ * ( non - javadoc )
set the image data for this image .
returns the {
make a {
locates the list of { @link copier } s in the list of { @link copier } s .
dd bit to <unk>
/ * ( non - javadoc )
gets the hash of the given objects .
reads a header from the given file .
loads the data from the stream .
returns the field with the given name .
get the double values of the specified type .
get the value of the dependencies property .
<p > <unk> . < / p >
get the name of the field .
returns an array of strings representing the names of the properties in this field .
the main method .
/ * ( non - javadoc )
extract an attribute from a <unk> .
/ * ( non - javadoc )
$antlr end <unk>
this method is called by the { @link <unk> ( <unk> ) } method .
sets the parent of the {
returns the escaped short name .
return a list of all child nodes in the root .
return a list of node nodes that match the given path .
/ * ( non - javadoc )
builds a path from a list of <unk> .
returns true if this object is a top - level object .
checks to see if the value of the given feature is a wildcard name .
this function adds radial variables to the map .
/ * ( non - javadoc )
computes the precision of a set of sets .
/ * ( non - javadoc )
writes the station factor matrix .
sets the value of a bean property .
replaces the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
replaces the value with the specified key in this map .
replaces the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
gets the value of the field with the given name .
returns the contents of the contents of the contents of the <unk> .
this method returns a collection of all nodes in the cluster .
override this method to filter out the required keys .
returns the { @link <unk> } associated with the given node path .
returns a child { @link <unk> } child with the specified name .
returns the value of the <code > name< / code > property as an <code > string< / code > or <code > null< / code > if no such property exists .
this method is called when a property is changed .
/ * ( non - javadoc )
get the value for the given key .
loads the data from the file .
extracts the raw data from the frames file .
this method reads the entropy of this cacheentry to a file .
this method is adapted from <unk> . <unk> () .
run the { @link <unk> } .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
prints a set of mean values from a json object .
/ * ( non - javadoc )
generates a json representation of a statement .
copy the contents of the given byte array to the given file .
write the contents of the given text to the given stream .
method write .
{ @inheritdoc }
/ * <unk>
make an array element of the given dimension .
create a new element with the given variable .
calculates the p - value of null hypothesis
collect the coordinate transform .
/ * ( non - javadoc )
{ @link <unk> }
/ * ( non - javadoc )
/ * <unk>
package - private for testing
the main method .
creates a unit binding for the given symbol .
check if the unit is available .
returns a clone of the current unit .
returns the <unk> .
creates and returns a new instance of the { @link <unk> } .
update the pipeline .
/ * ( non - javadoc )
convert the { @link dataset } to a { @link dataset } .
finds the coordinate of a coordinate .
computes the number of regular coordinates .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
find the children of a coordinate vector .
<unk> <unk> .
returns the range of the values in the given range .
gets the index of the given symbol .
@see boofcv . alg . filter . binary . <unk>
~ methoden ----------------------------------------------------------
get the subset of the specified range of values .
/ * ( non - javadoc )
gen - last : <unk>
/ * --- private methods ---
starts a {
/ * package
/ * filename
/ * package private
public only for testing
/ * ( non - javadoc )
recursively writes the nodes recursively
open a { @link <unk> } for a feature dataset .
create a new {
open a feature dataset .
open a dataset in a dataset .
/ * <unk>
annotates a dataset with a pre - existing dataset .
exports the image from the given { @link <unk> } to the given { @link dataset } .
returns the { @link access } object for the specified { @link <unk> } .
attempts to find the access license type from the list of { @link <unk> } s .
<unk> - <unk>
/ * ( non - javadoc )
read data from the file .
reads data from the file into a byte array .
get the binary data for this file .
read bytes starting from the specified file .
replies the <code > url< / code > of the <code > url< / code > .
assemble and return a string representation of the given set of parts .
/ * ------------------------------------------------------------
returns true if the <unk> is a <unk> attribute
method <unk> .
remove the duration units from the given units .
create a coordinate of a coordinate axis .
gets the dataset .
try to match the given path
/ * ( non - javadoc )
create an { @link <unk> } from an { @link <unk> } .
get the group
throws an exception in an exception .
load the notification .
removes the mapping for the specified key from this map if it is present .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
removes the element at the specified key .
/ * ( non - javadoc )
$antlr start ------------------------------
run a <unk> algorithm .
sets an object reference to an object .
/ * [ deutsch ] <p > interpretiert den angegebenen <unk> ; < / p >
returns true if the specified attribute is a special attribute .
~ methods ------------------------------------------------------------------------------------------------------------------
returns the stack trace of the given stack trace .
initialize the area .
checks if the file is a valid file .
reads a variable .
sets the attributes of the core area .
set the navigation block attributes .
returns the java source type information for the specified area .
returns the <code > <unk> / code > for the given <code > <unk> / code > .
configure the jms word type attributes .
/ * find the path of a node .
finds the coordinate of a coordinate based on the type of the type
factory method to find a coordinate based on the type of type <unk>
find a coordinate based on a type and a predicate
{ @link <unk> ( <unk> <unk> ) }
returns the best coordinate system for the given argument .
find the category data for the given axis .
/ * ( non - javadoc )
compiles the row .
print the doc declaration .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
print a list of messaging variables .
/ * ------------------------------------------------------------
returns the variable at the given index .
returns the name of the variable with the given name .
checks if all of the packages are satisfied .
gets the value of the print writer .
<p > <unk> . < / p >
this method receives a message from the server .
private method to deserialize the identities .
loads a marker from the input stream .
serializes the {
externalizes a {
/ * ( non - javadoc )
parses a svg document into a diagram
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
******************** private methods ***********************************
the main method .
returns the string representation of the given member .
invert the trace of this node .
******************** initialization ************************************
<p > the <unk> detected on the <unk> object . < / p >
move the currently selected coordinate .
renders the values of the {
set the {
/ * ( non - javadoc )
this method returns the angle in degrees of the form latitude and longitude .
returns the angle in degrees of the bounding box projected on the arc s coordinate .
serialize the given catalog into a xml { @link outputstream } .
write the xml model to a given output stream .
method <unk> .
adds the supplied rectangle to the bounds of this rectangle .
adds the supplied rectangle to the bounds of this rectangle .
unions the supplied two rectangles specifying the supplied rectangle .
check if the projection is inside this rectangle .
reconstitute the <tt > <unk> / tt > instance from a stream ( i . e . deserialize it ) .
save the state of the <tt > <unk> / tt > instance to a stream ( i . e . serialize it ) .
returns true if the two tiles are equal .
adds the given <code > <unk> / code > to the given <code > <unk> / code > .
/ * ( non - javadoc )
adds an alias to the template .
adds a new symbol to the symbol table .
<p > <unk> . < / p >
adds a new copy of the given alias .
returns the unit of the rule at the given id .
add a new { @link <unk> } to the map .
add a new unit defined by the given symbol .
add a unit to the map .
stores the resources in the given directory as a map .
adds the menu item to the menu .
returns true if the name is a global name .
<p > <unk> . < / p >
todo : move this to <unk>
this method extracts the next time from the file .
get the pixel value of the raster .
method <unk> .
/ * ( non - javadoc )
returns the values of the param values .
this method converts a compressed data address to a { @code short [] } array .
convert a { @link <unk> } to an { @link <unk> } .
calculates the destination .
returns the latlng of the given lat / lon in radians .
convert a lat / lon pair to a <unk>
adapted from <a href = http : // en . wikipedia . org / wiki / <unk> > <unk> / a >
read the xml file .
<editor - fold defaultstate = collapsed desc = visualization >
open a benchmark for a feature dataset .
open a benchmark for a feature dataset .
open a benchmark for a feature dataset .
include a dataset in a dataset .
gets the access dataset .
write out key / value pairs in xml .
this method reads the <unk> from the database .
convert provider to string .
attempts to resolve the access control list for the given type .
returns a new list containing all of the elements in the given list .
/ * ( non - javadoc )
/ * ( non - javadoc )
calculates the <unk> for a <unk> file .
/ * <unk>
create a <unk> that can be used to produce a <unk> implementation .
read the data from the file .
read a document from an xml file .
generates a {
convert the tree to a xml file .
write a query xml into a xml file .
write stats to a file .
main method .
sets the projection of the given projection .
get a clone of this object .
reads structure data from a <unk> object
/ * ( non - javadoc )
<editor - fold defaultstate = collapsed desc = image related >
prepare the coordinates in the given tolerance .
deletes the priority from the given priority .
updates the original image .
renders the content .
this method is called by the { @link <unk> ( <unk> ) } method .
<editor - fold defaultstate = collapsed desc = initialization >
scroll the relation to the right scale .
sets the status of the parameter .
paint the <unk> .
deserialize a picture message .
/ * [ deutsch ] <p > <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> . < / p >
returns the iso - 8859 - 1 value .
returns an array of strings representing a white space .
parse a trace expression
/ * [ deutsch ] <p > erzeugt ein neues <unk> kalenderdatum . < / p >
/ * ( non - javadoc )
write an int to a byte array
returns a string representation of the options in the given array .
get the priority of the specified locale .
calculates the hash value of an array of bytes .
/ * ( non - javadoc )
returns the string representation of the data type .
/ * ------------------------------------------------------------
copies all bytes from the input stream to the output stream .
print the properties of the given printstream .
this method writes the word to the given output stream .
gets the { @link <unk> } from the given { @link short } .
the main method .
/ * package
get the next image .
com . sun . <unk> . com / <unk> / <unk>
adds a vector to the pipeline .
search for the minimum element in the array .
adds an image to the image .
computes the overlap of the specified interval .
clear the grid .
/ * ( non - javadoc )
find the intersection of two gradients .
find the intersection of two gradients .
find the closest to the given point .
returns the closest to the grid at the given <code > <unk> / code > and <code > <unk> / code > .
returns the squared euclidean distance between the specified point and the specified index .
set the <unk> to use .
returns the path to the given url .
gets a bitmap from the given url .
evaluate the <unk> .
computes the tile <unk> .
/ * [ deutsch ] <p > liefert die <unk> . < / p >
example usage :
acquires a oldest collection manager lock on a collection of files .
verify that the specified key exists in the cache .
/ * ------------------------------------------------------------
converts a string to a dataset .
<p > <unk> . < / p >
creates a map of parameters from a string .
/ * ------------------------------------------------------------
decodes the given path and returns it .
create a <unk> --------------------------------------------
parses the deployment xml file .
returns the activation method for the given location .
creates a new service type based on the parameters .
/ * ( non - javadoc )
serialize a file
returns the fully qualified name of the given fully qualified name .
returns the fully qualified name of the given file name .
locates the contents of the given file with the given filename .
try to find a relative relative to a string
converts a path to a unix style path .
creates a new byte array from a byte buffer .
get a list of { @link <unk> } s for a given { @link <unk> } .
encodes the given path into a single path .
converts a list of { @link <unk> } s into a { @link <unk> } .
joins a string array into a string using the given separator .
checks if the given path is a relative path .
/ * ------------------------------------------------------------
given a list of { @link <unk> } objects this method will return a list of { @link <unk> } s that can be unloaded from the given list of slices .
return a list of { @link java . util . list } of all of the specified { @link <unk> } s in the given { @link <unk> } .
converts a long array into an index array .
converts an object to a list of slices .
returns true if all of the slices are contiguous
returns true if any of the slices are non - zero .
converts a list of { @link string } s into a { @link <unk> } .
/ * ( non - javadoc )
run the algorithm .
creates a { @link <unk> } from a { @link <unk> } .
make a document .
loads the content of a <unk> .
<p > <unk> . < / p >
produce an array of double elements from the <unk> array iterator .
sets the local station info .
sets the rate limit for the rate limit .
creates a new { @link <unk> } from an { @link writableraster } .
/ * ( non - javadoc )
loads a single data from a data store .
read the sub - file of the sentence .
sets the value of the field .
creates a { @link list } of { @link com . <unk> . <unk> . <unk> } from xml .
build a list of { @link com . <unk> . <unk> . <unk> . <unk> } from a catalog document .
add a new <unk> to a <unk> .
{ @inheritdoc }
returns the fully qualified { @link <unk> } of the given fully qualified name .
find a specific { @link <unk> } by its name .
compare two groups
notification of the attributes of the two lists .
/ * check for invalid values
checks that the lists are equal .
evaluate javascript interaction .
returns true if the given path contains any of the given names .
/ * ( non - javadoc )
belscript . g : <unk>
returns the subset of {
run the given <unk> algorithm .
given a {
/ * ( non - javadoc )
calculates the projection of the grid axis
returns the bounding box of this bounding box
this method calculates the boundary point of the given point .
returns a list of projection points of the specified projection .
calculates the lat / lon coordinates of the given points
returns a string representation of a 2d array of points .
sets up the default properties for c3p0 based on the properties defined in the properties file .
sets the { @link <unk> () timeout } of the underlying { @link <unk> } .
append a global compression .
add authentication credentials to the builder .
configure the {
removes the session id from the cookie store .
sets the maximum number of prefetched redirects . <p >
this method is used to determine if a redirects of a redirects are redirects .
sets boolean flag .
/ * ( non - javadoc )
leave authentication .
create a new { @link <unk> } .
negotiate the client and set the <unk>
returns a copy of the {
<p > <unk> . < / p >
<unk> <p >
configure trust store
dump the contents of a zip file .
add authentication credentials to the builder .
<p > <unk> . < / p >
creates a new { @link <unk> } .
this method is called from within the constructor .
create a new random { @link <unk> } object based on the given array of values .
compute the order of the strides in the specified shape array
gets the offset from the given array of indices .
converts a range of ranges into a cached array .
returns a new component that represents a component .
returns a cached {
returns the index of the image in the specified index .
applies the permutation of {
returns an iterator for the errors found in the given array .
returns the current value of the current value of the current value .
computes the gradient for the current element
sets the index of the element at the given index .
sets the value of the specified dimension .
/ * ( non - javadoc )
<unk> - <unk>
try to calculate an interval name based on the value of <unk> .
adds a date range to the calendar .
initializes the connection .
reads the entire list of { @link string } s and returns true if it is empty .
returns a <code > list< / code > of <code > <unk> / code > s as a list of <code > date< / code > objects .
returns a list of all the nodes in the date
/ * ( non - javadoc )
vars doc end
make a station .
adds a list of key - value pairs to the list of keys .
validate the <unk>
returns a list of dates with the date ( s ) of the date .
prints the failure information as a string .
prints a list of elements to a string .
finds the charging station index .
gets the type of the file .
creates an array of points .
set an array of { @link <unk> } objects .
/ * ( non - javadoc )
<p > <unk> . < / p >
get the constraint at the given text .
translates a sub - clause into a simplified clause .
collects all { @link <unk> } s of a given { @link <unk> } .
/ * package
/ * ------------------------------------------------------------
returns a json representation of the preview clause .
unquote a clause .
run the clause .
sets the mail vectors .
documentation inherited from interface
create an index in elasticsearch
create a new <unk> lock
/ * ( non - javadoc )
check if the scan is needed .
this method scans the first time field and returns the value of the first time .
set the debug flags to be used for debugging purposes .
adds a new variable to the end of the variable .
read a namespace from the stream .
/ * ( non - javadoc )
gets the atomic array for the given member .
get i18n xml string .
make a document .
main method .
write a data point to an outputstream .
validate the xml configuration .
returns a string representation of this object .
get all the {
sets the original variable to be equal to the specified variable .
this method reads a { @link <unk> } from the { @link <unk> } .
adds a <code > <unk> / code > to the given <code > <unk> / code > .
serializes the session attributes and returns true if needed .
generates a <unk> from a bean .
convert a structure object to a { @link <unk> }
get the {
gets the variable from the given name .
returns true if there are any members of the current scope .
enhanced <unk> .
/ * ( non - javadoc )
open a grid dataset .
/ * ( non - javadoc )
save post parameters to the request .
creates a new interceptor instance .
/ * ( non - javadoc )
{ @inheritdoc }
reads the data from the { @code <unk> } and returns a { @code <unk> } object .
parse the given section .
casts a sequence to a sequence .
helper method to create a sequence of { @link <unk> } s .
{ @link <unk> }
get the wait time statistics for each station
convert a list of <unk> to a sequence .
override dotag method
read the catalog .
helper method for retrieving host .
replies the <unk> associated with the given uri .
parses the given html string and returns the resulting document .
replies the <unk> attribute .
/ * ( non - javadoc )
main method of <unk> this method .
write the given catalog to the given outputstream .
copy the contents of the catalog to a file .
write the contents of the catalog to a xml file .
removes the mapping for the key .
/ * package
generates a <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
xor the input array .
/ * ( non - javadoc )
/ * ( non - javadoc )
writes a { @link geometry } to a { @link linestring } .
create a instance of { @link jaxbelement }
get the xml representation of a line
/ * ( non - javadoc )
<p > <unk> . < / p >
returns the value of a named attribute .
make a new <unk> .
get the children of the given node .
/ * ( non - javadoc )
recursive function to pass reserved properties of a node .
get the subset of a template literal .
convert a {
add a fuzzy member to the variable . <p >
convert a structure to a v8 array
read a polygon from the {
reads a line from {
reads a point from the {
get the geometry type
make a feature from a dataset .
traverses the expression tree .
parse a <unk> to a specific <unk> object .
recursively splits a set of points to a parent of an object .
sets the data optype
create a string representation of the given data type
create a new { @link <unk> } instance .
produce the next element from the given array iterator .
returns true if the two tiles are equal .
this method calculates the value of the specified latitude / longitude pair .
returns true if this color is contained in the specified range .
extend the bounding box with the <unk> .
extend the bounding box with the specified coordinates .
returns the intersection of this bounding box
convert the min / max value to hh : mm : ss
add a value to the array
compare two arrays .
gets the direction of the two arrays .
infer the shape from the given shape array
convert an object to a { @link <unk> } .
performs a deep copy of the given data type .
convert a value to an array .
copies the given array into the given array .
copies the given array into the given array .
copies the given array into the given array .
copies the given array into the given array .
copies the given array into the given array .
copies the given array of { @link java . util . <unk> } to the given { @link array } .
given a subject and a state make a copy of the given array .
copies the given array into the given array .
copies the given array of objects .
aggregates the min - max value .
sets the row at the given index .
returns the sum of all the edges in the array .
computes the sum of missing values in the two arrays .
returns an approximation of the scale of the missing data .
writes the given { @link array } to the given { @link array } .
gets the date instance .
$example off : <unk>
returns the value of the attribute with the given name .
returns the n - th attribute of the named attribute .
resolve the length of the alias .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
search for an attribute .
*********************************************************************** returns a cloned iterator that adds a new <unk> to this collection . ***********************************************************************
creates a new <unk> from a byte array .
returns the octet string for the specified state .
/ * ( non - javadoc )
create a new projection
convert a { @link latlng } to a { @link projection }
get a { @link point } object from the given { @link point }
{ @inheritdoc }
decodes a string .
url - decodes a url .
returns a valid url for the given url string .
returns a javascript function that escapes all characters in the given string .
/ * ( non - javadoc )
splits a string into a list of strings .
returns the index of the first occurrence of the given character with the given name .
convert a string to a string .
escapes a string as a json string .
/ * ------------------------------------------------------------
read a atomic list of slices .
/ * ( non - javadoc )
return the number of <unk> files in the specified <unk> .
calculates the size of a node .
sets the source position of the frame to the specified position .
returns a new { @link <unk> } with the given { @link <unk> } .
register work manager
adds the object to the file .
/ * ( non - javadoc )
returns a list of all the descendants of the given class .
get a { @link list } of all descendants of the specified type from the given { @link class } .
<unk> > <unk>
get a { @link list } of all descendants of the specified type from the given { @link class } .
returns a list of { @link jcomponent } s for the given { @link word } .
get the basename of a class .
/ * ( non - javadoc )
sets the value of a property .
<p > <unk> . < / p >
checks if the given component class loader is of the given classloader .
solves a set of instructions using a <unk> .
solves a <unk> for a given <unk> .
compile a <unk> object .
<unk> a {
run a <unk> algorithm
extract a checksum from a byte buffer .
sorts the examples of the given array into ascending numerical order .
reads a long from a byte array .
reads a number of entries from the network .
todo : explain
reads the { @link <unk> } and { @link <unk> } .
this method is called to add a change listener to the listener list .
<editor - fold defaultstate = collapsed desc = listener >
/ * ( non - javadoc )
returns the field with the given name .
<p > <unk> . < / p >
<p > set the value of the field with the specified name . < / p >
add a field to this listener .
adds a check field to the checkbox .
defines a date field .
adds a double field value .
adds a field to the specified field .
defines a user - defined field .
defines a field for the specified field .
adds a text field to the combo box .
adds a label and adds it to the end of the text area .
add a layout row to the layout .
add a widget to the layout .
adds an empty row to the end of the list .
<unk> - <unk>
/ * ( non - javadoc )
read a variable .
returns the spacing of the cell s spacing in the cell .
gets the factor graph .
computes the multiplication factor .
constructs a { @code <unk> } from the given { @code power } and { @code factors } .
determines whether this node is sufficiently random .
returns true if this set contains a range of dimensions .
creates an instance of { @link <unk> } .
notifies the listeners that the tree structure has changed .
notifies the listeners that the tree structure has changed .
notifies the listeners that a tree structure has changed .
/ * ( non - javadoc )
parses the response .
get the cache name from the cache .
returns an instance of versioninfo with the given segments .
create a <unk> for a table .
convert a dom element to a <unk> .
returns a <unk> for the given center point .
helper method to create a new { @link <unk> } .
renvoie la valeur de la propriété <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
converts an array of bytes to a derived unit .
convert the input to a derived unit .
checks if the file is a valid file .
opens a file .
create a new { @link <unk> } .
read a single data point .
******************* beginning of function ******************** //
this method is used to create a tileset variable based on a set of visible values .
add <unk> variable to the list of <unk> .
reads the descriptor and writes it to the expected file .
reads a descriptor from the given file .
returns the name of the database file .
returns true if the file can be read .
returns a short from the given byte array starting at the given offset .
read an int from the given byte array .
reads a float from the given byte array .
reads a double from the given byte array .
returns a boolean indicating whether the given name is a verbose state .
creates a new instance of <unk> .
creates a new instance of { @link <unk> } .
----- private methods -----
creates a new { @link <unk> } with the given alias .
----- private methods -----
main method .
/ * ( non - javadoc )
get the relative uri of the given relative uri .
convert a unit to a converter .
/ * ( non - javadoc )
this method is called to add a change listener to the list of listeners .
remove a change listener .
/ * ( non - javadoc )
/ * ( non - javadoc )
draws this shape with the specified colors .
is the point on the shape
marshall the given parameter metadata .
write the {
/ * create a <unk> for the given <unk> .
creates a double array for the given variable .
create lazy <unk> for a given coordinate coordinate .
concatenate data from a variable .
/ * ( non - javadoc )
reads a stream of bytes from the input stream .
reads a buffer from the input stream .
read a buffer from the input stream .
/ * ( non - javadoc )
{ @link <unk> }
reads up to <code > len< / code > bytes of data from this input stream into an array of bytes starting at offset <code > off< / code > .
skips <code > n< / code > bytes up to <code > n< / code > bytes of bytes <code > n< / code > .
/ * <unk>
populate the time dimensions
calculate the partial coordinates of a single coordinate .
get the <unk> normal .
checks to see if a record is in the list of records .
add dimensions to the <unk> file .
adds the precision recall to the <unk> file .
create the index for a point .
removes the tag from the file .
open the file
/ * ( non - javadoc )
/ * ( non - javadoc )
decompress an array of bytes from an array of bytes .
/ * create a <unk> for a list of data .
creates a tsuid object .
returns a deep copy of the iterators .
/ * package
sets the area of the map box .
classifies the areas in an area .
set the coordinates of the map box .
set the projection of the projection .
add a menu item to the menu .
initialize the contents of the frame .
/ * ( non - javadoc )
render a box repaint
documentation inherited from interface
<editor - fold defaultstate = collapsed desc = image related >
adds a transformation to the { @link <unk> } .
draws the screen size .
documentation inherited from interface
set the currently selected steps
ensures that the given type is final .
get a double as a double .
returns the parts of the object at the given index .
method to parse the object from the <unk> .
returns the name of the given type .
identify the atomic symbol for the given type .
<unk> :: = <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk> | <unk>
tuple :: = <unk> ( <unk> )
returns the utf - 8 encoded length of characters .
find parameter by name .
/ * ( non - javadoc )
returns the number of elements in this tensor .
parses the <unk> from the given input stream .
calculates the byte representation of the byte order .
/ * ( non - javadoc )
returns the file name of the given data file .
/ * ( non - javadoc )
gets the short name of the url .
checks if the given file is absolute or not .
add a <unk> to the list of <unk> .
/ * ( non - javadoc )
documentation inherited from interface
convert a { @link java . util . date } to a { @link localtime } .
<p > merge . < / p >
returns all the elements of the given array .
creates a tag from the file .
package private for testing
append bytes to the end of the array .
this method checks if the file is a valid jpeg file .
create a list of <unk> instances from the given array .
/ * <unk>
read a message from the file .
run the algorithm
format the <unk> image .
run the algorithm
renders the dimension .
renders a 32 - bit string into a byte array .
<p > <unk> . < / p >
parses a { @link <unk> } from a { @link bytebuffer } .
loads a { @link semanticspace } from the given { @link bytebuffer } .
/ * ( non - javadoc )
adds the specified attribute patterns to the map .
convert a byte buffer to a string .
loads a ppm image .
<p > <unk> . < / p >
get the levels of the matrix multiplication .
initialize the matrix .
get the levels of the histogram in the <unk> array .
get the multiplication of the matrix .
create a new variable
create a new variable with the given name
gets the position of the tensor .
adds a radial type to the image .
/ * [ deutsch ] <p > erzeugt ein neues <unk> der <unk> checksum . < / p >
decode a base64 - encoded string .
reads the content of an im packet .
adds a guid to a guid .
compare two polygons
converts a base64 encoded string to a byte array
adapted from {
converts a byte array to a byte buffer .
read a single character .
converts a byte array to a hex string .
/ * see https : // github . com / <unk> / <unk> / blob / <unk> / <unk> / <unk> / <unk> . gz
visualizes a namespace code .
return a value for a particular code
visible for testing
visible for testing
/ * ( non - javadoc )
----- private methods -----
generate a new <unk> .
loads a <unk> object .
invokes matlab to run the lpp script .
add the common request headers to the request .
returns a {
/ * ( non - javadoc )
create a <unk> from a serialized object .
this method is called when a new object is created .
returns true if the anchor point is inside the image .
draw the text at the specified coordinates .
ends the end of the specified path .
clears the image .
gets the bounds of the path .
returns the last norm of the path .
creates a { @link java . util . date } instance for the given text .
converts a string to a standard date format .
converts the specified text to a long format .
converts a string to a datetime object .
converts the given text into a long object .
converts a string to a date and converts it to a long .
converts a date to a string . if the given date is <code > null< / code > the default format is returned .
replace all the data variables in the given class .
gen - last : <unk>
rounds a number to integer .
/ * ( non - javadoc )
loads a { @code int } value from the file .
deserialize a { @link randomaccessfile } to bytes .
reads the bytes from the file into a byte array .
reads a random number of bytes from the file into a byte array .
reads the bytes from the file into a byte array .
reads a double value from the file .
<p > returns the value of a <i > int< / i > input . < / p >
reads an encoded file .
count the number of bits in a byte array .
{ @inheritdoc }
calculates the inverse .
<unk> - <unk>
get the scale to the specified tile coordinate .
/ * [ deutsch ] <p > berechnet die position des <unk> zum angegebenen <unk> . < / p >
calculates the bounding box of the bounding box
convert the normals back to cartesian coordinates .
convert the arc from to a <unk>
escapes a string according to the following production rule : http : // www . w3 . org / tr / rec - xml / html / html / html / xml - entities . html
escape a string to escape characters .
unquote a string .
splits a string into a list of strings .
removes all comments from the given string .
get the diff .
create a <unk> for a collection .
/ * ( non - javadoc )
normalize a path .
/ * ------------------------------------------------------------
returns the number of elements in this vector .
adds a variable to the samediff instance .
get the atomtype with the given index .
checked vs .
this method prints out the notation of a type declaration .
externalizes a {
returns the components of this language based on the current settings .
figure out whether or not the history of the given <unk> is currently defined .
removes the <unk> object from the grantee .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
add a template to the list of nodes .
returns a { @code date } object representing the reference time of the month .
receive notification of cdata .
writes the given index to the given file .
initializes the lucene index .
/ * <unk>
pad an index file .
returns the canonical file file for the given path .
method to determine if a file is a version file .
/ * --- private methods
returns the axis type of the gauge .
opens a file .
adds the given <code > section< / code > to the given <code > <unk> / code > .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * private void <unk> ( string data ) {
fix a <unk> .
<p > <unk> . < / p >
finds a method with the given name .
<p > <unk> . < / p >
sets the value to the specified value .
copies all the values from the source map to the specified map .
externalizes a { @code byte [] } array to a byte array .
adds a new coordinate system to the list .
/ * ==========================================================
set the {
<unk> > 动态增删不会持久化到词典文件
/ * ( non - javadoc )
run the <unk> algorithm .
<p > <unk> . < / p >
reads the catalog and returns it .
process a <unk> .
/ * ( non - javadoc )
<unk> - <unk>
get the <unk> between two lat / lon pairs
todo : move to <unk>
converts a lat / lon coordinate to a string
/ * ( non - javadoc )
/ * ( non - javadoc )
simple test code
returns the selected range of the selected resource .
$example off : <unk>
create a tree path from a tree model .
opens the tree panel .
sets the server - side catalog .
set the catalog .
simplify the tree .
/ * ( non - javadoc )
/ * ( non - javadoc )
find alias .
writes an integer .
writes an int to the output . smaller values take fewer bytes . negative numbers are not supported .
writes a long value to the output stream . smaller values take fewer bytes . negative numbers are not supported .
write a string to the stream .
returns utf - 8 encoded strings for the utf - 8 encoded string .
read a utf8 encoded string
read characters into a string .
read the data from the stream .
sets the debug flags to be used for debugging purposes .
/ * ------------------------------------------------------------
returns a { @code <unk> } optimization .
/ * ( non - javadoc )
adds a member to the list .
hides the member .
gets the names of all the job names .
returns the members of the given member .
loads the bytes from the file into a byte array .
restores the state of the model from the model .
save the state of the benchmark .
gen - last : <unk>
gen - last : <unk>
/ * ( non - javadoc )
scrolls the given row to the given row .
sets the member data .
returns an array containing the members of this member .
/ * ( non - javadoc )
returns a double array containing all the features in the given array .
returns the value belonging to the given field as float
returns a float array containing the java primitive float array .
returns the byte representation of the given member .
returns the byte array representation of the given member .
returns the int value for the given member .
gets the java array for the given member .
/ * [ deutsch ] <p > liefert die <unk> short shorts . < / p >
/ * ( non - javadoc )
returns the value belonging to the given field as long
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a char array containing all of the java members of this member .
/ * ------------------------------------------------------------
returns the { @link <unk> } representation of this { @link dataset } .
method to write a dataset entries to a file .
method to send a data dataset to a dataset .
creates and returns a new { @link <unk> } .
insert a itemized list into a list .
creates a new dataset from a dataset .
transfers the given { @link <unk> } to the given { @link <unk> } .
inherit metadata from a {
access the current <unk> .
add a product to this screen .
adds the extra attributes to the given {
given a file in the given file .
---- helper methods
show missing values
find the missing summary .
returns a record for a given amount of time .
<unk> - <unk>
/ * ( non - javadoc )
/ * public static void <unk> ( string <unk> ) { try { <unk> . <unk> () ;
get the default implementation of the given class .
[ variable <unk> ]
get a { @link <unk> } instance for the given { @link <unk> } .
creates a default { @link <unk> } instance .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of the <unk> rule .
gets the coordinate of <code > <unk> / code > .
get the { @link <unk> } for the given { @link <unk> } .
{ @link <unk> }
deserialize a bloom filter .
save the state of this <tt > <unk> / tt > instance to a stream .
loads the bytes of the file in the raf .
compare two byte arrays .
for debugging .
auto - widen the scalar attribute .
sets the context s context mode for a given <unk> .
create a sparql {
process a measure algorithm .
validate the session .
converts a date string to a date using the specified locale .
converts a date string to a date using the specified pattern .
<unk> <p > <unk> <p > <unk> <p > <unk> <p > <unk> <p > <unk> <p > <unk> <p > <unk> <p > <unk> <ol > <li > <code > <unk> < / code > < / li > <li > <code > <unk> < / code > < / li > <li > <code > <unk> < / code >
converts a date string to a date format .
converts a date string to a date using the specified pattern .
validates a string against a regular expression .
returns the angle in degrees of the form latitude and longitude in degrees .
replies the observations of the specified point .
add a list of coordinates to the <unk> .
unquote a string .
open the file
reads the data from the file .
read compressed data from the supplied { @link <unk> } object .
reads a line from the file .
sets the standard deviation for the given color identifiers .
******************** methods **
parses the given { @link <unk> } into a { @link <unk> } .
parse a { @link <unk> } and return a { @link <unk> } object .
returns a string representation of the partition spec .
checks if the given { @code <unk> } contains the given { @code <unk> } .
returns true if the line contains a lines .
loads the <unk> in a vector .
returns true if there is a symmetric matrix .
read a coordinate transform .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
generates a <unk> for the given <unk> .
run the algorithm .
given a { @link <unk> } and a { @link <unk> } returns a { @link <unk> } object .
generates a facade for a data set .
returns a { @link <unk> } for the given { @link <unk> } .
/ * <unk>
used by <unk>
create an evaluator for a given <unk> .
creates a table configuration given a digital object .
generates a table out of a list of dimensions .
/ * <unk> <unk>
/ * ( non - javadoc )
match axis type and dimension .
this method splits the input stream into the given stream .
/ * ( non - javadoc )
gen - last : <unk>
/ * ( non - javadoc )
convert a string to a string .
/ * package private
returns null if the string is null or empty .
concatenates a prefix and suffix with the given suffix . <p >
replies the escaped version of the given string .
<p > <unk> . < / p >
returns true if the given uri is an absolute uri .
convert a path to a property name .
/ * ( non - javadoc )
<unk> <unk> <unk>
copies the <unk> from the given <unk> .
returns a list of all superclasses in the directory .
sets the index of the index file .
/ * ( non - javadoc )
/ * ( non - javadoc )
closes the file .
this method is used to write out the command line parameters .
/ * ( non - javadoc )
creates a new instance of the { @link <unk> } .
create a new <unk> based on the location of the file .
sets the dimension of the dimension .
/ * ( non - javadoc )
rename dimension .
{ @inheritdoc }
adds a new namespace
sets a global attribute .
remove an attribute from the global namespace .
rename an attribute .
adds a {
<p > <unk> . < / p >
associate the given variable with the given variable name and returns the newly created variable .
create a new variable with the given name
sets the name of the variable .
/ * ( non - javadoc )
add a unique attribute .
adds an attribute to the variable .
delete an attribute .
renames an attribute .
/ * ( non - javadoc )
initialize the <code > <unk> / code > instance .
/ * ( non - javadoc )
writes the given array to the given array .
/ * ( non - javadoc )
write string data to json array
reverse operation .
closes the stringreader .
returns a new variable with the given name and type .
writes the specified { @link <unk> } to the specified { @link <unk> } .
initialize the <unk> .
sets the <code > <unk> / code > for the <code > <unk> / code > .
prints a qr matrix .
the main method .
write the preamble to a writer .
/ * ( non - javadoc )
creates a string representation of this i18n application .
creates a string representation of the given wirefeed .
creates a new instance of <unk> .
creates a new { @link document } object from the current { @link <unk> } .
the main method .
parse an <tt > <unk> / tt > from an <code > inputstream< / code > .
@throws ioexception malformedurlexception
reads a sequence of bytes from the specified buffer .
/ * ( non - javadoc )
writes a chunk of record to a record .
close the file .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new projection
get the x and y coordinates from the { @link latlng } and { @link <unk> }
/ * run hdfs
adds an observer to this <unk> .
schedule tasks .
returns <tt > true< / tt > if this {
<p > removes the last node from the array . < / p >
returns a new range with the specified range .
returns the byte at the given index .
returns the index of the given { @code <unk> } .
@see <unk> ( string )
returns a {
apply a range transformation to the range of the <unk> .
create a union of two arrays .
get the index of the first element in the image .
<! -- start generic documentation -- >
returns all the elements of the given array .
reads data from the file .
read data from the table .
write image data to the given array .
gets the *************************************************************************
desirialize a component .
/ * ( non - javadoc )
writes the given value to the output stream .
seek to the given image .
returns a new { @code <unk> } instance for the specified { @code map } .
create a new array <p > stack : ... = &gt ; ... arrayref
returns the list of catalog methods on the given class .
{ @inheritdoc }
loads a file from a remote file system .
{ @inheritdoc }
deletes the old backups .
set the values of the parameters .
set the parameters to the <unk> .
writes a grid folder to a folder .
get the bounding box
removes the coverage data array from the array
checks if the lat / lon coordinates are in the lat / lon coordinates .
a small helper method to get a {
converts a lat / lon pair to a rectangle .
convert from lat / lon coordinates to lat / lon coordinates
/ * ( non - javadoc )
converts from from to lat / lon coordinates
returns true if l1 and <unk> are positive and negative infinity .
converts an array of ints to an array of doubles .
get a dataset .
<p > <unk> . < / p >
validate the collection of { @link <unk> } s .
checks if the given array of { @link <unk> } s are valid .
factory method for creating a { @link <unk> } from the given { @link <unk> } .
this function returns the scale factor of the map .
get the bounding box of the projection
find the angle in the given { @link <unk> } as a { @link point } .
/ * ( non - javadoc )
<unk> upper bound
get a frame with the given name .
see https : // github . com / <unk> / <unk> / issues / <unk>
/ * example :
depth - first initialization .
returns true if all of the registered { @link <unk> } s are visible .
this method is the same as {
override this to finish setting up the <unk> .
gen - last : <unk>
/ * ( non - javadoc )
get the metadata header of the given node .
this method is called by the <unk> to attach a <unk> to the <unk> .
{ @link <unk> } .
get a list of contributors from a list of <unk> objects .
add a new { @link dataset } to the dataset .
sets the { @link <unk> } for the given { @link dataset } .
creates a real feed from a dataset .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > the <code > <unk> / code > method . < / p >
remove the local <unk> from the local <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
resolve the href attribute of the uri .
/ * ( non - javadoc )
similar to {
this method returns true if the dataset is a valid dataset .
returns a list of all available descriptors for this descriptor .
******************** initialization ************************************
returns a log reader for a multimedia file .
returns the path to the server .
this method is used to get the capabilities .
builds a feature object from a dwg file .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
<p > <unk> . < / p >
/ * ( non - javadoc )
<unk> > <unk>
creates a string representation of the given {
gets the file .
returns <code > length< / code > bytes
returns <code > <unk> / code >
<pre > http : // www . w3 . org / protocols / rfc2616 / rfc2616 - <unk> . html > <unk> / a > < / p >
gets the path to the class path .
<p > create a new <unk> object . < / p >
<unk> a new {
return the point at the given index .
normalize a directory path .
write a static resource to the response . <p >
process a request .
serves a file as a file .
handle static resources .
sets the length of the response to the given { @code httpservletresponse } .
/ * ------------------------------------------------------------
flushes the { @link <unk> } s from the { @link httpservletrequest } .
get the server port from the request .
/ * ( non - javadoc )
returns the full url of the request .
returns the full url of the request .
returns the value of the specified url parameter ignoring case - insensitive comparison .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
print all threads to the specified print writer .
/ * ( non - javadoc )
gen - last : <unk>
factory method for creating a { @link jdialog } object .
process a get request .
returns the pixel value for the given storage .
produce the next element for each element of the array .
create a instance of { @link jaxbelement }
method to initialize a date position position .
initializes the { @link <unk> } .
<p > initialize the final fire time position . < / p >
checks to see if the refinements are correct .
{ @inheritdoc }
create a new { @link <unk> }
counts the number of elements in the list .
init table .
extract a line from the archive .
/ * ------------------------------------------------------------
adds a string to the constraint .
creates a jframe with a jcalendar window .
find or create a <unk> for a given name .
creates a list of { @link document } s in the given { @link <unk> } .
extracts the capabilities from a pdf document .
<! -- start generic documentation -- >
produce a single { @link <unk> } from a byte array iterator .
returns the value at the specified absolute { @code index } in this buffer .
returns the record at the specified dimension .
get the coordinate at index
create a new <unk> .
add an item to the list box .
creates a new { @link arraylist } of files .
returns the random password of the element in the matrix .
/ * ( non - javadoc )
returns the n th element in this formula .
returns the total number of samples in the group .
/ * ( non - javadoc )
returns a new index with the given index removed .
/ * ( non - javadoc )
parse the loggers .
set the value of the <unk> property .
writes a single index to the file .
get a {
extracts { @link <unk> } from the configuration file .
read a sequence of {
returns a list of <unk> for a <unk> .
gets boolean .
create a { @link <unk> } for the given { @link <unk> } .
checks if the given url is a <unk> endpoint .
/ * ( non - javadoc )
marshall the given period object .
create a <unk> on the specified base number .
create a <unk> from a <unk>
copy the contents of a { @link inputstream } to a { @link outputstream } .
this method copies the contents of the given { @link filechannel } to the given { @link writer } .
copy the contents of the given input stream to the output stream .
reads the contents of a stream into a string .
create a byte buffer from the given input stream .
writes the contents of a byte array to an output stream .
copy the contents of the given file to the given file .
copy the contents of a file to a file .
copy the contents of a byte array to a file .
copy the contents of the given input stream to the given output stream .
copy the contents of the given file to the given file .
copy the contents of the { @link inputstream } to a { @link <unk> randomaccessfile } .
copy the contents of a directory to a directory .
read the contents of the file .
this method converts a xml file to a json string .
writes the contents of the given file to the given file .
writes the contents of the given byte array to the given file .
writes the contents of the given string to the given file .
writes the contents of the given { @link inputstream } to the given { @link file } .
copy the contents of the url to the given url .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
configure the <unk> request .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
method <unk> .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
wait for the request to finish .
/ * ------------------------------------------------------------
<p > <unk> . < / p >
returns the memory used in memory usage .
/ * ( non - javadoc )
returns a copy of this date - time as a { @code localdatetime } .
<unk> - <unk>
/ * ( non - javadoc )
creates a n - gram dictionary from the specified section .
opens a new file pointer .
parses the given xhtml text into a { @link <unk> } .
creates a list of <unk> objects .
trim characters from the input string .
wrap a string in a stringbuffer .
converts a byte array to a hex string .
trim the given string .
converts a string to a quoted string .
convert a string to a valid <unk> object .
returns the longest difference between two strings .
pad a string to a string with the desired length .
convert a string to a string .
removes all occurrences of a character from the given string .
returns a string with all spaces in a string .
removes the first occurrence of the specified character from the given string .
strip whitespace from the input string .
<p > <unk> . < / p >
replace all occurrences of a character in the given string .
replace all occurrences of a character in the given string .
adds a string to the string .
<p > <unk> . < / p >
replace the given string with the given replacement string .
convert a string to a string .
/ * perform an unescape operation based on a string .
replace all the occurrences of variables in the given array with their matching values .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
replace all the characters in the given string buffer .
<unk> - <unk>
remove all trailing whitespace from the specified string .
classorinterfaceorenumdeclaration = modifiersopt ( classdeclaration )
/ * ( non - javadoc )
builds a string representation of the exception stack .
add a state to the state machine .
update disk state .
given a { @link set } of { @link <unk> } s return the full datasource name .
make a catalog top catalog .
$example off : <unk>
gets the grid dataset as a grid dataset .
get <unk> dataset .
register a file .
/ * ( non - javadoc )
returns { @code true } if { @code n } is { @code true } .
/ * public void <unk> ( <unk> node ) {
build the matching templates .
/ * ( non - javadoc )
/ * ( non - javadoc )
reads a summary of a puppet node .
/ * ( non - javadoc )
/ * public static void <unk> ( <unk> > <unk> ) { <unk> . <unk> () ;
rename the {
<p > a list of datasets . < / p >
<p > a list of datasets . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
returns the first part of the string .
gen - last : <unk>
{ @link <unk> ( string ) }
this method builds the body of a csv file .
this method builds a list of <unk> objects .
make a deep copy of a structure
parse a structure into a byte array .
parse a structure into a byte array .
creates an { @link <unk> } from an { @link <unk> } .
parse a structure with an <unk>
acquire a typedesc from a structure .
/ * <unk>
return a new coordinate array section of the given range .
gets the names of all the named objects .
/ * ( non - javadoc )
<p > <unk> . < / p >
construct the <unk> .
get the list of all features in the node .
performs the actual work of the task .
generate the default tables
writes the nested tables in the specified <code > <unk> / code > .
convenience method to get a copy of the root node .
read options .
returns true if the file is a valid file .
opens the remote file .
opens a new { @link <unk> } .
/ * ( non - javadoc )
<! -- start generic documentation -- >
produce the next element from the array iterator .
produce a jsonobject of json objects from the given array iterator .
returns the value at the specified absolute { @code index } in this buffer .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> > <unk>
/ * ( non - javadoc )
locate the <unk> .
/ * ( non - javadoc )
override dotag method
prints the help page .
returns true if the specified <code > <unk> / code > is specified by <code > <unk> / code > .
returns an array of { @link double } objects for the given type .
convert a byte array to a long .
convert a byte array to a long .
reads a word from the byte array at the given offset .
end <unk> .
/ * ( non - javadoc )
returns the name of the variable with the given name .
returns the variable with the given short name .
returns the { @link group } with the specified name .
documentation inherited from interface
/ * ------------------------------------------------------------
<p > the user attributes . < / p >
find the {
merges this group with another group .
returns true if this node is a ancestor of this node .
<unk> - <unk>
sets the parent of this node .
adds a dimension to the dimension .
adds a dimension to the list of dimensions .
<p > <unk> . < / p >
remove an existing {
adds a variable to the parent class .
removes the specified dimension .
removes the specified { @link group } from this { @link group } .
closes the server .
removes the dimension of the given dimension .
returns the name of the variable with the specified name .
build an immutable copy of the subset of this group .
/ * ------------------------------------------------------------
render the set of attributes .
helper method to change the name of a parameter .
unzips a file name to a human readable table .
d366807 . 3
method <unk> .
set mbean attributes
adds a textual representation of this element .
creates a new { @link <unk> } with the given name .
/ * expression evaluator for <unk> ()
returns the { @link <unk> } identified by the given name .
locate a stack with the specified name .
parse the xml from the given input stream .
/ * ( non - javadoc )
initialize the recordowner .
gets the path to the given printstream .
resolve aliases for a given mode .
/ * ( non - javadoc )
resolve the alias attribute .
checks if the given { @link <unk> } is a { @link <unk> } .
generates a canonical form of a string .
creates a vector of tokens from a string .
this method is used to write out the command line parameters .
generates a proxy for the given element .
returns the body of the body of an attribute .
resolve the arguments for a given jingle table .
/ * <unk>
check that app name looks for an attribute
returns a string representation of this object as a string .
get the html representation of this object .
locate the <unk>
export a file to a file .
create a <unk> .
run the algorithm
{ @inheritdoc }
replace missing values
replace missing values of missing values and scale them .
get the longitude location of the longitude latitude and longitude .
write a single grid array .
/ * ( non - javadoc )
/ * ( non - javadoc )
<! -- start generic documentation -- >
returns a dnskey record from a publickey
produce an array of elements from the given array iterator .
get the value at the given index .
/ * ( non - javadoc )
/ * package private
factory method to create a new { @link <unk> } for the given { @link <unk> } .
create the top index file from the config .
read buffer .
loads a <unk> from a file .
loads a <unk> from the specified file .
verify whether or not the image is a collection .
update <unk> collection
update the collection type for the collection
/ * ( non - javadoc )
/ * ( non - javadoc )
----- private methods -----
create a <unk> from a collection of <unk> .
creates a datasource from the specified file .
/ * ( non - javadoc )
todo : <unk>
creates a new <unk> from the given index file .
/ * ( non - javadoc )
checks whether the given url matches the given url .
adds a <unk> to the cache .
find the object with the given key and url .
/ * package
*********************************************************************** <unk> () returns a list of all the <unk> of the ffmpeg project . ***********************************************************************
returns the top - level attachment of the triple .
prints the constraint constraint .
return a list of datasets .
$example <unk> : <unk>
sets the projection to the provided projection
gets the shapes associated with this image .
add the linux shapes to the map
----- interface <unk> -----
/ * ( non - javadoc )
scans for the leaf of the specified sub - directories .
/ * <unk>
create a partitioned table index .
converts a <unk> to a <unk> .
<unk> method .
$example off : <unk>
returns a {
convert a { @link <unk> } to a { @link <unk> } .
add new hosts to a topology
/ * ( non - javadoc )
returns true if this script is compatible with another dewey number .
creates a coordinate { @link <unk> } that corresponds to the provided { @link <unk> } . <! -- begin - user - doc -- > <! -- end - user - doc -- >
<p > <unk> . < / p >
creates a {
create a set of { @link <unk> } .
convert a multilayernetwork to a proto type .
/ * <unk>
sets the value of the pixel at the specified index .
returns the pixel value with the given index .
calculates the array representation of the array
sets the member array .
extracts the members of a member array .
copy the split
returns the scalar value for the given field .
convert a object to a float
cast a object to a double value
convert a base image to an int .
set the non - stroking color in the <unk> color space .
returns the byte byte value for the given member .
converts a short member to a short .
returns an array of character indices for this member .
f743 - <unk>
returns the indices of the indices in the index .
returns an array of {
converts an array of objects to an array .
returns an array object for the given member .
/ * ------------------------------------------------------------
pre - computes sin ( cos ( degrees ) cos ( cos ( cos ( cos ( 0 )) around cos angles ) . )
todo : implement <unk>
converts an object of type <code > <unk> / code > to an object of type <code > <unk> / code > .
get the java size of a { @link class } .
get byte from raw binary representation .
clamp values .
extracts the path descriptor from the data path .
returns the value of the tag with the given id .
print a projection to a mesh
evaluates a comparator to evaluate a comparator .
/ * ( non - javadoc )
create a new {
returns true if the specified <unk> object is associated with a specific <unk> .
/ * ( non - javadoc )
return true if the given object matches the specified <unk> .
returns the id of the given variable in the given {
checks if a block is a { @link <unk> } .
gets the states of the given states .
checks to see if any of the states of a block has a specific <unk> .
get the avg of a field in a list of { @link simplefeature } s .
formats a list of dataslices for a given list of dataslices .
formats a list of segments of the specified object .
prints the {
identify additional groups .
{ @inheritdoc }
report an error .
<unk> > <unk>
convenience method for { @link <unk> ( object ) }
returns true if the file is a valid snapshot file .
gen - last : <unk>
creates the system actions .
/ * ( non - javadoc )
get an instance of <unk> .
initializes the tag .
/ * ( non - javadoc )
returns the byte order of the specified stream .
calculates the byte order of the files .
method <unk> .
/ * ==============
returns the headers of the given set of headers .
slow - path - extract part
the main method .
returns the key for the given key .
find a header with the given name .
/ * ( non - javadoc )
prints the parts of the list .
gets the filenames associated with the given name .
returns the part of the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
reads the specified number of bytes from the specified byte array starting at the specified offset .
/ * ( non - javadoc )
/ * ( non - javadoc )
reads the manifest .
/ * ( non - javadoc )
returns a {
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
returns a string representation of the given { @code binary16 } value .
write all the data for a given channel
writes <code > mlarrays< / code > into <code > <unk> / code > .
writes the given { @link <unk> } to the given { @link <unk> } .
locate the <unk> .
/ * ( non - javadoc )
refresh the base element
output array .
implementation of <unk>
parses the grid element .
write the signature of the tab .
/ * ------------------------------------------------------------
creates a base type factory .
parse a list of attributes .
parse aliases .
escapes the characters in a string .
create an instance of { @link <unk> } .
/ * ( non - javadoc )
deeply replicates a list of {
write the compound names to the specified node .
generate permutations of the permutations of the permutations .
/ * ( non - javadoc )
/ * <unk>
/ * ( non - javadoc )
/ * ------------------------------------------------------------
checks to see if this file is a valid file .
<p > <unk> . < / p >
reads the data from the given { @code <unk> } .
read the standard data .
read the ship type .
returns the current location of a file .
build the standard wait file for each station .
creates the list of <unk> factors .
returns the median of two <code > float< / code > values .
<p > returns the maximum of two <code > double< / code > values . < / p >
relative difference between two numbers .
checks if two float numbers are equal .
compares two byte arrays for equality .
similar to {
package private for testing
/ * package private
determines the proto type building proto .
creates a <code > <unk> / code > object .
convert a { @link <unk> } to a { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
compute the lpc sorting .
main method .
externalizes a {
check if the given variable is still valid .
return the best position for the specified time .
convert from lat / lon coordinates to a projection
convert a { @link latlng } to a { @link point }
transform from a { @link float [] } array .
<unk> upper bound
returns true if the given tolerance is positive or negative .
converts from latitude to longitude coordinates
converts a projection to a rectangle .
display the debug page
get the capabilities of the diff
set 64 - bit data
waits for the time series time .
create a map of attributes from a list of attributes .
<p > split . < / p >
/ * ( non - javadoc )
reads a numeric value .
iterate through the given formatter
parse a base64 encoded string .
packs the values into values .
<p > fills the array with the specified values . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
generate a path id
/ * get the sub - directory path for the given <unk> .
add the given <unk> to the <unk> .
serialize a {
schedules a write operation .
<p > xml . < / p >
convert a {
gen - last : <unk>
evaluate the <unk> .
documentation inherited from interface
/ * ( non - javadoc )
create the gui and show it . for thread safety this method should be invoked from the event dispatch thread .
creates a jframe with a {
create a <unk> from a <unk> .
/ * ( non - javadoc )
/ * package
checks if the given areas are lesser or equal to the specified areas .
get the axis based on the type of axis .
gets the <unk> tag .
returns a projection that projects the projection to the provided projection
checks if the current projection is a projection of the current projection .
returns true if the given coordinate is within the bounds of a coordinate .
checks if a subset of the given set is a subset of the given subset .
check if a { @link <unk> } object contains the given { @link <unk> } .
check if the given collection of labels contains the given axis .
checks whether the given list contains a domain .
returns true if this {
check to see if this axis contains a certain axis type .
creates a new { @link <unk> } .
get a clone of this node .
handle a <unk> .
https : // github . com / <unk> / <unk> / blob / master / src / main / java / org / jvms / org / drools / compiler / lang / drl5expressions .
extract the fields from the message .
/ * ( non - javadoc )
this method is called to add a change listener to the list of listeners .
remove a change listener .
get the selected anchor .
get the list of selected beans .
merge the selected cells into the selected lists .
removes all the cells in the table .
sets the selected list of selected items .
sets the selected beans .
/ * ( non - javadoc )
notifies all registered listeners that a bean has been updated .
restore the missing state .
returns the class descriptor for a given type .
parse an attribute from an object
creates a factor for the given unit .
/ * ( non - javadoc )
if the variable is not already associated with a variable that is already associated with the variable .
returns true if the given variable is a coordinate name .
finds the <unk> for the given <unk> .
generates the html code for the given list of parameters .
split trie node .
{ @inheritdoc }
make a factor from a dataset .
create a list of <unk> objects .
ensures that the given <unk> is assigned to a class .
format the note
find a var notes .
find a field s notes .
format a <unk> node .
/ * ( non - javadoc )
converts a byte array to a string .
creates a new <unk> .
returns the {
make a unit unit .
check if rserve is compatible with unit tests
checks if two unit strings are compatible .
/ * ( non - javadoc )
checks if the given { @link <unk> } is a { @link <unk> } .
checks if the given unit string is a unit of the given unit .
convert the given value expressed in the given unit string to a memory unit .
/ * ( non - javadoc )
returns true if the input is compatible .
/ * ( non - javadoc )
replies the value of this certificate .
generates a new <unk> clause .
get a function by name .
returns a function with the given name .
fires a { @link <unk> } event on a given { @link <unk> } .
rewrite the station .
extracts a { @link bufferedimage } from a { @link interleavedu8 } .
{ @inheritdoc }
used internally to parse the category .
<unk> analysis .
add a dataset to a dataset .
perform the <unk> on the given <unk> .
attempt to get a file from a file or directory .
<unk> method .
calculate the position of the first position in the probe .
gets the passwordauthentication for the requesting user .
returns the <unk> for the given scope .
enable / disable debugging .
returns a list of all files in the given directory .
/ * ( non - javadoc )
seek to the given position in the stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
reads the given number of bytes from the given channel and returns the number of bytes written .
/ * ------------------------------------------------------------
reads up to <code > len< / code > bytes of bytes <code > len< / code > into an array of bytes .
writes a byte to the file .
writes a portion of an array of bytes .
writes a short array .
reads a 32 - bit integer from the stream starting at the current stream pointer .
reads a 32 - bit integer from the stream .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
reads a byte array from the stream .
/ * ( non - javadoc )
writes a portion of an array of characters .
writes <code > s< / code > characters to the stream .
writes a portion of an array of characters .
writes an int array to the stream .
writes a portion of an array of characters .
/ * ( non - javadoc )
writes a double array to the stream .
write a string to the output stream .
writes <code > len< / code > bytes from the specified byte array starting at offset <code > off< / code > to this output stream .
/ * ( non - javadoc )
write utf - 8 byte strings to utf - 8 encoded strings .
/ * ------------------------------------------------------------
<unk> - <unk>
/ * ( non - javadoc )
create a new { @link <unk> } instance .
/ * ( non - javadoc )
returns true if the given swap directory is a directory .
construct the children of the given collection .
print all children of the image .
reads a list of <unk> objects .
opens a new { @link <unk> } .
open a new { @link <unk> } .
gets a list of <unk> objects that represent the <unk> .
renders the {
/ * ( non - javadoc )
shuts down the specified {
acquires a file from the pool .
/ * ( non - javadoc )
loads the cache configuration .
removes the { @link <unk> } from the { @link cache } .
load the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
shows the stats for the given handler .
/ * ( non - javadoc )
read an integer from the buffer .
acquires a file from the specified { @link <unk> } .
/ * ( non - javadoc )
check if the media cache is auto - loaded .
try to update the cache .
adds a cache element to the cache .
/ * ( non - javadoc )
/ * ( non - javadoc )
clears the cache .
/ * ( non - javadoc )
show tracking results
parses the given input string .
<unk> - <unk>
<unk> - <unk>
/ * ( non - javadoc )
returns true if the coordinate is a global coordinate
marshall the given parameter object .
method declaration //
method declaration //
/ * ( non - javadoc )
/ * ( non - javadoc )
<editor - fold defaultstate = collapsed desc = visualization >
method declaration //
calculates the ranges of the range covered by the search coordinates .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the position of the item .
this is the entry point method .
extracts the package name from the stack and returns the name of the package .
creates a new { @link <unk> } for the given { @link path } .
*********************** volt db extensions ************************
reads the files from the server .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the {
/ * ( non - javadoc )
converts a string representing a period to a duration .
/ * [ deutsch ] <p > erzeugt eine neue instanz mit der angegebenen int . < / p >
/ * get the pid from a string .
subtract the specified time from this timer .
gets the value of the <unk> from the specified period .
returns the value of the <unk> .
gets the time into the specified interval .
creates a new { @link <unk> } .
opens the file .
opens the given {
close the file .
demonstrates how to delete a table .
puts the given extension into the cache .
finds the path of the longest path that matches the given request path .
get data root .
sets the data root for the data root .
extract data from a dataset .
creates a new calendar range for the given date .
reindex a list of events .
/ * ( non - javadoc )
tokenizes the given {
returns a unique dimension for the given dimension .
adds a dimension to the metric name .
create a new dimension
rename a new dimension
sets the name of the group .
adds a group attribute to the group .
add a {
delete a group attribute .
rename a group attribute .
add a cross variable to the given group .
adds a command variable to this variable .
adds a new variable to the beginning of a group .
create a new structure with the given structure
write a variable .
generate a {
renames a variable .
adds an attribute to the object .
initializes output .
<p > <unk> . < / p >
read the file .
add a record structure to the <unk>
writes the specified variable to the specified variable .
write a single row to the stream .
writes an array of bytes to a variable .
write string data to writable
writes a string array to a stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
extract metadata from a dataset .
extracted from the <unk>
find the date range
<unk> <unk> <unk>
helper method to generate the replacement name for a model if possible .
returns a list of {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a { @code double } to a { @code <unk> } .
convert a value to a derived unit .
<p > computes the value of the given input from the end of the conversion unit . < / p >
returns a nested { @link java . util . arraylist } from a nested { @link <unk> } .
converts a { @link <unk> } to a { @link array }
convert an {
{ @inheritdoc }
generates <var > <unk> / var > for a scalar value .
compute append tile buffer buffer buffer .
converts a byte array to a byte array .
closes all open databases .
opens the database .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a string to a period .
reads the contents of a file .
performs a {
find a {
read a utf - 8 encoded stream from a stream .
adds a new element to the end of this list .
increases the capacity of this <tt > arraylist< / tt > instance with the given minimum capacity .
returns the element at the specified position in this list .
augments a dataset in a dataset .
converts from lat / lon coordinates to a new projection
convert a point into the <unk>
sets the scan location of the scan .
{ @inheritdoc }
request a dataset in a dataset .
/ * ( non - javadoc )
get a <unk> .
gets the { @link <unk> } .
$antlr end <unk>
/ * ( non - javadoc )
constructs a generator that can be used to calculate the value of the { @link <unk> } .
format a double value .
/ * ( non - javadoc )
validate the proxy location .
loads a local file from a file .
parse a system concept .
cleans up a line of text .
create a new concept .
write the local file data to disk .
executes the lookup table .
demonstrates how to show local disk in local disk .
the main method .
/ * ( non - javadoc )
notify registered { @link <unk> } s .
get the date range from the given <unk> .
reads the data from the {
inits the .
/ * [ deutsch ] <p > interpretiert den angegebenen text als <unk> . < / p >
process the program .
marshals the given bean into the given map .
returns the {
updates the { @code <unk> } with the given { @code <unk> } .
create a new <unk> .
compute the target dataset .
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> t1 .
creates a new <unk> .
/ * ( non - javadoc )
download the given image from the url .
stop the loading of a url .
/ * ( non - javadoc )
returns the number of jobs currently being loaded .
creates a {
return the scaled bounding box size .
/ * ( non - javadoc )
compresses and writes a single image into a byte array .
/ * ( non - javadoc )
writes a <unk> instance to a <unk> file .
initialize the gui .
returns a list of all virtual parts of the ===================================================================
prints information about the supplied category .
/ * package
returns a list of all the multiwords in this group .
returns true if the specified part of the line matches the given regular expression .
the main method .
set the root directory path .
creates the root directory of the given file .
delete a file from the cache .
creates a new file for the given category .
returns the cache path for the given file location .
<unk> - <unk>
/ * ( non - javadoc )
ask the { @link <unk> } to generate a { @link <unk> } .
/ * ( non - javadoc )
save an image with the given name .
create a new { @link <unk> } from the given parameters .
load the registered { @link icon } for the registered { @link icon } .
add a menu item to the menu .
add the given menu to the menu .
add <unk> to this action .
adds the given action to the container .
sets the action properties .
sets the options for this action .
get the selection math .
/ * [ deutsch ] <p > ermittelt die <unk> zur angegebenen <unk> . < / p >
returns true if the given short is a <unk> image .
create a coordinate from a string .
creates a copy of this axis .
checks if the data type is numeric .
/ * ( non - javadoc )
/ * ( non - javadoc )
sort the last character in the table .
sets the list of selected elements .
remove all elements from the list .
returns the currently selected example data .
set the selected row .
increment the currently selected item in the target table .
this method initializes <unk>
ensures that the given row is visible to the given row .
/ * [ deutsch ] <p > interpretiert den angegebenen <unk> zu <unk> . < / p >
https : // github . com / <unk> / <unk> / blob / master / src / <unk> / <unk> / <unk>
sets the selected index .
/ * ( non - javadoc )
/ * ( non - javadoc )
checks that the given variable name is unique in the given vector .
/ * get the names of the crl names from the crl .
sorts the specified subset of the supplied subset of the supplied subset of the supplied subset of the specified array .
swap two elements of an array .
convert a string to a string .
create a new { @link <unk> } from the specified filename .
convert from lat / lon coordinates to a projection
get a point from the <unk>
this method is used to calculate the <unk> position of a list of points .
creates a zip file from a file .
creates a <unk> from a stream .
create a <unk> from a resource .
gets the application data directory .
save the preferences file to disk .
dump the message to the given output stream .
{ @inheritdoc }
this method is used to write out the features of a <unk> .
process an object .
<unk> - <unk>
this method writes the { @link <unk> } to the given { @link <unk> } .
convert avro schema to avro record .
start the kernel .
<p > a subset of <code > <unk> / code > objects . < / p >
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
/ * ( non - javadoc )
closes the channel .
serializes the given text into a print writer .
prints the matrix to the output stream .
selects a dimension of a dimension .
remove any dense solution from the database .
return the dimension of the dimension .
/ * tables
compare two tables
/ * ( non - javadoc )
serialize a data match .
sets the projection to the specified dimension .
acquire a typedesc from a <unk>
gets the data at the given index .
<unk> <unk> . <unk>
desirialize a variable object
/ * ( non - javadoc )
returns an array of floats based on the input <unk> <unk>
gets the <unk>
/ * <unk>
/ * internal
gets the <unk> factor .
reads an array of bytes from an array of bytes .
loads a ppm image from a csv file .
get the <unk> of the pe file .
removes the columns in the data set .
<unk> a single clustering .
formats a list of slices .
create a new <unk> file .
method to create a list of {
method to create a new <unk> file
converts a list of <unk> to a list of <unk>
get the wait time for each station
/ * ( non - javadoc )
pick a point from the <unk>
returns the closest closest to the specified <unk>
get the currently selected <unk>
merges the given element with the given password .
{ @inheritdoc }
converts a { @link <unk> } to a { @link org . apache . flink . api . <unk> . <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
send a message to a file .
main method .
pack the images provided by the <unk>
initialize the contents of the frame .
save model .
get the bounding line of the matrix
gets the evses of a charging station .
get the item iterator for the specified <unk>
get data iterator
read data from the file .
returns the number of elements in this vector .
get the atomtype with the given index .
print the contents of the internal table .
deserialize a bloom filter .
externalizes a {
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the {
get lat / lon coordinates for a given type .
runs the order of the two tables .
compute the cosine condition of the given {
computes the dot product of the table
computes the euclidean norm of the matrix .
normalizes the table with the given normalized matrix .
create a catalog .
set the {
read configuration .
read the catalog s catalog .
create a new {
read a service .
read a catalog reference .
outputs the rdf dataset found in the given { @link <unk> } .
read disk group metadata .
get base url for root element
read the contents of a <unk> from a group .
read the source of the <unk> .
reads xsd annotations from the xsd .
reads a set of variables from the <unk> .
creates a duration instance based on a string .
/ * ( non - javadoc )
<p > <unk> . < / p >
checks if the parameter has the specified parameter .
returns the value of the parameter with the given id .
read parameter table .
reads hints from a class file .
reads the entries from <unk> and returns them as a map .
reads the undirected parameters from the given file and returns a map of edges .
adds an attribute to the end of the list .
adds a new symbol to the symbol table .
returns the prefix for the given set of prefixes .
/ * package private
<unk> - <unk>
get the next character in the reader .
reads the next character from the stream .
parses a literal string literal .
reads the real number from the input stream .
quote a string .
parse a java identifier .
collect collection .
negates the given parameter .
12 . 5 .
sets the character to be a comma - separated string .
returns the value of the parameter with the given name .
returns the projection of a remote request parameter .
calculates and returns the crc32 checksum .
returns true if the data type is correct .
computes the location of the image in a line .
check if there are any horizontal coordinate
create a new { @link <unk> } from an existing <unk> .
generates a {
/ * ( non - javadoc )
gets the time type name from the given string .
/ * ( non - javadoc )
<p > log . < / p >
/ * ( non - javadoc )
set the binary offsets for a structure .
sets the next indentation .
remove the entry from the list .
add a { @link <unk> } to the given { @link variable } .
finds a property by its name .
returns true if {
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new instance of a class with the given name .
{ @link <unk> ( class ) }
register a sequence of registered providers to the given class .
look for registered <unk> .
returns true if the given class is a fhir class .
set the debug flags for the given view .
loads a task from a location .
opens a new { @link <unk> } .
removes the specified type from the file .
obtains the exclusive lock .
append the given uri to the end of the uri .
load a file in memory .
opens a file in memory .
opens a file in memory .
reads the contents of a url into a string .
/ * ( non - javadoc )
returns the item with the given name .
returns the variable with the given name .
returns the dimension of the given value .
get an attribute by its name .
get an attribute by its name .
sets the attribute value .
<p > <unk> . < / p >
<unk> <unk> <unk>
serializes the given root node to the output stream .
print the specified text to the specified printwriter .
/ * ( non - javadoc )
process a <unk> attribute .
write a unique attribute to a writer .
/ * ( non - javadoc )
adds an attribute to the tree .
write an attribute to a group .
sets the { @link group } of this group .
documentation inherited from interface
sets the dimension of the given section .
adds a new variable to the end of the list .
/ * ( non - javadoc )
/ * ( non - javadoc )
removes a variable from the given group .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
public only for testing
returns the {
reads a { @link <unk> } from the given { @link <unk> } .
<p > a list of variables that were created . < / p >
read a variable section .
/ * ( non - javadoc )
get the value of the <code > name< / code > property as a <code > <unk> / code > .
<unk> - <unk>
<unk> - <unk>
returns true if the given event should be included .
determine whether or not the given event should be excluded .
returns whether or not the given event should be accepted .
/ * ( non - javadoc )
attempts to resolve the given <unk> from the given <unk> .
removes the given <unk> from the given <unk> .
get a string representation of a type .
returns the value of the specified type in the json string .
this method was created in visualage .
returns the value at the given index .
adds an attribute to the list of attributes .
/ * ( non - javadoc )
helper method to convert value to string
convert a string to a boolean value .
checks if a string is a valid double .
checks if a string is a valid double .
checks if the given string is a long .
checks if a string is a valid double .
checks if a string is a valid double .
/ * ( non - javadoc )
returns the data type for the given type .
returns the byte representation of the given data type .
returns the widest data type dimension .
returns the xml schema type for the given data type .
{ @inheritdoc }
checks if the given string is a valid ip address .
checks if the given path is a valid path .
checks if the given path is absolute .
checks if the given id is valid .
returns true if the given string contains any of the <unk> characters .
check that a string contains invalid characters .
checks if a string contains invalid characters .
<p > <unk> . < / p >
checks if the given string is a valid alphanumeric string .
returns true if the specified set of file extension matches the specified file extension .
returns the canonical path of the given path .
returns true if the string is a valid percentage of lemma .
encodes a unicode character ( unicode code point ) into a hex string .
adds a key / value pair to the cache .
adds an integer property to the request .
add a double value to the job .
/ * ( non - javadoc )
/ * ( non - javadoc )
writes a stream to the output stream .
process the pattern .
create a { @link <unk> } object from a { @link <unk> } object .
returns a new array of {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get a list of predicates .
removes any leading and trailing quotes from a string .
/ * package
compile a type transformation expression .
writes a dataset to a dataset .
initializes the configuration .
check if the configuration file is valid .
get the value associated with the specified key or alternate value if the key does not exist .
get a { @link <unk> } .
{ @link <unk> }
looks up a request parameter and returns defaultvalue .
returns a string representation of the given string .
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
computes the heading point of the projection from another latlng
calculates the arc coordinates of the specified signal from the specified coordinates .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an array of <code > java . util . timestamp< / code > instances representing all the elements in <code > this< / code > matrix .
replies the polygon as a double array .
create a polygon as an array of floats .
translates { @link <unk> } into a 2d array .
return upper triangular factor
/ * ( non - javadoc )
get all the { @link <unk> } s for a given { @link <unk> } .
returns the names of the reference to the <code > <unk> / code > .
adds a new member variable to the list .
sets the {
/ * ------------------------------------------------------------
creates a new member variable .
sets the parent group .
get the group variable .
add a { @link <unk> } to the members of this { @link <unk> } .
calculates the stale element size .
reads a structure from a collection .
creates a scene object from the specified file .
public only for backward compatibility
get a list of structure objects based on the size of the structure .
<unk> - <unk>
initialize the <unk> loggers .
returns the category category for the given session .
gets the short name of a class .
add a parameter to the request .
get the value of this header .
returns an array containing all of the elements in this dataset in proper sequence ( from first to last element ) . if the dataset fits in the specified array it is returned therein . otherwise a new array is allocated with the runtime type of the specified array .
impute missing values in the dataset .
similar to {
impute missing values in the dataset .
converts from wgs84 into a projection rectangle
/ * ( non - javadoc )
create a weighted projection from a { @link <unk> }
get the bounding box of the specified projection
/ * [ deutsch ] <p > <unk> / p >
convert a double to a number .
returns the great circle distance between two points . <p >
digamma function .
get the appropriate { @link <unk> } .
gets the version number from the given { @code <unk> } .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
delete the next file .
set the coverage data
run the <unk> algorithm
returns a {
/ * ( non - javadoc )
<editor - fold defaultstate = collapsed desc = visualization >
draws the attributes of the grid .
returns true if the given string is a child of this resource .
returns the value of the named property .
reads the contents of the file .
/ * ( non - javadoc )
installs the given column in the given table .
installs the column widths into the given table .
/ * ( non - javadoc )
returns the parent chunk of this object .
returns a child of the given path .
gets the temp directory .
sets the api key to use .
returns the source stream of the given program .
creates a new { @link sample } with time and text value .
creates a list of lines from a text representation .
creates a { @link label } from a string value .
html encodes the given string .
returns the { @link label } representation of the given { @link string } .
<p > main . < / p >
create a new { @link socket } as a { @link socket } .
return { @link <unk> } if the { @link <unk> } is running .
create an instance of { @link <unk> } .
returns a list of all fuzzy set of resources . <p >
executes the given instance of { @link <unk> } .
{ @inheritdoc }
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
compile a class .
compile a class name .
create a new violation for the given class name .
reads next frame effects .
reads the next block from the block .
returns the next frame descriptor .
union the frame of the current frame .
reads the next chunk of work .
initializes the dialog window .
returns a list of { @link java . util . list } of { @link java . util . list } of { @link java . util . list } of { @link java . util . list } or { @link java . util . list } of { @link java . util . list } of { @link java . util .
/ * ( non - javadoc )
inject fields annotated with { @link <unk> } annotation .
sets the fixed clock time to be used by the given zoneddatetime .
adds a message to the cache .
returns the merged resource bundle for the given resource bundle .
initialize the resource bundles from a list of bundles .
create a new instance of the given class .
******************** initialization ************************************
----- private methods -----
process a list of { @link <unk> } s .
add a { @link <unk> } to the worklist .
process the <unk> .
returns the user with the given id .
add a factory to the list of factories .
/ * ( non - javadoc )
removes all weak references from the queue .
returns a { @link set } representing the set contained in this { @link <unk> } .
returns a { @link collection } containing the values contained in this map .
adds a message to the message map .
remove a message from the message .
remove a message from the memo table .
set the person id .
load a { @link view } from a { @link view } .
<p > invoke a { @link <unk> } . < / p >
gets the resource bundle from the groovy resource .
binding for { @link <unk> ( observable function ) }
returns the field model for the given view type .
gets the { @link view } for the given { @link view } .
sets the view fields for the given view .
creates a new { @link <unk> } instance .
finds the { @link view } for the given { @link view } .
assert that the given view model is annotated with {
returns all methods of the given annotation type .
adds a { @link <unk> } to the { @link <unk> } .
<p > <unk> . < / p >
/ * ( non - javadoc )
get the <unk> .
loads the <unk> .
/ * ( non - javadoc )
register message observer .
<p > <unk> . < / p >
resets all fields to the default values .
sets the current values of the wrapped values .
/ * ( non - javadoc )
reloads the {
copies the values of the given configuration .
<unk> > <unk>
returns an instance of the { @code <unk> } .
adds a field to the javafx property .
<unk> > <unk>
creates an instance of the specified { @code <unk> } .
factory method for creating a new { @link <unk> } .
<unk> > <unk>
creates a { @code double } field of the specified { @code getter } .
returns a { @code float } field of the given { @code <unk> } .
creates a { @code <unk> } .
creates a { @code long } field .
/ * ( non - javadoc )
creates a new { @link <unk> } from the { @link <unk> } .
wrap hash set .
<p > <unk> . < / p >
/ * ( non - javadoc )
add a change listener to the list of complex listeners .
creates a list of { @link observable } objects from a list of { @link observable } objects .
adds the given view type to the java view .
adds a fxml view to the view .
registers a { @link <unk> } with the given { @link observable } .
adds a list of listeners to the list of listeners .
adds a new { @link <unk> } to the cache .
handles an { @link java . util . event . <unk> } .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns all fields of the given type that are annotated with the given annotation .
returns a list of all fields of the given class .
unmap a { @link <unk> } .
sets the value of the specified field on the given object to the given value .
ignore warn .
adds a tuple to the given view type .
create the fxml path .
attaches the given { @link <unk> } to the given { @link <unk> } .
load the view view tuple .
query for rows matching the given style mapping
/ * ( non - javadoc )
get the coverage data value
get the coverage data value
/ * ( non - javadoc )
/ * ( non - javadoc )
validate the image type
draw the tile at the specified location and tile values
draw the tile data in the given array of unsigned short pixel values
draw the tile data in the supplied array of unsigned bytes .
draw the coverage data pixel at the coverage data values
draw the coverage data .
sets the pixel value at the current position of the raster
sets the pixel value at the current position of the raster
create the tile table with metadata
encodes a bitmap to a byte array using the specified quality .
delete rows from a table .
get the max value for a table
/ * ( non - javadoc )
query single result for single result
query for values for a single column
query the results for a sql query
returns a { @link cursor } representing the raw results of a { @link query } .
wrap a select statement into a single result set .
/ * ( non - javadoc )
retrieve a row from the database
query for the row where the row is a row
query by the specified query .
handle the cursor for the row .
update the index of the last indexed column
returns the index of the first row in the table .
get the bounding box index for the given geometry
returns an iterator over the features in this vocabulary .
returns an iterable over the ids of all the rows in this table .
register a table
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
retrieve the tile row for the tile at the specified location .
delete the gridded coverage data
delete the tiles covered by the geopackage
get the requested projection data
create the tile table with metadata
get the tile from the request bounding box
get the tile coverage data for the requested bounding box
get the coverage data tile results from the provided bounding box
get the coverage data tile results from the tile matrix
get the coverage data tile results from the tile matrix
get the coverage data tile results from the tile matrix
get the tile matrix for the request
get the coverage data value
set the icon style for a geometry type
returns the style of the geometry type .
{ @inheritdoc }
{ @inheritdoc }
open or open a read - only database in the sqlite database .
constructs a bitmap from a byte array .
encodes a bitmap into a byte array .
{ @inheritdoc }
delete a geometry from the geopackage
updates the last indexed indexed column .
update the last indexed column index
update the last indexed column
get a user s user dao
get the metadata for a table
get or create a table or create a new one if it doesn t exist .
get the country id for the geopackage
create a table metadata object .
create a new { @link <unk> } instance .
get a feature row from the database .
runs the provided sql and returns a cursor over the result set .
/ * ( non - javadoc )
get the count of rows in the table
get the bounding box of the query
query for custom features within the bounding box projected correctly
query for a geometry
query for a geometry
query for rows within the specified area .
counts the where y = y .
build and return the number of arguments .
query for custom features within the bounding box projected correctly
query for custom features within the bounding box projected correctly
query for a geometry
get the bounding box of the feature
counts the number of rows in the specified rectangle .
returns an iterator over the features in this vocabulary .
constructs a bitmap from a byte array .
encodes a bitmap to a byte array using the specified format .
encodes a bitmap into a byte array .
set the {
write formatted tiles
adjust the bounds of the transformed transform bounding box
convert the bounding box to web mercator
get the count of features in the tile bounding box
adjust the tile bounds for the tile grid and zoom level
get the coverage data for the tile bounding box
get the tile grid for the tile at the specified zoom level
query for tiles in the tile table
query by tile grid and zoom level
get the approximate zoom level for the provided width and height in the default units
get the approximate zoom level for the provided width and height in the default units
get the closest zoom level for the provided width and height in the default units
get the approximate zoom level for the provided width and height in the default units
query by tile grid and zoom level
query by tile grid and zoom level
query by tile grid and zoom level
check if the tile bounding box contains the google tile bounding box
get the coverage data value
get the pixel value from the image .
get the pixel values from the image .
validates an image type
get the coverage data value
get the coverage data values for the image coverage
draw a coverage data image from the specified array of unsigned short pixel values .
draw the tile data in the given array of unsigned short pixel values
draw the coverage data image at the coverage data values
draw the coverage data bytes from the coverage data values
get the image from the image .
sets the pixel value of the raster .
create the tile table with metadata
project a json object to a json object
get the cached geopackage or open the geopackage if it doesn t exist .
get the value for the specified column .
get the { @link <unk> } or { @link <unk> } for the given id .
get the row for the row
/ * ( non - javadoc )
enable the user to enable the invalid items
read the table
get the bounding box of the contents
/ * ( non - javadoc )
query by base id
/ * ( non - javadoc )
get a rectangle that can be used to draw a rectangle in the bounding box section
get rectangle with rounded floating bounding box section
returns true if the specified rectangle intersects the specified rectangle .
returns <code > true< / code > if the specified rectangle is empty or not .
returns <code > true< / code > if the specified rectangle intersects the specified rectangle .
returns <code > true< / code > if the specified rectangle intersects the specified rectangle .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
delete all missing databases .
get the names of all databases in the sorted set .
external sorted list of external databases .
<p > <unk> . < / p >
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link <unk> ( string ) }
/ * ( non - javadoc )
generate a file .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
deletes all the databases .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a geopackage
create a geopackage
validate the file extension
/ * ( non - javadoc )
create a geopackage
/ * ( non - javadoc )
{ @link <unk> }
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > getproperty . < / p >
open a geopackage
/ * ( non - javadoc )
read a geopackage from a geopackage
/ * ( non - javadoc )
download a tile from the url
{ @link <unk> }
{ @link <unk> }
open the database
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > copy the database from the database . < / p >
/ * ( non - javadoc )
{ @link <unk> }
{ @link <unk> }
{ @inheritdoc }
validates that the database is valid .
validates that the database is valid .
method <unk> .
validate the database header .
checks if the file is valid by compiling it .
returns the list of internal databases .
add imports to external caches .
validate the geopackage
get all the geopackages
get the feature metadata for the geopackage
get the tile metadata for the geopackage file at the specified path
returns whether the database is a temporary file
create a new geometry index
create a geometry metadata geometry .
create a geometry metadata geometry .
populate the geometry index with the given geometry index and geometry index
delete the metadata cascading
delete rows from the geopackage
delete the contents of the geopackage
create or update a listener .
{ @inheritdoc }
get a user metadata metadata .
create a insert trigger for the table
get a list of geometry metadata for a destination table
get the contents of the geopackage
get the bounding box for the geopackage
get the bounding box of the geometry
get a cursor from the geopackage
write the bounding box into the geopackage
count the tiles in the geopackage
build a { @link geometry } from the bounding box
get the rtree index for the table
get the count of the rtree index for the table
build a cursor from the geometry envelope
get the count of rows within an envelope
create geometry metadata from cursor .
query for the row with the given id
update the table with the specified values .
{ @inheritdoc }
draw a tile at the specified location .
{ @inheritdoc }
draw the tile at the specified location
returns a list of { @link mediatype } objects .
get the bounding box of the feature bounding box
/ * ( non - javadoc )
get the feature dao
get the feature dao
get the feature dao
get the tile dao
get the dao s attributes dao
set the contents of the dao table
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
check to see if the user mapping exists
get a media dao dao
get the relations to the base table
get the list of mappings for a given related relation
check if the base id has the specified mapping
get the size of the tile table
{ @inheritdoc }
counts the number of rows in the given result set .
register a new { @link <unk> } for missing columns .
read a table from a geopackage
get the tile from the request bounding box
draw the tile from the tile results
reproject the tile to a tile
get the tile matrices from the request bounding box
get the tile results from the tile bounding box projected into the tile bounding box
calculates the overlap overlap
sets the scale of this {
resize the line paint .
set the paint paint .
draw the tile at the specified zoom level .
draw a tile at the specified location and zoom level
draw the tile with the specified zoom level and zoom level
query for feature results
query the count of feature features within the bounding box
query for feature results
query for feature results within the bounding box
get the tile bounding box within the bounding box
expand the tile bounding box using the zoom level
draw the tile with the specified zoom level
simplify the points .
set the feature row style into the polyline .
set the feature row style into the polyline options
create the paint object .
get the paint object .
draw the polygon paint
get the style paint .
get the style for the style .
get the style paint based on the style and style
returns true if the bitmap is not {
get the paint object .
get the paint object .
set the style for the geometry row .
get the style of the feature .
puts the image row with the given id .
create a buffered image for the icon row
create a {
/ * ( non - javadoc )
returns an iterator over the features of the feature row .
returns an iterator over the ids of all the geometry ids .
wrap a changeset into a single <unk> .
creates and returns a buffered version of this image .
disposes the layers .
returns the image of the specified layer .
returns the image for the specified layer .
creates and returns a bitmap with the specified layer .
get or create a feature mapping
get the style dao
get the {
get the feature tile styles for the feature table
get the feature styles for the feature table
get the style of the geometry type
get a { @link icon } link for the feature table
get the icon row for the given row mapping
create the feature table .
/ * ( non - javadoc )
set the feature row style for the feature table
set the feature row style for the feature row .
create the styles for the feature table
create the style for a feature table
create style for a feature row .
get the feature shape for the feature table
get the feature shape for the feature table
get the style of the geometry type
create style for a feature table
create the icons for the feature table
create a feature table .
create the default icon table .
get the feature shape for the feature table
get the feature shape for the feature table
get the icon row for a feature table
remove the icon relationships for the feature table
get the styles for the feature id
query the icons for the given feature id
delete feature feature styles .
set the style of the geometry type
set the rtree index for the feature table
create a style relationship between the feature table and a related table .
returns icons from the icon .
set the icon table for the feature table
create the icon icon for the feature table
set the feature styles for the feature row
set the feature styles for the feature table
set the feature row style ( icon or style ) into the polygon options
set the feature row style ( icon or style ) into the polygon options
set the feature row style ( icon or style ) into the polygon options
set the feature style ( icon or style ) into the feature table .
set the feature style into the feature table
set the styles for the feature row
set the styles of the feature table
set the style of the feature row .
set the style of the feature row .
set the default style for the feature row
create style for a feature table
set the style into the polyline options
set the icons of the feature row
returns icons from the icon table .
set the icon row of the feature row .
set the icon row of the feature row .
set the default icon row for the feature row
create the icon for the feature table
set the icon relationship for the feature table
create or insert a style relationship .
gets or creates the icon .
get a list of style mappings for a given base id
create style for a feature table
create a feature table style table
create a style relationship between the feature table and a feature table .
create a style relationship between the feature table and geometry table
delete a feature table
create style for a feature table
delete a feature table
create a new icon relationship for the feature table
get the mapping for the feature id
highlights the given feature table with the given base id .
creates and returns a list of all icon mappings for the feature table .
get the list of all style mappings for the feature table
creates and returns a list of all icon mappings for the feature table .
returns the image from the given byte array .
/ * ( non - javadoc )
get the pixel at the coordinate
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
draw the tile at the specified zoom level
draw the feature
draw the geometry
draw the line
draw the polygon
get the path of the polyline
convert a { @link polygon } to a { @link polygon }
draw the point
get the cache for the given table name .
create the rtree with the feature table .
resize all cached cache entries .
get the cached styles .
/ * ( non - javadoc )
set the feature row style into the polyline .
set the feature style ( icon or style ) into the marker options
set the style for a feature row .
get the style of the geometry type
build a new { @link icon } for the given { @link <unk> } .
returns the icon for the given feature id .
set the style of the geometry type
set the icon type .
set the feature row style ( icon or style ) into the polyline options
set the feature row style ( icon or style ) into the polyline options
set the style of the geometry row .
set the style for a feature .
set the feature row style ( icon or style ) into the polygon options
set the icon for the marker options
create a {
/ * ( non - javadoc )
read a table from the database
{ @inheritdoc }
sets the width of the package .
sets the height of the image .
get the derived dimensions representing derived data .
returns the length of the tile matrix .
get a tile density from a tile density
moves the cursor to the next position in the current position .
{ @inheritdoc }
read a single blob value
{ @inheritdoc }
get the value of the column as a java object .
write ifd position .
create a media table .
read a table from a custom table
set the color of the color
get the percentage of the color
set the fill color
checks if the provided color is valid or not .
build a { @link color } from a { @link color } .
get the { @link <unk> } for the { @link <unk> } .
returns an {
get the last indexed query location .
get the index of the feature index order .
sets the index of the last indexed feature .
set the progress of the feature table
returns the index of the preference .
returns true if the feature index in the feature table is indexed .
returns true if the feature index is indexed .
returns true if the feature index is indexed .
delete the set of media types .
{ @link <unk> ( entitytype <unk> ) }
delete the index for the given geometry id .
delete the index of the last indexed feature
retains only the elements that are contained in the specified feature type .
returns true if the feature index is contained in the feature list .
returns true if the feature index is indexed .
returns a list of { @link java . util . list } of indexed feature indexes for the given type .
returns the last indexed date .
query for feature index results
get the count of features within the bounding box
get the count of features in the feature table
query for feature index results
returns the type of the feature index .
returns true if the tile is within the bounds of the tile bounding box
query for feature results within the google maps api
writes the given bitmap to the internal storage directory .
returns the text view of a textview .
return the type of the geometry type
get the type of the geometry type
replace the bounding box with the given url
replace x y and z parameters .
checks if the url contains the given url .
replace the bounding box with the given coordinates within the bounding box
replace the bounding box of the bounding box within the bounding box
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
draw the geometry
{ @inheritdoc }
returns true if the feature row is indexed .
returns the index of the table index in the geopackage
returns the index of the first row in the result set .
draw the feature row index
update the last index in the geopackage
delete the table index .
delete the index of the geometry
returns true if the table is indexed .
get the last indexed date .
execute the query .
get the count of features within the bounding box
get the count of features in the bounding box
draw the geometry
get the count of features in the geometry envelope
query for geometry index objects within the bounding box projected correctly
query for geometry objects within the bounding box projected correctly
define the bounding box of the bounding box within the bounding box projected correctly
get a list of geometry metadata for a cursor .
creates a new { @link <unk> } .
get the bounding box index for the given geometry
get tile tables for feature table
get the feature tables for the tile table
get the bounding box of the feature bounding box
get the bounding box of the tile grid
{ @link <unk> }
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the bounding box of the query
get the bounding box of the query
query by tile id and base id
query by tile id
/ * ( non - javadoc )
query by tile id
create a new { @link <unk> } object .
{ @inheritdoc }
rename table name to specified name
update geo data .
get orphaned events .
get orphaned events .
get a column of a geopackage
get a geopackage
get the cached geopackage or open the geopackage
determine if the geopackage is external .
get the extension of the geopackage
<unk> > <unk>
<unk> > <unk>
builds a list of columnmetadata from the geopackage
create the geopackage
get the size of the row .
{ @inheritdoc }
returns an iterator over the features of the feature row .
returns an iterator over the ids of the features in this table .
handle the creation of a view created by the view .
set the {
add a view to the scroll view .
/ * ( non - javadoc )
create a custom view .
called when the activity is first created .
/ * ( non - javadoc )
serialize an object to an output stream .
/ * ( non - javadoc )
loads a resource from the classpath .
returns the url of the given resource as a url .
configure logback logging system .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the string representation of the address .
creates a new thread pool that reuses a fixed number of threads .
<p > <unk> . < / p >
{ @inheritdoc }
/ * ( non - javadoc )
set the value of the specified option .
gets the value associated with the given key .
creates the ssl serversocket .
<p > <unk> . < / p >
returns a string representation of the given string .
append a string to a string buffer .
<p > retain . < / p >
see { @link <unk> ( string ) }
<p > <unk> . < / p >
<p > <unk> . < / p >
writes an int to the byte array at the given offset .
reads a 32 - bit integer from the given byte array starting at the given offset .
compress root node .
/ * <unk>
/ * ( non - javadoc )
/ * private boolean <unk> () { return <unk> ; }
formats a logging event
/ * ( non - javadoc )
returns a string representation of the given type .
create a new serversocket .
dump the evaluator definition .
/ * ( non - javadoc )
/ * ( non - javadoc )
get a { @link <unk> } instance .
main method .
gets whether or not the sd card should be mounted .
get the path to the accent backup directory .
/ * ( non - javadoc )
sets the file . <p >
/ * ( non - javadoc )
@param basedir @param <unk>
returns the absolute path of a file .
/ * ( non - javadoc )
/ * ( non - javadoc )
method to construct { @link vint } based on the given { @link <unk> } .
compares the logging chain as an decision filter .
/ * ( non - javadoc )
get the secure random .
<p > <unk> . < / p >
<p > <unk> . < / p >
gets the default key managers .
create a { @link trustmanager } array for trust managers .
create ssl key store from system properties .
/ * ( non - javadoc )
returns the { @link url } for the given { @link string } .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
ds method to deactivate this component .
prints the log configuration to the given input stream .
prints the log if it is { @link <unk> } .
returns a goro implementation that binds to {
appends a throwable to a stringbuilder .
start the server .
/ * ( non - javadoc )
/ * ( non - javadoc )
documentation inherited from interface
/ * ( non - javadoc )
classify the first line in the { @link outputstream } .
gets the value associated with the given key .
returns the value associated with the given key .
get a live map entry .
ends a specific extension .
returns an instance of { @link <unk> } .
<p > <unk> . < / p >
<p > main . < / p >
parses the metric map in the given map .
gets the system property <code > key< / code > .
returns the value of the specified property or null if not found .
returns the system property for a system property .
returns the value of a system property .
returns the maximum replacement value of a string .
returns a boolean value for the specified key .
{ @inheritdoc }
get the caller data for the caller .
sets the current thread s context map .
get query string
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if a list of framework is in the list of class lists .
add a new status to the queue .
adds a listener to the listener .
obtains a list of {
adds the given attribute to the given attributes list .
/ * ------------------------------------------------------------
creates a new instance of the <code > key< / code > .
gets the boolean value for the specified key . if the key does not exist or the value is not a boolean an illegalargumentexception is thrown .
<p > <unk> . < / p >
returns an array of { @link methoddescriptor } s for the given class .
returns an array of { @link <unk> } s for the given class .
start the server .
this method is called by the {
documentation inherited from interface
sets the value of the target property .
/ * ( non - javadoc )
closes the output stream .
sets the output stream to be sent to the output stream .
/ * ( non - javadoc )
add components to this component .
adds the listener to the listener .
/ * ( non - javadoc )
returns the value of the <code > name< / code > property as a <code > string< / code > or <code > defaultvalue< / code > if not found .
/ * ( non - javadoc )
calculates the severity of the logging event .
/ * ( non - javadoc )
/ * ( non - javadoc )
factory method for creating a new { @link keypair } from the given algorithm .
closes the given { @link closeable } .
attempts to close a { @link serversocket } swallowing any exception .
quietly attempts to close a { @link serversocket } swallowing any exception .
create a new ssl socket .
select cipher protocols .
selects cipher suites and returns the cipher suites .
returns an array of all the strings in the given array .
/ * ( non - javadoc )
returns the scope of the given scope .
/ * <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
removes the effective level from the children .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new { @link <unk> } .
filter and log the event .
<p > filter the passed { @link level } as an { @link <unk> } . < / p >
log a slf4j event .
creates and returns the socket .
creates the parent directories of the given file .
adds a prefix to the given path .
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a string argument to a level .
converts a { @link <unk> } to a { @link <unk> } .
/ * ( non - javadoc )
checks if the given object is an instance of the given type .
<p > <unk> . < / p >
returns a new { @link <unk> } instance with the given key store .
returns an array of {
{ @link <unk> ( string ) }
get the package name of the given object .
get the classloader for the specified class .
returns the class loader for the given class .
loads a class by name .
/ * ( non - javadoc )
/ * ( non - javadoc )
reports the error tag .
assimilate a new logger instance .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the index of the <code > name< / code > property .
/ * ( non - javadoc )
create trust manager factory .
/ * ( non - javadoc )
returns true if the file is on the same file .
send this { @link <unk> } to the { @link <unk> } .
appends the given event object to the ring buffer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
add the current value of the { @link <unk> } value to the { @link <unk> } .
delegates to the { @link <unk> ( string ) } method of the { @link <unk> } .
creates a converter for the given converter .
creates a composite url for the composite parameter .
returns the compression mode .
configure the given url to the given url .
configure a file .
configure the slf4j logger with the given input stream .
render the interpreter
configure the log .
configure the log .
gets the value of the property with the given key .
sets the name of the named thread .
/ * ( non - javadoc )
/ * ( non - javadoc )
add an element to the queue .
get the element at the specified position .
get the smallest element in the queue .
processes a new constraint .
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
get the { @link org . apache . ojb . broker . configuration . <unk> } from the configuration .
/ * ( non - javadoc )
retrieves a map of all the soap headers from a complex element .
this produces a string containing the flags in the input string .
this method is used to get the string form of the input file .
/ * ( non - javadoc )
used internally to end the command
/ * ( non - javadoc )
stops the cluster .
wait for a { @link <unk> } to be shut down .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
close the client .
/ * ( non - javadoc )
removes the given key - value pair from the cache .
get the current value of the <code > key< / code > parameter .
returns the set of keys in the mdc .
generate a copy of the context map .
convert a string value to an object of the given type .
returns the { @link method } for the given { @code type } .
method to serialize filters to the chain .
/ * ( non - javadoc )
adds a list of actions to the monitoring list .
returns a list of actions of the given path .
returns the longest matching element matching the given path .
gets the { @link url } of the given { @link <unk> } .
setup logback logging
<p > <unk> . < / p >
/ * ( non - javadoc )
closes this stream .
creates a { @link sslcontext } .
/ * ( non - javadoc )
returns the system property corresponding to the named syslog facility .
set the syslog facility .
determines if a node has been visited .
get the output file .
{ @inheritdoc }
sets the maximum number of pending logs .
check if the expired time is expired .
{ @inheritdoc }
execute an event .
performs an insert operation .
creates a new { @link <unk> } from a { @link event } .
bind a logging event to the event .
/ * ( non - javadoc )
returns the first non - null value in the given object .
compute the reference mask for the delete event .
merges the { @link map } of { @link map } s into a { @link map } .
updates the first column of the first column of the first column of the first column of the first column of the first column of the first column in the first column of the first column in the first column of the first column in the first column of the first column in the dictionary .
bind the caller to the caller .
update an exception statement
returns the length of the prefix in the given path .
gets the effective level .
introspects the javabeans properties of the bean
sets the value of a property .
sets the value of a property .
returns true if the given class is an interface or not .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the next token in the eventstream .
reads the next token from the stream .
visits a var node .
sets the value of the current token .
/ * ( non - javadoc )
opens a reader for the given url .
siehe syntaxelement :: <unk> ()
get the event name for the event .
returns true if the given port is available .
closes the socket .
returns an instance of { @link <unk> } .
get the default node s unused hosts .
loads a list of { @link <unk> } objects .
search all content with index
return a json object
/ * ( non - javadoc )
<p > the <code > <unk> / code > object . < / p >
sets the { @link <unk> } for the given { @link duration } .
flushes the local index .
save the current directory settings .
register the current { @link <unk> } { @link <unk> } { @link <unk> } .
waits for the task to finish .
sync with the necessary truststore .
this method is deprecated . use { @link <unk> ( query ... ) } instead .
returns the { @link com . github . api . transaction . <unk> } of this { @link <unk> } which is returned by { @link <unk> () } .
this method is deprecated . use { @link <unk> ( query ... ) } instead .
process async queries .
creates a new { @link <unk> } with the given { @link <unk> } and { @link <unk> } .
creates a new { @link org . apache . gobblin . api . api . queries . <unk> } with the given { @link org . apache . gobblin . api . api . queries . <unk> } asynchronously .
converts the given { @link org . apache . gobblin . api . api . query . <unk> } to a { @link org . apache . gobblin . api . api . query . <unk> } .
use this method to retrieve all of the objects in this index
stores a list of clob objects with the given strategy .
loads a {
{ @inheritdoc }
get an object from this object
get an object from this index
get an object online asynchronously . this method is used by the { @link <unk> ( string ) } method .
same as {
get several objects from this index .
same as {
get several objects from this object
get several objects from this index
get several objects from this index .
same as {
get several objects from this index
same as {
/ * ( non - javadoc )
returns the credit history of the specified facet .
returns a { @link <unk> } that can be used for a search query .
returns a { @link request } that contains a facet of the specified facet .
search the content of a query
search for a single query
adds an asynchronous query to the chanel .
delete all content of a query
create a {
search for a disjunctive disjunctive disjunctive request .
returns a { @link org . <unk> . <unk> . support . <unk> } for the given facet .
creates a { @link <unk> } for the given facet .
search for a facet of the given facet .
add an object to the registry .
same as { @link <unk> ( string string ) } but allows you to add objects to the object .
add an object asynchronously .
add events to the chanel .
partially override the { @link <unk> ( object [] jsonarray boolean boolean ) } method .
update an object in a partial object
update an object in a partial object
query for deferred objects .
create or update a partial object asynchronously
get an object from an id
get an object from an id .
get several objects from several objects .
get several objects from this index .
this method blocks until a new task is available .
same as { @link <unk> ( string string object ... ) } but allows you to delete a single object asynchronously .
delete an object asynchronously
this method deletes several objects from several objects .
get several objects from this index .
<p > deletes the specified query object from the specified query . < / p >
get settings for this index .
sets the settings for the { @link com . google . com . facebook . app . <unk> } .
set settings for this index
this method is used to create a { @link <unk> } from the provided { @link string } .
browse all index content to a request
delete an existing index .
add an object
delete all objects
add an object id
get an object from this index
get several objects from this index
get several objects from this index
add an object to an object
delete several objects
add an object id
delete several objects
this method is deprecated . please use { @link <unk> () } instead
delete all objects of a query
search in a facet
delete all objects
wait for a single task to be received
get settings for this index
add or replace a list of synonyms
delete an index .
create a new instance of { @link <unk> }
formats a map of key / value pairs into a query string .
get parameter value from query string
add a boolean value to the query .
set a location around the location of the query .
set the camera app around the given radius
/ * ( non - javadoc )
/ * ( non - javadoc )
get the json - formatted json object that can be used to retrieve the members of the response .
creates new instance of { @link changes } .
writes a given { @link <unk> } to the given { @link <unk> } .
convert a set of points inside a list of { @link point } s into a { @link query } object .
returns a set of { @link org . <unk> . query . polygon } with the given { @link polygon } .
get the json representation of the response .
sets the target query type .
delete one synonym set
if there are no more results to be removed returns null .
helper method to build a raw query from the given query parameters .
loads a list of { @link queries } objects .
search for disjunctive facets .
search for disjunctive facets .
search for disjunctive facets .
loads a single query asynchronously .
search for a single search query
creates a new { @link org . apache . gobblin . api . api . query . <unk> } with the specified { @link org . apache . gobblin . client . api . queries } .
get an object from this index
get several objects from several objects
this method returns the settings for this index
creates a new { @link <unk> } which contains all the content of the query .
creates a { @link org . apache . flink . api . common . <unk> } from a { @link cursor } of type { @link <unk> } .
starts a search for a facet of the given facet .
search in a facet values
creates a request that contains all content of the content .
loads more data from the { @link <unk> } .
high - level queries .
this method retrieves several objects from the query asynchronously
get several objects from this index
returns a file with the content of the index
partially override the content of several objects
this method writes a string to a file .
get the value for the given index .
get the offline index for a given index .
creates a new sheet for offline options .
this method returns a { @link <unk> } object that provides all indexes for all indexes
method to get all the classes in the directory
delete an asynchronous delete operation .
delete several objects
create a copy of the index
/ * ( non - javadoc )
parse the search results
deletes a directory recursively .
kopiert den <unk> eines <unk> .
sets the value of the named feature .
set a header .
adds a user agent to the list of user agents .
minioclient . <unk> ()
reads the content of an input stream into a byte array .
get several objects from this index
this method creates a {
/ * ------------------------------------------------------------
lock the requested hosts .
query the location of the location and location of the given location .
takes a { @link <unk> around radius } and a radius { @link <unk> } .
get the options that will be clustered .
----- static methods -----
prepends the query parameters to the specified query parameters .
set the array value to the query parameter referenced by the given name and value .
/ * ( non - javadoc )
<p > <unk> . < / p >
create a { @link request } from the disjunctive app .
blocking method to create a { @link request } object for the given facet .
blocking method to create a { @link <unk> } object
delete an existing index .
[ variable <unk> ]
moves an index to another index
create a copy of an index
create a { @link org . apache . gobblin . api . api . queries . <unk> } with multiple { @link org . apache . gobblin . api . api . queries } objects
use this method to specify multiple queries for multiple queries
create a new { @link request } object with all of the content of the content of the content
asynchronously scans the { @link com . google . android . app . operations } asynchronously with the given { @code <unk> } and { @code <unk> } .
get settings for this index
delete an existing synonym
get several objects from this index
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
returns the value associated with the given key .
/ * ( non - javadoc )
adds the performance of performance statistics .
creates a new thread with the given name and task .
/ * ( non - javadoc )
compares two version strings based on their version strings .
truncate the log .
copies the contents of the given source file to the given target file .
initializes the plugin with the specified file .
returns true if the named property exists in the prototype chain .
returns the value of a system property .
get the value of a static field .
returns the method with the given name .
launches a worker .
returns the pid of the process .
returns a pseudo - random uniformly distributed double value between 0 and max ( exclusive ) .
formats a long value as percentage .
returns a string representation of a number of bits .
returns a string representation of the given long .
generates the rsa private key entry .
read the next character from the input stream .
convert a hex character to bytes .
/ * decode the json as a byte array .
write a string to the output stream .
/ * writes a double to the stream .
/ * ( non - javadoc )
parse a java identifier .
reads a json integer .
reads a literal value .
decode a base64 encoded string .
/ * ( non - javadoc )
/ * ( non - javadoc )
reads the {
enqueue a mutation to be bound .
returns the absolute path of a file .
/ * ( non - javadoc )
replies the active part of the workbench .
replies the active part of the workbench .
/ * ( non - javadoc )
******************** methods *******************************************
/ * ( non - javadoc )
returns the buffer as a byte array .
/ * ------------------------------------------------------------
create the context menu .
/ * <unk>
/ * ------------------------------------------------------------
add a new server property
/ * ( non - javadoc )
returns true if the first child of the first child should be kept alive . <p >
sets whether this node is kept alive .
return a flag indicating whether a pojo is a member of the <unk> .
adds links to the link .
returns a string representation of this node s depth .
<p > <unk> . < / p >
returns the owner of this { @link <unk> } .
appends the specified depth to the tree .
fixes the link to the link .
returns the owner of the shared { @link <unk> } .
set the value of the <code > &lt ; <unk> ; < / code > node .
/ * ( non - javadoc )
add the given root element to the document .
{ @inheritdoc }
adds a factor elementwise to this one .
reads a term from the stream .
{ @inheritdoc }
returns the <unk> for the <unk> .
this method gets called when a bound property is changed .
******************** initialization ************************************
/ * ( non - javadoc )
builds a list of runtimes .
replies the java project of the given project .
checks that a call to <unk> is called .
/ * ( non - javadoc )
load the configuration file .
reads the mapping proposals and builds a list of <unk> proposals .
/ * package
normalize a url .
replies the dirname of the given parent url .
get the url of the asset .
returns the elements of the given url .
gets the last part of a url .
returns the url of the given url string .
gets the host from the given { @code url } .
/ * ------------------------------------------------------------
/ * <unk>
this method determines whether the given { @link stack } contains the given { @link url } .
registers / unregisters a plugin resource .
/ * ( non - javadoc )
returns the content type of the given content type .
returns the response body of this { @link document } .
/ * ( non - javadoc )
adds a new response to the response .
create a new { @link <unk> } instance .
/ * ( non - javadoc )
checks if the given element is a <unk> resource .
set the href attribute of the link .
create a new { @link href } from the given { @link document } .
/ * ( non - javadoc )
inserts a new namespace into the tree .
removes the href attribute .
/ * ( non - javadoc )
propfind helper method .
adds links to the link .
adds a { @link <unk> } to the { @link <unk> } .
propfind helper method .
returns the href for the supplied href .
returns an <code > iterator< / code > containing all of the <code > <unk> / code > s under the specified <code > name< / code > .
/ * ( non - javadoc )
returns the current status of the first child of the supplied document .
returns true if the first child is a child of the supplied resource .
add a child to this node .
sets the status of the request .
adds a new value to the json object
sets the value of the specified field in the current valuemap to the given value .
encodes the given username and password using the given username and password .
<p > <unk> . < / p >
/ * ( non - javadoc )
checks if the provided classes are of the correct type .
build proposals for the given document .
build proposals for the given document .
check if the proposals are contained in the file .
generate a collection of { @link <unk> } s proposals .
append a child element to the parent element .
append a child element to the parent element .
clone a dom node .
create a new element with the given name .
sets the id of the highlighted element .
helper method for { @link <unk> ( string ) } .
asserts that the given { @code object } is not <code > null< / code > . if the object is not <code > null< / code > throw an exception with the specified message .
asserts that the given { @code object } is not <code > null< / code > . if the object is not <code > null< / code > throw an exception with the given message .
creates a string representation of a text node .
reads the root element of the given element .
given a node and a parent element return a new node .
adds the given element to the given parent element .
get a child element from a parent element .
returns the first child element of the given parent element .
get the child text of a child element .
returns the first child element of the given parent element .
returns the first child of the given parent element .
returns the first child element of the given parent element .
returns the text of the first child of the given element .
returns the last child element of the given parent element .
checks whether the given element is a parent of the given element .
sets the number of namespaces to be used for formatting .
get the next sibling of the given element .
replies the text that corresponds to the specified symbol .
returns the next sibling element with the given name .
returns the simple name of a simple name .
adds the given { @link element } to the given { @link element } .
creates a qname from an xml element .
returns the simple name of a simple name .
adds the given { @link element } to the given { @link element } .
creates a { @link qualifiedname } for the given { @link element } .
----- private methods -----
replies the text that corresponds to the specified page .
add a child element to the given element .
----- public static methods -----
returns true if the node is a file node .
returns true if the node is a valid file node .
rewrite the given xmlfile
/ * ------------------------------------------------- [ helpers ] ---------------------------------------------------
append a child to the parent element .
adds a child element to the parent element .
instrument the contents of the given file .
creates the actions in the <unk> box .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if field corresponding to fieldid is set to <code > <unk> / code > .
sets the value of the given property to the given value .
sets the size of the receiver .
returns a string representation of the given constraints .
/ * ( non - javadoc )
parse the response .
run the algorithm
adds a lock entry to the registry .
<p > <unk> . < / p >
/ * ( non - javadoc )
add a new child of this node to the given { @link <unk> } .
remove a child from this node .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the resource string for the given key .
get the resourcebundle for the specified locale .
get the screen size color .
set the date time array .
decode date time value .
get the default repository directory .
/ * ( non - javadoc )
creates a new b - generated status of the given message .
send an error log message .
factory method for create a new { @link <unk> } .
convert the grid layout into grid layout .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link <unk> ( boolean ) }
/ * ( non - javadoc )
/ * ( non - javadoc )
create a new { @link <unk> } object .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns <code > true< / code > if the <code > name< / code > contains <code > null< / code > values .
notify all registered listeners that a property has been changed .
fire the property change event .
add a new value to the dirty list
set the value of a property .
initializes the preference .
initializes the bars .
/ * ( non - javadoc )
<p > sets the value of the <unk> attribute . < / p >
contributes the filter to the tool bar .
determine the dialect .
matches the parameters of the rule .
returns the url of the given url string .
decodes a uuid from a string .
encodes a byte array into base64 notation .
returns a new { @link <unk> } with the given { @link <unk> } .
save the contents of the given monitor .
creates the wcheckboxselect .
/ * ( non - javadoc )
get the url of the given url .
read stream .
read stream .
/ * ( non - javadoc )
adds the given value to the supplied { @link java . util . map } .
puts the supplied { @link url } into the { @link repositoryconfiguration } .
/ * ( non - javadoc )
adds a tag to the tree .
add a node to this node .
sets the offset and length of the file .
returns true if the request can be executed .
add a condition to the template .
<p > <unk> . < / p >
creates a list of { @link condition } objects matching the given condition .
checks that the { @code object } is not { @code null } .
<p > validate that the argument condition is { @code true } ; otherwise throwing an exception with the specified constraint . < / p >
creates a new { @link prop } instance .
/ * ( non - javadoc )
creates a new { @link prop } instance .
add a new status mapping .
read the last line from the file .
reads the code from the supplied string .
returns the proposals for the given object .
bind the given { @link string message } to the given { @link object } .
bind the given message and return values in the given string .
<p > <unk> . < / p >
encodes a string into a uuid .
<unk> > <unk>
creates a { @link <unk> } for the given { @link <unk> } .
create a sarl process .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> > <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
build a point from the graph .
returns the first node in the map .
convert an object to its string representation .
use { @link <unk> ( java . lang . string java . lang . string java . util . list ) } instead .
returns a new { @link prop } instance .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
~ methods **************************************************************************************************************************************
adds a button to the composite button .
creates a new element with the given locator and labels .
<p > <unk> . < / p >
returns the <unk> for the <unk> .
returns true if the given object is the same as the given object .
returns true if the element matches the given term .
parses the next token .
make a streamtokenizer for the arff format .
adds the specified root node to the end of the document .
add a { @link <unk> } to this { @link <unk> } .
returns an <code > iterator< / code > containing a <code > <unk> / code > or <code > null< / code > .
/ * ( non - javadoc )
parse a permission factor .
initialize the contents of this frame .
get the documentation adapter for the given class .
open a http connection .
sends a http post request .
download job status .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets whether or not the zoom level should be enabled .
creates a new { @link <unk> } for the given { @link document } .
create a new { @link <unk> } from the given { @link document } .
returns the version of the supplied version .
sets the length of the child element . <p >
/ * ( non - javadoc )
execute the wizard .
handle pull results .
sets the value at { @code index } to { @code value }
add a hashcode to the active lock
/ * ( non - javadoc )
filter the list of proposals for the given prefix .
this method determines the start of the document at the beginning of the document .
returns a list of all group rows in the given graph .
<editor - fold defaultstate = collapsed desc = visualization >
creates a dom part of the dom part .
returns the part of the report element .
replies the image descriptor for the given image path .
adds an image to the registry .
{ @link <unk> ( string string <unk> ) }
adds the given column to the table .
returns the index of the first node in this vector .
returns the width of a row .
/ * ( non - javadoc )
clears all grids .
get the value of the <unk> property .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
initialize raster viewer .
compute the bounds of this element .
draw a <unk> .
returns null if the channel is released
$non - nls - 1$
/ * ( non - javadoc )
/ * ( non - javadoc )
set the href attribute of the entity .
extracts the response from the server .
/ * ( non - javadoc )
copy source file to map
/ * ( non - javadoc )
/ * ( non - javadoc )
propfind helper method .
returns the response content of the request .
opens the enumeration .
/ * ( non - javadoc )
webdav propfind method method .
get the status of a property .
get the <unk> from the resource .
/ * ( non - javadoc )
returns the head of the response .
returns the lock destination .
creates a new <unk> from the given destination .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
remove tombstone lock
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
set the <unk> property <p > <b > note : < / b > this method should only be called when the <code > <unk> / code > is set . < / p >
delete a lock .
<p > <unk> . < / p >
<p > <unk> . < / p >
removes the response from the server .
examine the given http response code and throws a { @link <unk> } if the response code is invalid .
checks if the request exists .
/ * ( non - javadoc )
this method checks whether the given property has been set .
adds a new { @link <unk> } to the page .
returns an <code > iterator< / code > containing all the members of this <code > <unk> / code > .
parse a { @link <unk> } .
creates a figure out of the property .
this method gets called when a bound property has been changed .
returns the content length of this { @link <unk> } .
writes the contents of this <code > <unk> / code > to the specified <code > outputstream< / code > .
converts a byte array to a hex string .
converts a byte array to a hex string .
/ * ( non - javadoc )
appends the given element to the given parent object .
returns the child with the given index .
/ * ( non - javadoc )
loads the { @link prop } from the given { @link document } .
returns true if all child nodes are a child of this node .
returns true if the node is a child of the given node .
sets the value of the <unk> property .
returns true if the property is not set .
compute the levenshtein distance between two strings .
get recall text for <unk>
looks to see if the given method name is a valid java accessor .
gets the name of a property .
returns the name of the property that corresponds to a method name .
checks if the given method name is a getter method .
get the simple name of a class .
updates the viewer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
main runnable .
/ * ( non - javadoc )
decode a character .
/ * ( non - javadoc )
returns the index of the next argument as a string .
skip whitespace characters .
tries to find the <unk> metadata for the given resource .
add a resource to the <unk> .
<p > <unk> . < / p >
replies the files that exist in the given workspace .
enumerates all the defaults for the specified hashtable .
returns the value associated with the given key as a string .
gets the age of a tag .
gets the content length of this { @link <unk> } .
returns the maximum number of transaction isolation levels .
returns the value of the overwrite property .
/ * ( non - javadoc )
returns the timeout value of the response .
returns an enumeration of the names of all the properties in this dictionary .
set the value of a property .
/ * ( non - javadoc )
open the file .
reads the contents of a file into a string .
<p > <unk> . < / p >
returns the base url for the given url .
removes leading and trailing brackets from the string .
post / metadata / { projectname } / tokens
sets the body of the tokens .
/ * ( non - javadoc )
gets the children of this node .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
get list of child nodes list
add a child to a property list .
print all the elements in this vector .
prints the balance to the given node .
prints a line of text to stdout .
parses the given json string .
returns a { @link jsonvalue } from the given { @link double } value .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the image descriptor for the given id .
add a list of username / password patterns to the proxy server .
returns the context for the given origin url .
/ * ( non - javadoc )
<unk> > <unk>
translate the request .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
returns the value of the field with the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of the field with the given name or null if not found .
stop the proxy server url .
sets the value of the specified document field .
sets the { @link url } of the resource .
/ * ( non - javadoc )
create the pom .
/ * ( non - javadoc )
create rule flow .
create the {
/ * ( non - javadoc )
returns a list of all items in the list .
refresh the wizard .
create a buffered image from the specified output stream
enumerates all the defaults for the specified hashtable .
returns the value of the property with the specified key . if the key does not exist or the value is null or the value is null then the default value is returned .
returns an enumeration of the names of all the default values for this object .
run the buttons in the <unk> .
creates a new { @link <unk> } .
{ @inheritdoc }
returns the value of a named attribute as a string .
returns the value of the given attribute as a map .
/ * ( non - javadoc )
/ * ( non - javadoc )
publish the sarl project .
--- publish ---
sets the default sre .
{ @inheritdoc }
refresh the project .
/ * ( non - javadoc )
check the layer of the given { @code <unk> } .
return a list of {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
$non - nls - 1$
load the given launch file .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
creates and returns a new { @link <unk> } with the given function .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
extracts the contents of the resource version from the resource .
/ * ( non - javadoc )
/ * ( non - javadoc )
create a resource input stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
unmarshals a baseline value .
set the value of a block variable .
@see <unk> ( string string boolean )
returns the member with the given name .
returns the members of the resource .
replace the vertices in the graph .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
configure the authentication info .
gets the authorization url .
creates a strategy that can be used to create a new { @link <unk> } .
calculate the md5 hash of a string .
generates a sha - 256 hash of the specified string .
convert a string to a quoted string .
/ * ( non - javadoc )
/ * ( non - javadoc )
initializes the <unk> .
called after the user is pressed .
replies if the project is valid .
replies the settings for the named dialog .
create lexicon factor .
generates a {
<p > create . < / p >
adds the given edge to this model .
generates a new instance of { @link <unk> } from the given parameters .
<p > <unk> . < / p >
initializes the signature from the <b > <unk> / b >
<p > <unk> . < / p >
<unk> > <unk>
initializes a private key from an asn . 1 der encoded private key .
<p > <unk> . < / p >
<p > <unk> . < / p >
loads a rsa public key from a string .
get a slashed offset from a class name .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
<p > encrypt . < / p >
generates a pair of bytes with the same secret key as a pair of bytes .
<p > <unk> . < / p >
<p > <unk> . < / p >
/ * [ deutsch ] <p > interpretiert den angegebenen <unk> . < / p >
shuts down the executor service .
initialize column ranges .
imports documents into documents .
extracts the partition key value from the given { @link <unk> } .
method to abort the authentication process .
method to abort the authentication process .
method to abort the authentication process .
/ * ( non - javadoc )
/ * ( non - javadoc )
validate username password .
checks if the user is a right user .
/ * ( non - javadoc )
connect to options .
checks if the given user is a right user .
returns the username for the wildcards
add database properties to a database .
verify a verification request .
check if the user is a right user .
sets the configuration options .
initialize the login module .
authenticates the user with the specified username and password .
/ * ( non - javadoc )
clear the password
execute a verification request .
set the application urls .
capitalize the first character of a string .
returns true if the string needs to be quoted .
creates a new { @link evaluation } for the given { @code path } .
convienence method that creates a new <code > <unk> / code > .
returns the index of the given indexed property .
<p > <unk> . < / p >
clears the cache .
checks if slf4j is available .
returns the primitive class of the given object .
returns the class name of the given object .
gets the class name from a class name .
returns the class name of the given object .
returns the package name of the given class .
returns a string representation of the given java . lang . string
returns the string representation of the object s tostring () method .
returns the descriptive value of an object .
<p > <unk> . < / p >
returns the introspected properties of the given method .
get the parameter types for the given method .
gets the parameter types for a constructor .
returns a permission object for the given method .
returns the wrapper class of the given class .
执行方法<br > <unk>
returns true if the given class is more specific to the given class .
<p > <unk> . < / p >
<p > calls the named method in the given object . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
@param field @param value @param value @param value optional value
returns a clone of the given class .
<p > <unk> . < / p >
<unk> > <unk> { @link <unk> } <unk>
{ @link <unk> ( string ) }
/ * ( non - javadoc )
gets the read method .
returns whether the given { @link <unk> } should be converted to the given { @link <unk> } .
returns true if the child node is a child of the given child .
<p > <unk> . < / p >
/ * ( non - javadoc )
print the trace of the stack trace .
<p > null . < / p >
read a character .
/ * semicolon
/ * multiplication for a bunch of
/ * or for or || then
/ * or for or || then
/ * or for or || then
/ * or for or || then
/ * and for then and then and then and then and then then and then then and then and then then then and then then and then and then then then and then then then
/ * equality for == eq ! = ne then compare
/ * and for backward compatibility
/ * multiplication for equality
/ * multiplication for a bunch of
/ * multiplication for a bunch of
/ * multiplication for a bunch of
/ * multiplication for a bunch of them then unary then then then add them to the ones then
/ * <unk>
/ * <unk>
/ * <unk>
/ * <unk>
<unk> > <unk>
<unk> <unk> obiekty wykorzystując <unk> <unk> .
returns { @code true } if the given value is { @code true } .
converts an object to a long .
coerce to a double .
convert the given value to a biginteger .
convert value to bigdecimal .
cast a value to a boolean value .
returns true if the given value is an instance of the given class .
convert the char value to an object .
<unk> > <unk> > null< / code > <unk> > null< / code > <unk> > null< / code > <br >
convert a value to an object .
cast a object to a long .
returns the best - effort type for the range of an operation that implements an operation of the specified type .
returns the numeric type of two numeric types .
convert a string to a number .
creates a new real number from the given number .
calls { @link <unk> ( java . lang . object java . lang . object java . lang . object java . lang . object java . lang . object java . lang . object java . lang . object java . lang . object java . lang . object java . lang . object java . lang . object java . lang .
/ * ( non - javadoc )
<p > <unk> . < / p >
returns the median type of the given type .
/ * ( non - javadoc )
/ * ( non - javadoc )
pop evaluation of the current evaluation model .
<p > <unk> . < / p >
returns the type name of the given type .
gets root expression
returns true if the expression should be cast to the given expression .
search for a method in the given type .
<unk> > <unk>
generates the <unk> for the given field .
<p > <unk> . < / p >
returns the class loader .
returns the class loader for the class .
removes the node from the stack .
dumps the given prefix to stdout .
build the lock .
{ @link <unk> }
{ @inheritdoc }
add a child to this node .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
rehashes the contents of this map into a new capacity .
unescapes the character at the end of the character .
/ * ( non - javadoc )
<p > compile . < / p >
creates a new { @link <unk> } with the given root object .
<unk> <p > <unk> / p >
returns a {
returns a { @link <unk> } with the given { @code root } and { @code members } .
adds the given value to the ognl expression .
create a new { @link <unk> } instance using the given { @link classloader } .
<p > <unk> . < / p >
returns the type converter .
<p > <unk> . < / p >
returns the value of the given ognl expression in the given root object using the given root object .
<unk> <p > function : <unk> / p > <p > description : < / p >
create a value expression using the ognl expression
<unk> <p > function : <unk> / p > <p > description : < / p >
<p > <unk> . < / p >
gets the value of the given ognl tree .
returns the { @link value } of the given { @link object } as a { @link object } .
<p > <unk> . < / p >
<p > <unk> . < / p >
<unk> <p > <unk> / p >
create a value expression using the given {
sets the value of the given value to the target object .
sets the value of an el expression .
returns an {
returns true if the given expression is a constant .
gets the default watch service id .
close the request .
creates a watch for the specified file .
{ @inheritdoc }
reads the contents of a file into a byte array .
<p > <unk> . < / p >
read string content from file .
creates a copy of the given source file with the given imports .
<p > process . < / p >
creates an archiver for the given archiver name .
checks to see if the given selection has the given data .
get the resolved artifact for the given artifact id and version .
reads the contents of a file into a byte array .
/ * --- overridden methods ---
{ @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> }
/ * ( non - javadoc )
create the project .
add a system property to the system properties .
/ * ( non - javadoc )
/ * ( non - javadoc )
notifies the watcher that the given file is created .
{ @inheritdoc }
/ * ( non - javadoc )
increments the {
get the rolling sum of the partition .
return the histogram values for the given <unk> .
get the largest value for the given { @link hystrixrollingnumberevent . <unk> } . <p > this is the same as { @link <unk> } except that { @link <unk> } is the same as the { @link <unk> } or { @link <unk> } .
gets the current bucket .
add a value to the current bucket .
returns the sum of all the cells in this cell .
hides the navigation icon .
creates a new instance of the {
show the password dialog .
change the contents of the directory .
refresh the activity state of the button .
creates the file observer .
initializes the selected folder .
creates and returns the folder error listener . <p >
checks whether the given file is a valid cache directory .
checkstyle : on
returns true if the specified domain is a valid domain .
returns true if the specified <code > string< / code > matches the specified <code > string< / code > . leading dots are ignored if present . the search is case - insensitive .
returns true if the specified <code > string< / code > matches any iana - defined generic domain . leading dots are ignored .
returns true if the specified <code > <unk> / code > <code > <unk> / code > matches the specified <code > <unk> / code > . leading dots are ignored .
returns true if the specified <code > string< / code > matches any of the specified <code > <unk> / code > . leading dots are ignored if present . the search is case - insensitive .
gets the string representation of the given method .
called when the activity is first created .
start a job in the foreground .
schedule a job with the given id and runnable .
handles a start tag .
/ * ( non - javadoc )
paint the title pane .
gets the <code > <unk> / code > from the <code > <unk> / code > .
end a list of objects
constructs a <code > <unk> / code > from the given color string .
returns the search at the specified coordinates .
paint a motion edge .
moves the circle to the specified location .
grows the image at the specified position .
returns the rectangle containing the crop rectangle of the crop rectangle .
create a rect that can be used to draw a rectangle .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the position of the rich text editor .
sets the text to be displayed .
export a phonebook
create a new { @link span } with the specified { @link charsequence } .
apply the effect to the given value
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package
this method is used to retrieve the { @link view } from the { @link <unk> } and { @link <unk> ( int ) } { @link <unk> ( int ) } and { @link <unk> ( int ) } .
builds the drop down view .
convert the text to a <unk>
******************** methods *******************************************
highlights two <unk> .
/ * ------------------------------------------------------------
returns the mime type of a file .
returns the absolute path to the given file .
determines the original file path for the given uri .
/ * ( non - javadoc )
/ * ( non - javadoc )
set or set attribute .
encodes a string into a space - separated string .
adds an attribute to the list .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the file name from the given file .
load a typeface from the assets folder .
<p > <unk> . < / p >
<p > write bytes to the <code > <unk> / code > . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
writes the contents of this { @link <unk> } to the given { @link outputstream } .
<p > <unk> . < / p >
returns a new {
read number of bytes from the buffer .
sets the font size .
normalize a filename .
normalize a filename .
converts the given path separator to a system separator .
returns the index of the extension of the given filename .
/ * private methods
recomputes the focus point of the solution
ensure that the given view is visible .
<editor - fold defaultstate = collapsed desc = launcher >
add a class to use .
scan the next byte .
matches the given value against the set of groups .
returns true if the end of the list is selected .
read the next line from the input stream .
returns the next element in the iteration .
evaluate and return the <unk> .
set the attribute value .
set a child element to the front of the parent element .
returns the name of the first element of the given element .
returns the int value for the given attribute name .
compress a file and return a bitmap ready to be compressed .
returns true if the authority is a valid authority of a valid authority ( a ) or a valid authority ( a ) or a valid authority ( a ) .
checks if the given path is a valid path .
delete all paragraphs
/ * ( non - javadoc )
/ * ( non - javadoc )
collapse the current span
returns true if the given string is a valid email address .
returns true if the authority is a valid domain name .
/ * ( non - javadoc )
pops the redo stack from the undo stack .
redo the next redo stack
flushes the stack and clears the redo stack .
pushes the given operation onto the stack .
escapes an assertion - replaces assertion .
/ * ( non - javadoc )
gets the <unk> .
returns true if the specified thread is likely to be interrupted .
decodes a file and returns a decoded bitmap .
load the bundle fonts
get a { @link set } of all the fonts in the specified assets .
returns a map with all the fonts in the assets folder .
returns a map with all system fonts . <p >
checks if the given { @link inputstream } is a { @link java . io . inputstream } .
reads a {
<p > <unk> . < / p >
converts the given input stream to an input stream .
reads the contents of a url into a byte array .
/ * ( non - javadoc )
<p > <unk> . < / p >
<p > converts a string to an array of bytes . < / p >
parse the content of a reader into a string .
reads the contents of a stream into a list of strings .
reads all lines from the given { @link inputstream } and returns a list of { @link string } s .
creates an iterator for the lines in the specified stream .
creates an input stream for the given input stream .
write the data to the given writer .
writes the given string to the given writer .
write a string to the specified output stream .
writes the given string to the given output stream .
write a string to the specified output stream .
write the data to the given writer .
writes the given string to the given output stream .
write a string to the specified output stream .
writes the given collection of lines to the given output stream .
writes a collection of lines to the output stream .
writes the given collection of lines to the given output stream .
writes the lines of the given collection to the given writer .
copy bytes from <code > reader< / code > to <code > writer< / code > .
<unk> + <unk>
<unk> <unk> <unk>
/ * ( non - javadoc )
returns a new instance of the <unk> option .
parses the given input source file .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * <unk>
looks for an array of bytes in the buffer
restart the given element .
write a single element .
/ * ( non - javadoc )
returns the prefix of the given class name .
declare a namespace prefix .
creates a version declaration .
unquote a string .
splits a string into an array of strings .
get the soap message body .
creates a new logger name .
save the state of the current state .
this method is called when the pager is destroyed .
opens the editor . <p >
deactivates the editor . <p >
add toolbar to the toolbar .
remove toolbar from the toolbar .
过滤<br > 过滤过程通过传入的editor实现来返回需要的元素内容，这个editor实现可以实现以下功能：
initialize the image .
/ * ( non - javadoc )
gen - last : <unk>
this method is called when an event is received .
centers the matrix .
updates the base matrix .
update the size of the bitmap .
checks if the given editor exists in the selection .
过滤<br > 过滤过程通过传入的editor实现来返回需要的元素内容，这个editor实现可以实现以下功能：
remove an object from the selection .
/ * package
/ * ( non - javadoc )
/ * package private
encodes query parameters into a uri .
url - decodes a string .
implements { @link <unk> ( string int int int ) } .
pick out a picture from a specific activity .
called when the activity is first created .
gets the width and height of the bitmap .
creates and returns a bitmap with the specified width and height .
rotate bitmap around given image .
called when the activity is first created .
/ * ( non - javadoc )
sets the output stream .
sets the namespace uri for the given uri .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the prefix for the given namespace uri .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
add attributes to the xml document .
/ * ------------------------------------------------- [ add ] ---------------------------------------------------
/ * package
/ * ( non - javadoc )
write out the name of an element .
/ * ( non - javadoc )
receive notification of the beginning of an attribute .
remove all attributes from the hashtable .
creates a new kinesis client to amazon kinesis client .
ensures that a stream of the specified stream is under the provided stream name .
this function creates a stream from the provided streams .
this method retrieves information about a stream .
converts the given class to a { @link <unk> } .
same as {
completes the snapshot snapshot .
this method retrieves information about a stream .
wait for the next request to execute .
gets the records from the stream .
retry the given action with retries .
tries to create an {
create a fix that can be used to construct an { @link <unk> } .
checks if the bucket region is accessible from the head of the bucket .
creates a { @link method } for the given { @link <unk> } .
on snapshot .
locates the contents of the given file in the given source folder .
create a {
validates the file .
trigger a wildcard .
replace the given string in the given string with the given new pattern .
convert a collection of { @link collection } objects to a delimited { @link string } .
<p > <unk> . < / p >
{ @inheritdoc }
/ * ( non - javadoc )
creates and returns a new { @link <unk> } .
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
build the javascript .
/ * ( non - javadoc )
updates the system property with the given key .
returns the {
loads the application configuration .
<p > <unk> . < / p >
<p > get bean processors map . < / p >
load the computation graph from the given file .
create a new { @link <unk> } from a standalone application .
creates an inputstream for the atlas step .
creates a new { @link <unk> } .
returns a string containing the namespaces that match the given replacement string .
provide a map of { @link resource } s .
creates a map of { @link <unk> } to post processors .
/ * ( non - javadoc )
submits the callables to the queue .
/ * ( non - javadoc )
compile a remote script .
/ * ( non - javadoc )
{ @inheritdoc }
/ * inflates the <unk> .
{ @link <unk> ( string ) }
initialize the <unk> for the <unk> .
creates a new { @link <unk> } .
handles a post request .
returns the resource url for the given resource .
fires a value change event to all listeners .
reloads the property change listeners .
/ * ( non - javadoc )
creates a new { @link fiber } with the given name and name .
sets the period of time to be bound to the scheduler .
stops the scheduler .
returns an input stream for the request .
gets the data for the specified location .
add a collection of { @link <unk> } s .
add a collection of { @link <unk> } s .
add a { @link <unk> } to the { @link <unk> } .
gets the script builder .
creates an instance of { @link attributetype } for the specified type .
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the context folders .
<p > <unk> . < / p >
<p > <unk> . < / p >
executes a action .
returns the version of the given file .
adds the given charset to the given charset .
get an input stream from a uri .
/ * ( non - javadoc )
provide a map of {
writes the error to the specified file .
/ * ( non - javadoc )
transforms a { @link <unk> } into a { @link <unk> } .
checks if the given resource is a wildcard or wildcards .
creates the base name folder for a given resource .
create a rule for a given resource .
/ * ( non - javadoc )
validate the specified uri .
return a new instance of {
https : // www . elastic . co / guide / en / elasticsearch / reference / current / docs / <unk> . html
creates a new { @link <unk> } .
get the servicedirectorymanagerfactory .
closes the mbean server .
configures the configuration selector .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
sets the overridden configuration .
shutdown the filter =======
identify duplicate group names .
invoke the {
{ @inheritdoc }
validate the given uri .
/ * ( non - javadoc )
send the request processors .
this method is called by the { @link <unk> ( bundle ) } method .
process a request .
/ * ------------------------------------------------------------
process the request .
/ * ------------------------------------------------------------
splits a string array into an array of strings .
loads the script builder .
loads the script builder .
loads the properties from the given { @link inputstream } .
<p > <unk> . < / p >
create standalone context .
get the servicedirectorymanagerfactory .
create a new instance of the { @link <unk> } .
returns the servicedirectorymanagerfactory .
creates the { @link <unk> } .
process resource assignments .
returns true if the target group contains a target group .
/ * ( non - javadoc )
determines if the resource is enabled .
returns the { @link inputstream } for the specified resource .
creates a mime type from a url .
removes the file extension from the given uri .
upload file with given url .
/ * ( non - javadoc )
create a new { @link <unk> } .
creates a new factory instance .
returns a new instance of {
sets the transformers that are used by the dao .
transforms a { @link <unk> } into a { @link <unk> } .
{ @inheritdoc }
/ * ( non - javadoc )
checks if the given url is a valid url .
merges the given list of { @link resource } s .
/ * ( non - javadoc )
creates and returns a collection of the callables that are executed in parallel .
applies the pre - processors read to the given resource .
copy the contents of the { @link inputstream } to a { @link <unk> } .
uploads the given { @link <unk> } to the given { @link <unk> } . <p >
/ * ( non - javadoc )
deduplicates the given object with the given object .
returns the { @link <unk> } annotation for the given { @link object } .
returns all fields of the given delegate object .
/ * ( non - javadoc )
fuzzily match an image .
initializes the css uri for external web requests .
creates a new image location for the given css url .
adds an argument to the argument list .
handles the creation of a <unk> .
called when the cache is invalidated .
this method is called by the {
add a collection of data transformer to the output .
this method will be called when a { @link <unk> } is received .
/ * ( non - javadoc )
converts the given string to a map .
writes the content of the given file to the given file .
replace the embedded properties of the form $ { key . name } in the input string .
replace the variables in the given string .
{ @inheritdoc }
determines whether the given resource is enabled .
renames the given file .
/ * ( non - javadoc )
convert a { @link <unk> } to a { @link <unk> } .
determines whether the given resource is eligible for <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
returns a new { @link org . openqa . selenium . by } by its locator .
/ * ( non - javadoc )
returns an input stream of the specified uri .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
create a new { @link <unk> } instance .
register a new { @link java . util . path } with the specified processor .
write a memento to a writer .
factory method to create a new { @link <unk> } .
/ * ( non - javadoc )
imports the data from the given file to database .
merge the given resource .
reads the contents of the given input stream into a string .
create a resource instance from a resource path .
过滤<br > 过滤过程通过传入的editor实现来返回需要的元素内容，这个editor实现可以实现以下功能：
returns the name of the group resource .
returns the resource type for the given request .
returns the url of the resource identified by the given resource .
return true if the given request is a servlet .
copy the content of the given resource to a writer .
{ @inheritdoc }
writes the content of the given file to the given file .
find all imported resources .
creates a new resource .
/ * ( non - javadoc )
returns true if the last modification date of the request has been modified since the last modified timestamp of the request .
creates and returns a validator which allows the request to be not null .
returns a string representation of the given array of strings separated by the given separator .
transforms a comma separated list of strings into a list of strings .
create a new xml object from the given inputstream .
/ * ( non - javadoc )
create a new reef script builder .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
start the { @link <unk> } .
wait for the service to be used .
creates a link to the gzip bundle .
destroys the cache .
fill a { @link list } of { @link <unk> } s .
gets the siblings of the cache .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
rename a configuration .
resolves the destination folder .
/ * ( non - javadoc )
wrap a { @link <unk> } in a { @link runtimeexception } .
{ @inheritdoc }
/ * ( non - javadoc )
changes the version of the resource to the given group .
set the current physics engine .
{ @inheritdoc }
starts a {
/ * ( non - javadoc )
locates a file resource .
return a new instance of {
{ @inheritdoc }
create a new { @link <unk> } .
creates a new { @link <unk> } for the given { @link <unk> } .
process the content of a uri .
process the content of the given reader .
/ * ( non - javadoc )
gson invokes this call - back method during serialization when it encounters a field of the specified type .
gets the content of the specified resource .
create a new { @link filesystem } for the given file .
locates a jar file in the classpath .
extracts the path from a uri .
/ * ( non - javadoc )
/ * ( non - javadoc )
prints the xml document to the given document .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > decorates the specified { @link <unk> } . < / p >
writes the document to the specified file .
adds a new element to the list .
process the request .
reads the checksum from an input stream .
validate the total number of errors .
/ * ( non - javadoc )
{ @inheritdoc }
returns a read lock for the specified key .
<p > <unk> . < / p >
creates a process from the given source file .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
{ @link <unk> }
----- private methods -----
stop the task .
/ * ( non - javadoc )
removes the script tag from the input .
checkstyle : off
inherited from http : // www . w3 . org / protocols / rfc2616 / rfc2616 - <unk> . html
parse a header line .
converts http response headers to a set of headers .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
gets the path info from the given location .
gets the package path .
returns { @code true } if the given string starts with the given { @code prefix } .
gets the client ip from the specified request .
gets the request headers from the request .
creates a new { @link <unk> } .
{ @link <unk> ( comparable ) }
create a copy of a resource processor .
loads a property file from the classpath .
copy the contents of the given reader to the given writer .
creates a temporary file with the given prefix .
this method converts a string to a string
download image url .
returns the full path of the given path .
<p > normalizes a path . < / p >
helper method to create a new { @link <unk> } .
gets the name of the attribute .
set attribute .
removes all attributes of the given attribute .
reads the content of a file into a string .
write a string to a writer .
creates an instance of { @link <unk> } .
creates a <unk> based on the report .
builds the root document of the report .
/ * --- private methods ---
creates the issue element .
creates a new { @link context } for the given { @link httpservletrequest } .
process the correlation id .
process the correlation id .
wrap a {
decorate the {
compute the cache value by content .
schedule a {
returns a newly - created { @link <unk> } for the given { @link cache } .
this method is called when an exception occurred .
------------------------------------------------------ resource change
/ * ( non - javadoc )
update hash for a group .
checks if the given resource is a resource type .
adds a list of resources to this resource .
adds a resource to the group .
sets the resources to be used by the server .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the command path for a file .
/ * ( non - javadoc )
encodes the given { @link java . nio . bytebuffer } into a { @link java . nio . bytebuffer } .
encodes the given object to a base64 - string .
get the list of public groups for a user .
validates the given element .
create a list of child resources .
convert resource to resource .
internal method to create a resource .
returns the { @link <unk> } instances for the given { @link <unk> } .
returns a map of all the variables in this inherited map .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a { @code collector } that accumulates elements into a { @code map } whose keys and values are the result of applying the provided mapping functions to the input elements .
{ @inheritdoc }
creates a new { @link <unk> } with the specified { @link <unk> } .
an implementation of { @link <unk> ( iterable ) } .
creates a new { @link <unk> } with the given { @link duration } and { @link timeunit } .
returns a { @link map } of { @link <unk> } s that satisfy the given { @code timeout } .
create a new concurrent { @link timer } .
stop the timer .
get the named timer for the given timer name .
get a timer with the specified name .
get the { @link timer } registered for the given name .
get a { @link timer } registered with the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
updates the cluster counters .
update the {
try to increment the counter by incrementing .
add a rule to the link reporter .
removes the given rule from this context . <p >
/ * [ deutsch ] <p > ermittelt ob zum angegebenen element ein . < / p >
gets the default filter .
returns set of sub - property chains .
/ * package
visible for testing
checks to see if the given set of indexed assets matches the given property .
add the given property to the model .
called periodically to ensure that the operation is done .
restores the status of the response .
determines whether the job is inconsistent .
gets the { @link taxonomy } from the { @link <unk> } .
gets a set of taxonomy ids for a classification .
gets explanations for an ontology .
full restore axioms .
gets a reference to an instance of an ontology .
gets an instance of an individual ontology .
this method gets invoked by the ontology manager .
gets explanations for a single object property .
determines whether the specified class expression should be signed with the specified class expression .
binds the specified class expression with respect to the given class .
----- protected methods -----
queries the class with the specified class expression .
gets the set of direct elements from the given class expression .
gets the set of reasoner axioms for the specified class expression .
determines if the specified <unk> is entailed by the reasoner axioms .
checks if the specified axiom is entailed by the <unk> .
returns an { @link set } of { @link integer } { @link integer } { @link integer } { @link integer } { @link integer } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> }
/ * <unk>
/ * ( non - javadoc )
registers the given { @link <unk> } .
gets explanations for an unsatisfiable .
execute the { @link <unk> ( <unk> ) } method .
{ @inheritdoc }
/ * ( non - javadoc )
invalidates all of the sub - nodes of this { @link <unk> } .
{ @inheritdoc }
{ @link <unk> ( <unk> int ) }
returns a list of {
<unk> > <unk>
returns a list of {
/ * ( non - javadoc )
returns a link to this link .
/ * ( non - javadoc )
/ * ( non - javadoc )
compute the initial capacity for the given initial capacity .
removes the position from the array at the specified position .
remove all the positions in the specified array .
search for the positions of the specified array .
<p > returns <code > true< / code > if the <code > <unk> / code > contains the given object <code > <unk> / code > . < / p >
replies if the element at the specified position in the array is contained in the array .
checks the occurrence of the occurrence of the given occurrence .
convert an exception to a { @link <unk> } .
stop the timer .
/ * ( non - javadoc )
add a {
attempts to load the default class .
creates a { @link org . <unk> . <unk> . <unk> } based on the { @link <unk> } of this { @link <unk> } .
initialize the <unk> instance .
adds a new rule to the list of { @link <unk> } s .
removes the specified { @code <unk> } from the list of { @code <unk> } and { @code <unk> } .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
create a heap from the given key - value pair .
enlarges the table .
rehashes the list to a new array .
this method initialises the configuration .
returns the index of the column at the given position .
/ * package
/ * package
see { @link <unk> ( <unk> ) } for a given { @link <unk> } .
see { @link <unk> ( <unk> ) } for a given { @link <unk> } .
{ @link <unk> ( <unk> <unk> ) }
terminal operation returning a copy of the specified { @code map } .
finds stale entries of the given entry .
deletes a structural item from the hash table .
removes stale entries from the set .
rehashes the contents of this buffer into a new array .
removes all of the mappings from this map . the map will be empty after this call returns .
invoked by default implementation of { @link <unk> ( <unk> ) } .
/ * ( non - javadoc )
combines two 32 - bit hashes into a 32 - bit hash .
combines two { @code <unk> } objects .
combines two { @link <unk> } s into an { @link <unk> } .
combines two { @code <unk> } s into a { @code int } .
<unk> > <unk>
compute the median of a list of objects .
turns a { @code key } into a { @code int } .
unzips a stream to an output stream .
create a list of { @link java . util . list } of { @link <unk> } instances .
creates a <code > <unk> / code > from the specified <code > <unk> / code > .
process the next input .
returns a {
{ @link <unk> ( java . lang . string ) }
/ * ( non - javadoc )
clears all the deleted rules .
/ * ( non - javadoc )
set the incremental delay for incremental registration .
adds a conjunction to the left and right conjunction .
removes the given conjunction from the given conjunction .
/ * ( non - javadoc )
returns the {
<p > <unk> . < / p >
dumps the given taxonomy to a file .
----- private static methods -----
dumps the given metadata to a file .
dumps a response to a writer .
gets a list of terms from a taxonomy .
transforms a {
<p > this method prints a single value to a { @link <unk> } . < / p >
block activation .
calculates the hash of a sub - entity taxonomy .
/ * ( non - javadoc )
submit and return true .
append the text to the file .
resets this group .
{ @inheritdoc }
rehashes the contents of this map into a new array .
rehashes the contents of this map into a new capacity .
returns a map of system property names .
run the task .
<p > run . < / p >
run a task on behalf of a task .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
create a new { @link <unk> } for the given { @link rule } .
returns a {
process all active context training algorithm .
defines the computed state of the query .
matches the given {
register a query constant .
returns true if the specified class expression evaluates to { @code <unk> } .
get the computed class for the given class expression .
get the computed super classes .
get the sub - classes of a class .
get all of the direct instances of a class .
attempts to load the default conversation .
/ * <unk>
calculates the hash value of a { @link <unk> } .
adds a type node to the list .
/ * ( non - javadoc )
sets the value of the <unk> property .
returns an iterable that combines the concatenation of the given iterables .
returns an iterable containing all of the elements in the given iterable that are contained in the specified iterator .
list1 <unk> .
creates a { @link set } view of the keys contained in this { @link set } .
returns a { @link java . util . map } of { @link map } s .
serializes the { @link collection } of { @link collection } s to a { @link collection } of { @link collection } s .
converts a { @link set } of { @link <unk> } to a { @link multiset } .
returns a fragment of the specified {
change the position of the given fragment .
rehashes the contents of this map into a new array .
rehashes the contents of this map into a new one .
adds the specified value to the { @link <unk> } .
internal remove method
ensure that the table is a power of 2 .
translate a list of <unk> to a list of <unk> .
add a { @link <unk> } to this { @link <unk> } .
log a file creation .
/ * ( non - javadoc )
log invalid task type .
{ @link <unk> ( string logger ) }
log memory usage .
set the {
/ * ( non - javadoc )
utility method to get a list of subjects from a class . <p >
/ * ( non - javadoc )
/ * ( non - javadoc )
gets a property for a property .
determines whether the specified class expression should be signed with respect to the specified class expression .
gets the set of classes that are equivalent to the specified class expression .
gets the classes that are direct or indirect .
/ * ( non - javadoc )
gets the set of super - classes that are derived from the specified class expression .
/ * ( non - javadoc )
gets the properties of a property property .
exports the properties of this node to a set of properties .
gets all the instances of the specified class expression .
/ * ( non - javadoc )
/ * ( non - javadoc )
determines if the class expression should be signed with respect to the specified class expression .
print the help for <code > options< / code > with the specified command line syntax .
adds the specified number of padding to the end of the array .
同 system . out . println () 方法，打印控制台日志
returns a string representation of the given character .
compare two owl uris .
main entry point .
/ * package
create a { @link <unk> } from a { @link <unk> } .
removes all implementations of a given class from the classpath .
adds the given {
sleep for the current thread
get the request body from the given request .
/ * ( non - javadoc )
/ * ( non - javadoc )
add a property for a property path .
/ * ( non - javadoc )
returns true if the input component is a single value .
returns true if the given string is a valid long literal .
adds the given link relation .
sets the data type of this component .
sets the value of this anchor attribute .
/ * ( non - javadoc )
/ * ( non - javadoc )
set the media character encoding .
adds a revision attribute to the html anchor .
get the marker anchor .
adds a multi - valued field to the list of values .
returns the canonicalized form of the link
{ @inheritdoc }
expands the { @link link } of the given { @link object } .
expands the given { @link map } .
gets a list of all the rels - ext link .
<p > get . < / p >
returns <code > true< / code > if any of the required parameters are required .
creates a new forwarded --------------------------------------------
returns the value of the given property value .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the specified <code > property< / code > matches the specified <code > property< / code > .
helper method to determine whether or not the implicit property include property include or implicit property include property types .
/ * ( non - javadoc )
check if the request matches the request .
returns the default value for the request parameter .
returns an array of {
/ * ( non - javadoc )
liberty change end
gets the name of the <unk> object in vocabulary .
method that can be called to ask implementation to serialize values of type parameters .
returns a map property of the given input parameter .
returns a property name for a given property .
convert a { @link <unk> } to a { @link <unk> } .
convert a { @link <unk> } to a { @link uberdata } .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the name of the entity input parameters .
returns the value of the given property or null if not found .
get a vocabulary from the specified properties object
returns a list of all terms contained in the specified {
list all events that match the given criteria
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * package
/ * ( non - javadoc )
append an input parameter to the input parameter .
/ * ( non - javadoc )
/ * ( non - javadoc )
builds an { @link <unk> } from the { @link <unk> } .
set the link .
add a link to the link .
add a list of { @link link } s to the { @link <unk> } .
set a link parameter .
get the { @link <unk> } .
returns the current request context path .
sets the { @link <unk> } .
returns a list of {
parses the request parameters into a map .
expand the uri template with the given parameters .
appends the components of the given { @code parameters } to the given { @code parameters } .
returns a copy of this instance of {
gets the first child node with the given name .
remove a relationship from the { @link <unk> } .
returns an iterator over the {
/ * ( non - javadoc )
creates a <i > mutable< / i > { @code linkedhashset } instance containing the given elements .
returns an empty { @code <unk> } .
creates a { @link <unk> } instance for the specified { @link multimap } .
creates a { @code <unk> > } pair for the given { @code <unk> } .
returns a { @code map } whose keys are the values in { @code second } and { @code multimap } are immutable .
<unk> > <unk>
converts an integer to its ordinal value .
<unk> > 是 { @link <unk> ( iterable ) } 的逆方法<br > 比如传入数据：
applies the given { @link <unk> } to the specified { @link map } .
returns an empty { @code treemap } .
returns a new { @link <unk> } backed by the specified { @link comparator } .
returns an { @link map } containing all the values contained in the { @link <unk> } .
{ @inheritdoc }
/ * ( non - javadoc )
returns a comparator that evaluates to <code > comp () < / code > .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
add a value to the hash map .
create a map composed of two nodes .
creates a new { @code stream } from the given { @code iterator } .
/ * package
returns an { @link <unk> } for the given { @link iterable } .
/ * ( non - javadoc )
returns an {
{ @inheritdoc }
zip the elements of this stream into a non - overlapping one .
returns a new { @code treeset } instance for the given { @code comparator } .
converts a { @link iterable } into a { @link <unk> } .
returns a pair of items from the given iterable
/ * ( non - javadoc )
returns an iterator over the elements of this stream .
returns the value of the specified { @code option } .
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
static factory method for wrapping a value of type <code > b< / code > in a { @link these } .
creates a new instance of the given { @link map } .
url parameter parse
generic method to cast a list to a list .
create a bounding box filter .
{ @link <unk> ( object ) }
obtains a { @code range } from a { @code bytebuffer } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
given a class return a list of structures that can be registered with the given class .
static factory method for wrapping a value of type <code > g< / code > in a { @link choice7 } .
returns an empty <code > <unk> / code > .
returns an immutable map containing the items of the specified items .
returns the int value of the input byte array .
returns the element at the specified position in this node .
{ @inheritdoc }
{ @inheritdoc }
returns a fluent iterable whose iterators traverse first the elements of this fluent iterable followed by the elements of this fluent iterable .
{ @inheritdoc }
creates a new list of nodes .
static factory method for creating a { @link choice8 } .
creates a new instance of the given { @link <unk> } .
create a mutable { @link map } with the given { @link map } .
create a new mutable { @link hashset } .
returns a mutable {
returns a mutable {
returns a flowable that emits the items of the given items . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . <unk> . png alt = >
returns a new set containing the given items .
returns a sequential ordered { @link <unk> } for the specified { @link map } .
selects the elements of the specified iterable that are equal to the specified comparator .
sorts the given { @link iterable } using the specified { @link iterable } .
returns a flowable that emits the items of the specified items . <p > <img width = 640 src = https : // raw . github . com / wiki / reactivex / rxjava / images / rx - operators / <unk> . png alt = > <dl > <dt > <b > backpressure : < / b > <
returns an immutable { @code immutablelist } with the given items .
creates a copy of the given character sequence .
indent a number of spaces
returns a string representation of the items in the given array .
以 conjunction 为分隔符将数组转换为字符串
creates a list of { @link <unk> } objects .
/ * ( non - javadoc )
returns an array containing all of the elements in the given array .
inserts the specified element into the array at the specified index .
<p > appends the given elements to the end of the array . < / p >
creates and returns a new array consisting of the subset of items in array <code > <unk> / code > .
<unk> > <unk>
returns a copy of the given { @code original } array .
inserts the specified array into the given array .
/ * ( non - javadoc )
borrowed from seam
abort the transaction .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
package - private for testing
/ * ( non - javadoc )
returns a list of all the log files found in the given directory .
checks if the given directory is valid .
get all the interfaces implemented by the given class .
create a new defer constructor .
add the given <unk> to the given <unk> .
returns a string representation of the given {
convert a primitive type name to a jvm type name .
copies methods from the given class source to destination class .
copies methods from the given method .
/ * ( non - javadoc )
/ * <unk>
convert an integer to an address
create a new address from a string representation
/ * ( non - javadoc )
todo : <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
static lifecycle callbacks
/ * ( non - javadoc )
displays the category data .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * documented <unk>
/ * ( non - javadoc )
<pre > 算法 : < / pre >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
helper method to update the <unk>
returns the number of activities available in this table .
returns the number of activities mapped to the given executor .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
converts the specified { @link <unk> } to a { @link long } value .
{ @inheritdoc }
returns the index of the task executed in this task .
{ @inheritdoc }
returns the time in milliseconds .
{ @inheritdoc }
get the index of this task .
{ @inheritdoc }
{ @inheritdoc }
/ * public static boolean <unk> ( <unk> <unk> ) { int <unk> = 0 ; <unk> . <unk> () ;
{ @inheritdoc }
returns true if the property is enabled or not .
<p > <unk> . < / p >
<p > informs the <code > <unk> / code > for the given <code > <unk> / code > service . <p > <p > the <code > <unk> / code > of the given <code > <unk> / code > is a <code > <unk> / code > . < / p >
/ * ( non - javadoc )
<p > activate the given <code > <unk> / code > to the given <code > <unk> / code > . < / p >
least squares solution of the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > given the given <p / > <p > <p > <p > <p > <p > <p > <p > this method is called by the given { @link org . xml . spi . spi . spi . spi . spi . spi . spi . spi . spi . spi . spi . spi . spi . spi . <unk>
/ * ( non - javadoc )
resolve a service .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
translates a tinylog severity level to a java . util . logging level .
returns the level based on the supplied string .
compares the two versions of this version .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a usage parameter to the specified identifier .
unregister a usage parameter set .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
register an mbean identifier .
update an affiliation
/ * ( non - javadoc )
register the connection to the management server .
gets the boolean init parameter set from the specified context .
/ * ( non - javadoc )
implements <unk> .
/ * ( non - javadoc )
<unk> : <unk>
checks if the profile spec is compatible references .
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
translates an { @link tinylog } object into a { @link <unk> } .
creates a <code > <unk> / code > from a string name .
/ * ------------------------------------------------------------
/ * <unk>
/ * ------------------------------------------------------------
this method reads a { @link <unk> } from the given { @link inputstream } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * helper methods
/ * ( non - javadoc )
get the value of this property as a string .
/ * ( non - javadoc )
checks if the notification is enabled .
removes all eligible objects from the map .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the value of the named property .
returns the node s name bindings as a map .
/ * ( non - javadoc )
/ * ( non - javadoc )
translates a tinylog severity level to a java . util . logging level .
convert a string to a trace level .
returns true if the given level contains the given level .
/ * ( non - javadoc )
initializes the profile specification .
/ * ( non - javadoc )
/ * ( non - javadoc )
installs the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
extract a file from a jar file .
extract the contents of a jar file .
copies a stream to an output stream .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
replace the specified child with the given old child .
removes the specified { @link <unk> } from the document .
returns <code > true< / code > if the <code > node< / code > is attached to this <code > <unk> / code > .
gets the currently active timers .
add references to the given node .
remove a child from the node .
returns true if the current node has no children .
returns the set of children for this node .
sets the value of link to the specified attribute .
/ * ( non - javadoc )
returns the { @link map } of the given { @link node } .
appends the given message to the given buffer .
/ * ( non - javadoc )
retrieves the { @link <unk> } of the given { @link <unk> } .
constructs the notification alert for the notification .
register a notification listener that will be notified when a notification is registered .
creates a usage history of the notification .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
initializes the persistent repository .
/ * ( non - javadoc )
initializes the <unk> .
download the file from the given url .
/ * helper methods
/ * ( non - javadoc )
sets the <unk> .
refresh the extensions list .
invoke the action .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the logger for the given log record .
/ * helper methods
prints command - line help .
/ * ( non - javadoc )
returns a new { @link <unk> } instance with the given option option name .
creates a new { @link <unk> } from the given { @link string } .
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
custom serialization .
custom deserialization .
/ * ( non - javadoc )
----- private methods -----
loads the policy from the jar file .
{ @inheritdoc }
/ * package
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
finds a profile by its profile name .
/ * ( non - javadoc )
create a jsdestinationaddress from the specified profile .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of {
/ * ( non - javadoc )
visit a profile with the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
add the {
returns an array of all the keys in the specified map .
removes the connection from the system .
update the configuration .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
informs the listener that the given service is active or not .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > activate the given <code > <unk> / code > . < / p >
deletes the given resources .
/ * ( non - javadoc )
change the state of an alternate context .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
method <unk> .
/ * ( non - javadoc )
build profile map .
/ * ( non - javadoc )
/ * ( non - javadoc )
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i > specify the property
returns projects that are tied on this node .
/ * ( non - javadoc )
compares this profile with the specified object .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the name of the parameter with the given name .
<p > <unk> . < / p >
returns the value of the <code > name< / code > property as a <code > string< / code > or <code > null< / code > if not found .
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
gets the request parameter infos .
gets the names of the post parameters .
{ @inheritdoc }
deserialize post parameters .
/ * ( non - javadoc )
fires an event event event .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the value of the <unk> property .
gets the default java type of the given java type .
returns the string representation of the given string .
gets the default value for the given argument type .
returns the abstract method name for the given class .
adapted from {
this method returns a set of concrete abstract methods for the given class .
returns a new instance of { @link <unk> } .
get the controller methods from the interface .
/ * ( non - javadoc )
/ * ( non - javadoc )
remove an object from the database .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
method to check if the notification should be <unk>
returns a read - only {
/ * ( non - javadoc )
/ * ( non - javadoc )
counts the alarms associated with the notification .
/ * ( non - javadoc )
retrieves all the alarms associated with the notification .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the usage parameter set from the profile object .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > create a new { @link <unk> } for the given { @link <unk> } . < / p >
returns the complete set of event literals as an event set .
checks to see if the given url matches the pattern
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
helper method to show the status of the api
add a trigger to the list .
prepare the transaction .
register a transaction in the uncommitted transaction .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
cancels the current transaction .
executes the actions after commit .
executes the callback actions .
executes the actions after finishing the rollback .
executes the callback actions .
/ * package
return the names of all the features .
update the names of the feature names .
returns a tracer for the given tracer name .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
remove a { @link io . netty . core . model . <unk> } .
example usage : <p > <unk> . < / p >
/ * ( non - javadoc )
converts a string to another
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
removes the given element from the given generator .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
start the given activity handle .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
convert the given value to the specified type .
/ * ( non - javadoc )
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
/ * ( non - javadoc )
returns <tt > true< / tt > if this map maps one or more keys to the specified key .
/ * ( non - javadoc )
determines whether the notification is enabled for the given notification .
creates a profile profile .
/ * ( non - javadoc )
/ * ( non - javadoc )
remove all events from the event list .
/ * ( non - javadoc )
returns a {
creates a string representation of the current state of a string .
extracts the leading and trailing whitespace from the given string .
checks if the notification is enabled .
removes all known stale entries in the cache .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds an isotope to this molecularformulaexpand .
/ * ( non - javadoc )
returns an array containing all of the elements in this list in proper sequence ( from first to last element ) ; the runtime type of the returned array is that of the specified array .
validates that the given name is valid .
/ * ( non - javadoc )
returns a {
/ * ( non - javadoc )
compares this { @link <unk> } with the specified { @link <unk> } .
set the value of this <code > <unk> / code > .
set the value of this <code > <unk> / code > property .
set the value of this <code > <unk> / code > .
sets the value of the specified step .
sets the value of this <code > date< / code > object .
sets the value of an attribute .
sets the value of the specified step .
set the value of this <code > <unk> / code > .
set the value of this control .
sets the timeout of the timer .
checks if the given level is higher than the given level .
convert the given level to an int .
parse a deploy config .
/ * ( non - javadoc )
remove the class from the classpath .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
validate the profile .
package private for unit test
validate abstract class .
/ * ( non - javadoc )
<p > <unk> . < / p >
sets the correlation identifiers .
execute the task .
restarts a task .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
generate concrete concrete methods .
new <unk> .
sets the log4j path .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the config properties instance .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
liberty change for
/ * ( non - javadoc )
attaches the specified { @link <unk> } to the specified { @link <unk> } .
removes the specified { @link <unk> } from the cache .
/ * <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
inform the <code > <unk> / code > { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the set of actions installed in the worker wiki .
/ * ( non - javadoc )
/ * ( non - javadoc )
helper method to update the <unk>
/ * ( non - javadoc )
gets the object name from the profile name and profile name .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the given class has a stamp .
/ * ( non - javadoc )
/ * ( non - javadoc )
called by the management service
/ * helper methods
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
starts the recovery process .
adds an entity name .
/ * ( non - javadoc )
<p > <unk> . < / p >
compare the supplied object to another object .
/ * ( non - javadoc )
deletes the given file .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
constructor constructor .
sets the minimum free memory to turn on .
sets the eviction memory to turn off .
sets the { @link <unk> } to be used by the { @link net . dv8tion . jda . core . entities . pool . <unk> } .
implements the abstract ( abstract ) strategy method
generates the proxy class information .
/ * ( non - javadoc )
f743 - <unk>
f743 - <unk>
/ * ( non - javadoc )
<! -- begin - user - doc -- > <! -- end - user - doc -- >
/ * ( non - javadoc )
method <unk> .
wrap a collection of {
/ * ( non - javadoc )
add an expression to the list of nodes .
adds the specified exception to the target list .
adds a tileset to the tileset .
checks that the given key is not null .
looks up an object with the given name .
/ * ( non - javadoc )
creates a {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
this method is used to create a trace event from a destination .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > check whether the specified { @link <unk> } is equal to the specified { @link <unk> } . < / p >
/ * ( non - javadoc )
invokes the method with the given name and arguments .
/ * helper methods
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an array of {
returns the real field name for the given field .
set the value of the field with the given name .
converts a java . lang wrapper field to a primitive type .
/ * ( non - javadoc )
retrieves the vendor s vendor .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the virtualmachine object .
/ * ( non - javadoc )
<p > getter for the field <code > <unk> / code > . < / p >
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * --- private methods ---
/ * public static void <unk> ( string class string class ) { if ( <unk> == null ) { try { return <unk> ; }
create the proxy links for the given concrete class .
create the defer constructor .
adds a field to the class .
adds a field to the class .
adds a field to the class .
generates a getter for the given field .
adds a setter method to the given class .
generates a getter method for the given field .
adds annotation to class .
add member values to annotation .
/ * ( non - javadoc )
/ * ( non - javadoc )
set the {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
merge the receivable service .
/ * ( non - javadoc )
get the collator for the desired strength .
/ * ( non - javadoc )
replace the last character in the source string with the given character .
/ * package
check if the given class is a interface or interface .
get all interfaces of the given class .
get method from map .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
retrieves the trace level from the source file .
copies a notification from a notification .
gets a user - defined file for a given notification .
/ * ( non - javadoc )
validates the name of the tracer .
registers a new notification source .
/ * ( non - javadoc )
creates a tracer for the given tracer name .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * helper methods
/ * <unk>
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
opens the context .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
generate attribute value .
creates a new comparator
/ * ( non - javadoc )
finds a token from the database .
retrieves the profiles of the given query .
/ * ( non - javadoc )
persists a single profile .
get profile from profile
/ * ( non - javadoc )
installs the specified { @link expression } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
add an event listener to the broadcaster .
checks if the modification constraints are valid .
/ * ( non - javadoc )
get the { @link classloader } for the given { @link classloader } .
unmap a proxy .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * <unk>
/ * ( non - javadoc )
parse a max - age m - m - m - m - m - m - m - m - m - m - m - m - m
returns true if the given class is present in the classpath .
answer the profile .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new socket handler
/ * ( non - javadoc )
create a new notificationhandler to the logger
this method is called when the dialog is shown .
converts a int value to a { @link address } .
convert a string to an address .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
print priority .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the raw x500principal from the principal pool .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * helper methods
implements { @link <unk> ( object ) } .
/ * ( non - javadoc )
returns the child relations for the given method name .
f743 - 34304
/ * ( non - javadoc )
returns the next index of the current buffer .
/ * ( non - javadoc )
create a string representation of the given schema .
sets the log4j level .
converts a { @link level } to a { @link <unk> } .
/ * ( non - javadoc )
adds a message to the application .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
log a message at the finer debugging level .
/ * ( non - javadoc )
log a message at the finest level .
log a message at the trace level .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
log a message at the severe level .
adds a message to the logger .
/ * ( non - javadoc )
/ * ( non - javadoc )
send notification of a queue notification .
creates a tracer for the given <unk> .
write member data to output stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
get all class dependencies for this module .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
retrieves the default profile for the profile table .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
answer a set of active { @link <unk> } s for the given query .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * helper methods
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new {
builds a {
returns the set of { @link component } s for this { @link mention } .
/ * ( non - javadoc )
returns the url of the resource with sticky context classloader .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * setters
sets the mapper class name .
gets the profile attribute map .
gets the profile name .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
answer a tracer for the given tracer name .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the { @link <unk> } for the given component id .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the { @link <unk> } for the given { @link <unk> } .
generate the proxy methods .
generate the proxy class for the given class .
/ * ( non - javadoc )
executes a query and returns the result .
executes a query and returns the result .
executes a query and returns the result .
determines whether or not the given query exists .
executes the given sql query and returns the result .
{ @inheritdoc }
update field value .
add a new { @link <unk> } argument to the query .
add a new { @link <unk> } argument to the query .
build a new { @link <unk> } .
adds a custom mapping for the specified type .
<unk> > <unk>
{ @code <unk> ( string value ) }
<p > <unk> . < / p >
execute a { @link <unk> } on a vert . x { @link transaction } instance .
{ @inheritdoc }
{ @inheritdoc }
parses an rfc3339 date / time value .
/ * ( non - javadoc )
takes an image and returns the result .
checks if the given string matches the given string .
returns the canonical form of the image .
get the effective typequalifierannotation on given annotatedobject .
returns the {
initializes the <unk> .
create a {
sets the value of this tag .
添加命名的参数 : propertyname - > 命名的参数
returns a new instance of { @link <unk> } with the given { @link <unk> } .
{ @inheritdoc }
creates a { @link <unk> } from a string .
convert a string to a {
添加命名的参数 : propertyname - > 命名的参数
writes the given members to this range .
returns the first value of the given name or null if no such value exists .
creates a { @link <unk> } from a { @link string } .
<editor - fold defaultstate = collapsed desc = image related >
renders the given container with the given size .
paint the given region .
/ * ( non - javadoc )
initializes the <unk> and registers the <unk> with the <unk> .
returns true if the specified {
/ * ( non - javadoc )
/ * ------------------------------------------------------------
fork a command .
{ @inheritdoc }
executes a clean job .
/ * ( non - javadoc )
wait for the specified number of seconds .
get the html for the crash .
replaces all occurrences of a regular expression in the string with the given replacement .
<p > replaces each substring of the source string that matches the given regular expression with the given replacement . < / p >
replaces the text of the text with the replacement text .
replaces the properties of the given tab with the given tab .
creates a new string builder with the given spaces .
get a collection of all the specified regexes .
returns the html representation of the given string .
converts the given text to native encoding .
close the connection .
helper method to create a session holder for a given timeout .
method <unk> .
{ @inheritdoc }
/ * ( non - javadoc )
adds an exception to the queue .
returns the exceptions .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
get a cached object from the cache .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
sets up a connection to the given connection .
<unk> > <unk>
creates a new { @link sqlexception } for the given { @link sqlexception } .
get the pool name from the provided config .
removes all weak references from the queue and removes them from the queue .
finds the parent type of a type element .
bindview annotated classes and methods that are annotated with {
/ * ( non - javadoc )
generate delete method .
removes the last occurrence of a decimal separator from a comma - separated string .
writes a { @link <unk> } to the { @link <unk> } .
converts a bit vector to a unicode string .
/ * <unk>
restores the data from a file .
create a new instance of type { @link java . io . <unk> }
get a list of { @link type } s from a json object .
returns a { @link list } of { @link jsonobject } s .
tries to get a list of {
renders a list of card line numbers into a card
get a deep copy of the given set of transitions .
<unk> > <unk>
get a list of <unk> objects from a list of strings .
get a list of all <unk> in the given set
run the <unk> report .
adds a zip to the given channel .
registers a system property value .
appends the logging event to the specified event object .
this method converts a collection of { @link <unk> } s to a { @link <unk> } .
adds a new array of values to the array .
/ * ( non - javadoc )
/ * ( non - javadoc )
replaces the element at the specified position in this list with the specified element .
/ * ( non - javadoc )
register a gauge that reports the value of the column with the given name .
collects all the fields from a collection of { @link <unk> } objects .
collects the list of { @link field } s of the given { @link <unk> } .
returns a list of {
returns a list of {
{ @link selector }
{ @link <unk> }
{ @link <unk> }
this method is called by the {
flushes the hash table if needed .
builds a list of { @link annotation } s from the given { @link element } .
extract all annotations on the given class and its superclasses .
clones a property .
returns the property map for the given object .
<unk> > <unk>
do jndi .
/ * ( non - javadoc )
<unk> > <unk> > null< / code > <unk> > null< / code > <unk> > null< / code > <unk> > null< / code > <unk> > null< / code > <unk> > null< / code > <unk> > null< / code > <unk> > null< / code > <unk> > null< / code > <unk> > null< / code >
returns a new instance of { @code t } from a { @code list } of { @code type } s .
creates a new instance of { @link t } from a list of { @link object } s .
<unk> > <unk>
creates a new instance of the given { @link map } from the given { @link map } .
creates a new instance of the {
creates a new instance of { @code t } from a { @code view } .
<p > <unk> . < / p >
converts an object to a map .
converts a { @link list } of { @link class } s to a list of { @link list } s .
converts a collection of maps to a list of maps .
get all annotation attributes of the given annotation .
create a new { @link <unk> } for the given { @link <unk> } .
load a list of { @link <unk> } s from a list of { @link <unk> } s .
{ @inheritdoc }
apply validation meta data to validator .
/ * ------------------------------------------------------------
<p > <unk> . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
applies a supplemental hash function to the hash table of the given object .
gets the default chromedriver options for the browser .
open a file .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
closes the current {
<p > returns the index of the specified array . < / p >
<unk> { @link double } <unk>
reduce method .
returns the minimum value in an array .
returns the standard deviation of the given values .
<p > returns the number of elements in the array . < / p >
<p > returns the maximum value in an array . < / p >
returns the minimum value in an array of values .
returns the standard deviation of the values in the given range .
calculate variance .
returns the mean of the values in { @code values } .
returns the median value of an array .
dispatch request handler .
/ * ( non - javadoc )
<p > invoke . < / p >
computes the variance of an array of values .
returns the sum of the values in the array .
<p > returns the maximum value in an array . < / p >
computes the standard deviation of the values in the array .
/ * ------------------------------------------------------------
tests if the object is one of the given objects .
create a new criterion object from the given { @code name } and { @code values } .
create a criterion object for a { @link java . util . <unk> } .
creates a <code > <unk> / code > for the specified <code > name< / code > .
factory method to construct a <code > <unk> / code > from the given <code > <unk> / code > .
creates trees from a list of objects .
creates criteria from a json string .
converts a collection of { @link <unk> } s to a { @link <unk> } .
adds a new array of values to the array .
adds a new array of values to the array .
adds a new array of values to the array .
replaces the element at the specified position in this vector with the specified element .
register a gauge that reports the value of the column with the given name .
returns the index of the first occurrence of the specified <code > item< / code > in the given list . if the list does not contain the element it is returned .
returns the index of the first occurrence of the specified item in the list using the binary search algorithm .
returns a random element in the array .
divides the given list of { @code count } into a { @code list } of { @code list } s .
returns the last element of the list .
returns a list containing the last elements of the list .
gets the first element of the list .
sorts the given array using the given comparator .
splits the given list into a list of lists .
returns the first element of the list or null if the list is empty .
returns the minimum element of an array .
sort the array using the given comparator .
converts an { @link object } of { @link class } s to a { @link list } of { @link map } .
transforms an array of maps to a list of maps .
/ * ( non - javadoc )
{ @inheritdoc }
converts a collection of values to a collection of values .
process a collection of values .
/ * ( non - javadoc )
converts this object to a list of maps .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
/ * ( non - javadoc )
returns the localized message for the given message key . <p >
creates a label from the given locale .
creates a localized message object from the given parameters .
creates a string representation of the given field name .
writes a string value to the stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a { @link java . util . set } of key - value pairs .
adds a key / value pair to the store .
removes all keys from the given set .
/ * ( non - javadoc )
signal a write queue .
start the thread .
<p > returns the index of the string at the given index . < / p >
<unk> end <unk>
test if a character is in the string
add a string to another string
adds the given strings to the end of the string .
add a string to another string
splits a string into another string .
<p > splits a string into an array of strings . < / p >
splits a string into an array of strings .
returns an array of strings from the given array of char arrays .
converts a string to a boolean .
<unk> end <unk>
test if the given string is in the given string
test if two characters are in the same string
<p > <unk> . < / p >
returns the string representation of the given number .
<p > <unk> . < / p >
insert data into the database .
/ * ( non - javadoc )
returns the { @link collection } of the specified { @link collection } s in the specified { @link collection } .
returns a { @link list } containing the elements of the given { @link iterable } .
adds an array to the specified array .
getter method for comparator comparators .
{ @link <unk> }
returns the first element of the given navigable map .
returns the first element of the specified navigable map .
returns the first element of the specified navigable map .
returns { @code true } if value is { @code null } .
check that the expected values are equals .
checks if the expected byte array equals the expected length .
returns the sum of the values in the array .
returns the maximum value in an array of integers .
get the minimum value in an array .
returns the standard deviation of the given data collection .
get the median of a collection .
rounds the given number to the nearest power of 2 .
gets the localized message for the given key .
sorts a list of values .
sorts a list of { @link field } s into a sorted list of fields .
handles a { @link <unk> } .
/ * ( non - javadoc )
determines the type of the field in the map .
/ * ( non - javadoc )
compiles a regular expression .
/ * ( non - javadoc )
/ * ( non - javadoc )
过滤<br > <unk>
returns a sub - list of the given list of positions in the given list .
<p > <unk> . < / p >
returns a list of all declared fields of a class .
returns a list of all declared fields of the given class .
get the names of the first field of the given entity class .
gets the sortable field name from the first field of the given class .
get method name .
returns the sortable field of the sortable class .
/ * ( non - javadoc )
this method compares two { @link <unk> } s .
sorts a list of {
sorts a list of { @link list } s into a { @link list } .
mostly it s designed for one - step operation .
sorts entries by value .
sorts entries by value .
sorts entries by value .
mostly it s designed for one - step operation .
sort the given array using the given sort order .
returns a { @link comparator } for { @link java . util . comparator } .
returns a new comparator that compares { @code counter } with the given { @code counter } .
compares two { @link object } s using the given { @link comparator } .
returns the value associated with the given key .
gets the value associated with the specified key .
/ * ( non - javadoc )
associates the specified value with the specified key in this cache . if the map previously contained a mapping for this key the old value is replaced .
returns the index of the segment .
removes obsolete entries from the cache .
/ * ( non - javadoc )
/ * ( non - javadoc )
calculate the sum of the given value if it is a number .
returns an array containing all of the elements in the specified collection .
<unk> > <unk>
/ * ( non - javadoc )
returns a buffer that can be used to allocate a buffer .
checks if the jvm should be stopped .
/ * ( non - javadoc )
checks to see if there is no pending flush .
/ * ( non - javadoc )
schedules a new monitor .
start a new { @link <unk> } .
/ * ( non - javadoc )
<p > validates a field value . < / p >
execute the given { @link <unk> } .
sets the group by fields .
deletes the given set of columns from the given set .
wrap a collection .
<p > <unk> . < / p >
/ * ( non - javadoc )
check to see if the file is a complete zip file .
save the output stream to the output stream .
write the next buffer to the given buffer .
writes the receiver to the queue .
initialize the output stream .
/ * ( non - javadoc )
stores a { @link double } value with the given { @code key } .
returns an unmodifiable view of the specified multi - value map .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds a key / value pair to the cache .
/ * ( non - javadoc )
read a list of { @link com . <unk> . <unk> . meta . meta . <unk> } from the properties file .
{ @link <unk> } { @link <unk> }
extract the meta data from a string .
returns a list of { @link <unk> } s for the given class .
extract validator meta data .
extract meta data from a collection of annotations .
/ * ( non - javadoc )
find the tag matching the regex .
splits a string into an array of strings .
splits a string into an array of strings .
<p > splits the given delimiters into an array of strings . < / p >
copied from apache commons lang under apache license v2 . <br / >
<p > splits a string according to { @code delimiters } . < / p >
parses a float from a string buffer .
returns a { @code double } value from the given { @code long } buffer .
convert a string to a byte array .
returns a { @code long } value from the given { @code buffer } .
converts a list of { @link <unk> } s into a { @link <unk> } .
adds a new array of values to the end of the array .
adds a new array of values to the array .
/ * ( non - javadoc )
this method is used to convert a collection of { @link <unk> } s to a { @link <unk> } .
adds the specified value to the end of the array .
adds a new array of values to the array .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of the field setter if any .
setter for field values
returns the value of this field as a map .
/ * ( non - javadoc )
get a bean property value .
sets the property value of the given object to the specified value .
gets all fields from the map .
gets the type of the property .
returns the value of the given property as a string .
returns the value of the given property as an object .
adds property value to system config .
write a value to a class .
retrieves a property value from a collection of properties .
gets the value of a property .
returns the integer value of the specified property in the given object .
<p > <unk> . < / p >
cast a object to a string
gets the type of a property .
sets the value of the specified property in the given object .
sets the property value of the given object .
returns the current context .
performs a deep copy of the field with the given class .
{ @link <unk> ( object ) }
/ * ( non - javadoc )
creates a message array for the given key and arguments .
creates a message for the given subject .
converts a list of annotation values to an array of strings .
gets the subject .
parse the given text into an object .
/ * ( non - javadoc )
adds a new db to the db .
create a new index .
<p > compact . < / p >
returns a list of all the uuids of the given count .
/ * ------------------------------------------------------------
converts the given gson object to an object of the specified type .
returns the list of resources for the given path .
triggers a replication request .
/ * creates a json object .
returns the { @link inputstream } of all documents in the uri .
finds all documents in the replicator database .
executes a query and returns the results as a search result .
queries the database reading from the given query and returns the results as a list .
queries the given query and returns the results .
sets the value of the { @link string } .
sets the { @link java . util . list } of { @link view } s for the given { @link list } .
saves a design document to the database .
/ * ( non - javadoc )
get a design document from the database .
creates a list of all design documents from a directory .
gets a design document from the given { @link <unk> } .
removes a document from the replicator database .
finds a document in the replicator database .
finds all documents in the replicator database .
removes a document from the replicator database .
finds a document in the database .
finds an input stream with the given id .
removes a document from the database .
finds all documents in the replicator database .
returns { @code true } if the document contains a given id .
creates a new { @link <unk> } with the given object as a json object . <p > example usage : <pre > { @code client . post ( object . class exampleid ) ; } < / pre >
creates a { @link <unk> } from the specified object . <p > example usage : < / p > <pre > { @code client . <unk> () ; } < / pre >
removes a document from the database .
get a list of objects from the database .
saves an attachment to the document .
saves an attachment to a document .
invokes the update handler .
execute a http request .
/ * ( non - javadoc )
/ * ( non - javadoc )
parses the given { @link uri } and returns a { @link changes } object .
performs a http put request .
send a bitmap to the server .
/ * package
on delete .
validates the response .
sets entity content .
parses a json object .
adds an attachment to the database .
starts changes of changes to the database .
get the changes .
reads the next row from the stream .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last : <unk>
gen - last : <unk>
gen - last : <unk>
gen - last : <unk>
gen - last : <unk>
gen - last : <unk>
gen - last : <unk>
private helper for <unk> () .
#func <unk> > #desc <unk>
converts a double value to a string
converts a string to a number .
compute the transform
releases the lock .
creates a new { @link observable } of { @link <unk> } s .
publishes an observable stream to the topic .
adds a metric to the list of tags .
verify that the temp date is valid .
returns the metric name for the given namespace .
check if the request is a query
handles an authentication request .
---------- oo - verbs
generate data for image .
handles a request result .
handles a ping request .
initialize the client
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a list from a collection of files .
submit a job .
converts a glob pattern to a regex pattern .
updates the channel .
ends the exchange with the given status code and reason phrase .
parses an interval from a string .
creates a { @link observable } of { @link row } s .
/ * <unk>
mark the object as delivered .
creates a list of dates from the given pattern .
----- private methods -----
send a message to the sending queue .
/ * ( non - javadoc )
send a message to the subscriber .
query a list of { @link <unk> } s .
matches a regular expression against the specified pattern .
execute the view .
gets the <unk> .
sets the value of the specified attribute to the specified value .
download a file and add it to the existing file .
replace the file with the given name .
copies a zip file into a zip file .
generates a <code > <unk> / code > object for the specified <code > <unk> / code > .
generates a list of metrics associated with the given <code > <unk> / code > .
generates a <code > <unk> / code > object for the given <code > <unk> / code > .
generates a <code > <unk> / code > object that generates a single <code > <unk> / code > object .
{ @link <unk> ( string ) }
{ @inheritdoc }
{ @inheritdoc }
generates a copy of the {
creates a temporary directory in the given base directory .
/ * ( non - javadoc )
renders a group .
{ @inheritdoc }
add a componenthandler with the specified componenttype and renderertype aliased by the tag renderer .
create a template .
/ * ( non - javadoc )
/ * ( non - javadoc )
add a { @link <unk> } object .
create a { @link java . util . date } from the given { @link date } .
converts a { @link string } into a { @link date } object .
creates a list of files from a directory and its suffix .
calls the { @link <unk> ( object ) } for a { @link <unk> } instance .
sets the value of the <code > <unk> / code > instance to which the <code > <unk> / code > is used .
generates a { @link <unk> } instance from a { @link <unk> } instance .
create a new instance of { @link <unk> } for the given { @link <unk> } .
generates a { @link <unk> } instance that is a { @link <unk> } instance .
generates a { @link <unk> } instance from a { @link <unk> } object .
sets the value of the <code > <unk> / code > property for a given <code > <unk> / code > object .
create a new instance of { @link <unk> } .
generates a { @link <unk> ( object ) } that corresponds to the { @code prototype } of the given { @code prototype } .
{ @link <unk> ( object ) }
generates a { @link <unk> } instance from a { @link <unk> } object .
generates a { @link <unk> } instance { @link <unk> } instance for the given { @link <unk> } .
creates a new instance of { @link <unk> } with the given { @link <unk> } .
copies the contents of an input stream to an output stream .
creates a new { @link <unk> } .
parse the given { @link file } into a { @link document } .
parses the given { @link reader } into a { @link document } .
returns all child elements in the given element .
returns a stream of elements of the given node .
returns the first child element of the given parent element .
returns a stream of all child elements in the given parent element .
validates the given xml schema .
creates a new { @link <unk> } from the given { @link <unk> } .
creates a new <tt > <unk> / tt > that connects to the given user name and password .
opens a keepass database with the given password .
convert a yaml file into a { @link yaml } object .
the main method .
converts the { @link inputstream } to a { @link <unk> } .
loads a resource from the classpath .
loads a graph entry from the given input stream .
encodes the given string to ascii characters .
generates a authorization request for the given service using the specified request .
generates a pre - signed authorization url for the given access key and secret key .
generates a request signature for the specified request method and request parameters .
generates a pre - signed url based on the aws access key and expiration time .
generates a signature of a secret key .
checks if the request is a download request .
sets the localized signature for this request .
encodes a byte array into base64 notation .
decodes the given string into a byte array .
removes all whitespace characters from the given string .
adds a file to the archive .
puts an object observer .
upload a file to a multipart upload .
signs the specified cors request handler .
/ * <unk>
completes a multi - part upload .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
set the favorite system to be used .
convert a list of { @link <unk> } to a comparator .
/ * ( non - javadoc )
writes a list of { @link <unk> } s into the specified { @link <unk> } .
/ * package private
returns true if the session has expired .
update the decorated notification .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds the entries of the notification .
gets the list of notifications for a given page
create a new {
gets the server group .
/ * ( non - javadoc )
time sensitive apis
gets the workflow instance .
rest endpoint for retrieving all events for a given sprint and id .
/ * ------------------------------------------------------------
deletes the specified notification .
get the url of the request .
/ * ( non - javadoc )
/ * implementation
/ * ( non - javadoc )
returns the {
init fxml when loaded .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link <unk> ( string ) }
/ * implementation .
/ * implementation
/ * implementation
filters a list of { @link notification } s by applying { @code predicate } to each { @link category } .
returns the {
returns a list of all the categories from the given list of { @link <unk> } s .
<p > clone a collator object . < / p >
/ * ( non - javadoc )
unmarshals a { @link <unk> } .
notification that the notification should be sent to notification .
maps a {
map a notification entry to the map .
attaches the { @link <unk> } to the specified { @link <unk> } .
transform a url to a { @link url } .
gets the notification category for a portlet .
returns the notification source attributes .
/ * implementation
deletes a {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * implementation
/ * implementation
/ * implementation
/ * ( non - javadoc )
get the primary user id for the portlet request .
<unk> - <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * method to hide the authentication .
/ * ( non - javadoc )
<p > extracts a column from a matrix . < / p >
replies if the specified boxes in the specified box are within the bounds of the box .
checks to see if the box is contained in a box .
returns the closest point to the closest point
calculates the sign of the given point .
sets the score of the view .
/ * ( non - javadoc )
sets the value of the { @link <unk> } .
renders a point from a 3x4 camera matrix .
renders a point from a 3x4 camera matrix and returns x - coordinate
/ * ( non - javadoc )
/ * ( non - javadoc )
converts a gray scale image into the output image .
converts a polygon to a {
converts a { @link <unk> } to a { @link <unk> } .
converts a gray scale image into an output image .
computes the intersection of the bounding rectangle
draws a polygon
attempts to center a point inside the image .
determines whether the polygon is a polygon in the polygon .
computes the average of the region in the input descriptor .
checks to see if the points are identical in the tolerance .
checks to see if the points are small .
flip the lower triangular portion of the input arrays .
<p > sets every element in the matrix to the specified value . < / p >
<p > sets every element in the matrix to the specified value . < / p >
calculates the convex hull .
draws each polygon in the polygon
remove a polygon from the polygon
returns true if the polygon does not fit within a polygon .
/ * compute the average of the points in the image .
converts a { @link dmatrixrmaj } to a { @link <unk> } .
converts a { @link <unk> } into a { @link dmatrixrmaj } .
computes the area of the polygon .
returns the closest point in the polygon .
gets the point on the line
computes the polygon contain a small polygon .
returns true if polygon contains a polygon
checks to see if a point is inside the graph
checks to see if the point is less than or equal to the specified point .
computes the intersection point between two points .
compute the intersection of two points .
returns the intersection point of the two regions .
<p > computes the intersection of two points . < / p >
<p > computes the point between two lines . < / p >
compute the intersection of two lines .
computes the intersection of two ellipses .
returns true if the line contains the specified point .
returns true if the x and y coordinates are within the bounds of the line
returns true if points inside an ellipse .
returns true if the given points are intersect .
computes the intersection of two points .
compute the intersection area of two points .
compute the intersection of an ellipse .
converts a { @link <unk> } to a { @link matrix }
converts the given angle to the given coordinate system .
symmetric conversion matrix .
set the quaternion to quaternion axis .
set the quaternion to the inverse of a rotation .
converts from quaternion to quaternion .
convert a matrix to a public matrix .
returns the value of the first column in the matrix .
/ * ( non - javadoc )
<p > converts a matrix to a 3d 3d axis ( see <unk> ) . < / p >
creates a fundamental matrix given a rotation matrix .
sets the x - axis ( x y ) amount for the rotation axis .
creates a rotation matrix to this matrix by rotating the given amount of radians about the z axis and store the result in <code > dest< / code > .
apply rotation to this matrix by rotating the given amount of radians about the specified <code > r< / code > axis .
sets the rotation angle to a rotation around a specified amount .
converts a metric camera matrix into a rotation matrix .
converts a rotation to a rotation matrix .
computes the metric projective transform from projective camera matrix .
set <code > this< / code > matrix to <code > null< / code > where <code > t< / code > is the given <code > translation< / code > <code > r< / code > is a rotation transformation specified by the quaternion <code > r< / code > and <code > r< / code > is the scaling transformation .
sets the angle to the given angle .
gets the point on the line
converts a set of observations into a { @link dmatrixrmaj } .
<unk> matrix .
/ * ( non - javadoc )
<p > <unk>
set the transform to the rigid body
given a projective transform and a projective transform
enforces the location of each point
<p > computes the pixel intensity for the specified point in the camera image . < / p >
points to a list of points in a list of points .
computes the svd of the image using the standard <unk> algorithm .
given a set of associated points compute the null space
returns the side length of the polygon .
finds the position of the line in the shape
finds the lines that belong to the specified region .
converts a list of objects to a list of permutations .
classify the list .
<p > converts a buffered image into a destination matrix . dst can be { @link <unk> } . < / p >
<p > converts an array of double into the destination object . dst can be in the range : < / p >
{ @link <unk> }
<p > converts a matrix into a <unk> . < / p >
performs a horizontal 1d normalized convolution across the image .
<p > <unk> . < / p >
convert a julian day to a <unk> .
<p > creates a cross - product matrix from the specified point in the form of <code > t< / code > . < / p >
<p > computes the cross product of a matrix . < / p >
<p > cross - replies the cross product of the given grid using the specified point . < / p >
<p > cross - point a and b . < / p >
<p > add a column to the <unk> matrix . < / p >
note : ( m1 + m2 ) never zero
<p > adds a block to the end of the matrix : <br > < / p >
<p > extracts the z - coordinate of a matrix from the camera matrix . < / p >
rotates the arrow in the specified arrow matrix .
<p > applies a rotation to a square coordinate vector . < / p >
computes the multiplication of a and stores the result in the matrix .
computes the multiplication of a linear system matrix .
<p > performs the following operation : <br > <br > <unk> / p >
converts a { @link dmatrixrmaj } into a { @link <unk> } .
computes the multiplication of the linear system : <br > <unk> > t< / sup > * <unk> > t< / sup >
<p > checks to see if the matrix is orthogonal or isometric . < / p >
<p > converts a fundamental matrix to a fundamental matrix . < / p >
<p > creates a trifocal tensor from the two vectors . < / p >
<p > computes the inner product of a matrix a . < / p >
scales the p to the given value
<p > extracts a column from a matrix . < / p >
/ * ( non - javadoc )
creates a { @link dmatrixrmaj } from the given { @link <unk> } .
convert a square matrix to a real column
sets the vector vector to point x .
returns the signed circle of the given angle .
returns the value of the specified { @link double } <tt > <unk> / tt > .
returns the value of the specified <code > <unk> / code > .
returns the value of the nearest lower magnitude of magnitude
returns the magnitude of the transformed order magnitude .
convert from latitude to equirectangular coordinates
convert from latitude to equirectangular coordinates
convert three values to equirectangular coordinates
convert from latitude to equirectangular coordinates
compute the subtraction of the three coordinates .
convert from latitude to equirectangular coordinates
pre - connects a rotation around the z axis .
trims the value of the double value to a double value .
determine whether the line with the given point intersects with the plane equation <code > ( x y ) < / code > .
test whether the plane with the general plane equation <i > a * x + b * y + b * y + c * z + d = 0< / i > intersects the line with center <code > ( centerx centery centerz ) < / code > and <code > <unk> / code > respectively .
computes the intersection between two regions
<p > creates a homography matrix that is the intersection of two views . < / p >
<p > computes the value of the parameter <i > t< / i > in the plane equation <i > p ( t ) < / i > < / p >
<p > creates a homography matrix that is the intersection of two views . < / p >
calculate the intersection of a polygon .
find the minimizer of an interpolated cubic function .
returns true if the x and y coordinates are within the bounds of the box .
determine whether the point is contained within the given <code > p0< / code > and <code > p1< / code > intersects the point in the given <code > <unk> / code > .
computes the intersection of two lines .
computes the noise between the two aligned vectors .
removes the quaternion from the given { @link quaterniondc } .
computes the convex hull .
checks to see if the point is flipped .
sets the covariance matrix .
sets the shape to the coordinate system of the world .
affine transform from input to destination
<p > converts three observations into a trifocal tensor . < / p >
converts a projective camera matrix into a rigid body matrix .
<p > creates a trifocal tensor with the specified width and width of the second . < / p >
converts a homography frame into a vector of <unk> .
replies the projection of a point .
******************** axis ******************************************
<p > checks to see if the two camera matrices are within tolerance of observations . < / p >
<p > computes the singular values of all singular values in the two matrices . < / p >
computes the distance between two lines .
compute the distance between two points .
convert from degrees to a unit vector
returns true if the circle is inside a circle .
compute the noise of a point .
compute the arc radius of a number .
computes the point inside a line
computes the closest point on the line
returns the point in the line
/ * ( non - javadoc )
returns the closest point on the plane which is closest to the given point .
determine whether a point is found in the camera coordinate system .
returns the closest point on the plane where the view is closest to the plane .
returns the point inside the line
linear point of the point
<p > extracts a point from a 3d point matrix . < / p >
replies the point that is closest to the given coordinate .
<p > transform a matrix to the original matrix . < / p >
computes the pearson correlation between two views
linear constraint matrix .
specifies the inverse permutation of the permutation .
transforms a <code > <unk> / code > matrix into the given <code > <unk> / code > .
transfers the point from the original coordinate system into the third coordinate system .
determine the scale of the point from the world space
<p > given two observations of the original line and view the original image s coordinate is computed . < / p >
returns a list containing the elements in the list .
read a list of lists from a list of lists .
checks if the given tolerance is equal to the specified tolerance .
returns the angle between real and c2 .
returns the angle between real and c2 .
searches for points inside the image .
<p > trifocal tensor with line - line - line correspondence : < / p >
<p > creates a trifocal tensor from the two lines . < / p >
<p > <unk> . < / p >
converts a trifocal tensor
<p > trifocal tensor with point - line - line correspondence : < / p >
assigns the points of the contour to the contour
does the <unk> .
<p > converts a line of points to a line - line . < / p >
<p > creates a trifocal tensor from two points . < / p >
computes the homography induced from the plane and stores the result in the plane
converts a rectangular region into the plane .
<p > converts a rectangular region into a rectangular region . < / p >
converts the 3d motion of the 3d motion of the camera into the world space .
renders a normal normal form .
compute the signed value of a point .
evaluates the distance from the camera coordinate of the plane .
<p > trifocal tensor with the specified normal vector . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
set the quaternion to world coordinates
<p > checks to see if the matrix is within tolerance of the polynomial coefficients . < / p >
<p > poll . < / p >
returns the euclidean norm .
converts a list of observations to a line segment .
calculate the intersection of two lines .
sanity check for all elements found
checks to see if this matrix is equivalent to the identity matrix .
computes the average circle of a list of points in a linestring .
calculates the area of this { @link point } .
computes the horizontal and vertical point of the point .
get the tangent of the line
estimates the image detection of a list of points .
fit the input matrix to the input features .
<p > determines whether a point is within the specified point . < / p >
generates a random n - point n - d n - d n - d n - d n - d n - d n - d n - d n - d n - d n - d
converts a 3x4 point from a 3x4 camera matrix to a 3d point vector .
compute the filter from the original image .
<p > computes the derivative of the original image using the original image coordinates . < / p >
computes the angle between the two vectors .
<p > trifocal tensor with point - line - line correspondence : <br > <br > a = a * x = b < / p >
compute the arc sine of a number .
finds an axis - aligned rectangle inside the image .
calculates the distance between two atoms .
computes the dot product of this vector and v1 .
<p > performs the rotation operation and stores the results in a vector : <br > <br > a = a<sup > t< / sup > * b < / p >
computes the squared euclidean norm for an ellipse .
computes the location of an ellipse .
computes the estimated coordinate of an ellipse .
computes the estimated coordinate of the ellipse and edge edge
computes the angle of an ellipse
compute the tangent of an ellipse .
returns true if the specified ellipse contains the specified ellipse .
computes the tangent of the two ellipses
computes tangent points of two ellipses
computes the intersection of two ellipses
computes the shape from the center of the image .
clean the extents of the image inside the image .
returns the squared euclidean distance between two points .
converts a projective camera matrix into a metric matrix .
gets the corner of the corner .
computes the distance between two lines in the line
calculates the euclidean distance between two points .
calculates the distance between the two points .
compute the distance between the plane and the plane general plane .
calculates the cross - point distance between the points in the given point
calculates the width of the line in the line .
calculates the distance between a point and a point .
sets the location of the specified pixel in the image
gets the point on the line
returns the distance between the two points in the line
returns the distance between the specified point and the specified point .
computes the distance between points inside the image .
computes the distance between the given point and the nearest point inside the bounds of the given rectangle .
returns the euclidean distance between two points .
computes the euclidean distance between a point and a corner .
computes the distance between the two lines .
finds the euclidean distance between a line .
returns the distance between the given point and the nearest point inside the bounds of the given rectangle .
returns the squared euclidean distance between a point and a point .
returns the distance between the given point and the nearest point inside the bounds of the given rectangle .
returns the euclidean distance between the points in the contour
returns the distance between the two points defined in the line
returns the distance between the two points defined in the line
compute the distance between two points .
computes the euclidean distance of two points .
computes the euclidean distance of an ellipse .
adds the given { @code future } to the end of the list .
finds the closest point to the specified line .
finds the closest point in the image .
compute the line that points to the line .
compute the closest point on the line .
finds the closest point inside the image .
computes the closest point to the closest { @link ellipse } to the closest { @link ellipse } .
processes the input data and stores the result in the new array .
<p > computes the portion of a matrix . <br > <br > b<sub > ij< / sub > = a<sub > ji< / sub > <br > < / p >
/ * [ deutsch ] <p > erzeugt ein neues <unk> innerhalb dieses intervalls . < / p >
/ * [ deutsch ] <p > <unk> <unk> <unk> / p >
<p > checks to see if a point is within tolerance of the two matrices . < / p >
<p > normalizes the plane and stores the x - coordinate of the vector . the normalized vector is normalized to the normalized vector . < / p >
converts a rotation matrix to a rotation matrix .
<p > converts a trifocal tensor to a vector : < / p >
/ * ( non - javadoc )
<p > extracts a column from a matrix . < / p >
<p > adds a vector to the end of the matrix : <br > <br > c = a + b < / p >
/ * ( non - javadoc )
reflect the intersection of the two axis .
finds the intersection of two points .
checks that a point is convex .
compute a polygon from a polygon
returns true if the given point is inside the image .
checks if a point is inside the image .
creates a new {
calculates the euclidean distance of this coordinate .
sets the ellipse s ellipse .
updates the x and y axes
digamma function .
<p > computes the qr decomposition of the two vectors . < / p >
<p > computes the parity of the triangle formed by the specified point . < / p >
returns the z - coordinate of a point in the quad graph .
returns true if the polygon does not fit in a polygon
computes the mean normalization of a list of points .
computes the mean value of a list of points .
<p > computes the mean value of a point from a point in the line formed by the mean of the line defined by the second line . < / p >
finds the bounds of the image inside the image .
get the bounding rectangle of the given points .
attempts to normalize a list of points inside a list of points .
computes the normal box inside the matrix .
returns a normalized view of a list of points .
sets the value of this matrix to be a constant
/ * ( non - javadoc )
computes the center of a point between two points .
ensures that the points inside the image are inside the bounds of the image .
create a bounding rectangle that can be used to points to a region .
checks to see if the polygon is a polygon .
flip the elements of a given array
returns true if the points are convex .
returns true if the given point is in a half - z
checks to see if the two matrices are equal .
finds the intersection of the two lines .
computes the average circle of a list of points in the given points .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
computes the svd of a matrix .
computes the svd of a dataset
computes the svd of a matrix .
calculate the page rank vector .
returns the distance between the two points <code > ( x0 y0 ) < / code > and <code > ( x1 y1 z1 ) < / code > .
returns the squared euclidean distance between two points .
/ * ( non - javadoc )
adds a random point to the random point .
randomly generates a random observations of the given feature
computes the standard deviation of a list of points .
computes the standard deviation of a list of points .
computes the bounding box of the points in { @code min } and { @code <unk> }
invalidates all cached credentials for the given credentials .
discards the given predicate from the cache .
combine a collection of strings into a set of terms .
get all server features
create the config file
validate entries in the given file .
parse the include output file .
creates a set of nodes that can be applied to the feature manager .
downloads and returns the changed files .
download the given artifact and product version
returns true if the input contains unsupported parameters
returns { @code set } of { @code <unk> } s for a given file .
check if the inputed feature is a open feature
returns true if the given collection contains any of the given strings ignoring case .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
extracts the symbolic name from the given jar file .
returns a copy of the evidence from the given directory .
<p > <unk> . < / p >
returns the version of the given file name .
compare the version and the last two values .
validates the environment .
/ * ( non - javadoc )
return true if the given file is a webjar or not .
validates object .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates and shows a messagebox message .
creates and displays a dialog box with the specified title and message .
creates a new instance of the <unk> class .
<unk> method .
refines the shape s shape
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
/ * ( non - javadoc )
convert a byte array to a long .
/ * <unk>
converts the back angle to the center of the <unk> .
returns <code > true< / code > if both arguments are equal or <code > null< / code > .
converts a dot file to a file .
parse a string into a number .
returns a pseudo - random uniformly distributed int value between min and max ( inclusive ) .
/ * ( non - javadoc )
returns true if the <unk> is <unk> .
returns true if the given file is a directory .
/ * ( non - javadoc )
returns the <unk> color of the polygon .
checks to see if the certificate is self - signed .
returns the position of the given line along the line .
creates a new instance of this class .
returns the total number of clusters in the cluster .
sets the shrinkwrap sound .
creates and returns a new sound .
sends a log message to stdout .
writes the specified { @link locale } to the given { @link locale } .
the main method .
creates a new monitor for the given number of icons .
draws a line of points .
compute the pixel rendering point .
performs the interpolation of the <unk> operator .
compute the shape for a circle .
computes the reciprocal of the ellipse .
computes the angle between two lines .
compute the square <unk> of a square .
computes the reciprocal condition number using the specified norm .
computes the flow of the two vectors .
computes the picture of an image .
computes the reciprocal condition for a given image .
给图片添加文字水印<br > 此方法并不关闭流
<unk> the text at the given coordinates .
saves the given file .
print an element in the system .
sets the <unk> color of the pen .
initialize color wheel .
draw the bounds of the inner image .
draws the bounds of the outer rectangle .
draws the right bracket .
draw the turns on the <unk>
computes the bounds of the given image .
adds a new instruction to the list .
initialize the color wheel .
sets pen members .
calculate the turns on <unk> .
/ * ( non - javadoc )
render the bounding box .
draws a single curve in the plan .
paint the effect .
scalarization values based on angle and zoom
draws the bits in the given range .
returns the cumulative probability of uniform
returns the cumulative value of a uniform distribution .
returns the log of the log of the given log .
returns the unbiased standard logarithm of { @code 1 } in { @code <unk> } .
<p > returns the discrete portion of the largest value in the provided array . < / p >
prints the status of the data .
returns the { @link url } of the asset .
loads and returns the { @link <unk> } object .
<p > <unk> . < / p >
<p > <unk> . < / p >
create a new user
updates the user by id .
updates the user charts associated with the current user .
creates a { @link predicate } for the given { @link <unk> } .
/ * ( non - javadoc )
creates and returns a new { @link query } instance for the given { @link <unk> } .
creates a { @link list } of { @link <unk> } s .
returns a list of all columns in the collection .
/ * ( non - javadoc )
finds an object by its id .
normalize a path .
/ * ( non - javadoc )
returns a list of trigger objects for the given job id .
updates an existing namespace .
gets a trigger by its id .
joins a { @link <unk> } into a { @link string }
extract token from token .
/ * ( non - javadoc )
/ * package - private for testing
assign a jersey class to the given model .
authenticates a user .
authenticates a user and returns response out of response .
authenticates a user by username and credentials .
change password by username .
{ @link <unk> ( string ) }
gets all permissions for a role .
insert a <unk>
returns the <unk> for the given id .
insert the triggers .
get the <code > <unk> / code > for the given <code > <unk> / code > .
returns the notification history for the given payload .
resume history .
/ * ------------------------------------------------------------
adds a projection that allows the criteria to return the distinct projection count .
/ * ( non - javadoc )
create a <unk>
/ * ( non - javadoc )
pack a <code > org . quartz . trigger . triggers . trigger . scheduler . trigger } < / code > with the <code > { @link org . quartz . trigger } < / code >
set interval values for the trigger
sets the start time for the trigger .
deletes the specified mail item .
/ * ( non - javadoc )
{ @inheritdoc }
initializes the scheduler .
returns a list of all fields in the given class .
returns all fields of the given class .
initialize the javafx application .
{ @link <unk> }
get permissions for the specified role .
create a new role
generate username and password .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * <unk>
generate the path variables for the request .
generate the query string .
sends a message to a mime item .
/ * ( non - javadoc )
creates a buffered writer for the given prefix .
resets the password for the given user .
change password strength .
creates a { @link value } from the given { @link optional } .
check if the given url is valid .
/ * ( non - javadoc )
push password strength .
sets the location of the asset .
compute the md5 hash of the asset .
loads a file from the file .
load the asset file .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates and returns a { @link reflections } for { @link <unk> } s .
register the given { @link <unk> } with the given { @link <unk> } .
resume the given transaction .
executes the given { @link <unk> } .
registers a session listener .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
sends a message to the session .
/ * ( non - javadoc )
forwards to the menu .
get a list of uportal <unk> .
create a new permission object .
configure a field by name .
/ * ( non - javadoc )
/ * ( non - javadoc )
checks whether the specified { @link token } is valid .
create or update a system parameter .
/ * package
/ * ( non - javadoc )
create internal server error response .
create a new {
create a new { @link <unk> } comprised of a { @link <unk> }
create a less than or equal query for a given property name .
create a less than or equals expression .
create a greater than or equals expression
creates a {
create a new { @link <unk> } object with the given name and value .
create a new {
returns a new namespace manager based on the namespace and href .
add a content - type header to the resource representation
returns a new { @link <unk> } for the given { @link rel } .
add a link to the resource representation
add a link - relation pair to the representation of the resource . <p > templated links are expanded according to the link - relation type specified by <code > <unk> / code > . < / p >
add a link to the representation of a resource .
returns a copy of this resource with the specified link - relation type .
returns a copy of the given { @link links } .
turns this resource into a plain { @link <unk> } .
add a new resource to this resource representation
returns an immutable copy of the given map .
returns the root cause of the given throwable .
returns the throwable s cause chain .
get the stack trace for a throwable .
returns the stack trace of the given throwable .
propagates { @code throwable } to the given { @code throwable } if it is a { @code runtimeexception } or a { @code runtimeexception } or a { @code runtimeexception } .
/ * ( non - javadoc )
deserialize a serialized object .
<p > gets a substring of a string . < / p >
encodes a byte array into base64 notation . <p > this method can be used with { @link <unk> ( byte [] int int ) } .
encodes a string into an array of bytes .
<p > gets a substring of a string . < / p >
writes a 32 - bit integer into the given byte array starting at the given offset .
writes a little - endian int at the specified offset in the buffer .
reads a four - byte int from the given byte array at the given offset .
reads a 32 - bit long from the given byte array starting at the given offset .
copy the contents of the given input stream to the given writer .
copy the contents of the given input stream to the given writer .
copies the contents of the given string to the given output stream .
copies the contents of the given string to the given output stream .
compare two reader objects
copy the contents of a reader to a string .
builds a new calendar from an input stream .
reads the content of the given input stream into a string using the given encoding .
reads the contents of a reader into a list of strings .
reads the contents of a stream into a list of strings .
reads the lines of the given input stream into a list of strings .
<unk> { @link <unk> } <unk>
implementation of pbkdf2 ( <unk> ) .
implementation of pbkdf2 ( <unk> ) .
utility method to generate an <unk> hash with n bytes .
copy a file or directory to a file .
copy the contents of the given source file to the target file .
copy the contents of the given source to the destination file .
copy a file to a file .
recursively deletes a file .
set the file to the specified file
reads n bytes from the given file .
reads the contents of a file into a byte array .
checks if two zip files are equal .
returns the name of the file extension .
write a file to a file .
reads the contents of a file into a byte array .
parse a media type string .
creates a media type .
returns the { @link charset } for the { @link charset } contained in { @link charset } .
add a parameter to the query .
<p > <unk> . < / p >
returns a copy of this media type with the quality of the given parameter .
<p > <unk> . < / p >
checks if the media range range range range is a range of {
combines multiple iterables into a single stream using the supplied iterables .
returns a { @link list } containing the elements of the given iterator .
returns a {
compare two iterables .
creates a deferred filtering iterable with the given predicate .
creates a deferred iterable from the specified iterable .
creates a list from an iterable .
creates a <i > mutable< / i > { @code hashset } instance containing the given { @code iterable } .
convert an iterator to a list .
add padding to the buffer .
<p > <unk> . < / p >
returns an immutable list containing all of the elements in { @code i } .
returns an immutable list containing all of the elements in the given iterator .
returns an immutable multiset containing the given elements .
returns a list containing all of the elements in the given array .
reads the contents of a file into a list of strings .
read a list of lines from a file .
reads the contents of a file into a list of strings .
reads the contents of a file into a list of strings .
returns a list of all the lines in the given file .
creates a buffered reader for this file .
creates a buffered writer for this file using the specified encoding .
create a buffered writer for a file . if the given charset is utf - 16be or utf - 16le the requisite byte order mark is written to the file before the writer .
<unk> > <unk>
reads all lines from the given { @link inputstream } and returns a list of { @link string } s .
returns the { @link extension } with the given urn urn .
try to find a resource with the given name .
load dependencies from a resource .
copies the contents of this { @link <unk> } to the specified { @link outputstream } .
writes the contents of this <code > <unk> / code > to the specified <code > outputstream< / code > .
reads the contents of the stream into a byte array .
<unk> > <unk>
<p > <unk> . < / p >
<p > checks if two calendar objects represent the same instant . < / p >
checks if two date objects represent the same instant .
<p > checks if two calendar objects represent the same local time . < / p >
checks if two dates are same .
determines whether the specified calendar object contains the specified calendar .
determines whether the specified <unk> is the same week with the specified <unk> .
determines whether the specified <unk> is the same week with the specified <unk> .
determines whether the specified <unk> is the same month with the specified <unk> .
determines whether the specified <unk> is the same month with the specified <unk> .
checks if two date objects represent the same instant .
determines whether the specified <unk> is the same month with the specified <unk> .
<p > <unk> . < / p >
/ * [ deutsch ] <p > interpretiert den angegebenen string als { @link java . util . date } . < / p >
<p > <unk> . < / p >
/ * [ deutsch ] <p > erzeugt ein neues <unk> kalenderdatum . < / p >
combines multiple iterators into a single closeable iterator . e . g : <code > <unk> ( [ 1 2 3 ] ) - > [ 1 2 3 ] < / code >
multiplexes an iterator of iterators into a single iterator . e . g : <code > chain ( [ 1 2 3 4 ] ) - > [ 1 2 3 4 ] < / code >
creates an infinite iterator that issues iterates over the elements of the given iterator .
creates an { @code iterator } whose elements are the elements of the given elements .
checks if two iterators are equal .
/ * documented <unk>
skips the given number of elements from the given iterator .
creates a <i > mutable< / i > { @code hashset } instance containing the given elements .
creates a closeable iterator .
returns <code > true< / code > if the given <code > str< / code > is <code > null< / code > .
<p > truncates a string to the specified length . < / p >
joins the given strings using the given delimiter .
damerau - levenshtein distance between two strings .
generates a random string of the given length .
returns a string with the given number of times .
shuffles a list of randomness .
<p > strips whitespace from the start and end of a string . < / p >
<p > gets a substring of the given string . < / p >
<p > right . < / p >
counts the number of spaces in the given string .
trim all trailing chars from the given string .
pad a string to a string
pad a string so that it can be used as a string .
<p > <unk> . < / p >
removes all class names from a string .
count the number of occurrences of a string .
load properties from a base url .
<p > relativize . < / p >
/ * ( non - javadoc )
returns the qualified name of the given class .
returns the name of the simple name of the given class .
returns the name of the class of the given class .
<p > <unk> . < / p >
returns all superclasses of the given classes .
verifies that the given password matches the given hash .
reads a string from a file .
adds a new byte to the queue .
adds the specified byte array to the queue .
reads up to <code > len< / code > bytes of data from this input stream into an array of bytes .
concatenate two byte arrays .
returns an array containing all of the elements in the specified array .
returns a copy of the given array of bytes .
returns a copy of the given array of bytes .
returns an array containing all of the elements in the original array .
<p > clones . < / p >
<p > toarray . < / p >
<p > rotates . < / p >
creates a slice of the specified array .
rearrange the elements of an array into a new random generator .
sorts the given array using the given comparator .
sorts the specified array using the specified comparator .
returns an array containing all of the elements in the specified array .
sorts the given array of doubles .
<p > sort . < / p >
<p > casts the char array to a char array . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > converts a matrix to an array of doubles . < / p >
<p > converts an array of primitive doubles to values . < / p >
converts an array of doubles to an array of doubles .
converts an array of doubles to an array .
<p > converts a <code > short< / code > array into an array of <code > <unk> / code > . < / p >
<unk> > null< / code >
converts a byte array to a byte array .
<p > <unk> . < / p >
convert a 2d array to a double array .
<p > converts a matrix to an array of doubles . < / p >
decodes a byte array into a byte array .
checks if the given string is a punctuation character .
checks if the given string is a punctuation character .
converts a string to title case .
~ methoden ----------------------------------------------------------
same as {
returns a byte array containing all of the specified bytes in the given string .
/ * ( non - javadoc )
creates a { @code fraction } of the form { @code integer } .
<p > creates a <code > fraction< / code > object from a <code > string< / code > . < / p >
/ * [ deutsch ] <p > <unk> zu <unk> / p >
/ * [ deutsch ] <p > subtrahiert den angegebenen <unk> <unk> . < / p >
/ * [ deutsch ] <p > liefert eine kopie mit dem angegebenen <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > returns the <code > <unk> / code > . < / p >
<p > creates a <code > fraction< / code > object with this rational numbers . < / p >
returns a new list containing the elements of the specified collection .
creates a <i > mutable< / i > { @code hashset } instance containing the given elements .
returns an immutable multiset containing the given elements .
returns an immutable multiset containing the given elements .
returns a set backed by the specified values .
parse a duration .
obtains an instance of { @code short } from a duration amount .
obtains an instance of { @link <unk> } from a list of durations .
obtains an instance of { @code duration } from { @code start } and { @code end } .
returns the maximum value of the specified values .
returns the minimum of the specified values .
returns the mean of the given values .
returns the sum of the values in the array .
returns an { @code long } value of the product of the specified { @code long } values .
returns the least power of two numbers .
multiply a { @code long } values throwing an { @code java . lang . long } .
multiply the values in the supplied { @code long } values throwing an { @code <unk> } if overflow occurs .
returns the least power of two numbers .
multiply the values in { @code a } by { @code b } .
returns the least power of two numbers .
returns the { @code power } value of the base { @code base } and { @code base } exponent { @code b } unless { @code base } is { @code base } .
returns the greatest common divisor of two { @code long } values .
computes the least common divisor of two positive integers .
<p > returns the least common multiple by the two vectors . < / p >
converts a { @code long } value to an { @code int } value .
ensures that an object reference passed as a parameter to the calling method is not null .
throws an {
checks that the given value is an instance of the given type .
check that a given type is an instance of the given type .
<p > negates the specified boolean . < / p >
determines whether the given boolean value is either boolean or boolean .
convert a string to a boolean slug
creates a splitter from the given { @code string } .
creates a splitter that is on the given pattern .
returns a new splitter with the given { @code limit } .
returns a splitter that behaves like { @code this } with { @code prefix } and { @code prefix } .
returns a splitter with the suffix of this splitter .
returns a splitter that behaves like { @code this } with no more elements .
returns a splitter that behaves like a given { @code this } with this { @code splitter } .
<p > <unk> . < / p >
creates a mutable { @link treeset } instance .
merges the given iterable using the given comparator .
returns a comparator for the given { @code comparator } .
/ * documented <unk>
sorts the given { @code comparator } using the given { @code comparator } .
trim all elements from the current line .
returns a joiner to this joiner to the end of this list .
creates a new instance of this class by removing all empty elements separated by the specified separator .
creates a new instance of this class by replacing all elements with the specified trimmed pattern .
creates a new instance of this class by replacing all elements with the specified trim pattern .
creates a new instance of this class by appending the trim parameter to the trim parameter .
joins a { @link iterable } of { @link string objects } into a single { @link string } .
calculates the digest of the given algorithm .
creates a new { @link mac } for the specified { @link mac } .
/ * documented <unk>
/ * documented <unk>
/ * documented <unk>
yields the first element of the array .
/ * documented <unk>
creates a link to the link .
handles exceptions thrown by { @link <unk> } .
saves the response body as a json object .
/ * ( non - javadoc )
returns the s3 client based on the client configuration .
unmarshalls the given json into a list .
unmarshalls the given json into a map .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > invoke . < / p >
adds a value to the backing map .
/ * package
/ * ( non - javadoc )
unmarshalls the given json into a list .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an object that implements the given {
<p > <unk> . < / p >
returns the default value of the given type .
/ * ( non - javadoc )
unmarshalls the given json into a list .
fetch the contents of a module location .
computes the sunrise for an arbitrary declination .
retrieves a list of history objects .
/ * ( non - javadoc )
returns the next forecast for the given date .
create an instance of { @link jaxbelement } { @code < } { @link persontype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link persontype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link persontype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link persontype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link persontype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link persontype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link persontype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link persontype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link persontype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link persontype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link persontype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link persontype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link associationtype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link persontype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link persontype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
fetch content .
returns the forecast - term forecast for the given type .
add term forecast
create a geographypointvalue from a well - known text .
build a list of available event types .
create an instance of { @link jaxbelement } { @code < } { @link texttype } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
get region header .
returns the { @link <unk> } for the given { @link x509certificate } .
helper method to create a { @link uri } from a string .
checks if the given date is a leap year .
returns the forecast line forecast for the given { @link <unk> } .
returns the shortest durations for the whole unit .
returns the best fit forecast if the <unk> is not found .
tbd expr idocumentquery<t > idocumentquerybase<t idocumentquery<t >> . <unk> > ( expression<func<t tvalue >> propertyselector double latitude double longitude )
fetch content for a poi
creates a { @link string } array for the specified { @link decoder } .
convert a map of file name to a file name .
changes the model .
deserialises the given { @link inputstream } to a json string .
/ * ( non - javadoc )
/ * ( non - javadoc )
get a new instance of the given class .
get the extend of the given object .
/ * ( non - javadoc )
{ @inheritdoc }
gets the configuration for the given configuration class .
gets the complete config value .
authenticate the given configuration .
creates a connection from properties .
/ * ( non - javadoc )
initializes decoder from decoder .
register a proxy for a specific interface .
load a service from a jar .
uses the { @link <unk> ( class ) } method .
returns a list of services for the given interface .
gets the annotation for the given interface .
<p > opens a new { @link outputstream } . < / p >
registers a new data source .
create a new instance of the { @link <unk> } .
returns the comment at the given index .
returns the portion of the numeraire at the given index .
/ * ( non - javadoc )
$antlr end <unk>
cold start .
column cold cold cold cold * cold * cold ; <unk> .
/ * package
returns a {
run the given relation type .
performs a binary search on the stack .
sort the elements in { @code relation } using the given { @code <unk> } .
returns true if the given relation type is not null .
performs a binary search on the stack .
/ * ------------------------------------------------------------
run the update algorithm .
start - up <unk> .
creates an nfa from the nfa .
/ * ( non - javadoc )
/ * <unk>
returns the successor of the given entry .
returns the successor of the given node .
returns the nfa from the given transaction .
create a {
create a child of {
parses the { @link <unk> } from the { @link <unk> } .
sets the nfa data .
decodes a nfa from nfa .
/ * <unk>
/ * ( non - javadoc )
package private for testing
/ * <unk>
inits the .
/ * documented <unk>
/ * ( non - javadoc )
runs through through the server .
solves the nfa .
/ * <unk>
/ * <unk>
/ * public void <unk> ( <unk> state state state state ) { <unk> = new <unk> () ;
compiles the given pattern into a pattern .
creates a new { @link <unk> } with the given pattern .
sets the type of the lhs to be shared .
returns the { @code short } value of the specified { @code resource } .
/ * ( non - javadoc )
/ * internal
performs the alignment of the alignment alignment
/ * <unk>
/ * package - private for <unk>
returns the number of arcs in <code > a< / code > .
draw two amino acid
factory method for <unk> .
/ * ( non - javadoc )
/ * <unk>
/ * ------------------------------------------------------------
/ * ------------------------------------------------- [ <unk> ] ---------------------------------------------------
prefixes the prefixes
/ * ------------------------------------------------------------
main entry point
write notes .
unescapes the hierarchical character represented by the given tuple .
/ * <unk>
/ * ( non - javadoc )
sets the state set .
calculate the miss of a subtree .
/ * ( non - javadoc )
returns the last seen seen state .
parse a unicode set of characters .
gets the filter as a unicodeset .
runs a set of { @link <unk> } s .
nonsymmetric reduction from hessenberg to real schur form .
returns a string representation of this sketch .
resets the <unk> .
add a new state to the state machine .
splits the old state into -----------------------------------------------------------------------------
start snippet : <unk>
splits the old state into the new state .
splits the old state into -----------------------------------------------------------------------------
/ * ------------------------------------------------------------
remove an entry from the list .
/ * ( non - javadoc )
sets the state of the compiler .
/ * <unk>
appends a node to the end of the list .
set the parent of the packet .
implements { @link <unk> } .
send transaction .
removes a character from a string builder .
resolve the properties of the given arc together .
/ * [ deutsch ] <p > description : < / p >
closes the connection .
returns the <unk> of the two nodes .
stop the next ( capturing ) pattern .
generates an arc from the specified endpoint .
set the number of -----------------------------------------------------------------------------
push code to push
combine the ^ ( ^ ) ^ ( ^ ( ^ ) ^ . ^ ( ^ ( ^ ( ^ )) .
clean up all the declared strings .
combine the state with {
combine the state with {
stop the next element .
returns { @code true } if this factor is { @code <unk> } or { @code false } otherwise .
get options from a file .
gets the rule set plugins .
gets the store plugins .
/ * ( non - javadoc )
main method .
parses command line arguments .
returns the error message .
creates a command line options for the command line options .
builds the options .
creates a new { @link options } for the given { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
parse command line arguments .
executes a task .
read the properties from the command line .
prints the command line usage .
try to get the home directory .
creates a list of { @link <unk> } s from a { @link file } .
parses the given list of { @link string } s into a { @link map } .
write a { @link geometry } to a json string .
creates a { @link multipolygon } for the given { @link polygon } .
creates a set of ids for the given coordinates .
gets the intersection of the given { @link <unk> } .
/ * <unk>
gets the route .
returns the path of the reverse routing path .
add a connect to router .
add a connect to router .
routes to add routes
removes the path pattern from the path .
removes the specified target from the list of phrases .
returns the number of elements in this batch .
routes to add routes
routes to add routes
routes to add routes
removes the path pattern from the path .
remove target router from the reverse list .
returns true if any of the path tokens matched the request path .
/ * ( non - javadoc )
checks if the given value is equal to the given value .
/ * ( non - javadoc )
returns the file with the given owner .
/ * ( non - javadoc )
returns a list of all children in the cluster .
compare two entries .
compare two entries .
compare entry to compare entry .
get the { @link <unk> } for the { @link <unk> } .
return a list of all the children of this person .
returns the short description of the mac os .
set the date - time for this servlet .
==================== manipulating the class ====================
loads the prototype of a class file .
<p > <unk> . < / p >
/ * ( non - javadoc )
parse a resource .
add source path to the dom .
receive notification of the start of an element .
/ * ( non - javadoc )
handles the end element event .
/ * ( non - javadoc )
/ * ( non - javadoc )
report the start of dtd declarations if any .
pass the <unk> to the <unk>
receive notification of the end of an element .
parse standard action .
parse custom action .
loads a <unk> tag from the classpath .
adds contents of script
apply the provided include directive to the given file .
this method gets called when a start tag is encountered .
/ * ------------------------------------------------------------
creates and returns a { @link saxparser } based on the configured saxparser .
/ * ------------------------------------------------------------
tries to find a class with the given name .
loads the class data from the given file .
returns a {
wrap a { @link runtimeexception } to a { @link runtimeexception } and returns a { @link runtimeexception } .
/ * ( non - javadoc )
get the singleton instance of this class .
maps a function to a function .
maps a function to a function .
/ * ( non - javadoc )
/ * ( non - javadoc )
append a single string to the end of the result .
/ * ( non - javadoc )
/ * ( non - javadoc )
parse the script file and return the result .
get the content of a file .
parse the validation of a tag file .
parse a file .
<p > return the <code > <unk> / code > of the <code > <unk> / code > property . < / p >
returns the rfs path for the jsp page . <p >
determine the syntax of the jsp document .
/ * this method is used to get the page encoding information from the reader .
get the encoding for the given owner .
/ * ( non - javadoc )
reads a root root .
create a compiler .
/ * ( non - javadoc )
get the location of the column .
/ * ( non - javadoc )
compile the compiled compiled files .
==================== manipulating the class ====================
reads a number of bytes from this input stream .
reads characters into a portion of an array .
find the last mod .
walk the class hierarchy of a class loader
checks if a class loader is a parent classloader .
checks if the given class is a member of the given class .
reads the data from the stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
iterates over the pages by following a { @code <unk> } and { @code <unk> } .
/ * ( non - javadoc )
split a string into a number .
fills the rpm package with the <unk> flag .
builds the { @link <unk> } .
laedt die <unk> tag <unk> .
get a list of { @link <unk> } s for a given { @link <unk> } .
<p > parses the request and returns the result . < / p >
/ * ( non - javadoc )
returns the value mapped by {
validate channel name .
/ * ------------------------------------------------------------
returns the amount of remaining options for the given options .
checks if the given array of { @code options } is { @code null } .
reads up to <code > len< / code > bytes of data from this input stream into an array of bytes .
/ * ( non - javadoc )
seek to the given position .
sets the position of the file to the given block .
seek to the next block .
locates the position in the frame with the given position .
locates the meta data associated with the specified block .
attempt to initialize the block decoder .
/ * ( non - javadoc )
output connectionfactory .
/ * ( non - javadoc )
check if the artifact is zip .
sets up to three values .
this method is used to update the state of this builder .
/ * <unk>
/ * this method is used to calculate the next value of a list of available space .
/ * --- private methods ---
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
reads a portion of an array of characters .
throws an exception for the expected number of bytes .
throws an exception for invalid bytes .
/ * ( non - javadoc )
==================== manipulating the class ====================
scan the jsp configuration .
/ * <unk>
scans the classpath for resources that match the specified path .
/ * ( non - javadoc )
/ * <unk>
cheap scan for jar files .
<p > get ( <unk> ) < / p >
returns the default classloader for the current thread .
set the bytecode of this definition .
合并系统变量 ( - d ) ，环境变量 和默认值，以系统变量优先
write a byte array
==================== compile methods ...
method to initialize the class path .
<unk> . <unk>
starts the watch thread .
stops the thread .
/ * ( non - javadoc )
finds the { @link channel } by by the { @link <unk> () } .
/ * public void <unk> () { return <unk> . <unk> () ; }
<pre > { @code <unk> > } < / pre >
update the server group cache .
{ @inheritdoc }
/ * ( non - javadoc )
copy the contents of the given input stream to the output stream .
copies the contents of { @code from } to { @code appendable } .
parses the content of a file .
parse the given attributes .
parse the given {
parse the end of an attribute .
returns the name of the next token in the stream .
{ @inheritdoc }
/ * --- private methods ---
parse a jar file .
this method gets called when a start tag is encountered .
parse the include directive .
add a file to the dom .
parse the taglib directives .
parse directives .
<editor - fold defaultstate = collapsed desc = html >
this method gets called when a start tag is encountered .
parse an attribute directive directive .
parse the variable directive directive .
parse a comment and wait for it .
parse and wait for the script .
parse the script .
parse and start the expression .
creates a new {
/ * ------------------------------------------------------------------------
parse the content specification .
parse the include report .
parse the forward namespace
parse a configuration property .
parse the set property .
parse an empty html tag .
parse the use bean .
parse the body of the body .
parse the node body and body .
parse the params
/ * <unk>
parse a plugin .
checks an l command .
parse the standard action .
parse a custom tag
parse the text content .
read the next character .
/ * package private
parse a chemfile object .
parse the text template .
/ * ------------------------------------------------------------
parse the tag .
parse the body of the body of the body of the body of the body of the body .
parse a conflict .
defect <unk> .
returns the type of the attribute .
get the value of a named attribute .
given a set of named attributes returns true if the named attribute is not found .
returns the value of the named attribute .
inserts a new parent into this node s parent .
get a list of { @link <unk> } s for the given { @link <unk> } .
adds an attribute to the request .
add a child to this node .
get attribute value .
gets the attribute names .
find a child by its name .
returns the children of this node .
returns a list of all children of the given name .
converts this { @link <unk> } to a { @link <unk> } .
calculates the alias for the last alias .
/ * ( non - javadoc )
create a byte array from an input stream .
<p > <unk> . < / p >
write an optional attribute value to the widget .
<p > write . < / p >
append an element to the parent element .
appends the given element to the parent element .
gets the text node .
writes a single character .
write a portion of an array of characters .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
write a buffer to the buffer .
loads a set of properties from a file .
get the state of the parent element with the given key .
registers a new { @link <unk> } with the given primary key .
/ * ( non - javadoc )
summarize of the model .
cleans up the base class name .
/ * ( non - javadoc )
authenticate the given request and return true if it is authenticated .
reads a single byte from the stream .
/ * ( non - javadoc )
static factory method to create a new instance of this class .
get the distance of a number of dense bytes
polling whether items are fully compressed or not .
<p > resolve . < / p >
gets the value of a configuration attribute .
for each element of the list of extracted meta data in the two lists .
writes an announce file to the file .
returns the throwable associated with the given request . <p >
delegate to the <code > <unk> / code > method of the <code > bean< / code > parameter .
convert the value according the type of devicedata .
returns the value of the specified property in the specified object or <code > null< / code > if no such property exists .
updates the properties of the given bean in the given bean with the given parameters .
/ * ------------------------------------------------------------
sends a request to the server using the given <unk> and writes the result to the given output stream .
adds the specified tag handler to this tag handler pool .
this method is called by the tag handler after it has been released .
checks if the file is a sum of the file extension .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
proprietary method to evaluate an el expression
returns the application title .
loads an xml file from a file .
parse command line directives .
this method is used to load the class file .
loads the files from the given {
/ * ( non - javadoc )
executes the program .
sets the absolute path to the given path .
/ * ( non - javadoc )
returns a list of all contained modules .
/ * example :
<p > <unk> . < / p >
returns the next argument .
/ * ------------------------------------------------------------
executes the include method .
/ * ------------------------------------------------------------
removes all jsp references .
/ * ------------------------------------------------------------
proprietary method to evaluate the proprietary expression
set the distance function to the given distance function .
/ * ------------------------------------------------------------
checks if the given string matches any spaces .
get the next character .
unescapes the given number of characters .
parse the token .
/ * package
returns true if the token is a delimiter .
register a new source file .
removes the source file from the source file .
/ * ( non - javadoc )
open the file .
build a copy of this { @link <unk> } .
add a { @link <unk> } to the { @link <unk> } .
returns a string representation of this comment .
safe method to get the problems of a compilation .
set a preset with the specified preset .
<unk> dict .
set the parser s presets .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the nice length of compression .
set the match finder for this preset .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
// // <unk> methods
/ * ( non - javadoc )
/ * ( non - javadoc )
executes the compilation .
a compilation error .
this method will be called when the file is uploaded .
parses the javac compilation error message .
returns a sequential ordered { @link intstreamex } containing the properties of the given { @link <unk> } that match the given predicate .
get the list of all possible decisions made to the user .
sets the name of the schema resource .
recursive method to set the path prefix .
encodes the given prefix and returns the encoded string .
/ * ( non - javadoc )
parses an xml file and removes the result .
examine the children of a node .
get the <unk> from the <unk>
get the schema for the given schema .
creates a new instance of { @link <unk> } .
参数错误 : errors
binds the specified binder to the specified type .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the file name of a file .
insert a plugin scope into the tag .
returns an instance of the given { @code cache } .
see { @link <unk> ( java . util . map ) } .
loads the byte array from the specified array .
returns true if the size of the array is equal to the specified size .
prepare the list of dependencies .
prepare a plain { @link <unk> } .
resolves the given { @link org . apache . maven . artifact . <unk> } to the given { @link <unk> } .
convert a collection of { @link <unk> } to a { @link <unk> } .
returns the { @link inputstream } for the given resource .
jsp2 . <unk>
reads the content of the logging context .
loads the configuration file .
/ * --- private methods ---
method used to validate the {
/ * ( non - javadoc )
destroy the current state of the input stream .
<p > <unk> . < / p >
internal method for creating the initial reader from the <unk>
returns the encoding name of the given bytes in the endian byte order .
/ * parses a css string .
/ * this method should only be called once .
scan surrogates .
this method is called when a fatal error occurs .
fill the links for the specified { @link <unk> } .
adds a { @link <unk> } to the given { @link channel } .
creates a new { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
loads a resource from the classpath .
/ * ( non - javadoc )
/ * ( non - javadoc )
log a message and exception .
/ * ------------------------------------------------------------
update the filter parameters .
create or update filters .
/ * ( non - javadoc )
/ * ( non - javadoc )
commit the block .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the size of the buffer .
creates an instance of <unk> .
creates an instance of <unk> .
writes a <unk> object to the given byte array .
moves the cursor to the specified position .
fill the given buffer with the given bytes .
add a pending pending pending changes to the pending queue .
returns the number of bytes read from the input stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
writes the contents of the specified array to the stream .
writes a single character .
write a portion of an array of characters .
/ * ( non - javadoc )
allocate a new buffer .
creates a new lock .
check for an error .
/ * ( non - javadoc )
==================== manipulating the class ====================
adds the byte arrays to the cache .
returns a string representation of the given message .
<p > <unk> . < / p >
/ * ( non - javadoc )
returns the localized message for the given message .
returns a list of all related metadata from the given class .
generates a java . lang . object
generate the class .
compile the output ====================
/ * ( non - javadoc )
/ * ( non - javadoc )
initialize the compiler factory .
scans the classpath for jar files in a jar - d jar .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a string representation of the given string .
rewrite the given xmlfile
get the tag handler
generates the initialization code for the tag handler class .
performs the tag handler destroy .
generate the preamble of the preamble .
<unk> may be null .
/ * ( non - javadoc )
get the default factory for this class .
generate the preamble of the preamble of the preamble .
/ * ------------------------------------------------------------
emits the xml representation of an xml document .
/ * private void <unk> ( string code ) throws ioexception { super . <unk> ( <unk> ) ; }
*********************** volt db extensions ************************
output transaction method
/ * ( non - javadoc )
/ * ( non - javadoc )
print the tag handler .
/ * private boolean <unk> ( <unk> <unk> ) {
/ * ( non - javadoc )
generate and print the variables scoped variables .
convert a method name to a getter method .
<p > <unk> . < / p >
parse the xml configuration file .
copy the kjar from the given { @link <unk> } to the given { @link outputstream } .
returns a string representation of the entries in the given { @code byte [] } array .
method <unk> .
<p > get . < / p >
/ * public void <unk> ( <unk> handler ) { if ( <unk> == null ) { <unk> () ; }
releases the resources associated with this resource .
parse a string expression into a constraint tree
parses the current token and returns true if it is a valid function .
returns a string containing escaped characters .
returns the next token in the stream .
this method will select the leading and next leading and trailing entries .
/ * ( non - javadoc )
fills the local page with the given uri
/ * ------------------------------------------------------------
/ * ( non - javadoc )
print a string .
returns the index of the <i > n< / i > in the <code > string< / code > th newline .
returns true if the given string is a valid expression .
get the ******************* beginning of the expression .
sets the scope of the <unk> .
check attributes of a node .
encodes the given html string into an html string .
/ * ( non - javadoc )
<unk> : <unk> [ ljava / lang / string ;
{ @inheritdoc }
proprietary method to validate expressions
get the function handler class name .
returns the java package name of the given path .
merge intervals .
<p > <unk> . < / p >
returns the fingerprint of a character .
returns true if the given string is a valid java identifier .
returns the name of the java . lang . string .
returns the canonical name of the given class .
returns the list of mdw classes from a jar file .
generates a random { @link <unk> } object .
----- private methods -----
writes the xml representation of the properties to the output file .
{ @inheritdoc }
/ * ( non - javadoc )
/ * public static boolean <unk> ( string dn ) { if ( ! ! = null ) { return null ; }
returns a set of all keys in the given map .
/ * ( non - javadoc )
calls the javascript function to modify the input string .
/ * ( non - javadoc )
this method will increment the number of errors and increment the count of errors in the current context emitter
{ @inheritdoc }
checks if the given key has changed .
get the basename of a file .
/ * ------------------------------------------------------------
copy the contents of this object to the available one .
/ * ( non - javadoc )
/ * ( non - javadoc )
this method will iterate through the table and return the results .
an expectation for checking that the given locator is present in the cache .
put a session into the cache .
loads a database from the cache .
build a collection of { @link <unk> } s from the given { @link payload } .
checks if the given number is a number .
/ * ( non - javadoc )
write an object to the stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the ttl for the specified locator .
helper method to create a list of { @link point } s from a { @link map } .
initialize the client
/ * ( non - javadoc )
get the type bound statement for a given locator .
/ * ( non - javadoc )
track the metrics .
invoke { @link <unk> ( string long ) } on lower value .
read a long integer from the stream .
write a string to a stream .
returns a map of all properties in the given {
creates the container .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> - <unk>
returns the next watermark .
pushes the given record to the {
clears the state of the slot .
/ * ( non - javadoc )
~ methods **************************************************************************************************************************************
/ * ( non - javadoc )
insert metrics in batch .
call { @link <unk> ( string listener ) } on all registered callbacks .
converts an { @link <unk> } to a single { @link observable } .
remove off subscribers .
handler for pending messages .
/ * ( non - javadoc )
/ * ( non - javadoc )
writes the {
returns the extension of the given file name .
/ * ( non - javadoc )
returns the list of multi - datapoints specified by the type argument .
kill the job .
builds a { @link <unk> } .
disconnects from simple metrics .
computes the rollupinterval corresponding to the given points .
returns the <unk> for the given raw type .
get the bound statement term .
compute the byte array for a list of buffers .
convert a dash array to a string
formats an array of bytes to a string array
register metrics .
blocks until the server is initialized .
flushes the remote locks .
wait for others to quiesce timeout .
read a ugi from the given <code > string< / code > .
returns a list of all aliases for the given scan range .
retrieves a collection of all child <unk> that are associated with the given granularity .
converts a granularity of granularity to a key - key - value combination .
adds a thread name to the thread pool .
/ * ( non - javadoc )
adds metric to <unk> .
returns the complete set of metric names that can be used to build the facebook metrics .
flushes all dirty slots to the shard .
a { @link list } of tokens .
{ @inheritdoc }
an implementation of { @link <unk> ( object range ) } for more information .
get all of the users that match the given locator .
add a rollup definition to the batch
/ * <unk>
executes a query and returns the result as a result .
<p > <unk> . < / p >
derives a <unk> from the reference slot .
returns the granularity of the granularity of the granularity of the words in the interval .
returns the granularity of the time interval in the interval .
<p > returns the granularity of the path between two points . < / p >
returns the granularity of the granularity of the given interval .
get the granularity of the granularity of points .
sets the expiration time of the server .
add a { @link <unk> } to this { @link <unk> } .
remove a shard consumer .
/ * package private
get the list of <unk> singleton
/ * ( non - javadoc )
instrument the metrics information .
returns a set of dead hosts .
returns a set of dead nodes .
returns the list of ip addresses of the host transport .
returns the maximum number of connections that can be used for the { @link <unk> } .
write a little - endian 32 - bit integer .
/ * <unk>
converts a glob pattern to human readable string .
http post request .
returns an implementation of {
main entry point .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get a {
~ methods **************************************************************************************************************************************
<p > return a list of <unk> for a <unk> . < / p >
save the results of the given metric to be executed asynchronously .
service bound <unk>
creates a list of locators for a given metric .
get progress for a given tenant .
/ * implementation
parses the given query string into a tsuid .
/ * ( non - javadoc )
/ * ( non - javadoc )
converts the { @link <unk> } to a { @link <unk> } .
returns the rollupinterval corresponding to the given interval .
return true if the locator is currently in the batch .
determine if the locator is currently in the discovery layer .
check if the current locator is {
check that the given locator is present .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of geopoint as a rectangle .
creates a map that maps the given range to the supplied range .
returns an iterable of {
{ @inheritdoc }
add a metric locator to the bucket .
this method inserts the specified { @link org . apache . cassandra . client . <unk> . <unk> } with the specified { @link <unk> } .
inserts the specified { @link org . <unk> . tx . <unk> } .
{ @inheritdoc }
/ * ( non - javadoc )
~ methods **************************************************************************************************************************************
get a map of logs that match a given locator .
/ * ( non - javadoc )
transform a { @link <unk> } into a { @link <unk> } .
returns the raw data type of the given map .
/ * ( non - javadoc )
returns the location of the given metric .
get bound statement for a metric if it exists .
create a list of { @link com . google . cloud . metrics . <unk> } queries for the given peer .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a map of all available <unk> that match the given criteria .
/ * ( non - javadoc )
returns the serializer for the given type .
returns true if the content type is writable or not .
returns { @code true } if the { @code headers } is { @code accept } or { @code null } .
writes a list of <unk> to the <unk> .
checks if the { @link <unk> } is a { @link <unk> } .
marks the value received from {
/ * ( non - javadoc )
/ * ( non - javadoc )
~ methods **************************************************************************************************************************************
/ * ( non - javadoc )
returns the first free port of the connection .
creates a new instance of the { @link <unk> } for the given name .
create a new version of the given os version .
gets the system property .
determines whether the given string is a valid version match .
/ * package private
checks if the version of the version matches at least one of the three versions of the version .
the default implementation of { @link <unk> ( int ) } .
shuts down the { @link agiserver } s starting at the current { @link <unk> } .
stops the agiserver .
starts the time count .
/ * ( non - javadoc )
sets the { @link <unk> } to be used by the { @link org . apache . flink . api . common . <unk> } .
/ * ( non - javadoc )
sets the state of the world .
/ * ( non - javadoc )
joins a list of objects into a single string .
{ @inheritdoc }
<p > <unk> . < / p >
gson invokes this
lists all the plugins .
enable or disable a plugin .
disable the { @link <unk> } .
copies a file to the specified destination directory .
copies a url to a file .
copies an input stream to a file .
/ * ( non - javadoc )
parses the given string into a plugin object .
create a default { @link <unk> } .
<p > <unk> . < / p >
adds a { @link <unk> } to the list of ice servers .
/ * ( non - javadoc )
/ * ( non - javadoc )
closes all currently unused peers .
send a message to the group .
generate a json object
transmits a message to the specified user
transmits the messages to the subscriber .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
the main method .
{ @link <unk> } <unk>
decodes a picture .
gen - last : <unk>
creates and returns a new agent .
creates an <unk> instance .
/ * <unk>
creates an image with the given id .
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
the main method .
fetches a <unk> <unk> record .
create a list of random <unk> <unk> record data .
/ * initialize <unk> <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
checks if the given string is a valid numeric value .
parse a number from the given locale and locale .
parses the given string value as a number .
prints a number of digits to a number .
helper method to format a number into a string .
gets the value of the <unk> property .
creates an xml document from an xml document .
create a <unk> from a dom document .
creates a new xml marshaller with the given encoding .
creates a new configuration object
<p > <unk> . < / p >
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
reads the xml content from the given xml file .
reads the contents of an xml document from a stream .
<p > <unk> . < / p >
gets the value of the <unk> property .
gets the value of the <unk> property .
<unk> > <unk> { @link <unk> ( string map ) }
creates a dom document from a dom document .
{ @inheritdoc }
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
find persistence units .
creates a new { @link <unk> } .
gets the value of the <unk> property .
creates a dom document from a dom document .
{ @inheritdoc }
gets the value of the <unk> property .
returns the locale for the given country string .
converts a lat / lon string to a list of mapcodes like : https : // en . wikipedia . org / wiki / <unk>
format phone number in e123 national format .
<unk> <unk> <unk>
returns the country name for a country string .
/ * [ deutsch ] <p > ermittelt das <unk> der angegebenen iso - 3166 - country - <unk> . < / p >
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
the main method .
load a csv file .
load the configuration from the given input stream .
evaluate javascript .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
the main method .
create a <unk> for the <unk> .
gen - last : <unk>
gen - last : <unk>
parses the xml document and downgrades to a list of nodes .
downgrades through the dom tree to a string .
remove multiple <unk> elements from the document .
the main method .
gets the value of the <unk> property .
returns a list of all date patterns that are part of the date .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
create an instance of { @link project . layouts . layout . <unk> . <unk> }
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
reads the contents of an xml document from a stream .
prints the contents of the <unk> to console .
gets the value of the <unk> property .
/ * ( non - javadoc )
writes the lines of the given line to stdout .
returns the value at the given key or the default value if the parameter does not exist .
clear the heap .
returns a list of all the elements in the table .
sets the value of the specified property to the specified value .
gets the value of the <unk> property .
load a xml document from an xml file .
prints the example .
gets the value of the <unk> property .
load a xml document from an xml file .
prints icons to console
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gen - last : <unk>
/ * ( non - javadoc )
downgrades from a <unk> to a xml document .
remove child elements from xml document
downgrades through the dom tree to a string .
insert a new <unk>
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link apiexception } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link apiexception } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link biginteger } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link object } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link <unk> } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link byte [] } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link bigdecimal } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link priority } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
create an instance of { @link jaxbelement } { @code < } { @link string } { @code > }}
create an instance of { @link jaxbelement } { @code < } { @link boolean } { @code > }
example usage :
creates an instance of <unk> .
create <unk> <unk>
<p > creates a new wcheckboxselect . < / p >
the main method .
/ * ( non - javadoc )
/ * establish meta - data structures for metadata .
creates a product .
builds the result set .
creates a row for a query .
writes the given xml document to the console .
create a <unk> from a dom document .
load a xml document from an xml file .
/ * ( non - javadoc )
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
/ * ( non - javadoc )
downgrades through the dom tree to a string .
main method .
fetches a list of random numbers from the specified key .
write a { @link <unk> } to the given { @link outputstream } .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
convert a dom document to a dom document .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
the main method .
parses an xml configuration file .
{ @link <unk> ( inputstream ) }
converts a {
/ * ( non - javadoc )
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
creates an xml document from a dom document .
{ @inheritdoc }
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
investigates the version of the given version and checks if the version is greater than the current version .
/ * ( non - javadoc )
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
create a <unk> from a dom document .
closes the stream .
create a random record .
writes the command line arguments to the given file .
gets the value of the <unk> property .
gets the value of the <unk> property .
parses the given xml file and returns the assembly data .
prints the given csv file to the given file .
write this record to the output stream .
load records from a list of records .
replace line breaks in a string .
create a <unk> from a dom document .
create a <unk> from a dom document .
converts a string value to a float value .
parses a boolean value .
{ @link <unk> }
converts a string to a boolean .
parses an orientation value into an orientation value .
parse a { @link currencyunit } .
creates a new instance of { @link <unk> } .
converts a string to a float .
parses rooms from a string .
returns the type of the given {
serialize a boolean value to a string .
converts a string to a hexadecimal string representation .
<p > <unk> . < / p >
formats a date value .
sets the maximum value of a latitude / longitude pair .
parses the given { @link biginteger } into a { @link string } .
create a price from a { @link java . util . biginteger } .
prints a rooms value .
create a path value from a uri .
print the value to the power of an integer .
gets the value of the <unk> property .
removes all whitespace from the given node .
count the number of nodes in the document .
returns the number of nodes in the document .
returns the first child element of the given parent node .
creates a dom document .
parse the given xml string into a dom object .
construct a builder from an existing xml document string . the provided xml document will be parsed and an xmlbuilder object referencing the document s root element will be returned .
creates a dom document from a reader .
parse an xml document into a dom document .
parse an xml document into a dom object .
parse an xml document into an xml document .
construct a builder from an existing xml file .
parse an xml document into a dom object .
creates a new { @link xpathutils } instance .
creates a new { @link xpathutils } instance .
creates a new { @link org . xpath . xpath . <unk> } element for the given document .
returns the children of the given node .
set the content of the element .
/ * ( non - javadoc )
set the content of the element .
adds a cdata section to a dom element .
writes the xcal document to a file .
writes the template to the given file .
writes the xcal document to an output stream .
writes the xcal document to a writer .
writes the <unk> to the given document .
calls { @link <unk> ( com . xml . xml . dom . <unk> ) } and { @link <unk> ( com . itextpdf . text . pdf . <unk> ) }
writes the xml document to the output stream .
evaluate the xml document as a string .
create a new { @link <unk> } from a { @link document } .
gen - last : <unk>
/ * ( non - javadoc )
downgrades through the dom tree to a string .
/ * ( non - javadoc )
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
creates an empty document .
creates the property .
this method creates a picture from a <unk> .
dummy reply .
create video player element
runs random string function with arguments .
generates a random letters of the given length .
generates a random filename from a string .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
transfers the contents of the plugin configuration to a { @link document } object .
creates a dom document from xml string .
/ * ( non - javadoc )
gets the value of the <unk> property .
requests that the <code > <unk> / code > field be set to the specified value .
requests that the <code > <unk> / code > field be set to the specified value .
gen - last : <unk>
/ * ( non - javadoc )
write an xml document to a document .
adds soap response elements .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
the main method .
create a <unk> instance .
fetches a random person from the es store .
create a list of <unk> data data
create a list of projects
create a <unk> for a project .
create a list of projects
create a <unk> for <unk> city .
create an <unk> for the current user .
gen - last : <unk>
gen - last : <unk>
downgrades the xml document to a freemarker object .
/ * ( non - javadoc )
get the xml representation of a document .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
the main method .
creates a new <unk> object .
creates the <unk> data .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
requests that the <code > <unk> / code > property should be set to <code > true< / code > .
creates a new { @link <unk> } for the given { @link <unk> } .
reads the contents of an xml document from a stream .
converts a dom document to a console .
gets the value of the <unk> property .
gets the value of the <unk> property .
gen - last : <unk>
gen - last : <unk>
downgrades up to the given document at the given document at the given index .
remove all child elements from the document .
creates the archetype - list .
creates a new instance of { @link <unk> } .
/ * ( non - javadoc )
gets the value of the <unk> property .
gets the value of the <unk> property .
creates a dom document from a dom document .
/ * ( non - javadoc )
creates a new xml document from an xml document .
converts the contents of the uri to an object .
gets the value of the <unk> property .
create a <unk> from a dom document .
gets the value of the <unk> property .
gets the value of the <unk> property .
extracts the xml document from the given { @link inputstream } .
/ * ( non - javadoc )
gets the value of the <unk> property .
create a <unk> for a record
gets the value of the <unk> property .
gets the value of the <unk> property .
parse an xml document into a dom object .
create a document from a reader .
create a document from a reader .
create a document from a dom document .
creates a dom element .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
parses the xml configuration file .
{ @link <unk> ( inputstream ) }
prints the <unk> list to console .
prints the resource paths to console .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
extract the content of the given stream from the stream .
converts the given writer to a properties object .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
the main method .
creates a { @link <unk> } .
creates a new <unk> for <unk> .
writes a file to xml .
creates a new { @link <unk> } .
gen - last : <unk>
gen - last : <unk>
write a build at a given xpath .
downgrades up to the specified xpath .
downgrades up to the given url at the provided xpath .
remove unsupported language elements .
adds the new build elements to the xml document .
return a new instance of { @link <unk> } .
evaluate javascript .
creates a new xml document from a feed feed .
converts the {
gen - last : <unk>
downgrades up to the provided document at the provided document at the given index .
find persistence elements .
gets the value of the <unk> property .
returns the parameters of a document .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
gets the value of the <unk> property .
{ @inheritdoc }
creates a new client - side { @link <unk> } .
<p > creates a new <unk> . < / p >
create a new { @link <unk> } object with the given parameters .
return a server instance replication instance .
<unk> slave .
write a string to a stream .
sends the given content to the output stream .
<unk> - <unk>
returns true if the given class implements an interface .
gets the type arguments of a class .
returns the names of the fields in the given class .
returns a list of { @link field } s for the given class .
returns an array of {
<p > <unk> . < / p >
create a new instance of the given class .
create a new instance of the given class .
find method with given arguments .
<p > <unk> . < / p >
try to set a method on a class .
<p > <unk> . < / p >
returns all super classes of the given class .
gets the getter method .
compare two objects .
returns the class name of the given class .
returns the { @link charset } contained in the given { @link url } .
read text from a file .
unmarshals the given { @link source } into an { @link object } .
unmarshals the given { @link source } into an { @link xmleventreader } .
marshals the given { @link <unk> } into the provided { @link <unk> } .
marshals the given { @link <unk> } into the provided { @link <unk> } .
creates a key pair .
encrypt a string
decrypt the given string
生成用于非对称加密的公钥和私钥<br > 密钥对生成算法见：https : // docs . oracle . com / javase / 7 / docs / technotes / guides / security / standardnames . html#keypairgenerator
/ * ( non - javadoc )
returns true if the given exception is compatible with the given exception .
unzips a { @link file } to a { @link file } .
{ @inheritdoc }
/ * ------------------------------------------------------------
installs a map of properties .
adds a namespace uri prefix to the namespace .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the list of all classes in the typed array .
returns true if the given class is an array that implements the specified method .
parse a mime type into a { @link mediatype } .
parse the given comma - separated strings into a list of { @link mediatype } objects .
sorts the given list of {
create a new { @link charset } with the given input stream .
classify validation mode .
returns true if the given string has an open tag .
returns the start or end line of the given line .
consumes a line from a line .
count the number of comments in the comment .
get how many months between two date .
<unk> - mm - dd hh : mm : ss
<unk> - mm - dd hh : mm : ss
parse a date string .
returns the current date as a string .
returns a date / time string .
converts the given string to a date using the specified format .
<unk> - mm - dd hh : mm : ss
<unk> - mm - dd hh : mm : ss
parses a date string to a string .
converts a date to a string using the specified format .
converts the given string to a date using the specified format .
#func <unk> >
returns the date as a string .
returns a string representation of the given date .
<p > <unk> . < / p >
converts a date to a string .
<p > <unk> . < / p >
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> ( <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> )
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> ( <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> )
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> ( <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
checks if the given date is a leap year .
splits a string into a guid .
converts a date to a string
determines whether the specified <unk> is the same week with the specified <unk> .
test to see if two dates are in the same week
formats the given number of milliseconds to the week .
gets the week of the specified date .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> ( <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
@deprecated use { @link <unk> ( string ) } instead .
shuffles this matrix .
converts a date to a date time format .
initializes the logging logger .
initializes the logging configuration file .
/ * ( non - javadoc )
/ * ( non - javadoc )
adds the given iterator to the given iterator .
/ * ( non - javadoc )
get all inline images
submits mail to specified { @link <unk> }
set the super class .
adds an interface to the proxy .
/ * ( non - javadoc )
recursively remove all files in the given folder .
creates a {
create or create a new { @link <unk> } for the given { @link class } .
create a new { @link <unk> } object .
merge condition .
sets the code condition .
generates a random string from the given number of letters and length .
encodes a string into a string .
encrypt a password string .
/ * package
get all classes from the classpath .
get the list of all classes in the given classloader
get all classes in the given package .
get all classes in the specified package .
<unk> . <unk>
/ * ( non - javadoc )
initialize source output stream .
returns the output stream for the given stream .
creates a stream pumper to copy the given input stream to the given output stream .
creates a stream pumper to copy the given input stream to the given output stream .
print the stack trace of the stack trace to the given logger .
this method gets the singleton instance of this { @link <unk> } . <br > <b > attention : < / b > <br > please prefer dependency - injection instead of using this method .
add an option to the option .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
add a double option .
<p > <unk> . < / p >
<p > parse command line arguments . < / p >
/ * ( non - javadoc )
prints the stack trace of a throwable to a stack trace .
builds a human readable throwable for the given throwable .
crop the stack trace of the given call stack .
returns the full class name of the caller .
<unk> > <unk>
<p > <unk> . < / p >
returns a list of { @link field } s that are annotated with the given annotation .
returns a list of constants of the given class .
this is a utility method to compare two overlapping strings .
returns the hash code of an array .
init method .
<unk> > <unk>
reads the contents of a file into a string .
/ * ( non - javadoc )
/ * ( non - javadoc )
this method gets the singleton instance of this { @link <unk> } . <br > <b > attention : < / b > <br > please prefer dependency - injection instead of using this method .
<unk> analysis .
get the target proxy for a proxy .
compares the given { @link date } to the given { @link date } .
returns a string representation of the given date mapping .
sets the value .
returns a random { @link file } represented by this { @link <unk> } .
add a package to this classloader .
scans the classpath for classes .
find the extension of the given file .
download command from profile
<unk> > <unk>
loads a file from the specified file .
wait for the outbind request .
called when the access control is executed .
deserialize object .
calls the given method with the given parameters .
<p > invoke . < / p >
returns a json representation of the default { @link <unk> } .
returns a json representation of the default { @link <unk> } .
sets the specified calendar field to the specified value .
deletes a file never throwing an exception .
<unk> > <unk>
internal copy method .
merges the given { @link string } s into a { @link collection } of strings .
examines the properties annotated with {
this method creates a { @link typeinformation } for the given { @link property } .
this method processes the { @link <unk> } annotation for the given { @link <unk> } .
/ * ( non - javadoc )
creates a subclass of { @link <unk> } .
get the json encoding from the given {
returns true if the given method is an object method .
/ * ( non - javadoc )
/ * ( non - javadoc )
finds the system class for the given class name .
finds the constructor that matches the given arguments .
invokes the method on the target object .
get the difference between two methods .
returns a string representation of the given big - endian int .
convert a byte array to a hex string
gets the file type .
/ * ( non - javadoc )
deserializes the given byte array .
print a message to the console .
converts the given object to a string .
/ * <unk>
checks if the given string contains text .
runs the sign of the given uri and returns the result .
<p > <unk> . < / p >
gets a list of child elements by tag name .
parse a key - type element .
get the text value of a child element .
<p > <unk> . < / p >
gets the text value of the given node .
returns the default value for the given field name .
returns the node name of the given node .
returns whether or not the given node matches the desired names .
/ * find the first cell in the header .
paints the rows of the table .
removes null padding from a string .
append spaces to the string .
<p > converts an array of objects to a string . < / p >
<p > <unk> . < / p >
this method gets the singleton instance of this { @link <unk> } . <br > <b > attention : < / b > <br > please prefer dependency - injection instead of using this method .
checks if the string is empty .
<p > <unk> . < / p >
returns the longest common drawable representation of a list of objects .
set the {
appends a list of objects to the database .
设置一个header<br > <unk>
adds a parameter to the url .
converts a byte array to a short value .
returns the list of rdf annotation mapped paths .
{ @link <unk> ( object <unk> ) }
starts the finalizer thread .
tells whether or not the monitoring thread keep shutdown .
checks if the file size is less than the maximum size of the file .
create an { @link <unk> } from a file .
find all files that match the given suffix .
<p > <unk> . < / p >
<unk> > <unk>
/ * ( non - javadoc )
write a file to a file .
encode a byte array to a string .
cut a file .
reads the contents of an input stream into a byte array .
reads the contents of a file into a byte array .
writes a byte array to a file .
encode a byte array to a byte array .
write an object to a file .
/ * ( non - javadoc )
extracts the package name from the given part .
processes the import .
checks if the given class is annotated with { @link <unk> } .
converts a string to a set of strings .
/ * ( non - javadoc )
checks if the super class is a super - class .
normalize code .
parse annotations .
runs the <unk> process and returns the result .
retrieve the mobile city from a mobile column
generate random string .
<unk> <p > <unk> / p >
<unk> > <unk>
disables transformer .
gets the time in milliseconds from the current thread .
get the qualified name of the element .
adds a namespace declaration to the namespace .
/ * ( non - javadoc )
add the given callback to the list of callbacks .
/ * ( non - javadoc )
{ @inheritdoc }
<unk> > <unk>
calculate the md5 hash of a string .
this method parses the url of a method specification .
cut a directory path .
cut an extension .
returns the default file name for the given file .
this method gets the singleton instance of this { @link <unk> } . <br > <b > attention : < / b > <br > please prefer dependency - injection instead of using this method .
unpack int value from the input stream .
check if the given { @link <unk> } is equal to the given { @link <unk> } .
reads the contents of a file into a byte array .
returns a list of duplicate line breaks .
returns the formatted filesize as mb in bytes for the given file . <p >
encodes a byte array to <var > <unk> / var > pairs and returns the resulting byte array .
generates a random string .
returns a new byte array with the specified number of seconds .
generate compressed byte code for a boolean buffer .
/ * [ deutsch ] <p > ermittelt die <unk> <unk> ( <unk> ) . < / p >
parses the tree .
gets the related action ids .
get the list of childs
returns a copy of the list
return a list of all the files in this childs .
creates a new instance of { @link objectmapper } .
sets the { @link <unk> } to be used in the annotations .
registers a { @link <unk> } for the given { @link <unk> } .
registers the given { @code <unk> } to the given { @code <unk> } .
get a { @link list } of { @link class } s for the given { @link <unk> } .
compares two lists .
/ * ( non - javadoc )
create a set of objects from the given map .
add a message to the message digest .
<unk> ( <unk> )
decrypt data with aes .
add a class to the superclasses of the superclasses .
processes the given file .
creates a new { @link <unk> } for the given { @link plugin } .
returns true if text is rtl .
returns the background color for the given item .
normalize the values of the supplied values .
split the given color using the given colorizations .
sets the placeholder text .
get the length of the item in bytes .
normalize a path .
main method .
returns a copy of the <unk> .
<unk> <unk> <unk>
/ * ( non - javadoc )
executes a query string and returns list of results as a map .
returns an array of arguments for the given keyword .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
the main method .
loads a native library .
creates a new instance of the specified class .
adds the specified library to the instance .
stop the server .
stop the service .
configure logging .
/ * ( non - javadoc )
converts the given path to a string .
write the contents of the given file to json .
converts an inputstream to a json string .
converts an object to a json object .
converts a { @link map } of { @link string } s into a { @link jsonobject } .
gson invokes this call - back method during deserialization .
converts a set of properties to a map of strings .
convert this object to a json string .
sets the background color of the state .
sets the color state list .
apply the background hole to the canvas .
refresh the shadow radius
create a new builder for { @link <unk> }
creates a builder for {
find the revocation status of the certificate .
create a new builder .
executes the mojo .
process unused attributes .
process markdown files .
replaces all tokens in the text with the given text .
process the markdown extensions .
read the title from the given list of strings .
adds the title to the html file .
replace the variables in the given string .
/ * ------------------------------------------------------------
this method copies all the files from one directory to another .
creates a velocity context property .
checks if the given path is a valid root path .
build a new statusbar and add it to the statusbar .
apply <unk> up to the specified duration .
animates this container with the specified duration .
calculates the percentage of the percentage value .
adapts the size of the overlap
creates an intent that can be used to launch the activity .
launch the activity .
get <unk> call for <unk>
get the <unk> <unk> for an <unk> .
sets the timeouts of the http client to use .
set the date format for this instance .
/ * ( non - javadoc )
deserialize an object to an object .
download a file from the server .
invoke an api request .
gets the client .
create a new <unk> object .
updates an existing billing plan .
create a list of <unk> object .
get a list of <unk> objects .
<p > <unk> . < / p >
adds a { @link <unk> } to the builder .
sets the client credentials .
retrieves the list of alert recipients for a given file identifier and an identifier .
<p > <unk> . < / p >
retrieves the list of alert objects for the specified identifier and sharing a list of alert - specific alert types .
bind an object graph
this method adds the model to the <unk> graph .
merge a graph into a single graph
adds permissions to the graph .
writes permissions to the graph .
setter for <unk> filters
blocking shutdown .
/ * ( non - javadoc )
adds a string to the graph .
create a { @link <unk> } .
install a resource extension .
<unk> > <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the field name .
{ @inheritdoc }
returns the list of all the acl holders in the workspace .
/ * ( non - javadoc )
set the number of threads in this device
resizes the current container with the specified width and height .
apply a rotation to the bibliography
sets the gravity of the membership .
pause the pause action .
{ @link <unk> }
draws the specified text at the specified offset .
loads a file from a specific file .
adds the specified rule to this bucket .
sets the quality fingerprint .
add a histogram to start up time .
/ * ( non - javadoc )
shortcut for {
<p > <unk> . < / p >
extract the bean properties from the given bean .
parse a time unit string .
returns the properties of the given bean object .
create a directory for a directory .
execute a { @link <unk> } .
register a { @link <unk> } .
adds the given file to the classpath .
creates a list of actions .
set the current slide index .
execute workers .
determine if the target location is included .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * package
this method is called from within the constructor to initialize the drop target .
returns a boolean indicating whether or not the <unk> is drag .
execute the task .
sorts a list of { @link rectangle } s into a { @link list } of { @link rectangle } s .
interprets the datastream as a bookmark .
loads a { @link <unk> } from a { @link properties } .
render the given template as a string .
create a unique filename for a slide .
creates and returns a boolean listener for the given mouse event .
<p > <unk> . < / p >
{ @inheritdoc }
{ @inheritdoc }
get assertion executor builder .
gets the executor consumer builder .
wraps <code > <unk> / code > and wraps <code > <unk> / code > in <code > <unk> / code > .
<p > <unk> . < / p >
poll the sqs queue and return the sqs queue .
/ * ( non - javadoc )
<p > <unk> . < / p >
get the manifest version from the manifest .
execute a static method with the given name and method name .
execute a named static method .
gets the compiler .
execute a static method .
loads a resource from the file system .
loads the native library .
find the dimensions of a file .
copy the given file to a file .
tries to find the file with the given name .
returns the temporary directory as a temporary directory .
log an array of logs .
----- private methods -----
creates a new { @link treemap } from the given parameters .
creates a new instance of { @link <unk> } .
<p > trace . < / p >
log a message at the trace level .
log a message at the trace level .
log a message at the trace level .
log a data event .
log a message .
log a message .
log a debug log message .
log a message at the debug level .
log a message at the debug level .
log a message at the debug level .
log a data event .
log a localized message at the specified level .
log a debug message .
clears the log .
log a message at the info level .
log a message at the info level .
log a message at the info level .
log a info message .
log a info message .
print the help for <code > options< / code > with the specified condition .
log a info message .
log a warning message .
log a message at the warn level .
log a message at the warn level .
log a message at the warn level .
sends a warn message to the remote endpoint .
log a data message .
log a warn message .
log a warning message .
initializes the log .
log a message at the error level .
log a message at the error level .
/ * ( non - javadoc )
log an error message .
log a localized message .
log a message .
log a message .
log exception .
/ * ( non - javadoc )
/ * package
<p > removes the occurrences of the specified element from the specified array . < / p >
<p > removes the occurrences of the specified element from the specified array . < / p >
returns the first { @code key } in the { @code array } .
returns an array of { @link java . lang . long } if the provided array is empty .
serialize a { @link <unk> } to a json string .
serialize a logging event to a json string .
adds a message to the context .
/ * ( non - javadoc )
end a logging json event .
end <unk> .
write a resulset to a jsongenerator .
write a throwable to a { @link <unk> } .
serialize a throwable to a { @link <unk> } .
creates the context for the { @link <unk> } instances .
checks if the given object is an instance of the given class .
gets the logger .
gets a logger instance .
get a logger .
returns a contextual logger .
returns a { @code <unk> } logger with the specified { @code duration } .
initialize a @ { @link <unk> } .
initialize a @ { @link squigglypropertyfilter } with a specific property filter .
creates a context map .
encodes a logging event .
check if the passed marker is part of the marker interface .
removes the shape from the json array .
removes the given marker from the map of markers .
removes the shape from the shape if it exists .
/ * ( non - javadoc )
check if the passed marker is a json marker .
removes a shape from the list of markers .
/ * ( non - javadoc )
serialize an event to a json string .
build a string representation of the given logrecord .
convert an array of objects to a string .
create a new { @link <unk> } .
/ * package
/ * ( non - javadoc )
returns the formatted message .
method that can be called to ask implementation to serialize values of type {
serialize acl .
returns the caller data for the caller .
serialize a list of objects to a json string .
serialize a { @link <unk> } to a { @link string } .
create a {
{ @link <unk> ( string object ... ) }
encodes the given value to the given encoder .
append the throwable to the stringbuilder .
encodes a map of {
serializes the given { @link object } into a { @link <unk> } .
encodes the given list of strings .
calls { @link <unk> ( java . util . map ) } with the given { @link <unk> } .
/ * ( non - javadoc )
{ @inheritdoc }
create a database
checks if the given position is valid .
convenience method to install the <unk> .
counts the number of items in the table .
<p > initialize . < / p >
register a { @link <unk> } with the given { @link fallback } .
registers a custom serializer for the given type .
create a save column from a cell .
<p > send . < / p >
<p > <unk> . < / p >
creates a string representation of the given string .
<unk> <unk> <unk>
get save attr .
gets the column index from a file .
<unk> { @link <unk> } <unk>
<unk> <unk> <unk>
set save cell values
<unk> <p > <unk> / p >
set the markdown attributes of the given row .
<unk> <p > <unk> { @link <unk> } <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
----- protected methods -----
<p class = changed_added_2_0 > set the value of the <code > <unk> / code > property . < / p >
waits for a number to be dollar .
<p class = changed_added_2_0 > return a <code > string< / code > value for the specified component . < / p >
serialize this object .
<unk> > <unk>
puts { @code attributes } into { @code <unk> } .
获取 { @link <unk> }
/ * returns the excel wrapper wrapper .
returns a formula with the given factory .
set the maximum number of column counts .
loads a web sheet .
<unk> <p > <unk> / p >
called when a tab is changed .
closes the stage .
gets the byte array .
/ * ( non - javadoc )
runs validation .
/ * ( non - javadoc )
returns the index of the index . <p >
/ * ------------------------------------------------------------
<p class = changed_added_2_0 > return a <code > java . util . date< / code > instance using the specified <code > value< / code > as a <code > java . util . date< / code > . < / p >
<p > <unk> . < / p >
gets the locale .
get the name of the dart controller .
<p > create a new { @link <unk> } . < / p >
<p > get <unk> s <unk> . < / p >
gets the validation handler .
returns the singleton instance of { @link <unk> } .
splits a list of <unk> into a list of <unk> .
<p > <unk> . < / p >
/ * recursive
<p > <unk> . < / p >
/ * <unk>
get the rows from the left and right rows .
build a list of <unk> from a list of <unk> .
this function <unk>
run the algorithm
builds the table .
build table .
<p > <unk> . < / p >
gen - last : <unk>
convert a <unk> to a link .
/ * ( non - javadoc )
open a stream view of a layer .
gets the { @link <unk> } from the { @link <unk> } { @link <unk> } .
/ * ( non - javadoc )
gen - last : <unk>
extracts the {
update the automatic tint based on the specified index .
<unk> the <unk>
gets the path from the specified theme .
internal implementation of <unk>
gen - last : <unk>
find the component name for the given component .
/ * ( non - javadoc )
search for a method in the given object .
/ * ( non - javadoc )
gets the value of an object property .
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
获取 { @link <unk> }
returns the parsed value of the <unk> cell .
gen - last : <unk>
******************** methods *******************************************
gen - last : <unk>
creates a trend chart .
creates a <unk> .
creates a chart .
creates a chart .
creates the style
defines the <unk> for the chart .
******************** initialization ************************************
gen - last : <unk>
starts the {
create a chart id from a <unk> .
init the {
initialise the chart .
/ * ( non - javadoc )
get the full name of a sheet .
{ @link <unk> }
@param cell @param <unk> @param <unk> @param <unk>
invokes { @link <unk> ( <unk> ) } with the given { @link <unk> } and { @link <unk> } .
create a table mapping by full name .
returns the value of the sub - column values in the given map .
change the length of the upper - case .
<unk> ( <unk> )
sets the full name of a hidden column in a hidden column .
get the number of rows in a hidden column .
set the number of cells in a hidden column .
create a list of parent rows from an array of properties .
<unk> > <unk>
find the element at the specified index in the given collection .
build config range .
<unk> <unk> <unk>
<unk> <unk> <unk>
removes modifier from full name .
get the end of the string .
<unk> <unk> <unk>
<p > <unk> . < / p >
<unk> <p > <unk> / p >
converts a { @link <unk> } to a { @link <unk> } .
/ * ( non - javadoc )
remove all the other sheets from the sheet .
<unk> <unk> <unk>
builds the form from sheet .
<unk> <p > <unk> / p >
<p > <unk> . < / p >
check if the last row of the cell is a last cell .
<unk> <p > <unk> / p >
builds a list of fragments from a sheet .
builds the sheet config map from a sheet .
load the command children .
calculates the parent nodes of a child command
returns true if the command can be processed .
get the command config form a command line .
decode the filters and add them to the sheet .
copy the name of the <unk>
<p > <unk> . < / p >
process a line of text .
/ * ( non - javadoc )
moves the given comment to a new map .
run the command .
build a map of attribute names and values .
get sheet configuration from config .
sets the footer of the sheet .
sets the body of the sheet .
sets the header of the sheet .
adds a row .
delete a row .
remove the list of classes from the navigablemap .
find the full name of a sheet .
<p > <unk> . < / p >
/ * ( non - javadoc )
deletes the story from the context .
prepare collection data in context .
copy attributes from a dom element .
check if a row is allowed to be added to the dataset .
<unk> <p > function : <unk> / p > <p > description : < / p >
creates a column from a cell .
evaluate the normal cells for the cells .
evaluates the given cell for a given cell .
returns true if the string ends with the user specified suffix .
evaluate the value .
<p > <unk> . < / p >
execute groovy expression .
<unk> > <unk>
<unk> <p > <unk>
remove a row from a sheet .
moves the rows from the body to the specified appender .
creates a picture from a <unk> .
creates a map view of the specified { @link javax . faces . context . <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> { @link <unk> } <unk>
returns the cell value of the given cell .
<unk> { @link <unk> } <unk>
<unk> > <unk>
<unk> <unk> <unk>
<unk> <p > <unk> / p >
<unk> <p > <unk> / p >
sets the value of the cell .
get the numeric value of a cell .
package private for testability
copy a row from source sheet to another sheet
copy a row from a sheet to another sheet .
copy a cell row to another sheet .
copy a cell to another cell
copy a cell to another cell
copy a row to another sheet
creates and returns a copy of the { @link <unk> } .
<unk> <unk> <unk>
match the <unk> from the specified cell .
get the <unk> from the <unk>
get the {
<unk> > <unk>
<unk> <unk> <unk>
returns the index of the cell at the given index .
<unk> a1 <unk>
<unk> <unk> <unk>
/ * ( non - javadoc )
get the row matrix from the component attributes .
get init - value from config .
{ @link <unk> ( int int ) }
/ * ( non - javadoc )
<unk> { @link <unk> } <unk>
{ @link <unk> } <unk>
<unk> { @link <unk> } <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link <unk> }
{ @inheritdoc }
serialize this object .
<p > <unk> . < / p >
<p > removes the given row from the serial row / serial device . < / p >
add a row to the list .
recovers the row .
******************** private methods ***********************************
convert a stroke to a stroke
build a chart chart
******************** initialization ************************************
extract generation from disk .
/ * <unk>
returns the id of the given node .
converts a list of { @link <unk> } into a { @link <unk> } .
save the state of the <tt > <unk> / tt > instance to a stream ( i . e . serialize it ) .
removes all useless nodes from the map .
/ * ( non - javadoc )
this method builds the range of objects for the given request .
save data in context .
re - evaluate the formulas .
returns the cell with the given cell and column index .
set the merging of a cell to the cell .
documentation inherited from interface
removes all data from the data context .
parses and returns a { @link collection } of { @link <unk> } .
returns true if the name of the <code > <unk> / code > parameter is a <code > <unk> / code > .
start the restore data .
<unk> > <unk>
<p > setter for <unk> . < / p >
<p > setter for <unk> . < / p >
<unk> . <unk>
infers the cast types from the given predicate .
builds a cells object .
invokes the { @link <unk> } with the given { @link <unk> } and { @link <unk> } .
recovers the spider command .
serialize this object to the given stream .
reconstitute the <tt > <unk> / tt > instance from the specified stream .
gets the category list .
build a list of { @link chart } objects .
parses a { @link <unk> } object into a { @link chart } .
/ * ( non - javadoc )
transform a list of datapoint type list into a corresponding datapoint type .
sets the additional properties map .
recovers the <unk> from the given sheet .
<unk> { @link <unk> } <unk>
<unk> an sheet in <unk>
<unk> : <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the anchor size for the specified cell .
adds a cell to a cell .
invokes the given { @link <unk> } with the given { @link <unk> } and { @link <unk> } .
returns the value of the cell s value changed .
returns { @code true } if the { @code <unk> } is { @code null } .
returns the pattern .
/ * ( non - javadoc )
get the name of the dart image .
write this object to the given stream .
<p > <unk> . < / p >
<p > <unk> . < / p >
{ @link <unk> }
{ @link <unk> }
returns the html representation of the cell . <p >
<unk> { @link <unk> } <unk>
returns the cell position for the given cell .
/ * <unk> ( cell )
applies the vertical alignment to the cell .
calculates the total number of columns in the specified sheet .
calculates the total height of a sheet .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the numeric value of the cell .
sets the decimal format string for the specified cell .
sets the format string for the given cell .
sets the format string for the given cell .
<p > <unk> . < / p >
/ * ( non - javadoc )
<p > get . < / p >
normalize a resource path .
<p > main . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > get the value of the <code > <unk> / code > property . < / p >
get a concatenated string from all elements of the given array separated by the specified separator .
rounds a double value to the given number of decimals .
returns the tab type of the active tab .
disables the style of a tab . <p >
sets the default date format string .
returns the decimal separator for the specified decimal format .
process <unk> .
sets the value of the <unk> property .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
builds the { @link <unk> } for the given { @link <unk> } .
add a path to the watched list .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
checks if the given string is a punctuation character .
checks if the given string is a valid integer .
returns true if the given string is a quoted string .
returns true if the given string is a quoted string .
returns true if the given string is a quoted string .
parses the given { @code <unk> } and { @code <unk> } .
<unk> > <unk>
overridden to add a new column .
start snippet : <unk>
<p > <unk> . < / p >
converts the given string to a map of { @link string } s .
parse a list of { @link <unk> } s .
parse a list of attributes
extract the validation attributes from the attributes file .
/ * public void <unk> ( string attribute ) ;
parse the special attributes from the given { @link <unk> } .
----- private methods -----
returns the <unk> for the given key
gather a special attribute value for a given attribute value .
return a new list of comment objects .
find the first non - lowercase dataset position within the given string .
replace all occurrences of a word in the input string with the replace word .
replies the name of the column .
<unk> <p > <unk> / p >
<unk> <unk> <unk>
gets the sheet name from full cell name .
removes modifier from full cell name .
convert a column to an integer .
<unk> > <unk>
returns the width of the specified column in units of the specified range .
<unk> - <unk>
returns the height of the image in pixels .
<p > <unk> . < / p >
returns the metric to redirect to .
<p > checks if the given string is a valid numeric value . < / p >
determines whether or not the character should be relative or not .
/ * ( non - javadoc )
remove a cell from the given cell .
checks if the given { @code <unk> } intersects the given { @code <unk> } .
gen - last : <unk>
clear the hidden columns of the specified sheet .
delete the hidden columns from the row .
<unk> <p > <unk> / p >
gets the row range from a specific dimension .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * <unk> ( <unk> )
<unk> method .
<unk> ( <unk> ) <unk>
creates the error message from the given row .
{ @link <unk> } <unk>
----- private methods -----
<p > <unk> . < / p >
<! -- begin - user - doc -- > <! -- end - user - doc -- >
/ * ( non - javadoc )
/ * check if the row has been editable
<p class = changed_added_2_0 > if the <code > <unk> / code > is set to <code > true< / code > then this method will return <code > null< / code > . < / p >
refresh the transient cells of the specified component .
update child cells in the row .
<p class = changed_added_2_0 > <span class = changed_modified_2_2 > <unk> / span > the value of the <code > <unk> / code > property in the <code > <unk> / code > property . < / p >
tries to restore the historyreference with the given name .
clear the tree .
load header rows .
adds a line of configuration to the child table .
/ * fill the list with overlapping columns
<unk> <unk> <unk>
get the percentage of the score value
<unk> - <unk>
build the {
clears the jobcontext of the {
loads a single workbook from an input stream .
/ * ( non - javadoc )
initializes the {
load the report data .
refreshes the report data .
refresh data for a row .
method to refresh the data context
returns the index of the tab with the given name .
loads the form sheet name .
package - private
sets the page id of the component .
invoke the { @link methodexpression } of the { @link <unk> } .
<unk> <p > <unk> / p >
update the name of the <unk>
build cell body row .
/ * ( non - javadoc )
/ * <unk>
creates the dynamic columns .
add a repeat row to the sheet
refresh body rows
sets the status of the http basic request .
returns a boolean indicating whether the given resource is sufficiently <unk>
recovers the row .
parses the input string and returns the parsed event .
parses a single multipart event .
/ * ( non - javadoc )
returns true if the option is compatible with the given option .
/ * <unk>
/ * ( non - javadoc )
handles the next interceptor .
adds the given { @code completion } to the given { @code graph } .
create an { @link <unk> } for the given { @link macro } .
creates a new macros in this context .
binds the given value to the given value .
returns the upper bounds of this type .
returns an array containing all of the elements in the given array .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
returns true if the given class is a public nullary constructor .
<p > process a member of <unk> . < / p >
instantiate a constructor .
returns true if two strings are equal .
returns the enum value for the given switch value .
returns the parent of the given path .
returns a new instance of the given { @code type } .
writes the given { @link inputstream } to the given { @link outputstream } .
writes the given value to the writer .
write a single character .
gets the width and height of the grid view .
/ * ( non - javadoc )
/ * ( non - javadoc )
start the <unk> tag .
adds binary content to the file .
helper method for adding binary content .
helper method for adding a bitmap to the server .
create a new file descriptor for the given file name .
<p > <unk> . < / p >
add a header to the request .
clears the current response .
call the {
call the {
binds the custom tabs to the custom tabs .
unbind the {
/ * ( non - javadoc )
register content .
add a url to the image request .
add a url to the image request .
builds the .
reads the contents of a { @link inputstream } into a { @link string } .
parse the given { @link inputstream } to a { @link string } .
copy the contents of the { @link inputstream } to the given { @link outputstream } .
reads a stream from the input stream .
returns an input stream for the given url .
returns an input stream for the given input stream .
sets the name of the bean .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
resets the stringreader .
/ * ( non - javadoc )
copy the contents of the given input stream to the output stream .
writes a disposition header to the output stream .
/ * ( non - javadoc )
start creation of transfer .
/ * ------------------------------------------------------------
copies the contents of the given input stream to the output stream .
send the <unk> to the deroutputstream .
/ * ( non - javadoc )
{ @link <unk> ( string ) }
get the entropy of a mnemonic .
parses a query string .
sends the not modified response .
sets the date header .
sets the date and cache headers .
sets the content type header for the response .
closes the given channel .
/ * ( non - javadoc )
/ * ( non - javadoc )
installs the given channel .
creates a copy of the given file .
gets the cache entry .
/ * ( non - javadoc )
creates and returns a bitmap with the specified background color .
creates new instance of { @link sslcontext } .
<p > <unk> . < / p >
sets the scale type .
sets the temporary scale type .
start listening for a given context
/ * ( non - javadoc )
build a { @link pendingintent } that will be sent to the { @link com . google . android . app . activity }
open the http connection .
start the service .
unbind the {
notifies the listeners about the content of the view .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
waits for the outbind to complete .
adds the specified tag to the imageview .
removes the specified { @link <unk> } from the list of { @link <unk> } .
/ * <unk>
binds the specified { @link <unk> } to the specified consumer .
equivalent to calling textview . settext
sets the error text .
hides the soft keyboard from the textview .
show soft focus
toggles the soft keyboard from the textview .
convert the <unk> to pixels based on density scale .
find a view by its id .
find a view by its id .
/ * ( non - javadoc )
/ * ( non - javadoc )
adjusts the user s limit .
resets the user offset and resets the user to the beginning of the stream .
/ * ------------------------------------------------------------
clears the cache from the cache .
get the image from the tag .
cancels the image loading .
creates a new user - defined { @link imageview } .
sets the image to be displayed .
updates the image bounds .
loads the image loader from the configuration .
loads a bitmap from the cache .
gets the model type .
release the given buffer .
http put method .
extracts the connection properties from the given { @link context } .
add a parameter to the request .
connect to the server .
gets the md5 hash of a string .
checks to see if sharing of the given { @link activity } is already open .
<unk> > <unk>
returns the string identifying the given <unk>
returns the string identifying the given constant
checks the given result to see if it is enabled .
computes the q product of a sparse matrix stored in csr notation .
description : this routine converts a sparse matrix in csr storage format to a sparse vector x .
generate unitary matrix q .
generate unitary matrix q .
computes the q product of a given value .
computes the <unk> product of a given value .
generate unitary matrix q .
generate unitary matrix q .
computes the description of a vector x and a dense vector y .
computes the description of a vector x and a dense vector y .
computes the description of a vector x and a dense vector y .
computes the description of a vector x and a dense vector y .
computes the dot product of a sparse vector x .
description : this routine converts a sparse matrix in csr storage format to a sparse vector x .
description : this routine converts a sparse matrix in csr storage format to a sparse vector x .
description : this routine converts a sparse matrix in csr storage format to a sparse vector x .
description : this routine converts a sparse matrix in csr storage format to a sparse vector x .
description : this routine converts a sparse matrix in csr storage format to a sparse vector x .
computes the description of a vector x and a dense vector y .
computes the description of a vector x and a dense vector y .
computes the description of a vector x and a dense vector y .
computes the description of a vector x and a dense vector y .
computes the description of a vector x and a dense vector y .
computes the description of a vector x and a dense vector y .
computes the description of a vector x and a dense vector y .
computes the description of a vector x and a dense vector y .
computes the description of a vector x and a dense vector y .
computes the description of a vector x and a dense vector y .
computes the description of a vector x and a dense vector y .
computes the description of a vector x and a dense vector y .
description : this routine converts a sparse matrix in csr storage format to a sparse vector x .
description : this routine converts a sparse matrix in csr storage format to a sparse vector x .
description : this routine converts a sparse matrix in csr storage format to a sparse vector x .
description : this routine converts a sparse matrix in csr storage format to a sparse vector x .
description : this routine converts a sparse matrix in csr storage format to a sparse vector x .
description : this routine converts a sparse matrix in csr storage format to a sparse vector x .
description : this routine converts a sparse matrix in csr storage format to a sparse vector x .
description : this routine converts a sparse matrix in csr storage format to a sparse vector x .
description : this routine converts a sparse matrix in csr storage format to a sparse vector x .
description : this routine converts a sparse matrix in csr storage format to a sparse vector x .
description : this routine converts a sparse matrix in csr storage format to a sparse vector x .
description : this routine converts a sparse matrix in csr storage format to a sparse vector x .
<pre > description : solution of tridiagonal linear system . < / pre >
<pre > description : solution of tridiagonal linear system . < / pre >
description : this routine converts a sparse matrix in csr storage format to a dense vector .
this method will throw an exception if the given result is not an error .
create a sparse matrix from a sparse matrix .
computes the vector of a vector from a given image .
computes the label of a vector
get a cursor based on the rows of the given image .
calculates the <unk> matrix for a matrix .
converts a buffered vector to a vector of bytes .
computes the packed {
create a new matrix from a byte array
calculates the <unk> matrix for a matrix .
computes the q product of a and b .
write a segment to the segment .
computes the q product of a and b .
/ * [ deutsch ] <p > <unk> die angegebene segment l . < / p >
computes the euclidean norm of a double .
computes the euclidean norm of a double .
computes the euclidean norm of a double .
description : this routine converts a sparse matrix in csr storage format to a sparse matrix in csr storage format .
computes the q product of this matrix by a double
computes the q product of two points .
computes the euclidean norm of a double .
computes the eigenvalue decomposition of the specified general matrix by a scalar .
cusolverrf extraction :
computes the product of a vector by a scalar .
computes the q product of this matrix by a double
adds a scalar to a sparse vector x and a dense vector y .
computes the q product of this matrix by a double
computes the q product of this matrix by a double
computes the q product of this matrix by a scalar
cusolverrf - batch flow
computes the q product of a and b .
computes the q product of a and b .
computes the product of a double vector by a scalar .
computes the q product of this matrix by a double
computes the q product of this matrix by a double
computes the q product of the two matrices .
computes the q product of the two matrices .
computes the euclidean norm of a double .
computes the euclidean norm of a double .
computes the euclidean norm of a double .
computes the euclidean norm of a double .
adds a scalar to a sparse vector x and a dense vector y = alpha * a * x + a * x + y + a * x + beta * y where x is a sparse matrix .
computes the sum of q .
computes the sum of q .
computes the product dn of a vector by a scalar
computes the product of a double vector by a double
computes the euclidean norm of a double .
inverse of <unk>
computes the eigenvalue decomposition of the specified general matrix by a scalar .
computes the q product of a and b .
computes the euclidean norm of a double .
computes the euclidean norm of a double .
computes the euclidean norm of a double .
description : this routine converts a sparse matrix in csr storage format to a dense vector .
description : this routine converts a sparse matrix in csr storage format to a dense vector .
description : this routine converts a sparse matrix in csr storage format to a dense vector .
description : this routine converts a sparse matrix in csr storage format to a dense vector .
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
computes the eigenvalue decomposition of the given matrix
computes the eigenvalue decomposition of the given matrix
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
computes the eigenvalue decomposition of the given matrix
computes the eigenvalue decomposition of the given matrix
compute q and c
compute q and c
computes q ** t * c
computes q ** t * c
compute q and c
compute q and c
compute q and c
description : this routine converts a sparse matrix in csr storage format to a dense vector .
compute q and c
compute q and c
description : this routine converts a sparse matrix in csr storage format to a dense matrix and a dense vector .
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
description : this routine converts a sparse matrix in csr storage format to a dense vector .
computes q ** t * c
computes q ** t * c
description : this routine converts a sparse matrix in csr storage format to a dense vector .
description : this routine converts a sparse matrix in csr storage format to a dense vector .
description : this routine converts a sparse matrix in csr storage format to a dense matrix and a dense vector .
description : this routine converts a sparse matrix in csr storage format to a dense vector .
compute q and c
compute q and c
computes q ** t * c
compute q and c
compute q and c
computes q ** t * c
description : this routine converts a sparse matrix in csr storage format to a dense vector .
description : this routine converts a sparse matrix in csr storage format to a dense vector .
computes the eigenvalue decomposition of the given matrix
computes the eigenvalue decomposition of the given matrix
computes the eigenvalue decomposition of a sparse matrix and a dense solver .
computes the eigenvalue decomposition of the given matrix
description : this routine converts a sparse matrix in general block - csr storage format to a sparse matrix in general block - csr .
compute q and c
compute q and c
description : this routine converts a sparse matrix in a block - csr storage format to a symmetric matrix .
compute q and c
compute q and c
description : this routine converts a sparse matrix in general block - csr storage format to a sparse matrix in csr storage format .
compute q and c
compute q and c
compute q and c
compute q and c
description : this routine converts a sparse matrix in a block - csr storage format to a symmetric matrix .
description : this routine converts a sparse matrix in a block - csr storage format to a symmetric matrix .
compute q and c
compute q and c
computes the euclidean norm of a double .
description : this routine converts a sparse matrix in csr storage format to a sparse matrix in csr storage format .
computes the q product of this matrix by a double
computes the q product of two points .
computes the euclidean norm of a double .
computes the eigenvalue decomposition of the specified general matrix by a scalar .
cusolverrf extraction :
computes the product of a double vector by a double
computes the q product of this matrix by a double
computes the euclidean norm of a double .
computes the euclidean norm of a double .
description : this routine converts a sparse matrix in csr storage format to a dense vector .
description : this routine converts a sparse matrix in csr storage format to a dense vector .
computes the eigenvalue decomposition of the given matrix
computes the eigenvalue decomposition of the given matrix
computes the eigenvalue decomposition of the given matrix
computes the eigenvalue decomposition of the given matrix
compute q and c
compute q and c
compute q and c
computes q ** t * c
computes q ** t * c
compute q and c
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
description : this routine converts a sparse matrix in csr storage format to a dense vector .
description : this routine converts a sparse matrix in csr storage format to a dense matrix .
compute q and c
compute q and c
compute q and c
compute q and c
description : this routine converts a sparse matrix in general block - csr storage format to a symmetric matrix .
compute q and c
description : matrix - a * x = alpha * op ( a ) * c
description : this routine converts a sparse matrix in general block - csr storage format to a sparse matrix in a block - csr .
description : this routine converts a sparse matrix in general block - csr storage format to a symmetric matrix .
computes the eigenvalue decomposition of the given matrix
computes the eigenvalue decomposition of the given matrix
computes the eigenvalue decomposition of a sparse matrix and a dense matrix
computes the eigenvalue decomposition of the given matrix
description : this routine converts a sparse matrix in general block - csr storage format to a sparse matrix in a block - csr .
description : this routine converts a sparse matrix in general block - csr storage format to a sparse matrix in general block - csr .
compute q and c
description : this routine converts a sparse matrix in csr storage format to a dense vector .
description : this routine converts a sparse matrix in csr storage format to a dense vector .
compute q and c
description : this routine converts a sparse matrix in general block - csr storage format to a symmetric matrix .
compute q and c
description : this routine converts a sparse matrix in csr storage format to a dense vector .
<p > <unk> . < / p >
<unk> <unk> <unk>
adds a <unk> .
reset the retry count
/ * ( non - javadoc )
run the algorithm
returns <code > true< / code > if the specified character is <code > null< / code > or empty .
find the tokens in the given chunk .
gets the tokens for the given chunk .
tokenize the given <unk> and return a list of <unk> .
prints the description of a thread .
/ * ( non - javadoc )
verify that the attribute value is a dynamic attribute value .
returns a string representation of the attribute with the given separator .
/ * package
sets the value of a dynamic attribute .
translate a glob to a string .
creates a new instance of the {
encode a string
escapes all the characters in the given collection .
<unk> > <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
this method returns a { @link com . <unk> . <unk> . api . metrics . <unk> } from the request .
get query history from replicator .
create a list of { @link datastore } from a { @link jsonobject } .
parses json string .
process metric data .
initialize connection config
/ * ( non - javadoc )
/ * ( non - javadoc )
one of ways of creating a document . < / p >
unmarshals a <unk> .
factory method to create a new { @link <unk> } .
convert a list of document objects from the database .
convert the <unk> to a list of <unk> .
unmarshals <unk> from <unk> .
create a unique identifier for a column .
get the value of the { @link <unk> } for the passed constraint .
get a list of <code > <unk> / code > elements that are contained in the passed node .
get all columns of a column .
get a list of { @link java . util . list } elements .
/ * ( non - javadoc )
get a column from a set of columns .
get all tokens contained in the passed node list .
get the intersection of the given column set .
add a collection to a target set .
remove all functions with the same id .
remove all functions with the same name .
create a short name from the passed source value .
get the name of the passed source value .
create a css value from the passed string .
create a { @link <unk> } for the passed column .
create a new column with a document type .
create a digest auth key .
sets the content of the { @link <unk> } to be skipped .
add a media column at the specified index .
<p > <unk> . < / p >
unmarshals a set of <unk> documents .
unmarshals a <unk> .
convert a list of { @link document } into a { @link <unk> } .
convert the <unk> to a configuration object .
convert the <unk> to a writer .
creates and returns a { @link <unk> } for the given { @link <unk> } .
creates and returns a new { @link <unk> } for the given { @link <unk> } .
creates and returns a { @link <unk> } for the given { @link <unk> } .
creates and returns a { @link <unk> } from the given { @link <unk> } .
creates and returns a new <code > <unk> / code > instance with the given <code > <unk> / code > .
creates and returns a { @link <unk> } from the given { @link <unk> } .
gets the last value from the response .
send the given log event to the server .
sets the {
sets the { @link <unk> } .
creates a new { @link <unk> } .
gets the log level .
/ * ( non - javadoc )
asynchronously requests the connection to the broker .
/ * package
executes a { @link <unk> } and returns a { @link future } instance that can be used to execute the { @link <unk> } .
sets the maximum size of the application if the app version is changed .
send a listener to the state machine .
sends a { @link com . <unk> . sdk . api . analytics . analytics . analytics . analytics . analytics . analytics . analytics . <unk> } to sending events to the { @link com . <unk> . sdk . api . <unk> . <unk> } .
tells whether or not {
log a log message .
prepends the given metadata to the given string .
appends the stack trace to the specified {
helper method to fetch a json object from a table .
appends a stack trace of a throwable to <unk> .
captures the specified { @link jsonobject } into a { @link file } .
initializes the {
/ * ( non - javadoc )
updates the location of the request sent by the bookkeeper webhook .
----- private methods -----
dumps the contents of a log file to the log .
<unk> > <unk>
set up the location map .
sets the maximum number of entries in the specified region .
tests if the node size of the tree is partitioned .
/ * ------------------------------------------------------------
returns the { @link org . openqa . selenium . by java . util . string } of the given { @link org . openqa . selenium . html } .
returns a list of the locators that match the locator .
/ * package
/ * ( non - javadoc )
returns the parameters of the given { @link <unk> } .
reads a single snapshot record .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
multiply the values in the vector since the last element in the vector .
{ @link <unk> }
/ * <unk>
compute statistics for the stats .
returns true if the given class is a <unk> type .
attempt to construct a jmx bean from the given server - side { @link org . apache . hadoop . bean . <unk> . <unk> } .
get the pool id for the given configuration .
get the pool configuration for the given { @link <unk> } .
returns a list of { @link shards } under the specified region .
list all the regions in a region .
{ @link <unk> } <unk>
/ * package private
loads the region objectname from jmx and returns it .
unregister a previously registered cache object .
/ * package
<unk> <unk> <unk>
returns a list of all the registered metrics for a given jmx object .
/ * package
runs the example .
{ @link <unk> ( object ) }
create a new { @link collection } of { @link java . util . concurrent . <unk> } objects .
deserializes a collection of objects into a single collection .
/ * ( non - javadoc )
/ * ( non - javadoc )
if exist .
if exist .
update async consumer events .
update async consumer events .
dump information about the config object .
delete a specific region .
register the endpoint based on the config .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an array of {
/ * ( non - javadoc )
reads the content of a file .
<p > <unk> . < / p >
compares this object to another .
returns the size of the specified region in the specified region .
executes a query and returns the result .
return a list of all the bean names for the given domain .
/ * ( non - javadoc )
executes the specified {
/ * ( non - javadoc )
returns the name of the resource instance .
create security listener
creates a new instance of the <unk> class .
creates a { @link list } of { @link <unk> } s from the given { @link <unk> } .
clear search results by page .
/ * ( non - javadoc )
associates the specified region with the specified region .
returns the value of the specified { @link <unk> } .
evaluate an { @link <unk> } with the given predicate .
registers a { @link <unk> } after the specified region .
registers a { @link <unk> } after the specified region .
construct the comparison comparison from the configuration map .
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> - <unk>
export a region .
decrypt password .
/ * ( non - javadoc )
generate a copy of the next time at the next time .
returns whether the given timestamp is closest to the current time .
returns the amount of memory needed to store the data .
adds a value to the aggregator .
checks if the given value is a rtp packet .
returns the stat for the given name .
reads the next token from the input stream .
close this resource .
creates a new <unk> from the given directory .
entry point for the <unk> .
/ * ( non - javadoc )
configures the {
try to get a connection to the specified jmx url
stop the <unk> .
the main method .
<p > <unk> . < / p >
attempt to connect to the given {
entry point to the jmx system .
shuts down the name of the metric with the given name .
stores a list of key - value pairs with pagination parameters .
<p > <unk> . < / p >
/ * ( non - javadoc )
映射键值（参考python的zip () <unk> > 例如：<br > keys = [ a b c ]
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * private void <unk> ( region <unk> ) {
put a region into the cache .
/ * ( non - javadoc )
returns the { @link org . openqa . selenium . component } of the specified locator .
parses the resize weight .
/ * ( non - javadoc )
returns the class for the given class name .
returns the amount of memory used in the given buffer .
/ * ( non - javadoc )
shrink the list of intervals .
/ * ( non - javadoc )
returns true if the region is a valid region .
renders the specified template
/ * ( non - javadoc )
save search results .
clear the search results by page region .
https : // www . elastic . co / guide / en / elasticsearch / reference / index . html target = _blank > <unk> / a > .
execute a query
/ * ( non - javadoc )
visits a region .
starts the search .
director method to construct the given file
wait for the entity to start .
wait for a member of the given member .
new filtered changed key value with entry map map .
public for testability
/ * ( non - javadoc )
converts a region to a <unk> .
render a bulk theme .
returns a {
/ * ( non - javadoc )
set the value of the field .
/ * ( non - javadoc )
serialize an object to bytes .
deserializes a cookie into a cookie object .
create a new instance of the given class .
checks if the given table is a table id .
check for annotated fields
checks whether the given type is a supertype of the given type .
returns a string representation of the schema definition .
<p > <unk> . < / p >
define the write id .
create the table .
method to append a table to drop table .
insert into a writer .
emits update flow .
define the update column id .
emits a delete method for the given writer .
emits a delete method .
emit map .
emits a {
converts this { @link <unk> } to a { @link observable } .
sets the value of the field with the given name .
returns the string or the default value if the string is not a string or not .
capitalizes the first letter of a string .
returns true if the given class is a {
add a not clause to the builder .
reads a float from the file .
returns the mime type for the specified encoding .
/ * ( non - javadoc )
/ * ( non - javadoc )
log a message at the error level .
/ * ( non - javadoc )
returns all <code > icon< / code > elements .
{ @inheritdoc }
adds a data point to the table .
a simple interpolation function .
create view panel .
generate the <unk>
computes the greatest common power of two sets .
copy the values of this matrix .
sets the values of the matrix .
computes the euclidean norm of the matrix .
print the values of the table .
/ * ( non - javadoc )
returns the root time of a { @link bigdecimal } as a { @link bigdecimal } .
returns a { @link bigdecimal } from the given { @link bigdecimal } .
calculates the { @link <unk> } represented by this { @link bigdecimal } .
calculates the { @link bigdecimal } x .
variations of { @link bigdecimal } .
computes the { @link bigdecimal } from the given { @link bigdecimal } .
calculates the { @link bigdecimal } x from the given { @link bigdecimal } value .
returns the { @link <unk> } of the given { @link bigdecimal } .
prints an array of bytes .
set the default storage file provider .
sets the value of this slider .
put a color into the list .
print table of multinomial data
/ * ( non - javadoc )
<p > subtract a complex number by subtract a complex number . < / p >
magnitude of complex number .
calculates the magnitude of the complex number divided by the complex number .
copy the values of this matrix to a new array .
sets the matrix values .
computes the euclidean norm of the matrix .
print the matrix .
returns the number of elements in the matrix .
get a row from the matrix .
gets the column vector for a matrix .
copy the values of this matrix .
sets the matrix values of the matrix .
sets the values of the matrix .
{ @inheritdoc }
sets the column in the matrix .
return the transpose of this matrix .
add a new matrix to this matrix .
creates a new matrix that stores the results in a new matrix by the equation system .
multiply this matrix by another
multiply this matrix by another matrix .
multiply this column by a given column
multiply this vector by another row .
print the image using the given print stream .
compute the next tridiagonal position .
/ * ( non - javadoc )
creates a new { @link image } from the resource .
adds a data point to the data store .
validate the coefficients of the coefficients .
compute the next position in the table .
/ * ( non - javadoc )
reads a file and returns it .
convert a file to a { @link <unk> } .
validates a image .
check to make sure this is valid .
gets the field .
returns the next <code > <unk> / code > for the given <code > <unk> / code > .
/ * [ deutsch ] <p > ermittelt den <unk> des <unk> <unk> . < / p >
/ * ( non - javadoc )
sets the matrix values .
sets the matrix values .
fires a <unk> event on all registered handlers in the handler manager . if no such handlers exist this method will do nothing .
fires a <unk> event on all registered handlers in the handler manager . if no such handlers exist this method will do nothing .
compute the inverse of this matrix .
/ * ( non - javadoc )
computes the euclidean norm .
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
solve a * x = b
print a chunk of <unk>
lu decomposition .
scaled forward elimination .
solve ux = b
solve ux = y .
iteratively improve the solution :
converts a square matrix into a real value .
/ * ( non - javadoc )
compute the next value in the <unk> equation .
returns the index of the nth portion of the queue .
/ * ( non - javadoc )
/ * ( non - javadoc )
compute the next position .
create a new interval .
compute the unsigned pseudorandom {
adapted from {
visible for testing
/ * ( non - javadoc )
find the next position .
gen - begin : initcomponents
converts the given value into a hexadecimal string representation .
this method is used to decompose the <unk> with an <unk> .
print the help of <code > <unk> / code > to the specified printwriter .
validate the given <unk> by <unk> .
validate the exponent of the exponent of the specified exponent .
validate the given <unk>
validate the exponent of the specified exponent .
creates the gallery service module . <p >
returns the next random value .
returns the next element in polar form .
compute the next random ratio .
<p > <unk> . < / p >
returns an array of factors which can be used to prime the given factors .
returns the index of the first gamma element of the given index .
compute the default location location .
/ * ( non - javadoc )
runs the given runnable on the javafx application .
sets up the { @link <unk> ( string ) configuration } xml file .
statically set the default configuration .
get the string converter for the given value .
load the logger .
load a fxml component .
creates a new { @link <unk> } .
forwards the event definition to the event definition .
/ * ( non - javadoc )
searches for a { @link net . dv8tion . jda . core . entities . <unk> ( double double ) } { @link <unk> ( double double ) } { @link <unk> ( double double ) } { @link <unk> ( double double ) } { @link <unk> ( double double ) } { @link <unk> ( double double ) } { @link <unk>
insert <tt > type< / tt > <tt > type< / tt > <tt > type< / tt > <tt > <unk> / tt > <tt > type< / tt > <tt > type< / tt > <tt > type< / tt > <tt > type< / tt > <tt > type< / tt > <tt > type< / tt > <tt > type<
/ * ( non - javadoc )
gets the property definition for the given attribute definition .
evaluates the given { @link attribute } against the given { @link <unk> } .
creates a new { @link <unk> } for the given { @link <unk> } .
returns true if the message is an instance of {
/ * ( non - javadoc )
removes all leading and trailing whitespace from a string .
gets the { @link <unk> } instance .
/ * ( non - javadoc )
specifies that the <tt > <unk> / tt > of <tt > <unk> / tt > is <tt > <unk> / tt > and <tt > <unk> / tt > .
formats the clauses of the <tt > <unk> / tt > .
convert a {
/ * ( non - javadoc )
get the names of all the registered services .
query the instances for the given application .
gets the state of the state definition .
returns the url parameters for the given parameter .
returns the list of extra emoji characters for a given match .
write to a json object .
{ @inheritdoc }
creates a { @link list } of { @link <unk> } .
produce ticket .
gets the all { @link com . <unk> . <unk> . <unk> } definitions for a given form .
sets the form fields to create a new json object .
{ @inheritdoc }
maps collection of { @link <unk> } to json object .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new user .
updates a user .
activates the given user .
activates the given user .
increments the user s invalid login for the given user .
resets the password for the logged in user .
produce a user from ticket delete .
returns the logged in user .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
gets all the users .
<p > update all users by job view . < / p >
<p > <unk> . < / p >
delivers a new user for a logged in user
<p > <unk> . < / p >
uploads the specified part of the form to an email .
returns a byte array containing the user - defined values for the given user .
this method returns true if the given role has access to the given role .
returns true if the user has access to the given user .
/ * ( non - javadoc )
returns the value of the field with the given name or null if not found .
returns the value of the field with the given name .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link <unk> ( object ) }
/ * ( non - javadoc )
convert the value to a number .
returns the value of the given key as a boolean .
returns the value of the field s field or null if the field is not a date .
if the property is a multi - choice choice returns null .
[ variable <unk> ]
set the value of this field .
sets the type of the field .
checks if this field is an instance of { @link <unk> } .
update the fields in this field .
/ * ( non - javadoc )
/ * ( non - javadoc )
populate a {
/ * ( non - javadoc )
this method gets the elasticsearch search field type .
checks to see if there is an existing instance of an existing entity .
/ * ( non - javadoc )
adds a step to the step properties .
gets the value of a step property .
maps collection of { @link <unk> } to { @link <unk> } .
{ @inheritdoc }
create a flow step .
produce a flow step .
get flow step
get flow ticket .
get the { @link <unk> } for the given flow .
gets the standard {
produce a { @link <unk> } .
get ticket views by logged in user
get the { @link <unk> } for the given user .
get ticket views .
get ticket .
produce a flow step .
produce a { @link flow } .
search and range hits
gets search request builder .
/ * ( non - javadoc )
search for multi - line form .
search for search fields
search for hits
returns a list of {
updates an existing mapping .
/ * ( non - javadoc )
/ * --- private methods ---
{ @inheritdoc }
gets a list of fragments for a given form .
get the descendants of a given form .
get the fragments for the given service .
<p > <unk> . < / p >
converts a string to lower camel case .
returns the position of the <unk> >
returns the latitude from the elasticsearch search string .
returns the longitude from the given text .
/ * ( non - javadoc )
returns a string representation of the string representation of the given string .
decodes a base64 - encoded byte array into a byte array .
converts a byte array to a hex string .
convert a string to a byte array .
encodes a byte array into base64 notation .
/ * ( non - javadoc )
this method returns a { @link list } of { @link <unk> } .
/ * ( non - javadoc )
called when a connection is closed .
adds a jvm argument to the list of arguments .
returns a list of <unk> from the return value .
returns true if the contents of the list contains the failure message .
unzips a byte array to a byte array .
authenticates and returns a list of <unk> .
removes the specified form from the <unk> .
fetch the public key from the encrypted data .
creates a new <code > <unk> / code > for the form <code > <unk> / code > and <code > <unk> / code > .
create a new { @link <unk> } for the given { @link <unk> } .
get the first <code > <unk> / code > from the form <code > <unk> / code > and <code > <unk> / code > .
execute a custom web .
execute a custom web .
get the form ticket .
get a list of { @link <unk> } s for a given form .
get form data .
returns the most specific data for the given form .
/ * ( non - javadoc )
form a form bean .
list the form of the form arguments .
<unk> > <unk>
gets the form <code > <unk> / code > from <code > form . <unk> / code > .
gets a form from the form of the form <code > <unk> / code > .
gets the form <code > <unk> / code > from <code > form . <unk> / code > .
get prepared form form form .
/ * ( non - javadoc )
get the prepared form of the prepared statement .
generates the form s fragments from a map .
this method is used to map the submitted form states to a form object .
convert a collection of roles to a list of { @link role } objects .
{ @inheritdoc }
create a new form definition .
create a new <code > <unk> / code > .
create a comment for the given form id .
create a comment for the given form id .
get the list of fragments
get the list of fragments .
create a new { @link form } from a ticket definition .
returns the cached value for the given form .
<unk> method .
returns a method with the given name and parameter types .
<p > <unk> . < / p >
returns a string representation of a form key .
{ @link <unk> () } and { @link <unk> () } .
this method is called when the client is shutting down .
{ @inheritdoc }
get a list of all fragments belonging to this form .
<p > <unk> . < / p >
get an integer property from a properties object .
converts a string to a long value .
/ * ( non - javadoc )
{ @inheritdoc }
获取 { @link <unk> }
/ * ( non - javadoc )
<unk> > <unk>
returns the first ancestor of the given form .
get the list of all descendants of the current user .
login form .
returns a list of {
fills the form fields from the form fields .
returns a list of {
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
this method retrieves the value of a date - time field with the given name . <p >
/ * ( non - javadoc )
create flow ticket rule .
create flow step exit
get flow step .
update flow rule
get flow step
update flow step .
static method to compile a flow step rule .
/ * ( non - javadoc )
resume ticket .
produce a flow step .
produce a flow .
move a flow rule .
move a flow rule .
delete flow rule
delete the flow ticket .
delete a flow step .
/ * ( non - javadoc )
formats a time in milliseconds .
connect to a user .
creates a new instance of { @link <unk> } .
generates the request token .
/ * ( non - javadoc )
/ * ( non - javadoc )
this method encodes a list of strings into a single json string .
utility method to create a { @link <unk> } .
deletes a user query .
deletes a user query .
<p > <unk> . < / p >
<p > <unk> . < / p >
execute a query with the query parameters
<p > execute the given user query as a valid query . < / p >
<unk> returns -------------------------------------------------------------
returns the value of the <unk> property .
<unk> - <unk>
get the names of all the fields in this form .
returns the value of the given form field .
creates a blog entry from the result set . <p >
produce ticket .
produce ticket .
produce a role .
<p > <unk> . < / p >
get all roles
{ @inheritdoc }
execute command .
executes the command .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
直接读取对象属性值 无视private / protected修饰符 不经过getter函数 .
returns the value of the field with the given name as a string .
get the value of the field with the given name .
returns the value of the field with the given name .
set the value of the field with the given name .
returns the value of the field with the given name .
returns the value of the field with the given name .
returns the value of the field with the given name .
returns the value of the field with the given name .
returns the value of the field with the given name .
prepares the field value .
prepares the field value .
marshals the given form type into the given form .
{ @inheritdoc }
/ * ( non - javadoc )
replies the conversion type .
/ * ( non - javadoc )
{ @inheritdoc }
this method is used to send a form to a previously sent flow future .
fetch service execution result .
converts a byte array to a hex string .
{ @inheritdoc }
creates a new { @link <unk> } for the given { @link form } .
create a new user - typed field .
create a new { @link <unk> } .
create a mapper for the given field .
create a new { @link fieldvalue } for the given { @link field } .
creates a new { @link <unk> } for the given variable name and value .
sets the value of a field .
sets the value of a field in the form .
gets the plain form of a text field .
updates a multi - choice field .
/ * ( non - javadoc )
returns a new { @link <unk> } object based on the value of { @link <unk> } .
adds a new field to the form .
get a field by its name .
creates a new {
get the fields for a form type .
<unk> method .
<unk> method .
this method is used to get the <unk> from the given form param .
locks a session .
creates the { @link <unk> } for the given { @link <unk> } .
create a new { @link <unk> } for the given { @link form } .
create a mapper for the given field .
updates the ticket .
create a ticket granting ticket .
create a new { @link <unk> } for the given { @link <unk> } .
update ticket value .
<p > <unk> . < / p >
returns a new { @link <unk> } for the given { @link field } .
<unk> field .
remove the mappings from the panel .
sets the additional properties of the field .
create or create a new index in elasticsearch .
{ @inheritdoc }
/ * ( non - javadoc )
add sql parameters to the sql statement .
if not already created a new <code > flow . <unk> / code > element will be created and returned .
update flow .
get flow by id
get flow by name
delete a flow .
delete the flow .
produce ticket .
<p > <unk> . < / p >
get the value of the { @link <unk> } .
~ methods ------------------------------------------------------------------------------------------------------------------
get the first <unk> form of a string .
/ * ( non - javadoc )
get a list of all the descendants from the search query
update form params
{ @inheritdoc }
{ @inheritdoc }
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
returns true if the session has expired .
create a new user ticket .
update user notification .
produce a ticket notification ticket .
deletes a user notification .
updates the user notification with the given id .
authenticates a user - logged in user .
returns all notifications for the given user or {
returns the list of notification notifications .
returns a random byte array with the given seed .
computes the hmac - sha1 algorithm for the specified data .
calculates the hmac - sha1 value of a string .
calculates the hmac - sha1 value of the hmac - sha1 value .
<p > <unk> . < / p >
decrypt a string with a key .
<p > decrypt . < / p >
encrypts the given byte array and returns the encrypted data .
calculate md5 digest of byte array .
/ * ( non - javadoc )
closes the consumer thread .
create a new unique identifier .
/ * @see https : // www . w3 . org / protocols / rfc2616 / rfc2616 - sec14 . html
/ * ( non - javadoc )
gets the exception message .
creates a new admin user .
/ * ( non - javadoc )
/ * ( non - javadoc )
<pre > <unk> ( <unk> ) < / pre >
/ * ( non - javadoc )
update by query
{ @inheritdoc }
execute a http request with the given parameters .
<p > <unk> . < / p >
/ * ( non - javadoc )
issues http post request returns response body as string .
post json .
post json .
checkstyle : off
delete json .
/ * <unk>
put the json as json .
issues http put request returns response body as string .
{ @link <unk> }
this method forms a { @link <unk> } with the given parameters .
<unk> > <unk>
<unk> > <unk>
/ * ( non - javadoc )
<unk> > <unk>
url - encodes a string .
/ * ( non - javadoc )
returns true if the authority is an error .
creates and returns a new { @link closeablehttpclient } based on the specified { @link <unk> } .
returns the { @link net . sf . mmm . util . keystore . <unk> net . sf . <unk> . <unk> net . sf . <unk> . <unk> . <unk> }
common method to close the connection
/ * ( non - javadoc )
get sql driver from database .
close the preparedstatement .
closes the given { @link preparedstatement } .
get a scrollable item from the form .
create a new { @link <unk> } .
get the scrollable items for a given view .
/ * ( non - javadoc )
this method is used to send a form of form to the tab panel .
called when a close event is closing .
validates a message .
<p > sends a message to the client . < / p >
<p > sends a message to the remote peer . < / p >
closes the session .
gen - last : <unk>
get the list of fields belonging to the current user .
{ @inheritdoc }
/ * ( non - javadoc )
this method gets the singleton instance of this { @link <unk> } .
find the best match for the given parameter
get the value of the <unk> property .
checks if the given string is a plain challenge type .
returns true if the given string is a valid object .
maps this accumulator to a json array .
encodes a json object to a json object .
/ * ( non - javadoc )
apply license to license
maps this accumulator to a json object .
create a plain { @link <unk> } .
called when a field is true .
create a shared { @link <unk> } .
produce a { @link <unk> } .
create a new { @link <unk> } .
produce ticket granting ticket .
<unk> method .
<unk> method .
create a { @link <unk> } .
update a plain { @link <unk> } .
called when a field is true .
produce ticket text text .
create a <unk> ticket .
update ticket .
<unk> method .
<unk> method .
detect and return the <unk> .
update ticket .
<p > <unk> . < / p >
returns the field with the given id .
/ * ( non - javadoc )
delete the field .
move the { @link <unk> } to this { @link <unk> } .
convert a list of { @link <unk> } to a list of { @link field } s .
converts a form field .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @inheritdoc }
<p > create a new <code > <unk> / code > . < / p >
gets the list of files from discoverinfo .
creates a new { @link <unk> } for the given { @link attachment } .
get the { @link attachment } for the given { @link long id } .
get the list of {
creates a new { @link attachment } for the given { @link attachment } .
<p > <unk> . < / p >
checks if two objects are equal .
replace the attributes in the {
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the class loader to be used .
obtains the {
checks if the given schema is a valid xsd schema .
resolves references to the title of the receiver .
renders the <unk> reference .
adds a reference to the <unk> .
sets the schema location .
parses the {
set the xsd .
checks if the {
composes all {
generates the {
updates an existing project restriction .
checks if the {
throws an exception if the given attribute is not set .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the root element of the given file .
validates that the {
validates that the {
{ @inheritdoc }
parse a {
convert a node to a map .
replace the <unk> of the given reference element with a reference to it .
/ * package private
checks if the {
<p > <unk> . < / p >
returns the value of the <unk> property .
{ @link <unk> ( string string string ) }
/ * ( non - javadoc )
/ * ( non - javadoc )
validate port string .
/ * ( non - javadoc )
obtains the default form value for the {
obtains the name of the facet .
obtains the name of the facet name .
adds a {
{ @inheritdoc }
/ * ( non - javadoc )
creates an instance of { @link type } from a { @link class } .
creates a cli {
create a new { @link java . lang . object } instance .
create a new instance of { @link <unk> } .
{ @inheritdoc }
extracts the source date from a tag map .
builds the url for the given path .
add a new footer view .
remove a footer view .
sets the position of the start point .
sets the coordinates of this matrix .
returns the 3d value of a linestring .
get the value for the given position .
returns the 3d perimeter of the two specified values .
<p > {
calculate the noise between the noise and seed .
get the length of a length of y .
/ * ( non - javadoc )
returns the value of the given vector as a double .
computes the significance of the difference between two histograms .
<p > <unk> . < / p >
recalculate the current scale factor
sets the bounds of this matrix to be equal to the specified lower and upper bounds .
process a plugin event .
/ * ( non - javadoc )
/ * ( non - javadoc )
retrieves the account id for the account .
<p > <unk> . < / p >
<p > <unk> . < / p >
----- interface <unk> -----
/ * package
gets the serializer serializer .
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
returns a random object that is compatible with the given target type .
creates a temporary directory with the given prefix .
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
{ @inheritdoc }
todo : explain
gets the { @link <unk> } for the given extension .
gets the { @link <unk> } for the given extension .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of {
/ * ( non - javadoc )
returns a list of entries in the given jar .
get the dependencies of the input stream .
fires an { @link <unk> } on all registered { @link <unk> } s .
creates a new { @link <unk> } with the given { @link <unk> } and { @link <unk> } .
<p > creates a new { @link <unk> } from the given { @link <unk> } . < / p >
<p > sets the background color of the view . < / p >
creates a new instance of the { @link <unk> } .
/ * ( non - javadoc )
create a new { @link <unk> } with the specified element .
sets the value of a property .
returns the value of a system property .
<p > getproperty . < / p >
get the next state machine .
consumes a {
returns the raw class of the given type .
/ * ( non - javadoc )
returns the parameterized type for the given type .
returns the bounds of the bounds of the given type variable .
<p > <unk> . < / p >
<p > <unk> . < / p >
creates a new instance of fixture .
creates a new instance of the given class .
puts the given class into the cache .
returns a { @link map } of all the { @link class } s of the given { @link <unk> } .
/ * ( non - javadoc )
print the top of the stack trace .
loads the classes in the specified package .
/ * ( non - javadoc )
/ * ( non - javadoc )
start the task .
execute the task safely .
runs deadlock guard task .
execute the task safely .
/ * ( non - javadoc )
execute the task safely .
put a task to the task queue .
removes the next job from the system .
put points in the request .
sets the name of the rdn to be used for parsing .
/ * ( non - javadoc )
create a weak reference to the passed in queue .
returns a list of all the members from the specified directory creating it if necessary .
compresses the given directory and all its sub - directories into a zip file .
/ * ( non - javadoc )
creates a new instance of { @link <unk> } .
/ * ( non - javadoc )
copy the contents of this catalog to a catalog .
customize the catalog .
loads the system files .
open a catalog .
parse a catalog .
parse the catalog .
/ * parse the catalog and create a new one .
/ * ( non - javadoc )
/ * ( non - javadoc )
parses an unknown entry .
/ * ( non - javadoc )
resolves a doctype declaration to an external
resolves a document to a string .
resolves a public { @link <unk> } to a { @link <unk> } .
resolve a local entity .
/ * ( non - javadoc )
resolves the system properties
/ * ( non - javadoc )
parse the given { @code uri } into a { @code string } .
/ * ( non - javadoc )
<unk> - <unk>
/ * ------------------------------------------------------------
converts a byte array to a hex string .
adds the given entry to the zip file .
/ * ( non - javadoc )
parses the given string as an array of tokens .
creates a { @link <unk> } .
/ * ( non - javadoc )
fires an {
adds a throwable to the console .
creates an implementation of {
adds the given object to the end of the list .
create a new {
/ * ( non - javadoc )
compares this { @code delayed } to another { @code <unk> } .
gets the value of the ip property .
/ * ( non - javadoc )
gets the data at the given index .
replaces the specified object with the specified index .
adds the specified object to the soft value .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
add an entry type to the list .
returns the value of the given property as an integer .
gets the designated parameter count .
returns the element at the given index in the array .
inserts the specified object into the queue . if the list does not contain the element it is added to the end of the queue .
apply the filter to the given uri .
/ * ( non - javadoc )
set the thread context class loader .
returns true if the image at the given index is zero .
create a new swap vector from the queue .
remove a node from the queue .
create a new { @link <unk> } instance .
returns { @code null } if the { @code queue } is not { @code null } .
/ * ( non - javadoc )
show the command line arguments .
returns the stream handler .
constructs a complex array of urls that can be added to the handler .
creates a new instance of the class loader .
creates a new instance of the { @link set } of { @link <unk> } s .
attempt to close the given streams .
gets a counter view of the counter .
this method is used to create a counter view of the given counter .
checks if the given extension is in the extension namespace .
/ * ( non - javadoc )
receive notification of the start of an element .
{ @inheritdoc }
/ * ( non - javadoc )
lookup a value .
returns the value of the property with the given name .
/ * ( non - javadoc )
<p > <unk> . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
substitute sub - strings with side - of - string .
splits a string into an array of strings .
convert a byte array to a byte array .
<p > <unk> . < / p >
trim all occurrences of the specified { @code string } .
trim the leading character from the given string .
sends a get request to the remote server .
/ * ( non - javadoc )
creates a new instance .
returns the value associated with the specified key .
returns the value associated with the specified key .
remove the entry for the specified key .
removes the mapping for the specified key from this map if present .
remove expired entries .
returns a list of all the valid keys in this map .
set the resolution stats .
removes the entry for the specified key .
returns the children of a given parent element .
returns the value of a tag with the specified tag name .
get the text content of an element .
returns the text content of the given element .
returns the value of the given element as a child of the given element .
get the value of a child element from the given element .
stop the thread .
{ @link <unk> ( int ) }
sets the mode of the blocking mode .
sets the mode of the blocking mode .
dispatches an event to the wrapper .
/ * ( non - javadoc )
schedules the specified { @link timer } for the specified { @link timer } .
unwrap a new { @link <unk> } .
/ * ( non - javadoc )
insert the entry into the database .
resolve a uri based on the provided uri .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
--- publish ---
appends the given vector to the end of the vector .
/ * ( non - javadoc )
/ * ( non - javadoc )
return a vector of all the available resolutions .
get all local variables
/ * ( non - javadoc )
<p > <unk> . < / p >
creates a namespace parser .
read a file from the catalog .
read a catalog .
receive notification of the start of an element .
receive notification of the { @link <unk> } .
receive notification of the end of an element .
filter a processing instruction event .
/ * ( non - javadoc )
resolve an entity from the dom .
acquires the read lock .
/ * ( non - javadoc )
checks if the given file is a directory .
/ * ( non - javadoc )
gets the last modified header field .
compareandset next value .
push a node onto the stack .
returns <tt > null< / tt > if no valid value is present .
creates a snapshot entry .
compareandset right .
removes this node from the head of this list .
creates a { @link logger } for the given class .
serializes a collection of objects .
returns the simple name of the class .
convert subject to string .
returns a clone of the package
sets the name of the file search packages . <p >
sets the name of the file search packages .
sets the name of the file search packages .
sets the name of the file search packages .
sets the name of the file search packages .
sets the { @link <unk> } for the given { @link string } .
returns the value of a <code > string< / code > property or <code > null< / code > if no such property exists .
<p > returns the value of a <code > name< / code > property . < / p >
<p > <unk> . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the constructor for the given argument type .
returns a deep copy of the given object .
/ * ( non - javadoc )
deserialise an object to an optional .
<p > <unk> . < / p >
<p > initialize . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a new set of all the additional bean archives .
adds a propertychangelistener to the listener .
remove all listeners from the cache .
remove a propertychangelistener from the listener list .
sets the status of the job .
sets the status of the job .
sets the status of the job .
notifies all listeners that a property has changed .
resolve the property name .
adds a new value to the map .
loads properties from the properties file .
creates a new instance of { @link <unk> } .
/ * ( non - javadoc )
sets the value of an array property .
returns the property with the given basename .
register a scanner with the given id and id .
resolve an entity by its identity .
returns { @code true } if the feature is marshallable or not .
/ * ( non - javadoc )
/ * ( non - javadoc )
loads a { @link inputsource } from an { @link <unk> } .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ( non - javadoc )
add a string to the beginning of the string .
replaces the urn with the urn .
gets the authority from a urn .
<p > <unk> . < / p >
start the clock .
compute the sign of the stopwatch
returns the { @link <unk> } for the given watch .
/ * ( non - javadoc )
convert a byte array to a long .
<p > <unk> . < / p >
creates the content .
sets the value of the property .
removes the specified property from the source .
read the given catalog file into a java . io . catalog .
<unk> > <unk> <unk>
zip together the iterators until one of them runs out of values . each array of values is combined into a single value using the supplied zipfunction function .
initialize this class .
/ * ( non - javadoc )
returns { @code true } if this { @link vertex } already contains the specified value .
sets the root node of the tree .
adds an edge to the graph .
adds a new edge to the graph .
writes the given vertex to the end of this graph .
/ * ( non - javadoc )
depth - first traversal of the given { @link visitor } .
depth - first search for the first node in the graph .
performs a depth - first traversal of the first node in the graph .
depth - first traversal of the given subtree .
returns a new { @link gather } that contains all the vertices that match the given data .
create a list of strongly connected vertices .
xmlfilter methods -------------------------------------------------------
/ * ( non - javadoc )
remove characters from the given string .
parses an xml string .
parses an xml document and returns the { @link element } .
parses an xml document .
create a dom element .
/ * ------------------------------------------------- [ bean ] ---------------------------------------------------
get the value of an attribute from a dom element
get attribute value
fires an { @link <unk> } on all attributes of the given document .
returns true if the given node has child elements .
returns the child elements of the given element .
replies the text content of a node .
returns the child elements of the given node with the given name .
returns the parent of the given node .
/ * ( non - javadoc )
add a catalog to the catalog .
download file .
get the host name .
/ * ( non - javadoc )
create a {
/ * ( non - javadoc )
--- factory methods ---
displays the class info for the given class .
get a list of custom urls for a class .
<p > <unk> . < / p >
<p > <unk> . < / p >
describe the aliases .
extracts the package name from a classname .
gets the package name from the package name .
/ * ( non - javadoc )
returns the primitive wrapper class for the given primitive type .
get all interfaces implemented by the given class .
returns all interfaces of the given class .
returns true if the given type is a primitive wrapper .
creates a new instance of { @code <unk> } using the given { @code <unk> } .
loads a class by name .
acquire a typedesc from a class .
<p > <unk> . < / p >
{ @inheritdoc }
returns the attribute name of the rule .
loads a class from a string classname
sets a system property .
sets the value of the <code > text< / code > .
returns the filenames for the given property name .
returns true if the given { @code filename } matches the given { @code prefix } .
removes all weak references from the queue .
returns an iterator over the elements of the specified iterator .
adds an object to the queue .
create a new { @link <unk> } .
determines whether the given file is accepted by this file .
log a message at the info level .
log a warning message .
add a parameter with the specified name .
get the value of the named property .
validates a parameter .
/ * ( non - javadoc )
add a propertychangelistener to the bound list .
remove a property listener .
<p > <unk> . < / p >
<p > <unk> . < / p >
read a catalog .
returns the reference to the given class .
returns a new { @link <unk> } with the given classloader .
<p > trims the value of the <code > value< / code > to the specified value . < / p >
converts the given value to a { @link org . apache . commons . lang . <unk> } .
gets the { @link <unk> } .
gets the value of a property .
converts the given value to the given class .
converts a string value to a java object .
get the bean info for the specified bean class .
maps a java bean property to a java bean property
create a new server socket .
set the thread context class loader .
/ * ( non - javadoc )
sets the time at which the { @link timeout } is scheduled .
wait for the job to finish .
unbinds the given name from the given context .
unbinds the name context .
looks up a class with the given name .
<p > lookup . < / p >
looks up the object with the given name .
delete a distinguished name from a distinguished name .
<p > <unk> . < / p >
remove a distinguished name from a distinguished name .
unbinds a name from a context .
<p > <unk> . < / p >
gets the class fields of the given class .
gets the { @link transition } for the given id .
/ * ( non - javadoc )
get the string representation of the given string .
/ * ( non - javadoc )
/ * <unk>
get the catalog s catalog .
create a response from a prefer resource .
processes the catalog properties in the catalog .
get the catalog for the catalog .
create a catalog resolver .
returns <code > true< / code > if <code > <unk> / code > is <code > true< / code > .
returns the fully - qualified date for the query .
/ * ( non - javadoc )
resolves a relative uri .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
returns the { @link propertydescriptor } for the given property .
<p > invoke a setter method on the specified object in the given object . < / p >
removes the specified property from the source .
returns the prefix of the given element .
returns the file name of the given file .
returns the end of the node .
returns the key for the given element .
/ * ( non - javadoc )
returns a list containing the elements of the given enumeration .
returns an input stream for the given filename .
loads properties from a file .
/ * ( non - javadoc )
add an edge to the graph .
adds an outgoing edge to the graph .
adds an outgoing edge to the graph .
adds an edge to the graph .
remove the edge from the graph .
{ @inheritdoc }
returns the edge of the given edge .
returns the cost of this vertex s depth .
copies the contents of the given { @link inputstream } to the given { @link outputstream } .
creates a zip file from the given { @link java . io . zip file } and writes it to the given destination directory .
copies all the jars in the given object into a jar .
adds a directory to the base directory .
<p > extracts a jar file from a jar jar file and returns it . < / p >
returns true if the iteration has more than one generator .
/ * ( non - javadoc )
adds a transition to the queue .
set the <unk> tag .
process the task queue .
create the clone of the given { @link <unk> } .
install the { @link <unk> } .
/ * private void <unk> ( <unk> <unk> ) {
validate product folders .
run the task into the javafx application thread .
returns a list of listeners for the specified action .
returns the absolute path of this node .
removes the given {
returns a {
subscribes to a { @link consumer } variant .
/ * ( non - javadoc )
log a message at the info level .
perform double parameter substitution before logging the message of arguments .
log a info message with level info .
log a message at the error level .
log a info message with level info .
log a message at level info according to the format outlined above .
log a info message with level info .
log a message at the error level .
log a info message with level info .
perform double parameter substitution before logging the message of level info according to the format outlined above .
log a info message with level info .
log a message at the info level .
log a message at the warn level .
perform double parameter substitution before logging the message of level warn according to the format outlined above .
log a message at the warn level according to the specified format and argument .
log a message at the warn level .
log a message at the error level according to the specified format and argument .
log a message at level { @link loglevel#verbose } .
log a message at the error level according to the specified format and arguments .
log a message at the error level .
returns a { @link stream } of records from the given { @link stream } .
returns a stream of { @link <unk> } s that can be used to produce a stream of records .
/ * ( non - javadoc )
/ * documented <unk>
returns a stream of the results of applying the given rights to this stream using the supplied combiner .
/ * documented <unk>
bootstrap method .
bootstrap method .
bootstrap resources .
/ * ( non - javadoc )
/ * ( non - javadoc )
checks to see if a command is reached .
searches for the tag with the given name or creates a new one if none .
load training data from file .
{ @link java . util . <unk> ( java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string java . lang . string ) }
returns the list of <unk> .... > files .
read <unk> .
convert a string to a byte array .
adds a file to the end of the file .
returns true if the words in the words were changed .
/ * ( non - javadoc )
returns the number of syllables of a word .
/ * ( non - javadoc )
returns the { @link url } of the given { @link <unk> } .
reads characters from the mbr of {
/ * <unk>
returns the { @code int } value of the given { @code int } .
the main method .
returns the number of characters in the given word .
returns the number of available words .
computes the standard deviation of the variance .
returns the sum of the degree of the cell .
prints a chunk of chunks .
flushes the specified <unk> using the specified <code > <unk> / code > in the specified <code > <unk> / code > .
/ * <unk>
get the maximum number of occurrences of an element .
bulk decode method .
the main method .
creates a new { @link <unk> } with the given { @link <unk> } .
create a new mode using the specified api key .
creates a new instance of { @link <unk> } .
creates a new { @link mode } from the given parameters .
initialize system properties .
{ @link <unk> ( string ) }
create a datasource from a datasource .
/ * ( non - javadoc )
creates a {
executes a {
parse the given { @link org . apache . solr . solr . index . <unk> } .
get data source .
get datasource from jndi .
creates a datasource from the given parameters .
returns an instance of { @code t } for the given type .
gets an instance of { @code t } from a { @code class } .
converts the given { @link class } into a { @link list } .
converts the given { @link <unk> } into a { @link collection } .
returns a { @link set } of { @link class } s .
creates a set of objects .
<unk> { @link <unk> } <unk>
creates a { @link <unk> } for the given type and actual values .
gets credential .
returns a { @code deque } of type { @code <unk> } .
<p > sortedset . < / p >
shortcut for {
shortcut for {
shortcut for {
checks if the given { @link class } is an instance of { @link class } .
executes the given {
given a getter and a return value .
returns an immutable copy of the given list .
returns an array containing all of the elements in the given collection .
creates a hash set for the given class .
shortcut for {
creates a set of primitive type objects .
returns an unmodifiable view of the specified sortedset .
returns a { @link map } of key - value pairs as a { @link map } .
convert a map to a map .
create a { @link queue } of type { @code interface } .
create a new instance of { @link option } .
create an instance of type <code > <unk> / code > .
create an instance of type <code > <unk> / code > .
create a validation provider for the given type .
create a validation provider for the given type .
try to create a try - catch - to - success success try to try to create a success object .
get jdbc data source .
runs the given sql in the given database .
returns a list of <unk> from the database .
<p > <unk> . < / p >
<p > <unk> . < / p >
add a equals expression to the query
on upgrade .
replaces the current { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } { @link <unk> } and { @link <unk> } .
<p > <unk> . < / p >
returns the blob value as a byte array .
sets the empty text . <p >
prints a file to a csv file .
add a column to the query .
captures ffdc information .
add a class expression to the query .
add the given expressions to the lhs .
escapes a column in a delimited string .
unescape csv column .
get the values of a csv file .
unquote a string .
splits a string into a map .
converts a map of key / value pairs to a string .
converts a list of strings to a string .
joins a list of strings into a single string .
returns a string representation of this package .
read the database from the given reader .
write the given { @link <unk> } to the given { @link map } .
returns the id of the given id .
get the control interface hint of the control interface .
given an entity descriptor return the base object class .
returns the name of the bind type .
converts a string to a string .
/ * ( non - javadoc )
main import method .
compute and insert a row .
/ * ( non - javadoc )
/ * ( non - javadoc )
on upgrade .
/ * ( non - javadoc )
/ * ( non - javadoc )
restores all tables from a csv file .
reads the specified { @link <unk> } .
writes the index partition .
adds a converter to the list of converters .
/ * ( non - javadoc )
creates a list of entities for the given type .
{ @inheritdoc }
{ @inheritdoc }
sets the parameter with the given name and value .
adds a parameter to the request .
add the given parameters to the query .
returns a string representation of this query .
delete the table with the given id .
returns the entity with the given id .
crud method to insert an entity .
inserts a list of objects into the database .
insert the given object into the database .
/ * ( non - javadoc )
return a { @link cursor } of the current { @link <unk> } with the given parameters .
query for the row having the row having the row having the row having the specified parameters
convert a cursor to a list .
gets the first element in the list .
sets the builder builder .
add an item to the fastadapter
----- public methods -----
creates a new {
add a constraint to the query .
add a not found object to the database .
add a constraint to the query that requires a particular key .
add a constraint to the query that requires a particular key .
create a new query from the given lhs .
read the current configuration .
called by the <unk> logger
/ * package
get ccm stack .
adds a program to the plan .
run the plan for each plan .
convert a string to a string .
add the given evidence to the bayesian network .
returns the index of the aux object at the specified index .
returns the byte array representation of this buffer .
returns the names of the children in this buffer .
converts a byte array to a byte array .
creates the logger appender .
/ * ( non - javadoc )
set the length of the goals array
add a new goal to the packet
/ * package
initialize the <unk> - selection callback tracker .
gen - last : <unk>
start <unk> .
gen - last : <unk>
loads the extension from the given configuration .
register an app config extension .
/ * ( non - javadoc )
parses the command line arguments .
this method resets the list of { @link <unk> } s .
adds a css class to the component .
registers the supplied plans to get the list of eips .
determines whether a goal is complete .
initializes the <unk> .
execute goals for a pom .
return true if <code > <unk> / code > is <code > true< / code > .
get the public <unk> from the supplied training provider .
resolves a class by name .
returns a new instance of the given {
answers true if the given prefix is equal to the given one .
prints the usage of a global variable .
parses the command line arguments .
parse a command line argument .
----- private methods -----
the main entry point .
----- protected methods -----
returns the value at the given index .
find the extension with the given name .
/ * ( non - javadoc )
removes an object from the vector .
increase the capacity of the heap .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
inserts the specified object into the receiver if it is full .
/ * ( non - javadoc )
increases the capacity of the given array .
/ * ( non - javadoc )
modifies the <unk> belief
<unk> the operation .
writes an item to the database .
/ * ( non - javadoc )
returns a string representation of the given object .
returns true if the two classes are compatible with the given <unk> .
the main method .
returns the name of the field in the <unk>
convert a string to a byte array .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a copy of the buffer .
sets the goals for a specific goals .
creates a modifies operation .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of the field with the given name .
get the index of the field with the given name .
/ * ( non - javadoc )
sets the command line arguments .
/ * ( non - javadoc )
creates a random upper triangular matrix .
generates a random name from a file .
parses the command line arguments .
run the <unk> .
initializes the agent .
removes the {
registers the <code > <unk> / code > to the specified <code > <unk> / code > .
/ * ( non - javadoc )
removes the next file from the list .
parse the active file and add it to the list of active agents .
wait for all pending tasks to complete .
cancel the timer .
/ * ( non - javadoc )
performs a move to the specified pin .
the main method .
/ * ------------------------------------------------------------
starts the <unk> .
waits for the idle <code > <unk> / code > until the <code > <unk> / code > is idle .
finishes the global <code > <unk> / code > .
checks if the given array of { @link <unk> () } has been idle .
returns true if all of the given buffers have finished .
set ttl for an agent .
loads an integer value .
create a new { @link alias } expression
create a new aggregating set expression using the given expression .
/ * ( non - javadoc )
recursively attempts to join an array of properties .
copies joins and joins to the specified {
/ * ( non - javadoc )
<p > returns <code > true< / code > if this <code > <unk> / code > is empty . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the object class for the given class name .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
removes the extension from the file .
returns a content type for the given file .
get the content type from the request .
check if the named attribute has been set .
get attribute value .
parse request parameters .
/ * ( non - javadoc )
creates a file output file .
reads the dependencies of the given artifact and stores it in the given directory .
/ * ( non - javadoc )
/ * scan methods annotated with {
loads the implementation class .
load classes from the descriptor .
loads an instance scope .
gets the instance of an instance .
returns the default cache for the given config descriptor .
creates a new instance of the given class .
copies the fields of the given class to an array of field values .
<unk> <unk> <unk>
this method builds a string representation of the given directory descriptor .
<p > <unk> . < / p >
<p > <unk> . < / p >
gets the annotation of the given method .
returns the long value of the given method .
returns the {
returns the { @link <unk> } associated with the given { @link method } .
creates a new instance of the specified class .
returns the raw { @link <unk> } for the given { @code type } .
registers the given class adapter .
runs the program with the specified output file .
--- ping loop ---
returns the type of the field .
returns the value of the <unk> property .
checks if the given project should be proxied .
save the persisted file
{ @inheritdoc }
sets the value of the { @code uri } property of this { @code uri } .
sets the link to the given link .
executes the given request .
******************** methods *******************************************
log an http response .
handles a request errors .
----- private methods -----
adds the links to the soap header .
/ * ( non - javadoc )
helper method to create a url for a link .
get a value from the map and remove it from the map .
handle the capabilities of the response .
checks if a method is allowed .
returns a list of all the elements in the table .
generate abbreviated exception message .
/ * ( non - javadoc )
/ * ( non - javadoc )
helper method to register the instance processor .
register a property factory .
registers an instance factory .
registers a new instance of the { @link <unk> } .
creates a { @link <unk> } instance .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
this method should be called from <unk>
adds the argument to the argument list .
create target file list .
<p > write . < / p >
<p > <unk> . < / p >
<p > write . < / p >
/ * ( non - javadoc )
determine the application name for a given file .
creates a new instance of the { @link <unk> } .
creates a new instance of the specified {
/ * ( non - javadoc )
sets the id of the request .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
--- factory methods ---
/ * ( non - javadoc )
{ @inheritdoc }
<p > <unk> . < / p >
/ * ------------------------------------------------------------
/ * ( non - javadoc )
<p > parse . < / p >
sets the value of the given field to the given value .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
parse the command line arguments .
calls { @link <unk> ( java . util . collection ) } { @link <unk> ( java . util . collection ) } { @link <unk> () } and { @link <unk> () } .
load the given file .
parses all the files in a directory .
returns true if any of the given { @code <unk> } is { @code null } .
returns a { @link set } of all files contained in the given { @link <unk> } .
sets the zip files .
sets the file extensions to be used in the xml file .
sets the model resources .
/ * ( non - javadoc )
verifies that the rss level matches the given number of times .
compares a set of { @link <unk> } s into a { @link <unk> } .
compares the two lists of { @link <unk> } s .
get the next row of the given row .
used to parse a query variable
parses an array of booleans .
{ @inheritdoc }
<p > <unk> . < / p >
create the template .
execute a sequence of scalar values in the given sequence .
<p > set the value of the <code > <unk> / code > parameter to the specified values . < / p >
sets the designated parameter to the given java . sql . statement object .
{ @inheritdoc }
returns true if the first argument is non - null .
returns the value from the argument list .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
inits the directory .
returns the { @link file } or { @code null } if not found .
null - safe method that converts a { @link date } object to a { @link datetime } .
/ * ( non - javadoc )
/ * ( non - javadoc )
opens the log . <p >
initialize the <unk> .
updates the dialog appearance . <p >
print a view to the console .
save the contents of the file to the tmp file .
copies the contents of an input stream to an output stream .
opens a { @link <unk> } .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ------------------------------------------------------------
lookup a helper class .
returns a list of {
/ * ------------------------------------------------------------
{ @inheritdoc }
/ * ( non - javadoc )
{ @inheritdoc }
stores the next event in the queue .
sets the value of the given parameter to the given value .
encrypt the plain text using aes - 256 .
removes the prefix from the given path .
adds the given directory to the empty directory .
returns a list of parent directories in the given directory .
{ @inheritdoc }
/ * ( non - javadoc )
returns the path of the given base path .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
/ * ------------------------------------------------------------
render bad request
send an http request to the client .
sends a { @link throwable } to the given { @link <unk> } .
executes the given { @link throwable } .
send a json response to the response .
adds a request parameter to the list of parameters .
add a list of strings to the destination list .
initializes the template .
return a list of all references within the given template .
/ * ( non - javadoc )
/ * ( non - javadoc )
setenabled this enables or disables the save time picker .
------- helper methods ===============
adds a jar to delete .
initializes the set of capture variables .
<p > <unk> . < / p >
/ * ( non - javadoc )
<unk> <unk> <unk>
formats the given logrecord as a pem encoded string .
returns the names of all the capabilities in the response .
/ * ( non - javadoc )
{ @inheritdoc }
updates the count of the files in the specified file .
returns a list of all the files in this directory .
<p > calculate summary counts for the given file . < / p >
format node label
generate summary row for the given columns .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new instance of the given bean class .
creates a new instance of the given bean class with the specified name and bean name .
creates a new instance of the given bean class .
gets the instance of the remote interface using the specified interface .
returns an instance of { @link <unk> } .
adds a table entry to the layout table . <p >
/ * ( non - javadoc )
determine the context class for the given setup .
returns a list of { @link resource } s for this { @link <unk> } .
/ * ( non - javadoc )
adds a new model row to the model .
sets the list of candidate radio buttons .
copy the contents of a string to a file .
<p > <unk> . < / p >
creates a new instance of the configuration .
called when the user sends an error . <p >
parse a list of parameters into a list of parameters .
returns an array of formal parameters for the given formal parameters .
<unk> <p > <unk> / p >
replies if the formal parameters of the formal parameters are matched .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
/ * ( non - javadoc )
extract the version from the given uri .
/ * ( non - javadoc )
<p > <unk> . < / p >
load tables .
<p > <unk> . < / p >
loads the given { @code <unk> } from the given { @code <unk> } .
create a new {
sets the port .
checks if the request should be kept alive .
checks if the request is a multipart request .
/ * ( non - javadoc )
{ @inheritdoc }
removes the item at the specified index .
adds a table to the index of the given index .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
gets a list of { @link propertydescriptor } s from the given { @link class } .
<p > <unk> . < / p >
returns an annotation of the specified type .
<p > <unk> . < / p >
/ * ( non - javadoc )
<p > <unk> . < / p >
log a message with the supplied arguments .
execute a { @link <unk> } .
same as {
/ * ( non - javadoc )
returns a managed socket factory .
<p > <unk> . < / p >
~ methods <unk>
{ @inheritdoc }
this method is called by the { @link <unk> ( string ) } method .
returns a boolean value for the given column or null if there is no such column .
/ * ( non - javadoc )
initializes the set of app variables .
/ * ( non - javadoc )
/ * ------------------------------------------------------------
add a cookie to the request .
adds a key / value pair to the manifest .
/ * ( non - javadoc )
returns an iterator over the header values of the header .
/ * ( non - javadoc )
returns a list of target classes .
add the field to the class .
creates a codec for the given class .
retrieves whether the given token is valid .
returns the value of the {
ensure that the end point is a trailing slash .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the current http servlet request .
/ * ( non - javadoc )
execute a transaction .
executes an immutable listener .
processes the given throwable and returns the original one .
returns the files in the directory specified by the given file filter .
returns an array of all the files in the given directory .
returns an array of all the files found in the specified directory .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the extension of a request path .
load the default context .
/ * ( non - javadoc )
parse the given authentication configuration element .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > case insensitive search for a string . < / p >
/ * ( non - javadoc )
parses the given string as a date and returns a { @link date } object .
<p > <unk> . < / p >
initializes the window as window .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets a { @link httpsession } from the given { @link pageflowcontroller } .
/ * ( non - javadoc )
{ @inheritdoc }
<unk> > <unk>
<p > <unk> . < / p >
{ @link <unk> ( string ) }
writes the state of this <code > <unk> / code > to the given <tt > <unk> / tt > .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the key of the request path .
get the content of the script .
commit the given { @link httprequest } .
commit the content .
/ * ( non - javadoc )
unregisters the {
returns the result set .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
merges the http methods allowed by the endpoint .
gets the upload corpus file .
/ * ( non - javadoc )
{ inheritdoc } .
returns the value of the argument with the given name if it exists .
implements the {
/ * ( non - javadoc )
{ @inheritdoc }
returns the names of the part of the part .
<p > <unk> . < / p >
schedules a timer task .
this method is called when a task has finished executing .
cancel a scheduled task .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
extract the width of a model row .
{ @link <unk> }
sets the password .
creates a connection to the database .
/ * ( non - javadoc )
gets the challenge data .
verifies a captcha response .
get a { @link resource } from a parseexception .
handles authentication challenges .
main method to configure the application .
prints the banner text .
print the stopped version .
<p > <unk> . < / p >
parses the command line arguments .
starts the croquet framework .
checks if the arguments are enabled .
{ @inheritdoc }
{ @inheritdoc }
returns the value of the method with the given arguments .
wait for the task to complete .
transform actor and enter .
region <unk> implementation
adds a trigger to the event bus .
get the first event via multivalued events .
{ @inheritdoc }
gets the counts for the recent error counts .
creates a locale for the given locale .
format a date format .
setter for answer - sets
getter for itemlist - gets
setter for token - sets
getter for <unk> - gets
setter for component - sets
creates a new { @link <unk> } .
getter for events - gets
getter for <unk> - gets
setter for <unk> - sets
getter for component - gets
setter for component - sets
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for component - sets
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for <unk> - sets
getter for values - gets
setter for values - sets
indexed getter for entities - gets an indexed value -
indexed setter for entities - sets an indexed value -
getter for values - gets
setter for entities - sets
indexed getter for entities - gets an indexed value -
indexed setter for events - sets an indexed value -
getter for names - gets
indexed getter for head - gets an indexed value -
setter for head - sets
getter for tokens - gets
setter for token - sets
indexed getter for mentions - gets an indexed value -
setter for entity_mentions - sets
indexed getter for names - gets an indexed value -
indexed setter for categories - sets an indexed value -
getter for <unk> - gets
setter for <unk> - sets
getter for value - gets
setter for <unk> - sets
getter for <unk> - gets
setter for component - sets the component of the journal ( e . g . nicotine <unk> etc . )
getter for <unk> - gets
setter for component - sets
indexed getter for value - gets an indexed value - annotations to be chained .
indexed setter for categories - sets an indexed value -
getter for component - gets
setter for component - sets the component of the journal ( e . g . nicotine <unk> etc . )
getter for <unk> - gets
setter for component - sets
indexed getter for value - gets an indexed value - annotations to be chained .
indexed setter for value - sets an indexed value - list of annotations to be chained .
getter for <unk> - gets
setter for dbinfolist - sets a collection of objects of type uima . julielab . uima . dbinfo o
getter for <unk> - gets
setter for <unk> - sets
setter for component - sets
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for <unk> - sets
getter for component - gets
setter for <unk> - sets
getter for <unk> - gets
setter for component - sets
getter for <unk> - gets
setter for <unk> - sets
getter for component - gets
setter for min - sets
getter for component - gets
setter for component - sets
getter for value - gets
setter for storyid - sets the storyid of the processing step o
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for component - sets
getter for <unk> - gets
setter for component - sets
determines whether or not a servlet can be registered .
gets the metrics for the given biopax { @link <unk> } .
getter for resourceentrylist - gets
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
getter for <unk> - gets
setter for <unk> - sets
getter for <unk> - gets
setter for <unk> - sets
getter for component - gets
setter for component - sets
getter for component - gets
getter for component - gets
setter for <unk> - sets
setter for component - sets
getter for ref - gets
setter for categories - sets
getter for <unk> - gets
setter for component - sets
getter for <unk> - gets
setter for component - sets
creates a new {
getter for answer - gets
setter for <unk> - sets
setter for names - sets
getter for answer - gets
getter for <unk> - gets
setter for component - sets
getter for component - gets
setter for component - sets
getter for <unk> - gets
setter for component - sets
getter for component - gets
setter for component - sets
returns the index of the next set bit starting at the specified index .
sets the bit at the specified index .
generate a sql query string .
execute transaction .
unmap a buffer .
returns a new instance of the { @link java . util . concurrent . <unk> } .
populates a bean with the given parameters .
/ * ( non - javadoc )
create a bibliography
create a new config object .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
returns a list containing all of the elements in the given array .
/ * documented <unk>
joins the given array with the given delimiter .
joins a list of strings delimited by a delimiter .
/ * documented <unk>
/ * documented <unk>
returns a new array containing all of the elements in the list in the specified array .
/ * documented <unk>
returns an array containing all of the elements in the specified list .
returns a list containing the values of the given indexes .
assign a value to an array of values .
convert a collection to a list of strings .
splits a collection of strings into a list of strings .
rehashes the array to a new array .
counts the number of occurrences of the specified element in the given array .
find the next separator character .
find the next word in the stream .
method to get the list of whole helm
method to generate the first section of the monomernotation
/ * ( non - javadoc )
generates a string representation of the children of this matrix .
assembles the {
/ * ( non - javadoc )
/ * ------------------------------------------------------------
generates a random helm from the source string .
/ * ( non - javadoc )
{ @inheritdoc }
/ * ( non - javadoc )
method to run the program .
method <unk> .
guess the version of the dump of the given polymernotation
check if the version of the given polymernotation is valid .
/ * ( non - javadoc )
guess the date of the dump of the dump .
/ * ( non - javadoc )
checks if the given string is an integer .
/ * ( non - javadoc )
method to generate a json representation of this helm2notation
method to build the molecule for the <unk>
method to validate the <unk> .
/ * ( non - javadoc )
method to get all polymers for a given polymers
get the current instance of the current <unk>
generates a random helm string .
generates a { @link java . lang . string } containing the { @link <unk> } and { @link com . <unk> . nucleotide . <unk> } .
method to generate the first section of the section
method to generate and return a string representation of the elapsed time
/ * ( non - javadoc )
method to validate the grouping of the grouping objects
method to get all polymers of the given polymers
/ * ( non - javadoc )
method to get all polymers for a given polymers
method to set polymer elements
method to build a molecule for a single polymer
/ * ( non - javadoc )
convert the given string to a string
<p > <unk> . < / p >
checks if the given string is a delimiter .
method to parse a monomernotation
method to estimate the occurrence of a monomernotation
converts an upper - case entity to an camel case .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of dependencies .
{ @link <unk> }
/ * ( non - javadoc )
/ * ( non - javadoc )
method to add a value to the list
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
method to validate the <unk> .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last : <unk>
/ * ------------------------------------------------- [ <unk> ] ---------------------------------------------------
/ * ( non - javadoc )
send a {
/ * ( non - javadoc )
convert a list of edges to a list of nodes .
mostly it s designed for one - step operation to complete the operation in one step .
this method is called by the {
returns a new list containing all the occurrences of the nodes in the specified array .
creates a { @link printstream } from the specified { @link string } .
subscribe a remote method .
<p > subscribe . < / p >
subscribe a cookie to a function .
/ * ( non - javadoc )
/ * ( non - javadoc )
send a request message decoding .
/ * ( non - javadoc )
sends a cookie to the remote erlang node .
executes a head request and returns the response .
forward custom post request to the request .
read an erlang cookie from the stream .
sends a request to the api client .
sends a request to the remote erlang node .
receive a response from a network interface .
receive a message from a byte array .
receives a message off the response .
receive a message from a byte array .
/ * receive a cookie from a remote node .
polls the {
send an shutdown signal to the remote node .
returns true if the given throwable is a non - local procedure call .
print the given exception in the given exception stack . <p > if the given exception is { @code null } then this method prints the exception to { @code <unk> } . if the given exception is { @code null } then this method prints the exception to { @code exception } . if the exception is
returns the lock state of the lock .
blocks until interrupted .
release run state .
this method is called to create a worker . this method is called by the { @link <unk> () } method .
try to add a worker and add ctl counts to it .
registers a worker thread to be used for workers .
drive the number of tasks in this pool . waits for termination of tasks to complete .
signals that a worker is reachable . if no worker is active or if worker is active or not already active or if there are no more worker than the worker and worker threads are no longer reachable .
tries to release the given number of worker worker threads . if there is no active worker with the given value the worker will be closed .
run worker thread .
scans the given { @link workunit } s and returns a { @link fork } .
blocks and waits for completion .
try to find the non - empty steal queue .
tries to try to try to try or blocks until a given worker is active or not . returns true if at least one thread can be executed .
gets the number of queued tasks in the queue .
attempts to make the termination of the termination queue .
submits a task to the queue .
performs a blocking scan on the given work queue and returns a new task .
returns the queue of external queues .
executes the given task and returns a new one .
used by { @link <unk> ( <unk> int int int ) } .
invokes the { @link <unk> () } method and returns the result .
submits a forkjointask for execution .
gets the total number of steals the total number of tasks stolen from the <unk> .
makes a common pool of <unk> .
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . stream . stream< / code > is preferred for multiple phases operation .
frees the specified task .
waits for the current thread to become available .
create an empty map .
builds a new { @link <unk> } with the given { @code key } and { @code value } .
creates a new { @link <unk> } with the given { @code f } and { @code f } .
get a string representation of the message .
<unk> > <unk>
/ * ( non - javadoc )
factory method that creates a new { @link <unk> } with the given elements .
returns the last element of a list of elements .
creates a map from the given elements .
returns a new {
/ * ( non - javadoc )
convert an iterator to a set .
creates a new { @link hashset } initialized with the given elements .
creates a { @link set } view of the given elements .
wrap a {
joins a list of objects separated by a delimiter .
returns a function that inverts the results of applying the given <code > <unk> / code > to the specified <code > function< / code > .
returns <code > true< / code > if all elements of <code > coll< / code > is <code > true< / code > .
returns a list composed of the elements of the given collection applying the specified { @code function } to each element .
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . stream . stream< / code > is preferred for multiple phases operation .
returns a list composed of the elements of this list that are the result of applying the provided mapping function to each element .
<unk> > <unk>
convert an iterable to a list .
divides a list of objects into a list .
convert an iterable to a set .
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . stream . stream< / code > is preferred for multiple phases operation .
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . stream . stream< / code > is preferred for multiple phases operation .
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . stream . stream< / code > is preferred for multiple phases operation .
returns a list composed of the elements of the given collection applying the given function to each element .
returns a list composed of the elements of the given collection applying the given function to each element .
/ * documented <unk>
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . stream . stream< / code > is preferred for multiple phases operation .
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . stream . stream< / code > is preferred for multiple phases operation .
applies the combinator { @code function } to all elements of the iterator in the given { @code seed } . the results of applying the function <code > seed ( seed ) < / code > is equivalent to { @link <unk> ( iterator function ) } .
mostly it s designed for one - step operation to complete the operation in one step . <code > java . util . stream . stream< / code > is preferred for multiple phases operation .
新建一个arraylist<br > 提供的参数为null时返回空 { @link arraylist }
removes all elements from the given collection .
mostly it s designed for one - step operation .
creates a copy of an array .
returns a java . util . list of the last element of the iterable .
returns a collection view of the iterable as a collection .
convert an iterator to a list .
returns a { @code map } whose keys are the values in the given { @code size } and { @code size } .
create a map from a map .
将键列表和值列表转换为map<br > 以键为准，值与键位置需对应。如果键元素数多于值元素，多余部分值用null代替。<br > 如果值多于键，忽略多余的值。
creates a { @link <unk> } from the given { @link iterable } .
returns an unmodifiable map containing the elements of the given { @code keys } and { @code keys } . the { @code map } is the same as the { @code <unk> () } function .
<unk> ( <unk> )
/ * ( non - javadoc )
pushes a task to the stack .
frees the object off of the free stack .
waits for the task to become available .
returns an {
creates a map from the given iterable of keys and values .
<unk> > <unk> { @link <unk> ( iterable ) }
<unk> ( <unk> )
returns an empty { @code bimap } for the specified { @code map } .
将键列表和值列表转换为map<br > 以键为准，值与键位置需对应。如果键元素数多于值元素，多余部分值用null代替。<br > 如果值多于键，忽略多余的值。
creates a { @link list } of { @link <unk> } objects from the given { @link iterable } .
create a map from iterables of keys and values .
checks if the tree is invariants of the invariants .
{ @inheritdoc }
/ * ( non - javadoc )
returns an iterator over the keys contained in this cache .
/ * ( non - javadoc )
normalizes the resource name .
/ * ( non - javadoc )
create a dom document from a string .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
read number of characters from the buffer .
returns the element at the specified position in this sequence .
/ * ( non - javadoc )
fills the buffer with the given string .
binary search for list .
creates a binary search for the given list .
returns the index of the first occurrence of the specified element in this sequence or - 1 if it is not found .
serializes an object into a json object .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
invokes the method with the specified pattern .
adds a verb .
adds the given pattern to the list of patterns .
schedule email .
sends a { @link <unk> } to the given { @link timeunit } .
/ * ( non - javadoc )
d367572 . 9 - added entire method .
checks if the request should be processed .
check if the if - none - match condition is satisfied .
set file download header .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
encodes the given parameters with the given prefix .
encodes the given username and password with the given username and password .
determine if the given string has any of the specified roles .
<unk> > <unk>
generates a string representation of a script .
load the template from the given csv file .
/ * ( non - javadoc )
returns the integer value of the given string .
get the filename of the given path .
returns the filename extension of the given path .
apply a relative path to a given relative path .
cleans a path to a string .
<p > converts an array of elements to an array of strings . < / p >
remove duplicate strings .
<p > <unk> . < / p >
convert a collection of objects to a delimited string .
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > converts a int to a hex string . < / p >
<unk> > <unk>
align the specified string to the specified width and width .
<p > <unk> . < / p >
returns true if the string array is null or empty .
{ @inheritdoc }
converts the given size to a human readable string .
returns the value of a system property .
closes the server .
/ * ( non - javadoc )
<unk> <ol > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > <li > <unk> / li > < / ol >
logout a session .
initializes login with the given user name and password .
returns a {
add a cookie to the session .
<unk> hash password .
add a cookie to the request .
@see <unk> ( string )
gets the value of the specified cookie from the request .
encrypt a string using the utf - 8 encoding .
returns the { @link cookie } for the given { @link string } .
returns the base64 encoded string .
/ * <unk>
creates a { @link <unk> } with the given message and code .
creates a new { @link <unk> } .
create a new { @link <unk> } with the given { @link string message } formatted with the given { @link string message } .
static factory method for creating a new { @link <unk> } .
creates a new { @link <unk> } from the given data .
create a new { @link <unk> } .
sends an error log message .
create a new { @link <unk> } with the given { @link string message } formatted with the given { @link error message } .
sends an error log message .
create a new { @link <unk> } with the given { @link string message } formatted with the given { @link message } .
generates a random key from a string .
generates a sha - 256 hash of the given password .
/ * ( non - javadoc )
returns a list of methods that need to be excluded .
an implementation of {
scans the list of {
create an action key for the given key .
returns all annotations of the given method .
returns all annotations of the given class annotated with {
returns true if the method is clear annotation
authenticate the given username and password .
login with username and password .
/ * ( non - javadoc )
adds a permission to the given path .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> .
/ * ( non - javadoc )
returns the ip address of the request .
test if the user agent is a robot agent .
returns the cookie with the specified name .
add a cookie to the request .
convert a host name to a domain name .
checks if the given string is a valid ip address .
returns the url of the request url .
returns a request parameter as integer .
gets a parameter from the request and converts it to a string .
returns a request parameter as long .
get the scheme for the given request .
<p > <unk> . < / p >
log a message at the debug level .
prints { @link <unk> } to { @link <unk> } .
/ * ( non - javadoc )
specify a date - line color
set the color that will be used to calculate the ground .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
encode a list of strings .
/ * ( non - javadoc )
converts a string to a smiles string .
casts <code > byte [] < / code > to <code > byte [] < / code > .
convert a charsequence to a byte array .
converts a byte array to a byte array .
returns a byte array of the given byte array . <p >
convert a charsequence to a byte array .
returns true if the specified character is a valid identifier .
returns true if the given character is a unreserved character .
returns the index of the first occurrence of the specified character in the given string .
<p > finds the first index of any character in the specified string . < / p >
check if the given string is a valid scheme .
<p > <unk> . < / p >
get the currency data .
returns a locale specific language for the given language and variant .
returns the locale for the given locale .
returns the bundle name as a string .
decode the locale code .
returns a string representation of the specified locale .
/ * ( non - javadoc )
<p > <unk> . < / p >
generates a freemarker template from the given parameters .
submits a {
creates a new {
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the mime type for the given request header .
缩放图像（按比例缩放）<br > 缩放后默认为jpeg格式
calculate the optimal width and height of the image
generate a <code > <unk> / code > from the specified <code > file< / code > .
converts a file to base64 .
<unk> the file
create a new { @link variableresolver } .
formats a string into a string .
execute the given <code > command< / code > with the given delay .
invokes the specified { @link <unk> } in the given { @link <unk> } .
sets the credentials for the given credentials .
initialize the resttemplate .
render the given error message .
renders the given message and returns it .
template method for { @link <unk> ( string ) }
parse the given url and return it as a string .
/ * <unk>
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
renders the {
renders the response .
renders a page of help pages .
/ * ( non - javadoc )
retrieve the request group for the current user .
get the { @link <unk> } for the given credentials .
returns the value of the <code > name< / code > property as a <code > long< / code > or <code > defaultvalue< / code > if not found .
returns the value of the given json object as a { @link long } .
sets the items in the combo box .
/ * ( non - javadoc )
<p > <unk> . < / p >
creates a { @link list } of { @link <unk> } s from the given { @link <unk> } .
/ * ( non - javadoc )
encodes a byte array into a verifier string .
url - encodes the given part .
url - decodes a <code > string< / code > .
returns the bindings in the given injector .
returns the method name of the first call of this method .
this method is used to compact the memory in memory .
closes the {
get the { @link <unk> } as a collection of { @link <unk> } .
returns true if the given string is a valid control character .
encodes the given string as a string .
wrap a {
capture the stack trace of the exception stack trace .
checks if the exception cause is an instance of { @link exception } .
gets a page of capabilities from the specified model .
find a page of entities from the map .
builds a view of the following fields .
returns a batch of links from the model .
returns an optional charset for the given file .
find record by id .
returns a list of documents matching the given query name .
gets and removes the doc and remove it from the db .
close the given { @link outputstream } .
closes the given { @link writer } .
copy the contents of the given input stream to the output stream .
copy bytes from the input stream to the output stream .
copy the contents of the given input stream to the given writer .
copy the contents of the given reader to the given output writer .
copy the contents of the given reader to the output stream .
copy the contents of the given { @link reader } to the given { @link outputstream } .
copies the content of the given reader to the output stream .
read bytes from the input stream .
compare two streams to see if they are equal .
compare two streams to see if they are equal
applies the { @link <unk> } to the given { @link channel } .
applies the given function to the given function .
add a column to the pipeline .
add a column to the pipeline .
returns a { @link com . <unk> . <unk> . <unk> } for the specified { @link java . lang . function } .
returns a predicate that evaluates to { @code true } if the given predicate evaluates to { @code true } .
returns a { @code stream } with elements that satisfy the given { @code predicate } .
sets the value of <code > name< / code > to the specified <code > predicate< / code > .
register a { @link <unk> } with the given predicate .
removes the item at the specified index .
<unk> > <unk>
convert a string to an object .
/ * ( non - javadoc )
returns the { @link url } of the given { @link string } .
determine whether the specified url points to a jar file .
creates routes for the routes .
compress a zip file into a zip file .
unzips a zip archive to a destination directory
/ * ( non - javadoc )
initialize the application .
create and return a new instance of the { @link <unk> } .
initializes the dialog s ui .
returns true if the input string matches the regular expression pattern .
returns true if the given type is a collection type .
returns true if the given type is a collection type .
checks if the given type is a supported collection type .
returns true if type is an array type .
returns the raw class of the given type .
returns the default implementation of the given type .
returns true if the given type is a collection type .
returns true if the given type is a valid value type .
sets the type converter .
returns the raw class of the given type .
returns true if the given value matches the specified regular expression .
checks if the given string is a valid email address .
checks if the given string is a valid uuid .
checks if the given string is a valid uuid .
checks if the given string is a valid phone number .
checks if the given date is valid .
checks if the given string is a valid uuid .
checks if the given string is a valid zip code .
checks if the given string is a currency .
<p > <unk> . < / p >
checks if the given string is a valid url .
checks if the given string is a valid uuid .
returns <code > true< / code > if the given value is a <code > null< / code > value .
<unk> > <unk>
<p > <unk> . < / p >
creates a swagger2markupconverter . builder from a uri .
convert an input file to an bgr spectrum image
convert an input stream to an bgr spectrum image
<unk> <unk> <unk>
<unk> <unk> <unk>
creates a new { @link <unk> } with the specified { @link <unk> } .
fetch the <unk> from the <unk> .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
initialize the configuration .
return the version of the <unk> if it exists
returns the name of the template name .
hex encode string .
decodes a string into a byte array .
converts a hexadecimal string to a byte array .
load properties from a file .
/ * ( non - javadoc )
reads the contents of a stream into a string .
reads the contents of a file into a byte array .
reads the contents of a stream into a byte array .
writes the given content to the given file .
copy the contents of the given input stream to the byte stream .
write the contents of the given resource to the given file .
copies a directory to a target .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * constant
add a new instance of {
/ * [ deutsch ] <p > subtrahiert die angegebenen <unk> . < / p >
<div color = red style = font - size : 24px ; color : red > <b > <i > <u > jcypher< / u > < / i > < / b > < / div > < / b > < / div > <div color = red style = font - size : 18px ; color : red > <i >
returns a copy of this monetary value multiplied by the specified value . <p > this instance is immutable and unaffected by this method .
returns an array with all of the chunks of the given amount .
returns an array of <code > <unk> / code > that can be used for a <code > long< / code > value .
create an instance with the same currency .
creates a <code > <unk> / code > for the specified <code > <unk> / code > .
loads a list of { @link <unk> } s from the source { @link <unk> } .
serialize a document
private static final logger log = loggerfactory . getlogger ( <unk> . class ) ;
parse a xml string .
parse an xml document from an input stream .
check if the passed xml document is valid or not .
@see <unk> ( document )
returns the class loader for the given class .
loads a class from the given { @link classloader } .
gets the user class .
returns true if the given class is a cache safe .
gets the class name from a class .
gets the package name of the given class .
returns the package name of the given fully qualified class name .
returns the qualified name of the given class .
gets the qualified method name for the given method .
returns the constructor if the given class is available .
循环向上转型 <unk> 并强制设置为可访问 .
checks if the given method is a user - level method .
determines if the given class is a primitive or primitive wrapper .
checks if the given class is a primitive array .
returns { @code true } if { @code clazz } is an array wrapper array .
resolves a primitive if it is a primitive type .
checks if the given <code > <unk> / code > is assignable to the given <code > <unk> / code > .
checks if the given value is an instance of the given type .
convert a resource path to a class name .
convert a class name to a resource path .
adds the given resource to the package path for the given resource name .
get all interfaces for a given object .
gets all interfaces as set .
returns all interfaces of the given class as a set of interfaces .
creates a composite interface for the given interfaces .
/ * ------------------------------------------------------------
writes ivy settings to a file .
add a key / value pair to the list .
/ * ( non - javadoc )
returns the pid of the process .
writes the pid to the given file .
extracts the variables from the given metric name .
/ * ( non - javadoc )
adds the specified rule to this bucket .
checks if the given class is a subclass of the given class .
checks if the given target class is an interface .
returns a { @link map } representing the fields of the fields of this { @link field } .
<unk> <unk> {
resolves the {
creates a { @link <unk> } for the given extension point .
returns the set of classes contained in the given class .
compares two objects .
/ * ( non - javadoc )
/ * ( non - javadoc )
convert a primitive type to a primitive type .
converts a parameter to a collection .
convert an object to json .
gets the value of the given user defined method .
upload the given parameter values to the request .
add a cookie to the request .
creates a session from the session .
calculates the md5 digest of the given input byte array using the given salt and iterations
initialize the datasource .
set the freemarker shared variable .
/ * ( non - javadoc )
/ * ( non - javadoc )
发送es restful sql请求 / _xpack / sql，获取返回值，返回值类型由beantype决定
create a new { @link genericresponsebuilder } with the given { @link object } .
returns a string representation of the given value .
<unk> > <unk>
<unk> > <unk>
<unk> <unk> <unk>
<unk> > <unk>
return true if <unk> id
<unk> > <unk>
<unk> > <unk>
<unk> - <unk>
convert a char array to a byte array
get the sum of all the elements in an array .
gets the check date string .
<unk> - <unk>
<unk> > <unk>
<unk> - <unk>
<unk> - <unk>
<unk> - <unk>
returns true if the given date falls within the date format .
gets the value of a parameter from the given { @code params } .
<p > <unk> . < / p >
create a <unk> for a template
set the top body for the body of the body .
/ * ( non - javadoc )
set the {
this method is called when a router is created . <p >
checks if the current user has permission to access the screen .
------- internal methods
<p > <unk> . < / p >
366845 . 11 . 2
convert a list of values to a { @link <unk> } .
convert an array of permission values to a v8 array .
/ * ( non - javadoc )
{ @inheritdoc }
checks if the database is a new primary key in the database .
returns a list of { @link <unk> } s that match the given select statement .
find the first record in the where clause .
delete by id .
checks if the given value is a string .
iterates over the results of the given node and returns a page of results .
prepare the mode .
determine whether the given method explicitly declares the given { @link method } directly to the given { @link method } .
remove garbage collected soft values from the queue .
/ * ( non - javadoc )
constructs and initializes a new { @link <unk> } with the given { @link throwable cause } and { @link throwable cause } .
get method param names .
<p > <unk> . < / p >
test if a string matches any of the given pattern .
initialize the gui .
initializes the applet .
display this button .
/ * ( non - javadoc )
{ @link <unk> ( object object ... ) }
<unk> method .
<unk> method .
get an instance of the given interface .
main method to read arguments .
reads the next byte from the stream .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced by the specified value .
/ * ( non - javadoc )
returns true if value is a primitive type .
returns the {
returns true if the given class is a <unk> entity .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> .
process an object .
run setter .
gets the object .
<unk> setter <unk>
get a { @link <unk> } instance .
<p > evaluate filter . < / p >
code to display a menu .
setupsfields method .
<unk> > <unk>
returns the { @link mapper } for the given type .
<p > <unk> . < / p >
creates a json geometry from a geojson representation .
deserialize a string to a bean .
deserializes the given json byte array into an object of the specified type .
transforms a json object to a bean .
deserialize a json string to a bean .
converts json string to a bean .
deserialize a json object to a bean .
<unk> > <unk>
<unk> > <unk>
transforms the given json string to an object of the specified type .
<unk> > <unk>
读取整个excel文件 <unk> .
<unk> > <unk>
load the given { @link jsonnode } from the given file .
returns a json string that can be used to produce a json object .
closes the given connection .
close a statement .
close a resultset .
helper method to get all properties of a property
<p > fill given entity . < / p >
sets the maximum padding of the shadow .
creates a new {
returns the access token based on the client credentials .
<p > send . < / p >
执行http <unk> . <unk>
download data from the url using the specified encoding .
sends a client to the client .
/ * ( non - javadoc )
performs an http post .
<unk> <p > function : <unk> / p > <p > description : < / p >
<p > send . < / p >
send a http request to the specified url .
creates a request body with the given parameters .
performs an http post on the given credentials .
checkstyle : off
/ * ( non - javadoc )
create a http request with the given method and uri .
/ * ( non - javadoc )
this method initializes <unk>
returns the content of the given response as a string .
gets the credentials based on the username and password .
sets the authentication credentials for the user .
<unk> > <unk>
/ * <unk>
returns a list containing all of the elements in the target set .
/ * documented <unk>
/ * documented <unk>
{ @inheritdoc }
authenticate the user .
deletes the user record .
returns a connection to the database .
add amount to a double .
sub amounts .
sub amounts .
multiply v1 .
multiply two float values .
提供 ( 相对 ) 精确的除法运算 当发生除不尽的情况时 由scale指定精确度
提供 ( 相对 ) 精确的除法运算 当发生除不尽的情况时 由scale指定精确度
保留固定位数小数<br > 例如保留四位小数：123 . 456789 = 》 123 . 4567
提供 ( 相对 ) 精确的除法运算 当发生除不尽的情况时 由scale指定精确度
convert a double to a float .
float constructor .
/ * ( non - javadoc )
parse a date string .
returns a date object that can be used to authenticate using the specified pattern .
copy the attributes of the given target object to the given target object .
copy the attributes of the given target object to the given target object .
launches the browser to display the specified url .
visit a type declaration .
<p > fill given field of given entity . < / p >
add a directory to the file system .
/ * ( non - javadoc )
returns an array containing all of the elements in the array .
returns a list containing all of the elements in the target set .
/ * documented <unk>
returns a fluent wrapper for {
copies the contents of the given input stream to the output stream .
copies the data from the stream to the output stream .
write the class name to the file .
convert this date to a date object .
convert this date to a string .
make a filter from the given properties object .
returns the value of the property with the given name or null if the property is not set .
set a property .
create a jframe with a <unk> window .
returns a { @link set } view of the entries contained in this map .
/ * ( non - javadoc )
print the help for <code > options< / code > with the specified command line syntax .
parse the command line arguments .
init method .
returns the raw value of the <unk> property .
/ * ( non - javadoc )
/ * ( non - javadoc )
gets the token for the id token .
init method .
<unk> method .
/ * ( non - javadoc )
main method .
gen - last : <unk>
add all the screen properties to the screen .
get a collection of urls for the specified class loader .
returns all classes in the given package .
<p > <unk> . < / p >
returns the default classloader for the current thread .
gets the class of the given class .
returns the class corresponding to the given class name .
converts a class name to a canonical name .
<p > <unk> . < / p >
loads a resource as a { @link inputstream } .
load the given class as a stream .
gets the message class name of the given class .
initialize the uri object .
initialize the uri for this uri .
initialize the scheme for this uri .
initialize the scheme for this uri .
this method is used to initialize a uri path string . this method does not check whether the uri is valid for this uri .
returns a string representation of this uri .
set the scheme for this uri . the scheme is converted to lowercase before it is set .
this method is used to initialize a uri path string . this method does not check whether the uri is valid for this uri .
set the host for this uri . if the host is null then this will throw an exception .
set the port for this uri . this is a valid uri . this is used to set the port number for this uri .
set the path to this uri .
append a path to the end of the path of this uri .
set the query string for this uri . this method does not check if the uri is not valid characters of this uri .
set the fragment of this uri . this is equivalent to calling : <code > org . <unk> . sax . helpers . <unk> ( string string ) < / code >
returns a string representation of this uri .
returns true if the given string is a well - formed scheme .
encodes a string into a byte array .
encodes a string into a base64 encoded string .
<p > write given field to given writer . < / p >
<unk> > <unk>
renames a { @link <unk> } .
initialize the directory .
/ * ( non - javadoc )
gen - last : <unk>
returns the { @link <unk> } associated with this { @link <unk> } .
/ * ------------------------------------------------------------
replace the action with the specified name .
waits for the file to be opened .
loads a { @link <unk> } from a { @link <unk> } .
sets the parameters of the client .
creates a map of parameters for the given request .
returns the { @link <unk> } for the given id .
finds a service by its state .
get the current app s authorization url .
parses the given request and returns the response .
extracts the device nodes from the device .
download thumbnail .
read number of buffers from new buffer .
append the given element at the end of the buffer .
/ * ------------------------------------------------- [ union ] ---------------------------------------------------
returns an array containing all of the elements in this buffer in proper sequence .
returns an iterator over the elements of this stream .
<p > <unk> . < / p >
<p > <unk> . < / p >
<unk> > <unk>
rounds a double to a string
<p > <unk> . < / p >
get the encoding for the given text .
/ * xml
xml to xml
<unk> ( <unk> )
<unk> <unk> <unk>
deserializes xml .
register the given xstream object .
returns jdbc driver class name .
/ * ( non - javadoc )
returns a map of the items in the given string .
accessor method used to retrieve a date instance representing the contents of the file .
creates a connection to the given pool .
{ @inheritdoc }
<p > process entity request . < / p >
checks if the given class name is available in the given class .
checks if the lhs is compatible with the primitive types .
creates a new instance of a { @link connection } instance .
get the authorization from the given authorization url .
creates a new instance of a {
returns the entry at the specified index in this list .
<p > retrieve item places entities . < / p >
creates a datasource instance .
<p > change . < / p >
visits a {
parse a function declaration .
parse a class declaration .
returns the formal type of the executable declaration .
add controls to the gui .
add all the screen listeners .
create the button controls for this item .
display the new property . <p >
run this button .
creates a new { @link <unk> } .
returns the value for the specified key in the property map .
<p > synchronize <unk> . < / p >
checks if the modifier is a proper class .
gets the filter declared in the declaration .
converts a filter filter to a filter object .
converts a filter to a filter or method declaration .
given a { @link java . lang . reflect . <unk> } this method returns a { @link collection } of { @link <unk> } s .
returns a list of {
removes the mapping for this key from this map if it is present .
<unk> > <unk>
makes sure that the given constructor is accessible .
<p > <unk> . < / p >
gets the super class type .
returns an array of the super classes of the given types .
decodes a byte array from a byte array .
gets the <unk> type .
returns an array of all the classes in the given class array .
{ @link <unk> ( java . util . map ) }
add controls to the panel .
<unk> method .
setupsfields method .
init method .
<unk> method .
<unk> method .
init method .
finish the transfer .
/ * ( non - javadoc )
skips the last modified date in the file .
main method .
<unk> method .
set the value of this property .
returns a {
get the connection to shared connection
<unk> > <unk>
builds a { @link <unk> } from a { @link map } .
updates the properties of the target map .
init method .
<unk> method .
convert the source code to a map .
<unk> method .
/ * ( non - javadoc )
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
/ * ( non - javadoc )
checks to see if the given action matches the given prefix .
<p > init . < / p >
the main method .
run method .
/ * ( non - javadoc )
( non - javadoc )
/ * public static string <unk> ( string <unk> ) {
converts a byte array to a hexadecimal string .
<p > process entity request . < / p >
<p > read localized attributes . < / p >
returns the list of indexes for a given { @code name } .
parses a sql query string into a string .
factory method for create a new { @link form } .
get the user model for the request .
counts the tags that intersect the specified area .
<p > synchronize <unk> . < / p >
/ * ( non - javadoc )
login the subject .
<p > process item request . < / p >
create a <unk> message .
addmasterlisteners method .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if the specified schema supports column scale .
determines the jdbc type from the given { @code type } .
gets the name of the property name .
search for a method in the given list of parameters .
returns the first member of the given list of candidate members .
returns true if the lhs is compatible with the parameter types .
/ * ( non - javadoc )
normalize a path .
returns true if parent is null .
apply a relative path to a given relative path .
converts a separator to a system separator .
converts a separator to a system separator .
converts a separator to a system separator string .
creates a new instance of the specified class .
get the declared constructor for the given class .
search for a constructor in the given class .
returns a method with the given name and parameter types .
<p > <unk> . < / p >
generate a new instance of <unk> .
<p > <unk> . < / p >
/ * ( non - javadoc )
serializes protobuf entity to protobuf entity .
serializes protobuf protobuf entity .
convert a collection of <unk> to a <unk> .
sets protobuf field value .
<p > <unk> . < / p >
/ * ( non - javadoc )
{ @inheritdoc }
<p > retrieve start data . < / p >
create a new result set instance .
map a list of labels to a map .
checkstyle : off
<p > retrieve item places . < / p >
returns the raw type of the given type .
resolves the given { @link typevariable } .
returns the generic type of the given generic type .
get the generic type of the generic type .
<p > fill given field of given entity . < / p >
verify that the last modified timestamp is modified .
init method .
/ * ( non - javadoc )
starts the transfer process .
<unk> method .
change the directory .
close the indexer .
poll for all jobs in the process .
create a new instance of the given class .
creates a new instance of the given class .
循环向上转型 <unk> .
returns all methods of the given class .
循环向上转型 <unk> 并强制设置为可访问 .
get all of the constructors of the given class .
returns the static method declared in the specified class .
returns all methods of the given class that are annotated with the given annotation .
collects all constructors in the specified class .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a preparedstatement for a prepared statement and returns a prepared statement .
checks if the given class is valid .
add controls to the panel .
<unk> method .
<unk> method .
returns the name of the sql select statement .
add a file to this directory .
init method .
/ * ( non - javadoc )
reads the configuration from the given { @link <unk> } .
/ * ( non - javadoc )
<p > evaluate sql select . < / p >
<p > reverse entity request . < / p >
get the token from the request .
<p > <unk> . < / p >
prints a byte to stdout .
returns the class of the given type .
{ @inheritdoc }
<p > setter for <unk> . < / p >
this method reads all the attributes from the given {
reads constant pool entry .
returns null if the given string is null or empty .
<p > <unk> . < / p >
<p > <unk> . < / p >
<unk> > <unk>
compares two strings ignoring case .
returns { @code true } if the given string starts with the specified prefix .
returns true if the given string ends with the specified suffix .
returns the index of the first occurrence of the specified substring in the given string starting at the specified index .
returns the index of the last occurrence of the specified string in the given string .
returns the index of the first occurrence of the specified substring in the text string starting at the specified index .
returns the index of the first occurrence of the specified character in the given string .
get the index of the last occurrence of the specified string in the given string
returns the index of the last occurrence of the specified string in the given string .
returns the index of the last occurrence of the specified string in the specified string .
returns the index of the last occurrence of the specified string in the given array .
returns the index of the last occurrence of the specified string in the specified string .
<p > gets a substring of the given string . < / p >
<p > gets a substring of the given string . < / p >
<p > <unk> . < / p >
<p > gets the last substring of the given string . < / p >
<p > gets the last substring of the given string . < / p >
<p > <unk> . < / p >
<p > gets the string between the specified string . < / p >
<p > left . < / p >
returns the right of the given string
get the substring from the input string .
<p > repeat a string . < / p >
<p > repeat a string . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > <unk> . < / p >
<p > case insensitive removal of a substring . < / p >
<p > removes the given substring from the source string . < / p >
escapes the characters in a string and converts them to a string .
converts a string into an array of strings .
{ @inheritdoc }
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
clean the login mode .
start <unk> .
initialize message queue .
<unk> > <unk> / code > <unk>
initialize the authenticator .
<p > put entity query . < / p >
set the param .
/ * ------------------------------------------------------------
initialize the panel .
set the controls to the remote criteria .
set the value of this property .
<p > getinstance . < / p >
gets the locale for the specified locale .
returns the { @link locale } for the given locale string .
<p > <unk> . < / p >
<p > <unk> . < / p >
creates a locale from the given string .
returns an array of dateformatsymbols objects for the specified locale .
returns a relativedatetimeformatter for a particular locale .
returns the locale info for a given locale .
creates a new instance of a {
clears the list .
appends the specified element to the end of this list .
replaces the contents of the specified key in this vector with the specified key .
encodes the given input file and returns the input stream .
returns a cached { @link charsetdecoder } for the specified { @link charset } .
/ * ( non - javadoc )
writes a byte array to a file .
/ * ( non - javadoc )
<unk> method .
/ * ( non - javadoc )
gets the value of a property .
set the field properties .
create the status combobox for the status code .
prompts the user s value to add a new value to the combo box .
creates a panel with the vertical layout
returns true if the request should be skipped .
encodes the given username and password with the given username and password .
check if the request is ajax compliant .
returns true if the user agent is a robot .
sets a parameter with the given name and value .
/ * ( non - javadoc )
/ * ( non - javadoc )
builds a { @link <unk> } from a { @link map } .
tests whether a path matches a pattern .
match path to match pattern .
returns true if the tokens in the tokenized string array matches the given directory .
applies the specified curve to the current value of the curve .
checks if this rectangular bounds are the same
returns true if the specified x and y coordinates are inside the rectangle .
calculates the conjunction of this networks
calculates the union of two { @link <unk> } by the given { @link <unk> } .
counts x - coordinate of this rectangular
counts the y coordinate of this rectangular
try to expand this networks
try to convert another column to this grid
get the filename from the given path .
get filename extension from path .
<unk> method .
setupsfields method .
get a submatrix .
inserts a row into the matrix .
returns the bounds of the bounds of this component at the specified coordinates .
calculates the absolute bounds of a rectangular area
analyzes the rectangular area of this area .
returns the index of the column in the matrix .
find the return value of the return value .
initialize the grid columns
calculate the triangles
extract parameters from url .
<p > getinstance . < / p >
get a singleton instance of <unk> .
<p > synchronize <unk> . < / p >
add controls to the panel .
<p > unwraps a wrapped <code > throwable< / code > . < / p >
appends a byte to the internal buffer .
/ * ------------------------------------------------- [ union ] ---------------------------------------------------
encodes the 128 - bit hash into the specified byte array .
converts a byte array to a hex string .
parses the request .
/ * ( non - javadoc )
adds a field to this model .
sets the properties of the given bean class .
adds a named bean parameter to the request .
<unk> <unk> <unk>
adds a bean class .
<unk> <unk> <unk>
gets the bean instance .
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
/ * ( non - javadoc )
main method .
compact the code update .
copies the contents of the buffer into the buffer .
/ * ( non - javadoc )
get the { @link <unk> } for the { @link <unk> } .
evaluates the alias for the symbol table .
/ * ( non - javadoc )
returns the value of the given argument as a number .
creates a new connection .
/ * ( non - javadoc )
gets a copy of this query .
add a child to this node .
removes all the children of this node and all its children .
/ * ( non - javadoc )
returns the index of the next best solution in the list .
adds a new { @link <unk> } to this { @link <unk> } .
adds the instructions to parent and adds them to the parent .
method to construct the in expression .
gen - last : <unk>
register the work panel .
processes the given input stream and adds it to the parent scope .
adds a component to the container .
removes the specified property from the source map .
returns the preferred size of this { @link <unk> } .
******************** methods *******************************************
/ * ( non - javadoc )
<p > newinstance . < / p >
creates a new instance of type { @link <unk> } .
accept a visitor that accepts all of the types of this type .
submit a request to the server .
returns true if the given term is undefined .
applies the evaluation of the given { @link <unk> } to the given { @link <unk> } .
todo : explain
compares two collections .
/ * ( non - javadoc )
update the value of the affiliation
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
fetches the long value from the server .
/ * ------------------------------------------------------------
/ * ------------------------------------------------------------
update an exception
/ * ------------------------------------------------------------
render the start of the list
generate the clickable form of the tab .
create a new instance of this class .
obtains a value for a constructor argument .
resets the missing state .
initialize the { @link <unk> } .
returns the value associated with the given key .
returns the index of the specified key in this set or - 1 if the specified key is not in the index .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
replaces the value at the specified position in this list with the specified value .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
removes the element at the specified position in this list . shifts the element currently at that position ( if any ) and any subsequent elements to the right ( subtracts one from their indices ) .
returns true if the specified property is not null .
/ * ( non - javadoc )
calls a getter method on the target object .
checks if the given wrapper type is compatible with the given wrapper type .
<p > <unk> . < / p >
this method gets called when a bound property is changed .
converts a { @link <unk> } to a { @link <unk> } .
processes the decision for the given state .
returns the decision tree for this decision decision
returns a list of all known variables
unify two variables .
unify the var tree .
end <unk> .
compile a sentence .
compile a clause .
compiles the query .
/ * ( non - javadoc )
compile a head block .
todo : explain
initialise the <unk> .
{ @link <unk> ( <unk> ) }
recursive method .
generates a string representation of the compiled form .
encodes a { @link <unk> } into a { @link io . netty . channel . <unk> } .
encodes the given string to a string .
set the id of the attribute .
gibt den <unk> - <unk> ist .
set the value of a string attribute .
/ * ( non - javadoc )
gets the field value .
returns the { @link <unk> } associated with the specified type .
checks if a class is present in the classpath .
checks if the given class is a sub - class of the given class .
checks if the given name is a sub - class .
checks whether the given object is a subclass of a subclass of a subclass of the given class .
returns the class of the given property .
creates a new instance of the given class .
<p > newinstance . < / p >
<p > <unk> . < / p >
calls the given method with the given name and parameters .
<p > <unk> . < / p >
<p > <unk> . < / p >
returns a set of matching setters for the given class .
draw the table sizes .
returns the default url for the default maven group .
gets limited blocking queue .
gets limited blocking queue .
gets limited blocking queue .
this method will take a java . util . concurrent . queue and return a mutable list .
<p > <unk> . < / p >
creates a new queue with the specified number of elements .
offers the given queue to the given queue .
get an attribute instance from a given object .
reset the cache .
enqueue a collection of { @link <unk> } s .
performs a search for a given search step .
search for a login token .
/ * ( non - javadoc )
creates a new instance of the given {
returns a set of all possible values for this value .
returns an iterator over the elements of this stream .
find the multiplication pattern for the given plans .
calls the <unk> method of this goal .
creates states states for the given assertion .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a {
find column definition by name .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the timezone name .
/ * ( non - javadoc )
adds a dimension to the list of tableinfos .
builds and validates the cpe 2 . 0 specification .
/ * ( non - javadoc )
returns a set of free variables for a given term
todo : explain
high - accuracy method .
high - level wrapper function .
converts a {
sorts the order of entries in the given { @code entries } .
read the contents of a file into a string .
reads the contents of a file into a string .
writes the given object to the given output file .
reads the contents of an input stream into a string .
adds the given object to the end of this list .
returns { @code true } if this list contains the specified element .
inserts the specified element at the specified position in this list .
removes the element at the specified position in this list .
appends all of the elements in the specified collection to this set which are contained in the specified collection .
search for a given clause .
finds the set of instructions which satisfy the predicate .
creates a { @link <unk> } node for the given function .
apply the specified functor to the caller .
indent a new line of indentation .
/ * ( non - javadoc )
returns a list of {
implements the visitor to look for a color assignment .
allocate a point in a temporary point .
creates a local variable .
computes whether the given closure is last in the argument vector .
parses the <unk> and removes redundant data .
method to return the extinction coefficient for peptide
/ * ( non - javadoc )
computes the <unk> property .
create a functor without another .
methods inherited from methods
returns a new variable that has the given name .
executes an error handling action .
returns the sub - list of the specified page .
paints the placeholder text .
the actual painting function .
returns the minimum dimension of the dimension .
set the paint object .
documentation inherited from interface
creates and returns a new bufferedimage .
gets a buffered image from the specified image .
<editor - fold defaultstate = collapsed desc = visualization >
creates a buffered image based on the supplied image .
decode a packed image .
create a new context .
takes a request and waits for a request to complete .
/ * ( non - javadoc )
process a manifest .
/ * ( non - javadoc )
handles exceptions thrown by the service .
creates a new { @link <unk> } .
creates a new { @link <unk> } .
splits a column name into a pair of strings .
splits a list of <unk> objects into a list of <unk> objects .
pops the last command from the undo stack .
returns true if the named property exists in the database .
parses the children of a clause .
returns a set of instructions that describe the given predicate .
run the algorithm
run the search .
/ * ( non - javadoc )
relationship to <unk> relationship relationship
zap : added <unk>
deletes a service from the server .
this method is called when a key is added to the server .
performs a search for the given search type .
/ * ( non - javadoc )
the main method .
/ * ( non - javadoc )
execute a clause .
<unk> method .
/ * <unk>
get the comments from the {
returns a functor with a call to this method .
src / * ( non - javadoc )
returns a list of {
returns the name of the process variable .
$non - nls - 1$
returns the literal value of this token .
returns the comment as a string .
/ * ( non - javadoc )
consume the directive and consume it .
performs a simple binary operator .
intern the built - in http : // <unk> . github . <unk> . <unk> . <unk> . <unk> . <unk> . <unk> . <unk>
consumes a token .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
adds all elements from the given iterator to the given collection .
sets the current banner instructions .
adds a point to a dwg attribute .
obtains an instance of { @code calendar } from a year month and day . <p > this returns a { @code internationalfixeddate } with the specified fields . the day must be valid for the year otherwise an exception will be thrown .
obtains a { @code long } representing the date - time represented by the proleptic - year month - of - year and day - of - month fields .
/ * [ deutsch ] <p > erzeugt ein neues <unk> < / p >
constructs a <code > java . util . <unk> / code > with the specified year month and day - of - year fields .
/ * ( non - javadoc )
/ * [ deutsch ] <p > erzeugt eine kopie mit der angegebenen dauer . < / p >
/ * [ deutsch ] <p > erzeugt eine kopie mit der angegebenen <unk> . < / p >
/ * [ deutsch ] <p > konvertiert die angegebene anzahl in milliseconds . < / p >
/ * [ deutsch ] <p > erzeugt ein neues <unk> kalenderdatum . < / p >
/ * [ deutsch ] <p > erzeugt ein neues <unk> kalenderdatum . < / p >
/ * [ deutsch ] <p > addiert die angegebenen <unk> datum . < / p >
<p > -----------------------------------------------------------------------
writes a { @link <unk> } to a { @link string } with the given { @link <unk> } .
writes a { @link java . nio . bytebuffer } to a { @link string } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns true if {
returns the key - value mapping for this key .
reset the hash table .
/ * ************************************************************************
returns the mapping of {
/ * <unk>
resizes the hash table .
convert a 32 bit integer into a 32 bit integer .
convert a 32 bit integer into a 32 bit integer .
mix two int values .
documentation inherited from interface
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
load an instance of the given symbol table .
returns an iterator over the set of variables in this set .
returns the entropy of a vector .
computes the remainder of an { @code double } array .
compute the percentiles for the given distribution .
returns the row means for the given data .
/ * ( non - javadoc )
/ * ( non - javadoc )
sets the tick values .
/ * ( non - javadoc )
perform the given action on the specified form .
runs the { @link <unk> () } method on the target { @link <unk> } .
creates a base url for the given path .
execute request info .
get headers .
create a <code > map< / code > from the given <code > <unk> / code > .
get the parameters for this request .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
get session attributes map .
/ * ( non - javadoc )
<unk> <unk> <unk>
/ * ( non - javadoc )
builds a string representation of the map values .
/ * render an array value .
run a search algorithm .
sets the current state of the clip to the given state .
returns a lucene document term term for the given term .
compares two search nodes .
/ * ( non - javadoc )
replies the delta of the registers .
notify listeners that a listener has been changed .
inserts the specified character at the given index .
<! -- start generic documentation -- >
return a new { @link shape } with the specified options .
creates a new { @link shape } with the given parameters .
adds a variable to the solver .
enters a new functor .
creates a new { @link <unk> } from the { @link clause } .
paints the top level relatively .
returns a boolean indicating whether the given atom is a top - level symbol .
appends all of the elements in the specified collection to the end of this list in the order that they are returned by the specified collection s iterator .
/ * ( non - javadoc )
returns an array containing all of the elements in this list in proper sequence .
returns an array containing all of the elements in this list in proper sequence ( from first to last element ) ; the runtime type of the returned array is that of the specified array . if the list fits in the specified array it is returned therein . otherwise a new array is allocated with the runtime type of the specified array and
/ * [ deutsch ] <p > liefert eine kopie dieser instanz . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
apply the specified functor to the module .
sets the parameters of the given arguments .
/ * ( non - javadoc )
returns true if the binary {
/ * ( non - javadoc )
adds a property change listener .
updates the state of the buttons .
updates the state of the buttons for the given work flow .
register a { @link <unk> } .
identify a cycle in the pipeline .
get the logger for the given class .
changes the color of the image .
creates an instance of the specified class .
returns the cell associated with the given variable path .
returns true if the binding is bound .
returns the value of the <code > <unk> / code > property as a <code > int< / code > .
gets the column attribute value .
sets the row attributes for the given element .
returns the column attribute value or null if not found .
returns the value of the specified attribute in the current row or <code > null< / code > if no attribute is found .
internal method to insert a fdbigint into the table .
returns the value of the <unk> property .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
move the viewport to the world model .
{ @inheritdoc }
/ * package private
generates a random {
visits this time range .
creates a new instance of the given {
returns true if the string is empty .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * <unk>
returns the position of the node at the specified position .
gets the parent context .
creates a new { @link <unk> } .
creates a new { @link <unk> } .
creates a new { @link <unk> } .
creates an operator operator .
creates the initial context .
{ @inheritdoc }
change registers and return the <unk> .
returns the value of the variable with the given name .
find the next transitions .
ensure that the first node in the tree matches the given path .
get the variable info for a variable .
returns the element at the specified index .
returns a { @link cursor } as a { @link cursor } .
/ * ( non - javadoc )
sets the value of the scaling .
/ * ( non - javadoc )
/ * ( non - javadoc )
skips the given number of bytes .
compile the contents of the body parameters .
compile a call body call .
gathers the condition argument from the given disjunction .
gather the terms from the given {
/ * ( non - javadoc )
visit a clause .
retrieves and returns the specified key in this map .
returns the value associated with the given key .
reads a 32 - bit integer from the given byte array starting at the given offset .
write an int to the stream
write an int to a byte array
reads a big - endian int from the given byte array starting at the given offset .
reads a short from the byte array at the given offset .
write an int to a byte array
compile the body of a call call .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an {
returns the id of the attribute .
add a value to the list .
set the value of the attribute .
split a string separated by a delimiter .
returns a string representation of the given array
converts a string to lower camel case .
<unk> <unk> <unk>
an expectation for {
/ * ( non - javadoc )
get the current configuration .
returns a stringbuffer for the given handlers .
build the html code for the post request .
build the message route workflow .
creates a new { @link term } for the given term .
adds the specified functor .
adds a variable to the context .
appends the given predicate to this builder .
encodes a clause .
creates a new context object .
/ * ( non - javadoc )
resolves a call to { @link <unk> ( int ) } .
adds a reference address to the symbol table .
adds a new address to the symbol table .
sets the field information for the specified field .
sets the internal identifier for the job .
joins this node with the specified path .
$non - nls - 1$
set the { @link <unk> } for the given id .
/ * ( non - javadoc )
returns the last element in the path .
serialize the object .
custom deserialization .
gets the value of the { @link <unk> } .
/ * ( non - javadoc )
returns true if the {
adds the specified value to the end of this bucket .
removes the element at the specified position in this list .
initializes the bucket with the specified bucket size .
gen - end : initcomponents
exception handling for generic errors .
writes the given string to the target string .
this method is used for connecting to the <unk> channel
this method is used to decrypt data such as <unk> and <unk>
this method is used to write out the encrypted data to the encrypted output buffer .
/ * ( non - javadoc )
this method closes the outbound ssl session and ssl handshake .
infers the cast types for a predicate .
generates an iterator for all the terms in the given clause .
returns an iterator over all moments - th term moments .
enters the specified functor at this <code > <unk> / code > .
creates a new {
inserts an attribute into the table .
select a row from the text grid .
/ * ( non - javadoc )
/ * ( non - javadoc )
fetches the id of the id from the server .
fetches the type of message route .
/ * ------------------------------------------------------------
this method creates a new { @link <unk> } for the given { @link <unk> } .
/ * ( non - javadoc )
create a new { @link java . util . concurrent . <unk> } with the default { @link <unk> } .
infers the set of terms for the given clause .
{ @inheritdoc }
{ @inheritdoc }
initializes a variable declaration .
override handlerequest in order to be controlled by the application .
creates a {
fetches the specified symbol from the cache .
initializes the symbol .
returns an iterator over the elements of this distributed distributed object .
<unk> - <unk>
pack a int value into a byte array .
getter for bitrate
returns the size of an integer .
returns the size of an integer .
computes the integer value of an integer integer .
compute the size of an integer .
get the 32 - bit integer count from the given int value .
encodes the given long value into a probability {
<p > gets the number of digits of a decimal point . < / p >
creates a { @link rubyrange } by given longs .
changes the color map .
/ * ( non - javadoc )
sets the head of the head of the list .
set the stack .
/ * ( non - javadoc )
get the { @link <unk> } from the keras { @link <unk> } .
save work flow .
discards any work flow .
/ * ( non - javadoc )
returns true if the predicate evaluates to true .
/ * ( non - javadoc )
/ * ( non - javadoc )
get the html code for a component .
/ * ( non - javadoc )
/ * ( non - javadoc )
generate a list of permutations of the permutations of the permutations .
/ * ( non - javadoc )
examines the given class and creates a new array .
returns a new { @code list } of { @code functor } s at the specified { @code functor } .
sets the value of the { @link <unk> } .
/ * ( non - javadoc )
returns the amount of time taken from { @code <unk> } to { @code <unk> } .
adds an attribute to the list of attributes .
method to construct the in expression .
/ * ( non - javadoc )
/ * ( non - javadoc )
get properties from classpath .
returns the {
adds a functor to the head of the list .
creates a new {
todo : explain
visits all the variables in this visitor .
transform a { @link <unk> } into the pan variable .
retrieves whether the given { @code term } is a { @link vector } .
returns a copy of the substring at the specified position .
compares the names of the inodes in the sorted order .
converts a byte array to a string .
compute the hash code of a symbol .
creates a new { @link <unk> } using the default { @link <unk> } .
clean up the websocket connection .
/ * ( non - javadoc )
returns true if the device is already connected .
fire a new connector
visit all children of the given visitor .
returns true if the given clause evaluates to true .
applies the given functor to all registered terms .
visits all terms of the given variable .
method that must be called after methods to initialize methods for methods
prints the row counts .
get progress for item return item
attempts to get a link when adding a self link .
calls { @link <unk> ( string ) } to create a new { @link form } .
/ * ( non - javadoc )
zap : added @throws <unk>
build the html for the control .
/ * ------------------------------------------------------------
build the control group control group @throws control
submit a request to the server .
this method is called when the router is locked .
applies the specified functor to the stack .
stage a functor .
/ * ( non - javadoc )
returns the value of the checked value of the control .
compile a {
commits the transaction .
finalize the transaction .
<p > <unk> . < / p >
attempts to add an operation to the cache .
deletes a global write lock .
releases the server lock .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
inserts the specified element at the tail of this queue waiting if necessary for the specified element to become available . if the queue is empty then the specified time will be <code > false< / code > .
retrieves and removes the head of this queue or returns { @code null } if this queue is empty .
/ * ( non - javadoc )
retrieves but does not remove the head of this queue or returns { @code null } if this queue is empty .
/ * ( non - javadoc )
inserts the specified element at the tail of this queue waiting if necessary for space to become available .
inserts the specified element at the tail of this queue waiting if necessary for space to become available .
/ * @awisniew - added
adds a collection to the given collection of elements .
/ * @awisniew - added
inserts the specified element at the tail of the queue .
inserts the specified element at the end of the queue .
/ * ( non - javadoc )
check if a system property should be parsed .
returns the value of the <code > <unk> / code > keyword .
check the <code > <unk> / code > for <code > null< / code > if the value is <code > null< / code > .
get the duration for a system property .
check if the <code > string< / code > is <code > null< / code > .
returns the value of the <code > <unk> / code > keyword .
add the system property to the index .
@see <unk> ( string boolean )
gets the short value for the given key .
add the given record to the keyword .
add the given long value to the given record .
add the given value as a float .
returns the value for the given double value .
add the record to the index .
/ * keyword
/ * ( non - javadoc )
add the polling property to the given value .
add the given long value to the list .
add the given flag to the index .
sets the specified double property .
gets the value of a property as a double .
gets the value of a property as an integer .
gets the value of a property as a double .
load arguments .
sets the array of { @link <unk> } s .
/ * ( non - javadoc )
get html connection .
performs a depth - first traversal of the given search tree .
backtracks to a given node .
<p > a list of <code > <unk> / code > instructions . < / p >
decode a query string
returns a byte [] representing the packet s packet .
get the required bytes of a byte buffer .
creates a new { @link set } of { @link variable } s .
loads a heap tag from the dom .
/ * ( non - javadoc )
/ * ( non - javadoc )
get attribute value .
add a value to the map .
returns all fields of the given class or null if not found .
main method .
{ @inheritdoc }
appends the classpath to the given path .
reads data from this buffer into a byte array .
returns the value associated with the given key .
returns the value associated with the given key .
appends the specified element to the end of this list .
returns the index of the first item in this list or null if no such element exists .
creates a new { @link <unk> } with the given function .
creates a { @link set } of { @link <unk> } s that are members of this queue .
opens the panel .
internalxbase . g . <unk>
gets a new <unk> from the given <unk> .
gets a {
gets the <unk> captured by this compiler .
gets a {
add operator .
todo : explain
todo : explain
reset the reader .
search for a cycle .
returns an iterator of all the variables in this set
loads properties from an input stream .
read properties from a file .
get properties from a url .
parses the { @link properties } identified by { @link pathname } .
{ @link <unk> ( java . util . properties ) }
returns true if the given string is a valid {
<editor - fold defaultstate = collapsed desc = visualization >
computes the dimensions of the grid .
initializes the width of the font metrics .
adds a listener to the collection of listeners .
add a listener for a collection of listeners .
remove a propertychangelistener for a specific property .
fire the property change event .
/ * [ deutsch ] <p > erzeugt ein neues <unk> ; ssel . < / p >
compile the parser body arguments .
/ * ( non - javadoc )
apply a fade factor to the specified { @link <unk> } .
creates a {
/ * runs the given visitor for this visitor .
initialize the contents of the frame .
create a new { @link <unk> } .
create a jframe with the specified component and the specified title .
shows the left pane of the left pane .
sets the right pane of the right pane .
sets up the { @link <unk> } .
show the horizontal button bar .
build the left bar options
shows the right bar content .
/ * ( non - javadoc )
gets the list of { @link link } s .
/ * ( non - javadoc )
sanitizes a set of submitted form .
loads the tag controls .
waits for the first call to {
waits for the specified amount of time to be increased .
{ @inheritdoc }
append classpath .
creates a new instance of the given date type .
visit a call hierarchy .
free the bindings .
an expectation for { @link <unk> ( charsequence ) } .
/ * ( non - javadoc )
prints the version .
/ * ( non - javadoc )
evaluates a sentence .
/ * private boolean <unk> () { return <unk> ; }
get whether or not the given type is required .
/ * ( non - javadoc )
capitalizes the first letter of a character .
returns the { @link <unk> } represented by this { @link <unk> } .
get the string representation of a multi - type string .
convert a long to a biginteger
creates a <code > <unk> / code > for the given <code > type< / code > .
get a data type from a string .
parses the given string as a string .
returns the component type of the given object .
convert a string to a java object .
parse the given { @link class type } as a { @link class } .
/ * ( non - javadoc )
add a list of metrics to the machine .
enters a new functor .
evaluate the bounds of a variable .
returns <tt > true< / tt > if this map contains a mapping for the specified key .
/ * ( non - javadoc )
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
/ * ( non - javadoc )
returns an iterator over the elements of this stream .
/ * ( non - javadoc )
/ * ( non - javadoc )
replaces all the occurrences of a character in the given string with the specified character .
returns the character at the specified key .
creates a new { @link shape } with the specified options .
creates and returns a new { @link <unk> } with the specified { @link <unk> } .
fire the removal event .
internal insert method .
parses and parses a sentence and returns it .
acknowledges a task shutdown .
computes the difference between two search nodes .
/ * ( non - javadoc )
parse operators from the given terms .
/ * ( non - javadoc )
get the operators that match a particular fixity - by identified by the arg name .
/ * public static <unk> ( <unk> > <unk> ) { return <unk> ; }
matches the given node .
creates a new instance of { @link <unk> } .
/ * ( non - javadoc )
/ * ( non - javadoc )
<p > <unk> . < / p >
returns the description of the code .
returns the value of the specified manifest property .
returns the {
parse command line arguments .
sets the trailing { @link <unk> } property .
creates a properties object from a properties file .
adds an option to the list of curated arguments .
parses an array of free args arrays .
adds the argument to the <code > <unk> / code > <code > <unk> / code > .
returns a new stream that contains all elements of the given iterator .
gen - last : <unk>
<p > sets the <b > options / b > option to use . < / p >
get the options for this command .
sets the current indicator . <p >
returns the actual list of storage stemmer .
reads the plaintext from the given word .
main method .
evaluates the expression as numeric .
/ * [ deutsch ] <p > erzeugt ein neues <unk> ; ssel . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a <unk> .
returns a {
<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>
/ * [ deutsch ] <p > ermittelt den <unk> eines <unk> . < / p >
trace the next line .
decodes a string guaranteed to be dereferenced .
internal function to call internal { @link com . <unk> . <unk> . <unk> . <unk> . <unk> } method .
/ * internal method for internal expr call
resolves the macros in the { @link <unk> } .
/ * ( non - javadoc )
returns the value of the specified stack frame .
<unk> <unk> <unk>
scalarization values .
fills the log with the specified address .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the similarity of two vectors .
<p > acquire a constant value of leases . < / p >
prints a slot to the stack .
gets the random state from the system .
convenience method to convert a string into a byte array .
gets a copy of { @link iatomcontainer } s from the provided { @link iatomcontainer } .
returns a list of random operators that can be applied to the given solution .
/ * ( non - javadoc )
swaps two { @link charsequence } s at the specified location .
update the { @link <unk> } with the given { @link operator } .
finds the intersection of two rectangles .
convert a byte array to a string .
utility method to get the correct state of the current user .
configure the log4j logger .
formats a message to a string .
converts java . util . logging . level . <unk> to java . util . logging .
adds a message to the queue .
/ * ( non - javadoc )
/ * ( non - javadoc )
acquires a new request .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
retrieves and returns the index of the head of this queue waiting up to { @code <unk> } if the queue is empty .
adds all of the elements in the specified collection to the queue .
{ @inheritdoc }
returns an { @link java . util . concurrent . blockingqueue } for the specified element .
returns a { @link <unk> } that writes the capacity of this queue to the given queue .
/ * ( non - javadoc )
/ * ( non - javadoc )
increment the size of the record .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
constructs a { @link <unk> } with the given { @link string } and { @link string } s .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
************* lists ****************
/ * ( non - javadoc )
/ * ( non - javadoc )
************* smarts ****************
/ * ( non - javadoc )
returns a list of points in the definition of a list of parameters .
/ * ( non - javadoc )
add a mixin to a rule .
************* group ****************
************* tables ****************
returns the cell declaration cell .
/ * ( non - javadoc )
belscript :: = ident ;
barline :: = ( * expression ) * | * | arguments | arguments | arguments | arguments | arguments | arguments | arguments | arguments | arguments | arguments | arguments | arguments | arguments | arguments | arguments | arguments | arguments | arguments | arguments | arguments | arguments | arguments | arguments | arguments | arguments | arguments |
returns the cell filter function .
barline :: = ( * | ? ) * | | | | | | | | | | | | | | | | | | | | | | ( | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
get - argument :: = hash - > hash = value
tune - field :: = ( non - javadoc )
xcom - <unk> :: = ( 1 * digit ) * ( <unk> * digit ) * ( 1 * ) * ( <unk> * digit ) * ( 1 * digit ) * ( 1 * digit ) * ( 1 * digit )
************* smarts ****************
/ * ( non - javadoc )
************* smarts ****************
************* smarts ****************
ifield - tempo :: = %5b . <unk> . %3a * wsp tempo %5d<p > e . g . <tt > [ a : ] < / tt >
calculates the spacing between two lines .
tempo :: number< - number - number - tempo :: =
************* entities ****************
comment :: = <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> / <unk> = <unk>
literal - spacing :: = ( 1 - digit ) * literal ( sequence ) - > ^ ( literal ) - > ( 0 - digit )
open a new scope with the given name .
open a new variable reference .
capture the stack trace of the exception .
sets the maximum height of the matrix .
/ * ( non - javadoc )
returns the value of the column with the given row and row .
removes a row from the table .
returns the maximum mapped column size for the specified column .
adds a new cell to the end of the cell at the specified cell .
notifies the listeners about the listeners .
updates the maximum column sizes .
executes the given action in the given form .
/ * ( non - javadoc )
transform the functor to another .
/ * ( non - javadoc )
execute an action in the chain .
compile a sentence .
replace the built dependent on the given <unk> .
this method initialises the symbol table .
top level check .
compile the body of a call call .
returns a string representation of the configuration .
removes all of the mappings from the <unk> .
associates the specified { @link <unk> } with the given { @link <unk> } .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced by the specified value .
associates the specified { @link <unk> } with the specified key in this map . if the map previously contained a mapping for the key this method returns <code > null< / code > .
enters a new {
returns a set of composite symbol keys for the composite key .
returns the value of the combo box model .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
sets the { @link <unk> } to the given { @link <unk> } .
/ * ( non - javadoc )
opens the <unk> .
method to construct the in expression .
report the success of the connection .
/ * ( non - javadoc )
/ * ( non - javadoc )
blocks until the termination of the max is reached .
adds a listener to the list of listeners .
adds a listener to the list of listeners .
create states states for a goal .
adds the specified element to the end of this list .
retrieves and removes the element at the head of the list .
computes the smallest power of two bits .
updates the minimum and maximum suffix of the given node .
compare two nodes .
inserts a node into the list .
wait for the coordinator to complete .
start the background thread .
gets the monitor id for the given metric identity .
associates the specified value with the specified key in this cache . if the map previously contained a mapping for this key the old value is replaced .
associates the specified value with the specified key in this cache .
copies all of the mappings from the specified map to this cache .
removes all expired entries from the cache .
fetches the name of the name .
build the html control control object .
returns an instance of {
convert an iterable to a set .
returns a list of values for the given array of values .
returns an iterator over all { @link <unk> } s that match the given method .
scalarization values based on the nash <unk> solution .
this method initializes jframe
merge series of adjacent elements .
convert a byte array to a bytebuffer .
compile a block of body arguments .
compile the body of a call call .
restore values .
returns the value of the specified property .
sets the value of the specified property on the given class .
/ * ( non - javadoc )
/ * public static void <unk> ( string datasource ) { try { <unk> . <unk> () ;
the main method .
documentation inherited from interface
documentation inherited from interface <unk>
calls { @link <unk> () } to get the status of the request .
returns the link with the given rel .
removes and returns the element at the top of the stack .
<p > <unk> . < / p >
this method is called when a reset is reset .
this method is used to update the bytecode of a bytecode .
prints the row counts .
sets the { @link keystroke } to use when the key is created .
converts a modifiers to a string .
/ * ( non - javadoc )
~ methods **************************************************************************************************************************************
generates a new table attribute .
fire the attribute change event .
convert a string to an integer .
convert a string to a date
<unk> > <unk>
checks if the given string is a valid date .
<unk> > <unk>
get the token source for the given string .
read a token from a file .
create a token source for the given input stream .
returns the next token in the current token .
returns the next token in the current token .
/ * ( non - javadoc )
( non - javadoc )
looks to see if the reader is a <unk> variable .
get the symbol at the given symbol .
create an instance of {
render the table columns .
returns a list of all motifs in the given list .
/ * ( non - javadoc )
/ * runs the given visitor for this clause .
{ @inheritdoc }
returns an { @link observable } that returns a { @link successor } with all of the { @link successor } s of the given { @link predicate } .
returns <code > true< / code > if this <code > cell< / code > is empty .
returns the argument at the given index .
/ * ( non - javadoc )
attempt to return the <code > <unk> / code > of the recipe specified by <code > <unk> / code > .
query the score matrix for the query .
/ * ( non - javadoc )
accept a geometry transformer .
returns a string representation of the given arguments .
retrieve the given { @link <unk> } from the given { @link <unk> } .
retrieve an { @link <unk> } for the specified { @link <unk> } .
/ * ( non - javadoc )
this method is called when a reset is reset .
<p > this method is used to update the serial scale of a method . < / p >
registers a <code > <unk> / code > registers on the slave .
writes the registers on the slave .
method to create a list of <unk> for the specified class .
set the code buffer of this class .
returns an instance of the default property .
calculates a random instance .
sets the type of the given type .
scan class source .
print a solution
print environment variables .
returns a string representation of this instance for a given {
constructs a { @link map } from the given { @link tagk } and { @link variable } s .
sets the operator .
make a list of <unk> from the specified symbols .
/ * ( non - javadoc )
$non - nls - 1$
<unk> <unk> <unk>
<p > returns a new instance of <unk> . < / p >
<p > returns the time in milliseconds from the current uuid . < / p >
get elapsed time in milliseconds .
stop the <unk> playback .
update the current track
marshall the track information .
/ * ( non - javadoc )
update the help for the specified playlist .
update help for a playlist .
generates a list of all the resources associated with this { @link <unk> } .
/ * ( non - javadoc )
handles requests to be output .
invoked when the <unk> is triggered .
/ * ( non - javadoc )
ask the specified { @link <unk> } to commit the specified { @link <unk> } .
end of the playlist .
/ * ( non - javadoc )
creates a new connection .
shuts down the connection listeners .
get the xml version of the parser .
/ * ( non - javadoc )
process packet .
set the { @link <unk> } for the cli command .
creates a new chat or creates a new one if none exists .
try to get a <unk> from the given <unk> . returns null if none exists .
returns a list of { @link <unk> } s for the given { @link string } .
/ * ( non - javadoc )
resets the state of this annotation to the given value .
sets the value of the specified key to the specified value .
adds a filter to the image .
/ * ( non - javadoc )
/ * ( non - javadoc )
calculates the hmac - sha1 signature for the given data and key .
/ * ( non - javadoc )
add a acl to the acl .
remove acl .
{ @link <unk> ( java . util . map ) }
/ * ( non - javadoc )
sets the { @link net . dv8tion . jda . core . permission permissions } for the specified { @link net . dv8tion . jda . core . permission permissions } .
returns an unmodifiable view of the sorted map .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the next packet from the queue .
/ * ( non - javadoc )
sends a get request to the server .
/ * ( non - javadoc )
create a new { @link <unk> } .
get event if identification is present .
<p > <unk> . < / p >
/ * ( non - javadoc )
creates a new { @link serverservicedefinition } whose { @link methoddescriptor } s extends { @link methoddescriptor } .
/ * ( non - javadoc )
/ * ( non - javadoc )
******************** methods *******************************************
starts the given { @link runnable } with the given { @link runnable } .
shuts down the executor service .
/ * documented <unk>
returns a view of the elements filtered by the given predicate .
/ * ( non - javadoc )
unmap a { @link mappedbytebuffer } .
cleans up all the entries in the map .
remove the entry from the cache .
returns null if value is null .
hash a supplemental hash .
test whether two objects are equal .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
returns the entry corresponding to the specified key in this table .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
increases the capacity of this <tt > arraylist< / tt > instance with the specified capacity .
/ * ( non - javadoc )
/ * ( non - javadoc )
remove the entry from the hashmap .
removes the specified element from this map if it is present .
removes all mappings from this <code > <unk> / code > .
adds a new entry to the hashmap .
/ * ( non - javadoc )
returns an immutable copy of the specified { @code keys } .
converts a string to a date
converts a date string to a date object .
gets the name of the extension .
normalize a path .
strips the host from a uri .
strip the host and port from a string .
checks if the given string is a valid server - side string .
encode a string .
replaces all placeholders in the supplied string .
sanitizes a string so that it can be used as xml .
generates a sha - 256 hash of the avatar
converts a byte array to a hex string .
converts a string to a byte array .
encodes a byte array into base64 notation .
decodes a base64 encoded string .
generates a random string from a given length .
{ @inheritdoc }
sets the { @link com . opencms . android . support . <unk> } functionality .
set the {
sets the previous stage of the previous previous stage .
sets the value of {
set the current playback state .
sets the instance of the tag .
<p > a list of { @link playlists } objects . < / p >
creates resourcebuilders .
handles a sub volume .
handles a sub - resource .
/ * ( non - javadoc )
get the cache for the given scope .
returns a thread cache for the given name .
/ * ( non - javadoc )
/ * ( non - javadoc )
{ @link <unk> ( java . util . map ) }
returns the key for the given category .
encodes the given string using utf - 8 encoding .
returns a {
returns a map of field names and values from the given properties .
returns the shard color for the given name .
decodes a string from a string .
<p > <unk> . < / p >
convert an object to a session .
<p > <unk> . < / p >
delete the content of the given path .
checkstyle : off
/ * ( non - javadoc )
returns the instance of the {
initializes the { @link executorservice } .
handles the {
send a connection to the server .
sets the ping interval .
schedules a ping request .
start the daemon .
destroy method .
/ * ( non - javadoc )
removes the mapping for the specified key from this map if it is present .
/ * ( non - javadoc )
removes all page sources from the page .
adds a command line option .
like { @link <unk> ( <unk> ) } but allows you to add additional options .
adds an option to the option group .
returns true if the command line is a command line option .
parse the command line arguments and options .
prints the help message .
/ * package
pauses the server .
initializes the connection to the server .
establishes a connection to the server .
/ * ------------------------------------------------------------
returns the compression handler for the compression method .
returns whether the compression method is enabled or not .
log a message .
/ * ------------------------------------------------------------
connects to the server .
notifies the readers of the connection .
stops the server .
registers a class with the given name .
gets the list of registered saslmechanism .
the method to renew the sasl mechanisms .
performs sasl authentication .
handles an authentication request .
get the value of the named property .
creates a lock .
/ * ( non - javadoc )
/ * ( non - javadoc )
execute a mojo .
parse command line arguments .
log a info message .
log an error .
log a message .
convenience method to create an instance of { @link <unk> } .
register an event that occurs in the identification .
notify all listeners that have been registered .
<p > generates a { @link <unk> } <br > < / p >
unregisters the resource with the given string .
{ @inheritdoc }
<p > <unk> . < / p >
returns the resource with the given rel .
returns an unmodifiable view of the specified { @code map } .
gets cached value for the given key .
get the cache key
remove a resource from cache .
execute a cache .
<p > <unk> . < / p >
returns a list of all the classpath components supported by the classpath .
/ * ( non - javadoc )
check whether the given update is a jar file .
adds the sasl strength uris .
adds a list of algorithms to the compound .
executes the debug process .
/ * ( non - javadoc )
execute the given callback for the given service .
/ * ( non - javadoc )
/ * ( non - javadoc )
write stats .
tries to obtain a { @link <unk> } from the given { @link file } .
/ * ( non - javadoc )
/ * ( non - javadoc )
register the default converters .
similar to {
/ * ( non - javadoc )
{ @link <unk> ( string ) }
create a new instance of { @link <unk> } .
validate the password against the specified host and password .
create a new { @link shardedjedispool } .
create a new { @link shardedjedispool } .
creates a <unk> from a specific <unk> .
gets the add error .
initializes the <unk> identification .
initializes the <unk> identification .
ask the player to display the specified command
factory method to create a playlist .
create a { @link <unk> } which can be used to retrieve a playlist .
/ * ( non - javadoc )
sends the specified message to the end of the stream .
append a url to the url .
adds a query parameter to the query .
adds a query parameter to the query .
adds a query parameter to the soap client .
appends a query parameter to the url .
get the list of { @link playlist } s for the given { @link <unk> } .
this method is called from within the constructor to initialize the form . warning : do not modify this code . the content of this method is always regenerated by the form editor .
gen - last : <unk>
start startup .
returns true if the given url is a valid url .
gen - last : <unk>
returns an imageicon or null if the path was invalid .
/ * ( non - javadoc )
the main method .
resets the values of this array to the specified value .
returns a { @link map } representation of the contents of this { @link dataset } .
merge array text .
check if the given value is a jsonarray .
get the int value associated with a key .
returns the integer value for the given index .
returns the value converted to double . if the value is a { @link string } it is converted to a { @link double } .
encodes the object value as a json string .
capture command resource .
returns true if the longest command has changed .
connect to a protocol .
executes the given command with the specified command .
creates a new { @link <unk> } for the given { @link <unk> } .
creates a session size estimates for the given keyspace .
/ * ( non - javadoc )
create a new { @link jediscluster } with default pool configs .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
get the bound values for the given query .
shortcut for {
execute cql statement .
execute the {
/ * ( non - javadoc )
executes the {
executes the given row descriptor .
execute the given {
opens the session .
<p > <unk> . < / p >
deletes a table .
opens a callback for the specified task number .
see https : // api . microsoft . com / <unk> / <unk> / <unk> / <unk> . html
execute cql statement .
execute a batch of batch statements .
helper method for deleting a table
filters the specified jar .
get the subclasses of the given class .
returns a set of subclasses of a class .
creates a { @link set } of { @link class } s for the given class .
find all classes in the given directory .
<unk> > <unk>
returns a new resource minimal for the given resource .
returns a new resource minimal for the given resource .
returns a new resource minimal for the given resource .
returns a list of all the resources in this list .
return the number of keys in the map .
generates a list of events based on the given event .
/ * ( non - javadoc )
waits for the outbind to complete .
process a packet .
returns a set view of the given set .
{ @link <unk> ( <unk> ) }
creates a new instance of { @link <unk> } .
creates an iq / error message .
create a new <unk> instance .
creates an { @link <unk> } from an incoming request .
invoked if the { @link <unk> } is a { @link <unk> } .
returns a synchronized ( thread - safe ) sorted map backed by the specified sorted map .
returns a { @link comparator } that performs the { @link <unk> () comparator } of the { @link <unk> () comparator } .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a set view of the given set .
sets the name of the packet .
/ * private void <unk> ( string name ) { if ( <unk> == null ) { this . <unk> () ; }
returns all the roster groups in this group .
returns true if the given object is equal to this one .
/ * ( non - javadoc )
/ * ( non - javadoc )
removes all properties from the cache .
returns a list of all the values in the cache .
create a new { @link <unk> } instance to be used inside { @link <unk> }
create a new instance of { @link <unk> } with { @link <unk> } and { @link <unk> }
create a new { @link list } from a { @link list }
/ * ( non - javadoc )
helper method to create a list of { @link <unk> } s from an identification block .
reloads the roster .
creates a new roster group .
creates a new roster item .
removes a roster entry from the group .
returns all the entries in this roster .
returns the roster entry corresponding to the given xmpp user id .
returns the presence info for a given xmpp address or <tt > null< / tt > if no presence information is available .
returns the presence information for a user s presence or { @link presence } if no presence information is available for a given resource .
returns a list of presence objects for a given xmpp address .
----- private methods -----
checks for presence of offline offline connection .
fire a roster change event .
resets the password hash for a token .
<p > creates a new { @link <unk> } for the given { @link resource } . < / p >
setter for the value .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns a list of { @link <unk> } s for the given index .
this method creates an { @link <unk> } for identification .
returns a synchronized ( thread - safe ) map backed by the given map .
removes all objects from the cache .
sets the volume of the player .
gets the { @link <unk> } s associated with the given { @link <unk> }
ask the player to ask the player to ask the player to ask the player to be played .
create a player for the specified track info .
ask the specified player to create a player for a specific playlist .
create a player for a specific playlist .
invoked by the { @link <unk> ( event ) } method .
add a new listener .
creates the <unk> .
reload the properties from the properties file .
returns a stream error for the given element .
returns a list of <unk> .
returns a list of all the methods in the given { @link <unk> } .
parse a list of <unk> .
returns the object represented by the given class
asynchronously creates a request for identification .
same as {
finds the conversion request for identification .
protected to facilitate mocking
finds the conversion request .
registers an { @link <unk> } with this { @link <unk> } .
creates a new { @link com . hazelcast . core . filter } that rejects the given { @link object } .
creates a new { @link <unk> } that is equal to the given { @link object } .
create a comparator that compares two counter objects .
/ * documented <unk>
get the current playback state from resource .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
/ * ( non - javadoc )
returns a { @link set } view of the entries contained in this map .
returns a { @link set } view of the keys contained in this map .
returns a new collection containing all the values in this map .
removes all of the elements from this queue .
removes the entry for the given key .
returns the value associated with the given key .
/ * ( non - javadoc )
creates a new {
serialize the object .
reconstitute the <tt > <unk> / tt > instance from a stream .
/ * ( non - javadoc )
sets the <unk> .
bootstraps a resource with the given parameters .
send a message to the chat .
send a message to the queue .
renders a single message .
initializes the configuration .
<unk> method .
initializes the application application .
<unk> method .
initialize the output directory .
loads a document from the classpath .
write a file to a file
gets the <unk> for the given event model .
returns a new collection view of the union of the specified collections .
checks if the specified file exists .
discover service resolver .
/ * ( non - javadoc )
returns the { @link inputstream } of the { @link <unk> } .
/ * ( non - javadoc )
returns the object s attributes .
add attributes to the given map .
returns the <unk>
finds the stop conversion service .
attempt to verify that the given { @link <unk> } matches the given { @link <unk> } .
initializes a specific crumb identifier .
creates a {
create a new { @link jediscluster } with default pool configs .
gets a specific cluster from the server .
creates a session from a session identifier .
/ * ( non - javadoc )
/ * ( non - javadoc )
creates a new <unk> .
@throws <unk> <unk>
/ * ( non - javadoc )
returns a new { @link set } of { @link packet } s added to this packet .
adds a listener to the packet .
adds a listener to the packet .
fire the { @link <unk> } to all registered { @link <unk> } s .
add a new stanza to the interceptor chain .
fires packet interceptors .
initialize the debugger class .
<p > sets the value of the specified field to the specified value . < / p >
/ * ( non - javadoc )
/ * ( non - javadoc )
sends a timer to the server .
/ * ( non - javadoc )
returns the current thread s name in the current environment .
----- private methods -----
adds a key - value pair to the cache .
this is cheap .
returns a set view of the keys contained in this map .
/ * ( non - javadoc )
/ * ( non - javadoc )
returns the value of the specified element at the specified index .
looks up a list of commands for the given thread .
associates the specified value with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced by the specified value .
compare two objects .
get the value for the given key in the interval .
get the value for the given key .
returns the next node in the tree .
removes the next node from the tree .
----- private methods -----
translate a { @link <unk> } to a { @link node } .
mostly it s designed for one - step operation to complete the copy operation .
check if the specified node is red or not .
returns { @code true } if the specified node is a color .
/ * package private
/ * package
returns a new array with the given child at the given index .
returns { @code true } if the specified entry is not <code > null< / code > .
returns the right child of the given node .
unlink the right child of a node .
returns true if the specified entry is a left color .
check if the given node is a right child .
rotate right .
rotate right .
removes the current node from the current node .
removes the node from the tree .
removes the top - level node from the tree .
<unk> the position of the node .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
returns <tt > true< / tt > if this map maps one or more keys to the specified value .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
this is cheap .
replaces all the values in the given { @code map } with the values from the given { @code map } .
returns the node that matches the specified key .
removes the mapping for this key from the cache .
deletes all expired entries .
handles the following steps : <ul > <li > if the <code > <unk> / code > parameter is set to <code > true< / code > the <code > <unk> / code > will be deleted . < / p >
ds method to activate this component .
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
retrieve the specified playlist .
create a player player for a playlist .
get a playlist of the specified type .
initializes the roster store .
opens a roster store with the given base directory .
put a key - value pair into the cache .
returns the ip address of the network interface .
returns a list of local ip addresses of the local machine .
returns a <code > byte [] < / code > containing the specified <code > <unk> / code > .
returns a synchronized ( thread - safe ) sorted map backed by the specified sorted map .
/ * ( non - javadoc )
deletes a table .
reads the pid from the given file .
creates a dom document from the specified url .
/ * ( non - javadoc )
read a document from the given reader .
/ * ( non - javadoc )
parses an xml document from an input stream .
read a document from a reader .
/ * ( non - javadoc )
returns an unmodifiable view of the specified map .
returns a filtered { @link java . util . concurrent . <unk> } ordered by the given filter .
/ * ( non - javadoc )
create a new image with the given parameters .
update file .
finish initializing the layer .
<blockquote > import .
returns a { @link <unk> } instance for the given { @link resource } .
creates a new mapbuilder with the given key and value . the returned map is a live view of { @code null } .
sets the description of the materials used for encryption .
add a job .
gets all implementations of the given class .
/ * ( non - javadoc )
execute the given { @link <unk> } .
prints the list of groups .
inits the usage .
main method .
/ * ( non - javadoc )
creates a mute event .
refresh the copy of the given { @link <unk> } .
sets the name of the schema to use .
write commands to a file .
gets the build version .
adds an option to the { @link <unk> } .
returns a list of {
returns the field with the given name .
returns the path to the package .
/ * ( non - javadoc )
passthrough request to get response body as string .
closes the stream .
returns a { @code map } whose keys are the result of applying the given { @code <unk> } to the corresponding { @code <unk> } .
{ @inheritdoc }
releases the client .
creates an { @link eventlistener } for the given descriptor .
sets the state of this transition .
zip together the iterators until one of them runs out of values .
perform a single iteration of the iterator .
get the <unk> for the given event model .
make a string representation of the group .
/ * ( non - javadoc )
<unk> method .
download image from url .
loads a json object from the specified file .
retrieve the json that contains the given url .
retrieve the property acl .
/ * ( non - javadoc )
reverses a map .
convert a collection to a collection .
----- private methods -----
/ * ( non - javadoc )
execute the given {
/ * ( non - javadoc )
disconnects from the pool .
returns a synchronized ( thread - safe ) view of the given map .
try to create an instance of { @link <unk> } .
gets the entry at the specified position .
liefert die postfach - nummer als name als optional optional optional optional optional optional optional optional optional optional optional .
liefert die postfach - nummer als <unk> zahl . da die nummer optional ist es sich nicht <unk> .
/ * ( non - javadoc )
fit the track .
verifies the playback of a prototype .
/ * tables
inits the .
decodes four bytes from array <var > source< / var > and writes the resulting bytes ( up to three of them ) to <var > destination< / var > . the source and destination arrays can be manipulated anywhere along their length by specifying <var > srcoffset< / var > and <var > destoffset< / var > . this method does not check
/ * ( non - javadoc )
get capabilities from a resource .
finds the conversion event for identification .
register an { @link <unk> } with the default converter .
gets the name of the extension .
<p > <unk> . < / p >
generates a sha - 256 hash of the given string .
converts a byte array to a hex string .
creates a new {
authenticate the given user with the given username and password .
creates a new {
sends a challenge response to the server .
returns the json representation of this object .
returns the value of the sql type .
generates a {
/ * ( non - javadoc )
stops lease queue .
set the value of a property .
commits a property .
add a principal .
remove the principal .
stops the {
{ @link <unk> ( identification ) }
/ * ( non - javadoc )
creates a new instance of the specified { @link map } .
<p > process . < / p >
change the user s password .
create a new instance of { @link shardedjedispool } .
/ * public void <unk> ( <unk> <unk> ) {
/ * ( non - javadoc )
/ * ( non - javadoc )
/ * ( non - javadoc )
link to a file .
deprecated . please use { @link <unk> ( string string string ) } instead .
/ * ( non - javadoc )
/ * ( non - javadoc )
sends a cemi packet to the packet .
invoked when an activator is permanent .
checks if the given string is a permanent class .
sets the name of the group .
returns the roster entry corresponding to the given xmpp address .
adds a roster entry to the packet .
returns the value associated with the given key .
returns <tt > true< / tt > if this map contains a mapping for the specified key .
returns <tt > true< / tt > if this map maps one or more keys to the specified value .
associates the specified value with the specified key in this map . if the map previously contained a mapping for this key the old value is replaced .
copies all of the mappings from the specified map into the specified map .
removes the entry for the given key .
removes all of the elements from this map . the list will be empty after this call returns .
hash a hash .
compare two objects .
returns true if both arguments are null .
returns the entry associated with the given key .
associates the specified entry with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
associates the specified entry with the specified key in this map . if the map previously contained a mapping for the key the old value is replaced .
adds a key / value pair to the hash table .
remove the entry from the hashmap .
removes the entry for the given entry .
/ * ------------------------------------------------------------
increases the capacity of this <tt > arraylist< / tt > instance with the given minimum capacity .
increases the capacity of this <tt > arraylist< / tt > instance with <tt > <unk> / tt > .
compute the new capacity for the given initial capacity .
returns the next entry for the given entry .
returns a { @link set } view of the entries in this map .
returns an { @link java . util . set } of { @link map } s .
returns a { @link set } view of the keys contained in this map .
serialize the object .
reconstitute the <tt > <unk> / tt > instance from a stream .
/ * ------------------------------------------------------------
/ * ( non - javadoc )
casts a map to a stream
registers the { @link <unk> } with the given { @link <unk> } .
override paint interface
attempt to reconnect .
notifies all listeners of a gerrit connection .
notifies the connection listener in the reconnect state of the connection .
